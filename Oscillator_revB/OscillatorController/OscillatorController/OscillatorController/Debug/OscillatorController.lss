
OscillatorController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000017e  00800200  000097de  00009872  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000097de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000005f3  0080037e  0080037e  000099f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000099f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00009a20  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000009a8  00000000  00000000  00009a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0002824c  00000000  00000000  0000a408  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003b8c  00000000  00000000  00032654  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000081cc  00000000  00000000  000361e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00002448  00000000  00000000  0003e3ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003c3d  00000000  00000000  000407f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000dcf3  00000000  00000000  00044431  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000960  00000000  00000000  00052124  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 13 0a 	jmp	0x1426	; 0x1426 <__dtors_end>
       4:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
       8:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
       c:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      10:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      14:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      18:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      1c:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      20:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      24:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      28:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      2c:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      30:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      34:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      38:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      3c:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      40:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      44:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      48:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      4c:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      50:	0c 94 ed 1a 	jmp	0x35da	; 0x35da <__vector_20>
      54:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      58:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      5c:	0c 94 17 44 	jmp	0x882e	; 0x882e <__vector_23>
      60:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      64:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      68:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      6c:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      70:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      74:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      78:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      7c:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      80:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      84:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      88:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      8c:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      90:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      94:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      98:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      9c:	0c 94 86 3f 	jmp	0x7f0c	; 0x7f0c <__vector_39>
      a0:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      a4:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      a8:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      ac:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      b0:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      b4:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      b8:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      bc:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      c0:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      c4:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      c8:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      cc:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      d0:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      d4:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      d8:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      dc:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      e0:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__bad_interrupt>
      e4:	ed 22       	and	r14, r29
      e6:	d6 23       	and	r29, r22
      e8:	08 23       	and	r16, r24
      ea:	08 23       	and	r16, r24
      ec:	21 23       	and	r18, r17
      ee:	d6 23       	and	r29, r22
      f0:	ce 22       	and	r12, r30
      f2:	ab 23       	and	r26, r27
      f4:	45 23       	and	r20, r21
      f6:	d6 23       	and	r29, r22
      f8:	53 23       	and	r21, r19
      fa:	53 23       	and	r21, r19
      fc:	70 23       	and	r23, r16
      fe:	70 23       	and	r23, r16
     100:	ed 22       	and	r14, r29
     102:	ab 23       	and	r26, r27
     104:	d6 23       	and	r29, r22
     106:	ed 22       	and	r14, r29
     108:	53 23       	and	r21, r19
     10a:	ab 23       	and	r26, r27
     10c:	08 23       	and	r16, r24
     10e:	7f 23       	and	r23, r31
     110:	ab 23       	and	r26, r27
     112:	ab 23       	and	r26, r27
     114:	ab 23       	and	r26, r27
     116:	ab 23       	and	r26, r27
     118:	ab 23       	and	r26, r27
     11a:	98 23       	and	r25, r24
     11c:	ab 23       	and	r26, r27
     11e:	ab 23       	and	r26, r27
     120:	46 24       	eor	r4, r6
     122:	b4 36       	cpi	r27, 0x64	; 100
     124:	13 25       	eor	r17, r3
     126:	13 25       	eor	r17, r3
     128:	a5 26       	eor	r10, r21
     12a:	b4 36       	cpi	r27, 0x64	; 100
     12c:	ab 29       	or	r26, r11
     12e:	df 27       	eor	r29, r31
     130:	58 29       	or	r21, r8
     132:	b4 36       	cpi	r27, 0x64	; 100
     134:	05 2b       	or	r16, r21
     136:	0e 2c       	mov	r0, r14
     138:	ba 2d       	mov	r27, r10
     13a:	ba 2d       	mov	r27, r10
     13c:	46 24       	eor	r4, r6
     13e:	57 32       	cpi	r21, 0x27	; 39
     140:	b4 36       	cpi	r27, 0x64	; 100
     142:	46 24       	eor	r4, r6
     144:	e1 2c       	mov	r14, r1
     146:	ba 2e       	mov	r11, r26
     148:	91 25       	eor	r25, r1
     14a:	83 2f       	mov	r24, r19
     14c:	51 30       	cpi	r21, 0x01	; 1
     14e:	57 32       	cpi	r21, 0x27	; 39
     150:	7e 31       	cpi	r23, 0x1E	; 30
     152:	10 33       	cpi	r17, 0x30	; 48
     154:	57 34       	cpi	r21, 0x47	; 71
     156:	b6 35       	cpi	r27, 0x56	; 86
     158:	ca 35       	cpi	r28, 0x5A	; 90
     15a:	53 28       	or	r5, r3
     15c:	05 a8       	ldd	r0, Z+53	; 0x35
     15e:	4c cd       	rjmp	.-1384   	; 0xfffffbf8 <__eeprom_end+0xff7efbf8>
     160:	b2 d4       	rcall	.+2404   	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     162:	4e b9       	out	0x0e, r20	; 14
     164:	38 36       	cpi	r19, 0x68	; 104
     166:	a9 02       	muls	r26, r25
     168:	0c 50       	subi	r16, 0x0C	; 12
     16a:	b9 91       	ld	r27, Y+
     16c:	86 88       	ldd	r8, Z+22	; 0x16
     16e:	08 3c       	cpi	r16, 0xC8	; 200
     170:	a6 aa       	std	Z+54, r10	; 0x36
     172:	aa 2a       	or	r10, r26
     174:	be 00       	.word	0x00be	; ????
     176:	00 00       	nop
     178:	80 3f       	cpi	r24, 0xF0	; 240
     17a:	3b 45       	sbci	r19, 0x5B	; 91
     17c:	3e 45       	sbci	r19, 0x5E	; 94
     17e:	2d 45       	sbci	r18, 0x5D	; 93
     180:	31 45       	sbci	r19, 0x51	; 81
     182:	37 45       	sbci	r19, 0x57	; 87
     184:	75 45       	sbci	r23, 0x55	; 85
     186:	42 45       	sbci	r20, 0x52	; 82
     188:	46 45       	sbci	r20, 0x56	; 86
     18a:	4c 45       	sbci	r20, 0x5C	; 92
     18c:	50 45       	sbci	r21, 0x50	; 80
     18e:	54 45       	sbci	r21, 0x54	; 84
     190:	5a 45       	sbci	r21, 0x5A	; 90
     192:	5e 45       	sbci	r21, 0x5E	; 94
     194:	62 45       	sbci	r22, 0x52	; 82
     196:	75 45       	sbci	r23, 0x55	; 85
     198:	68 45       	sbci	r22, 0x58	; 88
     19a:	6c 45       	sbci	r22, 0x5C	; 92
     19c:	70 45       	sbci	r23, 0x50	; 80

0000019e <__trampolines_end>:
     19e:	00 40       	sbci	r16, 0x00	; 0
     1a0:	7a 10       	cpse	r7, r10
     1a2:	f3 5a       	subi	r31, 0xA3	; 163
     1a4:	00 a0       	ldd	r0, Z+32	; 0x20
     1a6:	72 4e       	sbci	r23, 0xE2	; 226
     1a8:	18 09       	sbc	r17, r8
     1aa:	00 10       	cpse	r0, r0
     1ac:	a5 d4       	rcall	.+2378   	; 0xaf8 <__LOCK_REGION_LENGTH__+0x6f8>
     1ae:	e8 00       	.word	0x00e8	; ????
     1b0:	00 e8       	ldi	r16, 0x80	; 128
     1b2:	76 48       	sbci	r23, 0x86	; 134
     1b4:	17 00       	.word	0x0017	; ????
     1b6:	00 e4       	ldi	r16, 0x40	; 64
     1b8:	0b 54       	subi	r16, 0x4B	; 75
     1ba:	02 00       	.word	0x0002	; ????
     1bc:	00 ca       	rjmp	.-3072   	; 0xfffff5be <__eeprom_end+0xff7ef5be>
     1be:	9a 3b       	cpi	r25, 0xBA	; 186
     1c0:	00 00       	nop
     1c2:	00 e1       	ldi	r16, 0x10	; 16
     1c4:	f5 05       	cpc	r31, r5
     1c6:	00 00       	nop
     1c8:	80 96       	adiw	r24, 0x20	; 32
     1ca:	98 00       	.word	0x0098	; ????
     1cc:	00 00       	nop
     1ce:	40 42       	sbci	r20, 0x20	; 32
     1d0:	0f 00       	.word	0x000f	; ????
     1d2:	00 00       	nop
     1d4:	a0 86       	std	Z+8, r10	; 0x08
     1d6:	01 00       	.word	0x0001	; ????
     1d8:	00 00       	nop
     1da:	10 27       	eor	r17, r16
     1dc:	00 00       	nop
     1de:	00 00       	nop
     1e0:	e8 03       	fmulsu	r22, r16
     1e2:	00 00       	nop
     1e4:	00 00       	nop
     1e6:	64 00       	.word	0x0064	; ????
     1e8:	00 00       	nop
     1ea:	00 00       	nop
     1ec:	0a 00       	.word	0x000a	; ????
     1ee:	00 00       	nop
     1f0:	00 00       	nop
     1f2:	01 00       	.word	0x0001	; ????
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	2c 76       	andi	r18, 0x6C	; 108
     1fa:	d8 88       	ldd	r13, Y+16	; 0x10
     1fc:	dc 67       	ori	r29, 0x7C	; 124
     1fe:	4f 08       	sbc	r4, r15
     200:	23 df       	rcall	.-442    	; 0x48 <__SREG__+0x9>
     202:	c1 df       	rcall	.-126    	; 0x186 <__SREG__+0x147>
     204:	ae 59       	subi	r26, 0x9E	; 158
     206:	e1 b1       	in	r30, 0x01	; 1
     208:	b7 96       	adiw	r30, 0x27	; 39
     20a:	e5 e3       	ldi	r30, 0x35	; 53
     20c:	e4 53       	subi	r30, 0x34	; 52
     20e:	c6 3a       	cpi	r28, 0xA6	; 166
     210:	e6 51       	subi	r30, 0x16	; 22
     212:	99 76       	andi	r25, 0x69	; 105
     214:	96 e8       	ldi	r25, 0x86	; 134
     216:	e6 c2       	rjmp	.+1484   	; 0x7e4 <__LOCK_REGION_LENGTH__+0x3e4>
     218:	84 26       	eor	r8, r20
     21a:	eb 89       	ldd	r30, Y+19	; 0x13
     21c:	8c 9b       	sbis	0x11, 4	; 17
     21e:	62 ed       	ldi	r22, 0xD2	; 210
     220:	40 7c       	andi	r20, 0xC0	; 192
     222:	6f fc       	.word	0xfc6f	; ????
     224:	ef bc       	out	0x2f, r14	; 47
     226:	9c 9f       	mul	r25, r28
     228:	40 f2       	brcs	.-112    	; 0x1ba <__trampolines_end+0x1c>
     22a:	ba a5       	ldd	r27, Y+42	; 0x2a
     22c:	6f a5       	ldd	r22, Y+47	; 0x2f
     22e:	f4 90       	lpm	r15, Z
     230:	05 5a       	subi	r16, 0xA5	; 165
     232:	2a f7       	brpl	.-54     	; 0x1fe <__trampolines_end+0x60>
     234:	5c 93       	st	X, r21
     236:	6b 6c       	ori	r22, 0xCB	; 203
     238:	f9 67       	ori	r31, 0x79	; 121
     23a:	6d c1       	rjmp	.+730    	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
     23c:	1b fc       	.word	0xfc1b	; ????
     23e:	e0 e4       	ldi	r30, 0x40	; 64
     240:	0d 47       	sbci	r16, 0x7D	; 125
     242:	fe f5       	brtc	.+126    	; 0x2c2 <BigFont+0x2a>
     244:	20 e6       	ldi	r18, 0x60	; 96
     246:	b5 00       	.word	0x00b5	; ????
     248:	d0 ed       	ldi	r29, 0xD0	; 208
     24a:	90 2e       	mov	r9, r16
     24c:	03 00       	.word	0x0003	; ????
     24e:	94 35       	cpi	r25, 0x54	; 84
     250:	77 05       	cpc	r23, r7
     252:	00 80       	ld	r0, Z
     254:	84 1e       	adc	r8, r20
     256:	08 00       	.word	0x0008	; ????
     258:	00 20       	and	r0, r0
     25a:	4e 0a       	sbc	r4, r30
     25c:	00 00       	nop
     25e:	00 c8       	rjmp	.-4096   	; 0xfffff260 <__eeprom_end+0xff7ef260>
     260:	0c 33       	cpi	r16, 0x3C	; 60
     262:	33 33       	cpi	r19, 0x33	; 51
     264:	33 0f       	add	r19, r19
     266:	98 6e       	ori	r25, 0xE8	; 232
     268:	12 83       	std	Z+2, r17	; 0x02
     26a:	11 41       	sbci	r17, 0x11	; 17
     26c:	ef 8d       	ldd	r30, Y+31	; 0x1f
     26e:	21 14       	cp	r2, r1
     270:	89 3b       	cpi	r24, 0xB9	; 185
     272:	e6 55       	subi	r30, 0x56	; 86
     274:	16 cf       	rjmp	.-468    	; 0xa2 <__SREG__+0x63>
     276:	fe e6       	ldi	r31, 0x6E	; 110
     278:	db 18       	sub	r13, r11
     27a:	d1 84       	ldd	r13, Z+9	; 0x09
     27c:	4b 38       	cpi	r20, 0x8B	; 139
     27e:	1b f7       	brvc	.-58     	; 0x246 <__trampolines_end+0xa8>
     280:	7c 1d       	adc	r23, r12
     282:	90 1d       	adc	r25, r0
     284:	a4 bb       	out	0x14, r26	; 20
     286:	e4 24       	eor	r14, r4
     288:	20 32       	cpi	r18, 0x20	; 32
     28a:	84 72       	andi	r24, 0x24	; 36
     28c:	5e 22       	and	r5, r30
     28e:	81 00       	.word	0x0081	; ????
     290:	c9 f1       	breq	.+114    	; 0x304 <BigFont+0x6c>
     292:	24 ec       	ldi	r18, 0xC4	; 196
     294:	a1 e5       	ldi	r26, 0x51	; 81
     296:	3d 27       	eor	r19, r29

00000298 <BigFont>:
     298:	10 10 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
	...
     2c0:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
     2d0:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
     2e0:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
     2fc:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
     30c:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
     31c:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
     32c:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
     33c:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     34c:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     35c:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     36c:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     37c:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     3a0:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     3b0:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     3c0:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     3d0:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     3e0:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     3f0:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     400:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     410:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     430:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     448:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     470:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     480:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     490:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     4a0:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     4b0:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4c0:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     4d0:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     4e0:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     4f0:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     500:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     510:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     520:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     530:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     540:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     550:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     560:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     570:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     580:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     590:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     5a0:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     5b0:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     5c0:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     5d0:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     5e0:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     5f0:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     600:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     610:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     620:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     630:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     640:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     650:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     660:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     670:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     680:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     690:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     6a0:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     6b0:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     6c0:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     6d0:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6e0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     6f0:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     700:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     710:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     720:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     730:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     740:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     750:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     760:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     770:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     780:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     790:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     7a0:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     7b0:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     7c0:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     7d0:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     7e0:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     7f0:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     800:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     810:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     820:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     830:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     840:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     850:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     860:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     870:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     880:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     890:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     8a0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     8b0:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     8c0:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     8d0:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     8e0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     8f0:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     900:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     910:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     920:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     930:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     940:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     950:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     960:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     970:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     980:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     990:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     9a0:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     9b0:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     9c0:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     9d0:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     9e0:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     9f0:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     a00:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     a10:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     a20:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     a30:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     a40:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     a50:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     a60:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     a98:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     ac8:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     ae0:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     af0:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     b08:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     b20:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     b30:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     b48:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     b60:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     b70:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     b88:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     b98:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     ba8:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     bc0:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     bd0:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     be0:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     bf0:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     c00:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     c10:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     c20:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     c30:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     c48:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     c68:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     c88:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     ca8:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     cb8:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     cc8:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     cd8:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce8:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     d08:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     d20:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     d30:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     d48:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     d68:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     d88:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     da8:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     dc8:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     dd8:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     de8:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     e00:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     e10:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     e20:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     e30:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     e40:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     e50:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     e60:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000e7c <SmallFont>:
     e7c:	08 0c 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
     e8c:	00 00 20 20 20 20 20 20 00 20 00 00 00 28 50 50     ..      . ...(PP
	...
     ea4:	00 00 28 28 fc 28 50 fc 50 50 00 00 00 20 78 a8     ..((.(P.PP... x.
     eb4:	a0 60 30 28 a8 f0 20 00 00 00 48 a8 b0 50 28 34     .`0(.. ...H..P(4
     ec4:	54 48 00 00 00 00 20 50 50 78 a8 a8 90 6c 00 00     TH.... PPx...l..
     ed4:	00 40 40 80 00 00 00 00 00 00 00 00 00 04 08 10     .@@.............
     ee4:	10 10 10 10 10 08 04 00 00 40 20 10 10 10 10 10     .........@ .....
     ef4:	10 20 40 00 00 00 00 20 a8 70 70 a8 20 00 00 00     . @.... .pp. ...
     f04:	00 00 20 20 20 f8 20 20 20 00 00 00 00 00 00 00     ..   .   .......
     f14:	00 00 00 00 00 40 40 80 00 00 00 00 00 f8 00 00     .....@@.........
	...
     f30:	00 40 00 00 00 08 10 10 10 20 20 40 40 40 80 00     .@.......  @@@..
     f40:	00 00 70 88 88 88 88 88 88 70 00 00 00 00 20 60     ..p......p.... `
     f50:	20 20 20 20 20 70 00 00 00 00 70 88 88 10 20 40          p....p... @
     f60:	80 f8 00 00 00 00 70 88 08 30 08 08 88 70 00 00     ......p..0...p..
     f70:	00 00 10 30 50 50 90 78 10 18 00 00 00 00 f8 80     ...0PP.x........
     f80:	80 f0 08 08 88 70 00 00 00 00 70 90 80 f0 88 88     .....p....p.....
     f90:	88 70 00 00 00 00 f8 90 10 20 20 20 20 20 00 00     .p.......     ..
     fa0:	00 00 70 88 88 70 88 88 88 70 00 00 00 00 70 88     ..p..p...p....p.
     fb0:	88 88 78 08 48 70 00 00 00 00 00 00 20 00 00 00     ..x.Hp...... ...
     fc0:	00 20 00 00 00 00 00 00 00 20 00 00 00 20 20 00     . ....... ...  .
     fd0:	00 04 08 10 20 40 20 10 08 04 00 00 00 00 00 00     .... @ .........
     fe0:	f8 00 00 f8 00 00 00 00 00 40 20 10 08 04 08 10     .........@ .....
     ff0:	20 40 00 00 00 00 70 88 88 10 20 20 00 20 00 00      @....p...  . ..
    1000:	00 00 70 88 98 a8 a8 b8 80 78 00 00 00 00 20 20     ..p......x....  
    1010:	30 50 50 78 48 cc 00 00 00 00 f0 48 48 70 48 48     0PPxH......HHpHH
    1020:	48 f0 00 00 00 00 78 88 80 80 80 80 88 70 00 00     H.....x......p..
    1030:	00 00 f0 48 48 48 48 48 48 f0 00 00 00 00 f8 48     ...HHHHHH......H
    1040:	50 70 50 40 48 f8 00 00 00 00 f8 48 50 70 50 40     PpP@H......HPpP@
    1050:	40 e0 00 00 00 00 38 48 80 80 9c 88 48 30 00 00     @.....8H....H0..
    1060:	00 00 cc 48 48 78 48 48 48 cc 00 00 00 00 f8 20     ...HHxHHH...... 
    1070:	20 20 20 20 20 f8 00 00 00 00 7c 10 10 10 10 10          .....|.....
    1080:	10 90 e0 00 00 00 ec 48 50 60 50 50 48 ec 00 00     .......HP`PPH...
    1090:	00 00 e0 40 40 40 40 40 44 fc 00 00 00 00 d8 d8     ...@@@@@D.......
    10a0:	d8 d8 a8 a8 a8 a8 00 00 00 00 dc 48 68 68 58 58     ...........HhhXX
    10b0:	48 e8 00 00 00 00 70 88 88 88 88 88 88 70 00 00     H.....p......p..
    10c0:	00 00 f0 48 48 70 40 40 40 e0 00 00 00 00 70 88     ...HHp@@@.....p.
    10d0:	88 88 88 e8 98 70 18 00 00 00 f0 48 48 70 50 48     .....p.....HHpPH
    10e0:	48 ec 00 00 00 00 78 88 80 60 10 08 88 f0 00 00     H.....x..`......
    10f0:	00 00 f8 a8 20 20 20 20 20 70 00 00 00 00 cc 48     ....     p.....H
    1100:	48 48 48 48 48 30 00 00 00 00 cc 48 48 50 50 30     HHHHH0.....HHPP0
    1110:	20 20 00 00 00 00 a8 a8 a8 70 50 50 50 50 00 00       .......pPPPP..
    1120:	00 00 d8 50 50 20 20 50 50 d8 00 00 00 00 d8 50     ...PP  PP......P
    1130:	50 20 20 20 20 70 00 00 00 00 f8 90 10 20 20 40     P    p.......  @
    1140:	48 f8 00 00 00 38 20 20 20 20 20 20 20 20 38 00     H....8        8.
    1150:	00 40 40 40 20 20 10 10 10 08 00 00 00 70 10 10     .@@@  .......p..
    1160:	10 10 10 10 10 10 70 00 00 20 50 00 00 00 00 00     ......p.. P.....
	...
    117c:	00 00 00 fc 00 20 00 00 00 00 00 00 00 00 00 00     ..... ..........
    118c:	00 00 00 00 00 30 48 38 48 3c 00 00 00 00 c0 40     .....0H8H<.....@
    119c:	40 70 48 48 48 70 00 00 00 00 00 00 00 38 48 40     @pHHHp.......8H@
    11ac:	40 38 00 00 00 00 18 08 08 38 48 48 48 3c 00 00     @8.......8HHH<..
    11bc:	00 00 00 00 00 30 48 78 40 38 00 00 00 00 1c 20     .....0Hx@8..... 
    11cc:	20 78 20 20 20 78 00 00 00 00 00 00 00 3c 48 30      x   x.......<H0
    11dc:	40 78 44 38 00 00 c0 40 40 70 48 48 48 ec 00 00     @xD8...@@pHHH...
    11ec:	00 00 20 00 00 60 20 20 20 70 00 00 00 00 10 00     .. ..`   p......
    11fc:	00 30 10 10 10 10 10 e0 00 00 c0 40 40 5c 50 70     .0.........@@\Pp
    120c:	48 ec 00 00 00 00 e0 20 20 20 20 20 20 f8 00 00     H......      ...
    121c:	00 00 00 00 00 f0 a8 a8 a8 a8 00 00 00 00 00 00     ................
    122c:	00 f0 48 48 48 ec 00 00 00 00 00 00 00 30 48 48     ..HHH........0HH
    123c:	48 30 00 00 00 00 00 00 00 f0 48 48 48 70 40 e0     H0........HHHp@.
    124c:	00 00 00 00 00 38 48 48 48 38 08 1c 00 00 00 00     .....8HHH8......
    125c:	00 d8 60 40 40 e0 00 00 00 00 00 00 00 78 40 30     ..`@@........x@0
    126c:	08 78 00 00 00 00 00 20 20 70 20 20 20 18 00 00     .x.....  p   ...
    127c:	00 00 00 00 00 d8 48 48 48 3c 00 00 00 00 00 00     ......HHH<......
    128c:	00 ec 48 50 30 20 00 00 00 00 00 00 00 a8 a8 70     ..HP0 .........p
    129c:	50 50 00 00 00 00 00 00 00 d8 50 20 50 d8 00 00     PP........P P...
    12ac:	00 00 00 00 00 ec 48 50 30 20 20 c0 00 00 00 00     ......HP0  .....
    12bc:	00 78 10 20 20 78 00 00 00 18 10 10 10 20 10 10     .x.  x....... ..
    12cc:	10 10 18 00 10 10 10 10 10 10 10 10 10 10 10 10     ................
    12dc:	00 60 20 20 20 10 20 20 20 20 60 00 40 a4 18 00     .`   .    `.@...
	...

000012f4 <digital_pin_to_timer_PGM>:
    12f4:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    1320:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000133a <digital_pin_to_bit_mask_PGM>:
    133a:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    134a:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    135a:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    136a:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    137a:	04 08 10 20 40 80                                   ... @.

00001380 <digital_pin_to_port_PGM>:
    1380:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    1390:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    13a0:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    13b0:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    13c0:	0b 0b 0b 0b 0b 0b                                   ......

000013c6 <port_to_input_PGM>:
    13c6:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    13d6:	00 01 00 00 03 01 06 01 09 01                       ..........

000013e0 <port_to_output_PGM>:
    13e0:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    13f0:	02 01 00 00 05 01 08 01 0b 01                       ..........

000013fa <port_to_mode_PGM>:
    13fa:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    140a:	01 01 00 00 04 01 07 01 0a 01                       ..........

00001414 <__ctors_start>:
    1414:	f8 0c       	add	r15, r8
    1416:	7d 15       	cp	r23, r13
    1418:	7c 17       	cp	r23, r28
    141a:	f7 18       	sub	r15, r7
    141c:	9e 41       	sbci	r25, 0x1E	; 30

0000141e <__ctors_end>:
    141e:	be 0d       	add	r27, r14
    1420:	43 16       	cp	r4, r19
    1422:	42 18       	sub	r4, r2
    1424:	0c 1a       	sub	r0, r28

00001426 <__dtors_end>:
    1426:	11 24       	eor	r1, r1
    1428:	1f be       	out	0x3f, r1	; 63
    142a:	cf ef       	ldi	r28, 0xFF	; 255
    142c:	d1 e2       	ldi	r29, 0x21	; 33
    142e:	de bf       	out	0x3e, r29	; 62
    1430:	cd bf       	out	0x3d, r28	; 61
    1432:	00 e0       	ldi	r16, 0x00	; 0
    1434:	0c bf       	out	0x3c, r16	; 60

00001436 <__do_copy_data>:
    1436:	13 e0       	ldi	r17, 0x03	; 3
    1438:	a0 e0       	ldi	r26, 0x00	; 0
    143a:	b2 e0       	ldi	r27, 0x02	; 2
    143c:	ee ed       	ldi	r30, 0xDE	; 222
    143e:	f7 e9       	ldi	r31, 0x97	; 151
    1440:	00 e0       	ldi	r16, 0x00	; 0
    1442:	0b bf       	out	0x3b, r16	; 59
    1444:	02 c0       	rjmp	.+4      	; 0x144a <__do_copy_data+0x14>
    1446:	07 90       	elpm	r0, Z+
    1448:	0d 92       	st	X+, r0
    144a:	ae 37       	cpi	r26, 0x7E	; 126
    144c:	b1 07       	cpc	r27, r17
    144e:	d9 f7       	brne	.-10     	; 0x1446 <__do_copy_data+0x10>

00001450 <__do_clear_bss>:
    1450:	29 e0       	ldi	r18, 0x09	; 9
    1452:	ae e7       	ldi	r26, 0x7E	; 126
    1454:	b3 e0       	ldi	r27, 0x03	; 3
    1456:	01 c0       	rjmp	.+2      	; 0x145a <.do_clear_bss_start>

00001458 <.do_clear_bss_loop>:
    1458:	1d 92       	st	X+, r1

0000145a <.do_clear_bss_start>:
    145a:	a1 37       	cpi	r26, 0x71	; 113
    145c:	b2 07       	cpc	r27, r18
    145e:	e1 f7       	brne	.-8      	; 0x1458 <.do_clear_bss_loop>

00001460 <__do_global_ctors>:
    1460:	1a e0       	ldi	r17, 0x0A	; 10
    1462:	cf e0       	ldi	r28, 0x0F	; 15
    1464:	da e0       	ldi	r29, 0x0A	; 10
    1466:	00 e0       	ldi	r16, 0x00	; 0
    1468:	06 c0       	rjmp	.+12     	; 0x1476 <__do_global_ctors+0x16>
    146a:	21 97       	sbiw	r28, 0x01	; 1
    146c:	01 09       	sbc	r16, r1
    146e:	80 2f       	mov	r24, r16
    1470:	fe 01       	movw	r30, r28
    1472:	0e 94 30 47 	call	0x8e60	; 0x8e60 <__tablejump2__>
    1476:	ca 30       	cpi	r28, 0x0A	; 10
    1478:	d1 07       	cpc	r29, r17
    147a:	80 e0       	ldi	r24, 0x00	; 0
    147c:	08 07       	cpc	r16, r24
    147e:	a9 f7       	brne	.-22     	; 0x146a <__do_global_ctors+0xa>
    1480:	0e 94 09 44 	call	0x8812	; 0x8812 <main>
    1484:	0c 94 de 4b 	jmp	0x97bc	; 0x97bc <__do_global_dtors>

00001488 <__bad_interrupt>:
    1488:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000148c <_ZN7ControlC1Ev>:

void Control::storePreset() {

}

void Control::loadPreset() {
    148c:	cf 93       	push	r28
    148e:	df 93       	push	r29
    1490:	ec 01       	movw	r28, r24
    1492:	ed d3       	rcall	.+2010   	; 0x1c6e <_ZN14EncoderHandlerC1Ev>
    1494:	1b 8a       	std	Y+19, r1	; 0x13
    1496:	1c 8a       	std	Y+20, r1	; 0x14
    1498:	8c ed       	ldi	r24, 0xDC	; 220
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	9e 8b       	std	Y+22, r25	; 0x16
    149e:	8d 8b       	std	Y+21, r24	; 0x15
    14a0:	1f 8a       	std	Y+23, r1	; 0x17
    14a2:	80 e0       	ldi	r24, 0x00	; 0
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	a0 e8       	ldi	r26, 0x80	; 128
    14a8:	b0 e4       	ldi	r27, 0x40	; 64
    14aa:	88 8f       	std	Y+24, r24	; 0x18
    14ac:	99 8f       	std	Y+25, r25	; 0x19
    14ae:	aa 8f       	std	Y+26, r26	; 0x1a
    14b0:	bb 8f       	std	Y+27, r27	; 0x1b
    14b2:	1c 8e       	std	Y+28, r1	; 0x1c
    14b4:	80 ee       	ldi	r24, 0xE0	; 224
    14b6:	9e e2       	ldi	r25, 0x2E	; 46
    14b8:	9e 8f       	std	Y+30, r25	; 0x1e
    14ba:	8d 8f       	std	Y+29, r24	; 0x1d
    14bc:	88 e2       	ldi	r24, 0x28	; 40
    14be:	8f 8f       	std	Y+31, r24	; 0x1f
    14c0:	18 a2       	std	Y+32, r1	; 0x20
    14c2:	1a a2       	std	Y+34, r1	; 0x22
    14c4:	19 a2       	std	Y+33, r1	; 0x21
    14c6:	88 ec       	ldi	r24, 0xC8	; 200
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	9c a3       	std	Y+36, r25	; 0x24
    14cc:	8b a3       	std	Y+35, r24	; 0x23
    14ce:	84 eb       	ldi	r24, 0xB4	; 180
    14d0:	8d a3       	std	Y+37, r24	; 0x25
    14d2:	8a ef       	ldi	r24, 0xFA	; 250
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	9f a3       	std	Y+39, r25	; 0x27
    14d8:	8e a3       	std	Y+38, r24	; 0x26
    14da:	18 a6       	std	Y+40, r1	; 0x28
    14dc:	19 a6       	std	Y+41, r1	; 0x29
    14de:	1a a6       	std	Y+42, r1	; 0x2a
    14e0:	1b a6       	std	Y+43, r1	; 0x2b
    14e2:	8f e7       	ldi	r24, 0x7F	; 127
    14e4:	8c a7       	std	Y+44, r24	; 0x2c
    14e6:	1d a6       	std	Y+45, r1	; 0x2d
    14e8:	1e a6       	std	Y+46, r1	; 0x2e
    14ea:	1f a6       	std	Y+47, r1	; 0x2f
    14ec:	ce 01       	movw	r24, r28
    14ee:	c0 96       	adiw	r24, 0x30	; 48
    14f0:	be d3       	rcall	.+1916   	; 0x1c6e <_ZN14EncoderHandlerC1Ev>
    14f2:	ce 01       	movw	r24, r28
    14f4:	8d 5b       	subi	r24, 0xBD	; 189
    14f6:	9f 4f       	sbci	r25, 0xFF	; 255
    14f8:	ba d3       	rcall	.+1908   	; 0x1c6e <_ZN14EncoderHandlerC1Ev>
    14fa:	ce 01       	movw	r24, r28
    14fc:	8a 5a       	subi	r24, 0xAA	; 170
    14fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1500:	b6 d3       	rcall	.+1900   	; 0x1c6e <_ZN14EncoderHandlerC1Ev>
    1502:	ce 01       	movw	r24, r28
    1504:	87 59       	subi	r24, 0x97	; 151
    1506:	9f 4f       	sbci	r25, 0xFF	; 255
    1508:	b2 d3       	rcall	.+1892   	; 0x1c6e <_ZN14EncoderHandlerC1Ev>
    150a:	fe 01       	movw	r30, r28
    150c:	e8 57       	subi	r30, 0x78	; 120
    150e:	ff 4f       	sbci	r31, 0xFF	; 255
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	80 83       	st	Z, r24
    1514:	31 96       	adiw	r30, 0x01	; 1
    1516:	80 83       	st	Z, r24
    1518:	c4 58       	subi	r28, 0x84	; 132
    151a:	df 4f       	sbci	r29, 0xFF	; 255
    151c:	18 82       	st	Y, r1
    151e:	62 e0       	ldi	r22, 0x02	; 2
    1520:	8e e0       	ldi	r24, 0x0E	; 14
    1522:	df 91       	pop	r29
    1524:	cf 91       	pop	r28
    1526:	0c 94 76 45 	jmp	0x8aec	; 0x8aec <pinMode>

0000152a <_ZN7Control7incMenuEv>:
    152a:	fc 01       	movw	r30, r24
    152c:	e2 58       	subi	r30, 0x82	; 130
    152e:	ff 4f       	sbci	r31, 0xFF	; 255
    1530:	a0 81       	ld	r26, Z
    1532:	b1 81       	ldd	r27, Z+1	; 0x01
    1534:	9c 91       	ld	r25, X
    1536:	9f 5f       	subi	r25, 0xFF	; 255
    1538:	9c 93       	st	X, r25
    153a:	01 90       	ld	r0, Z+
    153c:	f0 81       	ld	r31, Z
    153e:	e0 2d       	mov	r30, r0
    1540:	80 81       	ld	r24, Z
    1542:	85 30       	cpi	r24, 0x05	; 5
    1544:	08 f0       	brcs	.+2      	; 0x1548 <_ZN7Control7incMenuEv+0x1e>
    1546:	10 82       	st	Z, r1
    1548:	08 95       	ret

0000154a <_ZN7Control11setEncodersEv>:
    154a:	0f 93       	push	r16
    154c:	1f 93       	push	r17
    154e:	cf 93       	push	r28
    1550:	df 93       	push	r29
    1552:	ec 01       	movw	r28, r24
    1554:	fc 01       	movw	r30, r24
    1556:	e2 58       	subi	r30, 0x82	; 130
    1558:	ff 4f       	sbci	r31, 0xFF	; 255
    155a:	01 90       	ld	r0, Z+
    155c:	f0 81       	ld	r31, Z
    155e:	e0 2d       	mov	r30, r0
    1560:	80 81       	ld	r24, Z
    1562:	82 30       	cpi	r24, 0x02	; 2
    1564:	09 f4       	brne	.+2      	; 0x1568 <_ZN7Control11setEncodersEv+0x1e>
    1566:	51 c0       	rjmp	.+162    	; 0x160a <_ZN7Control11setEncodersEv+0xc0>
    1568:	b8 f4       	brcc	.+46     	; 0x1598 <_ZN7Control11setEncodersEv+0x4e>
    156a:	88 23       	and	r24, r24
    156c:	71 f1       	breq	.+92     	; 0x15ca <_ZN7Control11setEncodersEv+0x80>
    156e:	81 30       	cpi	r24, 0x01	; 1
    1570:	09 f0       	breq	.+2      	; 0x1574 <_ZN7Control11setEncodersEv+0x2a>
    1572:	90 c0       	rjmp	.+288    	; 0x1694 <_ZN7Control11setEncodersEv+0x14a>
    1574:	45 e0       	ldi	r20, 0x05	; 5
    1576:	61 e0       	ldi	r22, 0x01	; 1
    1578:	ce 01       	movw	r24, r28
    157a:	c0 96       	adiw	r24, 0x30	; 48
    157c:	aa d3       	rcall	.+1876   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    157e:	00 e0       	ldi	r16, 0x00	; 0
    1580:	10 e0       	ldi	r17, 0x00	; 0
    1582:	20 ea       	ldi	r18, 0xA0	; 160
    1584:	31 e4       	ldi	r19, 0x41	; 65
    1586:	40 e0       	ldi	r20, 0x00	; 0
    1588:	50 e0       	ldi	r21, 0x00	; 0
    158a:	60 e8       	ldi	r22, 0x80	; 128
    158c:	7f e3       	ldi	r23, 0x3F	; 63
    158e:	ce 01       	movw	r24, r28
    1590:	8d 5b       	subi	r24, 0xBD	; 189
    1592:	9f 4f       	sbci	r25, 0xFF	; 255
    1594:	90 d3       	rcall	.+1824   	; 0x1cb6 <_ZN14EncoderHandler7setMulFEff>
    1596:	6e c0       	rjmp	.+220    	; 0x1674 <_ZN7Control11setEncodersEv+0x12a>
    1598:	83 30       	cpi	r24, 0x03	; 3
    159a:	09 f4       	brne	.+2      	; 0x159e <_ZN7Control11setEncodersEv+0x54>
    159c:	60 c0       	rjmp	.+192    	; 0x165e <_ZN7Control11setEncodersEv+0x114>
    159e:	84 30       	cpi	r24, 0x04	; 4
    15a0:	09 f0       	breq	.+2      	; 0x15a4 <_ZN7Control11setEncodersEv+0x5a>
    15a2:	78 c0       	rjmp	.+240    	; 0x1694 <_ZN7Control11setEncodersEv+0x14a>
    15a4:	45 e0       	ldi	r20, 0x05	; 5
    15a6:	61 e0       	ldi	r22, 0x01	; 1
    15a8:	ce 01       	movw	r24, r28
    15aa:	c0 96       	adiw	r24, 0x30	; 48
    15ac:	92 d3       	rcall	.+1828   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    15ae:	45 e0       	ldi	r20, 0x05	; 5
    15b0:	61 e0       	ldi	r22, 0x01	; 1
    15b2:	ce 01       	movw	r24, r28
    15b4:	8d 5b       	subi	r24, 0xBD	; 189
    15b6:	9f 4f       	sbci	r25, 0xFF	; 255
    15b8:	8c d3       	rcall	.+1816   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    15ba:	45 e0       	ldi	r20, 0x05	; 5
    15bc:	61 e0       	ldi	r22, 0x01	; 1
    15be:	ce 01       	movw	r24, r28
    15c0:	8a 5a       	subi	r24, 0xAA	; 170
    15c2:	9f 4f       	sbci	r25, 0xFF	; 255
    15c4:	86 d3       	rcall	.+1804   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    15c6:	41 e0       	ldi	r20, 0x01	; 1
    15c8:	5c c0       	rjmp	.+184    	; 0x1682 <_ZN7Control11setEncodersEv+0x138>
    15ca:	41 e0       	ldi	r20, 0x01	; 1
    15cc:	61 e0       	ldi	r22, 0x01	; 1
    15ce:	ce 01       	movw	r24, r28
    15d0:	c0 96       	adiw	r24, 0x30	; 48
    15d2:	7f d3       	rcall	.+1790   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    15d4:	00 e0       	ldi	r16, 0x00	; 0
    15d6:	10 e0       	ldi	r17, 0x00	; 0
    15d8:	20 ea       	ldi	r18, 0xA0	; 160
    15da:	31 e4       	ldi	r19, 0x41	; 65
    15dc:	40 e0       	ldi	r20, 0x00	; 0
    15de:	50 e0       	ldi	r21, 0x00	; 0
    15e0:	60 e8       	ldi	r22, 0x80	; 128
    15e2:	7f e3       	ldi	r23, 0x3F	; 63
    15e4:	ce 01       	movw	r24, r28
    15e6:	8d 5b       	subi	r24, 0xBD	; 189
    15e8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ea:	65 d3       	rcall	.+1738   	; 0x1cb6 <_ZN14EncoderHandler7setMulFEff>
    15ec:	41 e0       	ldi	r20, 0x01	; 1
    15ee:	61 e0       	ldi	r22, 0x01	; 1
    15f0:	ce 01       	movw	r24, r28
    15f2:	8a 5a       	subi	r24, 0xAA	; 170
    15f4:	9f 4f       	sbci	r25, 0xFF	; 255
    15f6:	6d d3       	rcall	.+1754   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    15f8:	00 e0       	ldi	r16, 0x00	; 0
    15fa:	10 e0       	ldi	r17, 0x00	; 0
    15fc:	20 e0       	ldi	r18, 0x00	; 0
    15fe:	30 e4       	ldi	r19, 0x40	; 64
    1600:	4d ec       	ldi	r20, 0xCD	; 205
    1602:	5c ec       	ldi	r21, 0xCC	; 204
    1604:	6c ec       	ldi	r22, 0xCC	; 204
    1606:	7d e3       	ldi	r23, 0x3D	; 61
    1608:	25 c0       	rjmp	.+74     	; 0x1654 <_ZN7Control11setEncodersEv+0x10a>
    160a:	00 e0       	ldi	r16, 0x00	; 0
    160c:	10 e0       	ldi	r17, 0x00	; 0
    160e:	20 ea       	ldi	r18, 0xA0	; 160
    1610:	31 e4       	ldi	r19, 0x41	; 65
    1612:	40 e0       	ldi	r20, 0x00	; 0
    1614:	50 e0       	ldi	r21, 0x00	; 0
    1616:	60 e8       	ldi	r22, 0x80	; 128
    1618:	7f e3       	ldi	r23, 0x3F	; 63
    161a:	ce 01       	movw	r24, r28
    161c:	c0 96       	adiw	r24, 0x30	; 48
    161e:	4b d3       	rcall	.+1686   	; 0x1cb6 <_ZN14EncoderHandler7setMulFEff>
    1620:	00 e0       	ldi	r16, 0x00	; 0
    1622:	10 e0       	ldi	r17, 0x00	; 0
    1624:	20 ea       	ldi	r18, 0xA0	; 160
    1626:	31 e4       	ldi	r19, 0x41	; 65
    1628:	40 e0       	ldi	r20, 0x00	; 0
    162a:	50 e0       	ldi	r21, 0x00	; 0
    162c:	60 e8       	ldi	r22, 0x80	; 128
    162e:	7f e3       	ldi	r23, 0x3F	; 63
    1630:	ce 01       	movw	r24, r28
    1632:	8d 5b       	subi	r24, 0xBD	; 189
    1634:	9f 4f       	sbci	r25, 0xFF	; 255
    1636:	3f d3       	rcall	.+1662   	; 0x1cb6 <_ZN14EncoderHandler7setMulFEff>
    1638:	45 e0       	ldi	r20, 0x05	; 5
    163a:	61 e0       	ldi	r22, 0x01	; 1
    163c:	ce 01       	movw	r24, r28
    163e:	8a 5a       	subi	r24, 0xAA	; 170
    1640:	9f 4f       	sbci	r25, 0xFF	; 255
    1642:	47 d3       	rcall	.+1678   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    1644:	00 e0       	ldi	r16, 0x00	; 0
    1646:	10 e0       	ldi	r17, 0x00	; 0
    1648:	20 ea       	ldi	r18, 0xA0	; 160
    164a:	31 e4       	ldi	r19, 0x41	; 65
    164c:	40 e0       	ldi	r20, 0x00	; 0
    164e:	50 e0       	ldi	r21, 0x00	; 0
    1650:	60 e8       	ldi	r22, 0x80	; 128
    1652:	7f e3       	ldi	r23, 0x3F	; 63
    1654:	ce 01       	movw	r24, r28
    1656:	87 59       	subi	r24, 0x97	; 151
    1658:	9f 4f       	sbci	r25, 0xFF	; 255
    165a:	2d d3       	rcall	.+1626   	; 0x1cb6 <_ZN14EncoderHandler7setMulFEff>
    165c:	1b c0       	rjmp	.+54     	; 0x1694 <_ZN7Control11setEncodersEv+0x14a>
    165e:	45 e0       	ldi	r20, 0x05	; 5
    1660:	61 e0       	ldi	r22, 0x01	; 1
    1662:	ce 01       	movw	r24, r28
    1664:	c0 96       	adiw	r24, 0x30	; 48
    1666:	35 d3       	rcall	.+1642   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    1668:	45 e0       	ldi	r20, 0x05	; 5
    166a:	61 e0       	ldi	r22, 0x01	; 1
    166c:	ce 01       	movw	r24, r28
    166e:	8d 5b       	subi	r24, 0xBD	; 189
    1670:	9f 4f       	sbci	r25, 0xFF	; 255
    1672:	2f d3       	rcall	.+1630   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    1674:	45 e0       	ldi	r20, 0x05	; 5
    1676:	61 e0       	ldi	r22, 0x01	; 1
    1678:	ce 01       	movw	r24, r28
    167a:	8a 5a       	subi	r24, 0xAA	; 170
    167c:	9f 4f       	sbci	r25, 0xFF	; 255
    167e:	29 d3       	rcall	.+1618   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    1680:	45 e0       	ldi	r20, 0x05	; 5
    1682:	61 e0       	ldi	r22, 0x01	; 1
    1684:	ce 01       	movw	r24, r28
    1686:	87 59       	subi	r24, 0x97	; 151
    1688:	9f 4f       	sbci	r25, 0xFF	; 255
    168a:	df 91       	pop	r29
    168c:	cf 91       	pop	r28
    168e:	1f 91       	pop	r17
    1690:	0f 91       	pop	r16
    1692:	1f c3       	rjmp	.+1598   	; 0x1cd2 <_ZN14EncoderHandler7setMulNEhh>
    1694:	df 91       	pop	r29
    1696:	cf 91       	pop	r28
    1698:	1f 91       	pop	r17
    169a:	0f 91       	pop	r16
    169c:	08 95       	ret

0000169e <_ZN7Control4initEPN10Parameters8params_tE>:
    169e:	0f 93       	push	r16
    16a0:	1f 93       	push	r17
    16a2:	cf 93       	push	r28
    16a4:	df 93       	push	r29
    16a6:	ec 01       	movw	r28, r24
    16a8:	fc 01       	movw	r30, r24
    16aa:	e2 58       	subi	r30, 0x82	; 130
    16ac:	ff 4f       	sbci	r31, 0xFF	; 255
    16ae:	71 83       	std	Z+1, r23	; 0x01
    16b0:	60 83       	st	Z, r22
    16b2:	83 e0       	ldi	r24, 0x03	; 3
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	0e 94 16 44 	call	0x882c	; 0x882c <_Znwj>
    16ba:	8c 01       	movw	r16, r24
    16bc:	43 e0       	ldi	r20, 0x03	; 3
    16be:	62 e0       	ldi	r22, 0x02	; 2
    16c0:	0e 94 b3 1a 	call	0x3566	; 0x3566 <_ZN6RotaryC1Ecc>
    16c4:	fe 01       	movw	r30, r28
    16c6:	e0 58       	subi	r30, 0x80	; 128
    16c8:	ff 4f       	sbci	r31, 0xFF	; 255
    16ca:	11 83       	std	Z+1, r17	; 0x01
    16cc:	00 83       	st	Z, r16
    16ce:	42 e1       	ldi	r20, 0x12	; 18
    16d0:	b8 01       	movw	r22, r16
    16d2:	ce 01       	movw	r24, r28
    16d4:	c0 96       	adiw	r24, 0x30	; 48
    16d6:	e7 d2       	rcall	.+1486   	; 0x1ca6 <_ZN14EncoderHandler4initEP6Rotaryh>
    16d8:	83 e0       	ldi	r24, 0x03	; 3
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	0e 94 16 44 	call	0x882c	; 0x882c <_Znwj>
    16e0:	8c 01       	movw	r16, r24
    16e2:	45 e0       	ldi	r20, 0x05	; 5
    16e4:	64 e0       	ldi	r22, 0x04	; 4
    16e6:	0e 94 b3 1a 	call	0x3566	; 0x3566 <_ZN6RotaryC1Ecc>
    16ea:	fe 01       	movw	r30, r28
    16ec:	ee 57       	subi	r30, 0x7E	; 126
    16ee:	ff 4f       	sbci	r31, 0xFF	; 255
    16f0:	11 83       	std	Z+1, r17	; 0x01
    16f2:	00 83       	st	Z, r16
    16f4:	41 e1       	ldi	r20, 0x11	; 17
    16f6:	b8 01       	movw	r22, r16
    16f8:	ce 01       	movw	r24, r28
    16fa:	8d 5b       	subi	r24, 0xBD	; 189
    16fc:	9f 4f       	sbci	r25, 0xFF	; 255
    16fe:	d3 d2       	rcall	.+1446   	; 0x1ca6 <_ZN14EncoderHandler4initEP6Rotaryh>
    1700:	83 e0       	ldi	r24, 0x03	; 3
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	0e 94 16 44 	call	0x882c	; 0x882c <_Znwj>
    1708:	8c 01       	movw	r16, r24
    170a:	47 e0       	ldi	r20, 0x07	; 7
    170c:	66 e0       	ldi	r22, 0x06	; 6
    170e:	0e 94 b3 1a 	call	0x3566	; 0x3566 <_ZN6RotaryC1Ecc>
    1712:	fe 01       	movw	r30, r28
    1714:	ec 57       	subi	r30, 0x7C	; 124
    1716:	ff 4f       	sbci	r31, 0xFF	; 255
    1718:	11 83       	std	Z+1, r17	; 0x01
    171a:	00 83       	st	Z, r16
    171c:	40 e1       	ldi	r20, 0x10	; 16
    171e:	b8 01       	movw	r22, r16
    1720:	ce 01       	movw	r24, r28
    1722:	8a 5a       	subi	r24, 0xAA	; 170
    1724:	9f 4f       	sbci	r25, 0xFF	; 255
    1726:	bf d2       	rcall	.+1406   	; 0x1ca6 <_ZN14EncoderHandler4initEP6Rotaryh>
    1728:	83 e0       	ldi	r24, 0x03	; 3
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	0e 94 16 44 	call	0x882c	; 0x882c <_Znwj>
    1730:	8c 01       	movw	r16, r24
    1732:	49 e0       	ldi	r20, 0x09	; 9
    1734:	68 e0       	ldi	r22, 0x08	; 8
    1736:	0e 94 b3 1a 	call	0x3566	; 0x3566 <_ZN6RotaryC1Ecc>
    173a:	fe 01       	movw	r30, r28
    173c:	ea 57       	subi	r30, 0x7A	; 122
    173e:	ff 4f       	sbci	r31, 0xFF	; 255
    1740:	11 83       	std	Z+1, r17	; 0x01
    1742:	00 83       	st	Z, r16
    1744:	4f e0       	ldi	r20, 0x0F	; 15
    1746:	b8 01       	movw	r22, r16
    1748:	ce 01       	movw	r24, r28
    174a:	87 59       	subi	r24, 0x97	; 151
    174c:	9f 4f       	sbci	r25, 0xFF	; 255
    174e:	ab d2       	rcall	.+1366   	; 0x1ca6 <_ZN14EncoderHandler4initEP6Rotaryh>
    1750:	ce 01       	movw	r24, r28
    1752:	df 91       	pop	r29
    1754:	cf 91       	pop	r28
    1756:	1f 91       	pop	r17
    1758:	0f 91       	pop	r16
    175a:	f7 ce       	rjmp	.-530    	; 0x154a <_ZN7Control11setEncodersEv>

0000175c <_ZN7Control10readButtonEv>:
    175c:	ef 92       	push	r14
    175e:	ff 92       	push	r15
    1760:	0f 93       	push	r16
    1762:	1f 93       	push	r17
    1764:	cf 93       	push	r28
    1766:	df 93       	push	r29
    1768:	ec 01       	movw	r28, r24
    176a:	8e e0       	ldi	r24, 0x0E	; 14
    176c:	0e 94 e0 45 	call	0x8bc0	; 0x8bc0 <digitalRead>
    1770:	8e 01       	movw	r16, r28
    1772:	08 57       	subi	r16, 0x78	; 120
    1774:	1f 4f       	sbci	r17, 0xFF	; 255
    1776:	21 e0       	ldi	r18, 0x01	; 1
    1778:	89 2b       	or	r24, r25
    177a:	09 f4       	brne	.+2      	; 0x177e <_ZN7Control10readButtonEv+0x22>
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	f8 01       	movw	r30, r16
    1780:	20 83       	st	Z, r18
    1782:	6a e0       	ldi	r22, 0x0A	; 10
    1784:	70 e0       	ldi	r23, 0x00	; 0
    1786:	80 e0       	ldi	r24, 0x00	; 0
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    178e:	f8 01       	movw	r30, r16
    1790:	80 81       	ld	r24, Z
    1792:	9e 01       	movw	r18, r28
    1794:	27 57       	subi	r18, 0x77	; 119
    1796:	3f 4f       	sbci	r19, 0xFF	; 255
    1798:	79 01       	movw	r14, r18
    179a:	81 11       	cpse	r24, r1
    179c:	0d c0       	rjmp	.+26     	; 0x17b8 <_ZN7Control10readButtonEv+0x5c>
    179e:	f9 01       	movw	r30, r18
    17a0:	80 81       	ld	r24, Z
    17a2:	88 23       	and	r24, r24
    17a4:	49 f0       	breq	.+18     	; 0x17b8 <_ZN7Control10readButtonEv+0x5c>
    17a6:	ce 01       	movw	r24, r28
    17a8:	c0 de       	rcall	.-640    	; 0x152a <_ZN7Control7incMenuEv>
    17aa:	fe 01       	movw	r30, r28
    17ac:	e4 58       	subi	r30, 0x84	; 132
    17ae:	ff 4f       	sbci	r31, 0xFF	; 255
    17b0:	81 e0       	ldi	r24, 0x01	; 1
    17b2:	80 83       	st	Z, r24
    17b4:	ce 01       	movw	r24, r28
    17b6:	c9 de       	rcall	.-622    	; 0x154a <_ZN7Control11setEncodersEv>
    17b8:	f8 01       	movw	r30, r16
    17ba:	80 81       	ld	r24, Z
    17bc:	f7 01       	movw	r30, r14
    17be:	80 83       	st	Z, r24
    17c0:	df 91       	pop	r29
    17c2:	cf 91       	pop	r28
    17c4:	1f 91       	pop	r17
    17c6:	0f 91       	pop	r16
    17c8:	ff 90       	pop	r15
    17ca:	ef 90       	pop	r14
    17cc:	08 95       	ret

000017ce <_ZN7Control4readEv>:
    17ce:	c6 cf       	rjmp	.-116    	; 0x175c <_ZN7Control10readButtonEv>

000017d0 <_ZN7Control16updateParametersEv>:
    17d0:	ef 92       	push	r14
    17d2:	ff 92       	push	r15
    17d4:	0f 93       	push	r16
    17d6:	1f 93       	push	r17
    17d8:	cf 93       	push	r28
    17da:	df 93       	push	r29
    17dc:	ec 01       	movw	r28, r24
    17de:	8c 01       	movw	r16, r24
    17e0:	02 58       	subi	r16, 0x82	; 130
    17e2:	1f 4f       	sbci	r17, 0xFF	; 255
    17e4:	d8 01       	movw	r26, r16
    17e6:	ed 91       	ld	r30, X+
    17e8:	fc 91       	ld	r31, X
    17ea:	80 81       	ld	r24, Z
    17ec:	82 30       	cpi	r24, 0x02	; 2
    17ee:	09 f4       	brne	.+2      	; 0x17f2 <_ZN7Control16updateParametersEv+0x22>
    17f0:	94 c0       	rjmp	.+296    	; 0x191a <_ZN7Control16updateParametersEv+0x14a>
    17f2:	60 f5       	brcc	.+88     	; 0x184c <_ZN7Control16updateParametersEv+0x7c>
    17f4:	88 23       	and	r24, r24
    17f6:	09 f4       	brne	.+2      	; 0x17fa <_ZN7Control16updateParametersEv+0x2a>
    17f8:	5e c0       	rjmp	.+188    	; 0x18b6 <_ZN7Control16updateParametersEv+0xe6>
    17fa:	81 30       	cpi	r24, 0x01	; 1
    17fc:	09 f0       	breq	.+2      	; 0x1800 <_ZN7Control16updateParametersEv+0x30>
    17fe:	f1 c0       	rjmp	.+482    	; 0x19e2 <_ZN7Control16updateParametersEv+0x212>
    1800:	bf 01       	movw	r22, r30
    1802:	67 5f       	subi	r22, 0xF7	; 247
    1804:	7f 4f       	sbci	r23, 0xFF	; 255
    1806:	2f ef       	ldi	r18, 0xFF	; 255
    1808:	40 e0       	ldi	r20, 0x00	; 0
    180a:	ce 01       	movw	r24, r28
    180c:	c0 96       	adiw	r24, 0x30	; 48
    180e:	00 d4       	rcall	.+2048   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    1810:	d8 01       	movw	r26, r16
    1812:	6d 91       	ld	r22, X+
    1814:	7c 91       	ld	r23, X
    1816:	66 5f       	subi	r22, 0xF6	; 246
    1818:	7f 4f       	sbci	r23, 0xFF	; 255
    181a:	20 ee       	ldi	r18, 0xE0	; 224
    181c:	3e e2       	ldi	r19, 0x2E	; 46
    181e:	4e e1       	ldi	r20, 0x1E	; 30
    1820:	50 e0       	ldi	r21, 0x00	; 0
    1822:	ce 01       	movw	r24, r28
    1824:	8d 5b       	subi	r24, 0xBD	; 189
    1826:	9f 4f       	sbci	r25, 0xFF	; 255
    1828:	f3 d2       	rcall	.+1510   	; 0x1e10 <_ZN14EncoderHandler9setValueNEPiii>
    182a:	f8 01       	movw	r30, r16
    182c:	60 81       	ld	r22, Z
    182e:	71 81       	ldd	r23, Z+1	; 0x01
    1830:	64 5f       	subi	r22, 0xF4	; 244
    1832:	7f 4f       	sbci	r23, 0xFF	; 255
    1834:	2f ef       	ldi	r18, 0xFF	; 255
    1836:	40 e0       	ldi	r20, 0x00	; 0
    1838:	ce 01       	movw	r24, r28
    183a:	8a 5a       	subi	r24, 0xAA	; 170
    183c:	9f 4f       	sbci	r25, 0xFF	; 255
    183e:	e8 d3       	rcall	.+2000   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    1840:	d8 01       	movw	r26, r16
    1842:	6d 91       	ld	r22, X+
    1844:	7c 91       	ld	r23, X
    1846:	63 5f       	subi	r22, 0xF3	; 243
    1848:	7f 4f       	sbci	r23, 0xFF	; 255
    184a:	bf c0       	rjmp	.+382    	; 0x19ca <_ZN7Control16updateParametersEv+0x1fa>
    184c:	83 30       	cpi	r24, 0x03	; 3
    184e:	09 f4       	brne	.+2      	; 0x1852 <_ZN7Control16updateParametersEv+0x82>
    1850:	99 c0       	rjmp	.+306    	; 0x1984 <_ZN7Control16updateParametersEv+0x1b4>
    1852:	84 30       	cpi	r24, 0x04	; 4
    1854:	09 f0       	breq	.+2      	; 0x1858 <_ZN7Control16updateParametersEv+0x88>
    1856:	c5 c0       	rjmp	.+394    	; 0x19e2 <_ZN7Control16updateParametersEv+0x212>
    1858:	bf 01       	movw	r22, r30
    185a:	67 5e       	subi	r22, 0xE7	; 231
    185c:	7f 4f       	sbci	r23, 0xFF	; 255
    185e:	2f e7       	ldi	r18, 0x7F	; 127
    1860:	41 e8       	ldi	r20, 0x81	; 129
    1862:	ce 01       	movw	r24, r28
    1864:	c0 96       	adiw	r24, 0x30	; 48
    1866:	54 d3       	rcall	.+1704   	; 0x1f10 <_ZN14EncoderHandler9setValueNEPaaa>
    1868:	f8 01       	movw	r30, r16
    186a:	60 81       	ld	r22, Z
    186c:	71 81       	ldd	r23, Z+1	; 0x01
    186e:	66 5e       	subi	r22, 0xE6	; 230
    1870:	7f 4f       	sbci	r23, 0xFF	; 255
    1872:	2f ef       	ldi	r18, 0xFF	; 255
    1874:	40 e0       	ldi	r20, 0x00	; 0
    1876:	ce 01       	movw	r24, r28
    1878:	8d 5b       	subi	r24, 0xBD	; 189
    187a:	9f 4f       	sbci	r25, 0xFF	; 255
    187c:	c9 d3       	rcall	.+1938   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    187e:	d8 01       	movw	r26, r16
    1880:	6d 91       	ld	r22, X+
    1882:	7c 91       	ld	r23, X
    1884:	65 5e       	subi	r22, 0xE5	; 229
    1886:	7f 4f       	sbci	r23, 0xFF	; 255
    1888:	2f e7       	ldi	r18, 0x7F	; 127
    188a:	41 e8       	ldi	r20, 0x81	; 129
    188c:	ce 01       	movw	r24, r28
    188e:	8a 5a       	subi	r24, 0xAA	; 170
    1890:	9f 4f       	sbci	r25, 0xFF	; 255
    1892:	3e d3       	rcall	.+1660   	; 0x1f10 <_ZN14EncoderHandler9setValueNEPaaa>
    1894:	f8 01       	movw	r30, r16
    1896:	60 81       	ld	r22, Z
    1898:	71 81       	ldd	r23, Z+1	; 0x01
    189a:	64 5e       	subi	r22, 0xE4	; 228
    189c:	7f 4f       	sbci	r23, 0xFF	; 255
    189e:	2f e0       	ldi	r18, 0x0F	; 15
    18a0:	40 e0       	ldi	r20, 0x00	; 0
    18a2:	ce 01       	movw	r24, r28
    18a4:	87 59       	subi	r24, 0x97	; 151
    18a6:	9f 4f       	sbci	r25, 0xFF	; 255
    18a8:	df 91       	pop	r29
    18aa:	cf 91       	pop	r28
    18ac:	1f 91       	pop	r17
    18ae:	0f 91       	pop	r16
    18b0:	ff 90       	pop	r15
    18b2:	ef 90       	pop	r14
    18b4:	ad c3       	rjmp	.+1882   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    18b6:	bf 01       	movw	r22, r30
    18b8:	6f 5f       	subi	r22, 0xFF	; 255
    18ba:	7f 4f       	sbci	r23, 0xFF	; 255
    18bc:	23 e0       	ldi	r18, 0x03	; 3
    18be:	40 e0       	ldi	r20, 0x00	; 0
    18c0:	ce 01       	movw	r24, r28
    18c2:	c0 96       	adiw	r24, 0x30	; 48
    18c4:	a5 d3       	rcall	.+1866   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    18c6:	f8 01       	movw	r30, r16
    18c8:	60 81       	ld	r22, Z
    18ca:	71 81       	ldd	r23, Z+1	; 0x01
    18cc:	6e 5f       	subi	r22, 0xFE	; 254
    18ce:	7f 4f       	sbci	r23, 0xFF	; 255
    18d0:	20 e4       	ldi	r18, 0x40	; 64
    18d2:	3f e1       	ldi	r19, 0x1F	; 31
    18d4:	4e e1       	ldi	r20, 0x1E	; 30
    18d6:	50 e0       	ldi	r21, 0x00	; 0
    18d8:	ce 01       	movw	r24, r28
    18da:	8d 5b       	subi	r24, 0xBD	; 189
    18dc:	9f 4f       	sbci	r25, 0xFF	; 255
    18de:	98 d2       	rcall	.+1328   	; 0x1e10 <_ZN14EncoderHandler9setValueNEPiii>
    18e0:	d8 01       	movw	r26, r16
    18e2:	6d 91       	ld	r22, X+
    18e4:	7c 91       	ld	r23, X
    18e6:	6c 5f       	subi	r22, 0xFC	; 252
    18e8:	7f 4f       	sbci	r23, 0xFF	; 255
    18ea:	23 e0       	ldi	r18, 0x03	; 3
    18ec:	40 e0       	ldi	r20, 0x00	; 0
    18ee:	ce 01       	movw	r24, r28
    18f0:	8a 5a       	subi	r24, 0xAA	; 170
    18f2:	9f 4f       	sbci	r25, 0xFF	; 255
    18f4:	8d d3       	rcall	.+1818   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    18f6:	f8 01       	movw	r30, r16
    18f8:	60 81       	ld	r22, Z
    18fa:	71 81       	ldd	r23, Z+1	; 0x01
    18fc:	6b 5f       	subi	r22, 0xFB	; 251
    18fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1900:	e1 2c       	mov	r14, r1
    1902:	f1 2c       	mov	r15, r1
    1904:	00 e4       	ldi	r16, 0x40	; 64
    1906:	12 e4       	ldi	r17, 0x42	; 66
    1908:	2f e6       	ldi	r18, 0x6F	; 111
    190a:	32 e1       	ldi	r19, 0x12	; 18
    190c:	43 e8       	ldi	r20, 0x83	; 131
    190e:	5a e3       	ldi	r21, 0x3A	; 58
    1910:	ce 01       	movw	r24, r28
    1912:	87 59       	subi	r24, 0x97	; 151
    1914:	9f 4f       	sbci	r25, 0xFF	; 255
    1916:	e1 d1       	rcall	.+962    	; 0x1cda <_ZN14EncoderHandler9setValueFEPfff>
    1918:	64 c0       	rjmp	.+200    	; 0x19e2 <_ZN7Control16updateParametersEv+0x212>
    191a:	bf 01       	movw	r22, r30
    191c:	62 5f       	subi	r22, 0xF2	; 242
    191e:	7f 4f       	sbci	r23, 0xFF	; 255
    1920:	20 e7       	ldi	r18, 0x70	; 112
    1922:	37 e1       	ldi	r19, 0x17	; 23
    1924:	40 e0       	ldi	r20, 0x00	; 0
    1926:	50 e0       	ldi	r21, 0x00	; 0
    1928:	ce 01       	movw	r24, r28
    192a:	c0 96       	adiw	r24, 0x30	; 48
    192c:	71 d2       	rcall	.+1250   	; 0x1e10 <_ZN14EncoderHandler9setValueNEPiii>
    192e:	f8 01       	movw	r30, r16
    1930:	60 81       	ld	r22, Z
    1932:	71 81       	ldd	r23, Z+1	; 0x01
    1934:	60 5f       	subi	r22, 0xF0	; 240
    1936:	7f 4f       	sbci	r23, 0xFF	; 255
    1938:	20 e7       	ldi	r18, 0x70	; 112
    193a:	37 e1       	ldi	r19, 0x17	; 23
    193c:	40 e0       	ldi	r20, 0x00	; 0
    193e:	50 e0       	ldi	r21, 0x00	; 0
    1940:	ce 01       	movw	r24, r28
    1942:	8d 5b       	subi	r24, 0xBD	; 189
    1944:	9f 4f       	sbci	r25, 0xFF	; 255
    1946:	64 d2       	rcall	.+1224   	; 0x1e10 <_ZN14EncoderHandler9setValueNEPiii>
    1948:	d8 01       	movw	r26, r16
    194a:	6d 91       	ld	r22, X+
    194c:	7c 91       	ld	r23, X
    194e:	6e 5e       	subi	r22, 0xEE	; 238
    1950:	7f 4f       	sbci	r23, 0xFF	; 255
    1952:	2f ef       	ldi	r18, 0xFF	; 255
    1954:	40 e0       	ldi	r20, 0x00	; 0
    1956:	ce 01       	movw	r24, r28
    1958:	8a 5a       	subi	r24, 0xAA	; 170
    195a:	9f 4f       	sbci	r25, 0xFF	; 255
    195c:	59 d3       	rcall	.+1714   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    195e:	f8 01       	movw	r30, r16
    1960:	60 81       	ld	r22, Z
    1962:	71 81       	ldd	r23, Z+1	; 0x01
    1964:	6d 5e       	subi	r22, 0xED	; 237
    1966:	7f 4f       	sbci	r23, 0xFF	; 255
    1968:	20 e7       	ldi	r18, 0x70	; 112
    196a:	37 e1       	ldi	r19, 0x17	; 23
    196c:	40 e0       	ldi	r20, 0x00	; 0
    196e:	50 e0       	ldi	r21, 0x00	; 0
    1970:	ce 01       	movw	r24, r28
    1972:	87 59       	subi	r24, 0x97	; 151
    1974:	9f 4f       	sbci	r25, 0xFF	; 255
    1976:	df 91       	pop	r29
    1978:	cf 91       	pop	r28
    197a:	1f 91       	pop	r17
    197c:	0f 91       	pop	r16
    197e:	ff 90       	pop	r15
    1980:	ef 90       	pop	r14
    1982:	46 c2       	rjmp	.+1164   	; 0x1e10 <_ZN14EncoderHandler9setValueNEPiii>
    1984:	bf 01       	movw	r22, r30
    1986:	6b 5e       	subi	r22, 0xEB	; 235
    1988:	7f 4f       	sbci	r23, 0xFF	; 255
    198a:	27 e0       	ldi	r18, 0x07	; 7
    198c:	40 e0       	ldi	r20, 0x00	; 0
    198e:	ce 01       	movw	r24, r28
    1990:	c0 96       	adiw	r24, 0x30	; 48
    1992:	3e d3       	rcall	.+1660   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    1994:	d8 01       	movw	r26, r16
    1996:	6d 91       	ld	r22, X+
    1998:	7c 91       	ld	r23, X
    199a:	6a 5e       	subi	r22, 0xEA	; 234
    199c:	7f 4f       	sbci	r23, 0xFF	; 255
    199e:	2f ef       	ldi	r18, 0xFF	; 255
    19a0:	40 e0       	ldi	r20, 0x00	; 0
    19a2:	ce 01       	movw	r24, r28
    19a4:	8d 5b       	subi	r24, 0xBD	; 189
    19a6:	9f 4f       	sbci	r25, 0xFF	; 255
    19a8:	33 d3       	rcall	.+1638   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    19aa:	f8 01       	movw	r30, r16
    19ac:	60 81       	ld	r22, Z
    19ae:	71 81       	ldd	r23, Z+1	; 0x01
    19b0:	69 5e       	subi	r22, 0xE9	; 233
    19b2:	7f 4f       	sbci	r23, 0xFF	; 255
    19b4:	2f ef       	ldi	r18, 0xFF	; 255
    19b6:	40 e0       	ldi	r20, 0x00	; 0
    19b8:	ce 01       	movw	r24, r28
    19ba:	8a 5a       	subi	r24, 0xAA	; 170
    19bc:	9f 4f       	sbci	r25, 0xFF	; 255
    19be:	28 d3       	rcall	.+1616   	; 0x2010 <_ZN14EncoderHandler9setValueNEPhhh>
    19c0:	d8 01       	movw	r26, r16
    19c2:	6d 91       	ld	r22, X+
    19c4:	7c 91       	ld	r23, X
    19c6:	68 5e       	subi	r22, 0xE8	; 232
    19c8:	7f 4f       	sbci	r23, 0xFF	; 255
    19ca:	2f e7       	ldi	r18, 0x7F	; 127
    19cc:	41 e8       	ldi	r20, 0x81	; 129
    19ce:	ce 01       	movw	r24, r28
    19d0:	87 59       	subi	r24, 0x97	; 151
    19d2:	9f 4f       	sbci	r25, 0xFF	; 255
    19d4:	df 91       	pop	r29
    19d6:	cf 91       	pop	r28
    19d8:	1f 91       	pop	r17
    19da:	0f 91       	pop	r16
    19dc:	ff 90       	pop	r15
    19de:	ef 90       	pop	r14
    19e0:	97 c2       	rjmp	.+1326   	; 0x1f10 <_ZN14EncoderHandler9setValueNEPaaa>
    19e2:	df 91       	pop	r29
    19e4:	cf 91       	pop	r28
    19e6:	1f 91       	pop	r17
    19e8:	0f 91       	pop	r16
    19ea:	ff 90       	pop	r15
    19ec:	ef 90       	pop	r14
    19ee:	08 95       	ret

000019f0 <_GLOBAL__sub_I__ZN7ControlC2Ev>:

    19f0:	cf 93       	push	r28
    19f2:	df 93       	push	r29
    const int BKGCOLOR = 0x0000;
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    19f4:	66 ea       	ldi	r22, 0xA6	; 166
    19f6:	72 e0       	ldi	r23, 0x02	; 2
    19f8:	8e e3       	ldi	r24, 0x3E	; 62
    19fa:	94 e0       	ldi	r25, 0x04	; 4
    19fc:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a00:	6b ea       	ldi	r22, 0xAB	; 171
    1a02:	72 e0       	ldi	r23, 0x02	; 2
    1a04:	84 e4       	ldi	r24, 0x44	; 68
    1a06:	94 e0       	ldi	r25, 0x04	; 4
    1a08:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a0c:	60 eb       	ldi	r22, 0xB0	; 176
    1a0e:	72 e0       	ldi	r23, 0x02	; 2
    1a10:	8a e4       	ldi	r24, 0x4A	; 74
    1a12:	94 e0       	ldi	r25, 0x04	; 4
    1a14:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a18:	65 eb       	ldi	r22, 0xB5	; 181
    1a1a:	72 e0       	ldi	r23, 0x02	; 2
    1a1c:	80 e5       	ldi	r24, 0x50	; 80
    1a1e:	94 e0       	ldi	r25, 0x04	; 4
    1a20:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a24:	68 eb       	ldi	r22, 0xB8	; 184
    1a26:	72 e0       	ldi	r23, 0x02	; 2
    1a28:	86 e5       	ldi	r24, 0x56	; 86
    1a2a:	94 e0       	ldi	r25, 0x04	; 4
    1a2c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    1a30:	6e eb       	ldi	r22, 0xBE	; 190
    1a32:	72 e0       	ldi	r23, 0x02	; 2
    1a34:	86 e2       	ldi	r24, 0x26	; 38
    1a36:	94 e0       	ldi	r25, 0x04	; 4
    1a38:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a3c:	64 ec       	ldi	r22, 0xC4	; 196
    1a3e:	72 e0       	ldi	r23, 0x02	; 2
    1a40:	8c e2       	ldi	r24, 0x2C	; 44
    1a42:	94 e0       	ldi	r25, 0x04	; 4
    1a44:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a48:	6a ec       	ldi	r22, 0xCA	; 202
    1a4a:	72 e0       	ldi	r23, 0x02	; 2
    1a4c:	82 e3       	ldi	r24, 0x32	; 50
    1a4e:	94 e0       	ldi	r25, 0x04	; 4
    1a50:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a54:	64 ec       	ldi	r22, 0xC4	; 196
    1a56:	72 e0       	ldi	r23, 0x02	; 2
    1a58:	88 e3       	ldi	r24, 0x38	; 56
    1a5a:	94 e0       	ldi	r25, 0x04	; 4
    1a5c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    1a60:	6f ec       	ldi	r22, 0xCF	; 207
    1a62:	72 e0       	ldi	r23, 0x02	; 2
    1a64:	8e e0       	ldi	r24, 0x0E	; 14
    1a66:	94 e0       	ldi	r25, 0x04	; 4
    1a68:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a6c:	64 ec       	ldi	r22, 0xC4	; 196
    1a6e:	72 e0       	ldi	r23, 0x02	; 2
    1a70:	84 e1       	ldi	r24, 0x14	; 20
    1a72:	94 e0       	ldi	r25, 0x04	; 4
    1a74:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a78:	65 ed       	ldi	r22, 0xD5	; 213
    1a7a:	72 e0       	ldi	r23, 0x02	; 2
    1a7c:	8a e1       	ldi	r24, 0x1A	; 26
    1a7e:	94 e0       	ldi	r25, 0x04	; 4
    1a80:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a84:	6a ec       	ldi	r22, 0xCA	; 202
    1a86:	72 e0       	ldi	r23, 0x02	; 2
    1a88:	80 e2       	ldi	r24, 0x20	; 32
    1a8a:	94 e0       	ldi	r25, 0x04	; 4
    1a8c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    1a90:	6a ed       	ldi	r22, 0xDA	; 218
    1a92:	72 e0       	ldi	r23, 0x02	; 2
    1a94:	86 ef       	ldi	r24, 0xF6	; 246
    1a96:	93 e0       	ldi	r25, 0x03	; 3
    1a98:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1a9c:	6f ed       	ldi	r22, 0xDF	; 223
    1a9e:	72 e0       	ldi	r23, 0x02	; 2
    1aa0:	8c ef       	ldi	r24, 0xFC	; 252
    1aa2:	93 e0       	ldi	r25, 0x03	; 3
    1aa4:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1aa8:	64 ee       	ldi	r22, 0xE4	; 228
    1aaa:	72 e0       	ldi	r23, 0x02	; 2
    1aac:	82 e0       	ldi	r24, 0x02	; 2
    1aae:	94 e0       	ldi	r25, 0x04	; 4
    1ab0:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1ab4:	69 ee       	ldi	r22, 0xE9	; 233
    1ab6:	72 e0       	ldi	r23, 0x02	; 2
    1ab8:	88 e0       	ldi	r24, 0x08	; 8
    1aba:	94 e0       	ldi	r25, 0x04	; 4
    1abc:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    1ac0:	6f ec       	ldi	r22, 0xCF	; 207
    1ac2:	72 e0       	ldi	r23, 0x02	; 2
    1ac4:	8e ed       	ldi	r24, 0xDE	; 222
    1ac6:	93 e0       	ldi	r25, 0x03	; 3
    1ac8:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1acc:	6e ee       	ldi	r22, 0xEE	; 238
    1ace:	72 e0       	ldi	r23, 0x02	; 2
    1ad0:	84 ee       	ldi	r24, 0xE4	; 228
    1ad2:	93 e0       	ldi	r25, 0x03	; 3
    1ad4:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1ad8:	63 ef       	ldi	r22, 0xF3	; 243
    1ada:	72 e0       	ldi	r23, 0x02	; 2
    1adc:	8a ee       	ldi	r24, 0xEA	; 234
    1ade:	93 e0       	ldi	r25, 0x03	; 3
    1ae0:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1ae4:	6a ec       	ldi	r22, 0xCA	; 202
    1ae6:	72 e0       	ldi	r23, 0x02	; 2
    1ae8:	80 ef       	ldi	r24, 0xF0	; 240
    1aea:	93 e0       	ldi	r25, 0x03	; 3
    1aec:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    1af0:	6a ef       	ldi	r22, 0xFA	; 250
    1af2:	72 e0       	ldi	r23, 0x02	; 2
    1af4:	86 ec       	ldi	r24, 0xC6	; 198
    1af6:	93 e0       	ldi	r25, 0x03	; 3
    1af8:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1afc:	64 e0       	ldi	r22, 0x04	; 4
    1afe:	73 e0       	ldi	r23, 0x03	; 3
    1b00:	8c ec       	ldi	r24, 0xCC	; 204
    1b02:	93 e0       	ldi	r25, 0x03	; 3
    1b04:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1b08:	6c e0       	ldi	r22, 0x0C	; 12
    1b0a:	73 e0       	ldi	r23, 0x03	; 3
    1b0c:	82 ed       	ldi	r24, 0xD2	; 210
    1b0e:	93 e0       	ldi	r25, 0x03	; 3
    1b10:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1b14:	65 e1       	ldi	r22, 0x15	; 21
    1b16:	73 e0       	ldi	r23, 0x03	; 3
    1b18:	88 ed       	ldi	r24, 0xD8	; 216
    1b1a:	93 e0       	ldi	r25, 0x03	; 3
    1b1c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    1b20:	6d e1       	ldi	r22, 0x1D	; 29
    1b22:	73 e0       	ldi	r23, 0x03	; 3
    1b24:	8e ea       	ldi	r24, 0xAE	; 174
    1b26:	93 e0       	ldi	r25, 0x03	; 3
    1b28:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1b2c:	61 e2       	ldi	r22, 0x21	; 33
    1b2e:	73 e0       	ldi	r23, 0x03	; 3
    1b30:	84 eb       	ldi	r24, 0xB4	; 180
    1b32:	93 e0       	ldi	r25, 0x03	; 3
    1b34:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1b38:	65 e2       	ldi	r22, 0x25	; 37
    1b3a:	73 e0       	ldi	r23, 0x03	; 3
    1b3c:	8a eb       	ldi	r24, 0xBA	; 186
    1b3e:	93 e0       	ldi	r25, 0x03	; 3
    1b40:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1b44:	69 e2       	ldi	r22, 0x29	; 41
    1b46:	73 e0       	ldi	r23, 0x03	; 3
    1b48:	80 ec       	ldi	r24, 0xC0	; 192
    1b4a:	93 e0       	ldi	r25, 0x03	; 3
    1b4c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    1b50:	6d e2       	ldi	r22, 0x2D	; 45
    1b52:	73 e0       	ldi	r23, 0x03	; 3
    1b54:	8e e7       	ldi	r24, 0x7E	; 126
    1b56:	93 e0       	ldi	r25, 0x03	; 3
    1b58:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1b5c:	c0 e0       	ldi	r28, 0x00	; 0
    1b5e:	d0 e0       	ldi	r29, 0x00	; 0
    1b60:	26 96       	adiw	r28, 0x06	; 6
    1b62:	6a ea       	ldi	r22, 0xAA	; 170
    1b64:	72 e0       	ldi	r23, 0x02	; 2
    1b66:	ce 01       	movw	r24, r28
    1b68:	82 58       	subi	r24, 0x82	; 130
    1b6a:	9c 4f       	sbci	r25, 0xFC	; 252
    1b6c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    1b70:	ca 32       	cpi	r28, 0x2A	; 42
    1b72:	d1 05       	cpc	r29, r1
    1b74:	a9 f7       	brne	.-22     	; 0x1b60 <_GLOBAL__sub_I__ZN7ControlC2Ev+0x170>
    1b76:	df 91       	pop	r29
    1b78:	cf 91       	pop	r28
    1b7a:	08 95       	ret

00001b7c <_GLOBAL__sub_D__ZN7ControlC2Ev>:
    1b7c:	cf 93       	push	r28
    1b7e:	df 93       	push	r29
    1b80:	ce ea       	ldi	r28, 0xAE	; 174
    1b82:	d3 e0       	ldi	r29, 0x03	; 3
    1b84:	26 97       	sbiw	r28, 0x06	; 6
    1b86:	ce 01       	movw	r24, r28
    1b88:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1b8c:	83 e0       	ldi	r24, 0x03	; 3
    1b8e:	ce 37       	cpi	r28, 0x7E	; 126
    1b90:	d8 07       	cpc	r29, r24
    1b92:	c1 f7       	brne	.-16     	; 0x1b84 <_GLOBAL__sub_D__ZN7ControlC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    1b94:	80 ec       	ldi	r24, 0xC0	; 192
    1b96:	93 e0       	ldi	r25, 0x03	; 3
    1b98:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1b9c:	8a eb       	ldi	r24, 0xBA	; 186
    1b9e:	93 e0       	ldi	r25, 0x03	; 3
    1ba0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1ba4:	84 eb       	ldi	r24, 0xB4	; 180
    1ba6:	93 e0       	ldi	r25, 0x03	; 3
    1ba8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1bac:	8e ea       	ldi	r24, 0xAE	; 174
    1bae:	93 e0       	ldi	r25, 0x03	; 3
    1bb0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    1bb4:	88 ed       	ldi	r24, 0xD8	; 216
    1bb6:	93 e0       	ldi	r25, 0x03	; 3
    1bb8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1bbc:	82 ed       	ldi	r24, 0xD2	; 210
    1bbe:	93 e0       	ldi	r25, 0x03	; 3
    1bc0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1bc4:	8c ec       	ldi	r24, 0xCC	; 204
    1bc6:	93 e0       	ldi	r25, 0x03	; 3
    1bc8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1bcc:	86 ec       	ldi	r24, 0xC6	; 198
    1bce:	93 e0       	ldi	r25, 0x03	; 3
    1bd0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    1bd4:	80 ef       	ldi	r24, 0xF0	; 240
    1bd6:	93 e0       	ldi	r25, 0x03	; 3
    1bd8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1bdc:	8a ee       	ldi	r24, 0xEA	; 234
    1bde:	93 e0       	ldi	r25, 0x03	; 3
    1be0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1be4:	84 ee       	ldi	r24, 0xE4	; 228
    1be6:	93 e0       	ldi	r25, 0x03	; 3
    1be8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1bec:	8e ed       	ldi	r24, 0xDE	; 222
    1bee:	93 e0       	ldi	r25, 0x03	; 3
    1bf0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    1bf4:	88 e0       	ldi	r24, 0x08	; 8
    1bf6:	94 e0       	ldi	r25, 0x04	; 4
    1bf8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1bfc:	82 e0       	ldi	r24, 0x02	; 2
    1bfe:	94 e0       	ldi	r25, 0x04	; 4
    1c00:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c04:	8c ef       	ldi	r24, 0xFC	; 252
    1c06:	93 e0       	ldi	r25, 0x03	; 3
    1c08:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c0c:	86 ef       	ldi	r24, 0xF6	; 246
    1c0e:	93 e0       	ldi	r25, 0x03	; 3
    1c10:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    1c14:	80 e2       	ldi	r24, 0x20	; 32
    1c16:	94 e0       	ldi	r25, 0x04	; 4
    1c18:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c1c:	8a e1       	ldi	r24, 0x1A	; 26
    1c1e:	94 e0       	ldi	r25, 0x04	; 4
    1c20:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c24:	84 e1       	ldi	r24, 0x14	; 20
    1c26:	94 e0       	ldi	r25, 0x04	; 4
    1c28:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c2c:	8e e0       	ldi	r24, 0x0E	; 14
    1c2e:	94 e0       	ldi	r25, 0x04	; 4
    1c30:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    1c34:	88 e3       	ldi	r24, 0x38	; 56
    1c36:	94 e0       	ldi	r25, 0x04	; 4
    1c38:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c3c:	82 e3       	ldi	r24, 0x32	; 50
    1c3e:	94 e0       	ldi	r25, 0x04	; 4
    1c40:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c44:	8c e2       	ldi	r24, 0x2C	; 44
    1c46:	94 e0       	ldi	r25, 0x04	; 4
    1c48:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c4c:	86 e2       	ldi	r24, 0x26	; 38
    1c4e:	94 e0       	ldi	r25, 0x04	; 4
    1c50:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c54:	cc e5       	ldi	r28, 0x5C	; 92
    1c56:	d4 e0       	ldi	r29, 0x04	; 4
    const int BKGCOLOR = 0x0000;
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    1c58:	26 97       	sbiw	r28, 0x06	; 6
    1c5a:	ce 01       	movw	r24, r28
    1c5c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    1c60:	84 e0       	ldi	r24, 0x04	; 4
    1c62:	ce 33       	cpi	r28, 0x3E	; 62
    1c64:	d8 07       	cpc	r29, r24
    1c66:	c1 f7       	brne	.-16     	; 0x1c58 <_GLOBAL__sub_D__ZN7ControlC2Ev+0xdc>
    1c68:	df 91       	pop	r29
    1c6a:	cf 91       	pop	r28
    1c6c:	08 95       	ret

00001c6e <_ZN14EncoderHandlerC1Ev>:
 * EncoderHandler implementation
 * 
 * This class provides additional functionality to the Encoder library
 */

EncoderHandler::EncoderHandler(){
    1c6e:	cf 93       	push	r28
    1c70:	df 93       	push	r29
    1c72:	ec 01       	movw	r28, r24
    1c74:	0e 94 b2 1a 	call	0x3564	; 0x3564 <_ZN6RotaryC1Ev>
	bMulF = 1.f;
    1c78:	80 e0       	ldi	r24, 0x00	; 0
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	a0 e8       	ldi	r26, 0x80	; 128
    1c7e:	bf e3       	ldi	r27, 0x3F	; 63
    1c80:	8f 83       	std	Y+7, r24	; 0x07
    1c82:	98 87       	std	Y+8, r25	; 0x08
    1c84:	a9 87       	std	Y+9, r26	; 0x09
    1c86:	ba 87       	std	Y+10, r27	; 0x0a
	nMulF = 10.f;
    1c88:	80 e0       	ldi	r24, 0x00	; 0
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	a0 e2       	ldi	r26, 0x20	; 32
    1c8e:	b1 e4       	ldi	r27, 0x41	; 65
    1c90:	8b 87       	std	Y+11, r24	; 0x0b
    1c92:	9c 87       	std	Y+12, r25	; 0x0c
    1c94:	ad 87       	std	Y+13, r26	; 0x0d
    1c96:	be 87       	std	Y+14, r27	; 0x0e
	bMulN = 1;
    1c98:	81 e0       	ldi	r24, 0x01	; 1
    1c9a:	8f 87       	std	Y+15, r24	; 0x0f
	nMulN = 4;  
    1c9c:	84 e0       	ldi	r24, 0x04	; 4
    1c9e:	88 8b       	std	Y+16, r24	; 0x10
}
    1ca0:	df 91       	pop	r29
    1ca2:	cf 91       	pop	r28
    1ca4:	08 95       	ret

00001ca6 <_ZN14EncoderHandler4initEP6Rotaryh>:

void EncoderHandler::init(Rotary* r, byte bP) {
	enc = r; 
    1ca6:	fc 01       	movw	r30, r24
    1ca8:	75 83       	std	Z+5, r23	; 0x05
    1caa:	64 83       	std	Z+4, r22	; 0x04
	bPin = bP;
    1cac:	46 83       	std	Z+6, r20	; 0x06
	pinMode(bPin, INPUT_PULLUP);
    1cae:	62 e0       	ldi	r22, 0x02	; 2
    1cb0:	84 2f       	mov	r24, r20
    1cb2:	0c 94 76 45 	jmp	0x8aec	; 0x8aec <pinMode>

00001cb6 <_ZN14EncoderHandler7setMulFEff>:
}

void EncoderHandler::setMulF(float bM, float nM) {
    1cb6:	0f 93       	push	r16
    1cb8:	1f 93       	push	r17
	bMulF = bM;
    1cba:	fc 01       	movw	r30, r24
    1cbc:	47 83       	std	Z+7, r20	; 0x07
    1cbe:	50 87       	std	Z+8, r21	; 0x08
    1cc0:	61 87       	std	Z+9, r22	; 0x09
    1cc2:	72 87       	std	Z+10, r23	; 0x0a
	nMulF = nM;
    1cc4:	03 87       	std	Z+11, r16	; 0x0b
    1cc6:	14 87       	std	Z+12, r17	; 0x0c
    1cc8:	25 87       	std	Z+13, r18	; 0x0d
    1cca:	36 87       	std	Z+14, r19	; 0x0e
}
    1ccc:	1f 91       	pop	r17
    1cce:	0f 91       	pop	r16
    1cd0:	08 95       	ret

00001cd2 <_ZN14EncoderHandler7setMulNEhh>:

void EncoderHandler::setMulN(byte bM, byte nM) {
	bMulN = bM;
    1cd2:	fc 01       	movw	r30, r24
    1cd4:	67 87       	std	Z+15, r22	; 0x0f
	nMulN = nM;
    1cd6:	40 8b       	std	Z+16, r20	; 0x10
    1cd8:	08 95       	ret

00001cda <_ZN14EncoderHandler9setValueFEPfff>:
}

void EncoderHandler::setValueF(float* v, float min, float max) {
    1cda:	4f 92       	push	r4
    1cdc:	5f 92       	push	r5
    1cde:	6f 92       	push	r6
    1ce0:	7f 92       	push	r7
    1ce2:	8f 92       	push	r8
    1ce4:	9f 92       	push	r9
    1ce6:	af 92       	push	r10
    1ce8:	bf 92       	push	r11
    1cea:	cf 92       	push	r12
    1cec:	df 92       	push	r13
    1cee:	ef 92       	push	r14
    1cf0:	ff 92       	push	r15
    1cf2:	0f 93       	push	r16
    1cf4:	1f 93       	push	r17
    1cf6:	cf 93       	push	r28
    1cf8:	df 93       	push	r29
    1cfa:	ec 01       	movw	r28, r24
    1cfc:	6b 01       	movw	r12, r22
    1cfe:	29 01       	movw	r4, r18
    1d00:	3a 01       	movw	r6, r20
	button = digitalRead(bPin);
    1d02:	8e 81       	ldd	r24, Y+6	; 0x06
    1d04:	0e 94 e0 45 	call	0x8bc0	; 0x8bc0 <digitalRead>
    1d08:	21 e0       	ldi	r18, 0x01	; 1
    1d0a:	89 2b       	or	r24, r25
    1d0c:	09 f4       	brne	.+2      	; 0x1d10 <_ZN14EncoderHandler9setValueFEPfff+0x36>
    1d0e:	20 e0       	ldi	r18, 0x00	; 0
    1d10:	2a 8b       	std	Y+18, r18	; 0x12
	
	result = enc->process();
    1d12:	8c 81       	ldd	r24, Y+4	; 0x04
    1d14:	9d 81       	ldd	r25, Y+5	; 0x05
    1d16:	0e 94 cc 1a 	call	0x3598	; 0x3598 <_ZN6Rotary7processEv>
    1d1a:	89 8b       	std	Y+17, r24	; 0x11
	if(result == DIR_CW){
    1d1c:	80 31       	cpi	r24, 0x10	; 16
    1d1e:	89 f5       	brne	.+98     	; 0x1d82 <_ZN14EncoderHandler9setValueFEPfff+0xa8>
		else return f;
	}
}

float EncoderHandler::returnMulF(boolean m){ // mode, bMul, nMul
	if(m) return nMulF;
    1d20:	8a 89       	ldd	r24, Y+18	; 0x12
    1d22:	88 23       	and	r24, r24
    1d24:	29 f0       	breq	.+10     	; 0x1d30 <_ZN14EncoderHandler9setValueFEPfff+0x56>
    1d26:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d28:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d2a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d2c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d2e:	04 c0       	rjmp	.+8      	; 0x1d38 <_ZN14EncoderHandler9setValueFEPfff+0x5e>
	else return bMulF;
    1d30:	6f 81       	ldd	r22, Y+7	; 0x07
    1d32:	78 85       	ldd	r23, Y+8	; 0x08
    1d34:	89 85       	ldd	r24, Y+9	; 0x09
    1d36:	9a 85       	ldd	r25, Y+10	; 0x0a
void EncoderHandler::setValueF(float* v, float min, float max) {
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMulF(button);
    1d38:	f6 01       	movw	r30, r12
    1d3a:	20 81       	ld	r18, Z
    1d3c:	31 81       	ldd	r19, Z+1	; 0x01
    1d3e:	42 81       	ldd	r20, Z+2	; 0x02
    1d40:	53 81       	ldd	r21, Z+3	; 0x03
    1d42:	0e 94 d0 41 	call	0x83a0	; 0x83a0 <__addsf3>
    1d46:	4b 01       	movw	r8, r22
    1d48:	5c 01       	movw	r10, r24
	}
	//changed = false; // --> set from outside (where?)
}

float EncoderHandler::clipF(float f, float mn, float mx){
	if(f < mn){
    1d4a:	92 01       	movw	r18, r4
    1d4c:	a3 01       	movw	r20, r6
    1d4e:	0e 94 34 42 	call	0x8468	; 0x8468 <__cmpsf2>
    1d52:	87 fd       	sbrc	r24, 7
    1d54:	0b c0       	rjmp	.+22     	; 0x1d6c <_ZN14EncoderHandler9setValueFEPfff+0x92>
		return mn;
	}
	else{
		if(f>mx) return mx;
    1d56:	97 01       	movw	r18, r14
    1d58:	a8 01       	movw	r20, r16
    1d5a:	b4 01       	movw	r22, r8
    1d5c:	c5 01       	movw	r24, r10
    1d5e:	0e 94 57 43 	call	0x86ae	; 0x86ae <__gesf2>
    1d62:	18 16       	cp	r1, r24
    1d64:	2c f4       	brge	.+10     	; 0x1d70 <_ZN14EncoderHandler9setValueFEPfff+0x96>
    1d66:	47 01       	movw	r8, r14
    1d68:	58 01       	movw	r10, r16
    1d6a:	02 c0       	rjmp	.+4      	; 0x1d70 <_ZN14EncoderHandler9setValueFEPfff+0x96>
	//changed = false; // --> set from outside (where?)
}

float EncoderHandler::clipF(float f, float mn, float mx){
	if(f < mn){
		return mn;
    1d6c:	42 01       	movw	r8, r4
    1d6e:	53 01       	movw	r10, r6
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMulF(button);
		*v = clipF(*v, min, max);
    1d70:	c4 01       	movw	r24, r8
    1d72:	d5 01       	movw	r26, r10
    1d74:	f6 01       	movw	r30, r12
    1d76:	80 83       	st	Z, r24
    1d78:	91 83       	std	Z+1, r25	; 0x01
    1d7a:	a2 83       	std	Z+2, r26	; 0x02
    1d7c:	b3 83       	std	Z+3, r27	; 0x03
		changed = true;
    1d7e:	81 e0       	ldi	r24, 0x01	; 1
    1d80:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1d82:	89 89       	ldd	r24, Y+17	; 0x11
    1d84:	80 32       	cpi	r24, 0x20	; 32
    1d86:	99 f5       	brne	.+102    	; 0x1dee <_ZN14EncoderHandler9setValueFEPfff+0x114>
		else return f;
	}
}

float EncoderHandler::returnMulF(boolean m){ // mode, bMul, nMul
	if(m) return nMulF;
    1d88:	8a 89       	ldd	r24, Y+18	; 0x12
    1d8a:	88 23       	and	r24, r24
    1d8c:	29 f0       	breq	.+10     	; 0x1d98 <_ZN14EncoderHandler9setValueFEPfff+0xbe>
    1d8e:	2b 85       	ldd	r18, Y+11	; 0x0b
    1d90:	3c 85       	ldd	r19, Y+12	; 0x0c
    1d92:	4d 85       	ldd	r20, Y+13	; 0x0d
    1d94:	5e 85       	ldd	r21, Y+14	; 0x0e
    1d96:	04 c0       	rjmp	.+8      	; 0x1da0 <_ZN14EncoderHandler9setValueFEPfff+0xc6>
	else return bMulF;
    1d98:	2f 81       	ldd	r18, Y+7	; 0x07
    1d9a:	38 85       	ldd	r19, Y+8	; 0x08
    1d9c:	49 85       	ldd	r20, Y+9	; 0x09
    1d9e:	5a 85       	ldd	r21, Y+10	; 0x0a
		*v += returnMulF(button);
		*v = clipF(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMulF(button);
    1da0:	f6 01       	movw	r30, r12
    1da2:	60 81       	ld	r22, Z
    1da4:	71 81       	ldd	r23, Z+1	; 0x01
    1da6:	82 81       	ldd	r24, Z+2	; 0x02
    1da8:	93 81       	ldd	r25, Z+3	; 0x03
    1daa:	0e 94 cf 41 	call	0x839e	; 0x839e <__subsf3>
    1dae:	4b 01       	movw	r8, r22
    1db0:	5c 01       	movw	r10, r24
	}
	//changed = false; // --> set from outside (where?)
}

float EncoderHandler::clipF(float f, float mn, float mx){
	if(f < mn){
    1db2:	9b 01       	movw	r18, r22
    1db4:	ac 01       	movw	r20, r24
    1db6:	b2 01       	movw	r22, r4
    1db8:	c3 01       	movw	r24, r6
    1dba:	0e 94 57 43 	call	0x86ae	; 0x86ae <__gesf2>
    1dbe:	18 16       	cp	r1, r24
    1dc0:	5c f0       	brlt	.+22     	; 0x1dd8 <_ZN14EncoderHandler9setValueFEPfff+0xfe>
		return mn;
	}
	else{
		if(f>mx) return mx;
    1dc2:	94 01       	movw	r18, r8
    1dc4:	a5 01       	movw	r20, r10
    1dc6:	b7 01       	movw	r22, r14
    1dc8:	c8 01       	movw	r24, r16
    1dca:	0e 94 34 42 	call	0x8468	; 0x8468 <__cmpsf2>
    1dce:	87 ff       	sbrs	r24, 7
    1dd0:	05 c0       	rjmp	.+10     	; 0x1ddc <_ZN14EncoderHandler9setValueFEPfff+0x102>
    1dd2:	47 01       	movw	r8, r14
    1dd4:	58 01       	movw	r10, r16
    1dd6:	02 c0       	rjmp	.+4      	; 0x1ddc <_ZN14EncoderHandler9setValueFEPfff+0x102>
	//changed = false; // --> set from outside (where?)
}

float EncoderHandler::clipF(float f, float mn, float mx){
	if(f < mn){
		return mn;
    1dd8:	42 01       	movw	r8, r4
    1dda:	53 01       	movw	r10, r6
		*v = clipF(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMulF(button);
		*v = clipF(*v, min, max);
    1ddc:	c4 01       	movw	r24, r8
    1dde:	d5 01       	movw	r26, r10
    1de0:	f6 01       	movw	r30, r12
    1de2:	80 83       	st	Z, r24
    1de4:	91 83       	std	Z+1, r25	; 0x01
    1de6:	a2 83       	std	Z+2, r26	; 0x02
    1de8:	b3 83       	std	Z+3, r27	; 0x03
		changed = true;
    1dea:	81 e0       	ldi	r24, 0x01	; 1
    1dec:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1dee:	df 91       	pop	r29
    1df0:	cf 91       	pop	r28
    1df2:	1f 91       	pop	r17
    1df4:	0f 91       	pop	r16
    1df6:	ff 90       	pop	r15
    1df8:	ef 90       	pop	r14
    1dfa:	df 90       	pop	r13
    1dfc:	cf 90       	pop	r12
    1dfe:	bf 90       	pop	r11
    1e00:	af 90       	pop	r10
    1e02:	9f 90       	pop	r9
    1e04:	8f 90       	pop	r8
    1e06:	7f 90       	pop	r7
    1e08:	6f 90       	pop	r6
    1e0a:	5f 90       	pop	r5
    1e0c:	4f 90       	pop	r4
    1e0e:	08 95       	ret

00001e10 <_ZN14EncoderHandler9setValueNEPiii>:

void EncoderHandler::setValueN(int* v, int min, int max) {
    1e10:	8f 92       	push	r8
    1e12:	9f 92       	push	r9
    1e14:	af 92       	push	r10
    1e16:	bf 92       	push	r11
    1e18:	df 92       	push	r13
    1e1a:	ef 92       	push	r14
    1e1c:	ff 92       	push	r15
    1e1e:	0f 93       	push	r16
    1e20:	1f 93       	push	r17
    1e22:	cf 93       	push	r28
    1e24:	df 93       	push	r29
    1e26:	ec 01       	movw	r28, r24
    1e28:	7b 01       	movw	r14, r22
    1e2a:	14 2f       	mov	r17, r20
    1e2c:	d2 2e       	mov	r13, r18
	button = digitalRead(bPin);
    1e2e:	8e 81       	ldd	r24, Y+6	; 0x06
    1e30:	0e 94 e0 45 	call	0x8bc0	; 0x8bc0 <digitalRead>
    1e34:	21 e0       	ldi	r18, 0x01	; 1
    1e36:	89 2b       	or	r24, r25
    1e38:	09 f4       	brne	.+2      	; 0x1e3c <_ZN14EncoderHandler9setValueNEPiii+0x2c>
    1e3a:	20 e0       	ldi	r18, 0x00	; 0
    1e3c:	2a 8b       	std	Y+18, r18	; 0x12
	
	result = enc->process();
    1e3e:	8c 81       	ldd	r24, Y+4	; 0x04
    1e40:	9d 81       	ldd	r25, Y+5	; 0x05
    1e42:	0e 94 cc 1a 	call	0x3598	; 0x3598 <_ZN6Rotary7processEv>
    1e46:	89 8b       	std	Y+17, r24	; 0x11
	if(result == DIR_CW){
    1e48:	80 31       	cpi	r24, 0x10	; 16
    1e4a:	51 f5       	brne	.+84     	; 0x1ea0 <_ZN14EncoderHandler9setValueNEPiii+0x90>
	if(m) return nMulF;
	else return bMulF;
}

float EncoderHandler::returnMulN(boolean m){ // mode, bMul, nMul
	if(m) return nMulN;
    1e4c:	8a 89       	ldd	r24, Y+18	; 0x12
    1e4e:	88 23       	and	r24, r24
    1e50:	11 f0       	breq	.+4      	; 0x1e56 <_ZN14EncoderHandler9setValueNEPiii+0x46>
    1e52:	68 89       	ldd	r22, Y+16	; 0x10
    1e54:	01 c0       	rjmp	.+2      	; 0x1e58 <_ZN14EncoderHandler9setValueNEPiii+0x48>
	else return bMulN;
    1e56:	6f 85       	ldd	r22, Y+15	; 0x0f
    1e58:	70 e0       	ldi	r23, 0x00	; 0
    1e5a:	80 e0       	ldi	r24, 0x00	; 0
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	0e 94 6c 42 	call	0x84d8	; 0x84d8 <__floatunsisf>
    1e62:	4b 01       	movw	r8, r22
    1e64:	5c 01       	movw	r10, r24
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMulN(button);
		*v = clipN(*v, min, max);
    1e66:	01 2f       	mov	r16, r17
    1e68:	f7 01       	movw	r30, r14
    1e6a:	60 81       	ld	r22, Z
    1e6c:	71 81       	ldd	r23, Z+1	; 0x01
    1e6e:	07 2e       	mov	r0, r23
    1e70:	00 0c       	add	r0, r0
    1e72:	88 0b       	sbc	r24, r24
    1e74:	99 0b       	sbc	r25, r25
    1e76:	0e 94 6e 42 	call	0x84dc	; 0x84dc <__floatsisf>
    1e7a:	a5 01       	movw	r20, r10
    1e7c:	94 01       	movw	r18, r8
    1e7e:	0e 94 d0 41 	call	0x83a0	; 0x83a0 <__addsf3>
    1e82:	0e 94 3b 42 	call	0x8476	; 0x8476 <__fixsfsi>
		else return f;
	}
}

byte EncoderHandler::clipN(byte f, byte mn, byte mx){
	if(f < mn){
    1e86:	61 17       	cp	r22, r17
    1e88:	20 f0       	brcs	.+8      	; 0x1e92 <_ZN14EncoderHandler9setValueNEPiii+0x82>
    1e8a:	0d 2d       	mov	r16, r13
    1e8c:	6d 15       	cp	r22, r13
    1e8e:	08 f4       	brcc	.+2      	; 0x1e92 <_ZN14EncoderHandler9setValueNEPiii+0x82>
    1e90:	06 2f       	mov	r16, r22
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMulN(button);
		*v = clipN(*v, min, max);
    1e92:	80 2f       	mov	r24, r16
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	f7 01       	movw	r30, r14
    1e98:	91 83       	std	Z+1, r25	; 0x01
    1e9a:	80 83       	st	Z, r24
		changed = true;
    1e9c:	81 e0       	ldi	r24, 0x01	; 1
    1e9e:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1ea0:	89 89       	ldd	r24, Y+17	; 0x11
    1ea2:	80 32       	cpi	r24, 0x20	; 32
    1ea4:	49 f5       	brne	.+82     	; 0x1ef8 <_ZN14EncoderHandler9setValueNEPiii+0xe8>
	if(m) return nMulF;
	else return bMulF;
}

float EncoderHandler::returnMulN(boolean m){ // mode, bMul, nMul
	if(m) return nMulN;
    1ea6:	8a 89       	ldd	r24, Y+18	; 0x12
    1ea8:	88 23       	and	r24, r24
    1eaa:	11 f0       	breq	.+4      	; 0x1eb0 <_ZN14EncoderHandler9setValueNEPiii+0xa0>
    1eac:	68 89       	ldd	r22, Y+16	; 0x10
    1eae:	01 c0       	rjmp	.+2      	; 0x1eb2 <_ZN14EncoderHandler9setValueNEPiii+0xa2>
	else return bMulN;
    1eb0:	6f 85       	ldd	r22, Y+15	; 0x0f
    1eb2:	70 e0       	ldi	r23, 0x00	; 0
    1eb4:	80 e0       	ldi	r24, 0x00	; 0
    1eb6:	90 e0       	ldi	r25, 0x00	; 0
    1eb8:	0e 94 6c 42 	call	0x84d8	; 0x84d8 <__floatunsisf>
    1ebc:	4b 01       	movw	r8, r22
    1ebe:	5c 01       	movw	r10, r24
		*v = clipN(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMulN(button);
		*v = clipN(*v, min, max);
    1ec0:	f7 01       	movw	r30, r14
    1ec2:	60 81       	ld	r22, Z
    1ec4:	71 81       	ldd	r23, Z+1	; 0x01
    1ec6:	07 2e       	mov	r0, r23
    1ec8:	00 0c       	add	r0, r0
    1eca:	88 0b       	sbc	r24, r24
    1ecc:	99 0b       	sbc	r25, r25
    1ece:	0e 94 6e 42 	call	0x84dc	; 0x84dc <__floatsisf>
    1ed2:	a5 01       	movw	r20, r10
    1ed4:	94 01       	movw	r18, r8
    1ed6:	0e 94 cf 41 	call	0x839e	; 0x839e <__subsf3>
    1eda:	0e 94 3b 42 	call	0x8476	; 0x8476 <__fixsfsi>
		else return f;
	}
}

byte EncoderHandler::clipN(byte f, byte mn, byte mx){
	if(f < mn){
    1ede:	61 17       	cp	r22, r17
    1ee0:	20 f0       	brcs	.+8      	; 0x1eea <_ZN14EncoderHandler9setValueNEPiii+0xda>
    1ee2:	1d 2d       	mov	r17, r13
    1ee4:	6d 15       	cp	r22, r13
    1ee6:	08 f4       	brcc	.+2      	; 0x1eea <_ZN14EncoderHandler9setValueNEPiii+0xda>
    1ee8:	16 2f       	mov	r17, r22
		*v = clipN(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMulN(button);
		*v = clipN(*v, min, max);
    1eea:	41 2f       	mov	r20, r17
    1eec:	50 e0       	ldi	r21, 0x00	; 0
    1eee:	f7 01       	movw	r30, r14
    1ef0:	51 83       	std	Z+1, r21	; 0x01
    1ef2:	40 83       	st	Z, r20
		changed = true;
    1ef4:	81 e0       	ldi	r24, 0x01	; 1
    1ef6:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1ef8:	df 91       	pop	r29
    1efa:	cf 91       	pop	r28
    1efc:	1f 91       	pop	r17
    1efe:	0f 91       	pop	r16
    1f00:	ff 90       	pop	r15
    1f02:	ef 90       	pop	r14
    1f04:	df 90       	pop	r13
    1f06:	bf 90       	pop	r11
    1f08:	af 90       	pop	r10
    1f0a:	9f 90       	pop	r9
    1f0c:	8f 90       	pop	r8
    1f0e:	08 95       	ret

00001f10 <_ZN14EncoderHandler9setValueNEPaaa>:

void EncoderHandler::setValueN(int8_t* v, int8_t min, int8_t max) {
    1f10:	4f 92       	push	r4
    1f12:	5f 92       	push	r5
    1f14:	6f 92       	push	r6
    1f16:	7f 92       	push	r7
    1f18:	8f 92       	push	r8
    1f1a:	9f 92       	push	r9
    1f1c:	af 92       	push	r10
    1f1e:	bf 92       	push	r11
    1f20:	ef 92       	push	r14
    1f22:	ff 92       	push	r15
    1f24:	0f 93       	push	r16
    1f26:	1f 93       	push	r17
    1f28:	cf 93       	push	r28
    1f2a:	df 93       	push	r29
    1f2c:	ec 01       	movw	r28, r24
    1f2e:	7b 01       	movw	r14, r22
    1f30:	14 2f       	mov	r17, r20
    1f32:	02 2f       	mov	r16, r18
	button = digitalRead(bPin);
    1f34:	8e 81       	ldd	r24, Y+6	; 0x06
    1f36:	0e 94 e0 45 	call	0x8bc0	; 0x8bc0 <digitalRead>
    1f3a:	21 e0       	ldi	r18, 0x01	; 1
    1f3c:	89 2b       	or	r24, r25
    1f3e:	09 f4       	brne	.+2      	; 0x1f42 <_ZN14EncoderHandler9setValueNEPaaa+0x32>
    1f40:	20 e0       	ldi	r18, 0x00	; 0
    1f42:	2a 8b       	std	Y+18, r18	; 0x12
	
	result = enc->process();
    1f44:	8c 81       	ldd	r24, Y+4	; 0x04
    1f46:	9d 81       	ldd	r25, Y+5	; 0x05
    1f48:	0e 94 cc 1a 	call	0x3598	; 0x3598 <_ZN6Rotary7processEv>
    1f4c:	89 8b       	std	Y+17, r24	; 0x11
	if(result == DIR_CW){
    1f4e:	80 31       	cpi	r24, 0x10	; 16
    1f50:	39 f5       	brne	.+78     	; 0x1fa0 <_ZN14EncoderHandler9setValueNEPaaa+0x90>
	if(m) return nMulF;
	else return bMulF;
}

float EncoderHandler::returnMulN(boolean m){ // mode, bMul, nMul
	if(m) return nMulN;
    1f52:	8a 89       	ldd	r24, Y+18	; 0x12
    1f54:	88 23       	and	r24, r24
    1f56:	11 f0       	breq	.+4      	; 0x1f5c <_ZN14EncoderHandler9setValueNEPaaa+0x4c>
    1f58:	68 89       	ldd	r22, Y+16	; 0x10
    1f5a:	01 c0       	rjmp	.+2      	; 0x1f5e <_ZN14EncoderHandler9setValueNEPaaa+0x4e>
	else return bMulN;
    1f5c:	6f 85       	ldd	r22, Y+15	; 0x0f
    1f5e:	70 e0       	ldi	r23, 0x00	; 0
    1f60:	80 e0       	ldi	r24, 0x00	; 0
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	0e 94 6c 42 	call	0x84d8	; 0x84d8 <__floatunsisf>
    1f68:	2b 01       	movw	r4, r22
    1f6a:	3c 01       	movw	r6, r24
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMulN(button);
		*v = clipN(*v, min, max);
    1f6c:	b1 2e       	mov	r11, r17
    1f6e:	f7 01       	movw	r30, r14
    1f70:	60 81       	ld	r22, Z
    1f72:	06 2e       	mov	r0, r22
    1f74:	00 0c       	add	r0, r0
    1f76:	77 0b       	sbc	r23, r23
    1f78:	88 0b       	sbc	r24, r24
    1f7a:	99 0b       	sbc	r25, r25
    1f7c:	0e 94 6e 42 	call	0x84dc	; 0x84dc <__floatsisf>
    1f80:	a3 01       	movw	r20, r6
    1f82:	92 01       	movw	r18, r4
    1f84:	0e 94 d0 41 	call	0x83a0	; 0x83a0 <__addsf3>
    1f88:	0e 94 3b 42 	call	0x8476	; 0x8476 <__fixsfsi>
		else return f;
	}
}

byte EncoderHandler::clipN(byte f, byte mn, byte mx){
	if(f < mn){
    1f8c:	61 17       	cp	r22, r17
    1f8e:	20 f0       	brcs	.+8      	; 0x1f98 <_ZN14EncoderHandler9setValueNEPaaa+0x88>
    1f90:	b0 2e       	mov	r11, r16
    1f92:	60 17       	cp	r22, r16
    1f94:	08 f4       	brcc	.+2      	; 0x1f98 <_ZN14EncoderHandler9setValueNEPaaa+0x88>
    1f96:	b6 2e       	mov	r11, r22
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMulN(button);
		*v = clipN(*v, min, max);
    1f98:	f7 01       	movw	r30, r14
    1f9a:	b0 82       	st	Z, r11
		changed = true;
    1f9c:	81 e0       	ldi	r24, 0x01	; 1
    1f9e:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1fa0:	89 89       	ldd	r24, Y+17	; 0x11
    1fa2:	80 32       	cpi	r24, 0x20	; 32
    1fa4:	31 f5       	brne	.+76     	; 0x1ff2 <_ZN14EncoderHandler9setValueNEPaaa+0xe2>
	if(m) return nMulF;
	else return bMulF;
}

float EncoderHandler::returnMulN(boolean m){ // mode, bMul, nMul
	if(m) return nMulN;
    1fa6:	8a 89       	ldd	r24, Y+18	; 0x12
    1fa8:	88 23       	and	r24, r24
    1faa:	11 f0       	breq	.+4      	; 0x1fb0 <_ZN14EncoderHandler9setValueNEPaaa+0xa0>
    1fac:	68 89       	ldd	r22, Y+16	; 0x10
    1fae:	01 c0       	rjmp	.+2      	; 0x1fb2 <_ZN14EncoderHandler9setValueNEPaaa+0xa2>
	else return bMulN;
    1fb0:	6f 85       	ldd	r22, Y+15	; 0x0f
    1fb2:	70 e0       	ldi	r23, 0x00	; 0
    1fb4:	80 e0       	ldi	r24, 0x00	; 0
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	0e 94 6c 42 	call	0x84d8	; 0x84d8 <__floatunsisf>
    1fbc:	4b 01       	movw	r8, r22
    1fbe:	5c 01       	movw	r10, r24
		*v = clipN(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMulN(button);
		*v = clipN(*v, min, max);
    1fc0:	f7 01       	movw	r30, r14
    1fc2:	60 81       	ld	r22, Z
    1fc4:	06 2e       	mov	r0, r22
    1fc6:	00 0c       	add	r0, r0
    1fc8:	77 0b       	sbc	r23, r23
    1fca:	88 0b       	sbc	r24, r24
    1fcc:	99 0b       	sbc	r25, r25
    1fce:	0e 94 6e 42 	call	0x84dc	; 0x84dc <__floatsisf>
    1fd2:	a5 01       	movw	r20, r10
    1fd4:	94 01       	movw	r18, r8
    1fd6:	0e 94 cf 41 	call	0x839e	; 0x839e <__subsf3>
    1fda:	0e 94 3b 42 	call	0x8476	; 0x8476 <__fixsfsi>
		else return f;
	}
}

byte EncoderHandler::clipN(byte f, byte mn, byte mx){
	if(f < mn){
    1fde:	61 17       	cp	r22, r17
    1fe0:	20 f0       	brcs	.+8      	; 0x1fea <_ZN14EncoderHandler9setValueNEPaaa+0xda>
    1fe2:	10 2f       	mov	r17, r16
    1fe4:	60 17       	cp	r22, r16
    1fe6:	08 f4       	brcc	.+2      	; 0x1fea <_ZN14EncoderHandler9setValueNEPaaa+0xda>
    1fe8:	16 2f       	mov	r17, r22
		*v = clipN(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMulN(button);
		*v = clipN(*v, min, max);
    1fea:	f7 01       	movw	r30, r14
    1fec:	10 83       	st	Z, r17
		changed = true;
    1fee:	81 e0       	ldi	r24, 0x01	; 1
    1ff0:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1ff2:	df 91       	pop	r29
    1ff4:	cf 91       	pop	r28
    1ff6:	1f 91       	pop	r17
    1ff8:	0f 91       	pop	r16
    1ffa:	ff 90       	pop	r15
    1ffc:	ef 90       	pop	r14
    1ffe:	bf 90       	pop	r11
    2000:	af 90       	pop	r10
    2002:	9f 90       	pop	r9
    2004:	8f 90       	pop	r8
    2006:	7f 90       	pop	r7
    2008:	6f 90       	pop	r6
    200a:	5f 90       	pop	r5
    200c:	4f 90       	pop	r4
    200e:	08 95       	ret

00002010 <_ZN14EncoderHandler9setValueNEPhhh>:

void EncoderHandler::setValueN(uint8_t* v, uint8_t min, uint8_t max) {
    2010:	8f 92       	push	r8
    2012:	9f 92       	push	r9
    2014:	af 92       	push	r10
    2016:	bf 92       	push	r11
    2018:	ef 92       	push	r14
    201a:	ff 92       	push	r15
    201c:	0f 93       	push	r16
    201e:	1f 93       	push	r17
    2020:	cf 93       	push	r28
    2022:	df 93       	push	r29
    2024:	ec 01       	movw	r28, r24
    2026:	7b 01       	movw	r14, r22
    2028:	14 2f       	mov	r17, r20
    202a:	02 2f       	mov	r16, r18
	button = digitalRead(bPin);
    202c:	8e 81       	ldd	r24, Y+6	; 0x06
    202e:	0e 94 e0 45 	call	0x8bc0	; 0x8bc0 <digitalRead>
    2032:	21 e0       	ldi	r18, 0x01	; 1
    2034:	89 2b       	or	r24, r25
    2036:	09 f4       	brne	.+2      	; 0x203a <_ZN14EncoderHandler9setValueNEPhhh+0x2a>
    2038:	20 e0       	ldi	r18, 0x00	; 0
    203a:	2a 8b       	std	Y+18, r18	; 0x12
	
	result = enc->process();
    203c:	8c 81       	ldd	r24, Y+4	; 0x04
    203e:	9d 81       	ldd	r25, Y+5	; 0x05
    2040:	0e 94 cc 1a 	call	0x3598	; 0x3598 <_ZN6Rotary7processEv>
    2044:	89 8b       	std	Y+17, r24	; 0x11
	if(result == DIR_CW){
    2046:	80 31       	cpi	r24, 0x10	; 16
    2048:	29 f5       	brne	.+74     	; 0x2094 <_ZN14EncoderHandler9setValueNEPhhh+0x84>
	if(m) return nMulF;
	else return bMulF;
}

float EncoderHandler::returnMulN(boolean m){ // mode, bMul, nMul
	if(m) return nMulN;
    204a:	8a 89       	ldd	r24, Y+18	; 0x12
    204c:	88 23       	and	r24, r24
    204e:	11 f0       	breq	.+4      	; 0x2054 <_ZN14EncoderHandler9setValueNEPhhh+0x44>
    2050:	68 89       	ldd	r22, Y+16	; 0x10
    2052:	01 c0       	rjmp	.+2      	; 0x2056 <_ZN14EncoderHandler9setValueNEPhhh+0x46>
	else return bMulN;
    2054:	6f 85       	ldd	r22, Y+15	; 0x0f
    2056:	70 e0       	ldi	r23, 0x00	; 0
    2058:	80 e0       	ldi	r24, 0x00	; 0
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	0e 94 6c 42 	call	0x84d8	; 0x84d8 <__floatunsisf>
    2060:	4b 01       	movw	r8, r22
    2062:	5c 01       	movw	r10, r24
void EncoderHandler::setValueN(uint8_t* v, uint8_t min, uint8_t max) {
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMulN(button);
    2064:	f7 01       	movw	r30, r14
    2066:	60 81       	ld	r22, Z
    2068:	70 e0       	ldi	r23, 0x00	; 0
    206a:	80 e0       	ldi	r24, 0x00	; 0
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	0e 94 6e 42 	call	0x84dc	; 0x84dc <__floatsisf>
    2072:	a5 01       	movw	r20, r10
    2074:	94 01       	movw	r18, r8
    2076:	0e 94 d0 41 	call	0x83a0	; 0x83a0 <__addsf3>
    207a:	0e 94 40 42 	call	0x8480	; 0x8480 <__fixunssfsi>
		else return f;
	}
}

byte EncoderHandler::clipN(byte f, byte mn, byte mx){
	if(f < mn){
    207e:	61 17       	cp	r22, r17
    2080:	20 f0       	brcs	.+8      	; 0x208a <_ZN14EncoderHandler9setValueNEPhhh+0x7a>
    2082:	06 17       	cp	r16, r22
    2084:	18 f4       	brcc	.+6      	; 0x208c <_ZN14EncoderHandler9setValueNEPhhh+0x7c>
    2086:	60 2f       	mov	r22, r16
    2088:	01 c0       	rjmp	.+2      	; 0x208c <_ZN14EncoderHandler9setValueNEPhhh+0x7c>
    208a:	61 2f       	mov	r22, r17
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMulN(button);
		*v = clipN(*v, min, max);
    208c:	f7 01       	movw	r30, r14
    208e:	60 83       	st	Z, r22
		changed = true;
    2090:	81 e0       	ldi	r24, 0x01	; 1
    2092:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    2094:	89 89       	ldd	r24, Y+17	; 0x11
    2096:	80 32       	cpi	r24, 0x20	; 32
    2098:	21 f5       	brne	.+72     	; 0x20e2 <_ZN14EncoderHandler9setValueNEPhhh+0xd2>
	if(m) return nMulF;
	else return bMulF;
}

float EncoderHandler::returnMulN(boolean m){ // mode, bMul, nMul
	if(m) return nMulN;
    209a:	8a 89       	ldd	r24, Y+18	; 0x12
    209c:	88 23       	and	r24, r24
    209e:	11 f0       	breq	.+4      	; 0x20a4 <_ZN14EncoderHandler9setValueNEPhhh+0x94>
    20a0:	68 89       	ldd	r22, Y+16	; 0x10
    20a2:	01 c0       	rjmp	.+2      	; 0x20a6 <_ZN14EncoderHandler9setValueNEPhhh+0x96>
	else return bMulN;
    20a4:	6f 85       	ldd	r22, Y+15	; 0x0f
    20a6:	70 e0       	ldi	r23, 0x00	; 0
    20a8:	80 e0       	ldi	r24, 0x00	; 0
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	0e 94 6c 42 	call	0x84d8	; 0x84d8 <__floatunsisf>
    20b0:	4b 01       	movw	r8, r22
    20b2:	5c 01       	movw	r10, r24
		*v += returnMulN(button);
		*v = clipN(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMulN(button);
    20b4:	f7 01       	movw	r30, r14
    20b6:	60 81       	ld	r22, Z
    20b8:	70 e0       	ldi	r23, 0x00	; 0
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	90 e0       	ldi	r25, 0x00	; 0
    20be:	0e 94 6e 42 	call	0x84dc	; 0x84dc <__floatsisf>
    20c2:	a5 01       	movw	r20, r10
    20c4:	94 01       	movw	r18, r8
    20c6:	0e 94 cf 41 	call	0x839e	; 0x839e <__subsf3>
    20ca:	0e 94 40 42 	call	0x8480	; 0x8480 <__fixunssfsi>
		else return f;
	}
}

byte EncoderHandler::clipN(byte f, byte mn, byte mx){
	if(f < mn){
    20ce:	61 17       	cp	r22, r17
    20d0:	20 f0       	brcs	.+8      	; 0x20da <_ZN14EncoderHandler9setValueNEPhhh+0xca>
    20d2:	10 2f       	mov	r17, r16
    20d4:	60 17       	cp	r22, r16
    20d6:	08 f4       	brcc	.+2      	; 0x20da <_ZN14EncoderHandler9setValueNEPhhh+0xca>
    20d8:	16 2f       	mov	r17, r22
		*v = clipN(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMulN(button);
		*v = clipN(*v, min, max);
    20da:	f7 01       	movw	r30, r14
    20dc:	10 83       	st	Z, r17
		changed = true;
    20de:	81 e0       	ldi	r24, 0x01	; 1
    20e0:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    20e2:	df 91       	pop	r29
    20e4:	cf 91       	pop	r28
    20e6:	1f 91       	pop	r17
    20e8:	0f 91       	pop	r16
    20ea:	ff 90       	pop	r15
    20ec:	ef 90       	pop	r14
    20ee:	bf 90       	pop	r11
    20f0:	af 90       	pop	r10
    20f2:	9f 90       	pop	r9
    20f4:	8f 90       	pop	r8
    20f6:	08 95       	ret

000020f8 <_ZN4MenuC1Ev>:
 * 
 * This class draws the upper menu as well as the bottom labels and associated parameters
 */


Menu::Menu() {
    20f8:	fc 01       	movw	r30, r24

class Parameters {
public: 
	Parameters(){};
	
    typedef struct {
    20fa:	10 82       	st	Z, r1
    20fc:	11 82       	std	Z+1, r1	; 0x01
    20fe:	8c ed       	ldi	r24, 0xDC	; 220
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	93 83       	std	Z+3, r25	; 0x03
    2104:	82 83       	std	Z+2, r24	; 0x02
    2106:	14 82       	std	Z+4, r1	; 0x04
    2108:	80 e0       	ldi	r24, 0x00	; 0
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	a0 e8       	ldi	r26, 0x80	; 128
    210e:	b0 e4       	ldi	r27, 0x40	; 64
    2110:	85 83       	std	Z+5, r24	; 0x05
    2112:	96 83       	std	Z+6, r25	; 0x06
    2114:	a7 83       	std	Z+7, r26	; 0x07
    2116:	b0 87       	std	Z+8, r27	; 0x08
    2118:	11 86       	std	Z+9, r1	; 0x09
    211a:	80 ee       	ldi	r24, 0xE0	; 224
    211c:	9e e2       	ldi	r25, 0x2E	; 46
    211e:	93 87       	std	Z+11, r25	; 0x0b
    2120:	82 87       	std	Z+10, r24	; 0x0a
    2122:	88 e2       	ldi	r24, 0x28	; 40
    2124:	84 87       	std	Z+12, r24	; 0x0c
    2126:	15 86       	std	Z+13, r1	; 0x0d
    2128:	17 86       	std	Z+15, r1	; 0x0f
    212a:	16 86       	std	Z+14, r1	; 0x0e
    212c:	88 ec       	ldi	r24, 0xC8	; 200
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	91 8b       	std	Z+17, r25	; 0x11
    2132:	80 8b       	std	Z+16, r24	; 0x10
    2134:	84 eb       	ldi	r24, 0xB4	; 180
    2136:	82 8b       	std	Z+18, r24	; 0x12
    2138:	8a ef       	ldi	r24, 0xFA	; 250
    213a:	90 e0       	ldi	r25, 0x00	; 0
    213c:	94 8b       	std	Z+20, r25	; 0x14
    213e:	83 8b       	std	Z+19, r24	; 0x13
    2140:	15 8a       	std	Z+21, r1	; 0x15
    2142:	16 8a       	std	Z+22, r1	; 0x16
    2144:	17 8a       	std	Z+23, r1	; 0x17
    2146:	10 8e       	std	Z+24, r1	; 0x18
    2148:	8f e7       	ldi	r24, 0x7F	; 127
    214a:	81 8f       	std	Z+25, r24	; 0x19
    214c:	12 8e       	std	Z+26, r1	; 0x1a
    214e:	13 8e       	std	Z+27, r1	; 0x1b
    2150:	14 8e       	std	Z+28, r1	; 0x1c
	tWidth = (WIDTH+1)/TLABELS; // 96px
    2152:	80 e6       	ldi	r24, 0x60	; 96
    2154:	85 a3       	std	Z+37, r24	; 0x25
	bWidth = (WIDTH+1)/BLABELS; // 120px
    2156:	88 e7       	ldi	r24, 0x78	; 120
    2158:	86 a3       	std	Z+38, r24	; 0x26
	height = HEIGHT/8; // 40px
    215a:	87 e2       	ldi	r24, 0x27	; 39
    215c:	87 a3       	std	Z+39, r24	; 0x27
    215e:	08 95       	ret

00002160 <_ZN4Menu4initEP4UTFTPhS2_PN10Parameters8params_tE>:
}

void Menu::init(UTFT* u, uint8_t* sF, uint8_t* bF, params_t* p) {
    2160:	0f 93       	push	r16
    2162:	1f 93       	push	r17
    2164:	fc 01       	movw	r30, r24
	//Serial.println(p->oscFreq);
	paramsPtr = p;
    2166:	14 a3       	std	Z+36, r17	; 0x24
    2168:	03 a3       	std	Z+35, r16	; 0x23
	mLCD = u;
    216a:	76 8f       	std	Z+30, r23	; 0x1e
    216c:	65 8f       	std	Z+29, r22	; 0x1d
	sFont = sF;
    216e:	50 a3       	std	Z+32, r21	; 0x20
    2170:	47 8f       	std	Z+31, r20	; 0x1f
	bFont = bF;
    2172:	32 a3       	std	Z+34, r19	; 0x22
    2174:	21 a3       	std	Z+33, r18	; 0x21
}
    2176:	1f 91       	pop	r17
    2178:	0f 91       	pop	r16
    217a:	08 95       	ret

0000217c <_ZN4Menu11drawTopMenuEv>:
void Menu::drawMenus(){
	drawBottomMenu();
	drawTopMenu();
}

void Menu::drawTopMenu() {
    217c:	8f 92       	push	r8
    217e:	9f 92       	push	r9
    2180:	af 92       	push	r10
    2182:	bf 92       	push	r11
    2184:	cf 92       	push	r12
    2186:	df 92       	push	r13
    2188:	ef 92       	push	r14
    218a:	ff 92       	push	r15
    218c:	0f 93       	push	r16
    218e:	1f 93       	push	r17
    2190:	cf 93       	push	r28
    2192:	df 93       	push	r29
    2194:	00 d0       	rcall	.+0      	; 0x2196 <_ZN4Menu11drawTopMenuEv+0x1a>
    2196:	00 d0       	rcall	.+0      	; 0x2198 <_ZN4Menu11drawTopMenuEv+0x1c>
    2198:	cd b7       	in	r28, 0x3d	; 61
    219a:	de b7       	in	r29, 0x3e	; 62
    219c:	7c 01       	movw	r14, r24
	mLCD->setFont(bFont); // set font
    219e:	dc 01       	movw	r26, r24
    21a0:	91 96       	adiw	r26, 0x21	; 33
    21a2:	6d 91       	ld	r22, X+
    21a4:	7c 91       	ld	r23, X
    21a6:	92 97       	sbiw	r26, 0x22	; 34
    21a8:	5d 96       	adiw	r26, 0x1d	; 29
    21aa:	8d 91       	ld	r24, X+
    21ac:	9c 91       	ld	r25, X
    21ae:	5e 97       	sbiw	r26, 0x1e	; 30
    21b0:	0e 94 09 3f 	call	0x7e12	; 0x7e12 <_ZN4UTFT7setFontEPh>
	// draw outer rect
	mLCD->setColor(COLOR);
    21b4:	60 e0       	ldi	r22, 0x00	; 0
    21b6:	78 ef       	ldi	r23, 0xF8	; 248
    21b8:	f7 01       	movw	r30, r14
    21ba:	85 8d       	ldd	r24, Z+29	; 0x1d
    21bc:	96 8d       	ldd	r25, Z+30	; 0x1e
    21be:	0e 94 7a 37 	call	0x6ef4	; 0x6ef4 <_ZN4UTFT8setColorEj>
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);
    21c2:	d7 01       	movw	r26, r14
    21c4:	97 96       	adiw	r26, 0x27	; 39
    21c6:	0c 91       	ld	r16, X
    21c8:	97 97       	sbiw	r26, 0x27	; 39
    21ca:	10 e0       	ldi	r17, 0x00	; 0
    21cc:	2f ed       	ldi	r18, 0xDF	; 223
    21ce:	31 e0       	ldi	r19, 0x01	; 1
    21d0:	40 e0       	ldi	r20, 0x00	; 0
    21d2:	50 e0       	ldi	r21, 0x00	; 0
    21d4:	60 e0       	ldi	r22, 0x00	; 0
    21d6:	70 e0       	ldi	r23, 0x00	; 0
    21d8:	5d 96       	adiw	r26, 0x1d	; 29
    21da:	8d 91       	ld	r24, X+
    21dc:	9c 91       	ld	r25, X
    21de:	5e 97       	sbiw	r26, 0x1e	; 30
    21e0:	0e 94 54 38 	call	0x70a8	; 0x70a8 <_ZN4UTFT8fillRectEiiii>
    21e4:	8c e1       	ldi	r24, 0x1C	; 28
    21e6:	a8 2e       	mov	r10, r24
    21e8:	85 e0       	ldi	r24, 0x05	; 5
    21ea:	b8 2e       	mov	r11, r24


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
    21ec:	c1 2c       	mov	r12, r1
    21ee:	d1 2c       	mov	r13, r1
		if (i != paramsPtr->menu){ // print all but selected
    21f0:	d7 01       	movw	r26, r14
    21f2:	93 96       	adiw	r26, 0x23	; 35
    21f4:	ed 91       	ld	r30, X+
    21f6:	fc 91       	ld	r31, X
    21f8:	94 97       	sbiw	r26, 0x24	; 36
    21fa:	20 81       	ld	r18, Z
    21fc:	30 e0       	ldi	r19, 0x00	; 0
    21fe:	5d 96       	adiw	r26, 0x1d	; 29
    2200:	8d 91       	ld	r24, X+
    2202:	9c 91       	ld	r25, X
    2204:	5e 97       	sbiw	r26, 0x1e	; 30
    2206:	f6 01       	movw	r30, r12
    2208:	31 96       	adiw	r30, 0x01	; 1
    220a:	4f 01       	movw	r8, r30
			mLCD->setColor(BKGCOLOR);
    220c:	60 e0       	ldi	r22, 0x00	; 0
    220e:	70 e0       	ldi	r23, 0x00	; 0
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
		if (i != paramsPtr->menu){ // print all but selected
    2210:	2c 15       	cp	r18, r12
    2212:	3d 05       	cpc	r19, r13
    2214:	09 f4       	brne	.+2      	; 0x2218 <__stack+0x19>
    2216:	56 c0       	rjmp	.+172    	; 0x22c4 <__stack+0xc5>
			mLCD->setColor(BKGCOLOR);
    2218:	0e 94 7a 37 	call	0x6ef4	; 0x6ef4 <_ZN4UTFT8setColorEj>
			//              start X                 start Y        end X                      end Y
			mLCD->fillRect( (tWidth*i)+STROKEWEIGHT, STROKEWEIGHT, (tWidth*(i+1))-STROKEWEIGHT, height-STROKEWEIGHT );
    221c:	d7 01       	movw	r26, r14
    221e:	95 96       	adiw	r26, 0x25	; 37
    2220:	8c 91       	ld	r24, X
    2222:	95 97       	sbiw	r26, 0x25	; 37
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	97 96       	adiw	r26, 0x27	; 39
    2228:	0c 91       	ld	r16, X
    222a:	97 97       	sbiw	r26, 0x27	; 39
    222c:	10 e0       	ldi	r17, 0x00	; 0
    222e:	03 50       	subi	r16, 0x03	; 3
    2230:	11 09       	sbc	r17, r1
    2232:	88 9e       	mul	r8, r24
    2234:	90 01       	movw	r18, r0
    2236:	89 9e       	mul	r8, r25
    2238:	30 0d       	add	r19, r0
    223a:	98 9e       	mul	r9, r24
    223c:	30 0d       	add	r19, r0
    223e:	11 24       	eor	r1, r1
    2240:	23 50       	subi	r18, 0x03	; 3
    2242:	31 09       	sbc	r19, r1
    2244:	8c 9d       	mul	r24, r12
    2246:	b0 01       	movw	r22, r0
    2248:	8d 9d       	mul	r24, r13
    224a:	70 0d       	add	r23, r0
    224c:	9c 9d       	mul	r25, r12
    224e:	70 0d       	add	r23, r0
    2250:	11 24       	eor	r1, r1
    2252:	6d 5f       	subi	r22, 0xFD	; 253
    2254:	7f 4f       	sbci	r23, 0xFF	; 255
    2256:	43 e0       	ldi	r20, 0x03	; 3
    2258:	50 e0       	ldi	r21, 0x00	; 0
    225a:	5d 96       	adiw	r26, 0x1d	; 29
    225c:	8d 91       	ld	r24, X+
    225e:	9c 91       	ld	r25, X
    2260:	5e 97       	sbiw	r26, 0x1e	; 30
    2262:	0e 94 54 38 	call	0x70a8	; 0x70a8 <_ZN4UTFT8fillRectEiiii>
			mLCD->setColor(COLOR);
    2266:	60 e0       	ldi	r22, 0x00	; 0
    2268:	78 ef       	ldi	r23, 0xF8	; 248
    226a:	f7 01       	movw	r30, r14
    226c:	85 8d       	ldd	r24, Z+29	; 0x1d
    226e:	96 8d       	ldd	r25, Z+30	; 0x1e
    2270:	0e 94 7a 37 	call	0x6ef4	; 0x6ef4 <_ZN4UTFT8setColorEj>
			mLCD->setBackColor(BKGCOLOR);
    2274:	40 e0       	ldi	r20, 0x00	; 0
    2276:	50 e0       	ldi	r21, 0x00	; 0
    2278:	ba 01       	movw	r22, r20
    227a:	d7 01       	movw	r26, r14
    227c:	5d 96       	adiw	r26, 0x1d	; 29
    227e:	8d 91       	ld	r24, X+
    2280:	9c 91       	ld	r25, X
    2282:	5e 97       	sbiw	r26, 0x1e	; 30
    2284:	0e 94 7e 37 	call	0x6efc	; 0x6efc <_ZN4UTFT12setBackColorEm>
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
    2288:	f7 01       	movw	r30, r14
    228a:	25 a1       	ldd	r18, Z+37	; 0x25
    228c:	2c 9d       	mul	r18, r12
    228e:	c0 01       	movw	r24, r0
    2290:	2d 9d       	mul	r18, r13
    2292:	90 0d       	add	r25, r0
    2294:	11 24       	eor	r1, r1
    2296:	6c 01       	movw	r12, r24
    2298:	f3 e0       	ldi	r31, 0x03	; 3
    229a:	cf 0e       	add	r12, r31
    229c:	d1 1c       	adc	r13, r1
    229e:	b5 01       	movw	r22, r10
    22a0:	ce 01       	movw	r24, r28
    22a2:	01 96       	adiw	r24, 0x01	; 1
    22a4:	0e 94 98 46 	call	0x8d30	; 0x8d30 <_ZN6StringC1ERKS_>
    22a8:	00 e0       	ldi	r16, 0x00	; 0
    22aa:	10 e0       	ldi	r17, 0x00	; 0
    22ac:	2a e0       	ldi	r18, 0x0A	; 10
    22ae:	30 e0       	ldi	r19, 0x00	; 0
    22b0:	a6 01       	movw	r20, r12
    22b2:	be 01       	movw	r22, r28
    22b4:	6f 5f       	subi	r22, 0xFF	; 255
    22b6:	7f 4f       	sbci	r23, 0xFF	; 255
    22b8:	d7 01       	movw	r26, r14
    22ba:	5d 96       	adiw	r26, 0x1d	; 29
    22bc:	8d 91       	ld	r24, X+
    22be:	9c 91       	ld	r25, X
    22c0:	5e 97       	sbiw	r26, 0x1e	; 30
    22c2:	27 c0       	rjmp	.+78     	; 0x2312 <__stack+0x113>
		}
		else{ // print selected
			mLCD->setColor(BKGCOLOR);
    22c4:	0e 94 7a 37 	call	0x6ef4	; 0x6ef4 <_ZN4UTFT8setColorEj>
			mLCD->setBackColor(COLOR);
    22c8:	40 e0       	ldi	r20, 0x00	; 0
    22ca:	58 ef       	ldi	r21, 0xF8	; 248
    22cc:	6f ef       	ldi	r22, 0xFF	; 255
    22ce:	7f ef       	ldi	r23, 0xFF	; 255
    22d0:	f7 01       	movw	r30, r14
    22d2:	85 8d       	ldd	r24, Z+29	; 0x1d
    22d4:	96 8d       	ldd	r25, Z+30	; 0x1e
    22d6:	0e 94 7e 37 	call	0x6efc	; 0x6efc <_ZN4UTFT12setBackColorEm>
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
    22da:	d7 01       	movw	r26, r14
    22dc:	95 96       	adiw	r26, 0x25	; 37
    22de:	2c 91       	ld	r18, X
    22e0:	2c 9d       	mul	r18, r12
    22e2:	c0 01       	movw	r24, r0
    22e4:	2d 9d       	mul	r18, r13
    22e6:	90 0d       	add	r25, r0
    22e8:	11 24       	eor	r1, r1
    22ea:	6c 01       	movw	r12, r24
    22ec:	b3 e0       	ldi	r27, 0x03	; 3
    22ee:	cb 0e       	add	r12, r27
    22f0:	d1 1c       	adc	r13, r1
    22f2:	b5 01       	movw	r22, r10
    22f4:	ce 01       	movw	r24, r28
    22f6:	01 96       	adiw	r24, 0x01	; 1
    22f8:	0e 94 98 46 	call	0x8d30	; 0x8d30 <_ZN6StringC1ERKS_>
    22fc:	00 e0       	ldi	r16, 0x00	; 0
    22fe:	10 e0       	ldi	r17, 0x00	; 0
    2300:	2a e0       	ldi	r18, 0x0A	; 10
    2302:	30 e0       	ldi	r19, 0x00	; 0
    2304:	a6 01       	movw	r20, r12
    2306:	be 01       	movw	r22, r28
    2308:	6f 5f       	subi	r22, 0xFF	; 255
    230a:	7f 4f       	sbci	r23, 0xFF	; 255
    230c:	f7 01       	movw	r30, r14
    230e:	85 8d       	ldd	r24, Z+29	; 0x1d
    2310:	96 8d       	ldd	r25, Z+30	; 0x1e
    2312:	0e 94 56 3d 	call	0x7aac	; 0x7aac <_ZN4UTFT5printE6Stringiii>
    2316:	ce 01       	movw	r24, r28
    2318:	01 96       	adiw	r24, 0x01	; 1
    231a:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
	mLCD->setColor(COLOR);
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
    231e:	64 01       	movw	r12, r8
    2320:	f6 e0       	ldi	r31, 0x06	; 6
    2322:	af 0e       	add	r10, r31
    2324:	b1 1c       	adc	r11, r1
    2326:	25 e0       	ldi	r18, 0x05	; 5
    2328:	82 16       	cp	r8, r18
    232a:	91 04       	cpc	r9, r1
    232c:	09 f0       	breq	.+2      	; 0x2330 <__stack+0x131>
    232e:	60 cf       	rjmp	.-320    	; 0x21f0 <_ZN4Menu11drawTopMenuEv+0x74>
			mLCD->setColor(BKGCOLOR);
			mLCD->setBackColor(COLOR);
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
		}
	}
}
    2330:	26 96       	adiw	r28, 0x06	; 6
    2332:	0f b6       	in	r0, 0x3f	; 63
    2334:	f8 94       	cli
    2336:	de bf       	out	0x3e, r29	; 62
    2338:	0f be       	out	0x3f, r0	; 63
    233a:	cd bf       	out	0x3d, r28	; 61
    233c:	df 91       	pop	r29
    233e:	cf 91       	pop	r28
    2340:	1f 91       	pop	r17
    2342:	0f 91       	pop	r16
    2344:	ff 90       	pop	r15
    2346:	ef 90       	pop	r14
    2348:	df 90       	pop	r13
    234a:	cf 90       	pop	r12
    234c:	bf 90       	pop	r11
    234e:	af 90       	pop	r10
    2350:	9f 90       	pop	r9
    2352:	8f 90       	pop	r8
    2354:	08 95       	ret

00002356 <_ZN4Menu16drawBottomLabelsEPK6String>:
		break;
		default:
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
    2356:	4f 92       	push	r4
    2358:	5f 92       	push	r5
    235a:	6f 92       	push	r6
    235c:	7f 92       	push	r7
    235e:	8f 92       	push	r8
    2360:	9f 92       	push	r9
    2362:	af 92       	push	r10
    2364:	bf 92       	push	r11
    2366:	cf 92       	push	r12
    2368:	df 92       	push	r13
    236a:	ef 92       	push	r14
    236c:	ff 92       	push	r15
    236e:	0f 93       	push	r16
    2370:	1f 93       	push	r17
    2372:	cf 93       	push	r28
    2374:	df 93       	push	r29
    2376:	00 d0       	rcall	.+0      	; 0x2378 <_ZN4Menu16drawBottomLabelsEPK6String+0x22>
    2378:	00 d0       	rcall	.+0      	; 0x237a <_ZN4Menu16drawBottomLabelsEPK6String+0x24>
    237a:	cd b7       	in	r28, 0x3d	; 61
    237c:	de b7       	in	r29, 0x3e	; 62
    237e:	7c 01       	movw	r14, r24
    2380:	5b 01       	movw	r10, r22
	for(int i = 0; i < BLABELS; i++){
    2382:	c1 2c       	mov	r12, r1
    2384:	d1 2c       	mov	r13, r1
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
    2386:	8d e4       	ldi	r24, 0x4D	; 77
    2388:	48 2e       	mov	r4, r24
    238a:	55 24       	eor	r5, r5
    238c:	53 94       	inc	r5
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
	for(int i = 0; i < BLABELS; i++){
		mLCD->setColor(COLOR);
    238e:	60 e0       	ldi	r22, 0x00	; 0
    2390:	78 ef       	ldi	r23, 0xF8	; 248
    2392:	f7 01       	movw	r30, r14
    2394:	85 8d       	ldd	r24, Z+29	; 0x1d
    2396:	96 8d       	ldd	r25, Z+30	; 0x1e
    2398:	0e 94 7a 37 	call	0x6ef4	; 0x6ef4 <_ZN4UTFT8setColorEj>
		mLCD->setBackColor(BKGCOLOR);
    239c:	40 e0       	ldi	r20, 0x00	; 0
    239e:	50 e0       	ldi	r21, 0x00	; 0
    23a0:	ba 01       	movw	r22, r20
    23a2:	f7 01       	movw	r30, r14
    23a4:	85 8d       	ldd	r24, Z+29	; 0x1d
    23a6:	96 8d       	ldd	r25, Z+30	; 0x1e
    23a8:	0e 94 7e 37 	call	0x6efc	; 0x6efc <_ZN4UTFT12setBackColorEm>
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
    23ac:	f7 01       	movw	r30, r14
    23ae:	87 a1       	ldd	r24, Z+39	; 0x27
    23b0:	32 01       	movw	r6, r4
    23b2:	68 1a       	sub	r6, r24
    23b4:	71 08       	sbc	r7, r1
    23b6:	86 a1       	ldd	r24, Z+38	; 0x26
    23b8:	8c 9d       	mul	r24, r12
    23ba:	40 01       	movw	r8, r0
    23bc:	8d 9d       	mul	r24, r13
    23be:	90 0c       	add	r9, r0
    23c0:	11 24       	eor	r1, r1
    23c2:	f5 e0       	ldi	r31, 0x05	; 5
    23c4:	8f 0e       	add	r8, r31
    23c6:	91 1c       	adc	r9, r1
    23c8:	b5 01       	movw	r22, r10
    23ca:	ce 01       	movw	r24, r28
    23cc:	01 96       	adiw	r24, 0x01	; 1
    23ce:	0e 94 98 46 	call	0x8d30	; 0x8d30 <_ZN6StringC1ERKS_>
    23d2:	00 e0       	ldi	r16, 0x00	; 0
    23d4:	10 e0       	ldi	r17, 0x00	; 0
    23d6:	93 01       	movw	r18, r6
    23d8:	a4 01       	movw	r20, r8
    23da:	be 01       	movw	r22, r28
    23dc:	6f 5f       	subi	r22, 0xFF	; 255
    23de:	7f 4f       	sbci	r23, 0xFF	; 255
    23e0:	f7 01       	movw	r30, r14
    23e2:	85 8d       	ldd	r24, Z+29	; 0x1d
    23e4:	96 8d       	ldd	r25, Z+30	; 0x1e
    23e6:	0e 94 56 3d 	call	0x7aac	; 0x7aac <_ZN4UTFT5printE6Stringiii>
    23ea:	ce 01       	movw	r24, r28
    23ec:	01 96       	adiw	r24, 0x01	; 1
    23ee:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
		default:
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
	for(int i = 0; i < BLABELS; i++){
    23f2:	ff ef       	ldi	r31, 0xFF	; 255
    23f4:	cf 1a       	sub	r12, r31
    23f6:	df 0a       	sbc	r13, r31
    23f8:	86 e0       	ldi	r24, 0x06	; 6
    23fa:	a8 0e       	add	r10, r24
    23fc:	b1 1c       	adc	r11, r1
    23fe:	e4 e0       	ldi	r30, 0x04	; 4
    2400:	ce 16       	cp	r12, r30
    2402:	d1 04       	cpc	r13, r1
    2404:	21 f6       	brne	.-120    	; 0x238e <_ZN4Menu16drawBottomLabelsEPK6String+0x38>
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
	}
}
    2406:	26 96       	adiw	r28, 0x06	; 6
    2408:	0f b6       	in	r0, 0x3f	; 63
    240a:	f8 94       	cli
    240c:	de bf       	out	0x3e, r29	; 62
    240e:	0f be       	out	0x3f, r0	; 63
    2410:	cd bf       	out	0x3d, r28	; 61
    2412:	df 91       	pop	r29
    2414:	cf 91       	pop	r28
    2416:	1f 91       	pop	r17
    2418:	0f 91       	pop	r16
    241a:	ff 90       	pop	r15
    241c:	ef 90       	pop	r14
    241e:	df 90       	pop	r13
    2420:	cf 90       	pop	r12
    2422:	bf 90       	pop	r11
    2424:	af 90       	pop	r10
    2426:	9f 90       	pop	r9
    2428:	8f 90       	pop	r8
    242a:	7f 90       	pop	r7
    242c:	6f 90       	pop	r6
    242e:	5f 90       	pop	r5
    2430:	4f 90       	pop	r4
    2432:	08 95       	ret

00002434 <_ZN4Menu14drawBottomMenuEv>:
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
		}
	}
}

void Menu::drawBottomMenu() {
    2434:	cf 92       	push	r12
    2436:	df 92       	push	r13
    2438:	ef 92       	push	r14
    243a:	ff 92       	push	r15
    243c:	0f 93       	push	r16
    243e:	1f 93       	push	r17
    2440:	cf 93       	push	r28
    2442:	df 93       	push	r29
    2444:	ec 01       	movw	r28, r24
	mLCD->setFont(sFont); // set font
    2446:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2448:	78 a1       	ldd	r23, Y+32	; 0x20
    244a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    244c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    244e:	0e 94 09 3f 	call	0x7e12	; 0x7e12 <_ZN4UTFT7setFontEPh>
	// draw outer rect
	mLCD->setColor(COLOR);
    2452:	60 e0       	ldi	r22, 0x00	; 0
    2454:	78 ef       	ldi	r23, 0xF8	; 248
    2456:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2458:	9e 8d       	ldd	r25, Y+30	; 0x1e
    245a:	0e 94 7a 37 	call	0x6ef4	; 0x6ef4 <_ZN4UTFT8setColorEj>
	mLCD->fillRect(ORIGIN, HEIGHT-height, WIDTH, HEIGHT);
    245e:	8f a1       	ldd	r24, Y+39	; 0x27
    2460:	4f e3       	ldi	r20, 0x3F	; 63
    2462:	51 e0       	ldi	r21, 0x01	; 1
    2464:	48 1b       	sub	r20, r24
    2466:	51 09       	sbc	r21, r1
    2468:	0f e3       	ldi	r16, 0x3F	; 63
    246a:	11 e0       	ldi	r17, 0x01	; 1
    246c:	2f ed       	ldi	r18, 0xDF	; 223
    246e:	31 e0       	ldi	r19, 0x01	; 1
    2470:	60 e0       	ldi	r22, 0x00	; 0
    2472:	70 e0       	ldi	r23, 0x00	; 0
    2474:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2476:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2478:	0e 94 54 38 	call	0x70a8	; 0x70a8 <_ZN4UTFT8fillRectEiiii>
	// draw inner rects
	mLCD->setColor(BKGCOLOR);
    247c:	60 e0       	ldi	r22, 0x00	; 0
    247e:	70 e0       	ldi	r23, 0x00	; 0
    2480:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2482:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2484:	0e 94 7a 37 	call	0x6ef4	; 0x6ef4 <_ZN4UTFT8setColorEj>
	for(int i = 0; i < BLABELS; i++){
    2488:	e1 2c       	mov	r14, r1
    248a:	f1 2c       	mov	r15, r1
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
    248c:	82 e4       	ldi	r24, 0x42	; 66
    248e:	c8 2e       	mov	r12, r24
    2490:	dd 24       	eor	r13, r13
    2492:	d3 94       	inc	r13
    2494:	8e a1       	ldd	r24, Y+38	; 0x26
    2496:	90 e0       	ldi	r25, 0x00	; 0
    2498:	2f ef       	ldi	r18, 0xFF	; 255
    249a:	e2 1a       	sub	r14, r18
    249c:	f2 0a       	sbc	r15, r18
    249e:	8e 9d       	mul	r24, r14
    24a0:	b0 01       	movw	r22, r0
    24a2:	8f 9d       	mul	r24, r15
    24a4:	70 0d       	add	r23, r0
    24a6:	9e 9d       	mul	r25, r14
    24a8:	70 0d       	add	r23, r0
    24aa:	11 24       	eor	r1, r1
    24ac:	9b 01       	movw	r18, r22
    24ae:	23 50       	subi	r18, 0x03	; 3
    24b0:	31 09       	sbc	r19, r1
    24b2:	4f a1       	ldd	r20, Y+39	; 0x27
    24b4:	f6 01       	movw	r30, r12
    24b6:	e4 1b       	sub	r30, r20
    24b8:	f1 09       	sbc	r31, r1
    24ba:	af 01       	movw	r20, r30
    24bc:	68 1b       	sub	r22, r24
    24be:	79 0b       	sbc	r23, r25
    24c0:	6d 5f       	subi	r22, 0xFD	; 253
    24c2:	7f 4f       	sbci	r23, 0xFF	; 255
    24c4:	0c e3       	ldi	r16, 0x3C	; 60
    24c6:	11 e0       	ldi	r17, 0x01	; 1
    24c8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    24ca:	9e 8d       	ldd	r25, Y+30	; 0x1e
    24cc:	0e 94 54 38 	call	0x70a8	; 0x70a8 <_ZN4UTFT8fillRectEiiii>
	// draw outer rect
	mLCD->setColor(COLOR);
	mLCD->fillRect(ORIGIN, HEIGHT-height, WIDTH, HEIGHT);
	// draw inner rects
	mLCD->setColor(BKGCOLOR);
	for(int i = 0; i < BLABELS; i++){
    24d0:	f4 e0       	ldi	r31, 0x04	; 4
    24d2:	ef 16       	cp	r14, r31
    24d4:	f1 04       	cpc	r15, r1
    24d6:	f1 f6       	brne	.-68     	; 0x2494 <_ZN4Menu14drawBottomMenuEv+0x60>
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
    24d8:	eb a1       	ldd	r30, Y+35	; 0x23
    24da:	fc a1       	ldd	r31, Y+36	; 0x24
    24dc:	80 81       	ld	r24, Z
    24de:	82 30       	cpi	r24, 0x02	; 2
    24e0:	91 f0       	breq	.+36     	; 0x2506 <_ZN4Menu14drawBottomMenuEv+0xd2>
    24e2:	38 f4       	brcc	.+14     	; 0x24f2 <_ZN4Menu14drawBottomMenuEv+0xbe>
    24e4:	88 23       	and	r24, r24
    24e6:	61 f0       	breq	.+24     	; 0x2500 <_ZN4Menu14drawBottomMenuEv+0xcc>
    24e8:	81 30       	cpi	r24, 0x01	; 1
    24ea:	e1 f4       	brne	.+56     	; 0x2524 <_ZN4Menu14drawBottomMenuEv+0xf0>
		case 0:
			drawBottomLabels(oscLabels);
		break;
		case 1:
			drawBottomLabels(filLabels);
    24ec:	6c ee       	ldi	r22, 0xEC	; 236
    24ee:	74 e0       	ldi	r23, 0x04	; 4
    24f0:	0f c0       	rjmp	.+30     	; 0x2510 <_ZN4Menu14drawBottomMenuEv+0xdc>
	for(int i = 0; i < BLABELS; i++){
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
    24f2:	83 30       	cpi	r24, 0x03	; 3
    24f4:	59 f0       	breq	.+22     	; 0x250c <_ZN4Menu14drawBottomMenuEv+0xd8>
    24f6:	84 30       	cpi	r24, 0x04	; 4
    24f8:	a9 f4       	brne	.+42     	; 0x2524 <_ZN4Menu14drawBottomMenuEv+0xf0>
		break;
		case 3:
			drawBottomLabels(fxLabels);
		break;
		case 4:
			drawBottomLabels(settLabels);
    24fa:	64 ea       	ldi	r22, 0xA4	; 164
    24fc:	74 e0       	ldi	r23, 0x04	; 4
    24fe:	08 c0       	rjmp	.+16     	; 0x2510 <_ZN4Menu14drawBottomMenuEv+0xdc>
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
		case 0:
			drawBottomLabels(oscLabels);
    2500:	64 e0       	ldi	r22, 0x04	; 4
    2502:	75 e0       	ldi	r23, 0x05	; 5
    2504:	05 c0       	rjmp	.+10     	; 0x2510 <_ZN4Menu14drawBottomMenuEv+0xdc>
		break;
		case 1:
			drawBottomLabels(filLabels);
		break;
		case 2:
			drawBottomLabels(envLabels);
    2506:	64 ed       	ldi	r22, 0xD4	; 212
    2508:	74 e0       	ldi	r23, 0x04	; 4
    250a:	02 c0       	rjmp	.+4      	; 0x2510 <_ZN4Menu14drawBottomMenuEv+0xdc>
		break;
		case 3:
			drawBottomLabels(fxLabels);
    250c:	6c eb       	ldi	r22, 0xBC	; 188
    250e:	74 e0       	ldi	r23, 0x04	; 4
		break;
		case 4:
			drawBottomLabels(settLabels);
    2510:	ce 01       	movw	r24, r28
		break;
		default:
		break;
	}
}
    2512:	df 91       	pop	r29
    2514:	cf 91       	pop	r28
    2516:	1f 91       	pop	r17
    2518:	0f 91       	pop	r16
    251a:	ff 90       	pop	r15
    251c:	ef 90       	pop	r14
    251e:	df 90       	pop	r13
    2520:	cf 90       	pop	r12
		break;
		case 3:
			drawBottomLabels(fxLabels);
		break;
		case 4:
			drawBottomLabels(settLabels);
    2522:	19 cf       	rjmp	.-462    	; 0x2356 <_ZN4Menu16drawBottomLabelsEPK6String>
		break;
		default:
		break;
	}
}
    2524:	df 91       	pop	r29
    2526:	cf 91       	pop	r28
    2528:	1f 91       	pop	r17
    252a:	0f 91       	pop	r16
    252c:	ff 90       	pop	r15
    252e:	ef 90       	pop	r14
    2530:	df 90       	pop	r13
    2532:	cf 90       	pop	r12
    2534:	08 95       	ret

00002536 <_ZN4Menu9drawMenusEv>:
	mLCD = u;
	sFont = sF;
	bFont = bF;
}

void Menu::drawMenus(){
    2536:	cf 93       	push	r28
    2538:	df 93       	push	r29
    253a:	ec 01       	movw	r28, r24
	drawBottomMenu();
    253c:	7b df       	rcall	.-266    	; 0x2434 <_ZN4Menu14drawBottomMenuEv>
	drawTopMenu();
    253e:	ce 01       	movw	r24, r28
}
    2540:	df 91       	pop	r29
	bFont = bF;
}

void Menu::drawMenus(){
	drawBottomMenu();
	drawTopMenu();
    2542:	cf 91       	pop	r28
    2544:	1b ce       	rjmp	.-970    	; 0x217c <_ZN4Menu11drawTopMenuEv>

00002546 <_ZN4Menu10drawValuesEv>:
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
	}
}
void Menu::drawValues() {
    2546:	6f 92       	push	r6
    2548:	7f 92       	push	r7
    254a:	8f 92       	push	r8
    254c:	9f 92       	push	r9
    254e:	af 92       	push	r10
    2550:	bf 92       	push	r11
    2552:	cf 92       	push	r12
    2554:	df 92       	push	r13
    2556:	ef 92       	push	r14
    2558:	ff 92       	push	r15
    255a:	0f 93       	push	r16
    255c:	1f 93       	push	r17
    255e:	cf 93       	push	r28
    2560:	df 93       	push	r29
    2562:	00 d0       	rcall	.+0      	; 0x2564 <_ZN4Menu10drawValuesEv+0x1e>
    2564:	00 d0       	rcall	.+0      	; 0x2566 <_ZN4Menu10drawValuesEv+0x20>
    2566:	cd b7       	in	r28, 0x3d	; 61
    2568:	de b7       	in	r29, 0x3e	; 62
    256a:	3c 01       	movw	r6, r24
	byte i = 0;
	mLCD->setFont(sFont);
    256c:	dc 01       	movw	r26, r24
    256e:	5f 96       	adiw	r26, 0x1f	; 31
    2570:	6d 91       	ld	r22, X+
    2572:	7c 91       	ld	r23, X
    2574:	90 97       	sbiw	r26, 0x20	; 32
    2576:	5d 96       	adiw	r26, 0x1d	; 29
    2578:	8d 91       	ld	r24, X+
    257a:	9c 91       	ld	r25, X
    257c:	5e 97       	sbiw	r26, 0x1e	; 30
    257e:	0e 94 09 3f 	call	0x7e12	; 0x7e12 <_ZN4UTFT7setFontEPh>
	mLCD->setColor(COLOR);
    2582:	60 e0       	ldi	r22, 0x00	; 0
    2584:	78 ef       	ldi	r23, 0xF8	; 248
    2586:	f3 01       	movw	r30, r6
    2588:	85 8d       	ldd	r24, Z+29	; 0x1d
    258a:	96 8d       	ldd	r25, Z+30	; 0x1e
    258c:	0e 94 7a 37 	call	0x6ef4	; 0x6ef4 <_ZN4UTFT8setColorEj>
	mLCD->setBackColor(BKGCOLOR);
    2590:	40 e0       	ldi	r20, 0x00	; 0
    2592:	50 e0       	ldi	r21, 0x00	; 0
    2594:	ba 01       	movw	r22, r20
    2596:	d3 01       	movw	r26, r6
    2598:	5d 96       	adiw	r26, 0x1d	; 29
    259a:	8d 91       	ld	r24, X+
    259c:	9c 91       	ld	r25, X
    259e:	5e 97       	sbiw	r26, 0x1e	; 30
    25a0:	0e 94 7e 37 	call	0x6efc	; 0x6efc <_ZN4UTFT12setBackColorEm>
	switch(paramsPtr->menu){
    25a4:	d3 01       	movw	r26, r6
    25a6:	93 96       	adiw	r26, 0x23	; 35
    25a8:	ed 91       	ld	r30, X+
    25aa:	fc 91       	ld	r31, X
    25ac:	94 97       	sbiw	r26, 0x24	; 36
    25ae:	80 81       	ld	r24, Z
    25b0:	82 30       	cpi	r24, 0x02	; 2
    25b2:	09 f4       	brne	.+2      	; 0x25b6 <_ZN4Menu10drawValuesEv+0x70>
    25b4:	9e c1       	rjmp	.+828    	; 0x28f2 <_ZN4Menu10drawValuesEv+0x3ac>
    25b6:	08 f0       	brcs	.+2      	; 0x25ba <_ZN4Menu10drawValuesEv+0x74>
    25b8:	76 c0       	rjmp	.+236    	; 0x26a6 <_ZN4Menu10drawValuesEv+0x160>
    25ba:	88 23       	and	r24, r24
    25bc:	09 f4       	brne	.+2      	; 0x25c0 <_ZN4Menu10drawValuesEv+0x7a>
    25be:	ee c0       	rjmp	.+476    	; 0x279c <_ZN4Menu10drawValuesEv+0x256>
    25c0:	81 30       	cpi	r24, 0x01	; 1
    25c2:	09 f0       	breq	.+2      	; 0x25c6 <_ZN4Menu10drawValuesEv+0x80>
    25c4:	85 c2       	rjmp	.+1290   	; 0x2ad0 <_ZN4Menu10drawValuesEv+0x58a>
			mLCD->print(waveNames[paramsPtr->lfoWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumF(paramsPtr->lfoFreq, 1, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 1:
			mLCD->printNumI(paramsPtr->filType, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    25c6:	d3 01       	movw	r26, r6
    25c8:	97 96       	adiw	r26, 0x27	; 39
    25ca:	8c 91       	ld	r24, X
    25cc:	97 97       	sbiw	r26, 0x27	; 39
    25ce:	1d e4       	ldi	r17, 0x4D	; 77
    25d0:	a1 2e       	mov	r10, r17
    25d2:	bb 24       	eor	r11, r11
    25d4:	b3 94       	inc	r11
    25d6:	85 01       	movw	r16, r10
    25d8:	08 1b       	sub	r16, r24
    25da:	11 09       	sbc	r17, r1
    25dc:	96 96       	adiw	r26, 0x26	; 38
    25de:	2c 91       	ld	r18, X
    25e0:	96 97       	sbiw	r26, 0x26	; 38
    25e2:	26 95       	lsr	r18
    25e4:	30 e0       	ldi	r19, 0x00	; 0
    25e6:	2d 5f       	subi	r18, 0xFD	; 253
    25e8:	3f 4f       	sbci	r19, 0xFF	; 255
    25ea:	41 85       	ldd	r20, Z+9	; 0x09
    25ec:	50 e0       	ldi	r21, 0x00	; 0
    25ee:	60 e0       	ldi	r22, 0x00	; 0
    25f0:	70 e0       	ldi	r23, 0x00	; 0
    25f2:	80 e2       	ldi	r24, 0x20	; 32
    25f4:	c8 2e       	mov	r12, r24
    25f6:	e1 2c       	mov	r14, r1
    25f8:	f1 2c       	mov	r15, r1
    25fa:	5d 96       	adiw	r26, 0x1d	; 29
    25fc:	8d 91       	ld	r24, X+
    25fe:	9c 91       	ld	r25, X
    2600:	5e 97       	sbiw	r26, 0x1e	; 30
    2602:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->filFreq, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2606:	f3 01       	movw	r30, r6
    2608:	86 a1       	ldd	r24, Z+38	; 0x26
    260a:	97 a1       	ldd	r25, Z+39	; 0x27
    260c:	85 01       	movw	r16, r10
    260e:	09 1b       	sub	r16, r25
    2610:	11 09       	sbc	r17, r1
    2612:	28 2f       	mov	r18, r24
    2614:	30 e0       	ldi	r19, 0x00	; 0
    2616:	2d 5f       	subi	r18, 0xFD	; 253
    2618:	3f 4f       	sbci	r19, 0xFF	; 255
    261a:	86 95       	lsr	r24
    261c:	28 0f       	add	r18, r24
    261e:	31 1d       	adc	r19, r1
    2620:	03 a0       	ldd	r0, Z+35	; 0x23
    2622:	f4 a1       	ldd	r31, Z+36	; 0x24
    2624:	e0 2d       	mov	r30, r0
    2626:	42 85       	ldd	r20, Z+10	; 0x0a
    2628:	53 85       	ldd	r21, Z+11	; 0x0b
    262a:	05 2e       	mov	r0, r21
    262c:	00 0c       	add	r0, r0
    262e:	66 0b       	sbc	r22, r22
    2630:	77 0b       	sbc	r23, r23
    2632:	d3 01       	movw	r26, r6
    2634:	5d 96       	adiw	r26, 0x1d	; 29
    2636:	8d 91       	ld	r24, X+
    2638:	9c 91       	ld	r25, X
    263a:	5e 97       	sbiw	r26, 0x1e	; 30
    263c:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->filRes, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2640:	f3 01       	movw	r30, r6
    2642:	86 a1       	ldd	r24, Z+38	; 0x26
    2644:	97 a1       	ldd	r25, Z+39	; 0x27
    2646:	85 01       	movw	r16, r10
    2648:	09 1b       	sub	r16, r25
    264a:	11 09       	sbc	r17, r1
    264c:	28 2f       	mov	r18, r24
    264e:	30 e0       	ldi	r19, 0x00	; 0
    2650:	22 0f       	add	r18, r18
    2652:	33 1f       	adc	r19, r19
    2654:	2d 5f       	subi	r18, 0xFD	; 253
    2656:	3f 4f       	sbci	r19, 0xFF	; 255
    2658:	86 95       	lsr	r24
    265a:	28 0f       	add	r18, r24
    265c:	31 1d       	adc	r19, r1
    265e:	03 a0       	ldd	r0, Z+35	; 0x23
    2660:	f4 a1       	ldd	r31, Z+36	; 0x24
    2662:	e0 2d       	mov	r30, r0
    2664:	44 85       	ldd	r20, Z+12	; 0x0c
    2666:	50 e0       	ldi	r21, 0x00	; 0
    2668:	60 e0       	ldi	r22, 0x00	; 0
    266a:	70 e0       	ldi	r23, 0x00	; 0
    266c:	d3 01       	movw	r26, r6
    266e:	5d 96       	adiw	r26, 0x1d	; 29
    2670:	8d 91       	ld	r24, X+
    2672:	9c 91       	ld	r25, X
    2674:	5e 97       	sbiw	r26, 0x1e	; 30
    2676:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->filLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    267a:	f3 01       	movw	r30, r6
    267c:	86 a1       	ldd	r24, Z+38	; 0x26
    267e:	97 a1       	ldd	r25, Z+39	; 0x27
    2680:	85 01       	movw	r16, r10
    2682:	09 1b       	sub	r16, r25
    2684:	11 09       	sbc	r17, r1
    2686:	f3 e0       	ldi	r31, 0x03	; 3
    2688:	8f 9f       	mul	r24, r31
    268a:	90 01       	movw	r18, r0
    268c:	11 24       	eor	r1, r1
    268e:	2d 5f       	subi	r18, 0xFD	; 253
    2690:	3f 4f       	sbci	r19, 0xFF	; 255
    2692:	86 95       	lsr	r24
    2694:	28 0f       	add	r18, r24
    2696:	31 1d       	adc	r19, r1
    2698:	d3 01       	movw	r26, r6
    269a:	93 96       	adiw	r26, 0x23	; 35
    269c:	ed 91       	ld	r30, X+
    269e:	fc 91       	ld	r31, X
    26a0:	94 97       	sbiw	r26, 0x24	; 36
    26a2:	45 85       	ldd	r20, Z+13	; 0x0d
    26a4:	0a c2       	rjmp	.+1044   	; 0x2aba <_ZN4Menu10drawValuesEv+0x574>
void Menu::drawValues() {
	byte i = 0;
	mLCD->setFont(sFont);
	mLCD->setColor(COLOR);
	mLCD->setBackColor(BKGCOLOR);
	switch(paramsPtr->menu){
    26a6:	83 30       	cpi	r24, 0x03	; 3
    26a8:	09 f4       	brne	.+2      	; 0x26ac <_ZN4Menu10drawValuesEv+0x166>
    26aa:	9a c1       	rjmp	.+820    	; 0x29e0 <_ZN4Menu10drawValuesEv+0x49a>
    26ac:	84 30       	cpi	r24, 0x04	; 4
    26ae:	09 f0       	breq	.+2      	; 0x26b2 <_ZN4Menu10drawValuesEv+0x16c>
    26b0:	0f c2       	rjmp	.+1054   	; 0x2ad0 <_ZN4Menu10drawValuesEv+0x58a>
			mLCD->printNumI(paramsPtr->fxParam, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumI(paramsPtr->fxLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 4:
			mLCD->printNumI(paramsPtr->inPitch, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    26b2:	d3 01       	movw	r26, r6
    26b4:	97 96       	adiw	r26, 0x27	; 39
    26b6:	8c 91       	ld	r24, X
    26b8:	97 97       	sbiw	r26, 0x27	; 39
    26ba:	9d e4       	ldi	r25, 0x4D	; 77
    26bc:	a9 2e       	mov	r10, r25
    26be:	bb 24       	eor	r11, r11
    26c0:	b3 94       	inc	r11
    26c2:	85 01       	movw	r16, r10
    26c4:	08 1b       	sub	r16, r24
    26c6:	11 09       	sbc	r17, r1
    26c8:	96 96       	adiw	r26, 0x26	; 38
    26ca:	2c 91       	ld	r18, X
    26cc:	96 97       	sbiw	r26, 0x26	; 38
    26ce:	26 95       	lsr	r18
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	2d 5f       	subi	r18, 0xFD	; 253
    26d4:	3f 4f       	sbci	r19, 0xFF	; 255
    26d6:	41 8d       	ldd	r20, Z+25	; 0x19
    26d8:	04 2e       	mov	r0, r20
    26da:	00 0c       	add	r0, r0
    26dc:	55 0b       	sbc	r21, r21
    26de:	66 0b       	sbc	r22, r22
    26e0:	77 0b       	sbc	r23, r23
    26e2:	e0 e2       	ldi	r30, 0x20	; 32
    26e4:	ce 2e       	mov	r12, r30
    26e6:	e1 2c       	mov	r14, r1
    26e8:	f1 2c       	mov	r15, r1
    26ea:	5d 96       	adiw	r26, 0x1d	; 29
    26ec:	8d 91       	ld	r24, X+
    26ee:	9c 91       	ld	r25, X
    26f0:	5e 97       	sbiw	r26, 0x1e	; 30
    26f2:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->inEnv, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    26f6:	f3 01       	movw	r30, r6
    26f8:	86 a1       	ldd	r24, Z+38	; 0x26
    26fa:	97 a1       	ldd	r25, Z+39	; 0x27
    26fc:	85 01       	movw	r16, r10
    26fe:	09 1b       	sub	r16, r25
    2700:	11 09       	sbc	r17, r1
    2702:	28 2f       	mov	r18, r24
    2704:	30 e0       	ldi	r19, 0x00	; 0
    2706:	2d 5f       	subi	r18, 0xFD	; 253
    2708:	3f 4f       	sbci	r19, 0xFF	; 255
    270a:	86 95       	lsr	r24
    270c:	28 0f       	add	r18, r24
    270e:	31 1d       	adc	r19, r1
    2710:	03 a0       	ldd	r0, Z+35	; 0x23
    2712:	f4 a1       	ldd	r31, Z+36	; 0x24
    2714:	e0 2d       	mov	r30, r0
    2716:	42 8d       	ldd	r20, Z+26	; 0x1a
    2718:	50 e0       	ldi	r21, 0x00	; 0
    271a:	60 e0       	ldi	r22, 0x00	; 0
    271c:	70 e0       	ldi	r23, 0x00	; 0
    271e:	d3 01       	movw	r26, r6
    2720:	5d 96       	adiw	r26, 0x1d	; 29
    2722:	8d 91       	ld	r24, X+
    2724:	9c 91       	ld	r25, X
    2726:	5e 97       	sbiw	r26, 0x1e	; 30
    2728:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->filEnv, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    272c:	f3 01       	movw	r30, r6
    272e:	86 a1       	ldd	r24, Z+38	; 0x26
    2730:	97 a1       	ldd	r25, Z+39	; 0x27
    2732:	85 01       	movw	r16, r10
    2734:	09 1b       	sub	r16, r25
    2736:	11 09       	sbc	r17, r1
    2738:	28 2f       	mov	r18, r24
    273a:	30 e0       	ldi	r19, 0x00	; 0
    273c:	22 0f       	add	r18, r18
    273e:	33 1f       	adc	r19, r19
    2740:	2d 5f       	subi	r18, 0xFD	; 253
    2742:	3f 4f       	sbci	r19, 0xFF	; 255
    2744:	86 95       	lsr	r24
    2746:	28 0f       	add	r18, r24
    2748:	31 1d       	adc	r19, r1
    274a:	03 a0       	ldd	r0, Z+35	; 0x23
    274c:	f4 a1       	ldd	r31, Z+36	; 0x24
    274e:	e0 2d       	mov	r30, r0
    2750:	43 8d       	ldd	r20, Z+27	; 0x1b
    2752:	04 2e       	mov	r0, r20
    2754:	00 0c       	add	r0, r0
    2756:	55 0b       	sbc	r21, r21
    2758:	66 0b       	sbc	r22, r22
    275a:	77 0b       	sbc	r23, r23
    275c:	d3 01       	movw	r26, r6
    275e:	5d 96       	adiw	r26, 0x1d	; 29
    2760:	8d 91       	ld	r24, X+
    2762:	9c 91       	ld	r25, X
    2764:	5e 97       	sbiw	r26, 0x1e	; 30
    2766:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->preset, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    276a:	f3 01       	movw	r30, r6
    276c:	86 a1       	ldd	r24, Z+38	; 0x26
    276e:	97 a1       	ldd	r25, Z+39	; 0x27
    2770:	85 01       	movw	r16, r10
    2772:	09 1b       	sub	r16, r25
    2774:	11 09       	sbc	r17, r1
    2776:	f3 e0       	ldi	r31, 0x03	; 3
    2778:	8f 9f       	mul	r24, r31
    277a:	90 01       	movw	r18, r0
    277c:	11 24       	eor	r1, r1
    277e:	2d 5f       	subi	r18, 0xFD	; 253
    2780:	3f 4f       	sbci	r19, 0xFF	; 255
    2782:	86 95       	lsr	r24
    2784:	28 0f       	add	r18, r24
    2786:	31 1d       	adc	r19, r1
    2788:	d3 01       	movw	r26, r6
    278a:	93 96       	adiw	r26, 0x23	; 35
    278c:	ed 91       	ld	r30, X+
    278e:	fc 91       	ld	r31, X
    2790:	94 97       	sbiw	r26, 0x24	; 36
    2792:	44 8d       	ldd	r20, Z+28	; 0x1c
    2794:	50 e0       	ldi	r21, 0x00	; 0
    2796:	60 e0       	ldi	r22, 0x00	; 0
    2798:	70 e0       	ldi	r23, 0x00	; 0
    279a:	94 c1       	rjmp	.+808    	; 0x2ac4 <_ZN4Menu10drawValuesEv+0x57e>
	mLCD->setFont(sFont);
	mLCD->setColor(COLOR);
	mLCD->setBackColor(BKGCOLOR);
	switch(paramsPtr->menu){
		case 0:
			mLCD->print(waveNames[paramsPtr->oscWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    279c:	d3 01       	movw	r26, r6
    279e:	97 96       	adiw	r26, 0x27	; 39
    27a0:	8c 91       	ld	r24, X
    27a2:	97 97       	sbiw	r26, 0x27	; 39
    27a4:	2d e4       	ldi	r18, 0x4D	; 77
    27a6:	a2 2e       	mov	r10, r18
    27a8:	bb 24       	eor	r11, r11
    27aa:	b3 94       	inc	r11
    27ac:	65 01       	movw	r12, r10
    27ae:	c8 1a       	sub	r12, r24
    27b0:	d1 08       	sbc	r13, r1
    27b2:	96 96       	adiw	r26, 0x26	; 38
    27b4:	ec 90       	ld	r14, X
    27b6:	e6 94       	lsr	r14
    27b8:	f1 2c       	mov	r15, r1
    27ba:	b3 e0       	ldi	r27, 0x03	; 3
    27bc:	eb 0e       	add	r14, r27
    27be:	f1 1c       	adc	r15, r1
    27c0:	61 81       	ldd	r22, Z+1	; 0x01
    27c2:	36 e0       	ldi	r19, 0x06	; 6
    27c4:	93 2e       	mov	r9, r19
    27c6:	96 9e       	mul	r9, r22
    27c8:	b0 01       	movw	r22, r0
    27ca:	11 24       	eor	r1, r1
    27cc:	64 57       	subi	r22, 0x74	; 116
    27ce:	7b 4f       	sbci	r23, 0xFB	; 251
    27d0:	ce 01       	movw	r24, r28
    27d2:	01 96       	adiw	r24, 0x01	; 1
    27d4:	0e 94 98 46 	call	0x8d30	; 0x8d30 <_ZN6StringC1ERKS_>
    27d8:	00 e0       	ldi	r16, 0x00	; 0
    27da:	10 e0       	ldi	r17, 0x00	; 0
    27dc:	96 01       	movw	r18, r12
    27de:	a7 01       	movw	r20, r14
    27e0:	be 01       	movw	r22, r28
    27e2:	6f 5f       	subi	r22, 0xFF	; 255
    27e4:	7f 4f       	sbci	r23, 0xFF	; 255
    27e6:	f3 01       	movw	r30, r6
    27e8:	85 8d       	ldd	r24, Z+29	; 0x1d
    27ea:	96 8d       	ldd	r25, Z+30	; 0x1e
    27ec:	0e 94 56 3d 	call	0x7aac	; 0x7aac <_ZN4UTFT5printE6Stringiii>
    27f0:	ce 01       	movw	r24, r28
    27f2:	01 96       	adiw	r24, 0x01	; 1
    27f4:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
			i++;
			mLCD->printNumI(paramsPtr->oscFreq, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    27f8:	d3 01       	movw	r26, r6
    27fa:	96 96       	adiw	r26, 0x26	; 38
    27fc:	8c 91       	ld	r24, X
    27fe:	96 97       	sbiw	r26, 0x26	; 38
    2800:	97 96       	adiw	r26, 0x27	; 39
    2802:	9c 91       	ld	r25, X
    2804:	97 97       	sbiw	r26, 0x27	; 39
    2806:	85 01       	movw	r16, r10
    2808:	09 1b       	sub	r16, r25
    280a:	11 09       	sbc	r17, r1
    280c:	28 2f       	mov	r18, r24
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	2d 5f       	subi	r18, 0xFD	; 253
    2812:	3f 4f       	sbci	r19, 0xFF	; 255
    2814:	86 95       	lsr	r24
    2816:	28 0f       	add	r18, r24
    2818:	31 1d       	adc	r19, r1
    281a:	93 96       	adiw	r26, 0x23	; 35
    281c:	ed 91       	ld	r30, X+
    281e:	fc 91       	ld	r31, X
    2820:	94 97       	sbiw	r26, 0x24	; 36
    2822:	42 81       	ldd	r20, Z+2	; 0x02
    2824:	53 81       	ldd	r21, Z+3	; 0x03
    2826:	05 2e       	mov	r0, r21
    2828:	00 0c       	add	r0, r0
    282a:	66 0b       	sbc	r22, r22
    282c:	77 0b       	sbc	r23, r23
    282e:	e0 e2       	ldi	r30, 0x20	; 32
    2830:	ce 2e       	mov	r12, r30
    2832:	e1 2c       	mov	r14, r1
    2834:	f1 2c       	mov	r15, r1
    2836:	5d 96       	adiw	r26, 0x1d	; 29
    2838:	8d 91       	ld	r24, X+
    283a:	9c 91       	ld	r25, X
    283c:	5e 97       	sbiw	r26, 0x1e	; 30
    283e:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->print(waveNames[paramsPtr->lfoWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2842:	f3 01       	movw	r30, r6
    2844:	87 a1       	ldd	r24, Z+39	; 0x27
    2846:	75 01       	movw	r14, r10
    2848:	e8 1a       	sub	r14, r24
    284a:	f1 08       	sbc	r15, r1
    284c:	86 a1       	ldd	r24, Z+38	; 0x26
    284e:	c8 2e       	mov	r12, r24
    2850:	d1 2c       	mov	r13, r1
    2852:	cc 0c       	add	r12, r12
    2854:	dd 1c       	adc	r13, r13
    2856:	f3 e0       	ldi	r31, 0x03	; 3
    2858:	cf 0e       	add	r12, r31
    285a:	d1 1c       	adc	r13, r1
    285c:	86 95       	lsr	r24
    285e:	c8 0e       	add	r12, r24
    2860:	d1 1c       	adc	r13, r1
    2862:	d3 01       	movw	r26, r6
    2864:	93 96       	adiw	r26, 0x23	; 35
    2866:	ed 91       	ld	r30, X+
    2868:	fc 91       	ld	r31, X
    286a:	94 97       	sbiw	r26, 0x24	; 36
    286c:	64 81       	ldd	r22, Z+4	; 0x04
    286e:	96 9e       	mul	r9, r22
    2870:	b0 01       	movw	r22, r0
    2872:	11 24       	eor	r1, r1
    2874:	64 57       	subi	r22, 0x74	; 116
    2876:	7b 4f       	sbci	r23, 0xFB	; 251
    2878:	ce 01       	movw	r24, r28
    287a:	01 96       	adiw	r24, 0x01	; 1
    287c:	0e 94 98 46 	call	0x8d30	; 0x8d30 <_ZN6StringC1ERKS_>
    2880:	00 e0       	ldi	r16, 0x00	; 0
    2882:	10 e0       	ldi	r17, 0x00	; 0
    2884:	97 01       	movw	r18, r14
    2886:	a6 01       	movw	r20, r12
    2888:	be 01       	movw	r22, r28
    288a:	6f 5f       	subi	r22, 0xFF	; 255
    288c:	7f 4f       	sbci	r23, 0xFF	; 255
    288e:	f3 01       	movw	r30, r6
    2890:	85 8d       	ldd	r24, Z+29	; 0x1d
    2892:	96 8d       	ldd	r25, Z+30	; 0x1e
    2894:	0e 94 56 3d 	call	0x7aac	; 0x7aac <_ZN4UTFT5printE6Stringiii>
    2898:	ce 01       	movw	r24, r28
    289a:	01 96       	adiw	r24, 0x01	; 1
    289c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
			i++;
			mLCD->printNumF(paramsPtr->lfoFreq, 1, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    28a0:	d3 01       	movw	r26, r6
    28a2:	96 96       	adiw	r26, 0x26	; 38
    28a4:	8c 91       	ld	r24, X
    28a6:	96 97       	sbiw	r26, 0x26	; 38
    28a8:	97 96       	adiw	r26, 0x27	; 39
    28aa:	9c 91       	ld	r25, X
    28ac:	75 01       	movw	r14, r10
    28ae:	e9 1a       	sub	r14, r25
    28b0:	f1 08       	sbc	r15, r1
    28b2:	b3 e0       	ldi	r27, 0x03	; 3
    28b4:	8b 9f       	mul	r24, r27
    28b6:	80 01       	movw	r16, r0
    28b8:	11 24       	eor	r1, r1
    28ba:	0d 5f       	subi	r16, 0xFD	; 253
    28bc:	1f 4f       	sbci	r17, 0xFF	; 255
    28be:	86 95       	lsr	r24
    28c0:	08 0f       	add	r16, r24
    28c2:	11 1d       	adc	r17, r1
    28c4:	d3 01       	movw	r26, r6
    28c6:	93 96       	adiw	r26, 0x23	; 35
    28c8:	ed 91       	ld	r30, X+
    28ca:	fc 91       	ld	r31, X
    28cc:	94 97       	sbiw	r26, 0x24	; 36
    28ce:	45 81       	ldd	r20, Z+5	; 0x05
    28d0:	56 81       	ldd	r21, Z+6	; 0x06
    28d2:	67 81       	ldd	r22, Z+7	; 0x07
    28d4:	70 85       	ldd	r23, Z+8	; 0x08
    28d6:	80 e2       	ldi	r24, 0x20	; 32
    28d8:	88 2e       	mov	r8, r24
    28da:	a1 2c       	mov	r10, r1
    28dc:	b1 2c       	mov	r11, r1
    28de:	9e e2       	ldi	r25, 0x2E	; 46
    28e0:	c9 2e       	mov	r12, r25
    28e2:	21 e0       	ldi	r18, 0x01	; 1
    28e4:	5d 96       	adiw	r26, 0x1d	; 29
    28e6:	8d 91       	ld	r24, X+
    28e8:	9c 91       	ld	r25, X
    28ea:	5e 97       	sbiw	r26, 0x1e	; 30
    28ec:	0e 94 85 3e 	call	0x7d0a	; 0x7d0a <_ZN4UTFT9printNumFEdhiicic>
		break;
    28f0:	ef c0       	rjmp	.+478    	; 0x2ad0 <_ZN4Menu10drawValuesEv+0x58a>
			mLCD->printNumI(paramsPtr->filRes, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumI(paramsPtr->filLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 2:
			mLCD->printNumI(paramsPtr->envAtk, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    28f2:	d3 01       	movw	r26, r6
    28f4:	97 96       	adiw	r26, 0x27	; 39
    28f6:	8c 91       	ld	r24, X
    28f8:	97 97       	sbiw	r26, 0x27	; 39
    28fa:	2d e4       	ldi	r18, 0x4D	; 77
    28fc:	a2 2e       	mov	r10, r18
    28fe:	bb 24       	eor	r11, r11
    2900:	b3 94       	inc	r11
    2902:	85 01       	movw	r16, r10
    2904:	08 1b       	sub	r16, r24
    2906:	11 09       	sbc	r17, r1
    2908:	96 96       	adiw	r26, 0x26	; 38
    290a:	2c 91       	ld	r18, X
    290c:	96 97       	sbiw	r26, 0x26	; 38
    290e:	26 95       	lsr	r18
    2910:	30 e0       	ldi	r19, 0x00	; 0
    2912:	2d 5f       	subi	r18, 0xFD	; 253
    2914:	3f 4f       	sbci	r19, 0xFF	; 255
    2916:	46 85       	ldd	r20, Z+14	; 0x0e
    2918:	57 85       	ldd	r21, Z+15	; 0x0f
    291a:	05 2e       	mov	r0, r21
    291c:	00 0c       	add	r0, r0
    291e:	66 0b       	sbc	r22, r22
    2920:	77 0b       	sbc	r23, r23
    2922:	e0 e2       	ldi	r30, 0x20	; 32
    2924:	ce 2e       	mov	r12, r30
    2926:	e1 2c       	mov	r14, r1
    2928:	f1 2c       	mov	r15, r1
    292a:	5d 96       	adiw	r26, 0x1d	; 29
    292c:	8d 91       	ld	r24, X+
    292e:	9c 91       	ld	r25, X
    2930:	5e 97       	sbiw	r26, 0x1e	; 30
    2932:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->envDcy, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2936:	f3 01       	movw	r30, r6
    2938:	86 a1       	ldd	r24, Z+38	; 0x26
    293a:	97 a1       	ldd	r25, Z+39	; 0x27
    293c:	85 01       	movw	r16, r10
    293e:	09 1b       	sub	r16, r25
    2940:	11 09       	sbc	r17, r1
    2942:	28 2f       	mov	r18, r24
    2944:	30 e0       	ldi	r19, 0x00	; 0
    2946:	2d 5f       	subi	r18, 0xFD	; 253
    2948:	3f 4f       	sbci	r19, 0xFF	; 255
    294a:	86 95       	lsr	r24
    294c:	28 0f       	add	r18, r24
    294e:	31 1d       	adc	r19, r1
    2950:	03 a0       	ldd	r0, Z+35	; 0x23
    2952:	f4 a1       	ldd	r31, Z+36	; 0x24
    2954:	e0 2d       	mov	r30, r0
    2956:	40 89       	ldd	r20, Z+16	; 0x10
    2958:	51 89       	ldd	r21, Z+17	; 0x11
    295a:	05 2e       	mov	r0, r21
    295c:	00 0c       	add	r0, r0
    295e:	66 0b       	sbc	r22, r22
    2960:	77 0b       	sbc	r23, r23
    2962:	d3 01       	movw	r26, r6
    2964:	5d 96       	adiw	r26, 0x1d	; 29
    2966:	8d 91       	ld	r24, X+
    2968:	9c 91       	ld	r25, X
    296a:	5e 97       	sbiw	r26, 0x1e	; 30
    296c:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->envSus, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2970:	f3 01       	movw	r30, r6
    2972:	86 a1       	ldd	r24, Z+38	; 0x26
    2974:	97 a1       	ldd	r25, Z+39	; 0x27
    2976:	85 01       	movw	r16, r10
    2978:	09 1b       	sub	r16, r25
    297a:	11 09       	sbc	r17, r1
    297c:	28 2f       	mov	r18, r24
    297e:	30 e0       	ldi	r19, 0x00	; 0
    2980:	22 0f       	add	r18, r18
    2982:	33 1f       	adc	r19, r19
    2984:	2d 5f       	subi	r18, 0xFD	; 253
    2986:	3f 4f       	sbci	r19, 0xFF	; 255
    2988:	86 95       	lsr	r24
    298a:	28 0f       	add	r18, r24
    298c:	31 1d       	adc	r19, r1
    298e:	03 a0       	ldd	r0, Z+35	; 0x23
    2990:	f4 a1       	ldd	r31, Z+36	; 0x24
    2992:	e0 2d       	mov	r30, r0
    2994:	42 89       	ldd	r20, Z+18	; 0x12
    2996:	50 e0       	ldi	r21, 0x00	; 0
    2998:	60 e0       	ldi	r22, 0x00	; 0
    299a:	70 e0       	ldi	r23, 0x00	; 0
    299c:	d3 01       	movw	r26, r6
    299e:	5d 96       	adiw	r26, 0x1d	; 29
    29a0:	8d 91       	ld	r24, X+
    29a2:	9c 91       	ld	r25, X
    29a4:	5e 97       	sbiw	r26, 0x1e	; 30
    29a6:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->envRel, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    29aa:	f3 01       	movw	r30, r6
    29ac:	86 a1       	ldd	r24, Z+38	; 0x26
    29ae:	97 a1       	ldd	r25, Z+39	; 0x27
    29b0:	85 01       	movw	r16, r10
    29b2:	09 1b       	sub	r16, r25
    29b4:	11 09       	sbc	r17, r1
    29b6:	f3 e0       	ldi	r31, 0x03	; 3
    29b8:	8f 9f       	mul	r24, r31
    29ba:	90 01       	movw	r18, r0
    29bc:	11 24       	eor	r1, r1
    29be:	2d 5f       	subi	r18, 0xFD	; 253
    29c0:	3f 4f       	sbci	r19, 0xFF	; 255
    29c2:	86 95       	lsr	r24
    29c4:	28 0f       	add	r18, r24
    29c6:	31 1d       	adc	r19, r1
    29c8:	d3 01       	movw	r26, r6
    29ca:	93 96       	adiw	r26, 0x23	; 35
    29cc:	ed 91       	ld	r30, X+
    29ce:	fc 91       	ld	r31, X
    29d0:	94 97       	sbiw	r26, 0x24	; 36
    29d2:	43 89       	ldd	r20, Z+19	; 0x13
    29d4:	54 89       	ldd	r21, Z+20	; 0x14
    29d6:	05 2e       	mov	r0, r21
    29d8:	00 0c       	add	r0, r0
    29da:	66 0b       	sbc	r22, r22
    29dc:	77 0b       	sbc	r23, r23
    29de:	72 c0       	rjmp	.+228    	; 0x2ac4 <_ZN4Menu10drawValuesEv+0x57e>
		break;
		case 3:
			mLCD->printNumI(paramsPtr->fxType, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    29e0:	d3 01       	movw	r26, r6
    29e2:	97 96       	adiw	r26, 0x27	; 39
    29e4:	8c 91       	ld	r24, X
    29e6:	97 97       	sbiw	r26, 0x27	; 39
    29e8:	1d e4       	ldi	r17, 0x4D	; 77
    29ea:	a1 2e       	mov	r10, r17
    29ec:	bb 24       	eor	r11, r11
    29ee:	b3 94       	inc	r11
    29f0:	85 01       	movw	r16, r10
    29f2:	08 1b       	sub	r16, r24
    29f4:	11 09       	sbc	r17, r1
    29f6:	96 96       	adiw	r26, 0x26	; 38
    29f8:	2c 91       	ld	r18, X
    29fa:	96 97       	sbiw	r26, 0x26	; 38
    29fc:	26 95       	lsr	r18
    29fe:	30 e0       	ldi	r19, 0x00	; 0
    2a00:	2d 5f       	subi	r18, 0xFD	; 253
    2a02:	3f 4f       	sbci	r19, 0xFF	; 255
    2a04:	45 89       	ldd	r20, Z+21	; 0x15
    2a06:	50 e0       	ldi	r21, 0x00	; 0
    2a08:	60 e0       	ldi	r22, 0x00	; 0
    2a0a:	70 e0       	ldi	r23, 0x00	; 0
    2a0c:	80 e2       	ldi	r24, 0x20	; 32
    2a0e:	c8 2e       	mov	r12, r24
    2a10:	e1 2c       	mov	r14, r1
    2a12:	f1 2c       	mov	r15, r1
    2a14:	5d 96       	adiw	r26, 0x1d	; 29
    2a16:	8d 91       	ld	r24, X+
    2a18:	9c 91       	ld	r25, X
    2a1a:	5e 97       	sbiw	r26, 0x1e	; 30
    2a1c:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->fxAmt, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2a20:	f3 01       	movw	r30, r6
    2a22:	86 a1       	ldd	r24, Z+38	; 0x26
    2a24:	97 a1       	ldd	r25, Z+39	; 0x27
    2a26:	85 01       	movw	r16, r10
    2a28:	09 1b       	sub	r16, r25
    2a2a:	11 09       	sbc	r17, r1
    2a2c:	28 2f       	mov	r18, r24
    2a2e:	30 e0       	ldi	r19, 0x00	; 0
    2a30:	2d 5f       	subi	r18, 0xFD	; 253
    2a32:	3f 4f       	sbci	r19, 0xFF	; 255
    2a34:	86 95       	lsr	r24
    2a36:	28 0f       	add	r18, r24
    2a38:	31 1d       	adc	r19, r1
    2a3a:	03 a0       	ldd	r0, Z+35	; 0x23
    2a3c:	f4 a1       	ldd	r31, Z+36	; 0x24
    2a3e:	e0 2d       	mov	r30, r0
    2a40:	46 89       	ldd	r20, Z+22	; 0x16
    2a42:	50 e0       	ldi	r21, 0x00	; 0
    2a44:	60 e0       	ldi	r22, 0x00	; 0
    2a46:	70 e0       	ldi	r23, 0x00	; 0
    2a48:	d3 01       	movw	r26, r6
    2a4a:	5d 96       	adiw	r26, 0x1d	; 29
    2a4c:	8d 91       	ld	r24, X+
    2a4e:	9c 91       	ld	r25, X
    2a50:	5e 97       	sbiw	r26, 0x1e	; 30
    2a52:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->fxParam, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2a56:	f3 01       	movw	r30, r6
    2a58:	86 a1       	ldd	r24, Z+38	; 0x26
    2a5a:	97 a1       	ldd	r25, Z+39	; 0x27
    2a5c:	85 01       	movw	r16, r10
    2a5e:	09 1b       	sub	r16, r25
    2a60:	11 09       	sbc	r17, r1
    2a62:	28 2f       	mov	r18, r24
    2a64:	30 e0       	ldi	r19, 0x00	; 0
    2a66:	22 0f       	add	r18, r18
    2a68:	33 1f       	adc	r19, r19
    2a6a:	2d 5f       	subi	r18, 0xFD	; 253
    2a6c:	3f 4f       	sbci	r19, 0xFF	; 255
    2a6e:	86 95       	lsr	r24
    2a70:	28 0f       	add	r18, r24
    2a72:	31 1d       	adc	r19, r1
    2a74:	03 a0       	ldd	r0, Z+35	; 0x23
    2a76:	f4 a1       	ldd	r31, Z+36	; 0x24
    2a78:	e0 2d       	mov	r30, r0
    2a7a:	47 89       	ldd	r20, Z+23	; 0x17
    2a7c:	50 e0       	ldi	r21, 0x00	; 0
    2a7e:	60 e0       	ldi	r22, 0x00	; 0
    2a80:	70 e0       	ldi	r23, 0x00	; 0
    2a82:	d3 01       	movw	r26, r6
    2a84:	5d 96       	adiw	r26, 0x1d	; 29
    2a86:	8d 91       	ld	r24, X+
    2a88:	9c 91       	ld	r25, X
    2a8a:	5e 97       	sbiw	r26, 0x1e	; 30
    2a8c:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
			i++;
			mLCD->printNumI(paramsPtr->fxLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2a90:	f3 01       	movw	r30, r6
    2a92:	86 a1       	ldd	r24, Z+38	; 0x26
    2a94:	97 a1       	ldd	r25, Z+39	; 0x27
    2a96:	85 01       	movw	r16, r10
    2a98:	09 1b       	sub	r16, r25
    2a9a:	11 09       	sbc	r17, r1
    2a9c:	f3 e0       	ldi	r31, 0x03	; 3
    2a9e:	8f 9f       	mul	r24, r31
    2aa0:	90 01       	movw	r18, r0
    2aa2:	11 24       	eor	r1, r1
    2aa4:	2d 5f       	subi	r18, 0xFD	; 253
    2aa6:	3f 4f       	sbci	r19, 0xFF	; 255
    2aa8:	86 95       	lsr	r24
    2aaa:	28 0f       	add	r18, r24
    2aac:	31 1d       	adc	r19, r1
    2aae:	d3 01       	movw	r26, r6
    2ab0:	93 96       	adiw	r26, 0x23	; 35
    2ab2:	ed 91       	ld	r30, X+
    2ab4:	fc 91       	ld	r31, X
    2ab6:	94 97       	sbiw	r26, 0x24	; 36
    2ab8:	40 8d       	ldd	r20, Z+24	; 0x18
    2aba:	04 2e       	mov	r0, r20
    2abc:	00 0c       	add	r0, r0
    2abe:	55 0b       	sbc	r21, r21
    2ac0:	66 0b       	sbc	r22, r22
    2ac2:	77 0b       	sbc	r23, r23
			i++;
			mLCD->printNumI(paramsPtr->inEnv, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumI(paramsPtr->filEnv, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumI(paramsPtr->preset, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2ac4:	5d 96       	adiw	r26, 0x1d	; 29
    2ac6:	8d 91       	ld	r24, X+
    2ac8:	9c 91       	ld	r25, X
    2aca:	5e 97       	sbiw	r26, 0x1e	; 30
    2acc:	0e 94 9c 3d 	call	0x7b38	; 0x7b38 <_ZN4UTFT9printNumIEliiic>
		break;
		default:
		break;
	}
    2ad0:	26 96       	adiw	r28, 0x06	; 6
    2ad2:	0f b6       	in	r0, 0x3f	; 63
    2ad4:	f8 94       	cli
    2ad6:	de bf       	out	0x3e, r29	; 62
    2ad8:	0f be       	out	0x3f, r0	; 63
    2ada:	cd bf       	out	0x3d, r28	; 61
    2adc:	df 91       	pop	r29
    2ade:	cf 91       	pop	r28
    2ae0:	1f 91       	pop	r17
    2ae2:	0f 91       	pop	r16
    2ae4:	ff 90       	pop	r15
    2ae6:	ef 90       	pop	r14
    2ae8:	df 90       	pop	r13
    2aea:	cf 90       	pop	r12
    2aec:	bf 90       	pop	r11
    2aee:	af 90       	pop	r10
    2af0:	9f 90       	pop	r9
    2af2:	8f 90       	pop	r8
    2af4:	7f 90       	pop	r7
    2af6:	6f 90       	pop	r6
    2af8:	08 95       	ret

00002afa <_GLOBAL__sub_I__ZN4MenuC2Ev>:
    2afa:	cf 93       	push	r28
    2afc:	df 93       	push	r29
    2afe:	66 ea       	ldi	r22, 0xA6	; 166
    2b00:	72 e0       	ldi	r23, 0x02	; 2
    2b02:	8c e1       	ldi	r24, 0x1C	; 28
    2b04:	95 e0       	ldi	r25, 0x05	; 5
    2b06:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b0a:	6b ea       	ldi	r22, 0xAB	; 171
    2b0c:	72 e0       	ldi	r23, 0x02	; 2
    2b0e:	82 e2       	ldi	r24, 0x22	; 34
    2b10:	95 e0       	ldi	r25, 0x05	; 5
    2b12:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b16:	60 eb       	ldi	r22, 0xB0	; 176
    2b18:	72 e0       	ldi	r23, 0x02	; 2
    2b1a:	88 e2       	ldi	r24, 0x28	; 40
    2b1c:	95 e0       	ldi	r25, 0x05	; 5
    2b1e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b22:	65 eb       	ldi	r22, 0xB5	; 181
    2b24:	72 e0       	ldi	r23, 0x02	; 2
    2b26:	8e e2       	ldi	r24, 0x2E	; 46
    2b28:	95 e0       	ldi	r25, 0x05	; 5
    2b2a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b2e:	68 eb       	ldi	r22, 0xB8	; 184
    2b30:	72 e0       	ldi	r23, 0x02	; 2
    2b32:	84 e3       	ldi	r24, 0x34	; 52
    2b34:	95 e0       	ldi	r25, 0x05	; 5
    2b36:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2b3a:	6e eb       	ldi	r22, 0xBE	; 190
    2b3c:	72 e0       	ldi	r23, 0x02	; 2
    2b3e:	84 e0       	ldi	r24, 0x04	; 4
    2b40:	95 e0       	ldi	r25, 0x05	; 5
    2b42:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b46:	64 ec       	ldi	r22, 0xC4	; 196
    2b48:	72 e0       	ldi	r23, 0x02	; 2
    2b4a:	8a e0       	ldi	r24, 0x0A	; 10
    2b4c:	95 e0       	ldi	r25, 0x05	; 5
    2b4e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b52:	6a ec       	ldi	r22, 0xCA	; 202
    2b54:	72 e0       	ldi	r23, 0x02	; 2
    2b56:	80 e1       	ldi	r24, 0x10	; 16
    2b58:	95 e0       	ldi	r25, 0x05	; 5
    2b5a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b5e:	64 ec       	ldi	r22, 0xC4	; 196
    2b60:	72 e0       	ldi	r23, 0x02	; 2
    2b62:	86 e1       	ldi	r24, 0x16	; 22
    2b64:	95 e0       	ldi	r25, 0x05	; 5
    2b66:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2b6a:	6f ec       	ldi	r22, 0xCF	; 207
    2b6c:	72 e0       	ldi	r23, 0x02	; 2
    2b6e:	8c ee       	ldi	r24, 0xEC	; 236
    2b70:	94 e0       	ldi	r25, 0x04	; 4
    2b72:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b76:	64 ec       	ldi	r22, 0xC4	; 196
    2b78:	72 e0       	ldi	r23, 0x02	; 2
    2b7a:	82 ef       	ldi	r24, 0xF2	; 242
    2b7c:	94 e0       	ldi	r25, 0x04	; 4
    2b7e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b82:	65 ed       	ldi	r22, 0xD5	; 213
    2b84:	72 e0       	ldi	r23, 0x02	; 2
    2b86:	88 ef       	ldi	r24, 0xF8	; 248
    2b88:	94 e0       	ldi	r25, 0x04	; 4
    2b8a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2b8e:	6a ec       	ldi	r22, 0xCA	; 202
    2b90:	72 e0       	ldi	r23, 0x02	; 2
    2b92:	8e ef       	ldi	r24, 0xFE	; 254
    2b94:	94 e0       	ldi	r25, 0x04	; 4
    2b96:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2b9a:	6a ed       	ldi	r22, 0xDA	; 218
    2b9c:	72 e0       	ldi	r23, 0x02	; 2
    2b9e:	84 ed       	ldi	r24, 0xD4	; 212
    2ba0:	94 e0       	ldi	r25, 0x04	; 4
    2ba2:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2ba6:	6f ed       	ldi	r22, 0xDF	; 223
    2ba8:	72 e0       	ldi	r23, 0x02	; 2
    2baa:	8a ed       	ldi	r24, 0xDA	; 218
    2bac:	94 e0       	ldi	r25, 0x04	; 4
    2bae:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2bb2:	64 ee       	ldi	r22, 0xE4	; 228
    2bb4:	72 e0       	ldi	r23, 0x02	; 2
    2bb6:	80 ee       	ldi	r24, 0xE0	; 224
    2bb8:	94 e0       	ldi	r25, 0x04	; 4
    2bba:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2bbe:	69 ee       	ldi	r22, 0xE9	; 233
    2bc0:	72 e0       	ldi	r23, 0x02	; 2
    2bc2:	86 ee       	ldi	r24, 0xE6	; 230
    2bc4:	94 e0       	ldi	r25, 0x04	; 4
    2bc6:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2bca:	6f ec       	ldi	r22, 0xCF	; 207
    2bcc:	72 e0       	ldi	r23, 0x02	; 2
    2bce:	8c eb       	ldi	r24, 0xBC	; 188
    2bd0:	94 e0       	ldi	r25, 0x04	; 4
    2bd2:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2bd6:	6e ee       	ldi	r22, 0xEE	; 238
    2bd8:	72 e0       	ldi	r23, 0x02	; 2
    2bda:	82 ec       	ldi	r24, 0xC2	; 194
    2bdc:	94 e0       	ldi	r25, 0x04	; 4
    2bde:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2be2:	63 ef       	ldi	r22, 0xF3	; 243
    2be4:	72 e0       	ldi	r23, 0x02	; 2
    2be6:	88 ec       	ldi	r24, 0xC8	; 200
    2be8:	94 e0       	ldi	r25, 0x04	; 4
    2bea:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2bee:	6a ec       	ldi	r22, 0xCA	; 202
    2bf0:	72 e0       	ldi	r23, 0x02	; 2
    2bf2:	8e ec       	ldi	r24, 0xCE	; 206
    2bf4:	94 e0       	ldi	r25, 0x04	; 4
    2bf6:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2bfa:	6a ef       	ldi	r22, 0xFA	; 250
    2bfc:	72 e0       	ldi	r23, 0x02	; 2
    2bfe:	84 ea       	ldi	r24, 0xA4	; 164
    2c00:	94 e0       	ldi	r25, 0x04	; 4
    2c02:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2c06:	64 e0       	ldi	r22, 0x04	; 4
    2c08:	73 e0       	ldi	r23, 0x03	; 3
    2c0a:	8a ea       	ldi	r24, 0xAA	; 170
    2c0c:	94 e0       	ldi	r25, 0x04	; 4
    2c0e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2c12:	6c e0       	ldi	r22, 0x0C	; 12
    2c14:	73 e0       	ldi	r23, 0x03	; 3
    2c16:	80 eb       	ldi	r24, 0xB0	; 176
    2c18:	94 e0       	ldi	r25, 0x04	; 4
    2c1a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2c1e:	65 e1       	ldi	r22, 0x15	; 21
    2c20:	73 e0       	ldi	r23, 0x03	; 3
    2c22:	86 eb       	ldi	r24, 0xB6	; 182
    2c24:	94 e0       	ldi	r25, 0x04	; 4
    2c26:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    2c2a:	6d e1       	ldi	r22, 0x1D	; 29
    2c2c:	73 e0       	ldi	r23, 0x03	; 3
    2c2e:	8c e8       	ldi	r24, 0x8C	; 140
    2c30:	94 e0       	ldi	r25, 0x04	; 4
    2c32:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2c36:	61 e2       	ldi	r22, 0x21	; 33
    2c38:	73 e0       	ldi	r23, 0x03	; 3
    2c3a:	82 e9       	ldi	r24, 0x92	; 146
    2c3c:	94 e0       	ldi	r25, 0x04	; 4
    2c3e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2c42:	65 e2       	ldi	r22, 0x25	; 37
    2c44:	73 e0       	ldi	r23, 0x03	; 3
    2c46:	88 e9       	ldi	r24, 0x98	; 152
    2c48:	94 e0       	ldi	r25, 0x04	; 4
    2c4a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2c4e:	69 e2       	ldi	r22, 0x29	; 41
    2c50:	73 e0       	ldi	r23, 0x03	; 3
    2c52:	8e e9       	ldi	r24, 0x9E	; 158
    2c54:	94 e0       	ldi	r25, 0x04	; 4
    2c56:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    2c5a:	6d e2       	ldi	r22, 0x2D	; 45
    2c5c:	73 e0       	ldi	r23, 0x03	; 3
    2c5e:	8c e5       	ldi	r24, 0x5C	; 92
    2c60:	94 e0       	ldi	r25, 0x04	; 4
    2c62:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2c66:	c0 e0       	ldi	r28, 0x00	; 0
    2c68:	d0 e0       	ldi	r29, 0x00	; 0
    2c6a:	26 96       	adiw	r28, 0x06	; 6
    2c6c:	6a ea       	ldi	r22, 0xAA	; 170
    2c6e:	72 e0       	ldi	r23, 0x02	; 2
    2c70:	ce 01       	movw	r24, r28
    2c72:	84 5a       	subi	r24, 0xA4	; 164
    2c74:	9b 4f       	sbci	r25, 0xFB	; 251
    2c76:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2c7a:	ca 32       	cpi	r28, 0x2A	; 42
    2c7c:	d1 05       	cpc	r29, r1
    2c7e:	a9 f7       	brne	.-22     	; 0x2c6a <_GLOBAL__sub_I__ZN4MenuC2Ev+0x170>
    2c80:	df 91       	pop	r29
    2c82:	cf 91       	pop	r28
    2c84:	08 95       	ret

00002c86 <_GLOBAL__sub_D__ZN4MenuC2Ev>:
    2c86:	cf 93       	push	r28
    2c88:	df 93       	push	r29
    2c8a:	cc e8       	ldi	r28, 0x8C	; 140
    2c8c:	d4 e0       	ldi	r29, 0x04	; 4
    2c8e:	26 97       	sbiw	r28, 0x06	; 6
    2c90:	ce 01       	movw	r24, r28
    2c92:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2c96:	84 e0       	ldi	r24, 0x04	; 4
    2c98:	cc 35       	cpi	r28, 0x5C	; 92
    2c9a:	d8 07       	cpc	r29, r24
    2c9c:	c1 f7       	brne	.-16     	; 0x2c8e <_GLOBAL__sub_D__ZN4MenuC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    2c9e:	8e e9       	ldi	r24, 0x9E	; 158
    2ca0:	94 e0       	ldi	r25, 0x04	; 4
    2ca2:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2ca6:	88 e9       	ldi	r24, 0x98	; 152
    2ca8:	94 e0       	ldi	r25, 0x04	; 4
    2caa:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2cae:	82 e9       	ldi	r24, 0x92	; 146
    2cb0:	94 e0       	ldi	r25, 0x04	; 4
    2cb2:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2cb6:	8c e8       	ldi	r24, 0x8C	; 140
    2cb8:	94 e0       	ldi	r25, 0x04	; 4
    2cba:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2cbe:	86 eb       	ldi	r24, 0xB6	; 182
    2cc0:	94 e0       	ldi	r25, 0x04	; 4
    2cc2:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2cc6:	80 eb       	ldi	r24, 0xB0	; 176
    2cc8:	94 e0       	ldi	r25, 0x04	; 4
    2cca:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2cce:	8a ea       	ldi	r24, 0xAA	; 170
    2cd0:	94 e0       	ldi	r25, 0x04	; 4
    2cd2:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2cd6:	84 ea       	ldi	r24, 0xA4	; 164
    2cd8:	94 e0       	ldi	r25, 0x04	; 4
    2cda:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2cde:	8e ec       	ldi	r24, 0xCE	; 206
    2ce0:	94 e0       	ldi	r25, 0x04	; 4
    2ce2:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2ce6:	88 ec       	ldi	r24, 0xC8	; 200
    2ce8:	94 e0       	ldi	r25, 0x04	; 4
    2cea:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2cee:	82 ec       	ldi	r24, 0xC2	; 194
    2cf0:	94 e0       	ldi	r25, 0x04	; 4
    2cf2:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2cf6:	8c eb       	ldi	r24, 0xBC	; 188
    2cf8:	94 e0       	ldi	r25, 0x04	; 4
    2cfa:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2cfe:	86 ee       	ldi	r24, 0xE6	; 230
    2d00:	94 e0       	ldi	r25, 0x04	; 4
    2d02:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d06:	80 ee       	ldi	r24, 0xE0	; 224
    2d08:	94 e0       	ldi	r25, 0x04	; 4
    2d0a:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d0e:	8a ed       	ldi	r24, 0xDA	; 218
    2d10:	94 e0       	ldi	r25, 0x04	; 4
    2d12:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d16:	84 ed       	ldi	r24, 0xD4	; 212
    2d18:	94 e0       	ldi	r25, 0x04	; 4
    2d1a:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2d1e:	8e ef       	ldi	r24, 0xFE	; 254
    2d20:	94 e0       	ldi	r25, 0x04	; 4
    2d22:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d26:	88 ef       	ldi	r24, 0xF8	; 248
    2d28:	94 e0       	ldi	r25, 0x04	; 4
    2d2a:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d2e:	82 ef       	ldi	r24, 0xF2	; 242
    2d30:	94 e0       	ldi	r25, 0x04	; 4
    2d32:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d36:	8c ee       	ldi	r24, 0xEC	; 236
    2d38:	94 e0       	ldi	r25, 0x04	; 4
    2d3a:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2d3e:	86 e1       	ldi	r24, 0x16	; 22
    2d40:	95 e0       	ldi	r25, 0x05	; 5
    2d42:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d46:	80 e1       	ldi	r24, 0x10	; 16
    2d48:	95 e0       	ldi	r25, 0x05	; 5
    2d4a:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d4e:	8a e0       	ldi	r24, 0x0A	; 10
    2d50:	95 e0       	ldi	r25, 0x05	; 5
    2d52:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d56:	84 e0       	ldi	r24, 0x04	; 4
    2d58:	95 e0       	ldi	r25, 0x05	; 5
    2d5a:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d5e:	ca e3       	ldi	r28, 0x3A	; 58
    2d60:	d5 e0       	ldi	r29, 0x05	; 5
    const int BKGCOLOR = 0x0000;
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    2d62:	26 97       	sbiw	r28, 0x06	; 6
    2d64:	ce 01       	movw	r24, r28
    2d66:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    2d6a:	85 e0       	ldi	r24, 0x05	; 5
    2d6c:	cc 31       	cpi	r28, 0x1C	; 28
    2d6e:	d8 07       	cpc	r29, r24
    2d70:	c1 f7       	brne	.-16     	; 0x2d62 <_GLOBAL__sub_D__ZN4MenuC2Ev+0xdc>
    2d72:	df 91       	pop	r29
    2d74:	cf 91       	pop	r28
    2d76:	08 95       	ret

00002d78 <_ZN6ScreenC1Ev>:
 * Screen implementation
 * 
 * This class handles all screen manipulations
 */

Screen::Screen() {
    2d78:	cf 93       	push	r28
    2d7a:	df 93       	push	r29
    2d7c:	ec 01       	movw	r28, r24
    2d7e:	0e 94 91 20 	call	0x4122	; 0x4122 <_ZN4UTFTC1Ev>
    2d82:	ce 01       	movw	r24, r28
    2d84:	c1 96       	adiw	r24, 0x31	; 49
    2d86:	b8 d9       	rcall	.-3216   	; 0x20f8 <_ZN4MenuC1Ev>
    2d88:	ce 01       	movw	r24, r28
    2d8a:	87 5a       	subi	r24, 0xA7	; 167
    2d8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2d8e:	0e 94 a1 41 	call	0x8342	; 0x8342 <_ZN6WindowC1Ev>
    2d92:	ce 01       	movw	r24, r28
    2d94:	80 58       	subi	r24, 0x80	; 128
    2d96:	9f 4f       	sbci	r25, 0xFF	; 255
    2d98:	0e 94 91 20 	call	0x4122	; 0x4122 <_ZN4UTFTC1Ev>
    2d9c:	ce 01       	movw	r24, r28
    2d9e:	8f 54       	subi	r24, 0x4F	; 79
    2da0:	9f 4f       	sbci	r25, 0xFF	; 255
    2da2:	aa d9       	rcall	.-3244   	; 0x20f8 <_ZN4MenuC1Ev>
    2da4:	ce 01       	movw	r24, r28
    2da6:	87 52       	subi	r24, 0x27	; 39
    2da8:	9f 4f       	sbci	r25, 0xFF	; 255

}
    2daa:	df 91       	pop	r29
    2dac:	cf 91       	pop	r28
 * Screen implementation
 * 
 * This class handles all screen manipulations
 */

Screen::Screen() {
    2dae:	0c 94 a1 41 	jmp	0x8342	; 0x8342 <_ZN6WindowC1Ev>

00002db2 <_ZN6Screen4initEP7Control>:

}

void Screen::init(Control *obj) {
    2db2:	8f 92       	push	r8
    2db4:	9f 92       	push	r9
    2db6:	af 92       	push	r10
    2db8:	bf 92       	push	r11
    2dba:	cf 92       	push	r12
    2dbc:	df 92       	push	r13
    2dbe:	ef 92       	push	r14
    2dc0:	ff 92       	push	r15
    2dc2:	0f 93       	push	r16
    2dc4:	1f 93       	push	r17
    2dc6:	cf 93       	push	r28
    2dc8:	df 93       	push	r29
    2dca:	ec 01       	movw	r28, r24
	ctrlPtr = obj;
    2dcc:	5c 01       	movw	r10, r24
    2dce:	8e e7       	ldi	r24, 0x7E	; 126
    2dd0:	a8 0e       	add	r10, r24
    2dd2:	b1 1c       	adc	r11, r1
    2dd4:	d5 01       	movw	r26, r10
    2dd6:	6d 93       	st	X+, r22
    2dd8:	7c 93       	st	X, r23

	lcd = *new UTFT(CTE32HR,38,39,40,41);
    2dda:	81 e3       	ldi	r24, 0x31	; 49
    2ddc:	90 e0       	ldi	r25, 0x00	; 0
    2dde:	0e 94 16 44 	call	0x882c	; 0x882c <_Znwj>
    2de2:	4c 01       	movw	r8, r24
    2de4:	c1 2c       	mov	r12, r1
    2de6:	d1 2c       	mov	r13, r1
    2de8:	89 e2       	ldi	r24, 0x29	; 41
    2dea:	e8 2e       	mov	r14, r24
    2dec:	f1 2c       	mov	r15, r1
    2dee:	08 e2       	ldi	r16, 0x28	; 40
    2df0:	10 e0       	ldi	r17, 0x00	; 0
    2df2:	27 e2       	ldi	r18, 0x27	; 39
    2df4:	30 e0       	ldi	r19, 0x00	; 0
    2df6:	46 e2       	ldi	r20, 0x26	; 38
    2df8:	50 e0       	ldi	r21, 0x00	; 0
    2dfa:	65 e1       	ldi	r22, 0x15	; 21
    2dfc:	c4 01       	movw	r24, r8
    2dfe:	0e 94 92 20 	call	0x4124	; 0x4124 <_ZN4UTFTC1Ehiiiii>
    2e02:	7e 01       	movw	r14, r28
    2e04:	b0 e8       	ldi	r27, 0x80	; 128
    2e06:	eb 0e       	add	r14, r27
    2e08:	f1 1c       	adc	r15, r1
    2e0a:	81 e3       	ldi	r24, 0x31	; 49
    2e0c:	f4 01       	movw	r30, r8
    2e0e:	d7 01       	movw	r26, r14
    2e10:	01 90       	ld	r0, Z+
    2e12:	0d 92       	st	X+, r0
    2e14:	8a 95       	dec	r24
    2e16:	e1 f7       	brne	.-8      	; 0x2e10 <_ZN6Screen4initEP7Control+0x5e>
	lcd.InitLCD();
    2e18:	61 e0       	ldi	r22, 0x01	; 1
    2e1a:	c7 01       	movw	r24, r14
    2e1c:	0e 94 e1 23 	call	0x47c2	; 0x47c2 <_ZN4UTFT7InitLCDEh>
	extern uint8_t BigFont[];
	extern uint8_t SmallFont[];
	
	menu.init(&lcd, SmallFont, BigFont, ctrlPtr->paramsPtr);
    2e20:	cf 54       	subi	r28, 0x4F	; 79
    2e22:	df 4f       	sbci	r29, 0xFF	; 255
    2e24:	d5 01       	movw	r26, r10
    2e26:	ed 91       	ld	r30, X+
    2e28:	fc 91       	ld	r31, X
    2e2a:	e2 58       	subi	r30, 0x82	; 130
    2e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e2e:	00 81       	ld	r16, Z
    2e30:	11 81       	ldd	r17, Z+1	; 0x01
    2e32:	28 e9       	ldi	r18, 0x98	; 152
    2e34:	32 e0       	ldi	r19, 0x02	; 2
    2e36:	4c e7       	ldi	r20, 0x7C	; 124
    2e38:	5e e0       	ldi	r21, 0x0E	; 14
    2e3a:	b7 01       	movw	r22, r14
    2e3c:	ce 01       	movw	r24, r28
    2e3e:	90 d9       	rcall	.-3296   	; 0x2160 <_ZN4Menu4initEP4UTFTPhS2_PN10Parameters8params_tE>
	
	lcd.clrScr();
    2e40:	c7 01       	movw	r24, r14
    2e42:	0e 94 de 36 	call	0x6dbc	; 0x6dbc <_ZN4UTFT6clrScrEv>
	menu.drawMenus();
    2e46:	ce 01       	movw	r24, r28
    2e48:	76 db       	rcall	.-2324   	; 0x2536 <_ZN4Menu9drawMenusEv>
	menu.drawValues();
    2e4a:	ce 01       	movw	r24, r28
}
    2e4c:	df 91       	pop	r29
    2e4e:	cf 91       	pop	r28
    2e50:	1f 91       	pop	r17
    2e52:	0f 91       	pop	r16
    2e54:	ff 90       	pop	r15
    2e56:	ef 90       	pop	r14
    2e58:	df 90       	pop	r13
    2e5a:	cf 90       	pop	r12
    2e5c:	bf 90       	pop	r11
    2e5e:	af 90       	pop	r10
    2e60:	9f 90       	pop	r9
	
	menu.init(&lcd, SmallFont, BigFont, ctrlPtr->paramsPtr);
	
	lcd.clrScr();
	menu.drawMenus();
	menu.drawValues();
    2e62:	8f 90       	pop	r8
    2e64:	70 cb       	rjmp	.-2336   	; 0x2546 <_ZN4Menu10drawValuesEv>

00002e66 <_ZN6Screen7displayEv>:
}

void Screen::display() {
    2e66:	ef 92       	push	r14
    2e68:	ff 92       	push	r15
    2e6a:	0f 93       	push	r16
    2e6c:	1f 93       	push	r17
    2e6e:	cf 93       	push	r28
    2e70:	df 93       	push	r29
    2e72:	8c 01       	movw	r16, r24
	if(ctrlPtr->menuChanged){
    2e74:	ec 01       	movw	r28, r24
    2e76:	c2 58       	subi	r28, 0x82	; 130
    2e78:	df 4f       	sbci	r29, 0xFF	; 255
    2e7a:	e8 81       	ld	r30, Y
    2e7c:	f9 81       	ldd	r31, Y+1	; 0x01
    2e7e:	e4 58       	subi	r30, 0x84	; 132
    2e80:	ff 4f       	sbci	r31, 0xFF	; 255
    2e82:	80 81       	ld	r24, Z
    2e84:	88 23       	and	r24, r24
    2e86:	69 f0       	breq	.+26     	; 0x2ea2 <_ZN6Screen7displayEv+0x3c>
		menu.drawMenus();
    2e88:	78 01       	movw	r14, r16
    2e8a:	81 eb       	ldi	r24, 0xB1	; 177
    2e8c:	e8 0e       	add	r14, r24
    2e8e:	f1 1c       	adc	r15, r1
    2e90:	c7 01       	movw	r24, r14
    2e92:	51 db       	rcall	.-2398   	; 0x2536 <_ZN4Menu9drawMenusEv>
		menu.drawValues();
    2e94:	c7 01       	movw	r24, r14
    2e96:	57 db       	rcall	.-2386   	; 0x2546 <_ZN4Menu10drawValuesEv>
		ctrlPtr->menuChanged = false;
    2e98:	e8 81       	ld	r30, Y
    2e9a:	f9 81       	ldd	r31, Y+1	; 0x01
    2e9c:	e4 58       	subi	r30, 0x84	; 132
    2e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea0:	10 82       	st	Z, r1
	}
	if (ctrlPtr->enc1h.changed
    2ea2:	e8 81       	ld	r30, Y
    2ea4:	f9 81       	ldd	r31, Y+1	; 0x01
    2ea6:	83 a9       	ldd	r24, Z+51	; 0x33
    2ea8:	81 11       	cpse	r24, r1
    2eaa:	0f c0       	rjmp	.+30     	; 0x2eca <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc2h.changed
    2eac:	df 01       	movw	r26, r30
    2eae:	aa 5b       	subi	r26, 0xBA	; 186
    2eb0:	bf 4f       	sbci	r27, 0xFF	; 255
    2eb2:	8c 91       	ld	r24, X
    2eb4:	81 11       	cpse	r24, r1
    2eb6:	09 c0       	rjmp	.+18     	; 0x2eca <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc3h.changed
    2eb8:	53 96       	adiw	r26, 0x13	; 19
    2eba:	8c 91       	ld	r24, X
    2ebc:	81 11       	cpse	r24, r1
    2ebe:	05 c0       	rjmp	.+10     	; 0x2eca <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc4h.changed )
    2ec0:	e4 59       	subi	r30, 0x94	; 148
    2ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec4:	80 81       	ld	r24, Z
    2ec6:	88 23       	and	r24, r24
    2ec8:	81 f0       	breq	.+32     	; 0x2eea <_ZN6Screen7displayEv+0x84>
	{
		menu.drawValues();
    2eca:	c8 01       	movw	r24, r16
    2ecc:	8f 54       	subi	r24, 0x4F	; 79
    2ece:	9f 4f       	sbci	r25, 0xFF	; 255
    2ed0:	3a db       	rcall	.-2444   	; 0x2546 <_ZN4Menu10drawValuesEv>
		ctrlPtr->enc1h.changed = false;
    2ed2:	e8 81       	ld	r30, Y
    2ed4:	f9 81       	ldd	r31, Y+1	; 0x01
    2ed6:	13 aa       	std	Z+51, r1	; 0x33
		ctrlPtr->enc2h.changed = false;
    2ed8:	df 01       	movw	r26, r30
    2eda:	aa 5b       	subi	r26, 0xBA	; 186
    2edc:	bf 4f       	sbci	r27, 0xFF	; 255
    2ede:	1c 92       	st	X, r1
		ctrlPtr->enc3h.changed = false;
    2ee0:	53 96       	adiw	r26, 0x13	; 19
    2ee2:	1c 92       	st	X, r1
		ctrlPtr->enc4h.changed = false;
    2ee4:	e4 59       	subi	r30, 0x94	; 148
    2ee6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee8:	10 82       	st	Z, r1
	}
    2eea:	df 91       	pop	r29
    2eec:	cf 91       	pop	r28
    2eee:	1f 91       	pop	r17
    2ef0:	0f 91       	pop	r16
    2ef2:	ff 90       	pop	r15
    2ef4:	ef 90       	pop	r14
    2ef6:	08 95       	ret

00002ef8 <_GLOBAL__sub_I__ZN6ScreenC2Ev>:
    2ef8:	cf 93       	push	r28
    2efa:	df 93       	push	r29
    2efc:	66 ea       	ldi	r22, 0xA6	; 166
    2efe:	72 e0       	ldi	r23, 0x02	; 2
    2f00:	8a ef       	ldi	r24, 0xFA	; 250
    2f02:	95 e0       	ldi	r25, 0x05	; 5
    2f04:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f08:	6b ea       	ldi	r22, 0xAB	; 171
    2f0a:	72 e0       	ldi	r23, 0x02	; 2
    2f0c:	80 e0       	ldi	r24, 0x00	; 0
    2f0e:	96 e0       	ldi	r25, 0x06	; 6
    2f10:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f14:	60 eb       	ldi	r22, 0xB0	; 176
    2f16:	72 e0       	ldi	r23, 0x02	; 2
    2f18:	86 e0       	ldi	r24, 0x06	; 6
    2f1a:	96 e0       	ldi	r25, 0x06	; 6
    2f1c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f20:	65 eb       	ldi	r22, 0xB5	; 181
    2f22:	72 e0       	ldi	r23, 0x02	; 2
    2f24:	8c e0       	ldi	r24, 0x0C	; 12
    2f26:	96 e0       	ldi	r25, 0x06	; 6
    2f28:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f2c:	68 eb       	ldi	r22, 0xB8	; 184
    2f2e:	72 e0       	ldi	r23, 0x02	; 2
    2f30:	82 e1       	ldi	r24, 0x12	; 18
    2f32:	96 e0       	ldi	r25, 0x06	; 6
    2f34:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2f38:	6e eb       	ldi	r22, 0xBE	; 190
    2f3a:	72 e0       	ldi	r23, 0x02	; 2
    2f3c:	82 ee       	ldi	r24, 0xE2	; 226
    2f3e:	95 e0       	ldi	r25, 0x05	; 5
    2f40:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f44:	64 ec       	ldi	r22, 0xC4	; 196
    2f46:	72 e0       	ldi	r23, 0x02	; 2
    2f48:	88 ee       	ldi	r24, 0xE8	; 232
    2f4a:	95 e0       	ldi	r25, 0x05	; 5
    2f4c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f50:	6a ec       	ldi	r22, 0xCA	; 202
    2f52:	72 e0       	ldi	r23, 0x02	; 2
    2f54:	8e ee       	ldi	r24, 0xEE	; 238
    2f56:	95 e0       	ldi	r25, 0x05	; 5
    2f58:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f5c:	64 ec       	ldi	r22, 0xC4	; 196
    2f5e:	72 e0       	ldi	r23, 0x02	; 2
    2f60:	84 ef       	ldi	r24, 0xF4	; 244
    2f62:	95 e0       	ldi	r25, 0x05	; 5
    2f64:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2f68:	6f ec       	ldi	r22, 0xCF	; 207
    2f6a:	72 e0       	ldi	r23, 0x02	; 2
    2f6c:	8a ec       	ldi	r24, 0xCA	; 202
    2f6e:	95 e0       	ldi	r25, 0x05	; 5
    2f70:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f74:	64 ec       	ldi	r22, 0xC4	; 196
    2f76:	72 e0       	ldi	r23, 0x02	; 2
    2f78:	80 ed       	ldi	r24, 0xD0	; 208
    2f7a:	95 e0       	ldi	r25, 0x05	; 5
    2f7c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f80:	65 ed       	ldi	r22, 0xD5	; 213
    2f82:	72 e0       	ldi	r23, 0x02	; 2
    2f84:	86 ed       	ldi	r24, 0xD6	; 214
    2f86:	95 e0       	ldi	r25, 0x05	; 5
    2f88:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2f8c:	6a ec       	ldi	r22, 0xCA	; 202
    2f8e:	72 e0       	ldi	r23, 0x02	; 2
    2f90:	8c ed       	ldi	r24, 0xDC	; 220
    2f92:	95 e0       	ldi	r25, 0x05	; 5
    2f94:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2f98:	6a ed       	ldi	r22, 0xDA	; 218
    2f9a:	72 e0       	ldi	r23, 0x02	; 2
    2f9c:	82 eb       	ldi	r24, 0xB2	; 178
    2f9e:	95 e0       	ldi	r25, 0x05	; 5
    2fa0:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2fa4:	6f ed       	ldi	r22, 0xDF	; 223
    2fa6:	72 e0       	ldi	r23, 0x02	; 2
    2fa8:	88 eb       	ldi	r24, 0xB8	; 184
    2faa:	95 e0       	ldi	r25, 0x05	; 5
    2fac:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2fb0:	64 ee       	ldi	r22, 0xE4	; 228
    2fb2:	72 e0       	ldi	r23, 0x02	; 2
    2fb4:	8e eb       	ldi	r24, 0xBE	; 190
    2fb6:	95 e0       	ldi	r25, 0x05	; 5
    2fb8:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2fbc:	69 ee       	ldi	r22, 0xE9	; 233
    2fbe:	72 e0       	ldi	r23, 0x02	; 2
    2fc0:	84 ec       	ldi	r24, 0xC4	; 196
    2fc2:	95 e0       	ldi	r25, 0x05	; 5
    2fc4:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2fc8:	6f ec       	ldi	r22, 0xCF	; 207
    2fca:	72 e0       	ldi	r23, 0x02	; 2
    2fcc:	8a e9       	ldi	r24, 0x9A	; 154
    2fce:	95 e0       	ldi	r25, 0x05	; 5
    2fd0:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2fd4:	6e ee       	ldi	r22, 0xEE	; 238
    2fd6:	72 e0       	ldi	r23, 0x02	; 2
    2fd8:	80 ea       	ldi	r24, 0xA0	; 160
    2fda:	95 e0       	ldi	r25, 0x05	; 5
    2fdc:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2fe0:	63 ef       	ldi	r22, 0xF3	; 243
    2fe2:	72 e0       	ldi	r23, 0x02	; 2
    2fe4:	86 ea       	ldi	r24, 0xA6	; 166
    2fe6:	95 e0       	ldi	r25, 0x05	; 5
    2fe8:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    2fec:	6a ec       	ldi	r22, 0xCA	; 202
    2fee:	72 e0       	ldi	r23, 0x02	; 2
    2ff0:	8c ea       	ldi	r24, 0xAC	; 172
    2ff2:	95 e0       	ldi	r25, 0x05	; 5
    2ff4:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2ff8:	6a ef       	ldi	r22, 0xFA	; 250
    2ffa:	72 e0       	ldi	r23, 0x02	; 2
    2ffc:	82 e8       	ldi	r24, 0x82	; 130
    2ffe:	95 e0       	ldi	r25, 0x05	; 5
    3000:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3004:	64 e0       	ldi	r22, 0x04	; 4
    3006:	73 e0       	ldi	r23, 0x03	; 3
    3008:	88 e8       	ldi	r24, 0x88	; 136
    300a:	95 e0       	ldi	r25, 0x05	; 5
    300c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3010:	6c e0       	ldi	r22, 0x0C	; 12
    3012:	73 e0       	ldi	r23, 0x03	; 3
    3014:	8e e8       	ldi	r24, 0x8E	; 142
    3016:	95 e0       	ldi	r25, 0x05	; 5
    3018:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    301c:	65 e1       	ldi	r22, 0x15	; 21
    301e:	73 e0       	ldi	r23, 0x03	; 3
    3020:	84 e9       	ldi	r24, 0x94	; 148
    3022:	95 e0       	ldi	r25, 0x05	; 5
    3024:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    3028:	6d e1       	ldi	r22, 0x1D	; 29
    302a:	73 e0       	ldi	r23, 0x03	; 3
    302c:	8a e6       	ldi	r24, 0x6A	; 106
    302e:	95 e0       	ldi	r25, 0x05	; 5
    3030:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3034:	61 e2       	ldi	r22, 0x21	; 33
    3036:	73 e0       	ldi	r23, 0x03	; 3
    3038:	80 e7       	ldi	r24, 0x70	; 112
    303a:	95 e0       	ldi	r25, 0x05	; 5
    303c:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3040:	65 e2       	ldi	r22, 0x25	; 37
    3042:	73 e0       	ldi	r23, 0x03	; 3
    3044:	86 e7       	ldi	r24, 0x76	; 118
    3046:	95 e0       	ldi	r25, 0x05	; 5
    3048:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    304c:	69 e2       	ldi	r22, 0x29	; 41
    304e:	73 e0       	ldi	r23, 0x03	; 3
    3050:	8c e7       	ldi	r24, 0x7C	; 124
    3052:	95 e0       	ldi	r25, 0x05	; 5
    3054:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    3058:	6d e2       	ldi	r22, 0x2D	; 45
    305a:	73 e0       	ldi	r23, 0x03	; 3
    305c:	8a e3       	ldi	r24, 0x3A	; 58
    305e:	95 e0       	ldi	r25, 0x05	; 5
    3060:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3064:	c0 e0       	ldi	r28, 0x00	; 0
    3066:	d0 e0       	ldi	r29, 0x00	; 0
    3068:	26 96       	adiw	r28, 0x06	; 6
    306a:	6a ea       	ldi	r22, 0xAA	; 170
    306c:	72 e0       	ldi	r23, 0x02	; 2
    306e:	ce 01       	movw	r24, r28
    3070:	86 5c       	subi	r24, 0xC6	; 198
    3072:	9a 4f       	sbci	r25, 0xFA	; 250
    3074:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3078:	ca 32       	cpi	r28, 0x2A	; 42
    307a:	d1 05       	cpc	r29, r1
    307c:	a9 f7       	brne	.-22     	; 0x3068 <_GLOBAL__sub_I__ZN6ScreenC2Ev+0x170>
    307e:	df 91       	pop	r29
    3080:	cf 91       	pop	r28
    3082:	08 95       	ret

00003084 <_GLOBAL__sub_D__ZN6ScreenC2Ev>:
    3084:	cf 93       	push	r28
    3086:	df 93       	push	r29
    3088:	ca e6       	ldi	r28, 0x6A	; 106
    308a:	d5 e0       	ldi	r29, 0x05	; 5
    308c:	26 97       	sbiw	r28, 0x06	; 6
    308e:	ce 01       	movw	r24, r28
    3090:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3094:	85 e0       	ldi	r24, 0x05	; 5
    3096:	ca 33       	cpi	r28, 0x3A	; 58
    3098:	d8 07       	cpc	r29, r24
    309a:	c1 f7       	brne	.-16     	; 0x308c <_GLOBAL__sub_D__ZN6ScreenC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    309c:	8c e7       	ldi	r24, 0x7C	; 124
    309e:	95 e0       	ldi	r25, 0x05	; 5
    30a0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30a4:	86 e7       	ldi	r24, 0x76	; 118
    30a6:	95 e0       	ldi	r25, 0x05	; 5
    30a8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30ac:	80 e7       	ldi	r24, 0x70	; 112
    30ae:	95 e0       	ldi	r25, 0x05	; 5
    30b0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30b4:	8a e6       	ldi	r24, 0x6A	; 106
    30b6:	95 e0       	ldi	r25, 0x05	; 5
    30b8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    30bc:	84 e9       	ldi	r24, 0x94	; 148
    30be:	95 e0       	ldi	r25, 0x05	; 5
    30c0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30c4:	8e e8       	ldi	r24, 0x8E	; 142
    30c6:	95 e0       	ldi	r25, 0x05	; 5
    30c8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30cc:	88 e8       	ldi	r24, 0x88	; 136
    30ce:	95 e0       	ldi	r25, 0x05	; 5
    30d0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30d4:	82 e8       	ldi	r24, 0x82	; 130
    30d6:	95 e0       	ldi	r25, 0x05	; 5
    30d8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    30dc:	8c ea       	ldi	r24, 0xAC	; 172
    30de:	95 e0       	ldi	r25, 0x05	; 5
    30e0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30e4:	86 ea       	ldi	r24, 0xA6	; 166
    30e6:	95 e0       	ldi	r25, 0x05	; 5
    30e8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30ec:	80 ea       	ldi	r24, 0xA0	; 160
    30ee:	95 e0       	ldi	r25, 0x05	; 5
    30f0:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    30f4:	8a e9       	ldi	r24, 0x9A	; 154
    30f6:	95 e0       	ldi	r25, 0x05	; 5
    30f8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    30fc:	84 ec       	ldi	r24, 0xC4	; 196
    30fe:	95 e0       	ldi	r25, 0x05	; 5
    3100:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3104:	8e eb       	ldi	r24, 0xBE	; 190
    3106:	95 e0       	ldi	r25, 0x05	; 5
    3108:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    310c:	88 eb       	ldi	r24, 0xB8	; 184
    310e:	95 e0       	ldi	r25, 0x05	; 5
    3110:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3114:	82 eb       	ldi	r24, 0xB2	; 178
    3116:	95 e0       	ldi	r25, 0x05	; 5
    3118:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    311c:	8c ed       	ldi	r24, 0xDC	; 220
    311e:	95 e0       	ldi	r25, 0x05	; 5
    3120:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3124:	86 ed       	ldi	r24, 0xD6	; 214
    3126:	95 e0       	ldi	r25, 0x05	; 5
    3128:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    312c:	80 ed       	ldi	r24, 0xD0	; 208
    312e:	95 e0       	ldi	r25, 0x05	; 5
    3130:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3134:	8a ec       	ldi	r24, 0xCA	; 202
    3136:	95 e0       	ldi	r25, 0x05	; 5
    3138:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    313c:	84 ef       	ldi	r24, 0xF4	; 244
    313e:	95 e0       	ldi	r25, 0x05	; 5
    3140:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3144:	8e ee       	ldi	r24, 0xEE	; 238
    3146:	95 e0       	ldi	r25, 0x05	; 5
    3148:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    314c:	88 ee       	ldi	r24, 0xE8	; 232
    314e:	95 e0       	ldi	r25, 0x05	; 5
    3150:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3154:	82 ee       	ldi	r24, 0xE2	; 226
    3156:	95 e0       	ldi	r25, 0x05	; 5
    3158:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    315c:	c8 e1       	ldi	r28, 0x18	; 24
    315e:	d6 e0       	ldi	r29, 0x06	; 6
    const int BKGCOLOR = 0x0000;
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    3160:	26 97       	sbiw	r28, 0x06	; 6
    3162:	ce 01       	movw	r24, r28
    3164:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3168:	85 e0       	ldi	r24, 0x05	; 5
    316a:	ca 3f       	cpi	r28, 0xFA	; 250
    316c:	d8 07       	cpc	r29, r24
    316e:	c1 f7       	brne	.-16     	; 0x3160 <_GLOBAL__sub_D__ZN6ScreenC2Ev+0xdc>
    3170:	df 91       	pop	r29
    3172:	cf 91       	pop	r28
    3174:	08 95       	ret

00003176 <_Z10encoderISRv>:
	screen.display(); // screen must be called after i2c calls because screen resets some variables (ex. menuChanged)
	Timer1.attachInterrupt(encoderISR);
}

void encoderISR(){
	control.updateParameters();
    3176:	86 e1       	ldi	r24, 0x16	; 22
    3178:	97 e0       	ldi	r25, 0x07	; 7
    317a:	0c 94 e8 0b 	jmp	0x17d0	; 0x17d0 <_ZN7Control16updateParametersEv>

0000317e <setup>:
Control control; 
Screen screen; 

void setup() {
	if(DEBUG) Serial.begin(57600);
	Wire.begin(8); // 0~7 are reserved
    317e:	68 e0       	ldi	r22, 0x08	; 8
    3180:	70 e0       	ldi	r23, 0x00	; 0
    3182:	8f e0       	ldi	r24, 0x0F	; 15
    3184:	99 e0       	ldi	r25, 0x09	; 9
    3186:	0e 94 98 41 	call	0x8330	; 0x8330 <_ZN7TwoWire5beginEi>
	control.init(&(parameters.data));
    318a:	60 ea       	ldi	r22, 0xA0	; 160
    318c:	77 e0       	ldi	r23, 0x07	; 7
    318e:	86 e1       	ldi	r24, 0x16	; 22
    3190:	97 e0       	ldi	r25, 0x07	; 7
    3192:	0e 94 4f 0b 	call	0x169e	; 0x169e <_ZN7Control4initEPN10Parameters8params_tE>
	screen.init(&control);
    3196:	66 e1       	ldi	r22, 0x16	; 22
    3198:	77 e0       	ldi	r23, 0x07	; 7
    319a:	88 e1       	ldi	r24, 0x18	; 24
    319c:	96 e0       	ldi	r25, 0x06	; 6
    319e:	09 de       	rcall	.-1006   	; 0x2db2 <_ZN6Screen4initEP7Control>
	Timer1.initialize(1000); // set a timer of length 1000 microseconds (or 0.001 sec - or 1000Hz)
    31a0:	48 ee       	ldi	r20, 0xE8	; 232
    31a2:	53 e0       	ldi	r21, 0x03	; 3
    31a4:	60 e0       	ldi	r22, 0x00	; 0
    31a6:	70 e0       	ldi	r23, 0x00	; 0
    31a8:	8b e9       	ldi	r24, 0x9B	; 155
    31aa:	98 e0       	ldi	r25, 0x08	; 8
    31ac:	a9 d2       	rcall	.+1362   	; 0x3700 <_ZN8TimerOne10initializeEl>
	Timer1.attachInterrupt( encoderISR );
    31ae:	2f ef       	ldi	r18, 0xFF	; 255
    31b0:	3f ef       	ldi	r19, 0xFF	; 255
    31b2:	a9 01       	movw	r20, r18
    31b4:	6b eb       	ldi	r22, 0xBB	; 187
    31b6:	78 e1       	ldi	r23, 0x18	; 24
    31b8:	8b e9       	ldi	r24, 0x9B	; 155
    31ba:	98 e0       	ldi	r25, 0x08	; 8
    31bc:	b6 c2       	rjmp	.+1388   	; 0x372a <_ZN8TimerOne15attachInterruptEPFvvEl>

000031be <loop>:
}

void loop() {
	control.read();
    31be:	86 e1       	ldi	r24, 0x16	; 22
    31c0:	97 e0       	ldi	r25, 0x07	; 7
    31c2:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <_ZN7Control4readEv>
	Timer1.detachInterrupt();
    31c6:	8b e9       	ldi	r24, 0x9B	; 155
    31c8:	98 e0       	ldi	r25, 0x08	; 8
    31ca:	a0 d2       	rcall	.+1344   	; 0x370c <_ZN8TimerOne15detachInterruptEv>
	Wire.onRequest(requestEvent); // register event
    31cc:	65 e8       	ldi	r22, 0x85	; 133
    31ce:	7a e1       	ldi	r23, 0x1A	; 26
    31d0:	8f e0       	ldi	r24, 0x0F	; 15
    31d2:	99 e0       	ldi	r25, 0x09	; 9
    31d4:	0e 94 99 41 	call	0x8332	; 0x8332 <_ZN7TwoWire9onRequestEPFvvE>
	screen.display(); // screen must be called after i2c calls because screen resets some variables (ex. menuChanged)
    31d8:	88 e1       	ldi	r24, 0x18	; 24
    31da:	96 e0       	ldi	r25, 0x06	; 6
    31dc:	44 de       	rcall	.-888    	; 0x2e66 <_ZN6Screen7displayEv>
	Timer1.attachInterrupt(encoderISR);
    31de:	2f ef       	ldi	r18, 0xFF	; 255
    31e0:	3f ef       	ldi	r19, 0xFF	; 255
    31e2:	a9 01       	movw	r20, r18
    31e4:	6b eb       	ldi	r22, 0xBB	; 187
    31e6:	78 e1       	ldi	r23, 0x18	; 24
    31e8:	8b e9       	ldi	r24, 0x9B	; 155
    31ea:	98 e0       	ldi	r25, 0x08	; 8
    31ec:	9e c2       	rjmp	.+1340   	; 0x372a <_ZN8TimerOne15attachInterruptEPFvvEl>

000031ee <_GLOBAL__sub_I_parameters>:
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
	Wire.write(byte1);
	Wire.write(byte2);
}
    31ee:	cf 93       	push	r28
    31f0:	df 93       	push	r29
    31f2:	66 ea       	ldi	r22, 0xA6	; 166
    31f4:	72 e0       	ldi	r23, 0x02	; 2
    31f6:	8d e7       	ldi	r24, 0x7D	; 125
    31f8:	98 e0       	ldi	r25, 0x08	; 8
    31fa:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    31fe:	6b ea       	ldi	r22, 0xAB	; 171
    3200:	72 e0       	ldi	r23, 0x02	; 2
    3202:	83 e8       	ldi	r24, 0x83	; 131
    3204:	98 e0       	ldi	r25, 0x08	; 8
    3206:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    320a:	60 eb       	ldi	r22, 0xB0	; 176
    320c:	72 e0       	ldi	r23, 0x02	; 2
    320e:	89 e8       	ldi	r24, 0x89	; 137
    3210:	98 e0       	ldi	r25, 0x08	; 8
    3212:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3216:	65 eb       	ldi	r22, 0xB5	; 181
    3218:	72 e0       	ldi	r23, 0x02	; 2
    321a:	8f e8       	ldi	r24, 0x8F	; 143
    321c:	98 e0       	ldi	r25, 0x08	; 8
    321e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3222:	68 eb       	ldi	r22, 0xB8	; 184
    3224:	72 e0       	ldi	r23, 0x02	; 2
    3226:	85 e9       	ldi	r24, 0x95	; 149
    3228:	98 e0       	ldi	r25, 0x08	; 8
    322a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    322e:	6e eb       	ldi	r22, 0xBE	; 190
    3230:	72 e0       	ldi	r23, 0x02	; 2
    3232:	85 e6       	ldi	r24, 0x65	; 101
    3234:	98 e0       	ldi	r25, 0x08	; 8
    3236:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    323a:	64 ec       	ldi	r22, 0xC4	; 196
    323c:	72 e0       	ldi	r23, 0x02	; 2
    323e:	8b e6       	ldi	r24, 0x6B	; 107
    3240:	98 e0       	ldi	r25, 0x08	; 8
    3242:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3246:	6a ec       	ldi	r22, 0xCA	; 202
    3248:	72 e0       	ldi	r23, 0x02	; 2
    324a:	81 e7       	ldi	r24, 0x71	; 113
    324c:	98 e0       	ldi	r25, 0x08	; 8
    324e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3252:	64 ec       	ldi	r22, 0xC4	; 196
    3254:	72 e0       	ldi	r23, 0x02	; 2
    3256:	87 e7       	ldi	r24, 0x77	; 119
    3258:	98 e0       	ldi	r25, 0x08	; 8
    325a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    325e:	6f ec       	ldi	r22, 0xCF	; 207
    3260:	72 e0       	ldi	r23, 0x02	; 2
    3262:	8d e4       	ldi	r24, 0x4D	; 77
    3264:	98 e0       	ldi	r25, 0x08	; 8
    3266:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    326a:	64 ec       	ldi	r22, 0xC4	; 196
    326c:	72 e0       	ldi	r23, 0x02	; 2
    326e:	83 e5       	ldi	r24, 0x53	; 83
    3270:	98 e0       	ldi	r25, 0x08	; 8
    3272:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3276:	65 ed       	ldi	r22, 0xD5	; 213
    3278:	72 e0       	ldi	r23, 0x02	; 2
    327a:	89 e5       	ldi	r24, 0x59	; 89
    327c:	98 e0       	ldi	r25, 0x08	; 8
    327e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3282:	6a ec       	ldi	r22, 0xCA	; 202
    3284:	72 e0       	ldi	r23, 0x02	; 2
    3286:	8f e5       	ldi	r24, 0x5F	; 95
    3288:	98 e0       	ldi	r25, 0x08	; 8
    328a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    328e:	6a ed       	ldi	r22, 0xDA	; 218
    3290:	72 e0       	ldi	r23, 0x02	; 2
    3292:	85 e3       	ldi	r24, 0x35	; 53
    3294:	98 e0       	ldi	r25, 0x08	; 8
    3296:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    329a:	6f ed       	ldi	r22, 0xDF	; 223
    329c:	72 e0       	ldi	r23, 0x02	; 2
    329e:	8b e3       	ldi	r24, 0x3B	; 59
    32a0:	98 e0       	ldi	r25, 0x08	; 8
    32a2:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    32a6:	64 ee       	ldi	r22, 0xE4	; 228
    32a8:	72 e0       	ldi	r23, 0x02	; 2
    32aa:	81 e4       	ldi	r24, 0x41	; 65
    32ac:	98 e0       	ldi	r25, 0x08	; 8
    32ae:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    32b2:	69 ee       	ldi	r22, 0xE9	; 233
    32b4:	72 e0       	ldi	r23, 0x02	; 2
    32b6:	87 e4       	ldi	r24, 0x47	; 71
    32b8:	98 e0       	ldi	r25, 0x08	; 8
    32ba:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    32be:	6f ec       	ldi	r22, 0xCF	; 207
    32c0:	72 e0       	ldi	r23, 0x02	; 2
    32c2:	8d e1       	ldi	r24, 0x1D	; 29
    32c4:	98 e0       	ldi	r25, 0x08	; 8
    32c6:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    32ca:	6e ee       	ldi	r22, 0xEE	; 238
    32cc:	72 e0       	ldi	r23, 0x02	; 2
    32ce:	83 e2       	ldi	r24, 0x23	; 35
    32d0:	98 e0       	ldi	r25, 0x08	; 8
    32d2:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    32d6:	63 ef       	ldi	r22, 0xF3	; 243
    32d8:	72 e0       	ldi	r23, 0x02	; 2
    32da:	89 e2       	ldi	r24, 0x29	; 41
    32dc:	98 e0       	ldi	r25, 0x08	; 8
    32de:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    32e2:	6a ec       	ldi	r22, 0xCA	; 202
    32e4:	72 e0       	ldi	r23, 0x02	; 2
    32e6:	8f e2       	ldi	r24, 0x2F	; 47
    32e8:	98 e0       	ldi	r25, 0x08	; 8
    32ea:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    32ee:	6a ef       	ldi	r22, 0xFA	; 250
    32f0:	72 e0       	ldi	r23, 0x02	; 2
    32f2:	85 e0       	ldi	r24, 0x05	; 5
    32f4:	98 e0       	ldi	r25, 0x08	; 8
    32f6:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    32fa:	64 e0       	ldi	r22, 0x04	; 4
    32fc:	73 e0       	ldi	r23, 0x03	; 3
    32fe:	8b e0       	ldi	r24, 0x0B	; 11
    3300:	98 e0       	ldi	r25, 0x08	; 8
    3302:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3306:	6c e0       	ldi	r22, 0x0C	; 12
    3308:	73 e0       	ldi	r23, 0x03	; 3
    330a:	81 e1       	ldi	r24, 0x11	; 17
    330c:	98 e0       	ldi	r25, 0x08	; 8
    330e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3312:	65 e1       	ldi	r22, 0x15	; 21
    3314:	73 e0       	ldi	r23, 0x03	; 3
    3316:	87 e1       	ldi	r24, 0x17	; 23
    3318:	98 e0       	ldi	r25, 0x08	; 8
    331a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    331e:	6d e1       	ldi	r22, 0x1D	; 29
    3320:	73 e0       	ldi	r23, 0x03	; 3
    3322:	8d ee       	ldi	r24, 0xED	; 237
    3324:	97 e0       	ldi	r25, 0x07	; 7
    3326:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    332a:	61 e2       	ldi	r22, 0x21	; 33
    332c:	73 e0       	ldi	r23, 0x03	; 3
    332e:	83 ef       	ldi	r24, 0xF3	; 243
    3330:	97 e0       	ldi	r25, 0x07	; 7
    3332:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3336:	65 e2       	ldi	r22, 0x25	; 37
    3338:	73 e0       	ldi	r23, 0x03	; 3
    333a:	89 ef       	ldi	r24, 0xF9	; 249
    333c:	97 e0       	ldi	r25, 0x07	; 7
    333e:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    3342:	69 e2       	ldi	r22, 0x29	; 41
    3344:	73 e0       	ldi	r23, 0x03	; 3
    3346:	8f ef       	ldi	r24, 0xFF	; 255
    3348:	97 e0       	ldi	r25, 0x07	; 7
    334a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    334e:	6d e2       	ldi	r22, 0x2D	; 45
    3350:	73 e0       	ldi	r23, 0x03	; 3
    3352:	8d eb       	ldi	r24, 0xBD	; 189
    3354:	97 e0       	ldi	r25, 0x07	; 7
    3356:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    335a:	c0 e0       	ldi	r28, 0x00	; 0
    335c:	d0 e0       	ldi	r29, 0x00	; 0
    335e:	26 96       	adiw	r28, 0x06	; 6
    3360:	6a ea       	ldi	r22, 0xAA	; 170
    3362:	72 e0       	ldi	r23, 0x02	; 2
    3364:	ce 01       	movw	r24, r28
    3366:	83 54       	subi	r24, 0x43	; 67
    3368:	98 4f       	sbci	r25, 0xF8	; 248
    336a:	0e 94 6f 46 	call	0x8cde	; 0x8cde <_ZN6StringC1EPKc>
    336e:	ca 32       	cpi	r28, 0x2A	; 42
    3370:	d1 05       	cpc	r29, r1
    3372:	a9 f7       	brne	.-22     	; 0x335e <_GLOBAL__sub_I_parameters+0x170>
    3374:	10 92 a0 07 	sts	0x07A0, r1	; 0x8007a0 <parameters>
    3378:	10 92 a1 07 	sts	0x07A1, r1	; 0x8007a1 <parameters+0x1>
    337c:	8c ed       	ldi	r24, 0xDC	; 220
    337e:	90 e0       	ldi	r25, 0x00	; 0
    3380:	90 93 a3 07 	sts	0x07A3, r25	; 0x8007a3 <parameters+0x3>
    3384:	80 93 a2 07 	sts	0x07A2, r24	; 0x8007a2 <parameters+0x2>
    3388:	10 92 a4 07 	sts	0x07A4, r1	; 0x8007a4 <parameters+0x4>
    338c:	80 e0       	ldi	r24, 0x00	; 0
    338e:	90 e0       	ldi	r25, 0x00	; 0
    3390:	a0 e8       	ldi	r26, 0x80	; 128
    3392:	b0 e4       	ldi	r27, 0x40	; 64
    3394:	80 93 a5 07 	sts	0x07A5, r24	; 0x8007a5 <parameters+0x5>
    3398:	90 93 a6 07 	sts	0x07A6, r25	; 0x8007a6 <parameters+0x6>
    339c:	a0 93 a7 07 	sts	0x07A7, r26	; 0x8007a7 <parameters+0x7>
    33a0:	b0 93 a8 07 	sts	0x07A8, r27	; 0x8007a8 <parameters+0x8>
    33a4:	10 92 a9 07 	sts	0x07A9, r1	; 0x8007a9 <parameters+0x9>
    33a8:	80 ee       	ldi	r24, 0xE0	; 224
    33aa:	9e e2       	ldi	r25, 0x2E	; 46
    33ac:	90 93 ab 07 	sts	0x07AB, r25	; 0x8007ab <parameters+0xb>
    33b0:	80 93 aa 07 	sts	0x07AA, r24	; 0x8007aa <parameters+0xa>
    33b4:	88 e2       	ldi	r24, 0x28	; 40
    33b6:	80 93 ac 07 	sts	0x07AC, r24	; 0x8007ac <parameters+0xc>
    33ba:	10 92 ad 07 	sts	0x07AD, r1	; 0x8007ad <parameters+0xd>
    33be:	10 92 af 07 	sts	0x07AF, r1	; 0x8007af <parameters+0xf>
    33c2:	10 92 ae 07 	sts	0x07AE, r1	; 0x8007ae <parameters+0xe>
    33c6:	88 ec       	ldi	r24, 0xC8	; 200
    33c8:	90 e0       	ldi	r25, 0x00	; 0
    33ca:	90 93 b1 07 	sts	0x07B1, r25	; 0x8007b1 <parameters+0x11>
    33ce:	80 93 b0 07 	sts	0x07B0, r24	; 0x8007b0 <parameters+0x10>
    33d2:	84 eb       	ldi	r24, 0xB4	; 180
    33d4:	80 93 b2 07 	sts	0x07B2, r24	; 0x8007b2 <parameters+0x12>
    33d8:	8a ef       	ldi	r24, 0xFA	; 250
    33da:	90 e0       	ldi	r25, 0x00	; 0
    33dc:	90 93 b4 07 	sts	0x07B4, r25	; 0x8007b4 <parameters+0x14>
    33e0:	80 93 b3 07 	sts	0x07B3, r24	; 0x8007b3 <parameters+0x13>
    33e4:	10 92 b5 07 	sts	0x07B5, r1	; 0x8007b5 <parameters+0x15>
    33e8:	10 92 b6 07 	sts	0x07B6, r1	; 0x8007b6 <parameters+0x16>
    33ec:	10 92 b7 07 	sts	0x07B7, r1	; 0x8007b7 <parameters+0x17>
    33f0:	10 92 b8 07 	sts	0x07B8, r1	; 0x8007b8 <parameters+0x18>
    33f4:	8f e7       	ldi	r24, 0x7F	; 127
    33f6:	80 93 b9 07 	sts	0x07B9, r24	; 0x8007b9 <parameters+0x19>
    33fa:	10 92 ba 07 	sts	0x07BA, r1	; 0x8007ba <parameters+0x1a>
    33fe:	10 92 bb 07 	sts	0x07BB, r1	; 0x8007bb <parameters+0x1b>
    3402:	10 92 bc 07 	sts	0x07BC, r1	; 0x8007bc <parameters+0x1c>
#include "GLOBALS.h"

#define DEBUG 0

Parameters parameters;
Control control; 
    3406:	86 e1       	ldi	r24, 0x16	; 22
    3408:	97 e0       	ldi	r25, 0x07	; 7
    340a:	0e 94 46 0a 	call	0x148c	; 0x148c <_ZN7ControlC1Ev>
Screen screen; 
    340e:	88 e1       	ldi	r24, 0x18	; 24
    3410:	96 e0       	ldi	r25, 0x06	; 6
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
	Wire.write(byte1);
	Wire.write(byte2);
}
    3412:	df 91       	pop	r29
    3414:	cf 91       	pop	r28

#define DEBUG 0

Parameters parameters;
Control control; 
Screen screen; 
    3416:	b0 cc       	rjmp	.-1696   	; 0x2d78 <_ZN6ScreenC1Ev>

00003418 <_GLOBAL__sub_D_parameters>:
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
	Wire.write(byte1);
	Wire.write(byte2);
}
    3418:	cf 93       	push	r28
    341a:	df 93       	push	r29
    341c:	cd ee       	ldi	r28, 0xED	; 237
    341e:	d7 e0       	ldi	r29, 0x07	; 7
    3420:	26 97       	sbiw	r28, 0x06	; 6
    3422:	ce 01       	movw	r24, r28
    3424:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3428:	87 e0       	ldi	r24, 0x07	; 7
    342a:	cd 3b       	cpi	r28, 0xBD	; 189
    342c:	d8 07       	cpc	r29, r24
    342e:	c1 f7       	brne	.-16     	; 0x3420 <_GLOBAL__sub_D_parameters+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    3430:	8f ef       	ldi	r24, 0xFF	; 255
    3432:	97 e0       	ldi	r25, 0x07	; 7
    3434:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3438:	89 ef       	ldi	r24, 0xF9	; 249
    343a:	97 e0       	ldi	r25, 0x07	; 7
    343c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3440:	83 ef       	ldi	r24, 0xF3	; 243
    3442:	97 e0       	ldi	r25, 0x07	; 7
    3444:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3448:	8d ee       	ldi	r24, 0xED	; 237
    344a:	97 e0       	ldi	r25, 0x07	; 7
    344c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    3450:	87 e1       	ldi	r24, 0x17	; 23
    3452:	98 e0       	ldi	r25, 0x08	; 8
    3454:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3458:	81 e1       	ldi	r24, 0x11	; 17
    345a:	98 e0       	ldi	r25, 0x08	; 8
    345c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3460:	8b e0       	ldi	r24, 0x0B	; 11
    3462:	98 e0       	ldi	r25, 0x08	; 8
    3464:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3468:	85 e0       	ldi	r24, 0x05	; 5
    346a:	98 e0       	ldi	r25, 0x08	; 8
    346c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    3470:	8f e2       	ldi	r24, 0x2F	; 47
    3472:	98 e0       	ldi	r25, 0x08	; 8
    3474:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3478:	89 e2       	ldi	r24, 0x29	; 41
    347a:	98 e0       	ldi	r25, 0x08	; 8
    347c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3480:	83 e2       	ldi	r24, 0x23	; 35
    3482:	98 e0       	ldi	r25, 0x08	; 8
    3484:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3488:	8d e1       	ldi	r24, 0x1D	; 29
    348a:	98 e0       	ldi	r25, 0x08	; 8
    348c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    3490:	87 e4       	ldi	r24, 0x47	; 71
    3492:	98 e0       	ldi	r25, 0x08	; 8
    3494:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    3498:	81 e4       	ldi	r24, 0x41	; 65
    349a:	98 e0       	ldi	r25, 0x08	; 8
    349c:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34a0:	8b e3       	ldi	r24, 0x3B	; 59
    34a2:	98 e0       	ldi	r25, 0x08	; 8
    34a4:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34a8:	85 e3       	ldi	r24, 0x35	; 53
    34aa:	98 e0       	ldi	r25, 0x08	; 8
    34ac:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    34b0:	8f e5       	ldi	r24, 0x5F	; 95
    34b2:	98 e0       	ldi	r25, 0x08	; 8
    34b4:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34b8:	89 e5       	ldi	r24, 0x59	; 89
    34ba:	98 e0       	ldi	r25, 0x08	; 8
    34bc:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34c0:	83 e5       	ldi	r24, 0x53	; 83
    34c2:	98 e0       	ldi	r25, 0x08	; 8
    34c4:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34c8:	8d e4       	ldi	r24, 0x4D	; 77
    34ca:	98 e0       	ldi	r25, 0x08	; 8
    34cc:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    34d0:	87 e7       	ldi	r24, 0x77	; 119
    34d2:	98 e0       	ldi	r25, 0x08	; 8
    34d4:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34d8:	81 e7       	ldi	r24, 0x71	; 113
    34da:	98 e0       	ldi	r25, 0x08	; 8
    34dc:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34e0:	8b e6       	ldi	r24, 0x6B	; 107
    34e2:	98 e0       	ldi	r25, 0x08	; 8
    34e4:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34e8:	85 e6       	ldi	r24, 0x65	; 101
    34ea:	98 e0       	ldi	r25, 0x08	; 8
    34ec:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34f0:	cb e9       	ldi	r28, 0x9B	; 155
    34f2:	d8 e0       	ldi	r29, 0x08	; 8
    const int BKGCOLOR = 0x0000;
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    34f4:	26 97       	sbiw	r28, 0x06	; 6
    34f6:	ce 01       	movw	r24, r28
    34f8:	0e 94 08 46 	call	0x8c10	; 0x8c10 <_ZN6StringD1Ev>
    34fc:	88 e0       	ldi	r24, 0x08	; 8
    34fe:	cd 37       	cpi	r28, 0x7D	; 125
    3500:	d8 07       	cpc	r29, r24
    3502:	c1 f7       	brne	.-16     	; 0x34f4 <_GLOBAL__sub_D_parameters+0xdc>
    3504:	df 91       	pop	r29
    3506:	cf 91       	pop	r28
    3508:	08 95       	ret

0000350a <_Z12requestEventv>:

void encoderISR(){
	control.updateParameters();
}

void requestEvent(){   	
    350a:	cf 93       	push	r28
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
	byte byte2 = 0;
	
	switch (parameters.data.menu)
    350c:	60 91 a0 07 	lds	r22, 0x07A0	; 0x8007a0 <parameters>
    3510:	61 11       	cpse	r22, r1
    3512:	17 c0       	rjmp	.+46     	; 0x3542 <_Z12requestEventv+0x38>
	{			
		// Lowest nibble -> menu
		// Highest nibble -> param num (ex: oscWave=0, oscFreq=1, lfoWave=2, lfoFreq=3)
		case 0: 
			if (control.enc1h.changed)
    3514:	80 91 49 07 	lds	r24, 0x0749	; 0x800749 <control+0x33>
    3518:	88 23       	and	r24, r24
    351a:	19 f0       	breq	.+6      	; 0x3522 <_Z12requestEventv+0x18>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = parameters.data.oscWave;
    351c:	c0 91 a1 07 	lds	r28, 0x07A1	; 0x8007a1 <parameters+0x1>
    3520:	02 c0       	rjmp	.+4      	; 0x3526 <_Z12requestEventv+0x1c>
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
    3522:	c0 e0       	ldi	r28, 0x00	; 0
	2nd byte - parameter value
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
    3524:	60 e8       	ldi	r22, 0x80	; 128
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = parameters.data.oscWave;
			    //byte2 = 0;
			}	
			if (control.enc2h.changed)
    3526:	80 91 5c 07 	lds	r24, 0x075C	; 0x80075c <control+0x46>
    352a:	81 11       	cpse	r24, r1
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
    352c:	60 e1       	ldi	r22, 0x10	; 16
			}
			if (control.enc3h.changed)
    352e:	80 91 6f 07 	lds	r24, 0x076F	; 0x80076f <control+0x59>
    3532:	81 11       	cpse	r24, r1
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
    3534:	60 e2       	ldi	r22, 0x20	; 32
			}
			if (control.enc4h.changed)
    3536:	80 91 82 07 	lds	r24, 0x0782	; 0x800782 <control+0x6c>
    353a:	88 23       	and	r24, r24
    353c:	21 f0       	breq	.+8      	; 0x3546 <_Z12requestEventv+0x3c>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
    353e:	60 e3       	ldi	r22, 0x30	; 48
    3540:	02 c0       	rjmp	.+4      	; 0x3546 <_Z12requestEventv+0x3c>
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
    3542:	c0 e0       	ldi	r28, 0x00	; 0
	2nd byte - parameter value
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
    3544:	60 e8       	ldi	r22, 0x80	; 128
		break;
		
		default:	
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
    3546:	8f e0       	ldi	r24, 0x0F	; 15
    3548:	99 e0       	ldi	r25, 0x09	; 9
    354a:	0e 94 42 41 	call	0x8284	; 0x8284 <_ZN7TwoWire5writeEh>
	Wire.write(byte1);
    354e:	6c 2f       	mov	r22, r28
    3550:	8f e0       	ldi	r24, 0x0F	; 15
    3552:	99 e0       	ldi	r25, 0x09	; 9
    3554:	0e 94 42 41 	call	0x8284	; 0x8284 <_ZN7TwoWire5writeEh>
	Wire.write(byte2);
    3558:	60 e0       	ldi	r22, 0x00	; 0
    355a:	8f e0       	ldi	r24, 0x0F	; 15
    355c:	99 e0       	ldi	r25, 0x09	; 9
}
    355e:	cf 91       	pop	r28
		default:	
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
	Wire.write(byte1);
	Wire.write(byte2);
    3560:	0c 94 42 41 	jmp	0x8284	; 0x8284 <_ZN7TwoWire5writeEh>

00003564 <_ZN6RotaryC1Ev>:
#endif

/*
 * Constructor. Each arg is the pin number for each encoder contact.
 */
Rotary::Rotary(){}
    3564:	08 95       	ret

00003566 <_ZN6RotaryC1Ecc>:
Rotary::Rotary(char _pin1, char _pin2) {
    3566:	cf 93       	push	r28
    3568:	df 93       	push	r29
    356a:	ec 01       	movw	r28, r24
    356c:	86 2f       	mov	r24, r22
  // Assign variables.
  pin1 = _pin1;
    356e:	69 83       	std	Y+1, r22	; 0x01
  pin2 = _pin2;
    3570:	4a 83       	std	Y+2, r20	; 0x02
  // Set pins to input.
  pinMode(pin1, INPUT);
    3572:	60 e0       	ldi	r22, 0x00	; 0
    3574:	0e 94 76 45 	call	0x8aec	; 0x8aec <pinMode>
  pinMode(pin2, INPUT);
    3578:	60 e0       	ldi	r22, 0x00	; 0
    357a:	8a 81       	ldd	r24, Y+2	; 0x02
    357c:	0e 94 76 45 	call	0x8aec	; 0x8aec <pinMode>
#ifdef ENABLE_PULLUPS
  digitalWrite(pin1, HIGH);
    3580:	61 e0       	ldi	r22, 0x01	; 1
    3582:	89 81       	ldd	r24, Y+1	; 0x01
    3584:	0e 94 b2 45 	call	0x8b64	; 0x8b64 <digitalWrite>
  digitalWrite(pin2, HIGH);
    3588:	61 e0       	ldi	r22, 0x01	; 1
    358a:	8a 81       	ldd	r24, Y+2	; 0x02
    358c:	0e 94 b2 45 	call	0x8b64	; 0x8b64 <digitalWrite>
#endif
  // Initialise state.
  state = R_START;
    3590:	18 82       	st	Y, r1
}
    3592:	df 91       	pop	r29
    3594:	cf 91       	pop	r28
    3596:	08 95       	ret

00003598 <_ZN6Rotary7processEv>:

unsigned char Rotary::process() {
    3598:	0f 93       	push	r16
    359a:	1f 93       	push	r17
    359c:	cf 93       	push	r28
    359e:	df 93       	push	r29
    35a0:	ec 01       	movw	r28, r24
  // Grab state of input pins.
  unsigned char pinstate = (digitalRead(pin2) << 1) | digitalRead(pin1);
    35a2:	8a 81       	ldd	r24, Y+2	; 0x02
    35a4:	0e 94 e0 45 	call	0x8bc0	; 0x8bc0 <digitalRead>
    35a8:	8c 01       	movw	r16, r24
    35aa:	89 81       	ldd	r24, Y+1	; 0x01
    35ac:	0e 94 e0 45 	call	0x8bc0	; 0x8bc0 <digitalRead>
  // Determine new state from the pins and state table.
  state = ttable[state & 0xf][pinstate];
    35b0:	e8 81       	ld	r30, Y
    35b2:	ef 70       	andi	r30, 0x0F	; 15
    35b4:	00 0f       	add	r16, r16
    35b6:	11 1f       	adc	r17, r17
    35b8:	80 2b       	or	r24, r16
    35ba:	94 e0       	ldi	r25, 0x04	; 4
    35bc:	e9 9f       	mul	r30, r25
    35be:	f0 01       	movw	r30, r0
    35c0:	11 24       	eor	r1, r1
    35c2:	ee 5a       	subi	r30, 0xAE	; 174
    35c4:	fc 4f       	sbci	r31, 0xFC	; 252
    35c6:	e8 0f       	add	r30, r24
    35c8:	f1 1d       	adc	r31, r1
    35ca:	80 81       	ld	r24, Z
    35cc:	88 83       	st	Y, r24
  // Return emit bits, ie the generated event.
  return state & 0x30;
}
    35ce:	80 73       	andi	r24, 0x30	; 48
    35d0:	df 91       	pop	r29
    35d2:	cf 91       	pop	r28
    35d4:	1f 91       	pop	r17
    35d6:	0f 91       	pop	r16
    35d8:	08 95       	ret

000035da <__vector_20>:
  else if(pin == 2 || pin == 10) {
    DDRB |= _BV(PORTB2);
    TCCR1A |= _BV(COM1B1);
  }
  setPwmDuty(pin, duty);
  resume();			// Lex - make sure the clock is running.  We don't want to restart the count, in case we are starting the second WGM
    35da:	1f 92       	push	r1
    35dc:	0f 92       	push	r0
    35de:	0f b6       	in	r0, 0x3f	; 63
    35e0:	0f 92       	push	r0
    35e2:	11 24       	eor	r1, r1
    35e4:	0b b6       	in	r0, 0x3b	; 59
    35e6:	0f 92       	push	r0
    35e8:	2f 93       	push	r18
    35ea:	3f 93       	push	r19
    35ec:	4f 93       	push	r20
    35ee:	5f 93       	push	r21
    35f0:	6f 93       	push	r22
    35f2:	7f 93       	push	r23
    35f4:	8f 93       	push	r24
    35f6:	9f 93       	push	r25
    35f8:	af 93       	push	r26
    35fa:	bf 93       	push	r27
    35fc:	ef 93       	push	r30
    35fe:	ff 93       	push	r31
    3600:	e0 91 9f 08 	lds	r30, 0x089F	; 0x80089f <Timer1+0x4>
    3604:	f0 91 a0 08 	lds	r31, 0x08A0	; 0x8008a0 <Timer1+0x5>
    3608:	19 95       	eicall
    360a:	ff 91       	pop	r31
    360c:	ef 91       	pop	r30
    360e:	bf 91       	pop	r27
    3610:	af 91       	pop	r26
    3612:	9f 91       	pop	r25
    3614:	8f 91       	pop	r24
    3616:	7f 91       	pop	r23
    3618:	6f 91       	pop	r22
    361a:	5f 91       	pop	r21
    361c:	4f 91       	pop	r20
    361e:	3f 91       	pop	r19
    3620:	2f 91       	pop	r18
    3622:	0f 90       	pop	r0
    3624:	0b be       	out	0x3b, r0	; 59
    3626:	0f 90       	pop	r0
    3628:	0f be       	out	0x3f, r0	; 63
    362a:	0f 90       	pop	r0
    362c:	1f 90       	pop	r1
    362e:	18 95       	reti

00003630 <_ZN8TimerOne9setPeriodEl>:
    3630:	fc 01       	movw	r30, r24
    3632:	a3 e0       	ldi	r26, 0x03	; 3
    3634:	44 0f       	add	r20, r20
    3636:	55 1f       	adc	r21, r21
    3638:	66 1f       	adc	r22, r22
    363a:	77 1f       	adc	r23, r23
    363c:	aa 95       	dec	r26
    363e:	d1 f7       	brne	.-12     	; 0x3634 <_ZN8TimerOne9setPeriodEl+0x4>
    3640:	41 15       	cp	r20, r1
    3642:	51 05       	cpc	r21, r1
    3644:	81 e0       	ldi	r24, 0x01	; 1
    3646:	68 07       	cpc	r22, r24
    3648:	71 05       	cpc	r23, r1
    364a:	14 f4       	brge	.+4      	; 0x3650 <_ZN8TimerOne9setPeriodEl+0x20>
    364c:	81 e0       	ldi	r24, 0x01	; 1
    364e:	0e c0       	rjmp	.+28     	; 0x366c <_ZN8TimerOne9setPeriodEl+0x3c>
    3650:	33 e0       	ldi	r19, 0x03	; 3
    3652:	75 95       	asr	r23
    3654:	67 95       	ror	r22
    3656:	57 95       	ror	r21
    3658:	47 95       	ror	r20
    365a:	3a 95       	dec	r19
    365c:	d1 f7       	brne	.-12     	; 0x3652 <_ZN8TimerOne9setPeriodEl+0x22>
    365e:	41 15       	cp	r20, r1
    3660:	51 05       	cpc	r21, r1
    3662:	81 e0       	ldi	r24, 0x01	; 1
    3664:	68 07       	cpc	r22, r24
    3666:	71 05       	cpc	r23, r1
    3668:	1c f4       	brge	.+6      	; 0x3670 <_ZN8TimerOne9setPeriodEl+0x40>
    366a:	82 e0       	ldi	r24, 0x02	; 2
    366c:	82 83       	std	Z+2, r24	; 0x02
    366e:	31 c0       	rjmp	.+98     	; 0x36d2 <_ZN8TimerOne9setPeriodEl+0xa2>
    3670:	23 e0       	ldi	r18, 0x03	; 3
    3672:	75 95       	asr	r23
    3674:	67 95       	ror	r22
    3676:	57 95       	ror	r21
    3678:	47 95       	ror	r20
    367a:	2a 95       	dec	r18
    367c:	d1 f7       	brne	.-12     	; 0x3672 <_ZN8TimerOne9setPeriodEl+0x42>
    367e:	41 15       	cp	r20, r1
    3680:	51 05       	cpc	r21, r1
    3682:	81 e0       	ldi	r24, 0x01	; 1
    3684:	68 07       	cpc	r22, r24
    3686:	71 05       	cpc	r23, r1
    3688:	14 f4       	brge	.+4      	; 0x368e <_ZN8TimerOne9setPeriodEl+0x5e>
    368a:	83 e0       	ldi	r24, 0x03	; 3
    368c:	ef cf       	rjmp	.-34     	; 0x366c <_ZN8TimerOne9setPeriodEl+0x3c>
    368e:	92 e0       	ldi	r25, 0x02	; 2
    3690:	75 95       	asr	r23
    3692:	67 95       	ror	r22
    3694:	57 95       	ror	r21
    3696:	47 95       	ror	r20
    3698:	9a 95       	dec	r25
    369a:	d1 f7       	brne	.-12     	; 0x3690 <_ZN8TimerOne9setPeriodEl+0x60>
    369c:	41 15       	cp	r20, r1
    369e:	51 05       	cpc	r21, r1
    36a0:	81 e0       	ldi	r24, 0x01	; 1
    36a2:	68 07       	cpc	r22, r24
    36a4:	71 05       	cpc	r23, r1
    36a6:	14 f4       	brge	.+4      	; 0x36ac <_ZN8TimerOne9setPeriodEl+0x7c>
    36a8:	84 e0       	ldi	r24, 0x04	; 4
    36aa:	e0 cf       	rjmp	.-64     	; 0x366c <_ZN8TimerOne9setPeriodEl+0x3c>
    36ac:	82 e0       	ldi	r24, 0x02	; 2
    36ae:	75 95       	asr	r23
    36b0:	67 95       	ror	r22
    36b2:	57 95       	ror	r21
    36b4:	47 95       	ror	r20
    36b6:	8a 95       	dec	r24
    36b8:	d1 f7       	brne	.-12     	; 0x36ae <_ZN8TimerOne9setPeriodEl+0x7e>
    36ba:	85 e0       	ldi	r24, 0x05	; 5
    36bc:	82 83       	std	Z+2, r24	; 0x02
    36be:	41 15       	cp	r20, r1
    36c0:	51 05       	cpc	r21, r1
    36c2:	81 e0       	ldi	r24, 0x01	; 1
    36c4:	68 07       	cpc	r22, r24
    36c6:	71 05       	cpc	r23, r1
    36c8:	24 f0       	brlt	.+8      	; 0x36d2 <_ZN8TimerOne9setPeriodEl+0xa2>
    36ca:	4f ef       	ldi	r20, 0xFF	; 255
    36cc:	5f ef       	ldi	r21, 0xFF	; 255
    36ce:	60 e0       	ldi	r22, 0x00	; 0
    36d0:	70 e0       	ldi	r23, 0x00	; 0
    36d2:	8f b7       	in	r24, 0x3f	; 63
    36d4:	83 83       	std	Z+3, r24	; 0x03
    36d6:	f8 94       	cli
    36d8:	51 83       	std	Z+1, r21	; 0x01
    36da:	40 83       	st	Z, r20
    36dc:	50 93 87 00 	sts	0x0087, r21	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
    36e0:	40 93 86 00 	sts	0x0086, r20	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
    36e4:	83 81       	ldd	r24, Z+3	; 0x03
    36e6:	8f bf       	out	0x3f, r24	; 63
    36e8:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    36ec:	88 7f       	andi	r24, 0xF8	; 248
    36ee:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    36f2:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    36f6:	82 81       	ldd	r24, Z+2	; 0x02
    36f8:	89 2b       	or	r24, r25
    36fa:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    36fe:	08 95       	ret

00003700 <_ZN8TimerOne10initializeEl>:
    3700:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    3704:	20 e1       	ldi	r18, 0x10	; 16
    3706:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    370a:	92 cf       	rjmp	.-220    	; 0x3630 <_ZN8TimerOne9setPeriodEl>

0000370c <_ZN8TimerOne15detachInterruptEv>:
    370c:	ef e6       	ldi	r30, 0x6F	; 111
    370e:	f0 e0       	ldi	r31, 0x00	; 0
    3710:	80 81       	ld	r24, Z
    3712:	8e 7f       	andi	r24, 0xFE	; 254
    3714:	80 83       	st	Z, r24
    3716:	08 95       	ret

00003718 <_ZN8TimerOne6resumeEv>:
    3718:	e1 e8       	ldi	r30, 0x81	; 129
    371a:	f0 e0       	ldi	r31, 0x00	; 0
    371c:	20 81       	ld	r18, Z
    371e:	dc 01       	movw	r26, r24
    3720:	12 96       	adiw	r26, 0x02	; 2
    3722:	8c 91       	ld	r24, X
    3724:	82 2b       	or	r24, r18
    3726:	80 83       	st	Z, r24
    3728:	08 95       	ret

0000372a <_ZN8TimerOne15attachInterruptEPFvvEl>:
  if(pin == 1 || pin == 9)       TCCR1A &= ~_BV(COM1A1);   // clear the bit that enables pwm on PB1
  else if(pin == 2 || pin == 10) TCCR1A &= ~_BV(COM1B1);   // clear the bit that enables pwm on PB2
}

void TimerOne::attachInterrupt(void (*isr)(), long microseconds)
{
    372a:	0f 93       	push	r16
    372c:	1f 93       	push	r17
    372e:	cf 93       	push	r28
    3730:	df 93       	push	r29
    3732:	ec 01       	movw	r28, r24
    3734:	8b 01       	movw	r16, r22
    3736:	ba 01       	movw	r22, r20
    3738:	a9 01       	movw	r20, r18
  if(microseconds > 0) setPeriod(microseconds);
    373a:	14 16       	cp	r1, r20
    373c:	15 06       	cpc	r1, r21
    373e:	16 06       	cpc	r1, r22
    3740:	17 06       	cpc	r1, r23
    3742:	0c f4       	brge	.+2      	; 0x3746 <_ZN8TimerOne15attachInterruptEPFvvEl+0x1c>
    3744:	75 df       	rcall	.-278    	; 0x3630 <_ZN8TimerOne9setPeriodEl>
  isrCallback = isr;                                       // register the user's callback with the real ISR
    3746:	1d 83       	std	Y+5, r17	; 0x05
    3748:	0c 83       	std	Y+4, r16	; 0x04
  TIMSK1 = _BV(TOIE1);                                     // sets the timer overflow interrupt enable bit
    374a:	81 e0       	ldi	r24, 0x01	; 1
    374c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
	// might be running with interrupts disabled (eg inside an ISR), so don't touch the global state
//  sei();
  resume();												
    3750:	ce 01       	movw	r24, r28
}
    3752:	df 91       	pop	r29
    3754:	cf 91       	pop	r28
    3756:	1f 91       	pop	r17
  if(microseconds > 0) setPeriod(microseconds);
  isrCallback = isr;                                       // register the user's callback with the real ISR
  TIMSK1 = _BV(TOIE1);                                     // sets the timer overflow interrupt enable bit
	// might be running with interrupts disabled (eg inside an ISR), so don't touch the global state
//  sei();
  resume();												
    3758:	0f 91       	pop	r16
    375a:	de cf       	rjmp	.-68     	; 0x3718 <_ZN8TimerOne6resumeEv>

0000375c <_ZN4UTFT12LCD_Writ_BusEcch>:
			} 
		}
		sbi(P_CS, B_CS);
	}
	clrXY();
}
    375c:	fc 01       	movw	r30, r24
    375e:	28 30       	cpi	r18, 0x08	; 8
    3760:	09 f4       	brne	.+2      	; 0x3764 <_ZN4UTFT12LCD_Writ_BusEcch+0x8>
    3762:	ee c0       	rjmp	.+476    	; 0x3940 <_ZN4UTFT12LCD_Writ_BusEcch+0x1e4>
    3764:	18 f4       	brcc	.+6      	; 0x376c <_ZN4UTFT12LCD_Writ_BusEcch+0x10>
    3766:	21 30       	cpi	r18, 0x01	; 1
    3768:	41 f0       	breq	.+16     	; 0x377a <_ZN4UTFT12LCD_Writ_BusEcch+0x1e>
    376a:	08 95       	ret
    376c:	20 31       	cpi	r18, 0x10	; 16
    376e:	09 f4       	brne	.+2      	; 0x3772 <_ZN4UTFT12LCD_Writ_BusEcch+0x16>
    3770:	f7 c0       	rjmp	.+494    	; 0x3960 <_ZN4UTFT12LCD_Writ_BusEcch+0x204>
    3772:	21 31       	cpi	r18, 0x11	; 17
    3774:	09 f4       	brne	.+2      	; 0x3778 <_ZN4UTFT12LCD_Writ_BusEcch+0x1c>
    3776:	02 c1       	rjmp	.+516    	; 0x397c <_ZN4UTFT12LCD_Writ_BusEcch+0x220>
    3778:	08 95       	ret
    377a:	87 85       	ldd	r24, Z+15	; 0x0f
    377c:	84 30       	cpi	r24, 0x04	; 4
    377e:	c1 f4       	brne	.+48     	; 0x37b0 <_ZN4UTFT12LCD_Writ_BusEcch+0x54>
    3780:	a0 8d       	ldd	r26, Z+24	; 0x18
    3782:	b1 8d       	ldd	r27, Z+25	; 0x19
    3784:	82 a1       	ldd	r24, Z+34	; 0x22
    3786:	9c 91       	ld	r25, X
    3788:	61 30       	cpi	r22, 0x01	; 1
    378a:	11 f4       	brne	.+4      	; 0x3790 <_ZN4UTFT12LCD_Writ_BusEcch+0x34>
    378c:	89 2b       	or	r24, r25
    378e:	02 c0       	rjmp	.+4      	; 0x3794 <_ZN4UTFT12LCD_Writ_BusEcch+0x38>
    3790:	80 95       	com	r24
    3792:	89 23       	and	r24, r25
    3794:	8c 93       	st	X, r24
    3796:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3798:	b3 8d       	ldd	r27, Z+27	; 0x1b
    379a:	9c 91       	ld	r25, X
    379c:	83 a1       	ldd	r24, Z+35	; 0x23
    379e:	80 95       	com	r24
    37a0:	89 23       	and	r24, r25
    37a2:	8c 93       	st	X, r24
    37a4:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37a6:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37a8:	9c 91       	ld	r25, X
    37aa:	83 a1       	ldd	r24, Z+35	; 0x23
    37ac:	89 2b       	or	r24, r25
    37ae:	08 c0       	rjmp	.+16     	; 0x37c0 <_ZN4UTFT12LCD_Writ_BusEcch+0x64>
    37b0:	a0 89       	ldd	r26, Z+16	; 0x10
    37b2:	b1 89       	ldd	r27, Z+17	; 0x11
    37b4:	86 8d       	ldd	r24, Z+30	; 0x1e
    37b6:	9c 91       	ld	r25, X
    37b8:	61 30       	cpi	r22, 0x01	; 1
    37ba:	c1 f3       	breq	.-16     	; 0x37ac <_ZN4UTFT12LCD_Writ_BusEcch+0x50>
    37bc:	80 95       	com	r24
    37be:	89 23       	and	r24, r25
    37c0:	8c 93       	st	X, r24
    37c2:	a0 8d       	ldd	r26, Z+24	; 0x18
    37c4:	b1 8d       	ldd	r27, Z+25	; 0x19
    37c6:	82 a1       	ldd	r24, Z+34	; 0x22
    37c8:	9c 91       	ld	r25, X
    37ca:	47 ff       	sbrs	r20, 7
    37cc:	02 c0       	rjmp	.+4      	; 0x37d2 <_ZN4UTFT12LCD_Writ_BusEcch+0x76>
    37ce:	89 2b       	or	r24, r25
    37d0:	02 c0       	rjmp	.+4      	; 0x37d6 <_ZN4UTFT12LCD_Writ_BusEcch+0x7a>
    37d2:	80 95       	com	r24
    37d4:	89 23       	and	r24, r25
    37d6:	8c 93       	st	X, r24
    37d8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37da:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37dc:	9c 91       	ld	r25, X
    37de:	83 a1       	ldd	r24, Z+35	; 0x23
    37e0:	80 95       	com	r24
    37e2:	89 23       	and	r24, r25
    37e4:	8c 93       	st	X, r24
    37e6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37e8:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37ea:	9c 91       	ld	r25, X
    37ec:	83 a1       	ldd	r24, Z+35	; 0x23
    37ee:	89 2b       	or	r24, r25
    37f0:	8c 93       	st	X, r24
    37f2:	a0 8d       	ldd	r26, Z+24	; 0x18
    37f4:	b1 8d       	ldd	r27, Z+25	; 0x19
    37f6:	82 a1       	ldd	r24, Z+34	; 0x22
    37f8:	9c 91       	ld	r25, X
    37fa:	46 ff       	sbrs	r20, 6
    37fc:	02 c0       	rjmp	.+4      	; 0x3802 <_ZN4UTFT12LCD_Writ_BusEcch+0xa6>
    37fe:	89 2b       	or	r24, r25
    3800:	02 c0       	rjmp	.+4      	; 0x3806 <_ZN4UTFT12LCD_Writ_BusEcch+0xaa>
    3802:	80 95       	com	r24
    3804:	89 23       	and	r24, r25
    3806:	8c 93       	st	X, r24
    3808:	a2 8d       	ldd	r26, Z+26	; 0x1a
    380a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    380c:	9c 91       	ld	r25, X
    380e:	83 a1       	ldd	r24, Z+35	; 0x23
    3810:	80 95       	com	r24
    3812:	89 23       	and	r24, r25
    3814:	8c 93       	st	X, r24
    3816:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3818:	b3 8d       	ldd	r27, Z+27	; 0x1b
    381a:	9c 91       	ld	r25, X
    381c:	83 a1       	ldd	r24, Z+35	; 0x23
    381e:	89 2b       	or	r24, r25
    3820:	8c 93       	st	X, r24
    3822:	a0 8d       	ldd	r26, Z+24	; 0x18
    3824:	b1 8d       	ldd	r27, Z+25	; 0x19
    3826:	82 a1       	ldd	r24, Z+34	; 0x22
    3828:	9c 91       	ld	r25, X
    382a:	45 ff       	sbrs	r20, 5
    382c:	02 c0       	rjmp	.+4      	; 0x3832 <_ZN4UTFT12LCD_Writ_BusEcch+0xd6>
    382e:	89 2b       	or	r24, r25
    3830:	02 c0       	rjmp	.+4      	; 0x3836 <_ZN4UTFT12LCD_Writ_BusEcch+0xda>
    3832:	80 95       	com	r24
    3834:	89 23       	and	r24, r25
    3836:	8c 93       	st	X, r24
    3838:	a2 8d       	ldd	r26, Z+26	; 0x1a
    383a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    383c:	9c 91       	ld	r25, X
    383e:	83 a1       	ldd	r24, Z+35	; 0x23
    3840:	80 95       	com	r24
    3842:	89 23       	and	r24, r25
    3844:	8c 93       	st	X, r24
    3846:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3848:	b3 8d       	ldd	r27, Z+27	; 0x1b
    384a:	9c 91       	ld	r25, X
    384c:	83 a1       	ldd	r24, Z+35	; 0x23
    384e:	89 2b       	or	r24, r25
    3850:	8c 93       	st	X, r24
    3852:	a0 8d       	ldd	r26, Z+24	; 0x18
    3854:	b1 8d       	ldd	r27, Z+25	; 0x19
    3856:	82 a1       	ldd	r24, Z+34	; 0x22
    3858:	9c 91       	ld	r25, X
    385a:	44 ff       	sbrs	r20, 4
    385c:	02 c0       	rjmp	.+4      	; 0x3862 <_ZN4UTFT12LCD_Writ_BusEcch+0x106>
    385e:	89 2b       	or	r24, r25
    3860:	02 c0       	rjmp	.+4      	; 0x3866 <_ZN4UTFT12LCD_Writ_BusEcch+0x10a>
    3862:	80 95       	com	r24
    3864:	89 23       	and	r24, r25
    3866:	8c 93       	st	X, r24
    3868:	a2 8d       	ldd	r26, Z+26	; 0x1a
    386a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    386c:	9c 91       	ld	r25, X
    386e:	83 a1       	ldd	r24, Z+35	; 0x23
    3870:	80 95       	com	r24
    3872:	89 23       	and	r24, r25
    3874:	8c 93       	st	X, r24
    3876:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3878:	b3 8d       	ldd	r27, Z+27	; 0x1b
    387a:	9c 91       	ld	r25, X
    387c:	83 a1       	ldd	r24, Z+35	; 0x23
    387e:	89 2b       	or	r24, r25
    3880:	8c 93       	st	X, r24
    3882:	a0 8d       	ldd	r26, Z+24	; 0x18
    3884:	b1 8d       	ldd	r27, Z+25	; 0x19
    3886:	82 a1       	ldd	r24, Z+34	; 0x22
    3888:	9c 91       	ld	r25, X
    388a:	43 ff       	sbrs	r20, 3
    388c:	02 c0       	rjmp	.+4      	; 0x3892 <_ZN4UTFT12LCD_Writ_BusEcch+0x136>
    388e:	89 2b       	or	r24, r25
    3890:	02 c0       	rjmp	.+4      	; 0x3896 <_ZN4UTFT12LCD_Writ_BusEcch+0x13a>
    3892:	80 95       	com	r24
    3894:	89 23       	and	r24, r25
    3896:	8c 93       	st	X, r24
    3898:	a2 8d       	ldd	r26, Z+26	; 0x1a
    389a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    389c:	9c 91       	ld	r25, X
    389e:	83 a1       	ldd	r24, Z+35	; 0x23
    38a0:	80 95       	com	r24
    38a2:	89 23       	and	r24, r25
    38a4:	8c 93       	st	X, r24
    38a6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    38a8:	b3 8d       	ldd	r27, Z+27	; 0x1b
    38aa:	9c 91       	ld	r25, X
    38ac:	83 a1       	ldd	r24, Z+35	; 0x23
    38ae:	89 2b       	or	r24, r25
    38b0:	8c 93       	st	X, r24
    38b2:	a0 8d       	ldd	r26, Z+24	; 0x18
    38b4:	b1 8d       	ldd	r27, Z+25	; 0x19
    38b6:	82 a1       	ldd	r24, Z+34	; 0x22
    38b8:	9c 91       	ld	r25, X
    38ba:	42 ff       	sbrs	r20, 2
    38bc:	02 c0       	rjmp	.+4      	; 0x38c2 <_ZN4UTFT12LCD_Writ_BusEcch+0x166>
    38be:	89 2b       	or	r24, r25
    38c0:	02 c0       	rjmp	.+4      	; 0x38c6 <_ZN4UTFT12LCD_Writ_BusEcch+0x16a>
    38c2:	80 95       	com	r24
    38c4:	89 23       	and	r24, r25
    38c6:	8c 93       	st	X, r24
    38c8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    38ca:	b3 8d       	ldd	r27, Z+27	; 0x1b
    38cc:	9c 91       	ld	r25, X
    38ce:	83 a1       	ldd	r24, Z+35	; 0x23
    38d0:	80 95       	com	r24
    38d2:	89 23       	and	r24, r25
    38d4:	8c 93       	st	X, r24
    38d6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    38d8:	b3 8d       	ldd	r27, Z+27	; 0x1b
    38da:	9c 91       	ld	r25, X
    38dc:	83 a1       	ldd	r24, Z+35	; 0x23
    38de:	89 2b       	or	r24, r25
    38e0:	8c 93       	st	X, r24
    38e2:	a0 8d       	ldd	r26, Z+24	; 0x18
    38e4:	b1 8d       	ldd	r27, Z+25	; 0x19
    38e6:	82 a1       	ldd	r24, Z+34	; 0x22
    38e8:	9c 91       	ld	r25, X
    38ea:	41 ff       	sbrs	r20, 1
    38ec:	02 c0       	rjmp	.+4      	; 0x38f2 <_ZN4UTFT12LCD_Writ_BusEcch+0x196>
    38ee:	89 2b       	or	r24, r25
    38f0:	02 c0       	rjmp	.+4      	; 0x38f6 <_ZN4UTFT12LCD_Writ_BusEcch+0x19a>
    38f2:	80 95       	com	r24
    38f4:	89 23       	and	r24, r25
    38f6:	8c 93       	st	X, r24
    38f8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    38fa:	b3 8d       	ldd	r27, Z+27	; 0x1b
    38fc:	9c 91       	ld	r25, X
    38fe:	83 a1       	ldd	r24, Z+35	; 0x23
    3900:	80 95       	com	r24
    3902:	89 23       	and	r24, r25
    3904:	8c 93       	st	X, r24
    3906:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3908:	b3 8d       	ldd	r27, Z+27	; 0x1b
    390a:	9c 91       	ld	r25, X
    390c:	83 a1       	ldd	r24, Z+35	; 0x23
    390e:	89 2b       	or	r24, r25
    3910:	8c 93       	st	X, r24
    3912:	a0 8d       	ldd	r26, Z+24	; 0x18
    3914:	b1 8d       	ldd	r27, Z+25	; 0x19
    3916:	82 a1       	ldd	r24, Z+34	; 0x22
    3918:	9c 91       	ld	r25, X
    391a:	40 ff       	sbrs	r20, 0
    391c:	02 c0       	rjmp	.+4      	; 0x3922 <_ZN4UTFT12LCD_Writ_BusEcch+0x1c6>
    391e:	89 2b       	or	r24, r25
    3920:	02 c0       	rjmp	.+4      	; 0x3926 <_ZN4UTFT12LCD_Writ_BusEcch+0x1ca>
    3922:	80 95       	com	r24
    3924:	89 23       	and	r24, r25
    3926:	8c 93       	st	X, r24
    3928:	a2 8d       	ldd	r26, Z+26	; 0x1a
    392a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    392c:	9c 91       	ld	r25, X
    392e:	83 a1       	ldd	r24, Z+35	; 0x23
    3930:	80 95       	com	r24
    3932:	89 23       	and	r24, r25
    3934:	8c 93       	st	X, r24
    3936:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3938:	b3 8d       	ldd	r27, Z+27	; 0x1b
    393a:	9c 91       	ld	r25, X
    393c:	83 a1       	ldd	r24, Z+35	; 0x23
    393e:	a2 c0       	rjmp	.+324    	; 0x3a84 <_ZN4UTFT12LCD_Writ_BusEcch+0x328>
    3940:	62 b9       	out	0x02, r22	; 2
    3942:	a2 89       	ldd	r26, Z+18	; 0x12
    3944:	b3 89       	ldd	r27, Z+19	; 0x13
    3946:	9c 91       	ld	r25, X
    3948:	87 8d       	ldd	r24, Z+31	; 0x1f
    394a:	80 95       	com	r24
    394c:	89 23       	and	r24, r25
    394e:	8c 93       	st	X, r24
    3950:	a2 89       	ldd	r26, Z+18	; 0x12
    3952:	b3 89       	ldd	r27, Z+19	; 0x13
    3954:	9c 91       	ld	r25, X
    3956:	87 8d       	ldd	r24, Z+31	; 0x1f
    3958:	89 2b       	or	r24, r25
    395a:	8c 93       	st	X, r24
    395c:	42 b9       	out	0x02, r20	; 2
    395e:	02 c0       	rjmp	.+4      	; 0x3964 <_ZN4UTFT12LCD_Writ_BusEcch+0x208>
    3960:	62 b9       	out	0x02, r22	; 2
    3962:	48 b9       	out	0x08, r20	; 8
    3964:	a2 89       	ldd	r26, Z+18	; 0x12
    3966:	b3 89       	ldd	r27, Z+19	; 0x13
    3968:	9c 91       	ld	r25, X
    396a:	87 8d       	ldd	r24, Z+31	; 0x1f
    396c:	80 95       	com	r24
    396e:	89 23       	and	r24, r25
    3970:	8c 93       	st	X, r24
    3972:	a2 89       	ldd	r26, Z+18	; 0x12
    3974:	b3 89       	ldd	r27, Z+19	; 0x13
    3976:	9c 91       	ld	r25, X
    3978:	87 8d       	ldd	r24, Z+31	; 0x1f
    397a:	84 c0       	rjmp	.+264    	; 0x3a84 <_ZN4UTFT12LCD_Writ_BusEcch+0x328>
    397c:	a5 98       	cbi	0x14, 5	; 20
    397e:	94 b3       	in	r25, 0x14	; 20
    3980:	86 2f       	mov	r24, r22
    3982:	80 71       	andi	r24, 0x10	; 16
    3984:	88 0f       	add	r24, r24
    3986:	89 2b       	or	r24, r25
    3988:	84 bb       	out	0x14, r24	; 20
    398a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    398e:	87 7e       	andi	r24, 0xE7	; 231
    3990:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3994:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3998:	86 2f       	mov	r24, r22
    399a:	80 7c       	andi	r24, 0xC0	; 192
    399c:	86 95       	lsr	r24
    399e:	86 95       	lsr	r24
    39a0:	86 95       	lsr	r24
    39a2:	89 2b       	or	r24, r25
    39a4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    39a8:	8e b1       	in	r24, 0x0e	; 14
    39aa:	84 7c       	andi	r24, 0xC4	; 196
    39ac:	8e b9       	out	0x0e, r24	; 14
    39ae:	9e b1       	in	r25, 0x0e	; 14
    39b0:	26 2f       	mov	r18, r22
    39b2:	2c 70       	andi	r18, 0x0C	; 12
    39b4:	22 0f       	add	r18, r18
    39b6:	22 0f       	add	r18, r18
    39b8:	86 2f       	mov	r24, r22
    39ba:	83 70       	andi	r24, 0x03	; 3
    39bc:	28 0f       	add	r18, r24
    39be:	86 2f       	mov	r24, r22
    39c0:	80 72       	andi	r24, 0x20	; 32
    39c2:	68 2f       	mov	r22, r24
    39c4:	70 e0       	ldi	r23, 0x00	; 0
    39c6:	75 95       	asr	r23
    39c8:	67 95       	ror	r22
    39ca:	75 95       	asr	r23
    39cc:	67 95       	ror	r22
    39ce:	62 0f       	add	r22, r18
    39d0:	69 2b       	or	r22, r25
    39d2:	6e b9       	out	0x0e, r22	; 14
    39d4:	a4 8d       	ldd	r26, Z+28	; 0x1c
    39d6:	b5 8d       	ldd	r27, Z+29	; 0x1d
    39d8:	9c 91       	ld	r25, X
    39da:	84 a1       	ldd	r24, Z+36	; 0x24
    39dc:	80 95       	com	r24
    39de:	89 23       	and	r24, r25
    39e0:	8c 93       	st	X, r24
    39e2:	a4 8d       	ldd	r26, Z+28	; 0x1c
    39e4:	b5 8d       	ldd	r27, Z+29	; 0x1d
    39e6:	9c 91       	ld	r25, X
    39e8:	84 a1       	ldd	r24, Z+36	; 0x24
    39ea:	89 2b       	or	r24, r25
    39ec:	8c 93       	st	X, r24
    39ee:	a4 8d       	ldd	r26, Z+28	; 0x1c
    39f0:	b5 8d       	ldd	r27, Z+29	; 0x1d
    39f2:	9c 91       	ld	r25, X
    39f4:	84 a1       	ldd	r24, Z+36	; 0x24
    39f6:	80 95       	com	r24
    39f8:	89 23       	and	r24, r25
    39fa:	8c 93       	st	X, r24
    39fc:	a4 89       	ldd	r26, Z+20	; 0x14
    39fe:	b5 89       	ldd	r27, Z+21	; 0x15
    3a00:	9c 91       	ld	r25, X
    3a02:	80 a1       	ldd	r24, Z+32	; 0x20
    3a04:	80 95       	com	r24
    3a06:	89 23       	and	r24, r25
    3a08:	8c 93       	st	X, r24
    3a0a:	a5 98       	cbi	0x14, 5	; 20
    3a0c:	94 b3       	in	r25, 0x14	; 20
    3a0e:	84 2f       	mov	r24, r20
    3a10:	80 71       	andi	r24, 0x10	; 16
    3a12:	88 0f       	add	r24, r24
    3a14:	89 2b       	or	r24, r25
    3a16:	84 bb       	out	0x14, r24	; 20
    3a18:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3a1c:	87 7e       	andi	r24, 0xE7	; 231
    3a1e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3a22:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3a26:	84 2f       	mov	r24, r20
    3a28:	80 7c       	andi	r24, 0xC0	; 192
    3a2a:	86 95       	lsr	r24
    3a2c:	86 95       	lsr	r24
    3a2e:	86 95       	lsr	r24
    3a30:	89 2b       	or	r24, r25
    3a32:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3a36:	8e b1       	in	r24, 0x0e	; 14
    3a38:	84 7c       	andi	r24, 0xC4	; 196
    3a3a:	8e b9       	out	0x0e, r24	; 14
    3a3c:	9e b1       	in	r25, 0x0e	; 14
    3a3e:	24 2f       	mov	r18, r20
    3a40:	2c 70       	andi	r18, 0x0C	; 12
    3a42:	22 0f       	add	r18, r18
    3a44:	22 0f       	add	r18, r18
    3a46:	84 2f       	mov	r24, r20
    3a48:	83 70       	andi	r24, 0x03	; 3
    3a4a:	28 0f       	add	r18, r24
    3a4c:	84 2f       	mov	r24, r20
    3a4e:	80 72       	andi	r24, 0x20	; 32
    3a50:	48 2f       	mov	r20, r24
    3a52:	50 e0       	ldi	r21, 0x00	; 0
    3a54:	55 95       	asr	r21
    3a56:	47 95       	ror	r20
    3a58:	55 95       	asr	r21
    3a5a:	47 95       	ror	r20
    3a5c:	42 0f       	add	r20, r18
    3a5e:	49 2b       	or	r20, r25
    3a60:	4e b9       	out	0x0e, r20	; 14
    3a62:	a2 89       	ldd	r26, Z+18	; 0x12
    3a64:	b3 89       	ldd	r27, Z+19	; 0x13
    3a66:	9c 91       	ld	r25, X
    3a68:	87 8d       	ldd	r24, Z+31	; 0x1f
    3a6a:	80 95       	com	r24
    3a6c:	89 23       	and	r24, r25
    3a6e:	8c 93       	st	X, r24
    3a70:	a2 89       	ldd	r26, Z+18	; 0x12
    3a72:	b3 89       	ldd	r27, Z+19	; 0x13
    3a74:	9c 91       	ld	r25, X
    3a76:	87 8d       	ldd	r24, Z+31	; 0x1f
    3a78:	89 2b       	or	r24, r25
    3a7a:	8c 93       	st	X, r24
    3a7c:	a4 89       	ldd	r26, Z+20	; 0x14
    3a7e:	b5 89       	ldd	r27, Z+21	; 0x15
    3a80:	9c 91       	ld	r25, X
    3a82:	80 a1       	ldd	r24, Z+32	; 0x20
    3a84:	89 2b       	or	r24, r25
    3a86:	8c 93       	st	X, r24
    3a88:	08 95       	ret

00003a8a <_ZN4UTFT24_set_direction_registersEh>:
    3a8a:	61 31       	cpi	r22, 0x11	; 17
    3a8c:	31 f0       	breq	.+12     	; 0x3a9a <_ZN4UTFT24_set_direction_registersEh+0x10>
    3a8e:	8f ef       	ldi	r24, 0xFF	; 255
    3a90:	81 b9       	out	0x01, r24	; 1
    3a92:	60 31       	cpi	r22, 0x10	; 16
    3a94:	49 f4       	brne	.+18     	; 0x3aa8 <_ZN4UTFT24_set_direction_registersEh+0x1e>
    3a96:	87 b9       	out	0x07, r24	; 7
    3a98:	08 95       	ret
    3a9a:	88 e1       	ldi	r24, 0x18	; 24
    3a9c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
    3aa0:	80 e2       	ldi	r24, 0x20	; 32
    3aa2:	83 bb       	out	0x13, r24	; 19
    3aa4:	8b e3       	ldi	r24, 0x3B	; 59
    3aa6:	8d b9       	out	0x0d, r24	; 13
    3aa8:	08 95       	ret

00003aaa <_ZN4UTFT13_fast_fill_16Eiil>:
    3aaa:	8f 92       	push	r8
    3aac:	9f 92       	push	r9
    3aae:	af 92       	push	r10
    3ab0:	bf 92       	push	r11
    3ab2:	cf 92       	push	r12
    3ab4:	df 92       	push	r13
    3ab6:	ef 92       	push	r14
    3ab8:	ff 92       	push	r15
    3aba:	0f 93       	push	r16
    3abc:	1f 93       	push	r17
    3abe:	cf 93       	push	r28
    3ac0:	df 93       	push	r29
    3ac2:	ec 01       	movw	r28, r24
    3ac4:	68 01       	movw	r12, r16
    3ac6:	79 01       	movw	r14, r18
    3ac8:	62 b9       	out	0x02, r22	; 2
    3aca:	48 b9       	out	0x08, r20	; 8
    3acc:	c9 01       	movw	r24, r18
    3ace:	b8 01       	movw	r22, r16
    3ad0:	20 e1       	ldi	r18, 0x10	; 16
    3ad2:	30 e0       	ldi	r19, 0x00	; 0
    3ad4:	40 e0       	ldi	r20, 0x00	; 0
    3ad6:	50 e0       	ldi	r21, 0x00	; 0
    3ad8:	0e 94 14 47 	call	0x8e28	; 0x8e28 <__divmodsi4>
    3adc:	49 01       	movw	r8, r18
    3ade:	5a 01       	movw	r10, r20
    3ae0:	80 e0       	ldi	r24, 0x00	; 0
    3ae2:	90 e0       	ldi	r25, 0x00	; 0
    3ae4:	dc 01       	movw	r26, r24
    3ae6:	88 15       	cp	r24, r8
    3ae8:	99 05       	cpc	r25, r9
    3aea:	aa 05       	cpc	r26, r10
    3aec:	bb 05       	cpc	r27, r11
    3aee:	0c f0       	brlt	.+2      	; 0x3af2 <_ZN4UTFT13_fast_fill_16Eiil+0x48>
    3af0:	d4 c0       	rjmp	.+424    	; 0x3c9a <_ZN4UTFT13_fast_fill_16Eiil+0x1f0>
    3af2:	ea 89       	ldd	r30, Y+18	; 0x12
    3af4:	fb 89       	ldd	r31, Y+19	; 0x13
    3af6:	30 81       	ld	r19, Z
    3af8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3afa:	20 95       	com	r18
    3afc:	23 23       	and	r18, r19
    3afe:	20 83       	st	Z, r18
    3b00:	ea 89       	ldd	r30, Y+18	; 0x12
    3b02:	fb 89       	ldd	r31, Y+19	; 0x13
    3b04:	30 81       	ld	r19, Z
    3b06:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b08:	23 2b       	or	r18, r19
    3b0a:	20 83       	st	Z, r18
    3b0c:	ea 89       	ldd	r30, Y+18	; 0x12
    3b0e:	fb 89       	ldd	r31, Y+19	; 0x13
    3b10:	30 81       	ld	r19, Z
    3b12:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b14:	20 95       	com	r18
    3b16:	23 23       	and	r18, r19
    3b18:	20 83       	st	Z, r18
    3b1a:	ea 89       	ldd	r30, Y+18	; 0x12
    3b1c:	fb 89       	ldd	r31, Y+19	; 0x13
    3b1e:	30 81       	ld	r19, Z
    3b20:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b22:	23 2b       	or	r18, r19
    3b24:	20 83       	st	Z, r18
    3b26:	ea 89       	ldd	r30, Y+18	; 0x12
    3b28:	fb 89       	ldd	r31, Y+19	; 0x13
    3b2a:	30 81       	ld	r19, Z
    3b2c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b2e:	20 95       	com	r18
    3b30:	23 23       	and	r18, r19
    3b32:	20 83       	st	Z, r18
    3b34:	ea 89       	ldd	r30, Y+18	; 0x12
    3b36:	fb 89       	ldd	r31, Y+19	; 0x13
    3b38:	30 81       	ld	r19, Z
    3b3a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b3c:	23 2b       	or	r18, r19
    3b3e:	20 83       	st	Z, r18
    3b40:	ea 89       	ldd	r30, Y+18	; 0x12
    3b42:	fb 89       	ldd	r31, Y+19	; 0x13
    3b44:	30 81       	ld	r19, Z
    3b46:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b48:	20 95       	com	r18
    3b4a:	23 23       	and	r18, r19
    3b4c:	20 83       	st	Z, r18
    3b4e:	ea 89       	ldd	r30, Y+18	; 0x12
    3b50:	fb 89       	ldd	r31, Y+19	; 0x13
    3b52:	30 81       	ld	r19, Z
    3b54:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b56:	23 2b       	or	r18, r19
    3b58:	20 83       	st	Z, r18
    3b5a:	ea 89       	ldd	r30, Y+18	; 0x12
    3b5c:	fb 89       	ldd	r31, Y+19	; 0x13
    3b5e:	30 81       	ld	r19, Z
    3b60:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b62:	20 95       	com	r18
    3b64:	23 23       	and	r18, r19
    3b66:	20 83       	st	Z, r18
    3b68:	ea 89       	ldd	r30, Y+18	; 0x12
    3b6a:	fb 89       	ldd	r31, Y+19	; 0x13
    3b6c:	30 81       	ld	r19, Z
    3b6e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b70:	23 2b       	or	r18, r19
    3b72:	20 83       	st	Z, r18
    3b74:	ea 89       	ldd	r30, Y+18	; 0x12
    3b76:	fb 89       	ldd	r31, Y+19	; 0x13
    3b78:	30 81       	ld	r19, Z
    3b7a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b7c:	20 95       	com	r18
    3b7e:	23 23       	and	r18, r19
    3b80:	20 83       	st	Z, r18
    3b82:	ea 89       	ldd	r30, Y+18	; 0x12
    3b84:	fb 89       	ldd	r31, Y+19	; 0x13
    3b86:	30 81       	ld	r19, Z
    3b88:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b8a:	23 2b       	or	r18, r19
    3b8c:	20 83       	st	Z, r18
    3b8e:	ea 89       	ldd	r30, Y+18	; 0x12
    3b90:	fb 89       	ldd	r31, Y+19	; 0x13
    3b92:	30 81       	ld	r19, Z
    3b94:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b96:	20 95       	com	r18
    3b98:	23 23       	and	r18, r19
    3b9a:	20 83       	st	Z, r18
    3b9c:	ea 89       	ldd	r30, Y+18	; 0x12
    3b9e:	fb 89       	ldd	r31, Y+19	; 0x13
    3ba0:	30 81       	ld	r19, Z
    3ba2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ba4:	23 2b       	or	r18, r19
    3ba6:	20 83       	st	Z, r18
    3ba8:	ea 89       	ldd	r30, Y+18	; 0x12
    3baa:	fb 89       	ldd	r31, Y+19	; 0x13
    3bac:	30 81       	ld	r19, Z
    3bae:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bb0:	20 95       	com	r18
    3bb2:	23 23       	and	r18, r19
    3bb4:	20 83       	st	Z, r18
    3bb6:	ea 89       	ldd	r30, Y+18	; 0x12
    3bb8:	fb 89       	ldd	r31, Y+19	; 0x13
    3bba:	30 81       	ld	r19, Z
    3bbc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bbe:	23 2b       	or	r18, r19
    3bc0:	20 83       	st	Z, r18
    3bc2:	ea 89       	ldd	r30, Y+18	; 0x12
    3bc4:	fb 89       	ldd	r31, Y+19	; 0x13
    3bc6:	30 81       	ld	r19, Z
    3bc8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bca:	20 95       	com	r18
    3bcc:	23 23       	and	r18, r19
    3bce:	20 83       	st	Z, r18
    3bd0:	ea 89       	ldd	r30, Y+18	; 0x12
    3bd2:	fb 89       	ldd	r31, Y+19	; 0x13
    3bd4:	30 81       	ld	r19, Z
    3bd6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bd8:	23 2b       	or	r18, r19
    3bda:	20 83       	st	Z, r18
    3bdc:	ea 89       	ldd	r30, Y+18	; 0x12
    3bde:	fb 89       	ldd	r31, Y+19	; 0x13
    3be0:	30 81       	ld	r19, Z
    3be2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3be4:	20 95       	com	r18
    3be6:	23 23       	and	r18, r19
    3be8:	20 83       	st	Z, r18
    3bea:	ea 89       	ldd	r30, Y+18	; 0x12
    3bec:	fb 89       	ldd	r31, Y+19	; 0x13
    3bee:	30 81       	ld	r19, Z
    3bf0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bf2:	23 2b       	or	r18, r19
    3bf4:	20 83       	st	Z, r18
    3bf6:	ea 89       	ldd	r30, Y+18	; 0x12
    3bf8:	fb 89       	ldd	r31, Y+19	; 0x13
    3bfa:	30 81       	ld	r19, Z
    3bfc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bfe:	20 95       	com	r18
    3c00:	23 23       	and	r18, r19
    3c02:	20 83       	st	Z, r18
    3c04:	ea 89       	ldd	r30, Y+18	; 0x12
    3c06:	fb 89       	ldd	r31, Y+19	; 0x13
    3c08:	30 81       	ld	r19, Z
    3c0a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c0c:	23 2b       	or	r18, r19
    3c0e:	20 83       	st	Z, r18
    3c10:	ea 89       	ldd	r30, Y+18	; 0x12
    3c12:	fb 89       	ldd	r31, Y+19	; 0x13
    3c14:	30 81       	ld	r19, Z
    3c16:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c18:	20 95       	com	r18
    3c1a:	23 23       	and	r18, r19
    3c1c:	20 83       	st	Z, r18
    3c1e:	ea 89       	ldd	r30, Y+18	; 0x12
    3c20:	fb 89       	ldd	r31, Y+19	; 0x13
    3c22:	30 81       	ld	r19, Z
    3c24:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c26:	23 2b       	or	r18, r19
    3c28:	20 83       	st	Z, r18
    3c2a:	ea 89       	ldd	r30, Y+18	; 0x12
    3c2c:	fb 89       	ldd	r31, Y+19	; 0x13
    3c2e:	30 81       	ld	r19, Z
    3c30:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c32:	20 95       	com	r18
    3c34:	23 23       	and	r18, r19
    3c36:	20 83       	st	Z, r18
    3c38:	ea 89       	ldd	r30, Y+18	; 0x12
    3c3a:	fb 89       	ldd	r31, Y+19	; 0x13
    3c3c:	30 81       	ld	r19, Z
    3c3e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c40:	23 2b       	or	r18, r19
    3c42:	20 83       	st	Z, r18
    3c44:	ea 89       	ldd	r30, Y+18	; 0x12
    3c46:	fb 89       	ldd	r31, Y+19	; 0x13
    3c48:	30 81       	ld	r19, Z
    3c4a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c4c:	20 95       	com	r18
    3c4e:	23 23       	and	r18, r19
    3c50:	20 83       	st	Z, r18
    3c52:	ea 89       	ldd	r30, Y+18	; 0x12
    3c54:	fb 89       	ldd	r31, Y+19	; 0x13
    3c56:	30 81       	ld	r19, Z
    3c58:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c5a:	23 2b       	or	r18, r19
    3c5c:	20 83       	st	Z, r18
    3c5e:	ea 89       	ldd	r30, Y+18	; 0x12
    3c60:	fb 89       	ldd	r31, Y+19	; 0x13
    3c62:	30 81       	ld	r19, Z
    3c64:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c66:	20 95       	com	r18
    3c68:	23 23       	and	r18, r19
    3c6a:	20 83       	st	Z, r18
    3c6c:	ea 89       	ldd	r30, Y+18	; 0x12
    3c6e:	fb 89       	ldd	r31, Y+19	; 0x13
    3c70:	30 81       	ld	r19, Z
    3c72:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c74:	23 2b       	or	r18, r19
    3c76:	20 83       	st	Z, r18
    3c78:	ea 89       	ldd	r30, Y+18	; 0x12
    3c7a:	fb 89       	ldd	r31, Y+19	; 0x13
    3c7c:	40 81       	ld	r20, Z
    3c7e:	3f 8d       	ldd	r19, Y+31	; 0x1f
    3c80:	30 95       	com	r19
    3c82:	34 23       	and	r19, r20
    3c84:	30 83       	st	Z, r19
    3c86:	ea 89       	ldd	r30, Y+18	; 0x12
    3c88:	fb 89       	ldd	r31, Y+19	; 0x13
    3c8a:	20 81       	ld	r18, Z
    3c8c:	3f 8d       	ldd	r19, Y+31	; 0x1f
    3c8e:	32 2b       	or	r19, r18
    3c90:	30 83       	st	Z, r19
    3c92:	01 96       	adiw	r24, 0x01	; 1
    3c94:	a1 1d       	adc	r26, r1
    3c96:	b1 1d       	adc	r27, r1
    3c98:	26 cf       	rjmp	.-436    	; 0x3ae6 <_ZN4UTFT13_fast_fill_16Eiil+0x3c>
    3c9a:	d7 01       	movw	r26, r14
    3c9c:	c6 01       	movw	r24, r12
    3c9e:	8f 70       	andi	r24, 0x0F	; 15
    3ca0:	99 27       	eor	r25, r25
    3ca2:	aa 27       	eor	r26, r26
    3ca4:	bb 27       	eor	r27, r27
    3ca6:	89 2b       	or	r24, r25
    3ca8:	8a 2b       	or	r24, r26
    3caa:	8b 2b       	or	r24, r27
    3cac:	19 f1       	breq	.+70     	; 0x3cf4 <_ZN4UTFT13_fast_fill_16Eiil+0x24a>
    3cae:	c7 01       	movw	r24, r14
    3cb0:	b6 01       	movw	r22, r12
    3cb2:	20 e1       	ldi	r18, 0x10	; 16
    3cb4:	30 e0       	ldi	r19, 0x00	; 0
    3cb6:	40 e0       	ldi	r20, 0x00	; 0
    3cb8:	50 e0       	ldi	r21, 0x00	; 0
    3cba:	0e 94 14 47 	call	0x8e28	; 0x8e28 <__divmodsi4>
    3cbe:	c1 2c       	mov	r12, r1
    3cc0:	d1 2c       	mov	r13, r1
    3cc2:	76 01       	movw	r14, r12
    3cc4:	6c 15       	cp	r22, r12
    3cc6:	7d 05       	cpc	r23, r13
    3cc8:	8e 05       	cpc	r24, r14
    3cca:	9f 05       	cpc	r25, r15
    3ccc:	9c f0       	brlt	.+38     	; 0x3cf4 <_ZN4UTFT13_fast_fill_16Eiil+0x24a>
    3cce:	ea 89       	ldd	r30, Y+18	; 0x12
    3cd0:	fb 89       	ldd	r31, Y+19	; 0x13
    3cd2:	30 81       	ld	r19, Z
    3cd4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3cd6:	20 95       	com	r18
    3cd8:	23 23       	and	r18, r19
    3cda:	20 83       	st	Z, r18
    3cdc:	ea 89       	ldd	r30, Y+18	; 0x12
    3cde:	fb 89       	ldd	r31, Y+19	; 0x13
    3ce0:	30 81       	ld	r19, Z
    3ce2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ce4:	23 2b       	or	r18, r19
    3ce6:	20 83       	st	Z, r18
    3ce8:	2f ef       	ldi	r18, 0xFF	; 255
    3cea:	c2 1a       	sub	r12, r18
    3cec:	d2 0a       	sbc	r13, r18
    3cee:	e2 0a       	sbc	r14, r18
    3cf0:	f2 0a       	sbc	r15, r18
    3cf2:	e8 cf       	rjmp	.-48     	; 0x3cc4 <_ZN4UTFT13_fast_fill_16Eiil+0x21a>
    3cf4:	df 91       	pop	r29
    3cf6:	cf 91       	pop	r28
    3cf8:	1f 91       	pop	r17
    3cfa:	0f 91       	pop	r16
    3cfc:	ff 90       	pop	r15
    3cfe:	ef 90       	pop	r14
    3d00:	df 90       	pop	r13
    3d02:	cf 90       	pop	r12
    3d04:	bf 90       	pop	r11
    3d06:	af 90       	pop	r10
    3d08:	9f 90       	pop	r9
    3d0a:	8f 90       	pop	r8
    3d0c:	08 95       	ret

00003d0e <_ZN4UTFT12_fast_fill_8Eil>:
    3d0e:	8f 92       	push	r8
    3d10:	9f 92       	push	r9
    3d12:	af 92       	push	r10
    3d14:	bf 92       	push	r11
    3d16:	cf 92       	push	r12
    3d18:	df 92       	push	r13
    3d1a:	ef 92       	push	r14
    3d1c:	ff 92       	push	r15
    3d1e:	cf 93       	push	r28
    3d20:	df 93       	push	r29
    3d22:	ec 01       	movw	r28, r24
    3d24:	69 01       	movw	r12, r18
    3d26:	7a 01       	movw	r14, r20
    3d28:	62 b9       	out	0x02, r22	; 2
    3d2a:	ca 01       	movw	r24, r20
    3d2c:	b9 01       	movw	r22, r18
    3d2e:	20 e1       	ldi	r18, 0x10	; 16
    3d30:	30 e0       	ldi	r19, 0x00	; 0
    3d32:	40 e0       	ldi	r20, 0x00	; 0
    3d34:	50 e0       	ldi	r21, 0x00	; 0
    3d36:	0e 94 14 47 	call	0x8e28	; 0x8e28 <__divmodsi4>
    3d3a:	49 01       	movw	r8, r18
    3d3c:	5a 01       	movw	r10, r20
    3d3e:	80 e0       	ldi	r24, 0x00	; 0
    3d40:	90 e0       	ldi	r25, 0x00	; 0
    3d42:	dc 01       	movw	r26, r24
    3d44:	88 15       	cp	r24, r8
    3d46:	99 05       	cpc	r25, r9
    3d48:	aa 05       	cpc	r26, r10
    3d4a:	bb 05       	cpc	r27, r11
    3d4c:	0c f0       	brlt	.+2      	; 0x3d50 <_ZN4UTFT12_fast_fill_8Eil+0x42>
    3d4e:	a4 c1       	rjmp	.+840    	; 0x4098 <_ZN4UTFT12_fast_fill_8Eil+0x38a>
    3d50:	ea 89       	ldd	r30, Y+18	; 0x12
    3d52:	fb 89       	ldd	r31, Y+19	; 0x13
    3d54:	30 81       	ld	r19, Z
    3d56:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d58:	20 95       	com	r18
    3d5a:	23 23       	and	r18, r19
    3d5c:	20 83       	st	Z, r18
    3d5e:	ea 89       	ldd	r30, Y+18	; 0x12
    3d60:	fb 89       	ldd	r31, Y+19	; 0x13
    3d62:	30 81       	ld	r19, Z
    3d64:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d66:	23 2b       	or	r18, r19
    3d68:	20 83       	st	Z, r18
    3d6a:	ea 89       	ldd	r30, Y+18	; 0x12
    3d6c:	fb 89       	ldd	r31, Y+19	; 0x13
    3d6e:	30 81       	ld	r19, Z
    3d70:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d72:	20 95       	com	r18
    3d74:	23 23       	and	r18, r19
    3d76:	20 83       	st	Z, r18
    3d78:	ea 89       	ldd	r30, Y+18	; 0x12
    3d7a:	fb 89       	ldd	r31, Y+19	; 0x13
    3d7c:	30 81       	ld	r19, Z
    3d7e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d80:	23 2b       	or	r18, r19
    3d82:	20 83       	st	Z, r18
    3d84:	ea 89       	ldd	r30, Y+18	; 0x12
    3d86:	fb 89       	ldd	r31, Y+19	; 0x13
    3d88:	30 81       	ld	r19, Z
    3d8a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d8c:	20 95       	com	r18
    3d8e:	23 23       	and	r18, r19
    3d90:	20 83       	st	Z, r18
    3d92:	ea 89       	ldd	r30, Y+18	; 0x12
    3d94:	fb 89       	ldd	r31, Y+19	; 0x13
    3d96:	30 81       	ld	r19, Z
    3d98:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d9a:	23 2b       	or	r18, r19
    3d9c:	20 83       	st	Z, r18
    3d9e:	ea 89       	ldd	r30, Y+18	; 0x12
    3da0:	fb 89       	ldd	r31, Y+19	; 0x13
    3da2:	30 81       	ld	r19, Z
    3da4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3da6:	20 95       	com	r18
    3da8:	23 23       	and	r18, r19
    3daa:	20 83       	st	Z, r18
    3dac:	ea 89       	ldd	r30, Y+18	; 0x12
    3dae:	fb 89       	ldd	r31, Y+19	; 0x13
    3db0:	30 81       	ld	r19, Z
    3db2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3db4:	23 2b       	or	r18, r19
    3db6:	20 83       	st	Z, r18
    3db8:	ea 89       	ldd	r30, Y+18	; 0x12
    3dba:	fb 89       	ldd	r31, Y+19	; 0x13
    3dbc:	30 81       	ld	r19, Z
    3dbe:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dc0:	20 95       	com	r18
    3dc2:	23 23       	and	r18, r19
    3dc4:	20 83       	st	Z, r18
    3dc6:	ea 89       	ldd	r30, Y+18	; 0x12
    3dc8:	fb 89       	ldd	r31, Y+19	; 0x13
    3dca:	30 81       	ld	r19, Z
    3dcc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dce:	23 2b       	or	r18, r19
    3dd0:	20 83       	st	Z, r18
    3dd2:	ea 89       	ldd	r30, Y+18	; 0x12
    3dd4:	fb 89       	ldd	r31, Y+19	; 0x13
    3dd6:	30 81       	ld	r19, Z
    3dd8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dda:	20 95       	com	r18
    3ddc:	23 23       	and	r18, r19
    3dde:	20 83       	st	Z, r18
    3de0:	ea 89       	ldd	r30, Y+18	; 0x12
    3de2:	fb 89       	ldd	r31, Y+19	; 0x13
    3de4:	30 81       	ld	r19, Z
    3de6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3de8:	23 2b       	or	r18, r19
    3dea:	20 83       	st	Z, r18
    3dec:	ea 89       	ldd	r30, Y+18	; 0x12
    3dee:	fb 89       	ldd	r31, Y+19	; 0x13
    3df0:	30 81       	ld	r19, Z
    3df2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3df4:	20 95       	com	r18
    3df6:	23 23       	and	r18, r19
    3df8:	20 83       	st	Z, r18
    3dfa:	ea 89       	ldd	r30, Y+18	; 0x12
    3dfc:	fb 89       	ldd	r31, Y+19	; 0x13
    3dfe:	30 81       	ld	r19, Z
    3e00:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e02:	23 2b       	or	r18, r19
    3e04:	20 83       	st	Z, r18
    3e06:	ea 89       	ldd	r30, Y+18	; 0x12
    3e08:	fb 89       	ldd	r31, Y+19	; 0x13
    3e0a:	30 81       	ld	r19, Z
    3e0c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e0e:	20 95       	com	r18
    3e10:	23 23       	and	r18, r19
    3e12:	20 83       	st	Z, r18
    3e14:	ea 89       	ldd	r30, Y+18	; 0x12
    3e16:	fb 89       	ldd	r31, Y+19	; 0x13
    3e18:	30 81       	ld	r19, Z
    3e1a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e1c:	23 2b       	or	r18, r19
    3e1e:	20 83       	st	Z, r18
    3e20:	ea 89       	ldd	r30, Y+18	; 0x12
    3e22:	fb 89       	ldd	r31, Y+19	; 0x13
    3e24:	30 81       	ld	r19, Z
    3e26:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e28:	20 95       	com	r18
    3e2a:	23 23       	and	r18, r19
    3e2c:	20 83       	st	Z, r18
    3e2e:	ea 89       	ldd	r30, Y+18	; 0x12
    3e30:	fb 89       	ldd	r31, Y+19	; 0x13
    3e32:	30 81       	ld	r19, Z
    3e34:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e36:	23 2b       	or	r18, r19
    3e38:	20 83       	st	Z, r18
    3e3a:	ea 89       	ldd	r30, Y+18	; 0x12
    3e3c:	fb 89       	ldd	r31, Y+19	; 0x13
    3e3e:	30 81       	ld	r19, Z
    3e40:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e42:	20 95       	com	r18
    3e44:	23 23       	and	r18, r19
    3e46:	20 83       	st	Z, r18
    3e48:	ea 89       	ldd	r30, Y+18	; 0x12
    3e4a:	fb 89       	ldd	r31, Y+19	; 0x13
    3e4c:	30 81       	ld	r19, Z
    3e4e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e50:	23 2b       	or	r18, r19
    3e52:	20 83       	st	Z, r18
    3e54:	ea 89       	ldd	r30, Y+18	; 0x12
    3e56:	fb 89       	ldd	r31, Y+19	; 0x13
    3e58:	30 81       	ld	r19, Z
    3e5a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e5c:	20 95       	com	r18
    3e5e:	23 23       	and	r18, r19
    3e60:	20 83       	st	Z, r18
    3e62:	ea 89       	ldd	r30, Y+18	; 0x12
    3e64:	fb 89       	ldd	r31, Y+19	; 0x13
    3e66:	30 81       	ld	r19, Z
    3e68:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e6a:	23 2b       	or	r18, r19
    3e6c:	20 83       	st	Z, r18
    3e6e:	ea 89       	ldd	r30, Y+18	; 0x12
    3e70:	fb 89       	ldd	r31, Y+19	; 0x13
    3e72:	30 81       	ld	r19, Z
    3e74:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e76:	20 95       	com	r18
    3e78:	23 23       	and	r18, r19
    3e7a:	20 83       	st	Z, r18
    3e7c:	ea 89       	ldd	r30, Y+18	; 0x12
    3e7e:	fb 89       	ldd	r31, Y+19	; 0x13
    3e80:	30 81       	ld	r19, Z
    3e82:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e84:	23 2b       	or	r18, r19
    3e86:	20 83       	st	Z, r18
    3e88:	ea 89       	ldd	r30, Y+18	; 0x12
    3e8a:	fb 89       	ldd	r31, Y+19	; 0x13
    3e8c:	30 81       	ld	r19, Z
    3e8e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e90:	20 95       	com	r18
    3e92:	23 23       	and	r18, r19
    3e94:	20 83       	st	Z, r18
    3e96:	ea 89       	ldd	r30, Y+18	; 0x12
    3e98:	fb 89       	ldd	r31, Y+19	; 0x13
    3e9a:	30 81       	ld	r19, Z
    3e9c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e9e:	23 2b       	or	r18, r19
    3ea0:	20 83       	st	Z, r18
    3ea2:	ea 89       	ldd	r30, Y+18	; 0x12
    3ea4:	fb 89       	ldd	r31, Y+19	; 0x13
    3ea6:	30 81       	ld	r19, Z
    3ea8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3eaa:	20 95       	com	r18
    3eac:	23 23       	and	r18, r19
    3eae:	20 83       	st	Z, r18
    3eb0:	ea 89       	ldd	r30, Y+18	; 0x12
    3eb2:	fb 89       	ldd	r31, Y+19	; 0x13
    3eb4:	30 81       	ld	r19, Z
    3eb6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3eb8:	23 2b       	or	r18, r19
    3eba:	20 83       	st	Z, r18
    3ebc:	ea 89       	ldd	r30, Y+18	; 0x12
    3ebe:	fb 89       	ldd	r31, Y+19	; 0x13
    3ec0:	30 81       	ld	r19, Z
    3ec2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ec4:	20 95       	com	r18
    3ec6:	23 23       	and	r18, r19
    3ec8:	20 83       	st	Z, r18
    3eca:	ea 89       	ldd	r30, Y+18	; 0x12
    3ecc:	fb 89       	ldd	r31, Y+19	; 0x13
    3ece:	30 81       	ld	r19, Z
    3ed0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ed2:	23 2b       	or	r18, r19
    3ed4:	20 83       	st	Z, r18
    3ed6:	ea 89       	ldd	r30, Y+18	; 0x12
    3ed8:	fb 89       	ldd	r31, Y+19	; 0x13
    3eda:	30 81       	ld	r19, Z
    3edc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ede:	20 95       	com	r18
    3ee0:	23 23       	and	r18, r19
    3ee2:	20 83       	st	Z, r18
    3ee4:	ea 89       	ldd	r30, Y+18	; 0x12
    3ee6:	fb 89       	ldd	r31, Y+19	; 0x13
    3ee8:	30 81       	ld	r19, Z
    3eea:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3eec:	23 2b       	or	r18, r19
    3eee:	20 83       	st	Z, r18
    3ef0:	ea 89       	ldd	r30, Y+18	; 0x12
    3ef2:	fb 89       	ldd	r31, Y+19	; 0x13
    3ef4:	30 81       	ld	r19, Z
    3ef6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ef8:	20 95       	com	r18
    3efa:	23 23       	and	r18, r19
    3efc:	20 83       	st	Z, r18
    3efe:	ea 89       	ldd	r30, Y+18	; 0x12
    3f00:	fb 89       	ldd	r31, Y+19	; 0x13
    3f02:	30 81       	ld	r19, Z
    3f04:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f06:	23 2b       	or	r18, r19
    3f08:	20 83       	st	Z, r18
    3f0a:	ea 89       	ldd	r30, Y+18	; 0x12
    3f0c:	fb 89       	ldd	r31, Y+19	; 0x13
    3f0e:	30 81       	ld	r19, Z
    3f10:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f12:	20 95       	com	r18
    3f14:	23 23       	and	r18, r19
    3f16:	20 83       	st	Z, r18
    3f18:	ea 89       	ldd	r30, Y+18	; 0x12
    3f1a:	fb 89       	ldd	r31, Y+19	; 0x13
    3f1c:	30 81       	ld	r19, Z
    3f1e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f20:	23 2b       	or	r18, r19
    3f22:	20 83       	st	Z, r18
    3f24:	ea 89       	ldd	r30, Y+18	; 0x12
    3f26:	fb 89       	ldd	r31, Y+19	; 0x13
    3f28:	30 81       	ld	r19, Z
    3f2a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f2c:	20 95       	com	r18
    3f2e:	23 23       	and	r18, r19
    3f30:	20 83       	st	Z, r18
    3f32:	ea 89       	ldd	r30, Y+18	; 0x12
    3f34:	fb 89       	ldd	r31, Y+19	; 0x13
    3f36:	30 81       	ld	r19, Z
    3f38:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f3a:	23 2b       	or	r18, r19
    3f3c:	20 83       	st	Z, r18
    3f3e:	ea 89       	ldd	r30, Y+18	; 0x12
    3f40:	fb 89       	ldd	r31, Y+19	; 0x13
    3f42:	30 81       	ld	r19, Z
    3f44:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f46:	20 95       	com	r18
    3f48:	23 23       	and	r18, r19
    3f4a:	20 83       	st	Z, r18
    3f4c:	ea 89       	ldd	r30, Y+18	; 0x12
    3f4e:	fb 89       	ldd	r31, Y+19	; 0x13
    3f50:	30 81       	ld	r19, Z
    3f52:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f54:	23 2b       	or	r18, r19
    3f56:	20 83       	st	Z, r18
    3f58:	ea 89       	ldd	r30, Y+18	; 0x12
    3f5a:	fb 89       	ldd	r31, Y+19	; 0x13
    3f5c:	30 81       	ld	r19, Z
    3f5e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f60:	20 95       	com	r18
    3f62:	23 23       	and	r18, r19
    3f64:	20 83       	st	Z, r18
    3f66:	ea 89       	ldd	r30, Y+18	; 0x12
    3f68:	fb 89       	ldd	r31, Y+19	; 0x13
    3f6a:	30 81       	ld	r19, Z
    3f6c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f6e:	23 2b       	or	r18, r19
    3f70:	20 83       	st	Z, r18
    3f72:	ea 89       	ldd	r30, Y+18	; 0x12
    3f74:	fb 89       	ldd	r31, Y+19	; 0x13
    3f76:	30 81       	ld	r19, Z
    3f78:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f7a:	20 95       	com	r18
    3f7c:	23 23       	and	r18, r19
    3f7e:	20 83       	st	Z, r18
    3f80:	ea 89       	ldd	r30, Y+18	; 0x12
    3f82:	fb 89       	ldd	r31, Y+19	; 0x13
    3f84:	30 81       	ld	r19, Z
    3f86:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f88:	23 2b       	or	r18, r19
    3f8a:	20 83       	st	Z, r18
    3f8c:	ea 89       	ldd	r30, Y+18	; 0x12
    3f8e:	fb 89       	ldd	r31, Y+19	; 0x13
    3f90:	30 81       	ld	r19, Z
    3f92:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f94:	20 95       	com	r18
    3f96:	23 23       	and	r18, r19
    3f98:	20 83       	st	Z, r18
    3f9a:	ea 89       	ldd	r30, Y+18	; 0x12
    3f9c:	fb 89       	ldd	r31, Y+19	; 0x13
    3f9e:	30 81       	ld	r19, Z
    3fa0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fa2:	23 2b       	or	r18, r19
    3fa4:	20 83       	st	Z, r18
    3fa6:	ea 89       	ldd	r30, Y+18	; 0x12
    3fa8:	fb 89       	ldd	r31, Y+19	; 0x13
    3faa:	30 81       	ld	r19, Z
    3fac:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fae:	20 95       	com	r18
    3fb0:	23 23       	and	r18, r19
    3fb2:	20 83       	st	Z, r18
    3fb4:	ea 89       	ldd	r30, Y+18	; 0x12
    3fb6:	fb 89       	ldd	r31, Y+19	; 0x13
    3fb8:	30 81       	ld	r19, Z
    3fba:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fbc:	23 2b       	or	r18, r19
    3fbe:	20 83       	st	Z, r18
    3fc0:	ea 89       	ldd	r30, Y+18	; 0x12
    3fc2:	fb 89       	ldd	r31, Y+19	; 0x13
    3fc4:	30 81       	ld	r19, Z
    3fc6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fc8:	20 95       	com	r18
    3fca:	23 23       	and	r18, r19
    3fcc:	20 83       	st	Z, r18
    3fce:	ea 89       	ldd	r30, Y+18	; 0x12
    3fd0:	fb 89       	ldd	r31, Y+19	; 0x13
    3fd2:	30 81       	ld	r19, Z
    3fd4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fd6:	23 2b       	or	r18, r19
    3fd8:	20 83       	st	Z, r18
    3fda:	ea 89       	ldd	r30, Y+18	; 0x12
    3fdc:	fb 89       	ldd	r31, Y+19	; 0x13
    3fde:	30 81       	ld	r19, Z
    3fe0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fe2:	20 95       	com	r18
    3fe4:	23 23       	and	r18, r19
    3fe6:	20 83       	st	Z, r18
    3fe8:	ea 89       	ldd	r30, Y+18	; 0x12
    3fea:	fb 89       	ldd	r31, Y+19	; 0x13
    3fec:	30 81       	ld	r19, Z
    3fee:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ff0:	23 2b       	or	r18, r19
    3ff2:	20 83       	st	Z, r18
    3ff4:	ea 89       	ldd	r30, Y+18	; 0x12
    3ff6:	fb 89       	ldd	r31, Y+19	; 0x13
    3ff8:	30 81       	ld	r19, Z
    3ffa:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ffc:	20 95       	com	r18
    3ffe:	23 23       	and	r18, r19
    4000:	20 83       	st	Z, r18
    4002:	ea 89       	ldd	r30, Y+18	; 0x12
    4004:	fb 89       	ldd	r31, Y+19	; 0x13
    4006:	30 81       	ld	r19, Z
    4008:	2f 8d       	ldd	r18, Y+31	; 0x1f
    400a:	23 2b       	or	r18, r19
    400c:	20 83       	st	Z, r18
    400e:	ea 89       	ldd	r30, Y+18	; 0x12
    4010:	fb 89       	ldd	r31, Y+19	; 0x13
    4012:	30 81       	ld	r19, Z
    4014:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4016:	20 95       	com	r18
    4018:	23 23       	and	r18, r19
    401a:	20 83       	st	Z, r18
    401c:	ea 89       	ldd	r30, Y+18	; 0x12
    401e:	fb 89       	ldd	r31, Y+19	; 0x13
    4020:	30 81       	ld	r19, Z
    4022:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4024:	23 2b       	or	r18, r19
    4026:	20 83       	st	Z, r18
    4028:	ea 89       	ldd	r30, Y+18	; 0x12
    402a:	fb 89       	ldd	r31, Y+19	; 0x13
    402c:	30 81       	ld	r19, Z
    402e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4030:	20 95       	com	r18
    4032:	23 23       	and	r18, r19
    4034:	20 83       	st	Z, r18
    4036:	ea 89       	ldd	r30, Y+18	; 0x12
    4038:	fb 89       	ldd	r31, Y+19	; 0x13
    403a:	30 81       	ld	r19, Z
    403c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    403e:	23 2b       	or	r18, r19
    4040:	20 83       	st	Z, r18
    4042:	ea 89       	ldd	r30, Y+18	; 0x12
    4044:	fb 89       	ldd	r31, Y+19	; 0x13
    4046:	30 81       	ld	r19, Z
    4048:	2f 8d       	ldd	r18, Y+31	; 0x1f
    404a:	20 95       	com	r18
    404c:	23 23       	and	r18, r19
    404e:	20 83       	st	Z, r18
    4050:	ea 89       	ldd	r30, Y+18	; 0x12
    4052:	fb 89       	ldd	r31, Y+19	; 0x13
    4054:	30 81       	ld	r19, Z
    4056:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4058:	23 2b       	or	r18, r19
    405a:	20 83       	st	Z, r18
    405c:	ea 89       	ldd	r30, Y+18	; 0x12
    405e:	fb 89       	ldd	r31, Y+19	; 0x13
    4060:	30 81       	ld	r19, Z
    4062:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4064:	20 95       	com	r18
    4066:	23 23       	and	r18, r19
    4068:	20 83       	st	Z, r18
    406a:	ea 89       	ldd	r30, Y+18	; 0x12
    406c:	fb 89       	ldd	r31, Y+19	; 0x13
    406e:	30 81       	ld	r19, Z
    4070:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4072:	23 2b       	or	r18, r19
    4074:	20 83       	st	Z, r18
    4076:	ea 89       	ldd	r30, Y+18	; 0x12
    4078:	fb 89       	ldd	r31, Y+19	; 0x13
    407a:	40 81       	ld	r20, Z
    407c:	3f 8d       	ldd	r19, Y+31	; 0x1f
    407e:	30 95       	com	r19
    4080:	34 23       	and	r19, r20
    4082:	30 83       	st	Z, r19
    4084:	ea 89       	ldd	r30, Y+18	; 0x12
    4086:	fb 89       	ldd	r31, Y+19	; 0x13
    4088:	20 81       	ld	r18, Z
    408a:	3f 8d       	ldd	r19, Y+31	; 0x1f
    408c:	32 2b       	or	r19, r18
    408e:	30 83       	st	Z, r19
    4090:	01 96       	adiw	r24, 0x01	; 1
    4092:	a1 1d       	adc	r26, r1
    4094:	b1 1d       	adc	r27, r1
    4096:	56 ce       	rjmp	.-852    	; 0x3d44 <_ZN4UTFT12_fast_fill_8Eil+0x36>
    4098:	d7 01       	movw	r26, r14
    409a:	c6 01       	movw	r24, r12
    409c:	8f 70       	andi	r24, 0x0F	; 15
    409e:	99 27       	eor	r25, r25
    40a0:	aa 27       	eor	r26, r26
    40a2:	bb 27       	eor	r27, r27
    40a4:	89 2b       	or	r24, r25
    40a6:	8a 2b       	or	r24, r26
    40a8:	8b 2b       	or	r24, r27
    40aa:	81 f1       	breq	.+96     	; 0x410c <_ZN4UTFT12_fast_fill_8Eil+0x3fe>
    40ac:	c7 01       	movw	r24, r14
    40ae:	b6 01       	movw	r22, r12
    40b0:	20 e1       	ldi	r18, 0x10	; 16
    40b2:	30 e0       	ldi	r19, 0x00	; 0
    40b4:	40 e0       	ldi	r20, 0x00	; 0
    40b6:	50 e0       	ldi	r21, 0x00	; 0
    40b8:	0e 94 14 47 	call	0x8e28	; 0x8e28 <__divmodsi4>
    40bc:	c1 2c       	mov	r12, r1
    40be:	d1 2c       	mov	r13, r1
    40c0:	76 01       	movw	r14, r12
    40c2:	6c 15       	cp	r22, r12
    40c4:	7d 05       	cpc	r23, r13
    40c6:	8e 05       	cpc	r24, r14
    40c8:	9f 05       	cpc	r25, r15
    40ca:	04 f1       	brlt	.+64     	; 0x410c <_ZN4UTFT12_fast_fill_8Eil+0x3fe>
    40cc:	ea 89       	ldd	r30, Y+18	; 0x12
    40ce:	fb 89       	ldd	r31, Y+19	; 0x13
    40d0:	30 81       	ld	r19, Z
    40d2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    40d4:	20 95       	com	r18
    40d6:	23 23       	and	r18, r19
    40d8:	20 83       	st	Z, r18
    40da:	ea 89       	ldd	r30, Y+18	; 0x12
    40dc:	fb 89       	ldd	r31, Y+19	; 0x13
    40de:	30 81       	ld	r19, Z
    40e0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    40e2:	23 2b       	or	r18, r19
    40e4:	20 83       	st	Z, r18
    40e6:	ea 89       	ldd	r30, Y+18	; 0x12
    40e8:	fb 89       	ldd	r31, Y+19	; 0x13
    40ea:	30 81       	ld	r19, Z
    40ec:	2f 8d       	ldd	r18, Y+31	; 0x1f
    40ee:	20 95       	com	r18
    40f0:	23 23       	and	r18, r19
    40f2:	20 83       	st	Z, r18
    40f4:	ea 89       	ldd	r30, Y+18	; 0x12
    40f6:	fb 89       	ldd	r31, Y+19	; 0x13
    40f8:	30 81       	ld	r19, Z
    40fa:	2f 8d       	ldd	r18, Y+31	; 0x1f
    40fc:	23 2b       	or	r18, r19
    40fe:	20 83       	st	Z, r18
    4100:	2f ef       	ldi	r18, 0xFF	; 255
    4102:	c2 1a       	sub	r12, r18
    4104:	d2 0a       	sbc	r13, r18
    4106:	e2 0a       	sbc	r14, r18
    4108:	f2 0a       	sbc	r15, r18
    410a:	db cf       	rjmp	.-74     	; 0x40c2 <_ZN4UTFT12_fast_fill_8Eil+0x3b4>
    410c:	df 91       	pop	r29
    410e:	cf 91       	pop	r28
    4110:	ff 90       	pop	r15
    4112:	ef 90       	pop	r14
    4114:	df 90       	pop	r13
    4116:	cf 90       	pop	r12
    4118:	bf 90       	pop	r11
    411a:	af 90       	pop	r10
    411c:	9f 90       	pop	r9
    411e:	8f 90       	pop	r8
    4120:	08 95       	ret

00004122 <_ZN4UTFTC1Ev>:
    4122:	08 95       	ret

00004124 <_ZN4UTFTC1Ehiiiii>:
    4124:	4f 92       	push	r4
    4126:	5f 92       	push	r5
    4128:	6f 92       	push	r6
    412a:	7f 92       	push	r7
    412c:	8f 92       	push	r8
    412e:	9f 92       	push	r9
    4130:	af 92       	push	r10
    4132:	bf 92       	push	r11
    4134:	cf 92       	push	r12
    4136:	df 92       	push	r13
    4138:	ef 92       	push	r14
    413a:	ff 92       	push	r15
    413c:	0f 93       	push	r16
    413e:	1f 93       	push	r17
    4140:	cf 93       	push	r28
    4142:	df 93       	push	r29
    4144:	cd b7       	in	r28, 0x3d	; 61
    4146:	de b7       	in	r29, 0x3e	; 62
    4148:	c0 5a       	subi	r28, 0xA0	; 160
    414a:	d1 09       	sbc	r29, r1
    414c:	0f b6       	in	r0, 0x3f	; 63
    414e:	f8 94       	cli
    4150:	de bf       	out	0x3e, r29	; 62
    4152:	0f be       	out	0x3f, r0	; 63
    4154:	cd bf       	out	0x3d, r28	; 61
    4156:	70 e4       	ldi	r23, 0x40	; 64
    4158:	e6 e0       	ldi	r30, 0x06	; 6
    415a:	f2 e0       	ldi	r31, 0x02	; 2
    415c:	de 01       	movw	r26, r28
    415e:	af 5b       	subi	r26, 0xBF	; 191
    4160:	bf 4f       	sbci	r27, 0xFF	; 255
    4162:	01 90       	ld	r0, Z+
    4164:	0d 92       	st	X+, r0
    4166:	7a 95       	dec	r23
    4168:	e1 f7       	brne	.-8      	; 0x4162 <_ZN4UTFTC1Ehiiiii+0x3e>
    416a:	70 e4       	ldi	r23, 0x40	; 64
    416c:	e6 e4       	ldi	r30, 0x46	; 70
    416e:	f2 e0       	ldi	r31, 0x02	; 2
    4170:	de 01       	movw	r26, r28
    4172:	11 96       	adiw	r26, 0x01	; 1
    4174:	01 90       	ld	r0, Z+
    4176:	0d 92       	st	X+, r0
    4178:	7a 95       	dec	r23
    417a:	e1 f7       	brne	.-8      	; 0x4174 <_ZN4UTFTC1Ehiiiii+0x50>
    417c:	70 e2       	ldi	r23, 0x20	; 32
    417e:	e6 e8       	ldi	r30, 0x86	; 134
    4180:	f2 e0       	ldi	r31, 0x02	; 2
    4182:	de 01       	movw	r26, r28
    4184:	af 57       	subi	r26, 0x7F	; 127
    4186:	bf 4f       	sbci	r27, 0xFF	; 255
    4188:	01 90       	ld	r0, Z+
    418a:	0d 92       	st	X+, r0
    418c:	7a 95       	dec	r23
    418e:	e1 f7       	brne	.-8      	; 0x4188 <_ZN4UTFTC1Ehiiiii+0x64>
    4190:	e6 2f       	mov	r30, r22
    4192:	f0 e0       	ldi	r31, 0x00	; 0
    4194:	5f 01       	movw	r10, r30
    4196:	aa 0c       	add	r10, r10
    4198:	bb 1c       	adc	r11, r11
    419a:	a1 e4       	ldi	r26, 0x41	; 65
    419c:	b0 e0       	ldi	r27, 0x00	; 0
    419e:	ac 0f       	add	r26, r28
    41a0:	bd 1f       	adc	r27, r29
    41a2:	aa 0d       	add	r26, r10
    41a4:	bb 1d       	adc	r27, r11
    41a6:	0d 90       	ld	r0, X+
    41a8:	bc 91       	ld	r27, X
    41aa:	a0 2d       	mov	r26, r0
    41ac:	2d 01       	movw	r4, r26
    41ae:	61 2c       	mov	r6, r1
    41b0:	71 2c       	mov	r7, r1
    41b2:	dc 01       	movw	r26, r24
    41b4:	15 96       	adiw	r26, 0x05	; 5
    41b6:	4d 92       	st	X+, r4
    41b8:	5d 92       	st	X+, r5
    41ba:	6d 92       	st	X+, r6
    41bc:	7c 92       	st	X, r7
    41be:	18 97       	sbiw	r26, 0x08	; 8
    41c0:	a1 e0       	ldi	r26, 0x01	; 1
    41c2:	b0 e0       	ldi	r27, 0x00	; 0
    41c4:	ac 0f       	add	r26, r28
    41c6:	bd 1f       	adc	r27, r29
    41c8:	aa 0d       	add	r26, r10
    41ca:	bb 1d       	adc	r27, r11
    41cc:	0d 90       	ld	r0, X+
    41ce:	bc 91       	ld	r27, X
    41d0:	a0 2d       	mov	r26, r0
    41d2:	4d 01       	movw	r8, r26
    41d4:	a1 2c       	mov	r10, r1
    41d6:	b1 2c       	mov	r11, r1
    41d8:	dc 01       	movw	r26, r24
    41da:	19 96       	adiw	r26, 0x09	; 9
    41dc:	8d 92       	st	X+, r8
    41de:	9d 92       	st	X+, r9
    41e0:	ad 92       	st	X+, r10
    41e2:	bc 92       	st	X, r11
    41e4:	1c 97       	sbiw	r26, 0x0c	; 12
    41e6:	a1 e8       	ldi	r26, 0x81	; 129
    41e8:	b0 e0       	ldi	r27, 0x00	; 0
    41ea:	ac 0f       	add	r26, r28
    41ec:	bd 1f       	adc	r27, r29
    41ee:	ea 0f       	add	r30, r26
    41f0:	fb 1f       	adc	r31, r27
    41f2:	70 81       	ld	r23, Z
    41f4:	fc 01       	movw	r30, r24
    41f6:	76 87       	std	Z+14, r23	; 0x0e
    41f8:	65 87       	std	Z+13, r22	; 0x0d
    41fa:	45 a3       	std	Z+37, r20	; 0x25
    41fc:	26 a3       	std	Z+38, r18	; 0x26
    41fe:	07 a3       	std	Z+39, r16	; 0x27
    4200:	e0 a6       	std	Z+40, r14	; 0x28
    4202:	c1 a6       	std	Z+41, r12	; 0x29
    4204:	74 30       	cpi	r23, 0x04	; 4
    4206:	19 f4       	brne	.+6      	; 0x420e <_ZN4UTFTC1Ehiiiii+0xea>
    4208:	61 e0       	ldi	r22, 0x01	; 1
    420a:	66 87       	std	Z+14, r22	; 0x0e
    420c:	77 87       	std	Z+15, r23	; 0x0f
    420e:	dc 01       	movw	r26, r24
    4210:	1e 96       	adiw	r26, 0x0e	; 14
    4212:	6c 91       	ld	r22, X
    4214:	1e 97       	sbiw	r26, 0x0e	; 14
    4216:	65 30       	cpi	r22, 0x05	; 5
    4218:	31 f4       	brne	.+12     	; 0x4226 <_ZN4UTFTC1Ehiiiii+0x102>
    421a:	71 e0       	ldi	r23, 0x01	; 1
    421c:	1e 96       	adiw	r26, 0x0e	; 14
    421e:	7c 93       	st	X, r23
    4220:	1e 97       	sbiw	r26, 0x0e	; 14
    4222:	1f 96       	adiw	r26, 0x0f	; 15
    4224:	6c 93       	st	X, r22
    4226:	fc 01       	movw	r30, r24
    4228:	66 85       	ldd	r22, Z+14	; 0x0e
    422a:	61 30       	cpi	r22, 0x01	; 1
    422c:	09 f4       	brne	.+2      	; 0x4230 <_ZN4UTFTC1Ehiiiii+0x10c>
    422e:	98 c0       	rjmp	.+304    	; 0x4360 <_ZN4UTFTC1Ehiiiii+0x23c>
    4230:	49 01       	movw	r8, r18
    4232:	3a 01       	movw	r6, r20
    4234:	5c 01       	movw	r10, r24
    4236:	29 dc       	rcall	.-1966   	; 0x3a8a <_ZN4UTFT24_set_direction_registersEh>
    4238:	f3 01       	movw	r30, r6
    423a:	e0 58       	subi	r30, 0x80	; 128
    423c:	fc 4e       	sbci	r31, 0xEC	; 236
    423e:	e4 91       	lpm	r30, Z
    4240:	f0 e0       	ldi	r31, 0x00	; 0
    4242:	ee 0f       	add	r30, r30
    4244:	ff 1f       	adc	r31, r31
    4246:	e0 52       	subi	r30, 0x20	; 32
    4248:	fc 4e       	sbci	r31, 0xEC	; 236
    424a:	25 91       	lpm	r18, Z+
    424c:	34 91       	lpm	r19, Z
    424e:	d5 01       	movw	r26, r10
    4250:	51 96       	adiw	r26, 0x11	; 17
    4252:	3c 93       	st	X, r19
    4254:	2e 93       	st	-X, r18
    4256:	50 97       	sbiw	r26, 0x10	; 16
    4258:	f3 01       	movw	r30, r6
    425a:	e6 5c       	subi	r30, 0xC6	; 198
    425c:	fc 4e       	sbci	r31, 0xEC	; 236
    425e:	e4 91       	lpm	r30, Z
    4260:	5e 96       	adiw	r26, 0x1e	; 30
    4262:	ec 93       	st	X, r30
    4264:	5e 97       	sbiw	r26, 0x1e	; 30
    4266:	f4 01       	movw	r30, r8
    4268:	e0 58       	subi	r30, 0x80	; 128
    426a:	fc 4e       	sbci	r31, 0xEC	; 236
    426c:	e4 91       	lpm	r30, Z
    426e:	f0 e0       	ldi	r31, 0x00	; 0
    4270:	ee 0f       	add	r30, r30
    4272:	ff 1f       	adc	r31, r31
    4274:	e0 52       	subi	r30, 0x20	; 32
    4276:	fc 4e       	sbci	r31, 0xEC	; 236
    4278:	25 91       	lpm	r18, Z+
    427a:	34 91       	lpm	r19, Z
    427c:	f5 01       	movw	r30, r10
    427e:	33 8b       	std	Z+19, r19	; 0x13
    4280:	22 8b       	std	Z+18, r18	; 0x12
    4282:	f4 01       	movw	r30, r8
    4284:	e6 5c       	subi	r30, 0xC6	; 198
    4286:	fc 4e       	sbci	r31, 0xEC	; 236
    4288:	e4 91       	lpm	r30, Z
    428a:	5f 96       	adiw	r26, 0x1f	; 31
    428c:	ec 93       	st	X, r30
    428e:	5f 97       	sbiw	r26, 0x1f	; 31
    4290:	c8 01       	movw	r24, r16
    4292:	f8 01       	movw	r30, r16
    4294:	e0 58       	subi	r30, 0x80	; 128
    4296:	fc 4e       	sbci	r31, 0xEC	; 236
    4298:	e4 91       	lpm	r30, Z
    429a:	f0 e0       	ldi	r31, 0x00	; 0
    429c:	ee 0f       	add	r30, r30
    429e:	ff 1f       	adc	r31, r31
    42a0:	e0 52       	subi	r30, 0x20	; 32
    42a2:	fc 4e       	sbci	r31, 0xEC	; 236
    42a4:	25 91       	lpm	r18, Z+
    42a6:	34 91       	lpm	r19, Z
    42a8:	f5 01       	movw	r30, r10
    42aa:	35 8b       	std	Z+21, r19	; 0x15
    42ac:	24 8b       	std	Z+20, r18	; 0x14
    42ae:	fc 01       	movw	r30, r24
    42b0:	e6 5c       	subi	r30, 0xC6	; 198
    42b2:	fc 4e       	sbci	r31, 0xEC	; 236
    42b4:	e4 91       	lpm	r30, Z
    42b6:	90 96       	adiw	r26, 0x20	; 32
    42b8:	ec 93       	st	X, r30
    42ba:	90 97       	sbiw	r26, 0x20	; 32
    42bc:	f7 01       	movw	r30, r14
    42be:	e0 58       	subi	r30, 0x80	; 128
    42c0:	fc 4e       	sbci	r31, 0xEC	; 236
    42c2:	e4 91       	lpm	r30, Z
    42c4:	f0 e0       	ldi	r31, 0x00	; 0
    42c6:	ee 0f       	add	r30, r30
    42c8:	ff 1f       	adc	r31, r31
    42ca:	e0 52       	subi	r30, 0x20	; 32
    42cc:	fc 4e       	sbci	r31, 0xEC	; 236
    42ce:	85 91       	lpm	r24, Z+
    42d0:	94 91       	lpm	r25, Z
    42d2:	f5 01       	movw	r30, r10
    42d4:	97 8b       	std	Z+23, r25	; 0x17
    42d6:	86 8b       	std	Z+22, r24	; 0x16
    42d8:	f7 01       	movw	r30, r14
    42da:	e6 5c       	subi	r30, 0xC6	; 198
    42dc:	fc 4e       	sbci	r31, 0xEC	; 236
    42de:	e4 90       	lpm	r14, Z
    42e0:	91 96       	adiw	r26, 0x21	; 33
    42e2:	ec 92       	st	X, r14
    42e4:	91 97       	sbiw	r26, 0x21	; 33
    42e6:	1e 96       	adiw	r26, 0x0e	; 14
    42e8:	8c 91       	ld	r24, X
    42ea:	81 31       	cpi	r24, 0x11	; 17
    42ec:	09 f0       	breq	.+2      	; 0x42f0 <_ZN4UTFTC1Ehiiiii+0x1cc>
    42ee:	ad c0       	rjmp	.+346    	; 0x444a <_ZN4UTFTC1Ehiiiii+0x326>
    42f0:	f6 01       	movw	r30, r12
    42f2:	e0 58       	subi	r30, 0x80	; 128
    42f4:	fc 4e       	sbci	r31, 0xEC	; 236
    42f6:	e4 91       	lpm	r30, Z
    42f8:	f0 e0       	ldi	r31, 0x00	; 0
    42fa:	ee 0f       	add	r30, r30
    42fc:	ff 1f       	adc	r31, r31
    42fe:	e0 52       	subi	r30, 0x20	; 32
    4300:	fc 4e       	sbci	r31, 0xEC	; 236
    4302:	a5 91       	lpm	r26, Z+
    4304:	b4 91       	lpm	r27, Z
    4306:	f5 01       	movw	r30, r10
    4308:	b5 8f       	std	Z+29, r27	; 0x1d
    430a:	a4 8f       	std	Z+28, r26	; 0x1c
    430c:	f6 01       	movw	r30, r12
    430e:	e6 5c       	subi	r30, 0xC6	; 198
    4310:	fc 4e       	sbci	r31, 0xEC	; 236
    4312:	94 91       	lpm	r25, Z
    4314:	f5 01       	movw	r30, r10
    4316:	94 a3       	std	Z+36, r25	; 0x24
    4318:	8c 91       	ld	r24, X
    431a:	e9 2f       	mov	r30, r25
    431c:	e0 95       	com	r30
    431e:	e8 23       	and	r30, r24
    4320:	ec 93       	st	X, r30
    4322:	61 e0       	ldi	r22, 0x01	; 1
    4324:	88 e0       	ldi	r24, 0x08	; 8
    4326:	0e 94 76 45 	call	0x8aec	; 0x8aec <pinMode>
    432a:	60 e0       	ldi	r22, 0x00	; 0
    432c:	88 e0       	ldi	r24, 0x08	; 8
    432e:	c0 56       	subi	r28, 0x60	; 96
    4330:	df 4f       	sbci	r29, 0xFF	; 255
    4332:	0f b6       	in	r0, 0x3f	; 63
    4334:	f8 94       	cli
    4336:	de bf       	out	0x3e, r29	; 62
    4338:	0f be       	out	0x3f, r0	; 63
    433a:	cd bf       	out	0x3d, r28	; 61
    433c:	df 91       	pop	r29
    433e:	cf 91       	pop	r28
    4340:	1f 91       	pop	r17
    4342:	0f 91       	pop	r16
    4344:	ff 90       	pop	r15
    4346:	ef 90       	pop	r14
    4348:	df 90       	pop	r13
    434a:	cf 90       	pop	r12
    434c:	bf 90       	pop	r11
    434e:	af 90       	pop	r10
    4350:	9f 90       	pop	r9
    4352:	8f 90       	pop	r8
    4354:	7f 90       	pop	r7
    4356:	6f 90       	pop	r6
    4358:	5f 90       	pop	r5
    435a:	4f 90       	pop	r4
    435c:	0c 94 b2 45 	jmp	0x8b64	; 0x8b64 <digitalWrite>
    4360:	ba 01       	movw	r22, r20
    4362:	fa 01       	movw	r30, r20
    4364:	e0 58       	subi	r30, 0x80	; 128
    4366:	fc 4e       	sbci	r31, 0xEC	; 236
    4368:	e4 91       	lpm	r30, Z
    436a:	f0 e0       	ldi	r31, 0x00	; 0
    436c:	ee 0f       	add	r30, r30
    436e:	ff 1f       	adc	r31, r31
    4370:	e0 52       	subi	r30, 0x20	; 32
    4372:	fc 4e       	sbci	r31, 0xEC	; 236
    4374:	45 91       	lpm	r20, Z+
    4376:	54 91       	lpm	r21, Z
    4378:	dc 01       	movw	r26, r24
    437a:	59 96       	adiw	r26, 0x19	; 25
    437c:	5c 93       	st	X, r21
    437e:	4e 93       	st	-X, r20
    4380:	58 97       	sbiw	r26, 0x18	; 24
    4382:	fb 01       	movw	r30, r22
    4384:	e6 5c       	subi	r30, 0xC6	; 198
    4386:	fc 4e       	sbci	r31, 0xEC	; 236
    4388:	e4 91       	lpm	r30, Z
    438a:	92 96       	adiw	r26, 0x22	; 34
    438c:	ec 93       	st	X, r30
    438e:	92 97       	sbiw	r26, 0x22	; 34
    4390:	a9 01       	movw	r20, r18
    4392:	f9 01       	movw	r30, r18
    4394:	e0 58       	subi	r30, 0x80	; 128
    4396:	fc 4e       	sbci	r31, 0xEC	; 236
    4398:	e4 91       	lpm	r30, Z
    439a:	f0 e0       	ldi	r31, 0x00	; 0
    439c:	ee 0f       	add	r30, r30
    439e:	ff 1f       	adc	r31, r31
    43a0:	e0 52       	subi	r30, 0x20	; 32
    43a2:	fc 4e       	sbci	r31, 0xEC	; 236
    43a4:	25 91       	lpm	r18, Z+
    43a6:	34 91       	lpm	r19, Z
    43a8:	fc 01       	movw	r30, r24
    43aa:	33 8f       	std	Z+27, r19	; 0x1b
    43ac:	22 8f       	std	Z+26, r18	; 0x1a
    43ae:	fa 01       	movw	r30, r20
    43b0:	e6 5c       	subi	r30, 0xC6	; 198
    43b2:	fc 4e       	sbci	r31, 0xEC	; 236
    43b4:	e4 91       	lpm	r30, Z
    43b6:	93 96       	adiw	r26, 0x23	; 35
    43b8:	ec 93       	st	X, r30
    43ba:	93 97       	sbiw	r26, 0x23	; 35
    43bc:	f8 01       	movw	r30, r16
    43be:	e0 58       	subi	r30, 0x80	; 128
    43c0:	fc 4e       	sbci	r31, 0xEC	; 236
    43c2:	e4 91       	lpm	r30, Z
    43c4:	f0 e0       	ldi	r31, 0x00	; 0
    43c6:	ee 0f       	add	r30, r30
    43c8:	ff 1f       	adc	r31, r31
    43ca:	e0 52       	subi	r30, 0x20	; 32
    43cc:	fc 4e       	sbci	r31, 0xEC	; 236
    43ce:	45 91       	lpm	r20, Z+
    43d0:	54 91       	lpm	r21, Z
    43d2:	fc 01       	movw	r30, r24
    43d4:	55 8b       	std	Z+21, r21	; 0x15
    43d6:	44 8b       	std	Z+20, r20	; 0x14
    43d8:	f8 01       	movw	r30, r16
    43da:	e6 5c       	subi	r30, 0xC6	; 198
    43dc:	fc 4e       	sbci	r31, 0xEC	; 236
    43de:	e4 91       	lpm	r30, Z
    43e0:	90 96       	adiw	r26, 0x20	; 32
    43e2:	ec 93       	st	X, r30
    43e4:	bf ef       	ldi	r27, 0xFF	; 255
    43e6:	eb 16       	cp	r14, r27
    43e8:	f1 04       	cpc	r15, r1
    43ea:	a9 f0       	breq	.+42     	; 0x4416 <_ZN4UTFTC1Ehiiiii+0x2f2>
    43ec:	f7 01       	movw	r30, r14
    43ee:	e0 58       	subi	r30, 0x80	; 128
    43f0:	fc 4e       	sbci	r31, 0xEC	; 236
    43f2:	e4 91       	lpm	r30, Z
    43f4:	f0 e0       	ldi	r31, 0x00	; 0
    43f6:	ee 0f       	add	r30, r30
    43f8:	ff 1f       	adc	r31, r31
    43fa:	e0 52       	subi	r30, 0x20	; 32
    43fc:	fc 4e       	sbci	r31, 0xEC	; 236
    43fe:	25 91       	lpm	r18, Z+
    4400:	34 91       	lpm	r19, Z
    4402:	fc 01       	movw	r30, r24
    4404:	37 8b       	std	Z+23, r19	; 0x17
    4406:	26 8b       	std	Z+22, r18	; 0x16
    4408:	f7 01       	movw	r30, r14
    440a:	e6 5c       	subi	r30, 0xC6	; 198
    440c:	fc 4e       	sbci	r31, 0xEC	; 236
    440e:	e4 90       	lpm	r14, Z
    4410:	dc 01       	movw	r26, r24
    4412:	91 96       	adiw	r26, 0x21	; 33
    4414:	ec 92       	st	X, r14
    4416:	fc 01       	movw	r30, r24
    4418:	27 85       	ldd	r18, Z+15	; 0x0f
    441a:	24 30       	cpi	r18, 0x04	; 4
    441c:	b1 f0       	breq	.+44     	; 0x444a <_ZN4UTFTC1Ehiiiii+0x326>
    441e:	f6 01       	movw	r30, r12
    4420:	e0 58       	subi	r30, 0x80	; 128
    4422:	fc 4e       	sbci	r31, 0xEC	; 236
    4424:	e4 91       	lpm	r30, Z
    4426:	f0 e0       	ldi	r31, 0x00	; 0
    4428:	ee 0f       	add	r30, r30
    442a:	ff 1f       	adc	r31, r31
    442c:	e0 52       	subi	r30, 0x20	; 32
    442e:	fc 4e       	sbci	r31, 0xEC	; 236
    4430:	45 91       	lpm	r20, Z+
    4432:	54 91       	lpm	r21, Z
    4434:	dc 01       	movw	r26, r24
    4436:	51 96       	adiw	r26, 0x11	; 17
    4438:	5c 93       	st	X, r21
    443a:	4e 93       	st	-X, r20
    443c:	50 97       	sbiw	r26, 0x10	; 16
    443e:	f6 01       	movw	r30, r12
    4440:	e6 5c       	subi	r30, 0xC6	; 198
    4442:	fc 4e       	sbci	r31, 0xEC	; 236
    4444:	e4 91       	lpm	r30, Z
    4446:	5e 96       	adiw	r26, 0x1e	; 30
    4448:	ec 93       	st	X, r30
    444a:	c0 56       	subi	r28, 0x60	; 96
    444c:	df 4f       	sbci	r29, 0xFF	; 255
    444e:	0f b6       	in	r0, 0x3f	; 63
    4450:	f8 94       	cli
    4452:	de bf       	out	0x3e, r29	; 62
    4454:	0f be       	out	0x3f, r0	; 63
    4456:	cd bf       	out	0x3d, r28	; 61
    4458:	df 91       	pop	r29
    445a:	cf 91       	pop	r28
    445c:	1f 91       	pop	r17
    445e:	0f 91       	pop	r16
    4460:	ff 90       	pop	r15
    4462:	ef 90       	pop	r14
    4464:	df 90       	pop	r13
    4466:	cf 90       	pop	r12
    4468:	bf 90       	pop	r11
    446a:	af 90       	pop	r10
    446c:	9f 90       	pop	r9
    446e:	8f 90       	pop	r8
    4470:	7f 90       	pop	r7
    4472:	6f 90       	pop	r6
    4474:	5f 90       	pop	r5
    4476:	4f 90       	pop	r4
    4478:	08 95       	ret

0000447a <_ZN4UTFT13LCD_Write_COMEc>:
    447a:	46 2f       	mov	r20, r22
    447c:	dc 01       	movw	r26, r24
    447e:	1e 96       	adiw	r26, 0x0e	; 14
    4480:	2c 91       	ld	r18, X
    4482:	1e 97       	sbiw	r26, 0x0e	; 14
    4484:	21 30       	cpi	r18, 0x01	; 1
    4486:	71 f0       	breq	.+28     	; 0x44a4 <_ZN4UTFT13LCD_Write_COMEc+0x2a>
    4488:	50 96       	adiw	r26, 0x10	; 16
    448a:	ed 91       	ld	r30, X+
    448c:	fc 91       	ld	r31, X
    448e:	51 97       	sbiw	r26, 0x11	; 17
    4490:	30 81       	ld	r19, Z
    4492:	5e 96       	adiw	r26, 0x1e	; 30
    4494:	2c 91       	ld	r18, X
    4496:	5e 97       	sbiw	r26, 0x1e	; 30
    4498:	20 95       	com	r18
    449a:	23 23       	and	r18, r19
    449c:	20 83       	st	Z, r18
    449e:	1e 96       	adiw	r26, 0x0e	; 14
    44a0:	2c 91       	ld	r18, X
    44a2:	01 c0       	rjmp	.+2      	; 0x44a6 <_ZN4UTFT13LCD_Write_COMEc+0x2c>
    44a4:	21 e0       	ldi	r18, 0x01	; 1
    44a6:	60 e0       	ldi	r22, 0x00	; 0
    44a8:	59 c9       	rjmp	.-3406   	; 0x375c <_ZN4UTFT12LCD_Writ_BusEcch>

000044aa <_ZN4UTFT14LCD_Write_DATAEcc>:
    44aa:	1f 93       	push	r17
    44ac:	cf 93       	push	r28
    44ae:	df 93       	push	r29
    44b0:	dc 01       	movw	r26, r24
    44b2:	1e 96       	adiw	r26, 0x0e	; 14
    44b4:	2c 91       	ld	r18, X
    44b6:	1e 97       	sbiw	r26, 0x0e	; 14
    44b8:	21 30       	cpi	r18, 0x01	; 1
    44ba:	69 f0       	breq	.+26     	; 0x44d6 <_ZN4UTFT14LCD_Write_DATAEcc+0x2c>
    44bc:	50 96       	adiw	r26, 0x10	; 16
    44be:	ed 91       	ld	r30, X+
    44c0:	fc 91       	ld	r31, X
    44c2:	51 97       	sbiw	r26, 0x11	; 17
    44c4:	30 81       	ld	r19, Z
    44c6:	5e 96       	adiw	r26, 0x1e	; 30
    44c8:	2c 91       	ld	r18, X
    44ca:	5e 97       	sbiw	r26, 0x1e	; 30
    44cc:	23 2b       	or	r18, r19
    44ce:	20 83       	st	Z, r18
    44d0:	1e 96       	adiw	r26, 0x0e	; 14
    44d2:	2c 91       	ld	r18, X
    44d4:	0a c0       	rjmp	.+20     	; 0x44ea <_ZN4UTFT14LCD_Write_DATAEcc+0x40>
    44d6:	14 2f       	mov	r17, r20
    44d8:	46 2f       	mov	r20, r22
    44da:	ec 01       	movw	r28, r24
    44dc:	21 e0       	ldi	r18, 0x01	; 1
    44de:	61 e0       	ldi	r22, 0x01	; 1
    44e0:	3d d9       	rcall	.-3462   	; 0x375c <_ZN4UTFT12LCD_Writ_BusEcch>
    44e2:	2e 85       	ldd	r18, Y+14	; 0x0e
    44e4:	41 2f       	mov	r20, r17
    44e6:	61 e0       	ldi	r22, 0x01	; 1
    44e8:	ce 01       	movw	r24, r28
    44ea:	df 91       	pop	r29
    44ec:	cf 91       	pop	r28
    44ee:	1f 91       	pop	r17
    44f0:	35 c9       	rjmp	.-3478   	; 0x375c <_ZN4UTFT12LCD_Writ_BusEcch>

000044f2 <_ZN4UTFT14LCD_Write_DATAEc>:
    44f2:	46 2f       	mov	r20, r22
    44f4:	dc 01       	movw	r26, r24
    44f6:	1e 96       	adiw	r26, 0x0e	; 14
    44f8:	2c 91       	ld	r18, X
    44fa:	1e 97       	sbiw	r26, 0x0e	; 14
    44fc:	21 30       	cpi	r18, 0x01	; 1
    44fe:	71 f0       	breq	.+28     	; 0x451c <_ZN4UTFT14LCD_Write_DATAEc+0x2a>
    4500:	50 96       	adiw	r26, 0x10	; 16
    4502:	ed 91       	ld	r30, X+
    4504:	fc 91       	ld	r31, X
    4506:	51 97       	sbiw	r26, 0x11	; 17
    4508:	30 81       	ld	r19, Z
    450a:	5e 96       	adiw	r26, 0x1e	; 30
    450c:	2c 91       	ld	r18, X
    450e:	5e 97       	sbiw	r26, 0x1e	; 30
    4510:	23 2b       	or	r18, r19
    4512:	20 83       	st	Z, r18
    4514:	1e 96       	adiw	r26, 0x0e	; 14
    4516:	2c 91       	ld	r18, X
    4518:	60 e0       	ldi	r22, 0x00	; 0
    451a:	02 c0       	rjmp	.+4      	; 0x4520 <_ZN4UTFT14LCD_Write_DATAEc+0x2e>
    451c:	21 e0       	ldi	r18, 0x01	; 1
    451e:	61 e0       	ldi	r22, 0x01	; 1
    4520:	1d c9       	rjmp	.-3526   	; 0x375c <_ZN4UTFT12LCD_Writ_BusEcch>

00004522 <_ZN4UTFT18LCD_Write_COM_DATAEci>:
    4522:	0f 93       	push	r16
    4524:	1f 93       	push	r17
    4526:	cf 93       	push	r28
    4528:	df 93       	push	r29
    452a:	ec 01       	movw	r28, r24
    452c:	8a 01       	movw	r16, r20
    452e:	a5 df       	rcall	.-182    	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    4530:	40 2f       	mov	r20, r16
    4532:	61 2f       	mov	r22, r17
    4534:	ce 01       	movw	r24, r28
    4536:	df 91       	pop	r29
    4538:	cf 91       	pop	r28
    453a:	1f 91       	pop	r17
    453c:	0f 91       	pop	r16
    453e:	b5 cf       	rjmp	.-150    	; 0x44aa <_ZN4UTFT14LCD_Write_DATAEcc>

00004540 <_ZN4UTFT5setXYEjjjj>:
    4540:	af 92       	push	r10
    4542:	bf 92       	push	r11
    4544:	cf 92       	push	r12
    4546:	df 92       	push	r13
    4548:	ef 92       	push	r14
    454a:	ff 92       	push	r15
    454c:	0f 93       	push	r16
    454e:	1f 93       	push	r17
    4550:	cf 93       	push	r28
    4552:	df 93       	push	r29
    4554:	ec 01       	movw	r28, r24
    4556:	6b 01       	movw	r12, r22
    4558:	b4 2e       	mov	r11, r20
    455a:	a5 2e       	mov	r10, r21
    455c:	79 01       	movw	r14, r18
    455e:	8c 81       	ldd	r24, Y+4	; 0x04
    4560:	81 30       	cpi	r24, 0x01	; 1
    4562:	69 f4       	brne	.+26     	; 0x457e <_ZN4UTFT5setXYEjjjj+0x3e>
    4564:	89 85       	ldd	r24, Y+9	; 0x09
    4566:	9a 85       	ldd	r25, Y+10	; 0x0a
    4568:	9c 01       	movw	r18, r24
    456a:	26 1b       	sub	r18, r22
    456c:	37 0b       	sbc	r19, r23
    456e:	8e 19       	sub	r24, r14
    4570:	9f 09       	sbc	r25, r15
    4572:	78 01       	movw	r14, r16
    4574:	89 01       	movw	r16, r18
    4576:	c4 2e       	mov	r12, r20
    4578:	d5 2e       	mov	r13, r21
    457a:	b8 2e       	mov	r11, r24
    457c:	a9 2e       	mov	r10, r25
    457e:	ed 85       	ldd	r30, Y+13	; 0x0d
    4580:	8e 2f       	mov	r24, r30
    4582:	90 e0       	ldi	r25, 0x00	; 0
    4584:	fc 01       	movw	r30, r24
    4586:	32 97       	sbiw	r30, 0x02	; 2
    4588:	ee 31       	cpi	r30, 0x1E	; 30
    458a:	f1 05       	cpc	r31, r1
    458c:	08 f0       	brcs	.+2      	; 0x4590 <_ZN4UTFT5setXYEjjjj+0x50>
    458e:	0e c1       	rjmp	.+540    	; 0x47ac <_ZN4UTFT5setXYEjjjj+0x26c>
    4590:	88 27       	eor	r24, r24
    4592:	ee 58       	subi	r30, 0x8E	; 142
    4594:	ff 4f       	sbci	r31, 0xFF	; 255
    4596:	8f 4f       	sbci	r24, 0xFF	; 255
    4598:	0c 94 30 47 	jmp	0x8e60	; 0x8e60 <__tablejump2__>
    459c:	4d 2d       	mov	r20, r13
    459e:	50 e0       	ldi	r21, 0x00	; 0
    45a0:	62 e0       	ldi	r22, 0x02	; 2
    45a2:	ce 01       	movw	r24, r28
    45a4:	be df       	rcall	.-132    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45a6:	a6 01       	movw	r20, r12
    45a8:	63 e0       	ldi	r22, 0x03	; 3
    45aa:	ce 01       	movw	r24, r28
    45ac:	ba df       	rcall	.-140    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45ae:	4f 2d       	mov	r20, r15
    45b0:	50 e0       	ldi	r21, 0x00	; 0
    45b2:	64 e0       	ldi	r22, 0x04	; 4
    45b4:	ce 01       	movw	r24, r28
    45b6:	b5 df       	rcall	.-150    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45b8:	a7 01       	movw	r20, r14
    45ba:	65 e0       	ldi	r22, 0x05	; 5
    45bc:	ce 01       	movw	r24, r28
    45be:	b1 df       	rcall	.-158    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45c0:	4a 2d       	mov	r20, r10
    45c2:	50 e0       	ldi	r21, 0x00	; 0
    45c4:	66 e0       	ldi	r22, 0x06	; 6
    45c6:	ce 01       	movw	r24, r28
    45c8:	ac df       	rcall	.-168    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45ca:	4b 2d       	mov	r20, r11
    45cc:	5a 2d       	mov	r21, r10
    45ce:	67 e0       	ldi	r22, 0x07	; 7
    45d0:	ce 01       	movw	r24, r28
    45d2:	a7 df       	rcall	.-178    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45d4:	41 2f       	mov	r20, r17
    45d6:	50 e0       	ldi	r21, 0x00	; 0
    45d8:	52 c0       	rjmp	.+164    	; 0x467e <_ZN4UTFT5setXYEjjjj+0x13e>
    45da:	5e 2d       	mov	r21, r14
    45dc:	44 27       	eor	r20, r20
    45de:	4c 0d       	add	r20, r12
    45e0:	5d 1d       	adc	r21, r13
    45e2:	64 e4       	ldi	r22, 0x44	; 68
    45e4:	ce 01       	movw	r24, r28
    45e6:	9d df       	rcall	.-198    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45e8:	4b 2d       	mov	r20, r11
    45ea:	5a 2d       	mov	r21, r10
    45ec:	65 e4       	ldi	r22, 0x45	; 69
    45ee:	ce 01       	movw	r24, r28
    45f0:	98 df       	rcall	.-208    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45f2:	a8 01       	movw	r20, r16
    45f4:	66 e4       	ldi	r22, 0x46	; 70
    45f6:	ce 01       	movw	r24, r28
    45f8:	94 df       	rcall	.-216    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45fa:	a6 01       	movw	r20, r12
    45fc:	6e e4       	ldi	r22, 0x4E	; 78
    45fe:	ce 01       	movw	r24, r28
    4600:	90 df       	rcall	.-224    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4602:	4b 2d       	mov	r20, r11
    4604:	5a 2d       	mov	r21, r10
    4606:	6f e4       	ldi	r22, 0x4F	; 79
    4608:	ce 01       	movw	r24, r28
    460a:	8b df       	rcall	.-234    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    460c:	62 e2       	ldi	r22, 0x22	; 34
    460e:	c2 c0       	rjmp	.+388    	; 0x4794 <_ZN4UTFT5setXYEjjjj+0x254>
    4610:	a6 01       	movw	r20, r12
    4612:	60 e2       	ldi	r22, 0x20	; 32
    4614:	ce 01       	movw	r24, r28
    4616:	85 df       	rcall	.-246    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4618:	4b 2d       	mov	r20, r11
    461a:	5a 2d       	mov	r21, r10
    461c:	61 e2       	ldi	r22, 0x21	; 33
    461e:	ce 01       	movw	r24, r28
    4620:	80 df       	rcall	.-256    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4622:	a6 01       	movw	r20, r12
    4624:	60 e5       	ldi	r22, 0x50	; 80
    4626:	ce 01       	movw	r24, r28
    4628:	7c df       	rcall	.-264    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    462a:	4b 2d       	mov	r20, r11
    462c:	5a 2d       	mov	r21, r10
    462e:	62 e5       	ldi	r22, 0x52	; 82
    4630:	ce 01       	movw	r24, r28
    4632:	77 df       	rcall	.-274    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4634:	a7 01       	movw	r20, r14
    4636:	61 e5       	ldi	r22, 0x51	; 81
    4638:	ce 01       	movw	r24, r28
    463a:	73 df       	rcall	.-282    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    463c:	a8 01       	movw	r20, r16
    463e:	63 e5       	ldi	r22, 0x53	; 83
    4640:	e3 cf       	rjmp	.-58     	; 0x4608 <_ZN4UTFT5setXYEjjjj+0xc8>
    4642:	40 e0       	ldi	r20, 0x00	; 0
    4644:	50 e0       	ldi	r21, 0x00	; 0
    4646:	62 e0       	ldi	r22, 0x02	; 2
    4648:	ce 01       	movw	r24, r28
    464a:	6b df       	rcall	.-298    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    464c:	a6 01       	movw	r20, r12
    464e:	63 e0       	ldi	r22, 0x03	; 3
    4650:	ce 01       	movw	r24, r28
    4652:	67 df       	rcall	.-306    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4654:	40 e0       	ldi	r20, 0x00	; 0
    4656:	50 e0       	ldi	r21, 0x00	; 0
    4658:	64 e0       	ldi	r22, 0x04	; 4
    465a:	ce 01       	movw	r24, r28
    465c:	62 df       	rcall	.-316    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    465e:	a7 01       	movw	r20, r14
    4660:	65 e0       	ldi	r22, 0x05	; 5
    4662:	ce 01       	movw	r24, r28
    4664:	5e df       	rcall	.-324    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4666:	40 e0       	ldi	r20, 0x00	; 0
    4668:	50 e0       	ldi	r21, 0x00	; 0
    466a:	66 e0       	ldi	r22, 0x06	; 6
    466c:	ce 01       	movw	r24, r28
    466e:	59 df       	rcall	.-334    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4670:	4b 2d       	mov	r20, r11
    4672:	5a 2d       	mov	r21, r10
    4674:	67 e0       	ldi	r22, 0x07	; 7
    4676:	ce 01       	movw	r24, r28
    4678:	54 df       	rcall	.-344    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    467a:	40 e0       	ldi	r20, 0x00	; 0
    467c:	50 e0       	ldi	r21, 0x00	; 0
    467e:	68 e0       	ldi	r22, 0x08	; 8
    4680:	ce 01       	movw	r24, r28
    4682:	4f df       	rcall	.-354    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4684:	a8 01       	movw	r20, r16
    4686:	69 e0       	ldi	r22, 0x09	; 9
    4688:	bf cf       	rjmp	.-130    	; 0x4608 <_ZN4UTFT5setXYEjjjj+0xc8>
    468a:	6a e2       	ldi	r22, 0x2A	; 42
    468c:	ce 01       	movw	r24, r28
    468e:	f5 de       	rcall	.-534    	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    4690:	6c 2d       	mov	r22, r12
    4692:	ce 01       	movw	r24, r28
    4694:	2e df       	rcall	.-420    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4696:	6e 2d       	mov	r22, r14
    4698:	ce 01       	movw	r24, r28
    469a:	2b df       	rcall	.-426    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    469c:	6b e2       	ldi	r22, 0x2B	; 43
    469e:	ce 01       	movw	r24, r28
    46a0:	ec de       	rcall	.-552    	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    46a2:	6b 2d       	mov	r22, r11
    46a4:	71 c0       	rjmp	.+226    	; 0x4788 <_ZN4UTFT5setXYEjjjj+0x248>
    46a6:	6a e2       	ldi	r22, 0x2A	; 42
    46a8:	ce 01       	movw	r24, r28
    46aa:	e7 de       	rcall	.-562    	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    46ac:	6a 2d       	mov	r22, r10
    46ae:	ce 01       	movw	r24, r28
    46b0:	20 df       	rcall	.-448    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    46b2:	6b 2d       	mov	r22, r11
    46b4:	ce 01       	movw	r24, r28
    46b6:	1d df       	rcall	.-454    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    46b8:	61 2f       	mov	r22, r17
    46ba:	ce 01       	movw	r24, r28
    46bc:	1a df       	rcall	.-460    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    46be:	60 2f       	mov	r22, r16
    46c0:	ce 01       	movw	r24, r28
    46c2:	17 df       	rcall	.-466    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    46c4:	6b e2       	ldi	r22, 0x2B	; 43
    46c6:	ce 01       	movw	r24, r28
    46c8:	d8 de       	rcall	.-592    	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    46ca:	6d 2d       	mov	r22, r13
    46cc:	ce 01       	movw	r24, r28
    46ce:	11 df       	rcall	.-478    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    46d0:	6c 2d       	mov	r22, r12
    46d2:	ce 01       	movw	r24, r28
    46d4:	0e df       	rcall	.-484    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    46d6:	6f 2d       	mov	r22, r15
    46d8:	ce 01       	movw	r24, r28
    46da:	0b df       	rcall	.-490    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    46dc:	6e 2d       	mov	r22, r14
    46de:	57 c0       	rjmp	.+174    	; 0x478e <_ZN4UTFT5setXYEjjjj+0x24e>
    46e0:	5e 2d       	mov	r21, r14
    46e2:	44 27       	eor	r20, r20
    46e4:	4c 29       	or	r20, r12
    46e6:	5d 29       	or	r21, r13
    46e8:	66 e4       	ldi	r22, 0x46	; 70
    46ea:	ce 01       	movw	r24, r28
    46ec:	1a df       	rcall	.-460    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    46ee:	a8 01       	movw	r20, r16
    46f0:	67 e4       	ldi	r22, 0x47	; 71
    46f2:	ce 01       	movw	r24, r28
    46f4:	16 df       	rcall	.-468    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    46f6:	4b 2d       	mov	r20, r11
    46f8:	5a 2d       	mov	r21, r10
    46fa:	68 e4       	ldi	r22, 0x48	; 72
    46fc:	0f c0       	rjmp	.+30     	; 0x471c <_ZN4UTFT5setXYEjjjj+0x1dc>
    46fe:	a7 01       	movw	r20, r14
    4700:	66 e3       	ldi	r22, 0x36	; 54
    4702:	ce 01       	movw	r24, r28
    4704:	0e df       	rcall	.-484    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4706:	a6 01       	movw	r20, r12
    4708:	67 e3       	ldi	r22, 0x37	; 55
    470a:	ce 01       	movw	r24, r28
    470c:	0a df       	rcall	.-492    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    470e:	a8 01       	movw	r20, r16
    4710:	68 e3       	ldi	r22, 0x38	; 56
    4712:	ce 01       	movw	r24, r28
    4714:	06 df       	rcall	.-500    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4716:	4b 2d       	mov	r20, r11
    4718:	5a 2d       	mov	r21, r10
    471a:	69 e3       	ldi	r22, 0x39	; 57
    471c:	ce 01       	movw	r24, r28
    471e:	01 df       	rcall	.-510    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4720:	a6 01       	movw	r20, r12
    4722:	60 e2       	ldi	r22, 0x20	; 32
    4724:	ce 01       	movw	r24, r28
    4726:	fd de       	rcall	.-518    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4728:	4b 2d       	mov	r20, r11
    472a:	5a 2d       	mov	r21, r10
    472c:	61 e2       	ldi	r22, 0x21	; 33
    472e:	6c cf       	rjmp	.-296    	; 0x4608 <_ZN4UTFT5setXYEjjjj+0xc8>
    4730:	4b 2d       	mov	r20, r11
    4732:	5a 2d       	mov	r21, r10
    4734:	62 e0       	ldi	r22, 0x02	; 2
    4736:	ce 01       	movw	r24, r28
    4738:	f4 de       	rcall	.-536    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    473a:	a6 01       	movw	r20, r12
    473c:	63 e0       	ldi	r22, 0x03	; 3
    473e:	ce 01       	movw	r24, r28
    4740:	f0 de       	rcall	.-544    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4742:	a8 01       	movw	r20, r16
    4744:	66 e0       	ldi	r22, 0x06	; 6
    4746:	ce 01       	movw	r24, r28
    4748:	ec de       	rcall	.-552    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    474a:	a7 01       	movw	r20, r14
    474c:	67 e0       	ldi	r22, 0x07	; 7
    474e:	ce 01       	movw	r24, r28
    4750:	e8 de       	rcall	.-560    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4752:	6f e0       	ldi	r22, 0x0F	; 15
    4754:	1f c0       	rjmp	.+62     	; 0x4794 <_ZN4UTFT5setXYEjjjj+0x254>
    4756:	6a e2       	ldi	r22, 0x2A	; 42
    4758:	ce 01       	movw	r24, r28
    475a:	8f de       	rcall	.-738    	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    475c:	6d 2d       	mov	r22, r13
    475e:	ce 01       	movw	r24, r28
    4760:	c8 de       	rcall	.-624    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4762:	6c 2d       	mov	r22, r12
    4764:	ce 01       	movw	r24, r28
    4766:	c5 de       	rcall	.-630    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4768:	6f 2d       	mov	r22, r15
    476a:	ce 01       	movw	r24, r28
    476c:	c2 de       	rcall	.-636    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    476e:	6e 2d       	mov	r22, r14
    4770:	ce 01       	movw	r24, r28
    4772:	bf de       	rcall	.-642    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4774:	6b e2       	ldi	r22, 0x2B	; 43
    4776:	ce 01       	movw	r24, r28
    4778:	80 de       	rcall	.-768    	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    477a:	6a 2d       	mov	r22, r10
    477c:	ce 01       	movw	r24, r28
    477e:	b9 de       	rcall	.-654    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4780:	6b 2d       	mov	r22, r11
    4782:	ce 01       	movw	r24, r28
    4784:	b6 de       	rcall	.-660    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4786:	61 2f       	mov	r22, r17
    4788:	ce 01       	movw	r24, r28
    478a:	b3 de       	rcall	.-666    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    478c:	60 2f       	mov	r22, r16
    478e:	ce 01       	movw	r24, r28
    4790:	b0 de       	rcall	.-672    	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4792:	6c e2       	ldi	r22, 0x2C	; 44
    4794:	ce 01       	movw	r24, r28
    4796:	df 91       	pop	r29
    4798:	cf 91       	pop	r28
    479a:	1f 91       	pop	r17
    479c:	0f 91       	pop	r16
    479e:	ff 90       	pop	r15
    47a0:	ef 90       	pop	r14
    47a2:	df 90       	pop	r13
    47a4:	cf 90       	pop	r12
    47a6:	bf 90       	pop	r11
    47a8:	af 90       	pop	r10
    47aa:	67 ce       	rjmp	.-818    	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    47ac:	df 91       	pop	r29
    47ae:	cf 91       	pop	r28
    47b0:	1f 91       	pop	r17
    47b2:	0f 91       	pop	r16
    47b4:	ff 90       	pop	r15
    47b6:	ef 90       	pop	r14
    47b8:	df 90       	pop	r13
    47ba:	cf 90       	pop	r12
    47bc:	bf 90       	pop	r11
    47be:	af 90       	pop	r10
    47c0:	08 95       	ret

000047c2 <_ZN4UTFT7InitLCDEh>:
    47c2:	0f 93       	push	r16
    47c4:	1f 93       	push	r17
    47c6:	cf 93       	push	r28
    47c8:	df 93       	push	r29
    47ca:	ec 01       	movw	r28, r24
    47cc:	6c 83       	std	Y+4, r22	; 0x04
    47ce:	61 e0       	ldi	r22, 0x01	; 1
    47d0:	8d a1       	ldd	r24, Y+37	; 0x25
    47d2:	0e 94 76 45 	call	0x8aec	; 0x8aec <pinMode>
    47d6:	61 e0       	ldi	r22, 0x01	; 1
    47d8:	8e a1       	ldd	r24, Y+38	; 0x26
    47da:	0e 94 76 45 	call	0x8aec	; 0x8aec <pinMode>
    47de:	61 e0       	ldi	r22, 0x01	; 1
    47e0:	8f a1       	ldd	r24, Y+39	; 0x27
    47e2:	0e 94 76 45 	call	0x8aec	; 0x8aec <pinMode>
    47e6:	88 a5       	ldd	r24, Y+40	; 0x28
    47e8:	8f 3f       	cpi	r24, 0xFF	; 255
    47ea:	19 f0       	breq	.+6      	; 0x47f2 <_ZN4UTFT7InitLCDEh+0x30>
    47ec:	61 e0       	ldi	r22, 0x01	; 1
    47ee:	0e 94 76 45 	call	0x8aec	; 0x8aec <pinMode>
    47f2:	8e 85       	ldd	r24, Y+14	; 0x0e
    47f4:	81 31       	cpi	r24, 0x11	; 17
    47f6:	29 f0       	breq	.+10     	; 0x4802 <_ZN4UTFT7InitLCDEh+0x40>
    47f8:	81 30       	cpi	r24, 0x01	; 1
    47fa:	39 f4       	brne	.+14     	; 0x480a <_ZN4UTFT7InitLCDEh+0x48>
    47fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    47fe:	85 30       	cpi	r24, 0x05	; 5
    4800:	21 f4       	brne	.+8      	; 0x480a <_ZN4UTFT7InitLCDEh+0x48>
    4802:	61 e0       	ldi	r22, 0x01	; 1
    4804:	89 a5       	ldd	r24, Y+41	; 0x29
    4806:	0e 94 76 45 	call	0x8aec	; 0x8aec <pinMode>
    480a:	6e 85       	ldd	r22, Y+14	; 0x0e
    480c:	61 30       	cpi	r22, 0x01	; 1
    480e:	11 f0       	breq	.+4      	; 0x4814 <_ZN4UTFT7InitLCDEh+0x52>
    4810:	ce 01       	movw	r24, r28
    4812:	3b d9       	rcall	.-3466   	; 0x3a8a <_ZN4UTFT24_set_direction_registersEh>
    4814:	ee 89       	ldd	r30, Y+22	; 0x16
    4816:	ff 89       	ldd	r31, Y+23	; 0x17
    4818:	90 81       	ld	r25, Z
    481a:	89 a1       	ldd	r24, Y+33	; 0x21
    481c:	89 2b       	or	r24, r25
    481e:	80 83       	st	Z, r24
    4820:	65 e0       	ldi	r22, 0x05	; 5
    4822:	70 e0       	ldi	r23, 0x00	; 0
    4824:	80 e0       	ldi	r24, 0x00	; 0
    4826:	90 e0       	ldi	r25, 0x00	; 0
    4828:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    482c:	ee 89       	ldd	r30, Y+22	; 0x16
    482e:	ff 89       	ldd	r31, Y+23	; 0x17
    4830:	90 81       	ld	r25, Z
    4832:	89 a1       	ldd	r24, Y+33	; 0x21
    4834:	80 95       	com	r24
    4836:	89 23       	and	r24, r25
    4838:	80 83       	st	Z, r24
    483a:	6f e0       	ldi	r22, 0x0F	; 15
    483c:	70 e0       	ldi	r23, 0x00	; 0
    483e:	80 e0       	ldi	r24, 0x00	; 0
    4840:	90 e0       	ldi	r25, 0x00	; 0
    4842:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4846:	ee 89       	ldd	r30, Y+22	; 0x16
    4848:	ff 89       	ldd	r31, Y+23	; 0x17
    484a:	90 81       	ld	r25, Z
    484c:	89 a1       	ldd	r24, Y+33	; 0x21
    484e:	89 2b       	or	r24, r25
    4850:	80 83       	st	Z, r24
    4852:	6f e0       	ldi	r22, 0x0F	; 15
    4854:	70 e0       	ldi	r23, 0x00	; 0
    4856:	80 e0       	ldi	r24, 0x00	; 0
    4858:	90 e0       	ldi	r25, 0x00	; 0
    485a:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    485e:	ec 89       	ldd	r30, Y+20	; 0x14
    4860:	fd 89       	ldd	r31, Y+21	; 0x15
    4862:	90 81       	ld	r25, Z
    4864:	88 a1       	ldd	r24, Y+32	; 0x20
    4866:	80 95       	com	r24
    4868:	89 23       	and	r24, r25
    486a:	80 83       	st	Z, r24
    486c:	ed 85       	ldd	r30, Y+13	; 0x0d
    486e:	8e 2f       	mov	r24, r30
    4870:	90 e0       	ldi	r25, 0x00	; 0
    4872:	fc 01       	movw	r30, r24
    4874:	32 97       	sbiw	r30, 0x02	; 2
    4876:	ee 31       	cpi	r30, 0x1E	; 30
    4878:	f1 05       	cpc	r31, r1
    487a:	10 f0       	brcs	.+4      	; 0x4880 <_ZN4UTFT7InitLCDEh+0xbe>
    487c:	0c 94 b4 36 	jmp	0x6d68	; 0x6d68 <_ZN4UTFT7InitLCDEh+0x25a6>
    4880:	88 27       	eor	r24, r24
    4882:	e0 57       	subi	r30, 0x70	; 112
    4884:	ff 4f       	sbci	r31, 0xFF	; 255
    4886:	8f 4f       	sbci	r24, 0xFF	; 255
    4888:	0c 94 30 47 	jmp	0x8e60	; 0x8e60 <__tablejump2__>
    488c:	41 e0       	ldi	r20, 0x01	; 1
    488e:	50 e0       	ldi	r21, 0x00	; 0
    4890:	60 e0       	ldi	r22, 0x00	; 0
    4892:	ce 01       	movw	r24, r28
    4894:	46 de       	rcall	.-884    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4896:	44 ea       	ldi	r20, 0xA4	; 164
    4898:	58 ea       	ldi	r21, 0xA8	; 168
    489a:	63 e0       	ldi	r22, 0x03	; 3
    489c:	ce 01       	movw	r24, r28
    489e:	41 de       	rcall	.-894    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48a0:	40 e0       	ldi	r20, 0x00	; 0
    48a2:	50 e0       	ldi	r21, 0x00	; 0
    48a4:	6c e0       	ldi	r22, 0x0C	; 12
    48a6:	ce 01       	movw	r24, r28
    48a8:	3c de       	rcall	.-904    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48aa:	4c e0       	ldi	r20, 0x0C	; 12
    48ac:	58 e0       	ldi	r21, 0x08	; 8
    48ae:	6d e0       	ldi	r22, 0x0D	; 13
    48b0:	ce 01       	movw	r24, r28
    48b2:	37 de       	rcall	.-914    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48b4:	40 e0       	ldi	r20, 0x00	; 0
    48b6:	5b e2       	ldi	r21, 0x2B	; 43
    48b8:	6e e0       	ldi	r22, 0x0E	; 14
    48ba:	ce 01       	movw	r24, r28
    48bc:	32 de       	rcall	.-924    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48be:	47 eb       	ldi	r20, 0xB7	; 183
    48c0:	50 e0       	ldi	r21, 0x00	; 0
    48c2:	6e e1       	ldi	r22, 0x1E	; 30
    48c4:	ce 01       	movw	r24, r28
    48c6:	2d de       	rcall	.-934    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48c8:	4f e3       	ldi	r20, 0x3F	; 63
    48ca:	5b e2       	ldi	r21, 0x2B	; 43
    48cc:	61 e0       	ldi	r22, 0x01	; 1
    48ce:	ce 01       	movw	r24, r28
    48d0:	28 de       	rcall	.-944    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48d2:	40 e0       	ldi	r20, 0x00	; 0
    48d4:	56 e0       	ldi	r21, 0x06	; 6
    48d6:	62 e0       	ldi	r22, 0x02	; 2
    48d8:	ce 01       	movw	r24, r28
    48da:	23 de       	rcall	.-954    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48dc:	40 e0       	ldi	r20, 0x00	; 0
    48de:	50 e0       	ldi	r21, 0x00	; 0
    48e0:	60 e1       	ldi	r22, 0x10	; 16
    48e2:	ce 01       	movw	r24, r28
    48e4:	1e de       	rcall	.-964    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48e6:	40 e7       	ldi	r20, 0x70	; 112
    48e8:	50 e6       	ldi	r21, 0x60	; 96
    48ea:	61 e1       	ldi	r22, 0x11	; 17
    48ec:	ce 01       	movw	r24, r28
    48ee:	19 de       	rcall	.-974    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48f0:	40 e0       	ldi	r20, 0x00	; 0
    48f2:	50 e0       	ldi	r21, 0x00	; 0
    48f4:	65 e0       	ldi	r22, 0x05	; 5
    48f6:	ce 01       	movw	r24, r28
    48f8:	14 de       	rcall	.-984    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48fa:	40 e0       	ldi	r20, 0x00	; 0
    48fc:	50 e0       	ldi	r21, 0x00	; 0
    48fe:	66 e0       	ldi	r22, 0x06	; 6
    4900:	ce 01       	movw	r24, r28
    4902:	0f de       	rcall	.-994    	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4904:	4c e1       	ldi	r20, 0x1C	; 28
    4906:	5f ee       	ldi	r21, 0xEF	; 239
    4908:	66 e1       	ldi	r22, 0x16	; 22
    490a:	ce 01       	movw	r24, r28
    490c:	0a de       	rcall	.-1004   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    490e:	43 e0       	ldi	r20, 0x03	; 3
    4910:	50 e0       	ldi	r21, 0x00	; 0
    4912:	67 e1       	ldi	r22, 0x17	; 23
    4914:	ce 01       	movw	r24, r28
    4916:	05 de       	rcall	.-1014   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4918:	43 e3       	ldi	r20, 0x33	; 51
    491a:	52 e0       	ldi	r21, 0x02	; 2
    491c:	67 e0       	ldi	r22, 0x07	; 7
    491e:	ce 01       	movw	r24, r28
    4920:	00 de       	rcall	.-1024   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4922:	40 e0       	ldi	r20, 0x00	; 0
    4924:	50 e0       	ldi	r21, 0x00	; 0
    4926:	6b e0       	ldi	r22, 0x0B	; 11
    4928:	ce 01       	movw	r24, r28
    492a:	fb dd       	rcall	.-1034   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    492c:	40 e0       	ldi	r20, 0x00	; 0
    492e:	50 e0       	ldi	r21, 0x00	; 0
    4930:	6f e0       	ldi	r22, 0x0F	; 15
    4932:	ce 01       	movw	r24, r28
    4934:	f6 dd       	rcall	.-1044   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4936:	40 e0       	ldi	r20, 0x00	; 0
    4938:	50 e0       	ldi	r21, 0x00	; 0
    493a:	61 e4       	ldi	r22, 0x41	; 65
    493c:	ce 01       	movw	r24, r28
    493e:	f1 dd       	rcall	.-1054   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4940:	40 e0       	ldi	r20, 0x00	; 0
    4942:	50 e0       	ldi	r21, 0x00	; 0
    4944:	62 e4       	ldi	r22, 0x42	; 66
    4946:	ce 01       	movw	r24, r28
    4948:	ec dd       	rcall	.-1064   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    494a:	40 e0       	ldi	r20, 0x00	; 0
    494c:	50 e0       	ldi	r21, 0x00	; 0
    494e:	68 e4       	ldi	r22, 0x48	; 72
    4950:	ce 01       	movw	r24, r28
    4952:	e7 dd       	rcall	.-1074   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4954:	4f e3       	ldi	r20, 0x3F	; 63
    4956:	51 e0       	ldi	r21, 0x01	; 1
    4958:	69 e4       	ldi	r22, 0x49	; 73
    495a:	ce 01       	movw	r24, r28
    495c:	e2 dd       	rcall	.-1084   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    495e:	40 e0       	ldi	r20, 0x00	; 0
    4960:	50 e0       	ldi	r21, 0x00	; 0
    4962:	6a e4       	ldi	r22, 0x4A	; 74
    4964:	ce 01       	movw	r24, r28
    4966:	dd dd       	rcall	.-1094   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4968:	40 e0       	ldi	r20, 0x00	; 0
    496a:	50 e0       	ldi	r21, 0x00	; 0
    496c:	6b e4       	ldi	r22, 0x4B	; 75
    496e:	ce 01       	movw	r24, r28
    4970:	d8 dd       	rcall	.-1104   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4972:	40 e0       	ldi	r20, 0x00	; 0
    4974:	5f ee       	ldi	r21, 0xEF	; 239
    4976:	64 e4       	ldi	r22, 0x44	; 68
    4978:	ce 01       	movw	r24, r28
    497a:	d3 dd       	rcall	.-1114   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    497c:	40 e0       	ldi	r20, 0x00	; 0
    497e:	50 e0       	ldi	r21, 0x00	; 0
    4980:	65 e4       	ldi	r22, 0x45	; 69
    4982:	ce 01       	movw	r24, r28
    4984:	ce dd       	rcall	.-1124   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4986:	4f e3       	ldi	r20, 0x3F	; 63
    4988:	51 e0       	ldi	r21, 0x01	; 1
    498a:	66 e4       	ldi	r22, 0x46	; 70
    498c:	ce 01       	movw	r24, r28
    498e:	c9 dd       	rcall	.-1134   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4990:	47 e0       	ldi	r20, 0x07	; 7
    4992:	57 e0       	ldi	r21, 0x07	; 7
    4994:	60 e3       	ldi	r22, 0x30	; 48
    4996:	ce 01       	movw	r24, r28
    4998:	c4 dd       	rcall	.-1144   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    499a:	44 e0       	ldi	r20, 0x04	; 4
    499c:	52 e0       	ldi	r21, 0x02	; 2
    499e:	61 e3       	ldi	r22, 0x31	; 49
    49a0:	ce 01       	movw	r24, r28
    49a2:	bf dd       	rcall	.-1154   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49a4:	44 e0       	ldi	r20, 0x04	; 4
    49a6:	52 e0       	ldi	r21, 0x02	; 2
    49a8:	62 e3       	ldi	r22, 0x32	; 50
    49aa:	ce 01       	movw	r24, r28
    49ac:	ba dd       	rcall	.-1164   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49ae:	42 e0       	ldi	r20, 0x02	; 2
    49b0:	55 e0       	ldi	r21, 0x05	; 5
    49b2:	63 e3       	ldi	r22, 0x33	; 51
    49b4:	ce 01       	movw	r24, r28
    49b6:	b5 dd       	rcall	.-1174   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49b8:	47 e0       	ldi	r20, 0x07	; 7
    49ba:	55 e0       	ldi	r21, 0x05	; 5
    49bc:	64 e3       	ldi	r22, 0x34	; 52
    49be:	ce 01       	movw	r24, r28
    49c0:	b0 dd       	rcall	.-1184   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49c2:	44 e0       	ldi	r20, 0x04	; 4
    49c4:	52 e0       	ldi	r21, 0x02	; 2
    49c6:	65 e3       	ldi	r22, 0x35	; 53
    49c8:	ce 01       	movw	r24, r28
    49ca:	ab dd       	rcall	.-1194   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49cc:	44 e0       	ldi	r20, 0x04	; 4
    49ce:	52 e0       	ldi	r21, 0x02	; 2
    49d0:	66 e3       	ldi	r22, 0x36	; 54
    49d2:	ce 01       	movw	r24, r28
    49d4:	a6 dd       	rcall	.-1204   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49d6:	42 e0       	ldi	r20, 0x02	; 2
    49d8:	55 e0       	ldi	r21, 0x05	; 5
    49da:	67 e3       	ldi	r22, 0x37	; 55
    49dc:	ce 01       	movw	r24, r28
    49de:	a1 dd       	rcall	.-1214   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49e0:	42 e0       	ldi	r20, 0x02	; 2
    49e2:	53 e0       	ldi	r21, 0x03	; 3
    49e4:	6a e3       	ldi	r22, 0x3A	; 58
    49e6:	ce 01       	movw	r24, r28
    49e8:	9c dd       	rcall	.-1224   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49ea:	42 e0       	ldi	r20, 0x02	; 2
    49ec:	53 e0       	ldi	r21, 0x03	; 3
    49ee:	6b e3       	ldi	r22, 0x3B	; 59
    49f0:	ce 01       	movw	r24, r28
    49f2:	97 dd       	rcall	.-1234   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49f4:	40 e0       	ldi	r20, 0x00	; 0
    49f6:	50 e0       	ldi	r21, 0x00	; 0
    49f8:	63 e2       	ldi	r22, 0x23	; 35
    49fa:	ce 01       	movw	r24, r28
    49fc:	92 dd       	rcall	.-1244   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49fe:	40 e0       	ldi	r20, 0x00	; 0
    4a00:	50 e0       	ldi	r21, 0x00	; 0
    4a02:	64 e2       	ldi	r22, 0x24	; 36
    4a04:	ce 01       	movw	r24, r28
    4a06:	8d dd       	rcall	.-1254   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a08:	40 e0       	ldi	r20, 0x00	; 0
    4a0a:	50 e8       	ldi	r21, 0x80	; 128
    4a0c:	65 e2       	ldi	r22, 0x25	; 37
    4a0e:	ce 01       	movw	r24, r28
    4a10:	88 dd       	rcall	.-1264   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a12:	40 e0       	ldi	r20, 0x00	; 0
    4a14:	50 e0       	ldi	r21, 0x00	; 0
    4a16:	6f e4       	ldi	r22, 0x4F	; 79
    4a18:	ce 01       	movw	r24, r28
    4a1a:	83 dd       	rcall	.-1274   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a1c:	40 e0       	ldi	r20, 0x00	; 0
    4a1e:	50 e0       	ldi	r21, 0x00	; 0
    4a20:	6e e4       	ldi	r22, 0x4E	; 78
    4a22:	0c 94 4c 30 	jmp	0x6098	; 0x6098 <_ZN4UTFT7InitLCDEh+0x18d6>
    4a26:	40 ef       	ldi	r20, 0xF0	; 240
    4a28:	58 e7       	ldi	r21, 0x78	; 120
    4a2a:	65 ee       	ldi	r22, 0xE5	; 229
    4a2c:	ce 01       	movw	r24, r28
    4a2e:	79 dd       	rcall	.-1294   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a30:	40 e0       	ldi	r20, 0x00	; 0
    4a32:	51 e0       	ldi	r21, 0x01	; 1
    4a34:	61 e0       	ldi	r22, 0x01	; 1
    4a36:	ce 01       	movw	r24, r28
    4a38:	74 dd       	rcall	.-1304   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a3a:	40 e0       	ldi	r20, 0x00	; 0
    4a3c:	52 e0       	ldi	r21, 0x02	; 2
    4a3e:	62 e0       	ldi	r22, 0x02	; 2
    4a40:	ce 01       	movw	r24, r28
    4a42:	6f dd       	rcall	.-1314   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a44:	40 e3       	ldi	r20, 0x30	; 48
    4a46:	50 e1       	ldi	r21, 0x10	; 16
    4a48:	63 e0       	ldi	r22, 0x03	; 3
    4a4a:	ce 01       	movw	r24, r28
    4a4c:	6a dd       	rcall	.-1324   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a4e:	40 e0       	ldi	r20, 0x00	; 0
    4a50:	50 e0       	ldi	r21, 0x00	; 0
    4a52:	64 e0       	ldi	r22, 0x04	; 4
    4a54:	ce 01       	movw	r24, r28
    4a56:	65 dd       	rcall	.-1334   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a58:	47 e0       	ldi	r20, 0x07	; 7
    4a5a:	52 e0       	ldi	r21, 0x02	; 2
    4a5c:	68 e0       	ldi	r22, 0x08	; 8
    4a5e:	ce 01       	movw	r24, r28
    4a60:	60 dd       	rcall	.-1344   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a62:	40 e0       	ldi	r20, 0x00	; 0
    4a64:	50 e0       	ldi	r21, 0x00	; 0
    4a66:	69 e0       	ldi	r22, 0x09	; 9
    4a68:	ce 01       	movw	r24, r28
    4a6a:	5b dd       	rcall	.-1354   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a6c:	40 e0       	ldi	r20, 0x00	; 0
    4a6e:	50 e0       	ldi	r21, 0x00	; 0
    4a70:	6a e0       	ldi	r22, 0x0A	; 10
    4a72:	ce 01       	movw	r24, r28
    4a74:	56 dd       	rcall	.-1364   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a76:	40 e0       	ldi	r20, 0x00	; 0
    4a78:	50 e0       	ldi	r21, 0x00	; 0
    4a7a:	6c e0       	ldi	r22, 0x0C	; 12
    4a7c:	ce 01       	movw	r24, r28
    4a7e:	51 dd       	rcall	.-1374   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a80:	40 e0       	ldi	r20, 0x00	; 0
    4a82:	50 e0       	ldi	r21, 0x00	; 0
    4a84:	6d e0       	ldi	r22, 0x0D	; 13
    4a86:	ce 01       	movw	r24, r28
    4a88:	4c dd       	rcall	.-1384   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a8a:	40 e0       	ldi	r20, 0x00	; 0
    4a8c:	50 e0       	ldi	r21, 0x00	; 0
    4a8e:	6f e0       	ldi	r22, 0x0F	; 15
    4a90:	ce 01       	movw	r24, r28
    4a92:	47 dd       	rcall	.-1394   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a94:	40 e0       	ldi	r20, 0x00	; 0
    4a96:	50 e0       	ldi	r21, 0x00	; 0
    4a98:	60 e1       	ldi	r22, 0x10	; 16
    4a9a:	ce 01       	movw	r24, r28
    4a9c:	42 dd       	rcall	.-1404   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a9e:	47 e0       	ldi	r20, 0x07	; 7
    4aa0:	50 e0       	ldi	r21, 0x00	; 0
    4aa2:	61 e1       	ldi	r22, 0x11	; 17
    4aa4:	ce 01       	movw	r24, r28
    4aa6:	3d dd       	rcall	.-1414   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4aa8:	40 e0       	ldi	r20, 0x00	; 0
    4aaa:	50 e0       	ldi	r21, 0x00	; 0
    4aac:	62 e1       	ldi	r22, 0x12	; 18
    4aae:	ce 01       	movw	r24, r28
    4ab0:	38 dd       	rcall	.-1424   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ab2:	40 e0       	ldi	r20, 0x00	; 0
    4ab4:	50 e0       	ldi	r21, 0x00	; 0
    4ab6:	63 e1       	ldi	r22, 0x13	; 19
    4ab8:	ce 01       	movw	r24, r28
    4aba:	33 dd       	rcall	.-1434   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4abc:	41 e0       	ldi	r20, 0x01	; 1
    4abe:	50 e0       	ldi	r21, 0x00	; 0
    4ac0:	67 e0       	ldi	r22, 0x07	; 7
    4ac2:	ce 01       	movw	r24, r28
    4ac4:	2e dd       	rcall	.-1444   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ac6:	68 ec       	ldi	r22, 0xC8	; 200
    4ac8:	70 e0       	ldi	r23, 0x00	; 0
    4aca:	80 e0       	ldi	r24, 0x00	; 0
    4acc:	90 e0       	ldi	r25, 0x00	; 0
    4ace:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4ad2:	40 e9       	ldi	r20, 0x90	; 144
    4ad4:	56 e1       	ldi	r21, 0x16	; 22
    4ad6:	60 e1       	ldi	r22, 0x10	; 16
    4ad8:	ce 01       	movw	r24, r28
    4ada:	23 dd       	rcall	.-1466   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4adc:	47 e2       	ldi	r20, 0x27	; 39
    4ade:	52 e0       	ldi	r21, 0x02	; 2
    4ae0:	61 e1       	ldi	r22, 0x11	; 17
    4ae2:	ce 01       	movw	r24, r28
    4ae4:	1e dd       	rcall	.-1476   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ae6:	62 e3       	ldi	r22, 0x32	; 50
    4ae8:	70 e0       	ldi	r23, 0x00	; 0
    4aea:	80 e0       	ldi	r24, 0x00	; 0
    4aec:	90 e0       	ldi	r25, 0x00	; 0
    4aee:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4af2:	4d e0       	ldi	r20, 0x0D	; 13
    4af4:	50 e0       	ldi	r21, 0x00	; 0
    4af6:	62 e1       	ldi	r22, 0x12	; 18
    4af8:	ce 01       	movw	r24, r28
    4afa:	13 dd       	rcall	.-1498   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4afc:	62 e3       	ldi	r22, 0x32	; 50
    4afe:	70 e0       	ldi	r23, 0x00	; 0
    4b00:	80 e0       	ldi	r24, 0x00	; 0
    4b02:	90 e0       	ldi	r25, 0x00	; 0
    4b04:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4b08:	40 e0       	ldi	r20, 0x00	; 0
    4b0a:	52 e1       	ldi	r21, 0x12	; 18
    4b0c:	63 e1       	ldi	r22, 0x13	; 19
    4b0e:	ce 01       	movw	r24, r28
    4b10:	08 dd       	rcall	.-1520   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b12:	4a e0       	ldi	r20, 0x0A	; 10
    4b14:	50 e0       	ldi	r21, 0x00	; 0
    4b16:	69 e2       	ldi	r22, 0x29	; 41
    4b18:	ce 01       	movw	r24, r28
    4b1a:	03 dd       	rcall	.-1530   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b1c:	4d e0       	ldi	r20, 0x0D	; 13
    4b1e:	50 e0       	ldi	r21, 0x00	; 0
    4b20:	7d c0       	rjmp	.+250    	; 0x4c1c <_ZN4UTFT7InitLCDEh+0x45a>
    4b22:	40 ef       	ldi	r20, 0xF0	; 240
    4b24:	58 e7       	ldi	r21, 0x78	; 120
    4b26:	65 ee       	ldi	r22, 0xE5	; 229
    4b28:	ce 01       	movw	r24, r28
    4b2a:	fb dc       	rcall	.-1546   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b2c:	40 e0       	ldi	r20, 0x00	; 0
    4b2e:	51 e0       	ldi	r21, 0x01	; 1
    4b30:	61 e0       	ldi	r22, 0x01	; 1
    4b32:	ce 01       	movw	r24, r28
    4b34:	f6 dc       	rcall	.-1556   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b36:	40 e0       	ldi	r20, 0x00	; 0
    4b38:	57 e0       	ldi	r21, 0x07	; 7
    4b3a:	62 e0       	ldi	r22, 0x02	; 2
    4b3c:	ce 01       	movw	r24, r28
    4b3e:	f1 dc       	rcall	.-1566   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b40:	40 e3       	ldi	r20, 0x30	; 48
    4b42:	50 e1       	ldi	r21, 0x10	; 16
    4b44:	63 e0       	ldi	r22, 0x03	; 3
    4b46:	ce 01       	movw	r24, r28
    4b48:	ec dc       	rcall	.-1576   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b4a:	40 e0       	ldi	r20, 0x00	; 0
    4b4c:	50 e0       	ldi	r21, 0x00	; 0
    4b4e:	64 e0       	ldi	r22, 0x04	; 4
    4b50:	ce 01       	movw	r24, r28
    4b52:	e7 dc       	rcall	.-1586   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b54:	47 e0       	ldi	r20, 0x07	; 7
    4b56:	52 e0       	ldi	r21, 0x02	; 2
    4b58:	68 e0       	ldi	r22, 0x08	; 8
    4b5a:	ce 01       	movw	r24, r28
    4b5c:	e2 dc       	rcall	.-1596   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b5e:	40 e0       	ldi	r20, 0x00	; 0
    4b60:	50 e0       	ldi	r21, 0x00	; 0
    4b62:	69 e0       	ldi	r22, 0x09	; 9
    4b64:	ce 01       	movw	r24, r28
    4b66:	dd dc       	rcall	.-1606   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b68:	40 e0       	ldi	r20, 0x00	; 0
    4b6a:	50 e0       	ldi	r21, 0x00	; 0
    4b6c:	6a e0       	ldi	r22, 0x0A	; 10
    4b6e:	ce 01       	movw	r24, r28
    4b70:	d8 dc       	rcall	.-1616   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b72:	40 e0       	ldi	r20, 0x00	; 0
    4b74:	50 e0       	ldi	r21, 0x00	; 0
    4b76:	6c e0       	ldi	r22, 0x0C	; 12
    4b78:	ce 01       	movw	r24, r28
    4b7a:	d3 dc       	rcall	.-1626   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b7c:	40 e0       	ldi	r20, 0x00	; 0
    4b7e:	50 e0       	ldi	r21, 0x00	; 0
    4b80:	6d e0       	ldi	r22, 0x0D	; 13
    4b82:	ce 01       	movw	r24, r28
    4b84:	ce dc       	rcall	.-1636   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b86:	40 e0       	ldi	r20, 0x00	; 0
    4b88:	50 e0       	ldi	r21, 0x00	; 0
    4b8a:	6f e0       	ldi	r22, 0x0F	; 15
    4b8c:	ce 01       	movw	r24, r28
    4b8e:	c9 dc       	rcall	.-1646   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b90:	40 e0       	ldi	r20, 0x00	; 0
    4b92:	50 e0       	ldi	r21, 0x00	; 0
    4b94:	60 e1       	ldi	r22, 0x10	; 16
    4b96:	ce 01       	movw	r24, r28
    4b98:	c4 dc       	rcall	.-1656   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b9a:	47 e0       	ldi	r20, 0x07	; 7
    4b9c:	50 e0       	ldi	r21, 0x00	; 0
    4b9e:	61 e1       	ldi	r22, 0x11	; 17
    4ba0:	ce 01       	movw	r24, r28
    4ba2:	bf dc       	rcall	.-1666   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ba4:	40 e0       	ldi	r20, 0x00	; 0
    4ba6:	50 e0       	ldi	r21, 0x00	; 0
    4ba8:	62 e1       	ldi	r22, 0x12	; 18
    4baa:	ce 01       	movw	r24, r28
    4bac:	ba dc       	rcall	.-1676   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bae:	40 e0       	ldi	r20, 0x00	; 0
    4bb0:	50 e0       	ldi	r21, 0x00	; 0
    4bb2:	63 e1       	ldi	r22, 0x13	; 19
    4bb4:	ce 01       	movw	r24, r28
    4bb6:	b5 dc       	rcall	.-1686   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bb8:	41 e0       	ldi	r20, 0x01	; 1
    4bba:	50 e0       	ldi	r21, 0x00	; 0
    4bbc:	67 e0       	ldi	r22, 0x07	; 7
    4bbe:	ce 01       	movw	r24, r28
    4bc0:	b0 dc       	rcall	.-1696   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bc2:	68 ec       	ldi	r22, 0xC8	; 200
    4bc4:	70 e0       	ldi	r23, 0x00	; 0
    4bc6:	80 e0       	ldi	r24, 0x00	; 0
    4bc8:	90 e0       	ldi	r25, 0x00	; 0
    4bca:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4bce:	40 e9       	ldi	r20, 0x90	; 144
    4bd0:	55 e1       	ldi	r21, 0x15	; 21
    4bd2:	60 e1       	ldi	r22, 0x10	; 16
    4bd4:	ce 01       	movw	r24, r28
    4bd6:	a5 dc       	rcall	.-1718   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bd8:	47 e2       	ldi	r20, 0x27	; 39
    4bda:	52 e0       	ldi	r21, 0x02	; 2
    4bdc:	61 e1       	ldi	r22, 0x11	; 17
    4bde:	ce 01       	movw	r24, r28
    4be0:	a0 dc       	rcall	.-1728   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4be2:	62 e3       	ldi	r22, 0x32	; 50
    4be4:	70 e0       	ldi	r23, 0x00	; 0
    4be6:	80 e0       	ldi	r24, 0x00	; 0
    4be8:	90 e0       	ldi	r25, 0x00	; 0
    4bea:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4bee:	4c e9       	ldi	r20, 0x9C	; 156
    4bf0:	50 e0       	ldi	r21, 0x00	; 0
    4bf2:	62 e1       	ldi	r22, 0x12	; 18
    4bf4:	ce 01       	movw	r24, r28
    4bf6:	95 dc       	rcall	.-1750   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bf8:	62 e3       	ldi	r22, 0x32	; 50
    4bfa:	70 e0       	ldi	r23, 0x00	; 0
    4bfc:	80 e0       	ldi	r24, 0x00	; 0
    4bfe:	90 e0       	ldi	r25, 0x00	; 0
    4c00:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4c04:	40 e0       	ldi	r20, 0x00	; 0
    4c06:	59 e1       	ldi	r21, 0x19	; 25
    4c08:	63 e1       	ldi	r22, 0x13	; 19
    4c0a:	ce 01       	movw	r24, r28
    4c0c:	8a dc       	rcall	.-1772   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c0e:	43 e2       	ldi	r20, 0x23	; 35
    4c10:	50 e0       	ldi	r21, 0x00	; 0
    4c12:	69 e2       	ldi	r22, 0x29	; 41
    4c14:	ce 01       	movw	r24, r28
    4c16:	85 dc       	rcall	.-1782   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c18:	4e e0       	ldi	r20, 0x0E	; 14
    4c1a:	50 e0       	ldi	r21, 0x00	; 0
    4c1c:	6b e2       	ldi	r22, 0x2B	; 43
    4c1e:	ce 01       	movw	r24, r28
    4c20:	80 dc       	rcall	.-1792   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c22:	62 e3       	ldi	r22, 0x32	; 50
    4c24:	70 e0       	ldi	r23, 0x00	; 0
    4c26:	80 e0       	ldi	r24, 0x00	; 0
    4c28:	90 e0       	ldi	r25, 0x00	; 0
    4c2a:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4c2e:	40 e0       	ldi	r20, 0x00	; 0
    4c30:	50 e0       	ldi	r21, 0x00	; 0
    4c32:	60 e2       	ldi	r22, 0x20	; 32
    4c34:	ce 01       	movw	r24, r28
    4c36:	75 dc       	rcall	.-1814   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c38:	40 e0       	ldi	r20, 0x00	; 0
    4c3a:	50 e0       	ldi	r21, 0x00	; 0
    4c3c:	61 e2       	ldi	r22, 0x21	; 33
    4c3e:	ce 01       	movw	r24, r28
    4c40:	70 dc       	rcall	.-1824   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c42:	40 e0       	ldi	r20, 0x00	; 0
    4c44:	50 e0       	ldi	r21, 0x00	; 0
    4c46:	60 e3       	ldi	r22, 0x30	; 48
    4c48:	ce 01       	movw	r24, r28
    4c4a:	6b dc       	rcall	.-1834   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c4c:	44 e0       	ldi	r20, 0x04	; 4
    4c4e:	54 e0       	ldi	r21, 0x04	; 4
    4c50:	61 e3       	ldi	r22, 0x31	; 49
    4c52:	ce 01       	movw	r24, r28
    4c54:	66 dc       	rcall	.-1844   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c56:	43 e0       	ldi	r20, 0x03	; 3
    4c58:	50 e0       	ldi	r21, 0x00	; 0
    4c5a:	62 e3       	ldi	r22, 0x32	; 50
    4c5c:	ce 01       	movw	r24, r28
    4c5e:	61 dc       	rcall	.-1854   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c60:	45 e0       	ldi	r20, 0x05	; 5
    4c62:	54 e0       	ldi	r21, 0x04	; 4
    4c64:	65 e3       	ldi	r22, 0x35	; 53
    4c66:	ce 01       	movw	r24, r28
    4c68:	5c dc       	rcall	.-1864   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c6a:	48 e0       	ldi	r20, 0x08	; 8
    4c6c:	58 e0       	ldi	r21, 0x08	; 8
    4c6e:	66 e3       	ldi	r22, 0x36	; 54
    4c70:	ce 01       	movw	r24, r28
    4c72:	57 dc       	rcall	.-1874   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c74:	47 e0       	ldi	r20, 0x07	; 7
    4c76:	54 e0       	ldi	r21, 0x04	; 4
    4c78:	67 e3       	ldi	r22, 0x37	; 55
    4c7a:	ce 01       	movw	r24, r28
    4c7c:	52 dc       	rcall	.-1884   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c7e:	43 e0       	ldi	r20, 0x03	; 3
    4c80:	53 e0       	ldi	r21, 0x03	; 3
    4c82:	68 e3       	ldi	r22, 0x38	; 56
    4c84:	ce 01       	movw	r24, r28
    4c86:	4d dc       	rcall	.-1894   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c88:	47 e0       	ldi	r20, 0x07	; 7
    4c8a:	57 e0       	ldi	r21, 0x07	; 7
    4c8c:	69 e3       	ldi	r22, 0x39	; 57
    4c8e:	ce 01       	movw	r24, r28
    4c90:	48 dc       	rcall	.-1904   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c92:	44 e0       	ldi	r20, 0x04	; 4
    4c94:	55 e0       	ldi	r21, 0x05	; 5
    4c96:	6c e3       	ldi	r22, 0x3C	; 60
    4c98:	ce 01       	movw	r24, r28
    4c9a:	43 dc       	rcall	.-1914   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c9c:	48 e0       	ldi	r20, 0x08	; 8
    4c9e:	58 e0       	ldi	r21, 0x08	; 8
    4ca0:	6d e3       	ldi	r22, 0x3D	; 61
    4ca2:	ce 01       	movw	r24, r28
    4ca4:	3e dc       	rcall	.-1924   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ca6:	40 e0       	ldi	r20, 0x00	; 0
    4ca8:	50 e0       	ldi	r21, 0x00	; 0
    4caa:	60 e5       	ldi	r22, 0x50	; 80
    4cac:	ce 01       	movw	r24, r28
    4cae:	39 dc       	rcall	.-1934   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cb0:	4f ee       	ldi	r20, 0xEF	; 239
    4cb2:	50 e0       	ldi	r21, 0x00	; 0
    4cb4:	61 e5       	ldi	r22, 0x51	; 81
    4cb6:	ce 01       	movw	r24, r28
    4cb8:	34 dc       	rcall	.-1944   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cba:	40 e0       	ldi	r20, 0x00	; 0
    4cbc:	50 e0       	ldi	r21, 0x00	; 0
    4cbe:	62 e5       	ldi	r22, 0x52	; 82
    4cc0:	ce 01       	movw	r24, r28
    4cc2:	2f dc       	rcall	.-1954   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cc4:	4f e3       	ldi	r20, 0x3F	; 63
    4cc6:	51 e0       	ldi	r21, 0x01	; 1
    4cc8:	63 e5       	ldi	r22, 0x53	; 83
    4cca:	ce 01       	movw	r24, r28
    4ccc:	2a dc       	rcall	.-1964   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cce:	40 e0       	ldi	r20, 0x00	; 0
    4cd0:	57 ea       	ldi	r21, 0xA7	; 167
    4cd2:	60 e6       	ldi	r22, 0x60	; 96
    4cd4:	ce 01       	movw	r24, r28
    4cd6:	25 dc       	rcall	.-1974   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cd8:	41 e0       	ldi	r20, 0x01	; 1
    4cda:	50 e0       	ldi	r21, 0x00	; 0
    4cdc:	61 e6       	ldi	r22, 0x61	; 97
    4cde:	ce 01       	movw	r24, r28
    4ce0:	20 dc       	rcall	.-1984   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ce2:	40 e0       	ldi	r20, 0x00	; 0
    4ce4:	50 e0       	ldi	r21, 0x00	; 0
    4ce6:	6a e6       	ldi	r22, 0x6A	; 106
    4ce8:	ce 01       	movw	r24, r28
    4cea:	1b dc       	rcall	.-1994   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cec:	40 e0       	ldi	r20, 0x00	; 0
    4cee:	50 e0       	ldi	r21, 0x00	; 0
    4cf0:	60 e8       	ldi	r22, 0x80	; 128
    4cf2:	ce 01       	movw	r24, r28
    4cf4:	16 dc       	rcall	.-2004   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cf6:	40 e0       	ldi	r20, 0x00	; 0
    4cf8:	50 e0       	ldi	r21, 0x00	; 0
    4cfa:	61 e8       	ldi	r22, 0x81	; 129
    4cfc:	ce 01       	movw	r24, r28
    4cfe:	11 dc       	rcall	.-2014   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d00:	40 e0       	ldi	r20, 0x00	; 0
    4d02:	50 e0       	ldi	r21, 0x00	; 0
    4d04:	62 e8       	ldi	r22, 0x82	; 130
    4d06:	ce 01       	movw	r24, r28
    4d08:	0c dc       	rcall	.-2024   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d0a:	40 e0       	ldi	r20, 0x00	; 0
    4d0c:	50 e0       	ldi	r21, 0x00	; 0
    4d0e:	63 e8       	ldi	r22, 0x83	; 131
    4d10:	ce 01       	movw	r24, r28
    4d12:	07 dc       	rcall	.-2034   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d14:	40 e0       	ldi	r20, 0x00	; 0
    4d16:	50 e0       	ldi	r21, 0x00	; 0
    4d18:	64 e8       	ldi	r22, 0x84	; 132
    4d1a:	ce 01       	movw	r24, r28
    4d1c:	02 dc       	rcall	.-2044   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d1e:	40 e0       	ldi	r20, 0x00	; 0
    4d20:	50 e0       	ldi	r21, 0x00	; 0
    4d22:	65 e8       	ldi	r22, 0x85	; 133
    4d24:	ce 01       	movw	r24, r28
    4d26:	fd db       	rcall	.-2054   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d28:	40 e1       	ldi	r20, 0x10	; 16
    4d2a:	50 e0       	ldi	r21, 0x00	; 0
    4d2c:	60 e9       	ldi	r22, 0x90	; 144
    4d2e:	ce 01       	movw	r24, r28
    4d30:	f8 db       	rcall	.-2064   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d32:	40 e0       	ldi	r20, 0x00	; 0
    4d34:	50 e0       	ldi	r21, 0x00	; 0
    4d36:	62 e9       	ldi	r22, 0x92	; 146
    4d38:	ce 01       	movw	r24, r28
    4d3a:	f3 db       	rcall	.-2074   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d3c:	43 e3       	ldi	r20, 0x33	; 51
    4d3e:	51 e0       	ldi	r21, 0x01	; 1
    4d40:	67 e0       	ldi	r22, 0x07	; 7
    4d42:	ce 01       	movw	r24, r28
    4d44:	ee db       	rcall	.-2084   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d46:	0c 94 b4 36 	jmp	0x6d68	; 0x6d68 <_ZN4UTFT7InitLCDEh+0x25a6>
    4d4a:	44 e8       	ldi	r20, 0x84	; 132
    4d4c:	50 e0       	ldi	r21, 0x00	; 0
    4d4e:	66 e2       	ldi	r22, 0x26	; 38
    4d50:	ce 01       	movw	r24, r28
    4d52:	e7 db       	rcall	.-2098   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d54:	68 e2       	ldi	r22, 0x28	; 40
    4d56:	70 e0       	ldi	r23, 0x00	; 0
    4d58:	80 e0       	ldi	r24, 0x00	; 0
    4d5a:	90 e0       	ldi	r25, 0x00	; 0
    4d5c:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4d60:	48 eb       	ldi	r20, 0xB8	; 184
    4d62:	50 e0       	ldi	r21, 0x00	; 0
    4d64:	66 e2       	ldi	r22, 0x26	; 38
    4d66:	ce 01       	movw	r24, r28
    4d68:	dc db       	rcall	.-2120   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d6a:	68 e2       	ldi	r22, 0x28	; 40
    4d6c:	70 e0       	ldi	r23, 0x00	; 0
    4d6e:	80 e0       	ldi	r24, 0x00	; 0
    4d70:	90 e0       	ldi	r25, 0x00	; 0
    4d72:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4d76:	4c eb       	ldi	r20, 0xBC	; 188
    4d78:	50 e0       	ldi	r21, 0x00	; 0
    4d7a:	66 e2       	ldi	r22, 0x26	; 38
    4d7c:	ce 01       	movw	r24, r28
    4d7e:	d1 db       	rcall	.-2142   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d80:	64 e1       	ldi	r22, 0x14	; 20
    4d82:	70 e0       	ldi	r23, 0x00	; 0
    4d84:	80 e0       	ldi	r24, 0x00	; 0
    4d86:	90 e0       	ldi	r25, 0x00	; 0
    4d88:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4d8c:	40 e0       	ldi	r20, 0x00	; 0
    4d8e:	50 e0       	ldi	r21, 0x00	; 0
    4d90:	60 e6       	ldi	r22, 0x60	; 96
    4d92:	ce 01       	movw	r24, r28
    4d94:	c6 db       	rcall	.-2164   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d96:	46 e0       	ldi	r20, 0x06	; 6
    4d98:	50 e0       	ldi	r21, 0x00	; 0
    4d9a:	61 e6       	ldi	r22, 0x61	; 97
    4d9c:	ce 01       	movw	r24, r28
    4d9e:	c1 db       	rcall	.-2174   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4da0:	40 e0       	ldi	r20, 0x00	; 0
    4da2:	50 e0       	ldi	r21, 0x00	; 0
    4da4:	62 e6       	ldi	r22, 0x62	; 98
    4da6:	ce 01       	movw	r24, r28
    4da8:	bc db       	rcall	.-2184   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4daa:	48 ec       	ldi	r20, 0xC8	; 200
    4dac:	50 e0       	ldi	r21, 0x00	; 0
    4dae:	63 e6       	ldi	r22, 0x63	; 99
    4db0:	ce 01       	movw	r24, r28
    4db2:	b7 db       	rcall	.-2194   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4db4:	64 e1       	ldi	r22, 0x14	; 20
    4db6:	70 e0       	ldi	r23, 0x00	; 0
    4db8:	80 e0       	ldi	r24, 0x00	; 0
    4dba:	90 e0       	ldi	r25, 0x00	; 0
    4dbc:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4dc0:	40 e7       	ldi	r20, 0x70	; 112
    4dc2:	50 e0       	ldi	r21, 0x00	; 0
    4dc4:	63 e7       	ldi	r22, 0x73	; 115
    4dc6:	ce 01       	movw	r24, r28
    4dc8:	ac db       	rcall	.-2216   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dca:	40 e0       	ldi	r20, 0x00	; 0
    4dcc:	50 e0       	ldi	r21, 0x00	; 0
    4dce:	60 e4       	ldi	r22, 0x40	; 64
    4dd0:	ce 01       	movw	r24, r28
    4dd2:	a7 db       	rcall	.-2226   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dd4:	40 e4       	ldi	r20, 0x40	; 64
    4dd6:	50 e0       	ldi	r21, 0x00	; 0
    4dd8:	61 e4       	ldi	r22, 0x41	; 65
    4dda:	ce 01       	movw	r24, r28
    4ddc:	a2 db       	rcall	.-2236   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dde:	45 e4       	ldi	r20, 0x45	; 69
    4de0:	50 e0       	ldi	r21, 0x00	; 0
    4de2:	62 e4       	ldi	r22, 0x42	; 66
    4de4:	ce 01       	movw	r24, r28
    4de6:	9d db       	rcall	.-2246   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4de8:	41 e0       	ldi	r20, 0x01	; 1
    4dea:	50 e0       	ldi	r21, 0x00	; 0
    4dec:	63 e4       	ldi	r22, 0x43	; 67
    4dee:	ce 01       	movw	r24, r28
    4df0:	98 db       	rcall	.-2256   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4df2:	40 e6       	ldi	r20, 0x60	; 96
    4df4:	50 e0       	ldi	r21, 0x00	; 0
    4df6:	64 e4       	ldi	r22, 0x44	; 68
    4df8:	ce 01       	movw	r24, r28
    4dfa:	93 db       	rcall	.-2266   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dfc:	45 e0       	ldi	r20, 0x05	; 5
    4dfe:	50 e0       	ldi	r21, 0x00	; 0
    4e00:	65 e4       	ldi	r22, 0x45	; 69
    4e02:	ce 01       	movw	r24, r28
    4e04:	8e db       	rcall	.-2276   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e06:	4c e0       	ldi	r20, 0x0C	; 12
    4e08:	50 e0       	ldi	r21, 0x00	; 0
    4e0a:	66 e4       	ldi	r22, 0x46	; 70
    4e0c:	ce 01       	movw	r24, r28
    4e0e:	89 db       	rcall	.-2286   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e10:	41 ed       	ldi	r20, 0xD1	; 209
    4e12:	50 e0       	ldi	r21, 0x00	; 0
    4e14:	67 e4       	ldi	r22, 0x47	; 71
    4e16:	ce 01       	movw	r24, r28
    4e18:	84 db       	rcall	.-2296   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e1a:	45 e0       	ldi	r20, 0x05	; 5
    4e1c:	50 e0       	ldi	r21, 0x00	; 0
    4e1e:	68 e4       	ldi	r22, 0x48	; 72
    4e20:	ce 01       	movw	r24, r28
    4e22:	7f db       	rcall	.-2306   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e24:	45 e7       	ldi	r20, 0x75	; 117
    4e26:	50 e0       	ldi	r21, 0x00	; 0
    4e28:	60 e5       	ldi	r22, 0x50	; 80
    4e2a:	ce 01       	movw	r24, r28
    4e2c:	7a db       	rcall	.-2316   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e2e:	41 e0       	ldi	r20, 0x01	; 1
    4e30:	50 e0       	ldi	r21, 0x00	; 0
    4e32:	61 e5       	ldi	r22, 0x51	; 81
    4e34:	ce 01       	movw	r24, r28
    4e36:	75 db       	rcall	.-2326   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e38:	47 e6       	ldi	r20, 0x67	; 103
    4e3a:	50 e0       	ldi	r21, 0x00	; 0
    4e3c:	62 e5       	ldi	r22, 0x52	; 82
    4e3e:	ce 01       	movw	r24, r28
    4e40:	70 db       	rcall	.-2336   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e42:	44 e1       	ldi	r20, 0x14	; 20
    4e44:	50 e0       	ldi	r21, 0x00	; 0
    4e46:	63 e5       	ldi	r22, 0x53	; 83
    4e48:	ce 01       	movw	r24, r28
    4e4a:	6b db       	rcall	.-2346   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e4c:	42 ef       	ldi	r20, 0xF2	; 242
    4e4e:	50 e0       	ldi	r21, 0x00	; 0
    4e50:	64 e5       	ldi	r22, 0x54	; 84
    4e52:	ce 01       	movw	r24, r28
    4e54:	66 db       	rcall	.-2356   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e56:	47 e0       	ldi	r20, 0x07	; 7
    4e58:	50 e0       	ldi	r21, 0x00	; 0
    4e5a:	65 e5       	ldi	r22, 0x55	; 85
    4e5c:	ce 01       	movw	r24, r28
    4e5e:	61 db       	rcall	.-2366   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e60:	43 e0       	ldi	r20, 0x03	; 3
    4e62:	50 e0       	ldi	r21, 0x00	; 0
    4e64:	66 e5       	ldi	r22, 0x56	; 86
    4e66:	ce 01       	movw	r24, r28
    4e68:	5c db       	rcall	.-2376   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e6a:	49 e4       	ldi	r20, 0x49	; 73
    4e6c:	50 e0       	ldi	r21, 0x00	; 0
    4e6e:	67 e5       	ldi	r22, 0x57	; 87
    4e70:	ce 01       	movw	r24, r28
    4e72:	57 db       	rcall	.-2386   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e74:	64 e1       	ldi	r22, 0x14	; 20
    4e76:	70 e0       	ldi	r23, 0x00	; 0
    4e78:	80 e0       	ldi	r24, 0x00	; 0
    4e7a:	90 e0       	ldi	r25, 0x00	; 0
    4e7c:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4e80:	43 e0       	ldi	r20, 0x03	; 3
    4e82:	50 e0       	ldi	r21, 0x00	; 0
    4e84:	6f e1       	ldi	r22, 0x1F	; 31
    4e86:	ce 01       	movw	r24, r28
    4e88:	4c db       	rcall	.-2408   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e8a:	40 e0       	ldi	r20, 0x00	; 0
    4e8c:	50 e0       	ldi	r21, 0x00	; 0
    4e8e:	60 e2       	ldi	r22, 0x20	; 32
    4e90:	ce 01       	movw	r24, r28
    4e92:	47 db       	rcall	.-2418   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e94:	44 e2       	ldi	r20, 0x24	; 36
    4e96:	50 e0       	ldi	r21, 0x00	; 0
    4e98:	64 e2       	ldi	r22, 0x24	; 36
    4e9a:	ce 01       	movw	r24, r28
    4e9c:	42 db       	rcall	.-2428   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e9e:	44 e3       	ldi	r20, 0x34	; 52
    4ea0:	50 e0       	ldi	r21, 0x00	; 0
    4ea2:	65 e2       	ldi	r22, 0x25	; 37
    4ea4:	ce 01       	movw	r24, r28
    4ea6:	3d db       	rcall	.-2438   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ea8:	4f e2       	ldi	r20, 0x2F	; 47
    4eaa:	50 e0       	ldi	r21, 0x00	; 0
    4eac:	63 e2       	ldi	r22, 0x23	; 35
    4eae:	ce 01       	movw	r24, r28
    4eb0:	38 db       	rcall	.-2448   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4eb2:	64 e1       	ldi	r22, 0x14	; 20
    4eb4:	70 e0       	ldi	r23, 0x00	; 0
    4eb6:	80 e0       	ldi	r24, 0x00	; 0
    4eb8:	90 e0       	ldi	r25, 0x00	; 0
    4eba:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4ebe:	44 e4       	ldi	r20, 0x44	; 68
    4ec0:	50 e0       	ldi	r21, 0x00	; 0
    4ec2:	68 e1       	ldi	r22, 0x18	; 24
    4ec4:	ce 01       	movw	r24, r28
    4ec6:	2d db       	rcall	.-2470   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ec8:	41 e0       	ldi	r20, 0x01	; 1
    4eca:	50 e0       	ldi	r21, 0x00	; 0
    4ecc:	61 e2       	ldi	r22, 0x21	; 33
    4ece:	ce 01       	movw	r24, r28
    4ed0:	28 db       	rcall	.-2480   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ed2:	40 e0       	ldi	r20, 0x00	; 0
    4ed4:	50 e0       	ldi	r21, 0x00	; 0
    4ed6:	61 e0       	ldi	r22, 0x01	; 1
    4ed8:	ce 01       	movw	r24, r28
    4eda:	23 db       	rcall	.-2490   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4edc:	43 e0       	ldi	r20, 0x03	; 3
    4ede:	50 e0       	ldi	r21, 0x00	; 0
    4ee0:	6c e1       	ldi	r22, 0x1C	; 28
    4ee2:	ce 01       	movw	r24, r28
    4ee4:	1e db       	rcall	.-2500   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ee6:	46 e0       	ldi	r20, 0x06	; 6
    4ee8:	50 e0       	ldi	r21, 0x00	; 0
    4eea:	69 e1       	ldi	r22, 0x19	; 25
    4eec:	ce 01       	movw	r24, r28
    4eee:	19 db       	rcall	.-2510   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ef0:	64 e1       	ldi	r22, 0x14	; 20
    4ef2:	70 e0       	ldi	r23, 0x00	; 0
    4ef4:	80 e0       	ldi	r24, 0x00	; 0
    4ef6:	90 e0       	ldi	r25, 0x00	; 0
    4ef8:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4efc:	44 e8       	ldi	r20, 0x84	; 132
    4efe:	50 e0       	ldi	r21, 0x00	; 0
    4f00:	66 e2       	ldi	r22, 0x26	; 38
    4f02:	ce 01       	movw	r24, r28
    4f04:	0e db       	rcall	.-2532   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f06:	68 e2       	ldi	r22, 0x28	; 40
    4f08:	70 e0       	ldi	r23, 0x00	; 0
    4f0a:	80 e0       	ldi	r24, 0x00	; 0
    4f0c:	90 e0       	ldi	r25, 0x00	; 0
    4f0e:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4f12:	48 eb       	ldi	r20, 0xB8	; 184
    4f14:	50 e0       	ldi	r21, 0x00	; 0
    4f16:	66 e2       	ldi	r22, 0x26	; 38
    4f18:	ce 01       	movw	r24, r28
    4f1a:	03 db       	rcall	.-2554   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f1c:	68 e2       	ldi	r22, 0x28	; 40
    4f1e:	70 e0       	ldi	r23, 0x00	; 0
    4f20:	80 e0       	ldi	r24, 0x00	; 0
    4f22:	90 e0       	ldi	r25, 0x00	; 0
    4f24:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4f28:	4c eb       	ldi	r20, 0xBC	; 188
    4f2a:	50 e0       	ldi	r21, 0x00	; 0
    4f2c:	66 e2       	ldi	r22, 0x26	; 38
    4f2e:	ce 01       	movw	r24, r28
    4f30:	f8 da       	rcall	.-2576   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f32:	64 e1       	ldi	r22, 0x14	; 20
    4f34:	70 e0       	ldi	r23, 0x00	; 0
    4f36:	80 e0       	ldi	r24, 0x00	; 0
    4f38:	90 e0       	ldi	r25, 0x00	; 0
    4f3a:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4f3e:	40 e0       	ldi	r20, 0x00	; 0
    4f40:	50 e0       	ldi	r21, 0x00	; 0
    4f42:	62 e0       	ldi	r22, 0x02	; 2
    4f44:	ce 01       	movw	r24, r28
    4f46:	ed da       	rcall	.-2598   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f48:	40 e0       	ldi	r20, 0x00	; 0
    4f4a:	50 e0       	ldi	r21, 0x00	; 0
    4f4c:	63 e0       	ldi	r22, 0x03	; 3
    4f4e:	ce 01       	movw	r24, r28
    4f50:	e8 da       	rcall	.-2608   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f52:	40 e0       	ldi	r20, 0x00	; 0
    4f54:	50 e0       	ldi	r21, 0x00	; 0
    4f56:	64 e0       	ldi	r22, 0x04	; 4
    4f58:	ce 01       	movw	r24, r28
    4f5a:	e3 da       	rcall	.-2618   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f5c:	4f ea       	ldi	r20, 0xAF	; 175
    4f5e:	50 e0       	ldi	r21, 0x00	; 0
    4f60:	65 e0       	ldi	r22, 0x05	; 5
    4f62:	ce 01       	movw	r24, r28
    4f64:	de da       	rcall	.-2628   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f66:	40 e0       	ldi	r20, 0x00	; 0
    4f68:	50 e0       	ldi	r21, 0x00	; 0
    4f6a:	66 e0       	ldi	r22, 0x06	; 6
    4f6c:	ce 01       	movw	r24, r28
    4f6e:	d9 da       	rcall	.-2638   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f70:	40 e0       	ldi	r20, 0x00	; 0
    4f72:	50 e0       	ldi	r21, 0x00	; 0
    4f74:	67 e0       	ldi	r22, 0x07	; 7
    4f76:	ce 01       	movw	r24, r28
    4f78:	d4 da       	rcall	.-2648   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f7a:	40 e0       	ldi	r20, 0x00	; 0
    4f7c:	50 e0       	ldi	r21, 0x00	; 0
    4f7e:	68 e0       	ldi	r22, 0x08	; 8
    4f80:	ce 01       	movw	r24, r28
    4f82:	cf da       	rcall	.-2658   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f84:	4b ed       	ldi	r20, 0xDB	; 219
    4f86:	50 e0       	ldi	r21, 0x00	; 0
    4f88:	69 e0       	ldi	r22, 0x09	; 9
    4f8a:	ce 01       	movw	r24, r28
    4f8c:	ca da       	rcall	.-2668   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f8e:	64 e1       	ldi	r22, 0x14	; 20
    4f90:	70 e0       	ldi	r23, 0x00	; 0
    4f92:	80 e0       	ldi	r24, 0x00	; 0
    4f94:	90 e0       	ldi	r25, 0x00	; 0
    4f96:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4f9a:	48 e0       	ldi	r20, 0x08	; 8
    4f9c:	50 e0       	ldi	r21, 0x00	; 0
    4f9e:	66 e1       	ldi	r22, 0x16	; 22
    4fa0:	ce 01       	movw	r24, r28
    4fa2:	bf da       	rcall	.-2690   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4fa4:	45 e0       	ldi	r20, 0x05	; 5
    4fa6:	50 e0       	ldi	r21, 0x00	; 0
    4fa8:	67 e1       	ldi	r22, 0x17	; 23
    4faa:	ce 01       	movw	r24, r28
    4fac:	ba da       	rcall	.-2700   	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4fae:	61 e2       	ldi	r22, 0x21	; 33
    4fb0:	ce 01       	movw	r24, r28
    4fb2:	63 da       	rcall	.-2874   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    4fb4:	62 e2       	ldi	r22, 0x22	; 34
    4fb6:	ce 01       	movw	r24, r28
    4fb8:	60 da       	rcall	.-2880   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    4fba:	0c 94 b4 36 	jmp	0x6d68	; 0x6d68 <_ZN4UTFT7InitLCDEh+0x25a6>
    4fbe:	61 e1       	ldi	r22, 0x11	; 17
    4fc0:	ce 01       	movw	r24, r28
    4fc2:	5b da       	rcall	.-2890   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    4fc4:	6c e0       	ldi	r22, 0x0C	; 12
    4fc6:	70 e0       	ldi	r23, 0x00	; 0
    4fc8:	80 e0       	ldi	r24, 0x00	; 0
    4fca:	90 e0       	ldi	r25, 0x00	; 0
    4fcc:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    4fd0:	61 eb       	ldi	r22, 0xB1	; 177
    4fd2:	ce 01       	movw	r24, r28
    4fd4:	52 da       	rcall	.-2908   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    4fd6:	61 e0       	ldi	r22, 0x01	; 1
    4fd8:	ce 01       	movw	r24, r28
    4fda:	8b da       	rcall	.-2794   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4fdc:	6c e2       	ldi	r22, 0x2C	; 44
    4fde:	ce 01       	movw	r24, r28
    4fe0:	88 da       	rcall	.-2800   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4fe2:	6d e2       	ldi	r22, 0x2D	; 45
    4fe4:	ce 01       	movw	r24, r28
    4fe6:	85 da       	rcall	.-2806   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4fe8:	62 eb       	ldi	r22, 0xB2	; 178
    4fea:	ce 01       	movw	r24, r28
    4fec:	46 da       	rcall	.-2932   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    4fee:	61 e0       	ldi	r22, 0x01	; 1
    4ff0:	ce 01       	movw	r24, r28
    4ff2:	7f da       	rcall	.-2818   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4ff4:	6c e2       	ldi	r22, 0x2C	; 44
    4ff6:	ce 01       	movw	r24, r28
    4ff8:	7c da       	rcall	.-2824   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    4ffa:	6d e2       	ldi	r22, 0x2D	; 45
    4ffc:	ce 01       	movw	r24, r28
    4ffe:	79 da       	rcall	.-2830   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5000:	63 eb       	ldi	r22, 0xB3	; 179
    5002:	ce 01       	movw	r24, r28
    5004:	3a da       	rcall	.-2956   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5006:	61 e0       	ldi	r22, 0x01	; 1
    5008:	ce 01       	movw	r24, r28
    500a:	73 da       	rcall	.-2842   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    500c:	6c e2       	ldi	r22, 0x2C	; 44
    500e:	ce 01       	movw	r24, r28
    5010:	70 da       	rcall	.-2848   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5012:	6d e2       	ldi	r22, 0x2D	; 45
    5014:	ce 01       	movw	r24, r28
    5016:	6d da       	rcall	.-2854   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5018:	61 e0       	ldi	r22, 0x01	; 1
    501a:	ce 01       	movw	r24, r28
    501c:	6a da       	rcall	.-2860   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    501e:	6c e2       	ldi	r22, 0x2C	; 44
    5020:	ce 01       	movw	r24, r28
    5022:	67 da       	rcall	.-2866   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5024:	6d e2       	ldi	r22, 0x2D	; 45
    5026:	ce 01       	movw	r24, r28
    5028:	64 da       	rcall	.-2872   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    502a:	64 eb       	ldi	r22, 0xB4	; 180
    502c:	ce 01       	movw	r24, r28
    502e:	25 da       	rcall	.-2998   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5030:	67 e0       	ldi	r22, 0x07	; 7
    5032:	ce 01       	movw	r24, r28
    5034:	5e da       	rcall	.-2884   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5036:	60 ec       	ldi	r22, 0xC0	; 192
    5038:	ce 01       	movw	r24, r28
    503a:	1f da       	rcall	.-3010   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    503c:	62 ea       	ldi	r22, 0xA2	; 162
    503e:	ce 01       	movw	r24, r28
    5040:	58 da       	rcall	.-2896   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5042:	62 e0       	ldi	r22, 0x02	; 2
    5044:	ce 01       	movw	r24, r28
    5046:	55 da       	rcall	.-2902   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5048:	64 e8       	ldi	r22, 0x84	; 132
    504a:	ce 01       	movw	r24, r28
    504c:	52 da       	rcall	.-2908   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    504e:	61 ec       	ldi	r22, 0xC1	; 193
    5050:	ce 01       	movw	r24, r28
    5052:	13 da       	rcall	.-3034   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5054:	65 ec       	ldi	r22, 0xC5	; 197
    5056:	ce 01       	movw	r24, r28
    5058:	4c da       	rcall	.-2920   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    505a:	62 ec       	ldi	r22, 0xC2	; 194
    505c:	ce 01       	movw	r24, r28
    505e:	0d da       	rcall	.-3046   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5060:	6a e0       	ldi	r22, 0x0A	; 10
    5062:	ce 01       	movw	r24, r28
    5064:	46 da       	rcall	.-2932   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5066:	60 e0       	ldi	r22, 0x00	; 0
    5068:	ce 01       	movw	r24, r28
    506a:	43 da       	rcall	.-2938   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    506c:	63 ec       	ldi	r22, 0xC3	; 195
    506e:	ce 01       	movw	r24, r28
    5070:	04 da       	rcall	.-3064   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5072:	6a e8       	ldi	r22, 0x8A	; 138
    5074:	ce 01       	movw	r24, r28
    5076:	3d da       	rcall	.-2950   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5078:	6a e2       	ldi	r22, 0x2A	; 42
    507a:	ce 01       	movw	r24, r28
    507c:	3a da       	rcall	.-2956   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    507e:	64 ec       	ldi	r22, 0xC4	; 196
    5080:	ce 01       	movw	r24, r28
    5082:	fb d9       	rcall	.-3082   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5084:	6a e8       	ldi	r22, 0x8A	; 138
    5086:	ce 01       	movw	r24, r28
    5088:	34 da       	rcall	.-2968   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    508a:	6e ee       	ldi	r22, 0xEE	; 238
    508c:	ce 01       	movw	r24, r28
    508e:	31 da       	rcall	.-2974   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5090:	65 ec       	ldi	r22, 0xC5	; 197
    5092:	ce 01       	movw	r24, r28
    5094:	f2 d9       	rcall	.-3100   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5096:	6e e0       	ldi	r22, 0x0E	; 14
    5098:	ce 01       	movw	r24, r28
    509a:	2b da       	rcall	.-2986   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    509c:	66 e3       	ldi	r22, 0x36	; 54
    509e:	ce 01       	movw	r24, r28
    50a0:	ec d9       	rcall	.-3112   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    50a2:	68 ec       	ldi	r22, 0xC8	; 200
    50a4:	73 c0       	rjmp	.+230    	; 0x518c <_ZN4UTFT7InitLCDEh+0x9ca>
    50a6:	61 e1       	ldi	r22, 0x11	; 17
    50a8:	ce 01       	movw	r24, r28
    50aa:	e7 d9       	rcall	.-3122   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    50ac:	6c e0       	ldi	r22, 0x0C	; 12
    50ae:	70 e0       	ldi	r23, 0x00	; 0
    50b0:	80 e0       	ldi	r24, 0x00	; 0
    50b2:	90 e0       	ldi	r25, 0x00	; 0
    50b4:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    50b8:	61 eb       	ldi	r22, 0xB1	; 177
    50ba:	ce 01       	movw	r24, r28
    50bc:	de d9       	rcall	.-3140   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    50be:	61 e0       	ldi	r22, 0x01	; 1
    50c0:	ce 01       	movw	r24, r28
    50c2:	17 da       	rcall	.-3026   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    50c4:	6c e2       	ldi	r22, 0x2C	; 44
    50c6:	ce 01       	movw	r24, r28
    50c8:	14 da       	rcall	.-3032   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    50ca:	6d e2       	ldi	r22, 0x2D	; 45
    50cc:	ce 01       	movw	r24, r28
    50ce:	11 da       	rcall	.-3038   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    50d0:	62 eb       	ldi	r22, 0xB2	; 178
    50d2:	ce 01       	movw	r24, r28
    50d4:	d2 d9       	rcall	.-3164   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    50d6:	61 e0       	ldi	r22, 0x01	; 1
    50d8:	ce 01       	movw	r24, r28
    50da:	0b da       	rcall	.-3050   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    50dc:	6c e2       	ldi	r22, 0x2C	; 44
    50de:	ce 01       	movw	r24, r28
    50e0:	08 da       	rcall	.-3056   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    50e2:	6d e2       	ldi	r22, 0x2D	; 45
    50e4:	ce 01       	movw	r24, r28
    50e6:	05 da       	rcall	.-3062   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    50e8:	63 eb       	ldi	r22, 0xB3	; 179
    50ea:	ce 01       	movw	r24, r28
    50ec:	c6 d9       	rcall	.-3188   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    50ee:	61 e0       	ldi	r22, 0x01	; 1
    50f0:	ce 01       	movw	r24, r28
    50f2:	ff d9       	rcall	.-3074   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    50f4:	6c e2       	ldi	r22, 0x2C	; 44
    50f6:	ce 01       	movw	r24, r28
    50f8:	fc d9       	rcall	.-3080   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    50fa:	6d e2       	ldi	r22, 0x2D	; 45
    50fc:	ce 01       	movw	r24, r28
    50fe:	f9 d9       	rcall	.-3086   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5100:	61 e0       	ldi	r22, 0x01	; 1
    5102:	ce 01       	movw	r24, r28
    5104:	f6 d9       	rcall	.-3092   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5106:	6c e2       	ldi	r22, 0x2C	; 44
    5108:	ce 01       	movw	r24, r28
    510a:	f3 d9       	rcall	.-3098   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    510c:	6d e2       	ldi	r22, 0x2D	; 45
    510e:	ce 01       	movw	r24, r28
    5110:	f0 d9       	rcall	.-3104   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5112:	64 eb       	ldi	r22, 0xB4	; 180
    5114:	ce 01       	movw	r24, r28
    5116:	b1 d9       	rcall	.-3230   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5118:	67 e0       	ldi	r22, 0x07	; 7
    511a:	ce 01       	movw	r24, r28
    511c:	ea d9       	rcall	.-3116   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    511e:	60 ec       	ldi	r22, 0xC0	; 192
    5120:	ce 01       	movw	r24, r28
    5122:	ab d9       	rcall	.-3242   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5124:	62 ea       	ldi	r22, 0xA2	; 162
    5126:	ce 01       	movw	r24, r28
    5128:	e4 d9       	rcall	.-3128   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    512a:	62 e0       	ldi	r22, 0x02	; 2
    512c:	ce 01       	movw	r24, r28
    512e:	e1 d9       	rcall	.-3134   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5130:	64 e8       	ldi	r22, 0x84	; 132
    5132:	ce 01       	movw	r24, r28
    5134:	de d9       	rcall	.-3140   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5136:	61 ec       	ldi	r22, 0xC1	; 193
    5138:	ce 01       	movw	r24, r28
    513a:	9f d9       	rcall	.-3266   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    513c:	65 ec       	ldi	r22, 0xC5	; 197
    513e:	ce 01       	movw	r24, r28
    5140:	d8 d9       	rcall	.-3152   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5142:	62 ec       	ldi	r22, 0xC2	; 194
    5144:	ce 01       	movw	r24, r28
    5146:	99 d9       	rcall	.-3278   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5148:	6a e0       	ldi	r22, 0x0A	; 10
    514a:	ce 01       	movw	r24, r28
    514c:	d2 d9       	rcall	.-3164   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    514e:	60 e0       	ldi	r22, 0x00	; 0
    5150:	ce 01       	movw	r24, r28
    5152:	cf d9       	rcall	.-3170   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5154:	63 ec       	ldi	r22, 0xC3	; 195
    5156:	ce 01       	movw	r24, r28
    5158:	90 d9       	rcall	.-3296   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    515a:	6a e8       	ldi	r22, 0x8A	; 138
    515c:	ce 01       	movw	r24, r28
    515e:	c9 d9       	rcall	.-3182   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5160:	6a e2       	ldi	r22, 0x2A	; 42
    5162:	ce 01       	movw	r24, r28
    5164:	c6 d9       	rcall	.-3188   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5166:	64 ec       	ldi	r22, 0xC4	; 196
    5168:	ce 01       	movw	r24, r28
    516a:	87 d9       	rcall	.-3314   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    516c:	6a e8       	ldi	r22, 0x8A	; 138
    516e:	ce 01       	movw	r24, r28
    5170:	c0 d9       	rcall	.-3200   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5172:	6e ee       	ldi	r22, 0xEE	; 238
    5174:	ce 01       	movw	r24, r28
    5176:	bd d9       	rcall	.-3206   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5178:	65 ec       	ldi	r22, 0xC5	; 197
    517a:	ce 01       	movw	r24, r28
    517c:	7e d9       	rcall	.-3332   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    517e:	6e e0       	ldi	r22, 0x0E	; 14
    5180:	ce 01       	movw	r24, r28
    5182:	b7 d9       	rcall	.-3218   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5184:	66 e3       	ldi	r22, 0x36	; 54
    5186:	ce 01       	movw	r24, r28
    5188:	78 d9       	rcall	.-3344   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    518a:	60 ec       	ldi	r22, 0xC0	; 192
    518c:	ce 01       	movw	r24, r28
    518e:	b1 d9       	rcall	.-3230   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5190:	60 ee       	ldi	r22, 0xE0	; 224
    5192:	ce 01       	movw	r24, r28
    5194:	72 d9       	rcall	.-3356   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5196:	6f e0       	ldi	r22, 0x0F	; 15
    5198:	ce 01       	movw	r24, r28
    519a:	ab d9       	rcall	.-3242   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    519c:	6a e1       	ldi	r22, 0x1A	; 26
    519e:	ce 01       	movw	r24, r28
    51a0:	a8 d9       	rcall	.-3248   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51a2:	6f e0       	ldi	r22, 0x0F	; 15
    51a4:	ce 01       	movw	r24, r28
    51a6:	a5 d9       	rcall	.-3254   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51a8:	68 e1       	ldi	r22, 0x18	; 24
    51aa:	ce 01       	movw	r24, r28
    51ac:	a2 d9       	rcall	.-3260   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51ae:	6f e2       	ldi	r22, 0x2F	; 47
    51b0:	ce 01       	movw	r24, r28
    51b2:	9f d9       	rcall	.-3266   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51b4:	68 e2       	ldi	r22, 0x28	; 40
    51b6:	ce 01       	movw	r24, r28
    51b8:	9c d9       	rcall	.-3272   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51ba:	60 e2       	ldi	r22, 0x20	; 32
    51bc:	ce 01       	movw	r24, r28
    51be:	99 d9       	rcall	.-3278   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51c0:	62 e2       	ldi	r22, 0x22	; 34
    51c2:	ce 01       	movw	r24, r28
    51c4:	96 d9       	rcall	.-3284   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51c6:	6f e1       	ldi	r22, 0x1F	; 31
    51c8:	ce 01       	movw	r24, r28
    51ca:	93 d9       	rcall	.-3290   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51cc:	6b e1       	ldi	r22, 0x1B	; 27
    51ce:	ce 01       	movw	r24, r28
    51d0:	90 d9       	rcall	.-3296   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51d2:	63 e2       	ldi	r22, 0x23	; 35
    51d4:	ce 01       	movw	r24, r28
    51d6:	8d d9       	rcall	.-3302   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51d8:	67 e3       	ldi	r22, 0x37	; 55
    51da:	ce 01       	movw	r24, r28
    51dc:	8a d9       	rcall	.-3308   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51de:	60 e0       	ldi	r22, 0x00	; 0
    51e0:	ce 01       	movw	r24, r28
    51e2:	87 d9       	rcall	.-3314   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51e4:	67 e0       	ldi	r22, 0x07	; 7
    51e6:	ce 01       	movw	r24, r28
    51e8:	84 d9       	rcall	.-3320   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51ea:	62 e0       	ldi	r22, 0x02	; 2
    51ec:	ce 01       	movw	r24, r28
    51ee:	81 d9       	rcall	.-3326   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51f0:	60 e1       	ldi	r22, 0x10	; 16
    51f2:	ce 01       	movw	r24, r28
    51f4:	7e d9       	rcall	.-3332   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    51f6:	61 ee       	ldi	r22, 0xE1	; 225
    51f8:	ce 01       	movw	r24, r28
    51fa:	3f d9       	rcall	.-3458   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    51fc:	6f e0       	ldi	r22, 0x0F	; 15
    51fe:	ce 01       	movw	r24, r28
    5200:	78 d9       	rcall	.-3344   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5202:	6b e1       	ldi	r22, 0x1B	; 27
    5204:	ce 01       	movw	r24, r28
    5206:	75 d9       	rcall	.-3350   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5208:	6f e0       	ldi	r22, 0x0F	; 15
    520a:	ce 01       	movw	r24, r28
    520c:	72 d9       	rcall	.-3356   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    520e:	67 e1       	ldi	r22, 0x17	; 23
    5210:	ce 01       	movw	r24, r28
    5212:	6f d9       	rcall	.-3362   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5214:	63 e3       	ldi	r22, 0x33	; 51
    5216:	ce 01       	movw	r24, r28
    5218:	6c d9       	rcall	.-3368   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    521a:	6c e2       	ldi	r22, 0x2C	; 44
    521c:	ce 01       	movw	r24, r28
    521e:	69 d9       	rcall	.-3374   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5220:	69 e2       	ldi	r22, 0x29	; 41
    5222:	ce 01       	movw	r24, r28
    5224:	66 d9       	rcall	.-3380   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5226:	6e e2       	ldi	r22, 0x2E	; 46
    5228:	ce 01       	movw	r24, r28
    522a:	63 d9       	rcall	.-3386   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    522c:	60 e3       	ldi	r22, 0x30	; 48
    522e:	ce 01       	movw	r24, r28
    5230:	60 d9       	rcall	.-3392   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5232:	60 e3       	ldi	r22, 0x30	; 48
    5234:	ce 01       	movw	r24, r28
    5236:	5d d9       	rcall	.-3398   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5238:	69 e3       	ldi	r22, 0x39	; 57
    523a:	ce 01       	movw	r24, r28
    523c:	5a d9       	rcall	.-3404   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    523e:	6f e3       	ldi	r22, 0x3F	; 63
    5240:	ce 01       	movw	r24, r28
    5242:	57 d9       	rcall	.-3410   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5244:	60 e0       	ldi	r22, 0x00	; 0
    5246:	ce 01       	movw	r24, r28
    5248:	54 d9       	rcall	.-3416   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    524a:	67 e0       	ldi	r22, 0x07	; 7
    524c:	ce 01       	movw	r24, r28
    524e:	51 d9       	rcall	.-3422   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5250:	63 e0       	ldi	r22, 0x03	; 3
    5252:	ce 01       	movw	r24, r28
    5254:	4e d9       	rcall	.-3428   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5256:	60 e1       	ldi	r22, 0x10	; 16
    5258:	ce 01       	movw	r24, r28
    525a:	4b d9       	rcall	.-3434   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    525c:	6a e2       	ldi	r22, 0x2A	; 42
    525e:	ce 01       	movw	r24, r28
    5260:	0c d9       	rcall	.-3560   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5262:	60 e0       	ldi	r22, 0x00	; 0
    5264:	ce 01       	movw	r24, r28
    5266:	45 d9       	rcall	.-3446   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5268:	60 e0       	ldi	r22, 0x00	; 0
    526a:	ce 01       	movw	r24, r28
    526c:	42 d9       	rcall	.-3452   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    526e:	60 e0       	ldi	r22, 0x00	; 0
    5270:	ce 01       	movw	r24, r28
    5272:	3f d9       	rcall	.-3458   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5274:	6f e7       	ldi	r22, 0x7F	; 127
    5276:	ce 01       	movw	r24, r28
    5278:	3c d9       	rcall	.-3464   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    527a:	6b e2       	ldi	r22, 0x2B	; 43
    527c:	ce 01       	movw	r24, r28
    527e:	fd d8       	rcall	.-3590   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5280:	60 e0       	ldi	r22, 0x00	; 0
    5282:	ce 01       	movw	r24, r28
    5284:	36 d9       	rcall	.-3476   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5286:	60 e0       	ldi	r22, 0x00	; 0
    5288:	ce 01       	movw	r24, r28
    528a:	33 d9       	rcall	.-3482   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    528c:	60 e0       	ldi	r22, 0x00	; 0
    528e:	ce 01       	movw	r24, r28
    5290:	30 d9       	rcall	.-3488   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5292:	6f e9       	ldi	r22, 0x9F	; 159
    5294:	ce 01       	movw	r24, r28
    5296:	2d d9       	rcall	.-3494   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5298:	60 ef       	ldi	r22, 0xF0	; 240
    529a:	ce 01       	movw	r24, r28
    529c:	ee d8       	rcall	.-3620   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    529e:	61 e0       	ldi	r22, 0x01	; 1
    52a0:	ce 01       	movw	r24, r28
    52a2:	27 d9       	rcall	.-3506   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    52a4:	66 ef       	ldi	r22, 0xF6	; 246
    52a6:	ce 01       	movw	r24, r28
    52a8:	e8 d8       	rcall	.-3632   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52aa:	60 e0       	ldi	r22, 0x00	; 0
    52ac:	0c 94 70 31 	jmp	0x62e0	; 0x62e0 <_ZN4UTFT7InitLCDEh+0x1b1e>
    52b0:	61 e0       	ldi	r22, 0x01	; 1
    52b2:	ce 01       	movw	r24, r28
    52b4:	e2 d8       	rcall	.-3644   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52b6:	65 e2       	ldi	r22, 0x25	; 37
    52b8:	ce 01       	movw	r24, r28
    52ba:	df d8       	rcall	.-3650   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52bc:	60 e4       	ldi	r22, 0x40	; 64
    52be:	ce 01       	movw	r24, r28
    52c0:	18 d9       	rcall	.-3536   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    52c2:	61 e1       	ldi	r22, 0x11	; 17
    52c4:	ce 01       	movw	r24, r28
    52c6:	d9 d8       	rcall	.-3662   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52c8:	6a e0       	ldi	r22, 0x0A	; 10
    52ca:	70 e0       	ldi	r23, 0x00	; 0
    52cc:	80 e0       	ldi	r24, 0x00	; 0
    52ce:	90 e0       	ldi	r25, 0x00	; 0
    52d0:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    52d4:	60 e2       	ldi	r22, 0x20	; 32
    52d6:	ce 01       	movw	r24, r28
    52d8:	d0 d8       	rcall	.-3680   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52da:	68 e3       	ldi	r22, 0x38	; 56
    52dc:	ce 01       	movw	r24, r28
    52de:	cd d8       	rcall	.-3686   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52e0:	69 e2       	ldi	r22, 0x29	; 41
    52e2:	ce 01       	movw	r24, r28
    52e4:	ca d8       	rcall	.-3692   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52e6:	63 e1       	ldi	r22, 0x13	; 19
    52e8:	ce 01       	movw	r24, r28
    52ea:	c7 d8       	rcall	.-3698   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52ec:	66 e3       	ldi	r22, 0x36	; 54
    52ee:	ce 01       	movw	r24, r28
    52f0:	c4 d8       	rcall	.-3704   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52f2:	60 e6       	ldi	r22, 0x60	; 96
    52f4:	ce 01       	movw	r24, r28
    52f6:	fd d8       	rcall	.-3590   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    52f8:	6a e3       	ldi	r22, 0x3A	; 58
    52fa:	ce 01       	movw	r24, r28
    52fc:	be d8       	rcall	.-3716   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    52fe:	65 e0       	ldi	r22, 0x05	; 5
    5300:	ce 01       	movw	r24, r28
    5302:	f7 d8       	rcall	.-3602   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5304:	6a e2       	ldi	r22, 0x2A	; 42
    5306:	ce 01       	movw	r24, r28
    5308:	b8 d8       	rcall	.-3728   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    530a:	60 e0       	ldi	r22, 0x00	; 0
    530c:	ce 01       	movw	r24, r28
    530e:	f1 d8       	rcall	.-3614   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5310:	6f e7       	ldi	r22, 0x7F	; 127
    5312:	ce 01       	movw	r24, r28
    5314:	ee d8       	rcall	.-3620   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5316:	64 eb       	ldi	r22, 0xB4	; 180
    5318:	ce 01       	movw	r24, r28
    531a:	af d8       	rcall	.-3746   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    531c:	63 e0       	ldi	r22, 0x03	; 3
    531e:	ce 01       	movw	r24, r28
    5320:	e8 d8       	rcall	.-3632   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5322:	68 e0       	ldi	r22, 0x08	; 8
    5324:	ce 01       	movw	r24, r28
    5326:	e5 d8       	rcall	.-3638   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5328:	6b e0       	ldi	r22, 0x0B	; 11
    532a:	ce 01       	movw	r24, r28
    532c:	e2 d8       	rcall	.-3644   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    532e:	6e e0       	ldi	r22, 0x0E	; 14
    5330:	ce 01       	movw	r24, r28
    5332:	df d8       	rcall	.-3650   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5334:	6a eb       	ldi	r22, 0xBA	; 186
    5336:	ce 01       	movw	r24, r28
    5338:	a0 d8       	rcall	.-3776   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    533a:	67 e0       	ldi	r22, 0x07	; 7
    533c:	ce 01       	movw	r24, r28
    533e:	d9 d8       	rcall	.-3662   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5340:	6d e0       	ldi	r22, 0x0D	; 13
    5342:	ce 01       	movw	r24, r28
    5344:	d6 d8       	rcall	.-3668   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5346:	6b e2       	ldi	r22, 0x2B	; 43
    5348:	ce 01       	movw	r24, r28
    534a:	97 d8       	rcall	.-3794   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    534c:	60 e0       	ldi	r22, 0x00	; 0
    534e:	ce 01       	movw	r24, r28
    5350:	d0 d8       	rcall	.-3680   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5352:	6f e7       	ldi	r22, 0x7F	; 127
    5354:	5e c2       	rjmp	.+1212   	; 0x5812 <_ZN4UTFT7InitLCDEh+0x1050>
    5356:	63 e8       	ldi	r22, 0x83	; 131
    5358:	ce 01       	movw	r24, r28
    535a:	8f d8       	rcall	.-3810   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    535c:	62 e0       	ldi	r22, 0x02	; 2
    535e:	ce 01       	movw	r24, r28
    5360:	c8 d8       	rcall	.-3696   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5362:	65 e8       	ldi	r22, 0x85	; 133
    5364:	ce 01       	movw	r24, r28
    5366:	89 d8       	rcall	.-3822   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5368:	63 e0       	ldi	r22, 0x03	; 3
    536a:	ce 01       	movw	r24, r28
    536c:	c2 d8       	rcall	.-3708   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    536e:	6b e8       	ldi	r22, 0x8B	; 139
    5370:	ce 01       	movw	r24, r28
    5372:	83 d8       	rcall	.-3834   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5374:	61 e0       	ldi	r22, 0x01	; 1
    5376:	ce 01       	movw	r24, r28
    5378:	bc d8       	rcall	.-3720   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    537a:	6c e8       	ldi	r22, 0x8C	; 140
    537c:	ce 01       	movw	r24, r28
    537e:	7d d8       	rcall	.-3846   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5380:	63 e9       	ldi	r22, 0x93	; 147
    5382:	ce 01       	movw	r24, r28
    5384:	b6 d8       	rcall	.-3732   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5386:	61 e9       	ldi	r22, 0x91	; 145
    5388:	ce 01       	movw	r24, r28
    538a:	77 d8       	rcall	.-3858   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    538c:	61 e0       	ldi	r22, 0x01	; 1
    538e:	ce 01       	movw	r24, r28
    5390:	b0 d8       	rcall	.-3744   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5392:	63 e8       	ldi	r22, 0x83	; 131
    5394:	ce 01       	movw	r24, r28
    5396:	71 d8       	rcall	.-3870   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5398:	60 e0       	ldi	r22, 0x00	; 0
    539a:	ce 01       	movw	r24, r28
    539c:	aa d8       	rcall	.-3756   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    539e:	6e e3       	ldi	r22, 0x3E	; 62
    53a0:	ce 01       	movw	r24, r28
    53a2:	6b d8       	rcall	.-3882   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    53a4:	60 eb       	ldi	r22, 0xB0	; 176
    53a6:	ce 01       	movw	r24, r28
    53a8:	a4 d8       	rcall	.-3768   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    53aa:	6f e3       	ldi	r22, 0x3F	; 63
    53ac:	ce 01       	movw	r24, r28
    53ae:	65 d8       	rcall	.-3894   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    53b0:	63 e0       	ldi	r22, 0x03	; 3
    53b2:	ce 01       	movw	r24, r28
    53b4:	9e d8       	rcall	.-3780   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    53b6:	60 e4       	ldi	r22, 0x40	; 64
    53b8:	ce 01       	movw	r24, r28
    53ba:	5f d8       	rcall	.-3906   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    53bc:	60 e1       	ldi	r22, 0x10	; 16
    53be:	ce 01       	movw	r24, r28
    53c0:	98 d8       	rcall	.-3792   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    53c2:	61 e4       	ldi	r22, 0x41	; 65
    53c4:	ce 01       	movw	r24, r28
    53c6:	59 d8       	rcall	.-3918   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    53c8:	66 e5       	ldi	r22, 0x56	; 86
    53ca:	ce 01       	movw	r24, r28
    53cc:	92 d8       	rcall	.-3804   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    53ce:	62 e4       	ldi	r22, 0x42	; 66
    53d0:	ce 01       	movw	r24, r28
    53d2:	53 d8       	rcall	.-3930   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    53d4:	63 e1       	ldi	r22, 0x13	; 19
    53d6:	ce 01       	movw	r24, r28
    53d8:	8c d8       	rcall	.-3816   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    53da:	63 e4       	ldi	r22, 0x43	; 67
    53dc:	ce 01       	movw	r24, r28
    53de:	4d d8       	rcall	.-3942   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    53e0:	66 e4       	ldi	r22, 0x46	; 70
    53e2:	ce 01       	movw	r24, r28
    53e4:	86 d8       	rcall	.-3828   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    53e6:	64 e4       	ldi	r22, 0x44	; 68
    53e8:	ce 01       	movw	r24, r28
    53ea:	47 d8       	rcall	.-3954   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    53ec:	63 e2       	ldi	r22, 0x23	; 35
    53ee:	ce 01       	movw	r24, r28
    53f0:	80 d8       	rcall	.-3840   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    53f2:	65 e4       	ldi	r22, 0x45	; 69
    53f4:	ce 01       	movw	r24, r28
    53f6:	41 d8       	rcall	.-3966   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    53f8:	66 e7       	ldi	r22, 0x76	; 118
    53fa:	ce 01       	movw	r24, r28
    53fc:	7a d8       	rcall	.-3852   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    53fe:	66 e4       	ldi	r22, 0x46	; 70
    5400:	ce 01       	movw	r24, r28
    5402:	3b d8       	rcall	.-3978   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5404:	60 e0       	ldi	r22, 0x00	; 0
    5406:	ce 01       	movw	r24, r28
    5408:	74 d8       	rcall	.-3864   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    540a:	67 e4       	ldi	r22, 0x47	; 71
    540c:	ce 01       	movw	r24, r28
    540e:	35 d8       	rcall	.-3990   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5410:	6e e5       	ldi	r22, 0x5E	; 94
    5412:	ce 01       	movw	r24, r28
    5414:	6e d8       	rcall	.-3876   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5416:	68 e4       	ldi	r22, 0x48	; 72
    5418:	ce 01       	movw	r24, r28
    541a:	2f d8       	rcall	.-4002   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    541c:	6f e4       	ldi	r22, 0x4F	; 79
    541e:	ce 01       	movw	r24, r28
    5420:	68 d8       	rcall	.-3888   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5422:	69 e4       	ldi	r22, 0x49	; 73
    5424:	ce 01       	movw	r24, r28
    5426:	29 d8       	rcall	.-4014   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5428:	60 e4       	ldi	r22, 0x40	; 64
    542a:	ce 01       	movw	r24, r28
    542c:	62 d8       	rcall	.-3900   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    542e:	67 e1       	ldi	r22, 0x17	; 23
    5430:	ce 01       	movw	r24, r28
    5432:	23 d8       	rcall	.-4026   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5434:	61 e9       	ldi	r22, 0x91	; 145
    5436:	ce 01       	movw	r24, r28
    5438:	5c d8       	rcall	.-3912   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    543a:	6b e2       	ldi	r22, 0x2B	; 43
    543c:	ce 01       	movw	r24, r28
    543e:	1d d8       	rcall	.-4038   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5440:	69 ef       	ldi	r22, 0xF9	; 249
    5442:	ce 01       	movw	r24, r28
    5444:	56 d8       	rcall	.-3924   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5446:	6a e0       	ldi	r22, 0x0A	; 10
    5448:	70 e0       	ldi	r23, 0x00	; 0
    544a:	80 e0       	ldi	r24, 0x00	; 0
    544c:	90 e0       	ldi	r25, 0x00	; 0
    544e:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5452:	6b e1       	ldi	r22, 0x1B	; 27
    5454:	ce 01       	movw	r24, r28
    5456:	11 d8       	rcall	.-4062   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5458:	64 e1       	ldi	r22, 0x14	; 20
    545a:	ce 01       	movw	r24, r28
    545c:	4a d8       	rcall	.-3948   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    545e:	6a e1       	ldi	r22, 0x1A	; 26
    5460:	ce 01       	movw	r24, r28
    5462:	0b d8       	rcall	.-4074   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5464:	61 e1       	ldi	r22, 0x11	; 17
    5466:	ce 01       	movw	r24, r28
    5468:	44 d8       	rcall	.-3960   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    546a:	6c e1       	ldi	r22, 0x1C	; 28
    546c:	ce 01       	movw	r24, r28
    546e:	05 d8       	rcall	.-4086   	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5470:	66 e0       	ldi	r22, 0x06	; 6
    5472:	ce 01       	movw	r24, r28
    5474:	3e d8       	rcall	.-3972   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5476:	6f e1       	ldi	r22, 0x1F	; 31
    5478:	ce 01       	movw	r24, r28
    547a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    547e:	62 e4       	ldi	r22, 0x42	; 66
    5480:	ce 01       	movw	r24, r28
    5482:	37 d8       	rcall	.-3986   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5484:	64 e1       	ldi	r22, 0x14	; 20
    5486:	70 e0       	ldi	r23, 0x00	; 0
    5488:	80 e0       	ldi	r24, 0x00	; 0
    548a:	90 e0       	ldi	r25, 0x00	; 0
    548c:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5490:	69 e1       	ldi	r22, 0x19	; 25
    5492:	ce 01       	movw	r24, r28
    5494:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5498:	6a e0       	ldi	r22, 0x0A	; 10
    549a:	ce 01       	movw	r24, r28
    549c:	2a d8       	rcall	.-4012   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    549e:	69 e1       	ldi	r22, 0x19	; 25
    54a0:	ce 01       	movw	r24, r28
    54a2:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    54a6:	6a e1       	ldi	r22, 0x1A	; 26
    54a8:	ce 01       	movw	r24, r28
    54aa:	23 d8       	rcall	.-4026   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    54ac:	68 e2       	ldi	r22, 0x28	; 40
    54ae:	70 e0       	ldi	r23, 0x00	; 0
    54b0:	80 e0       	ldi	r24, 0x00	; 0
    54b2:	90 e0       	ldi	r25, 0x00	; 0
    54b4:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    54b8:	69 e1       	ldi	r22, 0x19	; 25
    54ba:	ce 01       	movw	r24, r28
    54bc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    54c0:	62 e1       	ldi	r22, 0x12	; 18
    54c2:	ce 01       	movw	r24, r28
    54c4:	16 d8       	rcall	.-4052   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    54c6:	68 e2       	ldi	r22, 0x28	; 40
    54c8:	70 e0       	ldi	r23, 0x00	; 0
    54ca:	80 e0       	ldi	r24, 0x00	; 0
    54cc:	90 e0       	ldi	r25, 0x00	; 0
    54ce:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    54d2:	6e e1       	ldi	r22, 0x1E	; 30
    54d4:	ce 01       	movw	r24, r28
    54d6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    54da:	67 e2       	ldi	r22, 0x27	; 39
    54dc:	ce 01       	movw	r24, r28
    54de:	09 d8       	rcall	.-4078   	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    54e0:	64 e6       	ldi	r22, 0x64	; 100
    54e2:	70 e0       	ldi	r23, 0x00	; 0
    54e4:	80 e0       	ldi	r24, 0x00	; 0
    54e6:	90 e0       	ldi	r25, 0x00	; 0
    54e8:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    54ec:	64 e2       	ldi	r22, 0x24	; 36
    54ee:	ce 01       	movw	r24, r28
    54f0:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    54f4:	60 e6       	ldi	r22, 0x60	; 96
    54f6:	ce 01       	movw	r24, r28
    54f8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    54fc:	6d e3       	ldi	r22, 0x3D	; 61
    54fe:	ce 01       	movw	r24, r28
    5500:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5504:	60 e4       	ldi	r22, 0x40	; 64
    5506:	ce 01       	movw	r24, r28
    5508:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    550c:	64 e3       	ldi	r22, 0x34	; 52
    550e:	ce 01       	movw	r24, r28
    5510:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5514:	68 e3       	ldi	r22, 0x38	; 56
    5516:	ce 01       	movw	r24, r28
    5518:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    551c:	65 e3       	ldi	r22, 0x35	; 53
    551e:	ce 01       	movw	r24, r28
    5520:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5524:	68 e3       	ldi	r22, 0x38	; 56
    5526:	ce 01       	movw	r24, r28
    5528:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    552c:	64 e2       	ldi	r22, 0x24	; 36
    552e:	ce 01       	movw	r24, r28
    5530:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5534:	68 e3       	ldi	r22, 0x38	; 56
    5536:	ce 01       	movw	r24, r28
    5538:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    553c:	68 e2       	ldi	r22, 0x28	; 40
    553e:	70 e0       	ldi	r23, 0x00	; 0
    5540:	80 e0       	ldi	r24, 0x00	; 0
    5542:	90 e0       	ldi	r25, 0x00	; 0
    5544:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5548:	64 e2       	ldi	r22, 0x24	; 36
    554a:	ce 01       	movw	r24, r28
    554c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5550:	6c e3       	ldi	r22, 0x3C	; 60
    5552:	ce 01       	movw	r24, r28
    5554:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5558:	66 e1       	ldi	r22, 0x16	; 22
    555a:	ce 01       	movw	r24, r28
    555c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5560:	6c e1       	ldi	r22, 0x1C	; 28
    5562:	ce 01       	movw	r24, r28
    5564:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5568:	61 e0       	ldi	r22, 0x01	; 1
    556a:	ce 01       	movw	r24, r28
    556c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5570:	66 e0       	ldi	r22, 0x06	; 6
    5572:	ce 01       	movw	r24, r28
    5574:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5578:	65 e5       	ldi	r22, 0x55	; 85
    557a:	ce 01       	movw	r24, r28
    557c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5580:	60 e0       	ldi	r22, 0x00	; 0
    5582:	ce 01       	movw	r24, r28
    5584:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5588:	62 e0       	ldi	r22, 0x02	; 2
    558a:	ce 01       	movw	r24, r28
    558c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5590:	60 e0       	ldi	r22, 0x00	; 0
    5592:	ce 01       	movw	r24, r28
    5594:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5598:	63 e0       	ldi	r22, 0x03	; 3
    559a:	ce 01       	movw	r24, r28
    559c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    55a0:	60 e0       	ldi	r22, 0x00	; 0
    55a2:	ce 01       	movw	r24, r28
    55a4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    55a8:	64 e0       	ldi	r22, 0x04	; 4
    55aa:	ce 01       	movw	r24, r28
    55ac:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    55b0:	60 e0       	ldi	r22, 0x00	; 0
    55b2:	ce 01       	movw	r24, r28
    55b4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    55b8:	65 e0       	ldi	r22, 0x05	; 5
    55ba:	ce 01       	movw	r24, r28
    55bc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    55c0:	6f ee       	ldi	r22, 0xEF	; 239
    55c2:	ce 01       	movw	r24, r28
    55c4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    55c8:	66 e0       	ldi	r22, 0x06	; 6
    55ca:	ce 01       	movw	r24, r28
    55cc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    55d0:	60 e0       	ldi	r22, 0x00	; 0
    55d2:	ce 01       	movw	r24, r28
    55d4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    55d8:	67 e0       	ldi	r22, 0x07	; 7
    55da:	ce 01       	movw	r24, r28
    55dc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    55e0:	60 e0       	ldi	r22, 0x00	; 0
    55e2:	ce 01       	movw	r24, r28
    55e4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    55e8:	68 e0       	ldi	r22, 0x08	; 8
    55ea:	ce 01       	movw	r24, r28
    55ec:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    55f0:	61 e0       	ldi	r22, 0x01	; 1
    55f2:	ce 01       	movw	r24, r28
    55f4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    55f8:	69 e0       	ldi	r22, 0x09	; 9
    55fa:	ce 01       	movw	r24, r28
    55fc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5600:	6f e8       	ldi	r22, 0x8F	; 143
    5602:	ce 01       	movw	r24, r28
    5604:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5608:	d5 cc       	rjmp	.-1622   	; 0x4fb4 <_ZN4UTFT7InitLCDEh+0x7f2>
    560a:	62 ee       	ldi	r22, 0xE2	; 226
    560c:	ce 01       	movw	r24, r28
    560e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5612:	63 e2       	ldi	r22, 0x23	; 35
    5614:	ce 01       	movw	r24, r28
    5616:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    561a:	62 e0       	ldi	r22, 0x02	; 2
    561c:	ce 01       	movw	r24, r28
    561e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5622:	64 e5       	ldi	r22, 0x54	; 84
    5624:	ce 01       	movw	r24, r28
    5626:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    562a:	60 ee       	ldi	r22, 0xE0	; 224
    562c:	ce 01       	movw	r24, r28
    562e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5632:	61 e0       	ldi	r22, 0x01	; 1
    5634:	ce 01       	movw	r24, r28
    5636:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    563a:	6a e0       	ldi	r22, 0x0A	; 10
    563c:	70 e0       	ldi	r23, 0x00	; 0
    563e:	80 e0       	ldi	r24, 0x00	; 0
    5640:	90 e0       	ldi	r25, 0x00	; 0
    5642:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5646:	60 ee       	ldi	r22, 0xE0	; 224
    5648:	ce 01       	movw	r24, r28
    564a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    564e:	63 e0       	ldi	r22, 0x03	; 3
    5650:	ce 01       	movw	r24, r28
    5652:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5656:	6a e0       	ldi	r22, 0x0A	; 10
    5658:	70 e0       	ldi	r23, 0x00	; 0
    565a:	80 e0       	ldi	r24, 0x00	; 0
    565c:	90 e0       	ldi	r25, 0x00	; 0
    565e:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5662:	61 e0       	ldi	r22, 0x01	; 1
    5664:	ce 01       	movw	r24, r28
    5666:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    566a:	64 e6       	ldi	r22, 0x64	; 100
    566c:	70 e0       	ldi	r23, 0x00	; 0
    566e:	80 e0       	ldi	r24, 0x00	; 0
    5670:	90 e0       	ldi	r25, 0x00	; 0
    5672:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5676:	66 ee       	ldi	r22, 0xE6	; 230
    5678:	ce 01       	movw	r24, r28
    567a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    567e:	61 e0       	ldi	r22, 0x01	; 1
    5680:	ce 01       	movw	r24, r28
    5682:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5686:	6f e1       	ldi	r22, 0x1F	; 31
    5688:	ce 01       	movw	r24, r28
    568a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    568e:	6f ef       	ldi	r22, 0xFF	; 255
    5690:	ce 01       	movw	r24, r28
    5692:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5696:	60 eb       	ldi	r22, 0xB0	; 176
    5698:	ce 01       	movw	r24, r28
    569a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    569e:	60 e2       	ldi	r22, 0x20	; 32
    56a0:	ce 01       	movw	r24, r28
    56a2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56a6:	60 e0       	ldi	r22, 0x00	; 0
    56a8:	ce 01       	movw	r24, r28
    56aa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56ae:	61 e0       	ldi	r22, 0x01	; 1
    56b0:	ce 01       	movw	r24, r28
    56b2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56b6:	6f ed       	ldi	r22, 0xDF	; 223
    56b8:	ce 01       	movw	r24, r28
    56ba:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56be:	61 e0       	ldi	r22, 0x01	; 1
    56c0:	ce 01       	movw	r24, r28
    56c2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56c6:	6f e0       	ldi	r22, 0x0F	; 15
    56c8:	ce 01       	movw	r24, r28
    56ca:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56ce:	60 e0       	ldi	r22, 0x00	; 0
    56d0:	ce 01       	movw	r24, r28
    56d2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56d6:	64 eb       	ldi	r22, 0xB4	; 180
    56d8:	ce 01       	movw	r24, r28
    56da:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    56de:	62 e0       	ldi	r22, 0x02	; 2
    56e0:	ce 01       	movw	r24, r28
    56e2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56e6:	63 e1       	ldi	r22, 0x13	; 19
    56e8:	ce 01       	movw	r24, r28
    56ea:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56ee:	60 e0       	ldi	r22, 0x00	; 0
    56f0:	ce 01       	movw	r24, r28
    56f2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56f6:	68 e0       	ldi	r22, 0x08	; 8
    56f8:	ce 01       	movw	r24, r28
    56fa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    56fe:	6b e2       	ldi	r22, 0x2B	; 43
    5700:	ce 01       	movw	r24, r28
    5702:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5706:	60 e0       	ldi	r22, 0x00	; 0
    5708:	ce 01       	movw	r24, r28
    570a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    570e:	62 e0       	ldi	r22, 0x02	; 2
    5710:	ce 01       	movw	r24, r28
    5712:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5716:	60 e0       	ldi	r22, 0x00	; 0
    5718:	ce 01       	movw	r24, r28
    571a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    571e:	66 eb       	ldi	r22, 0xB6	; 182
    5720:	ce 01       	movw	r24, r28
    5722:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5726:	61 e0       	ldi	r22, 0x01	; 1
    5728:	ce 01       	movw	r24, r28
    572a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    572e:	60 e2       	ldi	r22, 0x20	; 32
    5730:	ce 01       	movw	r24, r28
    5732:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5736:	60 e0       	ldi	r22, 0x00	; 0
    5738:	ce 01       	movw	r24, r28
    573a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    573e:	64 e0       	ldi	r22, 0x04	; 4
    5740:	ce 01       	movw	r24, r28
    5742:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5746:	6c e0       	ldi	r22, 0x0C	; 12
    5748:	ce 01       	movw	r24, r28
    574a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    574e:	60 e0       	ldi	r22, 0x00	; 0
    5750:	ce 01       	movw	r24, r28
    5752:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5756:	62 e0       	ldi	r22, 0x02	; 2
    5758:	ce 01       	movw	r24, r28
    575a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    575e:	6a eb       	ldi	r22, 0xBA	; 186
    5760:	ce 01       	movw	r24, r28
    5762:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5766:	6f e0       	ldi	r22, 0x0F	; 15
    5768:	ce 01       	movw	r24, r28
    576a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    576e:	68 eb       	ldi	r22, 0xB8	; 184
    5770:	ce 01       	movw	r24, r28
    5772:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5776:	67 e0       	ldi	r22, 0x07	; 7
    5778:	ce 01       	movw	r24, r28
    577a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    577e:	61 e0       	ldi	r22, 0x01	; 1
    5780:	ce 01       	movw	r24, r28
    5782:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5786:	66 e3       	ldi	r22, 0x36	; 54
    5788:	ce 01       	movw	r24, r28
    578a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    578e:	62 e2       	ldi	r22, 0x22	; 34
    5790:	ce 01       	movw	r24, r28
    5792:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5796:	60 ef       	ldi	r22, 0xF0	; 240
    5798:	ce 01       	movw	r24, r28
    579a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    579e:	63 e0       	ldi	r22, 0x03	; 3
    57a0:	ce 01       	movw	r24, r28
    57a2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    57a6:	61 e0       	ldi	r22, 0x01	; 1
    57a8:	70 e0       	ldi	r23, 0x00	; 0
    57aa:	80 e0       	ldi	r24, 0x00	; 0
    57ac:	90 e0       	ldi	r25, 0x00	; 0
    57ae:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    57b2:	0f e0       	ldi	r16, 0x0F	; 15
    57b4:	11 e0       	ldi	r17, 0x01	; 1
    57b6:	2f ed       	ldi	r18, 0xDF	; 223
    57b8:	31 e0       	ldi	r19, 0x01	; 1
    57ba:	40 e0       	ldi	r20, 0x00	; 0
    57bc:	50 e0       	ldi	r21, 0x00	; 0
    57be:	60 e0       	ldi	r22, 0x00	; 0
    57c0:	70 e0       	ldi	r23, 0x00	; 0
    57c2:	ce 01       	movw	r24, r28
    57c4:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
    57c8:	69 e2       	ldi	r22, 0x29	; 41
    57ca:	ce 01       	movw	r24, r28
    57cc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    57d0:	6e eb       	ldi	r22, 0xBE	; 190
    57d2:	ce 01       	movw	r24, r28
    57d4:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    57d8:	66 e0       	ldi	r22, 0x06	; 6
    57da:	ce 01       	movw	r24, r28
    57dc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    57e0:	60 ef       	ldi	r22, 0xF0	; 240
    57e2:	ce 01       	movw	r24, r28
    57e4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    57e8:	61 e0       	ldi	r22, 0x01	; 1
    57ea:	ce 01       	movw	r24, r28
    57ec:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    57f0:	60 ef       	ldi	r22, 0xF0	; 240
    57f2:	ce 01       	movw	r24, r28
    57f4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    57f8:	60 e0       	ldi	r22, 0x00	; 0
    57fa:	ce 01       	movw	r24, r28
    57fc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5800:	60 e0       	ldi	r22, 0x00	; 0
    5802:	ce 01       	movw	r24, r28
    5804:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5808:	60 ed       	ldi	r22, 0xD0	; 208
    580a:	ce 01       	movw	r24, r28
    580c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5810:	6d e0       	ldi	r22, 0x0D	; 13
    5812:	ce 01       	movw	r24, r28
    5814:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5818:	0c 94 b3 35 	jmp	0x6b66	; 0x6b66 <_ZN4UTFT7InitLCDEh+0x23a4>
    581c:	62 ee       	ldi	r22, 0xE2	; 226
    581e:	ce 01       	movw	r24, r28
    5820:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5824:	6e e1       	ldi	r22, 0x1E	; 30
    5826:	ce 01       	movw	r24, r28
    5828:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    582c:	62 e0       	ldi	r22, 0x02	; 2
    582e:	ce 01       	movw	r24, r28
    5830:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5834:	64 e5       	ldi	r22, 0x54	; 84
    5836:	ce 01       	movw	r24, r28
    5838:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    583c:	60 ee       	ldi	r22, 0xE0	; 224
    583e:	ce 01       	movw	r24, r28
    5840:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5844:	61 e0       	ldi	r22, 0x01	; 1
    5846:	ce 01       	movw	r24, r28
    5848:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    584c:	6a e0       	ldi	r22, 0x0A	; 10
    584e:	70 e0       	ldi	r23, 0x00	; 0
    5850:	80 e0       	ldi	r24, 0x00	; 0
    5852:	90 e0       	ldi	r25, 0x00	; 0
    5854:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5858:	60 ee       	ldi	r22, 0xE0	; 224
    585a:	ce 01       	movw	r24, r28
    585c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5860:	63 e0       	ldi	r22, 0x03	; 3
    5862:	ce 01       	movw	r24, r28
    5864:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5868:	6a e0       	ldi	r22, 0x0A	; 10
    586a:	70 e0       	ldi	r23, 0x00	; 0
    586c:	80 e0       	ldi	r24, 0x00	; 0
    586e:	90 e0       	ldi	r25, 0x00	; 0
    5870:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5874:	61 e0       	ldi	r22, 0x01	; 1
    5876:	ce 01       	movw	r24, r28
    5878:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    587c:	64 e6       	ldi	r22, 0x64	; 100
    587e:	70 e0       	ldi	r23, 0x00	; 0
    5880:	80 e0       	ldi	r24, 0x00	; 0
    5882:	90 e0       	ldi	r25, 0x00	; 0
    5884:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5888:	66 ee       	ldi	r22, 0xE6	; 230
    588a:	ce 01       	movw	r24, r28
    588c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5890:	63 e0       	ldi	r22, 0x03	; 3
    5892:	ce 01       	movw	r24, r28
    5894:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5898:	6f ef       	ldi	r22, 0xFF	; 255
    589a:	ce 01       	movw	r24, r28
    589c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58a0:	6f ef       	ldi	r22, 0xFF	; 255
    58a2:	ce 01       	movw	r24, r28
    58a4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58a8:	60 eb       	ldi	r22, 0xB0	; 176
    58aa:	ce 01       	movw	r24, r28
    58ac:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    58b0:	64 e2       	ldi	r22, 0x24	; 36
    58b2:	ce 01       	movw	r24, r28
    58b4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58b8:	60 e0       	ldi	r22, 0x00	; 0
    58ba:	ce 01       	movw	r24, r28
    58bc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58c0:	63 e0       	ldi	r22, 0x03	; 3
    58c2:	ce 01       	movw	r24, r28
    58c4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58c8:	6f e1       	ldi	r22, 0x1F	; 31
    58ca:	ce 01       	movw	r24, r28
    58cc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58d0:	61 e0       	ldi	r22, 0x01	; 1
    58d2:	ce 01       	movw	r24, r28
    58d4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58d8:	6f ed       	ldi	r22, 0xDF	; 223
    58da:	ce 01       	movw	r24, r28
    58dc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58e0:	60 e0       	ldi	r22, 0x00	; 0
    58e2:	ce 01       	movw	r24, r28
    58e4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58e8:	64 eb       	ldi	r22, 0xB4	; 180
    58ea:	ce 01       	movw	r24, r28
    58ec:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    58f0:	63 e0       	ldi	r22, 0x03	; 3
    58f2:	ce 01       	movw	r24, r28
    58f4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    58f8:	60 ea       	ldi	r22, 0xA0	; 160
    58fa:	ce 01       	movw	r24, r28
    58fc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5900:	60 e0       	ldi	r22, 0x00	; 0
    5902:	ce 01       	movw	r24, r28
    5904:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5908:	6e e2       	ldi	r22, 0x2E	; 46
    590a:	ce 01       	movw	r24, r28
    590c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5910:	60 e3       	ldi	r22, 0x30	; 48
    5912:	ce 01       	movw	r24, r28
    5914:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5918:	60 e0       	ldi	r22, 0x00	; 0
    591a:	ce 01       	movw	r24, r28
    591c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5920:	6f e0       	ldi	r22, 0x0F	; 15
    5922:	ce 01       	movw	r24, r28
    5924:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5928:	60 e0       	ldi	r22, 0x00	; 0
    592a:	ce 01       	movw	r24, r28
    592c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5930:	66 eb       	ldi	r22, 0xB6	; 182
    5932:	ce 01       	movw	r24, r28
    5934:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5938:	62 e0       	ldi	r22, 0x02	; 2
    593a:	ce 01       	movw	r24, r28
    593c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5940:	6d e0       	ldi	r22, 0x0D	; 13
    5942:	ce 01       	movw	r24, r28
    5944:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5948:	60 e0       	ldi	r22, 0x00	; 0
    594a:	ce 01       	movw	r24, r28
    594c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5950:	60 e1       	ldi	r22, 0x10	; 16
    5952:	ce 01       	movw	r24, r28
    5954:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5958:	60 e1       	ldi	r22, 0x10	; 16
    595a:	ce 01       	movw	r24, r28
    595c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5960:	60 e0       	ldi	r22, 0x00	; 0
    5962:	ce 01       	movw	r24, r28
    5964:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5968:	68 e0       	ldi	r22, 0x08	; 8
    596a:	ce 01       	movw	r24, r28
    596c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5970:	6a eb       	ldi	r22, 0xBA	; 186
    5972:	ce 01       	movw	r24, r28
    5974:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5978:	6f e0       	ldi	r22, 0x0F	; 15
    597a:	ce 01       	movw	r24, r28
    597c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5980:	68 eb       	ldi	r22, 0xB8	; 184
    5982:	ce 01       	movw	r24, r28
    5984:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5988:	67 e0       	ldi	r22, 0x07	; 7
    598a:	ce 01       	movw	r24, r28
    598c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5990:	61 e0       	ldi	r22, 0x01	; 1
    5992:	ce 01       	movw	r24, r28
    5994:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5998:	66 e3       	ldi	r22, 0x36	; 54
    599a:	ce 01       	movw	r24, r28
    599c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    59a0:	62 e2       	ldi	r22, 0x22	; 34
    59a2:	ce 01       	movw	r24, r28
    59a4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    59a8:	60 ef       	ldi	r22, 0xF0	; 240
    59aa:	ce 01       	movw	r24, r28
    59ac:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    59b0:	63 e0       	ldi	r22, 0x03	; 3
    59b2:	ce 01       	movw	r24, r28
    59b4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    59b8:	61 e0       	ldi	r22, 0x01	; 1
    59ba:	70 e0       	ldi	r23, 0x00	; 0
    59bc:	80 e0       	ldi	r24, 0x00	; 0
    59be:	90 e0       	ldi	r25, 0x00	; 0
    59c0:	d2 c0       	rjmp	.+420    	; 0x5b66 <_ZN4UTFT7InitLCDEh+0x13a4>
    59c2:	62 ee       	ldi	r22, 0xE2	; 226
    59c4:	ce 01       	movw	r24, r28
    59c6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    59ca:	63 e2       	ldi	r22, 0x23	; 35
    59cc:	ce 01       	movw	r24, r28
    59ce:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    59d2:	62 e0       	ldi	r22, 0x02	; 2
    59d4:	ce 01       	movw	r24, r28
    59d6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    59da:	64 e0       	ldi	r22, 0x04	; 4
    59dc:	ce 01       	movw	r24, r28
    59de:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    59e2:	60 ee       	ldi	r22, 0xE0	; 224
    59e4:	ce 01       	movw	r24, r28
    59e6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    59ea:	61 e0       	ldi	r22, 0x01	; 1
    59ec:	ce 01       	movw	r24, r28
    59ee:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    59f2:	6a e0       	ldi	r22, 0x0A	; 10
    59f4:	70 e0       	ldi	r23, 0x00	; 0
    59f6:	80 e0       	ldi	r24, 0x00	; 0
    59f8:	90 e0       	ldi	r25, 0x00	; 0
    59fa:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    59fe:	60 ee       	ldi	r22, 0xE0	; 224
    5a00:	ce 01       	movw	r24, r28
    5a02:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5a06:	63 e0       	ldi	r22, 0x03	; 3
    5a08:	ce 01       	movw	r24, r28
    5a0a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a0e:	6a e0       	ldi	r22, 0x0A	; 10
    5a10:	70 e0       	ldi	r23, 0x00	; 0
    5a12:	80 e0       	ldi	r24, 0x00	; 0
    5a14:	90 e0       	ldi	r25, 0x00	; 0
    5a16:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5a1a:	61 e0       	ldi	r22, 0x01	; 1
    5a1c:	ce 01       	movw	r24, r28
    5a1e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5a22:	64 e6       	ldi	r22, 0x64	; 100
    5a24:	70 e0       	ldi	r23, 0x00	; 0
    5a26:	80 e0       	ldi	r24, 0x00	; 0
    5a28:	90 e0       	ldi	r25, 0x00	; 0
    5a2a:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5a2e:	66 ee       	ldi	r22, 0xE6	; 230
    5a30:	ce 01       	movw	r24, r28
    5a32:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5a36:	64 e0       	ldi	r22, 0x04	; 4
    5a38:	ce 01       	movw	r24, r28
    5a3a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a3e:	63 e9       	ldi	r22, 0x93	; 147
    5a40:	ce 01       	movw	r24, r28
    5a42:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a46:	60 ee       	ldi	r22, 0xE0	; 224
    5a48:	ce 01       	movw	r24, r28
    5a4a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a4e:	60 eb       	ldi	r22, 0xB0	; 176
    5a50:	ce 01       	movw	r24, r28
    5a52:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5a56:	60 e0       	ldi	r22, 0x00	; 0
    5a58:	ce 01       	movw	r24, r28
    5a5a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a5e:	60 e0       	ldi	r22, 0x00	; 0
    5a60:	ce 01       	movw	r24, r28
    5a62:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a66:	63 e0       	ldi	r22, 0x03	; 3
    5a68:	ce 01       	movw	r24, r28
    5a6a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a6e:	6f e1       	ldi	r22, 0x1F	; 31
    5a70:	ce 01       	movw	r24, r28
    5a72:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a76:	61 e0       	ldi	r22, 0x01	; 1
    5a78:	ce 01       	movw	r24, r28
    5a7a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a7e:	6f ed       	ldi	r22, 0xDF	; 223
    5a80:	ce 01       	movw	r24, r28
    5a82:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a86:	60 e0       	ldi	r22, 0x00	; 0
    5a88:	ce 01       	movw	r24, r28
    5a8a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a8e:	64 eb       	ldi	r22, 0xB4	; 180
    5a90:	ce 01       	movw	r24, r28
    5a92:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5a96:	63 e0       	ldi	r22, 0x03	; 3
    5a98:	ce 01       	movw	r24, r28
    5a9a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5a9e:	60 ea       	ldi	r22, 0xA0	; 160
    5aa0:	ce 01       	movw	r24, r28
    5aa2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5aa6:	60 e0       	ldi	r22, 0x00	; 0
    5aa8:	ce 01       	movw	r24, r28
    5aaa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5aae:	6e e2       	ldi	r22, 0x2E	; 46
    5ab0:	ce 01       	movw	r24, r28
    5ab2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ab6:	60 e3       	ldi	r22, 0x30	; 48
    5ab8:	ce 01       	movw	r24, r28
    5aba:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5abe:	60 e0       	ldi	r22, 0x00	; 0
    5ac0:	ce 01       	movw	r24, r28
    5ac2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ac6:	6f e0       	ldi	r22, 0x0F	; 15
    5ac8:	ce 01       	movw	r24, r28
    5aca:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ace:	60 e0       	ldi	r22, 0x00	; 0
    5ad0:	ce 01       	movw	r24, r28
    5ad2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ad6:	66 eb       	ldi	r22, 0xB6	; 182
    5ad8:	ce 01       	movw	r24, r28
    5ada:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5ade:	62 e0       	ldi	r22, 0x02	; 2
    5ae0:	ce 01       	movw	r24, r28
    5ae2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ae6:	6d e0       	ldi	r22, 0x0D	; 13
    5ae8:	ce 01       	movw	r24, r28
    5aea:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5aee:	60 e0       	ldi	r22, 0x00	; 0
    5af0:	ce 01       	movw	r24, r28
    5af2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5af6:	60 e1       	ldi	r22, 0x10	; 16
    5af8:	ce 01       	movw	r24, r28
    5afa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5afe:	60 e1       	ldi	r22, 0x10	; 16
    5b00:	ce 01       	movw	r24, r28
    5b02:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5b06:	60 e0       	ldi	r22, 0x00	; 0
    5b08:	ce 01       	movw	r24, r28
    5b0a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5b0e:	68 e0       	ldi	r22, 0x08	; 8
    5b10:	ce 01       	movw	r24, r28
    5b12:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5b16:	6a eb       	ldi	r22, 0xBA	; 186
    5b18:	ce 01       	movw	r24, r28
    5b1a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5b1e:	65 e0       	ldi	r22, 0x05	; 5
    5b20:	ce 01       	movw	r24, r28
    5b22:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5b26:	68 eb       	ldi	r22, 0xB8	; 184
    5b28:	ce 01       	movw	r24, r28
    5b2a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5b2e:	67 e0       	ldi	r22, 0x07	; 7
    5b30:	ce 01       	movw	r24, r28
    5b32:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5b36:	61 e0       	ldi	r22, 0x01	; 1
    5b38:	ce 01       	movw	r24, r28
    5b3a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5b3e:	66 e3       	ldi	r22, 0x36	; 54
    5b40:	ce 01       	movw	r24, r28
    5b42:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5b46:	62 e2       	ldi	r22, 0x22	; 34
    5b48:	ce 01       	movw	r24, r28
    5b4a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5b4e:	60 ef       	ldi	r22, 0xF0	; 240
    5b50:	ce 01       	movw	r24, r28
    5b52:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5b56:	63 e0       	ldi	r22, 0x03	; 3
    5b58:	ce 01       	movw	r24, r28
    5b5a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5b5e:	6a e0       	ldi	r22, 0x0A	; 10
    5b60:	70 e0       	ldi	r23, 0x00	; 0
    5b62:	80 e0       	ldi	r24, 0x00	; 0
    5b64:	90 e0       	ldi	r25, 0x00	; 0
    5b66:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5b6a:	0f ed       	ldi	r16, 0xDF	; 223
    5b6c:	11 e0       	ldi	r17, 0x01	; 1
    5b6e:	2f e1       	ldi	r18, 0x1F	; 31
    5b70:	33 e0       	ldi	r19, 0x03	; 3
    5b72:	23 ce       	rjmp	.-954    	; 0x57ba <_ZN4UTFT7InitLCDEh+0xff8>
    5b74:	44 e0       	ldi	r20, 0x04	; 4
    5b76:	50 e2       	ldi	r21, 0x20	; 32
    5b78:	61 e1       	ldi	r22, 0x11	; 17
    5b7a:	ce 01       	movw	r24, r28
    5b7c:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b80:	40 e0       	ldi	r20, 0x00	; 0
    5b82:	5c ec       	ldi	r21, 0xCC	; 204
    5b84:	63 e1       	ldi	r22, 0x13	; 19
    5b86:	ce 01       	movw	r24, r28
    5b88:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b8c:	40 e0       	ldi	r20, 0x00	; 0
    5b8e:	56 e2       	ldi	r21, 0x26	; 38
    5b90:	65 e1       	ldi	r22, 0x15	; 21
    5b92:	ce 01       	movw	r24, r28
    5b94:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b98:	4a e2       	ldi	r20, 0x2A	; 42
    5b9a:	55 e2       	ldi	r21, 0x25	; 37
    5b9c:	64 e1       	ldi	r22, 0x14	; 20
    5b9e:	ce 01       	movw	r24, r28
    5ba0:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ba4:	43 e3       	ldi	r20, 0x33	; 51
    5ba6:	50 e0       	ldi	r21, 0x00	; 0
    5ba8:	62 e1       	ldi	r22, 0x12	; 18
    5baa:	ce 01       	movw	r24, r28
    5bac:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bb0:	44 e0       	ldi	r20, 0x04	; 4
    5bb2:	5c ec       	ldi	r21, 0xCC	; 204
    5bb4:	63 e1       	ldi	r22, 0x13	; 19
    5bb6:	ce 01       	movw	r24, r28
    5bb8:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bbc:	46 e0       	ldi	r20, 0x06	; 6
    5bbe:	5c ec       	ldi	r21, 0xCC	; 204
    5bc0:	63 e1       	ldi	r22, 0x13	; 19
    5bc2:	ce 01       	movw	r24, r28
    5bc4:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bc8:	4f e4       	ldi	r20, 0x4F	; 79
    5bca:	5c ec       	ldi	r21, 0xCC	; 204
    5bcc:	63 e1       	ldi	r22, 0x13	; 19
    5bce:	ce 01       	movw	r24, r28
    5bd0:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bd4:	4f e4       	ldi	r20, 0x4F	; 79
    5bd6:	57 e6       	ldi	r21, 0x67	; 103
    5bd8:	63 e1       	ldi	r22, 0x13	; 19
    5bda:	ce 01       	movw	r24, r28
    5bdc:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5be0:	43 e0       	ldi	r20, 0x03	; 3
    5be2:	50 e2       	ldi	r21, 0x20	; 32
    5be4:	61 e1       	ldi	r22, 0x11	; 17
    5be6:	ce 01       	movw	r24, r28
    5be8:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bec:	49 e0       	ldi	r20, 0x09	; 9
    5bee:	56 e2       	ldi	r21, 0x26	; 38
    5bf0:	60 e3       	ldi	r22, 0x30	; 48
    5bf2:	ce 01       	movw	r24, r28
    5bf4:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bf8:	4c e2       	ldi	r20, 0x2C	; 44
    5bfa:	54 e2       	ldi	r21, 0x24	; 36
    5bfc:	61 e3       	ldi	r22, 0x31	; 49
    5bfe:	ce 01       	movw	r24, r28
    5c00:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c04:	43 e2       	ldi	r20, 0x23	; 35
    5c06:	5f e1       	ldi	r21, 0x1F	; 31
    5c08:	62 e3       	ldi	r22, 0x32	; 50
    5c0a:	ce 01       	movw	r24, r28
    5c0c:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c10:	45 e2       	ldi	r20, 0x25	; 37
    5c12:	54 e2       	ldi	r21, 0x24	; 36
    5c14:	63 e3       	ldi	r22, 0x33	; 51
    5c16:	ce 01       	movw	r24, r28
    5c18:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c1c:	46 e2       	ldi	r20, 0x26	; 38
    5c1e:	52 e2       	ldi	r21, 0x22	; 34
    5c20:	64 e3       	ldi	r22, 0x34	; 52
    5c22:	ce 01       	movw	r24, r28
    5c24:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c28:	43 e2       	ldi	r20, 0x23	; 35
    5c2a:	55 e2       	ldi	r21, 0x25	; 37
    5c2c:	65 e3       	ldi	r22, 0x35	; 53
    5c2e:	ce 01       	movw	r24, r28
    5c30:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c34:	4a e1       	ldi	r20, 0x1A	; 26
    5c36:	5c e1       	ldi	r21, 0x1C	; 28
    5c38:	66 e3       	ldi	r22, 0x36	; 54
    5c3a:	ce 01       	movw	r24, r28
    5c3c:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c40:	4d e1       	ldi	r20, 0x1D	; 29
    5c42:	53 e1       	ldi	r21, 0x13	; 19
    5c44:	67 e3       	ldi	r22, 0x37	; 55
    5c46:	ce 01       	movw	r24, r28
    5c48:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c4c:	41 e1       	ldi	r20, 0x11	; 17
    5c4e:	5b e0       	ldi	r21, 0x0B	; 11
    5c50:	68 e3       	ldi	r22, 0x38	; 56
    5c52:	ce 01       	movw	r24, r28
    5c54:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c58:	40 e1       	ldi	r20, 0x10	; 16
    5c5a:	52 e1       	ldi	r21, 0x12	; 18
    5c5c:	69 e3       	ldi	r22, 0x39	; 57
    5c5e:	ce 01       	movw	r24, r28
    5c60:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c64:	45 e1       	ldi	r20, 0x15	; 21
    5c66:	53 e1       	ldi	r21, 0x13	; 19
    5c68:	6a e3       	ldi	r22, 0x3A	; 58
    5c6a:	ce 01       	movw	r24, r28
    5c6c:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c70:	49 e1       	ldi	r20, 0x19	; 25
    5c72:	56 e3       	ldi	r21, 0x36	; 54
    5c74:	6b e3       	ldi	r22, 0x3B	; 59
    5c76:	ce 01       	movw	r24, r28
    5c78:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c7c:	40 e0       	ldi	r20, 0x00	; 0
    5c7e:	5d e0       	ldi	r21, 0x0D	; 13
    5c80:	6c e3       	ldi	r22, 0x3C	; 60
    5c82:	ce 01       	movw	r24, r28
    5c84:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c88:	4d e0       	ldi	r20, 0x0D	; 13
    5c8a:	50 e0       	ldi	r21, 0x00	; 0
    5c8c:	6d e3       	ldi	r22, 0x3D	; 61
    5c8e:	ce 01       	movw	r24, r28
    5c90:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c94:	47 e0       	ldi	r20, 0x07	; 7
    5c96:	50 e0       	ldi	r21, 0x00	; 0
    5c98:	66 e1       	ldi	r22, 0x16	; 22
    5c9a:	ce 01       	movw	r24, r28
    5c9c:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ca0:	43 e1       	ldi	r20, 0x13	; 19
    5ca2:	50 e0       	ldi	r21, 0x00	; 0
    5ca4:	62 e0       	ldi	r22, 0x02	; 2
    5ca6:	ce 01       	movw	r24, r28
    5ca8:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cac:	43 e0       	ldi	r20, 0x03	; 3
    5cae:	50 e0       	ldi	r21, 0x00	; 0
    5cb0:	63 e0       	ldi	r22, 0x03	; 3
    5cb2:	ce 01       	movw	r24, r28
    5cb4:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cb8:	47 e2       	ldi	r20, 0x27	; 39
    5cba:	51 e0       	ldi	r21, 0x01	; 1
    5cbc:	61 e0       	ldi	r22, 0x01	; 1
    5cbe:	ce 01       	movw	r24, r28
    5cc0:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cc4:	43 e0       	ldi	r20, 0x03	; 3
    5cc6:	53 e0       	ldi	r21, 0x03	; 3
    5cc8:	68 e0       	ldi	r22, 0x08	; 8
    5cca:	ce 01       	movw	r24, r28
    5ccc:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cd0:	4b e0       	ldi	r20, 0x0B	; 11
    5cd2:	50 e0       	ldi	r21, 0x00	; 0
    5cd4:	6a e0       	ldi	r22, 0x0A	; 10
    5cd6:	ce 01       	movw	r24, r28
    5cd8:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cdc:	43 e0       	ldi	r20, 0x03	; 3
    5cde:	50 e0       	ldi	r21, 0x00	; 0
    5ce0:	6b e0       	ldi	r22, 0x0B	; 11
    5ce2:	ce 01       	movw	r24, r28
    5ce4:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ce8:	40 e0       	ldi	r20, 0x00	; 0
    5cea:	50 e0       	ldi	r21, 0x00	; 0
    5cec:	6c e0       	ldi	r22, 0x0C	; 12
    5cee:	ce 01       	movw	r24, r28
    5cf0:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cf4:	40 e0       	ldi	r20, 0x00	; 0
    5cf6:	50 e0       	ldi	r21, 0x00	; 0
    5cf8:	61 e4       	ldi	r22, 0x41	; 65
    5cfa:	ce 01       	movw	r24, r28
    5cfc:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d00:	40 e0       	ldi	r20, 0x00	; 0
    5d02:	50 e0       	ldi	r21, 0x00	; 0
    5d04:	60 e5       	ldi	r22, 0x50	; 80
    5d06:	ce 01       	movw	r24, r28
    5d08:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d0c:	45 e0       	ldi	r20, 0x05	; 5
    5d0e:	50 e0       	ldi	r21, 0x00	; 0
    5d10:	60 e6       	ldi	r22, 0x60	; 96
    5d12:	ce 01       	movw	r24, r28
    5d14:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d18:	4b e0       	ldi	r20, 0x0B	; 11
    5d1a:	50 e0       	ldi	r21, 0x00	; 0
    5d1c:	60 e7       	ldi	r22, 0x70	; 112
    5d1e:	ce 01       	movw	r24, r28
    5d20:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d24:	40 e0       	ldi	r20, 0x00	; 0
    5d26:	50 e0       	ldi	r21, 0x00	; 0
    5d28:	61 e7       	ldi	r22, 0x71	; 113
    5d2a:	ce 01       	movw	r24, r28
    5d2c:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d30:	40 e0       	ldi	r20, 0x00	; 0
    5d32:	50 e0       	ldi	r21, 0x00	; 0
    5d34:	68 e7       	ldi	r22, 0x78	; 120
    5d36:	ce 01       	movw	r24, r28
    5d38:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d3c:	40 e0       	ldi	r20, 0x00	; 0
    5d3e:	50 e0       	ldi	r21, 0x00	; 0
    5d40:	6a e7       	ldi	r22, 0x7A	; 122
    5d42:	ce 01       	movw	r24, r28
    5d44:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d48:	47 e0       	ldi	r20, 0x07	; 7
    5d4a:	50 e0       	ldi	r21, 0x00	; 0
    5d4c:	69 e7       	ldi	r22, 0x79	; 121
    5d4e:	ce 01       	movw	r24, r28
    5d50:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d54:	41 e5       	ldi	r20, 0x51	; 81
    5d56:	50 e0       	ldi	r21, 0x00	; 0
    5d58:	67 e0       	ldi	r22, 0x07	; 7
    5d5a:	ce 01       	movw	r24, r28
    5d5c:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d60:	43 e5       	ldi	r20, 0x53	; 83
    5d62:	50 e0       	ldi	r21, 0x00	; 0
    5d64:	67 e0       	ldi	r22, 0x07	; 7
    5d66:	ce 01       	movw	r24, r28
    5d68:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d6c:	40 e0       	ldi	r20, 0x00	; 0
    5d6e:	50 e0       	ldi	r21, 0x00	; 0
    5d70:	69 e7       	ldi	r22, 0x79	; 121
    5d72:	92 c1       	rjmp	.+804    	; 0x6098 <_ZN4UTFT7InitLCDEh+0x18d6>
    5d74:	61 e1       	ldi	r22, 0x11	; 17
    5d76:	ce 01       	movw	r24, r28
    5d78:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5d7c:	64 e1       	ldi	r22, 0x14	; 20
    5d7e:	70 e0       	ldi	r23, 0x00	; 0
    5d80:	80 e0       	ldi	r24, 0x00	; 0
    5d82:	90 e0       	ldi	r25, 0x00	; 0
    5d84:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5d88:	60 ed       	ldi	r22, 0xD0	; 208
    5d8a:	ce 01       	movw	r24, r28
    5d8c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5d90:	67 e0       	ldi	r22, 0x07	; 7
    5d92:	ce 01       	movw	r24, r28
    5d94:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5d98:	62 e4       	ldi	r22, 0x42	; 66
    5d9a:	ce 01       	movw	r24, r28
    5d9c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5da0:	68 e1       	ldi	r22, 0x18	; 24
    5da2:	ce 01       	movw	r24, r28
    5da4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5da8:	61 ed       	ldi	r22, 0xD1	; 209
    5daa:	ce 01       	movw	r24, r28
    5dac:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5db0:	60 e0       	ldi	r22, 0x00	; 0
    5db2:	ce 01       	movw	r24, r28
    5db4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5db8:	67 e0       	ldi	r22, 0x07	; 7
    5dba:	ce 01       	movw	r24, r28
    5dbc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5dc0:	60 e1       	ldi	r22, 0x10	; 16
    5dc2:	ce 01       	movw	r24, r28
    5dc4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5dc8:	62 ed       	ldi	r22, 0xD2	; 210
    5dca:	ce 01       	movw	r24, r28
    5dcc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5dd0:	61 e0       	ldi	r22, 0x01	; 1
    5dd2:	ce 01       	movw	r24, r28
    5dd4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5dd8:	62 e0       	ldi	r22, 0x02	; 2
    5dda:	ce 01       	movw	r24, r28
    5ddc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5de0:	60 ec       	ldi	r22, 0xC0	; 192
    5de2:	ce 01       	movw	r24, r28
    5de4:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5de8:	60 e1       	ldi	r22, 0x10	; 16
    5dea:	ce 01       	movw	r24, r28
    5dec:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5df0:	6b e3       	ldi	r22, 0x3B	; 59
    5df2:	ce 01       	movw	r24, r28
    5df4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5df8:	60 e0       	ldi	r22, 0x00	; 0
    5dfa:	ce 01       	movw	r24, r28
    5dfc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e00:	62 e0       	ldi	r22, 0x02	; 2
    5e02:	ce 01       	movw	r24, r28
    5e04:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e08:	61 e1       	ldi	r22, 0x11	; 17
    5e0a:	ce 01       	movw	r24, r28
    5e0c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e10:	65 ec       	ldi	r22, 0xC5	; 197
    5e12:	ce 01       	movw	r24, r28
    5e14:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5e18:	63 e0       	ldi	r22, 0x03	; 3
    5e1a:	ce 01       	movw	r24, r28
    5e1c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e20:	68 ec       	ldi	r22, 0xC8	; 200
    5e22:	ce 01       	movw	r24, r28
    5e24:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5e28:	60 e0       	ldi	r22, 0x00	; 0
    5e2a:	ce 01       	movw	r24, r28
    5e2c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e30:	62 e3       	ldi	r22, 0x32	; 50
    5e32:	ce 01       	movw	r24, r28
    5e34:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e38:	66 e3       	ldi	r22, 0x36	; 54
    5e3a:	ce 01       	movw	r24, r28
    5e3c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e40:	65 e4       	ldi	r22, 0x45	; 69
    5e42:	ce 01       	movw	r24, r28
    5e44:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e48:	66 e0       	ldi	r22, 0x06	; 6
    5e4a:	ce 01       	movw	r24, r28
    5e4c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e50:	66 e1       	ldi	r22, 0x16	; 22
    5e52:	ce 01       	movw	r24, r28
    5e54:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e58:	67 e3       	ldi	r22, 0x37	; 55
    5e5a:	ce 01       	movw	r24, r28
    5e5c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e60:	65 e7       	ldi	r22, 0x75	; 117
    5e62:	ce 01       	movw	r24, r28
    5e64:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e68:	67 e7       	ldi	r22, 0x77	; 119
    5e6a:	ce 01       	movw	r24, r28
    5e6c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e70:	64 e5       	ldi	r22, 0x54	; 84
    5e72:	ce 01       	movw	r24, r28
    5e74:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e78:	6c e0       	ldi	r22, 0x0C	; 12
    5e7a:	ce 01       	movw	r24, r28
    5e7c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e80:	60 e0       	ldi	r22, 0x00	; 0
    5e82:	ce 01       	movw	r24, r28
    5e84:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e88:	66 e3       	ldi	r22, 0x36	; 54
    5e8a:	ce 01       	movw	r24, r28
    5e8c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5e90:	6a e0       	ldi	r22, 0x0A	; 10
    5e92:	ce 01       	movw	r24, r28
    5e94:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5e98:	6a e3       	ldi	r22, 0x3A	; 58
    5e9a:	ce 01       	movw	r24, r28
    5e9c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5ea0:	65 e5       	ldi	r22, 0x55	; 85
    5ea2:	ce 01       	movw	r24, r28
    5ea4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ea8:	6a e2       	ldi	r22, 0x2A	; 42
    5eaa:	ce 01       	movw	r24, r28
    5eac:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5eb0:	60 e0       	ldi	r22, 0x00	; 0
    5eb2:	ce 01       	movw	r24, r28
    5eb4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5eb8:	60 e0       	ldi	r22, 0x00	; 0
    5eba:	ce 01       	movw	r24, r28
    5ebc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ec0:	61 e0       	ldi	r22, 0x01	; 1
    5ec2:	ce 01       	movw	r24, r28
    5ec4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ec8:	6f e3       	ldi	r22, 0x3F	; 63
    5eca:	ce 01       	movw	r24, r28
    5ecc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ed0:	6b e2       	ldi	r22, 0x2B	; 43
    5ed2:	ce 01       	movw	r24, r28
    5ed4:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    5ed8:	60 e0       	ldi	r22, 0x00	; 0
    5eda:	ce 01       	movw	r24, r28
    5edc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ee0:	60 e0       	ldi	r22, 0x00	; 0
    5ee2:	ce 01       	movw	r24, r28
    5ee4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ee8:	61 e0       	ldi	r22, 0x01	; 1
    5eea:	ce 01       	movw	r24, r28
    5eec:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ef0:	60 ee       	ldi	r22, 0xE0	; 224
    5ef2:	ce 01       	movw	r24, r28
    5ef4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    5ef8:	68 e7       	ldi	r22, 0x78	; 120
    5efa:	70 e0       	ldi	r23, 0x00	; 0
    5efc:	80 e0       	ldi	r24, 0x00	; 0
    5efe:	90 e0       	ldi	r25, 0x00	; 0
    5f00:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5f04:	f8 c1       	rjmp	.+1008   	; 0x62f6 <_ZN4UTFT7InitLCDEh+0x1b34>
    5f06:	4a e1       	ldi	r20, 0x1A	; 26
    5f08:	50 e0       	ldi	r21, 0x00	; 0
    5f0a:	61 e1       	ldi	r22, 0x11	; 17
    5f0c:	ce 01       	movw	r24, r28
    5f0e:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f12:	41 e2       	ldi	r20, 0x21	; 33
    5f14:	51 e3       	ldi	r21, 0x31	; 49
    5f16:	62 e1       	ldi	r22, 0x12	; 18
    5f18:	ce 01       	movw	r24, r28
    5f1a:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f1e:	4c e6       	ldi	r20, 0x6C	; 108
    5f20:	50 e0       	ldi	r21, 0x00	; 0
    5f22:	63 e1       	ldi	r22, 0x13	; 19
    5f24:	ce 01       	movw	r24, r28
    5f26:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f2a:	49 e4       	ldi	r20, 0x49	; 73
    5f2c:	52 e4       	ldi	r21, 0x42	; 66
    5f2e:	64 e1       	ldi	r22, 0x14	; 20
    5f30:	ce 01       	movw	r24, r28
    5f32:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f36:	40 e0       	ldi	r20, 0x00	; 0
    5f38:	58 e0       	ldi	r21, 0x08	; 8
    5f3a:	60 e1       	ldi	r22, 0x10	; 16
    5f3c:	ce 01       	movw	r24, r28
    5f3e:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f42:	6a e0       	ldi	r22, 0x0A	; 10
    5f44:	70 e0       	ldi	r23, 0x00	; 0
    5f46:	80 e0       	ldi	r24, 0x00	; 0
    5f48:	90 e0       	ldi	r25, 0x00	; 0
    5f4a:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5f4e:	4a e1       	ldi	r20, 0x1A	; 26
    5f50:	51 e0       	ldi	r21, 0x01	; 1
    5f52:	61 e1       	ldi	r22, 0x11	; 17
    5f54:	ce 01       	movw	r24, r28
    5f56:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f5a:	6a e0       	ldi	r22, 0x0A	; 10
    5f5c:	70 e0       	ldi	r23, 0x00	; 0
    5f5e:	80 e0       	ldi	r24, 0x00	; 0
    5f60:	90 e0       	ldi	r25, 0x00	; 0
    5f62:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5f66:	4a e1       	ldi	r20, 0x1A	; 26
    5f68:	53 e0       	ldi	r21, 0x03	; 3
    5f6a:	61 e1       	ldi	r22, 0x11	; 17
    5f6c:	ce 01       	movw	r24, r28
    5f6e:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f72:	6a e0       	ldi	r22, 0x0A	; 10
    5f74:	70 e0       	ldi	r23, 0x00	; 0
    5f76:	80 e0       	ldi	r24, 0x00	; 0
    5f78:	90 e0       	ldi	r25, 0x00	; 0
    5f7a:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5f7e:	4a e1       	ldi	r20, 0x1A	; 26
    5f80:	57 e0       	ldi	r21, 0x07	; 7
    5f82:	61 e1       	ldi	r22, 0x11	; 17
    5f84:	ce 01       	movw	r24, r28
    5f86:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f8a:	6a e0       	ldi	r22, 0x0A	; 10
    5f8c:	70 e0       	ldi	r23, 0x00	; 0
    5f8e:	80 e0       	ldi	r24, 0x00	; 0
    5f90:	90 e0       	ldi	r25, 0x00	; 0
    5f92:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5f96:	4a e1       	ldi	r20, 0x1A	; 26
    5f98:	5f e0       	ldi	r21, 0x0F	; 15
    5f9a:	61 e1       	ldi	r22, 0x11	; 17
    5f9c:	ce 01       	movw	r24, r28
    5f9e:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fa2:	6a e0       	ldi	r22, 0x0A	; 10
    5fa4:	70 e0       	ldi	r23, 0x00	; 0
    5fa6:	80 e0       	ldi	r24, 0x00	; 0
    5fa8:	90 e0       	ldi	r25, 0x00	; 0
    5faa:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5fae:	4a e3       	ldi	r20, 0x3A	; 58
    5fb0:	5f e0       	ldi	r21, 0x0F	; 15
    5fb2:	61 e1       	ldi	r22, 0x11	; 17
    5fb4:	ce 01       	movw	r24, r28
    5fb6:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fba:	6e e1       	ldi	r22, 0x1E	; 30
    5fbc:	70 e0       	ldi	r23, 0x00	; 0
    5fbe:	80 e0       	ldi	r24, 0x00	; 0
    5fc0:	90 e0       	ldi	r25, 0x00	; 0
    5fc2:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    5fc6:	4c e1       	ldi	r20, 0x1C	; 28
    5fc8:	51 e0       	ldi	r21, 0x01	; 1
    5fca:	61 e0       	ldi	r22, 0x01	; 1
    5fcc:	ce 01       	movw	r24, r28
    5fce:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fd2:	40 e0       	ldi	r20, 0x00	; 0
    5fd4:	51 e0       	ldi	r21, 0x01	; 1
    5fd6:	62 e0       	ldi	r22, 0x02	; 2
    5fd8:	ce 01       	movw	r24, r28
    5fda:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fde:	40 e3       	ldi	r20, 0x30	; 48
    5fe0:	50 e1       	ldi	r21, 0x10	; 16
    5fe2:	63 e0       	ldi	r22, 0x03	; 3
    5fe4:	ce 01       	movw	r24, r28
    5fe6:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fea:	40 e0       	ldi	r20, 0x00	; 0
    5fec:	50 e0       	ldi	r21, 0x00	; 0
    5fee:	67 e0       	ldi	r22, 0x07	; 7
    5ff0:	ce 01       	movw	r24, r28
    5ff2:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ff6:	48 e0       	ldi	r20, 0x08	; 8
    5ff8:	58 e0       	ldi	r21, 0x08	; 8
    5ffa:	68 e0       	ldi	r22, 0x08	; 8
    5ffc:	ce 01       	movw	r24, r28
    5ffe:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6002:	40 e0       	ldi	r20, 0x00	; 0
    6004:	51 e1       	ldi	r21, 0x11	; 17
    6006:	6b e0       	ldi	r22, 0x0B	; 11
    6008:	ce 01       	movw	r24, r28
    600a:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    600e:	40 e0       	ldi	r20, 0x00	; 0
    6010:	50 e0       	ldi	r21, 0x00	; 0
    6012:	6c e0       	ldi	r22, 0x0C	; 12
    6014:	ce 01       	movw	r24, r28
    6016:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    601a:	41 e0       	ldi	r20, 0x01	; 1
    601c:	54 e1       	ldi	r21, 0x14	; 20
    601e:	6f e0       	ldi	r22, 0x0F	; 15
    6020:	ce 01       	movw	r24, r28
    6022:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6026:	40 e0       	ldi	r20, 0x00	; 0
    6028:	50 e0       	ldi	r21, 0x00	; 0
    602a:	65 e1       	ldi	r22, 0x15	; 21
    602c:	ce 01       	movw	r24, r28
    602e:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6032:	40 e0       	ldi	r20, 0x00	; 0
    6034:	50 e0       	ldi	r21, 0x00	; 0
    6036:	60 e2       	ldi	r22, 0x20	; 32
    6038:	ce 01       	movw	r24, r28
    603a:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    603e:	40 e0       	ldi	r20, 0x00	; 0
    6040:	50 e0       	ldi	r21, 0x00	; 0
    6042:	61 e2       	ldi	r22, 0x21	; 33
    6044:	ce 01       	movw	r24, r28
    6046:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    604a:	4f ea       	ldi	r20, 0xAF	; 175
    604c:	50 e0       	ldi	r21, 0x00	; 0
    604e:	66 e3       	ldi	r22, 0x36	; 54
    6050:	ce 01       	movw	r24, r28
    6052:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6056:	40 e0       	ldi	r20, 0x00	; 0
    6058:	50 e0       	ldi	r21, 0x00	; 0
    605a:	67 e3       	ldi	r22, 0x37	; 55
    605c:	ce 01       	movw	r24, r28
    605e:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6062:	4b ed       	ldi	r20, 0xDB	; 219
    6064:	50 e0       	ldi	r21, 0x00	; 0
    6066:	68 e3       	ldi	r22, 0x38	; 56
    6068:	ce 01       	movw	r24, r28
    606a:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    606e:	40 e0       	ldi	r20, 0x00	; 0
    6070:	50 e0       	ldi	r21, 0x00	; 0
    6072:	69 e3       	ldi	r22, 0x39	; 57
    6074:	ce 01       	movw	r24, r28
    6076:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    607a:	41 e0       	ldi	r20, 0x01	; 1
    607c:	5b e0       	ldi	r21, 0x0B	; 11
    607e:	6f e0       	ldi	r22, 0x0F	; 15
    6080:	ce 01       	movw	r24, r28
    6082:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6086:	46 e1       	ldi	r20, 0x16	; 22
    6088:	50 e0       	ldi	r21, 0x00	; 0
    608a:	67 e0       	ldi	r22, 0x07	; 7
    608c:	ce 01       	movw	r24, r28
    608e:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6092:	47 e1       	ldi	r20, 0x17	; 23
    6094:	50 e0       	ldi	r21, 0x00	; 0
    6096:	67 e0       	ldi	r22, 0x07	; 7
    6098:	ce 01       	movw	r24, r28
    609a:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    609e:	0c 94 da 27 	jmp	0x4fb4	; 0x4fb4 <_ZN4UTFT7InitLCDEh+0x7f2>
    60a2:	61 e1       	ldi	r22, 0x11	; 17
    60a4:	ce 01       	movw	r24, r28
    60a6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    60aa:	68 e7       	ldi	r22, 0x78	; 120
    60ac:	70 e0       	ldi	r23, 0x00	; 0
    60ae:	80 e0       	ldi	r24, 0x00	; 0
    60b0:	90 e0       	ldi	r25, 0x00	; 0
    60b2:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    60b6:	61 eb       	ldi	r22, 0xB1	; 177
    60b8:	ce 01       	movw	r24, r28
    60ba:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    60be:	65 e0       	ldi	r22, 0x05	; 5
    60c0:	ce 01       	movw	r24, r28
    60c2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    60c6:	6c e3       	ldi	r22, 0x3C	; 60
    60c8:	ce 01       	movw	r24, r28
    60ca:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    60ce:	6c e3       	ldi	r22, 0x3C	; 60
    60d0:	ce 01       	movw	r24, r28
    60d2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    60d6:	62 eb       	ldi	r22, 0xB2	; 178
    60d8:	ce 01       	movw	r24, r28
    60da:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    60de:	65 e0       	ldi	r22, 0x05	; 5
    60e0:	ce 01       	movw	r24, r28
    60e2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    60e6:	6c e3       	ldi	r22, 0x3C	; 60
    60e8:	ce 01       	movw	r24, r28
    60ea:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    60ee:	6c e3       	ldi	r22, 0x3C	; 60
    60f0:	ce 01       	movw	r24, r28
    60f2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    60f6:	63 eb       	ldi	r22, 0xB3	; 179
    60f8:	ce 01       	movw	r24, r28
    60fa:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    60fe:	65 e0       	ldi	r22, 0x05	; 5
    6100:	ce 01       	movw	r24, r28
    6102:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6106:	6c e3       	ldi	r22, 0x3C	; 60
    6108:	ce 01       	movw	r24, r28
    610a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    610e:	6c e3       	ldi	r22, 0x3C	; 60
    6110:	ce 01       	movw	r24, r28
    6112:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6116:	65 e0       	ldi	r22, 0x05	; 5
    6118:	ce 01       	movw	r24, r28
    611a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    611e:	6c e3       	ldi	r22, 0x3C	; 60
    6120:	ce 01       	movw	r24, r28
    6122:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6126:	6c e3       	ldi	r22, 0x3C	; 60
    6128:	ce 01       	movw	r24, r28
    612a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    612e:	64 eb       	ldi	r22, 0xB4	; 180
    6130:	ce 01       	movw	r24, r28
    6132:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6136:	63 e0       	ldi	r22, 0x03	; 3
    6138:	ce 01       	movw	r24, r28
    613a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    613e:	60 ec       	ldi	r22, 0xC0	; 192
    6140:	ce 01       	movw	r24, r28
    6142:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6146:	68 e2       	ldi	r22, 0x28	; 40
    6148:	ce 01       	movw	r24, r28
    614a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    614e:	68 e0       	ldi	r22, 0x08	; 8
    6150:	ce 01       	movw	r24, r28
    6152:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6156:	64 e0       	ldi	r22, 0x04	; 4
    6158:	ce 01       	movw	r24, r28
    615a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    615e:	61 ec       	ldi	r22, 0xC1	; 193
    6160:	ce 01       	movw	r24, r28
    6162:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6166:	60 ec       	ldi	r22, 0xC0	; 192
    6168:	ce 01       	movw	r24, r28
    616a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    616e:	62 ec       	ldi	r22, 0xC2	; 194
    6170:	ce 01       	movw	r24, r28
    6172:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6176:	6d e0       	ldi	r22, 0x0D	; 13
    6178:	ce 01       	movw	r24, r28
    617a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    617e:	60 e0       	ldi	r22, 0x00	; 0
    6180:	ce 01       	movw	r24, r28
    6182:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6186:	63 ec       	ldi	r22, 0xC3	; 195
    6188:	ce 01       	movw	r24, r28
    618a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    618e:	6d e8       	ldi	r22, 0x8D	; 141
    6190:	ce 01       	movw	r24, r28
    6192:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6196:	6a e2       	ldi	r22, 0x2A	; 42
    6198:	ce 01       	movw	r24, r28
    619a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    619e:	64 ec       	ldi	r22, 0xC4	; 196
    61a0:	ce 01       	movw	r24, r28
    61a2:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    61a6:	6d e8       	ldi	r22, 0x8D	; 141
    61a8:	ce 01       	movw	r24, r28
    61aa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    61ae:	6e ee       	ldi	r22, 0xEE	; 238
    61b0:	ce 01       	movw	r24, r28
    61b2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    61b6:	65 ec       	ldi	r22, 0xC5	; 197
    61b8:	ce 01       	movw	r24, r28
    61ba:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    61be:	6a e1       	ldi	r22, 0x1A	; 26
    61c0:	ce 01       	movw	r24, r28
    61c2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    61c6:	66 e3       	ldi	r22, 0x36	; 54
    61c8:	ce 01       	movw	r24, r28
    61ca:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    61ce:	60 ec       	ldi	r22, 0xC0	; 192
    61d0:	ce 01       	movw	r24, r28
    61d2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    61d6:	60 ee       	ldi	r22, 0xE0	; 224
    61d8:	ce 01       	movw	r24, r28
    61da:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    61de:	63 e0       	ldi	r22, 0x03	; 3
    61e0:	ce 01       	movw	r24, r28
    61e2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    61e6:	62 e2       	ldi	r22, 0x22	; 34
    61e8:	ce 01       	movw	r24, r28
    61ea:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    61ee:	67 e0       	ldi	r22, 0x07	; 7
    61f0:	ce 01       	movw	r24, r28
    61f2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    61f6:	6a e0       	ldi	r22, 0x0A	; 10
    61f8:	ce 01       	movw	r24, r28
    61fa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    61fe:	6e e2       	ldi	r22, 0x2E	; 46
    6200:	ce 01       	movw	r24, r28
    6202:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6206:	60 e3       	ldi	r22, 0x30	; 48
    6208:	ce 01       	movw	r24, r28
    620a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    620e:	65 e2       	ldi	r22, 0x25	; 37
    6210:	ce 01       	movw	r24, r28
    6212:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6216:	6a e2       	ldi	r22, 0x2A	; 42
    6218:	ce 01       	movw	r24, r28
    621a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    621e:	68 e2       	ldi	r22, 0x28	; 40
    6220:	ce 01       	movw	r24, r28
    6222:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6226:	66 e2       	ldi	r22, 0x26	; 38
    6228:	ce 01       	movw	r24, r28
    622a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    622e:	6e e2       	ldi	r22, 0x2E	; 46
    6230:	ce 01       	movw	r24, r28
    6232:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6236:	6a e3       	ldi	r22, 0x3A	; 58
    6238:	ce 01       	movw	r24, r28
    623a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    623e:	60 e0       	ldi	r22, 0x00	; 0
    6240:	ce 01       	movw	r24, r28
    6242:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6246:	61 e0       	ldi	r22, 0x01	; 1
    6248:	ce 01       	movw	r24, r28
    624a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    624e:	63 e0       	ldi	r22, 0x03	; 3
    6250:	ce 01       	movw	r24, r28
    6252:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6256:	63 e1       	ldi	r22, 0x13	; 19
    6258:	ce 01       	movw	r24, r28
    625a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    625e:	61 ee       	ldi	r22, 0xE1	; 225
    6260:	ce 01       	movw	r24, r28
    6262:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6266:	64 e0       	ldi	r22, 0x04	; 4
    6268:	ce 01       	movw	r24, r28
    626a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    626e:	66 e1       	ldi	r22, 0x16	; 22
    6270:	ce 01       	movw	r24, r28
    6272:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6276:	66 e0       	ldi	r22, 0x06	; 6
    6278:	ce 01       	movw	r24, r28
    627a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    627e:	6d e0       	ldi	r22, 0x0D	; 13
    6280:	ce 01       	movw	r24, r28
    6282:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6286:	6d e2       	ldi	r22, 0x2D	; 45
    6288:	ce 01       	movw	r24, r28
    628a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    628e:	66 e2       	ldi	r22, 0x26	; 38
    6290:	ce 01       	movw	r24, r28
    6292:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6296:	63 e2       	ldi	r22, 0x23	; 35
    6298:	ce 01       	movw	r24, r28
    629a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    629e:	67 e2       	ldi	r22, 0x27	; 39
    62a0:	ce 01       	movw	r24, r28
    62a2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62a6:	67 e2       	ldi	r22, 0x27	; 39
    62a8:	ce 01       	movw	r24, r28
    62aa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62ae:	65 e2       	ldi	r22, 0x25	; 37
    62b0:	ce 01       	movw	r24, r28
    62b2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62b6:	6d e2       	ldi	r22, 0x2D	; 45
    62b8:	ce 01       	movw	r24, r28
    62ba:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62be:	6b e3       	ldi	r22, 0x3B	; 59
    62c0:	ce 01       	movw	r24, r28
    62c2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62c6:	60 e0       	ldi	r22, 0x00	; 0
    62c8:	ce 01       	movw	r24, r28
    62ca:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62ce:	61 e0       	ldi	r22, 0x01	; 1
    62d0:	ce 01       	movw	r24, r28
    62d2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62d6:	64 e0       	ldi	r22, 0x04	; 4
    62d8:	ce 01       	movw	r24, r28
    62da:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62de:	63 e1       	ldi	r22, 0x13	; 19
    62e0:	ce 01       	movw	r24, r28
    62e2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62e6:	6a e3       	ldi	r22, 0x3A	; 58
    62e8:	ce 01       	movw	r24, r28
    62ea:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    62ee:	65 e0       	ldi	r22, 0x05	; 5
    62f0:	ce 01       	movw	r24, r28
    62f2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    62f6:	69 e2       	ldi	r22, 0x29	; 41
    62f8:	0c 94 db 27 	jmp	0x4fb6	; 0x4fb6 <_ZN4UTFT7InitLCDEh+0x7f4>
    62fc:	61 e1       	ldi	r22, 0x11	; 17
    62fe:	ce 01       	movw	r24, r28
    6300:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6304:	64 e1       	ldi	r22, 0x14	; 20
    6306:	70 e0       	ldi	r23, 0x00	; 0
    6308:	80 e0       	ldi	r24, 0x00	; 0
    630a:	90 e0       	ldi	r25, 0x00	; 0
    630c:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    6310:	68 e2       	ldi	r22, 0x28	; 40
    6312:	ce 01       	movw	r24, r28
    6314:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6318:	65 e0       	ldi	r22, 0x05	; 5
    631a:	70 e0       	ldi	r23, 0x00	; 0
    631c:	80 e0       	ldi	r24, 0x00	; 0
    631e:	90 e0       	ldi	r25, 0x00	; 0
    6320:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    6324:	6f ec       	ldi	r22, 0xCF	; 207
    6326:	ce 01       	movw	r24, r28
    6328:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    632c:	60 e0       	ldi	r22, 0x00	; 0
    632e:	ce 01       	movw	r24, r28
    6330:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6334:	63 e8       	ldi	r22, 0x83	; 131
    6336:	ce 01       	movw	r24, r28
    6338:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    633c:	60 e3       	ldi	r22, 0x30	; 48
    633e:	ce 01       	movw	r24, r28
    6340:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6344:	6d ee       	ldi	r22, 0xED	; 237
    6346:	ce 01       	movw	r24, r28
    6348:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    634c:	64 e6       	ldi	r22, 0x64	; 100
    634e:	ce 01       	movw	r24, r28
    6350:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6354:	63 e0       	ldi	r22, 0x03	; 3
    6356:	ce 01       	movw	r24, r28
    6358:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    635c:	62 e1       	ldi	r22, 0x12	; 18
    635e:	ce 01       	movw	r24, r28
    6360:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6364:	61 e8       	ldi	r22, 0x81	; 129
    6366:	ce 01       	movw	r24, r28
    6368:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    636c:	68 ee       	ldi	r22, 0xE8	; 232
    636e:	ce 01       	movw	r24, r28
    6370:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6374:	65 e8       	ldi	r22, 0x85	; 133
    6376:	ce 01       	movw	r24, r28
    6378:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    637c:	61 e0       	ldi	r22, 0x01	; 1
    637e:	ce 01       	movw	r24, r28
    6380:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6384:	69 e7       	ldi	r22, 0x79	; 121
    6386:	ce 01       	movw	r24, r28
    6388:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    638c:	6b ec       	ldi	r22, 0xCB	; 203
    638e:	ce 01       	movw	r24, r28
    6390:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6394:	69 e3       	ldi	r22, 0x39	; 57
    6396:	ce 01       	movw	r24, r28
    6398:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    639c:	6c e2       	ldi	r22, 0x2C	; 44
    639e:	ce 01       	movw	r24, r28
    63a0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    63a4:	60 e0       	ldi	r22, 0x00	; 0
    63a6:	ce 01       	movw	r24, r28
    63a8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    63ac:	64 e3       	ldi	r22, 0x34	; 52
    63ae:	ce 01       	movw	r24, r28
    63b0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    63b4:	62 e0       	ldi	r22, 0x02	; 2
    63b6:	ce 01       	movw	r24, r28
    63b8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    63bc:	67 ef       	ldi	r22, 0xF7	; 247
    63be:	ce 01       	movw	r24, r28
    63c0:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    63c4:	60 e2       	ldi	r22, 0x20	; 32
    63c6:	ce 01       	movw	r24, r28
    63c8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    63cc:	6a ee       	ldi	r22, 0xEA	; 234
    63ce:	ce 01       	movw	r24, r28
    63d0:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    63d4:	60 e0       	ldi	r22, 0x00	; 0
    63d6:	ce 01       	movw	r24, r28
    63d8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    63dc:	60 e0       	ldi	r22, 0x00	; 0
    63de:	ce 01       	movw	r24, r28
    63e0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    63e4:	60 ec       	ldi	r22, 0xC0	; 192
    63e6:	ce 01       	movw	r24, r28
    63e8:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    63ec:	66 e2       	ldi	r22, 0x26	; 38
    63ee:	ce 01       	movw	r24, r28
    63f0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    63f4:	61 ec       	ldi	r22, 0xC1	; 193
    63f6:	ce 01       	movw	r24, r28
    63f8:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    63fc:	61 e1       	ldi	r22, 0x11	; 17
    63fe:	ce 01       	movw	r24, r28
    6400:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6404:	65 ec       	ldi	r22, 0xC5	; 197
    6406:	ce 01       	movw	r24, r28
    6408:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    640c:	65 e3       	ldi	r22, 0x35	; 53
    640e:	ce 01       	movw	r24, r28
    6410:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6414:	6e e3       	ldi	r22, 0x3E	; 62
    6416:	ce 01       	movw	r24, r28
    6418:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    641c:	67 ec       	ldi	r22, 0xC7	; 199
    641e:	ce 01       	movw	r24, r28
    6420:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6424:	6e eb       	ldi	r22, 0xBE	; 190
    6426:	ce 01       	movw	r24, r28
    6428:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    642c:	61 eb       	ldi	r22, 0xB1	; 177
    642e:	ce 01       	movw	r24, r28
    6430:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6434:	60 e0       	ldi	r22, 0x00	; 0
    6436:	ce 01       	movw	r24, r28
    6438:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    643c:	6b e1       	ldi	r22, 0x1B	; 27
    643e:	ce 01       	movw	r24, r28
    6440:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6444:	66 eb       	ldi	r22, 0xB6	; 182
    6446:	ce 01       	movw	r24, r28
    6448:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    644c:	6a e0       	ldi	r22, 0x0A	; 10
    644e:	ce 01       	movw	r24, r28
    6450:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6454:	62 e8       	ldi	r22, 0x82	; 130
    6456:	ce 01       	movw	r24, r28
    6458:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    645c:	67 e2       	ldi	r22, 0x27	; 39
    645e:	ce 01       	movw	r24, r28
    6460:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6464:	60 e0       	ldi	r22, 0x00	; 0
    6466:	ce 01       	movw	r24, r28
    6468:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    646c:	67 eb       	ldi	r22, 0xB7	; 183
    646e:	ce 01       	movw	r24, r28
    6470:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6474:	67 e0       	ldi	r22, 0x07	; 7
    6476:	ce 01       	movw	r24, r28
    6478:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    647c:	6a e3       	ldi	r22, 0x3A	; 58
    647e:	ce 01       	movw	r24, r28
    6480:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6484:	65 e5       	ldi	r22, 0x55	; 85
    6486:	ce 01       	movw	r24, r28
    6488:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    648c:	66 e3       	ldi	r22, 0x36	; 54
    648e:	ce 01       	movw	r24, r28
    6490:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6494:	68 e4       	ldi	r22, 0x48	; 72
    6496:	ce 01       	movw	r24, r28
    6498:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    649c:	69 e2       	ldi	r22, 0x29	; 41
    649e:	ce 01       	movw	r24, r28
    64a0:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    64a4:	65 e0       	ldi	r22, 0x05	; 5
    64a6:	70 e0       	ldi	r23, 0x00	; 0
    64a8:	80 e0       	ldi	r24, 0x00	; 0
    64aa:	90 e0       	ldi	r25, 0x00	; 0
    64ac:	5b c4       	rjmp	.+2230   	; 0x6d64 <_ZN4UTFT7InitLCDEh+0x25a2>
    64ae:	6b ec       	ldi	r22, 0xCB	; 203
    64b0:	ce 01       	movw	r24, r28
    64b2:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    64b6:	69 e3       	ldi	r22, 0x39	; 57
    64b8:	ce 01       	movw	r24, r28
    64ba:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    64be:	6c e2       	ldi	r22, 0x2C	; 44
    64c0:	ce 01       	movw	r24, r28
    64c2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    64c6:	60 e0       	ldi	r22, 0x00	; 0
    64c8:	ce 01       	movw	r24, r28
    64ca:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    64ce:	64 e3       	ldi	r22, 0x34	; 52
    64d0:	ce 01       	movw	r24, r28
    64d2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    64d6:	62 e0       	ldi	r22, 0x02	; 2
    64d8:	ce 01       	movw	r24, r28
    64da:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    64de:	6f ec       	ldi	r22, 0xCF	; 207
    64e0:	ce 01       	movw	r24, r28
    64e2:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    64e6:	60 e0       	ldi	r22, 0x00	; 0
    64e8:	ce 01       	movw	r24, r28
    64ea:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    64ee:	61 ec       	ldi	r22, 0xC1	; 193
    64f0:	ce 01       	movw	r24, r28
    64f2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    64f6:	60 e3       	ldi	r22, 0x30	; 48
    64f8:	ce 01       	movw	r24, r28
    64fa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    64fe:	68 ee       	ldi	r22, 0xE8	; 232
    6500:	ce 01       	movw	r24, r28
    6502:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6506:	65 e8       	ldi	r22, 0x85	; 133
    6508:	ce 01       	movw	r24, r28
    650a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    650e:	60 e0       	ldi	r22, 0x00	; 0
    6510:	ce 01       	movw	r24, r28
    6512:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6516:	68 e7       	ldi	r22, 0x78	; 120
    6518:	ce 01       	movw	r24, r28
    651a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    651e:	6a ee       	ldi	r22, 0xEA	; 234
    6520:	ce 01       	movw	r24, r28
    6522:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6526:	60 e0       	ldi	r22, 0x00	; 0
    6528:	ce 01       	movw	r24, r28
    652a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    652e:	60 e0       	ldi	r22, 0x00	; 0
    6530:	ce 01       	movw	r24, r28
    6532:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6536:	6d ee       	ldi	r22, 0xED	; 237
    6538:	ce 01       	movw	r24, r28
    653a:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    653e:	64 e6       	ldi	r22, 0x64	; 100
    6540:	ce 01       	movw	r24, r28
    6542:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6546:	63 e0       	ldi	r22, 0x03	; 3
    6548:	ce 01       	movw	r24, r28
    654a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    654e:	62 e1       	ldi	r22, 0x12	; 18
    6550:	ce 01       	movw	r24, r28
    6552:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6556:	61 e8       	ldi	r22, 0x81	; 129
    6558:	ce 01       	movw	r24, r28
    655a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    655e:	67 ef       	ldi	r22, 0xF7	; 247
    6560:	ce 01       	movw	r24, r28
    6562:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6566:	60 e2       	ldi	r22, 0x20	; 32
    6568:	ce 01       	movw	r24, r28
    656a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    656e:	60 ec       	ldi	r22, 0xC0	; 192
    6570:	ce 01       	movw	r24, r28
    6572:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6576:	63 e2       	ldi	r22, 0x23	; 35
    6578:	ce 01       	movw	r24, r28
    657a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    657e:	61 ec       	ldi	r22, 0xC1	; 193
    6580:	ce 01       	movw	r24, r28
    6582:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6586:	60 e1       	ldi	r22, 0x10	; 16
    6588:	ce 01       	movw	r24, r28
    658a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    658e:	65 ec       	ldi	r22, 0xC5	; 197
    6590:	ce 01       	movw	r24, r28
    6592:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6596:	6e e3       	ldi	r22, 0x3E	; 62
    6598:	ce 01       	movw	r24, r28
    659a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    659e:	68 e2       	ldi	r22, 0x28	; 40
    65a0:	ce 01       	movw	r24, r28
    65a2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    65a6:	67 ec       	ldi	r22, 0xC7	; 199
    65a8:	ce 01       	movw	r24, r28
    65aa:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    65ae:	66 e8       	ldi	r22, 0x86	; 134
    65b0:	ce 01       	movw	r24, r28
    65b2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    65b6:	66 e3       	ldi	r22, 0x36	; 54
    65b8:	ce 01       	movw	r24, r28
    65ba:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    65be:	68 e4       	ldi	r22, 0x48	; 72
    65c0:	ce 01       	movw	r24, r28
    65c2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    65c6:	6a e3       	ldi	r22, 0x3A	; 58
    65c8:	ce 01       	movw	r24, r28
    65ca:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    65ce:	65 e5       	ldi	r22, 0x55	; 85
    65d0:	ce 01       	movw	r24, r28
    65d2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    65d6:	61 eb       	ldi	r22, 0xB1	; 177
    65d8:	ce 01       	movw	r24, r28
    65da:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    65de:	60 e0       	ldi	r22, 0x00	; 0
    65e0:	ce 01       	movw	r24, r28
    65e2:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    65e6:	68 e1       	ldi	r22, 0x18	; 24
    65e8:	ce 01       	movw	r24, r28
    65ea:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    65ee:	66 eb       	ldi	r22, 0xB6	; 182
    65f0:	ce 01       	movw	r24, r28
    65f2:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    65f6:	68 e0       	ldi	r22, 0x08	; 8
    65f8:	ce 01       	movw	r24, r28
    65fa:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    65fe:	62 e8       	ldi	r22, 0x82	; 130
    6600:	ce 01       	movw	r24, r28
    6602:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6606:	67 e2       	ldi	r22, 0x27	; 39
    6608:	ce 01       	movw	r24, r28
    660a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    660e:	61 e1       	ldi	r22, 0x11	; 17
    6610:	ce 01       	movw	r24, r28
    6612:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6616:	68 e7       	ldi	r22, 0x78	; 120
    6618:	70 e0       	ldi	r23, 0x00	; 0
    661a:	80 e0       	ldi	r24, 0x00	; 0
    661c:	90 e0       	ldi	r25, 0x00	; 0
    661e:	9d c2       	rjmp	.+1338   	; 0x6b5a <_ZN4UTFT7InitLCDEh+0x2398>
    6620:	60 eb       	ldi	r22, 0xB0	; 176
    6622:	ce 01       	movw	r24, r28
    6624:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6628:	6e e1       	ldi	r22, 0x1E	; 30
    662a:	ce 01       	movw	r24, r28
    662c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6630:	60 eb       	ldi	r22, 0xB0	; 176
    6632:	ce 01       	movw	r24, r28
    6634:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6638:	60 e0       	ldi	r22, 0x00	; 0
    663a:	ce 01       	movw	r24, r28
    663c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6640:	63 eb       	ldi	r22, 0xB3	; 179
    6642:	ce 01       	movw	r24, r28
    6644:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6648:	62 e0       	ldi	r22, 0x02	; 2
    664a:	ce 01       	movw	r24, r28
    664c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6650:	60 e0       	ldi	r22, 0x00	; 0
    6652:	ce 01       	movw	r24, r28
    6654:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6658:	60 e0       	ldi	r22, 0x00	; 0
    665a:	ce 01       	movw	r24, r28
    665c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6660:	60 e1       	ldi	r22, 0x10	; 16
    6662:	ce 01       	movw	r24, r28
    6664:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6668:	64 eb       	ldi	r22, 0xB4	; 180
    666a:	ce 01       	movw	r24, r28
    666c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6670:	60 e0       	ldi	r22, 0x00	; 0
    6672:	ce 01       	movw	r24, r28
    6674:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6678:	60 ec       	ldi	r22, 0xC0	; 192
    667a:	ce 01       	movw	r24, r28
    667c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6680:	63 e0       	ldi	r22, 0x03	; 3
    6682:	ce 01       	movw	r24, r28
    6684:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6688:	6b e3       	ldi	r22, 0x3B	; 59
    668a:	ce 01       	movw	r24, r28
    668c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6690:	60 e0       	ldi	r22, 0x00	; 0
    6692:	ce 01       	movw	r24, r28
    6694:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6698:	60 e0       	ldi	r22, 0x00	; 0
    669a:	ce 01       	movw	r24, r28
    669c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66a0:	60 e0       	ldi	r22, 0x00	; 0
    66a2:	ce 01       	movw	r24, r28
    66a4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66a8:	61 e0       	ldi	r22, 0x01	; 1
    66aa:	ce 01       	movw	r24, r28
    66ac:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66b0:	60 e0       	ldi	r22, 0x00	; 0
    66b2:	ce 01       	movw	r24, r28
    66b4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66b8:	63 e4       	ldi	r22, 0x43	; 67
    66ba:	ce 01       	movw	r24, r28
    66bc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66c0:	61 ec       	ldi	r22, 0xC1	; 193
    66c2:	ce 01       	movw	r24, r28
    66c4:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    66c8:	68 e0       	ldi	r22, 0x08	; 8
    66ca:	ce 01       	movw	r24, r28
    66cc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66d0:	65 e1       	ldi	r22, 0x15	; 21
    66d2:	ce 01       	movw	r24, r28
    66d4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66d8:	68 e0       	ldi	r22, 0x08	; 8
    66da:	ce 01       	movw	r24, r28
    66dc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66e0:	68 e0       	ldi	r22, 0x08	; 8
    66e2:	ce 01       	movw	r24, r28
    66e4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66e8:	64 ec       	ldi	r22, 0xC4	; 196
    66ea:	ce 01       	movw	r24, r28
    66ec:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    66f0:	65 e1       	ldi	r22, 0x15	; 21
    66f2:	ce 01       	movw	r24, r28
    66f4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    66f8:	63 e0       	ldi	r22, 0x03	; 3
    66fa:	ce 01       	movw	r24, r28
    66fc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6700:	63 e0       	ldi	r22, 0x03	; 3
    6702:	ce 01       	movw	r24, r28
    6704:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6708:	61 e0       	ldi	r22, 0x01	; 1
    670a:	ce 01       	movw	r24, r28
    670c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6710:	66 ec       	ldi	r22, 0xC6	; 198
    6712:	ce 01       	movw	r24, r28
    6714:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6718:	62 e0       	ldi	r22, 0x02	; 2
    671a:	ce 01       	movw	r24, r28
    671c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6720:	68 ec       	ldi	r22, 0xC8	; 200
    6722:	ce 01       	movw	r24, r28
    6724:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6728:	6c e0       	ldi	r22, 0x0C	; 12
    672a:	ce 01       	movw	r24, r28
    672c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6730:	65 e0       	ldi	r22, 0x05	; 5
    6732:	ce 01       	movw	r24, r28
    6734:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6738:	6a e0       	ldi	r22, 0x0A	; 10
    673a:	ce 01       	movw	r24, r28
    673c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6740:	6b e6       	ldi	r22, 0x6B	; 107
    6742:	ce 01       	movw	r24, r28
    6744:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6748:	64 e0       	ldi	r22, 0x04	; 4
    674a:	ce 01       	movw	r24, r28
    674c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6750:	66 e0       	ldi	r22, 0x06	; 6
    6752:	ce 01       	movw	r24, r28
    6754:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6758:	65 e1       	ldi	r22, 0x15	; 21
    675a:	ce 01       	movw	r24, r28
    675c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6760:	60 e1       	ldi	r22, 0x10	; 16
    6762:	ce 01       	movw	r24, r28
    6764:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6768:	60 e0       	ldi	r22, 0x00	; 0
    676a:	ce 01       	movw	r24, r28
    676c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6770:	60 e6       	ldi	r22, 0x60	; 96
    6772:	ce 01       	movw	r24, r28
    6774:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6778:	66 e3       	ldi	r22, 0x36	; 54
    677a:	ce 01       	movw	r24, r28
    677c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6780:	6a e0       	ldi	r22, 0x0A	; 10
    6782:	ce 01       	movw	r24, r28
    6784:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6788:	6c e0       	ldi	r22, 0x0C	; 12
    678a:	ce 01       	movw	r24, r28
    678c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6790:	65 e5       	ldi	r22, 0x55	; 85
    6792:	ce 01       	movw	r24, r28
    6794:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6798:	6a e3       	ldi	r22, 0x3A	; 58
    679a:	ce 01       	movw	r24, r28
    679c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    67a0:	65 e5       	ldi	r22, 0x55	; 85
    67a2:	ce 01       	movw	r24, r28
    67a4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    67a8:	68 e3       	ldi	r22, 0x38	; 56
    67aa:	ce 01       	movw	r24, r28
    67ac:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    67b0:	60 ed       	ldi	r22, 0xD0	; 208
    67b2:	ce 01       	movw	r24, r28
    67b4:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    67b8:	67 e0       	ldi	r22, 0x07	; 7
    67ba:	ce 01       	movw	r24, r28
    67bc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    67c0:	67 e0       	ldi	r22, 0x07	; 7
    67c2:	ce 01       	movw	r24, r28
    67c4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    67c8:	64 e1       	ldi	r22, 0x14	; 20
    67ca:	ce 01       	movw	r24, r28
    67cc:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    67d0:	62 ea       	ldi	r22, 0xA2	; 162
    67d2:	ce 01       	movw	r24, r28
    67d4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    67d8:	61 ed       	ldi	r22, 0xD1	; 209
    67da:	ce 01       	movw	r24, r28
    67dc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    67e0:	63 e0       	ldi	r22, 0x03	; 3
    67e2:	ce 01       	movw	r24, r28
    67e4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    67e8:	6a e5       	ldi	r22, 0x5A	; 90
    67ea:	ce 01       	movw	r24, r28
    67ec:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    67f0:	60 e1       	ldi	r22, 0x10	; 16
    67f2:	ce 01       	movw	r24, r28
    67f4:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    67f8:	62 ed       	ldi	r22, 0xD2	; 210
    67fa:	ce 01       	movw	r24, r28
    67fc:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6800:	63 e0       	ldi	r22, 0x03	; 3
    6802:	ce 01       	movw	r24, r28
    6804:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6808:	64 e0       	ldi	r22, 0x04	; 4
    680a:	ce 01       	movw	r24, r28
    680c:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6810:	64 e0       	ldi	r22, 0x04	; 4
    6812:	ce 01       	movw	r24, r28
    6814:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6818:	61 e1       	ldi	r22, 0x11	; 17
    681a:	ce 01       	movw	r24, r28
    681c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6820:	66 e9       	ldi	r22, 0x96	; 150
    6822:	70 e0       	ldi	r23, 0x00	; 0
    6824:	80 e0       	ldi	r24, 0x00	; 0
    6826:	90 e0       	ldi	r25, 0x00	; 0
    6828:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    682c:	6a e2       	ldi	r22, 0x2A	; 42
    682e:	ce 01       	movw	r24, r28
    6830:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6834:	60 e0       	ldi	r22, 0x00	; 0
    6836:	ce 01       	movw	r24, r28
    6838:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    683c:	60 e0       	ldi	r22, 0x00	; 0
    683e:	ce 01       	movw	r24, r28
    6840:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6844:	61 e0       	ldi	r22, 0x01	; 1
    6846:	ce 01       	movw	r24, r28
    6848:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    684c:	6f ed       	ldi	r22, 0xDF	; 223
    684e:	ce 01       	movw	r24, r28
    6850:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6854:	6b e2       	ldi	r22, 0x2B	; 43
    6856:	ce 01       	movw	r24, r28
    6858:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    685c:	60 e0       	ldi	r22, 0x00	; 0
    685e:	ce 01       	movw	r24, r28
    6860:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6864:	60 e0       	ldi	r22, 0x00	; 0
    6866:	ce 01       	movw	r24, r28
    6868:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    686c:	61 e0       	ldi	r22, 0x01	; 1
    686e:	ce 01       	movw	r24, r28
    6870:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6874:	6f e3       	ldi	r22, 0x3F	; 63
    6876:	ce 01       	movw	r24, r28
    6878:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    687c:	64 e6       	ldi	r22, 0x64	; 100
    687e:	70 e0       	ldi	r23, 0x00	; 0
    6880:	80 e0       	ldi	r24, 0x00	; 0
    6882:	90 e0       	ldi	r25, 0x00	; 0
    6884:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    6888:	69 e2       	ldi	r22, 0x29	; 41
    688a:	ce 01       	movw	r24, r28
    688c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6890:	6e e1       	ldi	r22, 0x1E	; 30
    6892:	70 e0       	ldi	r23, 0x00	; 0
    6894:	80 e0       	ldi	r24, 0x00	; 0
    6896:	90 e0       	ldi	r25, 0x00	; 0
    6898:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    689c:	6c e2       	ldi	r22, 0x2C	; 44
    689e:	ce 01       	movw	r24, r28
    68a0:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    68a4:	6e e1       	ldi	r22, 0x1E	; 30
    68a6:	70 e0       	ldi	r23, 0x00	; 0
    68a8:	80 e0       	ldi	r24, 0x00	; 0
    68aa:	90 e0       	ldi	r25, 0x00	; 0
    68ac:	5b c2       	rjmp	.+1206   	; 0x6d64 <_ZN4UTFT7InitLCDEh+0x25a2>
    68ae:	61 e1       	ldi	r22, 0x11	; 17
    68b0:	ce 01       	movw	r24, r28
    68b2:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    68b6:	62 e3       	ldi	r22, 0x32	; 50
    68b8:	70 e0       	ldi	r23, 0x00	; 0
    68ba:	80 e0       	ldi	r24, 0x00	; 0
    68bc:	90 e0       	ldi	r25, 0x00	; 0
    68be:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    68c2:	62 ef       	ldi	r22, 0xF2	; 242
    68c4:	ce 01       	movw	r24, r28
    68c6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    68ca:	6c e1       	ldi	r22, 0x1C	; 28
    68cc:	ce 01       	movw	r24, r28
    68ce:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    68d2:	63 ea       	ldi	r22, 0xA3	; 163
    68d4:	ce 01       	movw	r24, r28
    68d6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    68da:	62 e3       	ldi	r22, 0x32	; 50
    68dc:	ce 01       	movw	r24, r28
    68de:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    68e2:	62 e0       	ldi	r22, 0x02	; 2
    68e4:	ce 01       	movw	r24, r28
    68e6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    68ea:	62 eb       	ldi	r22, 0xB2	; 178
    68ec:	ce 01       	movw	r24, r28
    68ee:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    68f2:	62 e1       	ldi	r22, 0x12	; 18
    68f4:	ce 01       	movw	r24, r28
    68f6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    68fa:	6f ef       	ldi	r22, 0xFF	; 255
    68fc:	ce 01       	movw	r24, r28
    68fe:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6902:	62 e1       	ldi	r22, 0x12	; 18
    6904:	ce 01       	movw	r24, r28
    6906:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    690a:	60 e0       	ldi	r22, 0x00	; 0
    690c:	ce 01       	movw	r24, r28
    690e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6912:	61 ef       	ldi	r22, 0xF1	; 241
    6914:	ce 01       	movw	r24, r28
    6916:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    691a:	66 e3       	ldi	r22, 0x36	; 54
    691c:	ce 01       	movw	r24, r28
    691e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6922:	64 ea       	ldi	r22, 0xA4	; 164
    6924:	ce 01       	movw	r24, r28
    6926:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    692a:	68 ef       	ldi	r22, 0xF8	; 248
    692c:	ce 01       	movw	r24, r28
    692e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6932:	61 e2       	ldi	r22, 0x21	; 33
    6934:	ce 01       	movw	r24, r28
    6936:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    693a:	64 e0       	ldi	r22, 0x04	; 4
    693c:	ce 01       	movw	r24, r28
    693e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6942:	69 ef       	ldi	r22, 0xF9	; 249
    6944:	ce 01       	movw	r24, r28
    6946:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    694a:	60 e0       	ldi	r22, 0x00	; 0
    694c:	ce 01       	movw	r24, r28
    694e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6952:	68 e0       	ldi	r22, 0x08	; 8
    6954:	ce 01       	movw	r24, r28
    6956:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    695a:	60 ec       	ldi	r22, 0xC0	; 192
    695c:	ce 01       	movw	r24, r28
    695e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6962:	6d e0       	ldi	r22, 0x0D	; 13
    6964:	ce 01       	movw	r24, r28
    6966:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    696a:	6d e0       	ldi	r22, 0x0D	; 13
    696c:	ce 01       	movw	r24, r28
    696e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6972:	61 ec       	ldi	r22, 0xC1	; 193
    6974:	ce 01       	movw	r24, r28
    6976:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    697a:	63 e4       	ldi	r22, 0x43	; 67
    697c:	ce 01       	movw	r24, r28
    697e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6982:	60 e0       	ldi	r22, 0x00	; 0
    6984:	ce 01       	movw	r24, r28
    6986:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    698a:	62 ec       	ldi	r22, 0xC2	; 194
    698c:	ce 01       	movw	r24, r28
    698e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6992:	60 e0       	ldi	r22, 0x00	; 0
    6994:	ce 01       	movw	r24, r28
    6996:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    699a:	65 ec       	ldi	r22, 0xC5	; 197
    699c:	ce 01       	movw	r24, r28
    699e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    69a2:	60 e0       	ldi	r22, 0x00	; 0
    69a4:	ce 01       	movw	r24, r28
    69a6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69aa:	68 e4       	ldi	r22, 0x48	; 72
    69ac:	ce 01       	movw	r24, r28
    69ae:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69b2:	66 eb       	ldi	r22, 0xB6	; 182
    69b4:	ce 01       	movw	r24, r28
    69b6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    69ba:	60 e0       	ldi	r22, 0x00	; 0
    69bc:	ce 01       	movw	r24, r28
    69be:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69c2:	62 e2       	ldi	r22, 0x22	; 34
    69c4:	ce 01       	movw	r24, r28
    69c6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69ca:	6b e3       	ldi	r22, 0x3B	; 59
    69cc:	ce 01       	movw	r24, r28
    69ce:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69d2:	60 ee       	ldi	r22, 0xE0	; 224
    69d4:	ce 01       	movw	r24, r28
    69d6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    69da:	6f e0       	ldi	r22, 0x0F	; 15
    69dc:	ce 01       	movw	r24, r28
    69de:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69e2:	64 e2       	ldi	r22, 0x24	; 36
    69e4:	ce 01       	movw	r24, r28
    69e6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69ea:	6c e1       	ldi	r22, 0x1C	; 28
    69ec:	ce 01       	movw	r24, r28
    69ee:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69f2:	6a e0       	ldi	r22, 0x0A	; 10
    69f4:	ce 01       	movw	r24, r28
    69f6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    69fa:	6f e0       	ldi	r22, 0x0F	; 15
    69fc:	ce 01       	movw	r24, r28
    69fe:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a02:	68 e0       	ldi	r22, 0x08	; 8
    6a04:	ce 01       	movw	r24, r28
    6a06:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a0a:	63 e4       	ldi	r22, 0x43	; 67
    6a0c:	ce 01       	movw	r24, r28
    6a0e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a12:	68 e8       	ldi	r22, 0x88	; 136
    6a14:	ce 01       	movw	r24, r28
    6a16:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a1a:	62 e3       	ldi	r22, 0x32	; 50
    6a1c:	ce 01       	movw	r24, r28
    6a1e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a22:	6f e0       	ldi	r22, 0x0F	; 15
    6a24:	ce 01       	movw	r24, r28
    6a26:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a2a:	60 e1       	ldi	r22, 0x10	; 16
    6a2c:	ce 01       	movw	r24, r28
    6a2e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a32:	66 e0       	ldi	r22, 0x06	; 6
    6a34:	ce 01       	movw	r24, r28
    6a36:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a3a:	6f e0       	ldi	r22, 0x0F	; 15
    6a3c:	ce 01       	movw	r24, r28
    6a3e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a42:	67 e0       	ldi	r22, 0x07	; 7
    6a44:	ce 01       	movw	r24, r28
    6a46:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a4a:	60 e0       	ldi	r22, 0x00	; 0
    6a4c:	ce 01       	movw	r24, r28
    6a4e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a52:	61 ee       	ldi	r22, 0xE1	; 225
    6a54:	ce 01       	movw	r24, r28
    6a56:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6a5a:	6f e0       	ldi	r22, 0x0F	; 15
    6a5c:	ce 01       	movw	r24, r28
    6a5e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a62:	68 e3       	ldi	r22, 0x38	; 56
    6a64:	ce 01       	movw	r24, r28
    6a66:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a6a:	60 e3       	ldi	r22, 0x30	; 48
    6a6c:	ce 01       	movw	r24, r28
    6a6e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a72:	69 e0       	ldi	r22, 0x09	; 9
    6a74:	ce 01       	movw	r24, r28
    6a76:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a7a:	6f e0       	ldi	r22, 0x0F	; 15
    6a7c:	ce 01       	movw	r24, r28
    6a7e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a82:	6f e0       	ldi	r22, 0x0F	; 15
    6a84:	ce 01       	movw	r24, r28
    6a86:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a8a:	6e e4       	ldi	r22, 0x4E	; 78
    6a8c:	ce 01       	movw	r24, r28
    6a8e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a92:	67 e7       	ldi	r22, 0x77	; 119
    6a94:	ce 01       	movw	r24, r28
    6a96:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6a9a:	6c e3       	ldi	r22, 0x3C	; 60
    6a9c:	ce 01       	movw	r24, r28
    6a9e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6aa2:	67 e0       	ldi	r22, 0x07	; 7
    6aa4:	ce 01       	movw	r24, r28
    6aa6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6aaa:	60 e1       	ldi	r22, 0x10	; 16
    6aac:	ce 01       	movw	r24, r28
    6aae:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6ab2:	65 e0       	ldi	r22, 0x05	; 5
    6ab4:	ce 01       	movw	r24, r28
    6ab6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6aba:	63 e2       	ldi	r22, 0x23	; 35
    6abc:	ce 01       	movw	r24, r28
    6abe:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6ac2:	6b e1       	ldi	r22, 0x1B	; 27
    6ac4:	ce 01       	movw	r24, r28
    6ac6:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6aca:	60 e0       	ldi	r22, 0x00	; 0
    6acc:	ce 01       	movw	r24, r28
    6ace:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6ad2:	60 e2       	ldi	r22, 0x20	; 32
    6ad4:	ce 01       	movw	r24, r28
    6ad6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6ada:	60 e0       	ldi	r22, 0x00	; 0
    6adc:	ce 01       	movw	r24, r28
    6ade:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6ae2:	66 e3       	ldi	r22, 0x36	; 54
    6ae4:	ce 01       	movw	r24, r28
    6ae6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6aea:	6a e0       	ldi	r22, 0x0A	; 10
    6aec:	ce 01       	movw	r24, r28
    6aee:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6af2:	6a e3       	ldi	r22, 0x3A	; 58
    6af4:	ce 01       	movw	r24, r28
    6af6:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6afa:	65 e5       	ldi	r22, 0x55	; 85
    6afc:	ce 01       	movw	r24, r28
    6afe:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b02:	6a e2       	ldi	r22, 0x2A	; 42
    6b04:	ce 01       	movw	r24, r28
    6b06:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6b0a:	60 e0       	ldi	r22, 0x00	; 0
    6b0c:	ce 01       	movw	r24, r28
    6b0e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b12:	60 e0       	ldi	r22, 0x00	; 0
    6b14:	ce 01       	movw	r24, r28
    6b16:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b1a:	61 e0       	ldi	r22, 0x01	; 1
    6b1c:	ce 01       	movw	r24, r28
    6b1e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b22:	6f ed       	ldi	r22, 0xDF	; 223
    6b24:	ce 01       	movw	r24, r28
    6b26:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b2a:	6b e2       	ldi	r22, 0x2B	; 43
    6b2c:	ce 01       	movw	r24, r28
    6b2e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6b32:	60 e0       	ldi	r22, 0x00	; 0
    6b34:	ce 01       	movw	r24, r28
    6b36:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b3a:	60 e0       	ldi	r22, 0x00	; 0
    6b3c:	ce 01       	movw	r24, r28
    6b3e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b42:	61 e0       	ldi	r22, 0x01	; 1
    6b44:	ce 01       	movw	r24, r28
    6b46:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b4a:	6f e3       	ldi	r22, 0x3F	; 63
    6b4c:	ce 01       	movw	r24, r28
    6b4e:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6b52:	62 e3       	ldi	r22, 0x32	; 50
    6b54:	70 e0       	ldi	r23, 0x00	; 0
    6b56:	80 e0       	ldi	r24, 0x00	; 0
    6b58:	90 e0       	ldi	r25, 0x00	; 0
    6b5a:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    6b5e:	69 e2       	ldi	r22, 0x29	; 41
    6b60:	ce 01       	movw	r24, r28
    6b62:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6b66:	6c e2       	ldi	r22, 0x2C	; 44
    6b68:	0c 94 db 27 	jmp	0x4fb6	; 0x4fb6 <_ZN4UTFT7InitLCDEh+0x7f4>
    6b6c:	8c 81       	ldd	r24, Y+4	; 0x04
    6b6e:	81 30       	cpi	r24, 0x01	; 1
    6b70:	11 f4       	brne	.+4      	; 0x6b76 <_ZN4UTFT7InitLCDEh+0x23b4>
    6b72:	1c 82       	std	Y+4, r1	; 0x04
    6b74:	02 c0       	rjmp	.+4      	; 0x6b7a <_ZN4UTFT7InitLCDEh+0x23b8>
    6b76:	81 e0       	ldi	r24, 0x01	; 1
    6b78:	8c 83       	std	Y+4, r24	; 0x04
    6b7a:	6f e0       	ldi	r22, 0x0F	; 15
    6b7c:	ce 01       	movw	r24, r28
    6b7e:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6b82:	40 e1       	ldi	r20, 0x10	; 16
    6b84:	50 e0       	ldi	r21, 0x00	; 0
    6b86:	61 e0       	ldi	r22, 0x01	; 1
    6b88:	ce 01       	movw	r24, r28
    6b8a:	0e 94 91 22 	call	0x4522	; 0x4522 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6b8e:	6f e0       	ldi	r22, 0x0F	; 15
    6b90:	0c 94 db 27 	jmp	0x4fb6	; 0x4fb6 <_ZN4UTFT7InitLCDEh+0x7f4>
    6b94:	69 eb       	ldi	r22, 0xB9	; 185
    6b96:	ce 01       	movw	r24, r28
    6b98:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6b9c:	6f ef       	ldi	r22, 0xFF	; 255
    6b9e:	ce 01       	movw	r24, r28
    6ba0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6ba4:	63 e8       	ldi	r22, 0x83	; 131
    6ba6:	ce 01       	movw	r24, r28
    6ba8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6bac:	63 e5       	ldi	r22, 0x53	; 83
    6bae:	ce 01       	movw	r24, r28
    6bb0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6bb4:	60 eb       	ldi	r22, 0xB0	; 176
    6bb6:	ce 01       	movw	r24, r28
    6bb8:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6bbc:	6c e3       	ldi	r22, 0x3C	; 60
    6bbe:	ce 01       	movw	r24, r28
    6bc0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6bc4:	61 e0       	ldi	r22, 0x01	; 1
    6bc6:	ce 01       	movw	r24, r28
    6bc8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6bcc:	66 eb       	ldi	r22, 0xB6	; 182
    6bce:	ce 01       	movw	r24, r28
    6bd0:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6bd4:	64 e9       	ldi	r22, 0x94	; 148
    6bd6:	ce 01       	movw	r24, r28
    6bd8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6bdc:	6c e6       	ldi	r22, 0x6C	; 108
    6bde:	ce 01       	movw	r24, r28
    6be0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6be4:	60 e5       	ldi	r22, 0x50	; 80
    6be6:	ce 01       	movw	r24, r28
    6be8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6bec:	61 eb       	ldi	r22, 0xB1	; 177
    6bee:	ce 01       	movw	r24, r28
    6bf0:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6bf4:	60 e0       	ldi	r22, 0x00	; 0
    6bf6:	ce 01       	movw	r24, r28
    6bf8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6bfc:	61 e0       	ldi	r22, 0x01	; 1
    6bfe:	ce 01       	movw	r24, r28
    6c00:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c04:	6b e1       	ldi	r22, 0x1B	; 27
    6c06:	ce 01       	movw	r24, r28
    6c08:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c0c:	63 e0       	ldi	r22, 0x03	; 3
    6c0e:	ce 01       	movw	r24, r28
    6c10:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c14:	61 e0       	ldi	r22, 0x01	; 1
    6c16:	ce 01       	movw	r24, r28
    6c18:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c1c:	68 e0       	ldi	r22, 0x08	; 8
    6c1e:	ce 01       	movw	r24, r28
    6c20:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c24:	67 e7       	ldi	r22, 0x77	; 119
    6c26:	ce 01       	movw	r24, r28
    6c28:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c2c:	69 e8       	ldi	r22, 0x89	; 137
    6c2e:	ce 01       	movw	r24, r28
    6c30:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c34:	60 ee       	ldi	r22, 0xE0	; 224
    6c36:	ce 01       	movw	r24, r28
    6c38:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6c3c:	60 e5       	ldi	r22, 0x50	; 80
    6c3e:	ce 01       	movw	r24, r28
    6c40:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c44:	67 e7       	ldi	r22, 0x77	; 119
    6c46:	ce 01       	movw	r24, r28
    6c48:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c4c:	60 e4       	ldi	r22, 0x40	; 64
    6c4e:	ce 01       	movw	r24, r28
    6c50:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c54:	68 e0       	ldi	r22, 0x08	; 8
    6c56:	ce 01       	movw	r24, r28
    6c58:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c5c:	6f eb       	ldi	r22, 0xBF	; 191
    6c5e:	ce 01       	movw	r24, r28
    6c60:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c64:	60 e0       	ldi	r22, 0x00	; 0
    6c66:	ce 01       	movw	r24, r28
    6c68:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c6c:	63 e0       	ldi	r22, 0x03	; 3
    6c6e:	ce 01       	movw	r24, r28
    6c70:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c74:	6f e0       	ldi	r22, 0x0F	; 15
    6c76:	ce 01       	movw	r24, r28
    6c78:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c7c:	60 e0       	ldi	r22, 0x00	; 0
    6c7e:	ce 01       	movw	r24, r28
    6c80:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c84:	61 e0       	ldi	r22, 0x01	; 1
    6c86:	ce 01       	movw	r24, r28
    6c88:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c8c:	63 e7       	ldi	r22, 0x73	; 115
    6c8e:	ce 01       	movw	r24, r28
    6c90:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c94:	60 e0       	ldi	r22, 0x00	; 0
    6c96:	ce 01       	movw	r24, r28
    6c98:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6c9c:	62 e7       	ldi	r22, 0x72	; 114
    6c9e:	ce 01       	movw	r24, r28
    6ca0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6ca4:	63 e0       	ldi	r22, 0x03	; 3
    6ca6:	ce 01       	movw	r24, r28
    6ca8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6cac:	60 eb       	ldi	r22, 0xB0	; 176
    6cae:	ce 01       	movw	r24, r28
    6cb0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6cb4:	6f e0       	ldi	r22, 0x0F	; 15
    6cb6:	ce 01       	movw	r24, r28
    6cb8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6cbc:	68 e0       	ldi	r22, 0x08	; 8
    6cbe:	ce 01       	movw	r24, r28
    6cc0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6cc4:	60 e0       	ldi	r22, 0x00	; 0
    6cc6:	ce 01       	movw	r24, r28
    6cc8:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6ccc:	6f e0       	ldi	r22, 0x0F	; 15
    6cce:	ce 01       	movw	r24, r28
    6cd0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6cd4:	6a e3       	ldi	r22, 0x3A	; 58
    6cd6:	ce 01       	movw	r24, r28
    6cd8:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6cdc:	65 e0       	ldi	r22, 0x05	; 5
    6cde:	ce 01       	movw	r24, r28
    6ce0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6ce4:	66 e3       	ldi	r22, 0x36	; 54
    6ce6:	ce 01       	movw	r24, r28
    6ce8:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6cec:	60 ec       	ldi	r22, 0xC0	; 192
    6cee:	ce 01       	movw	r24, r28
    6cf0:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6cf4:	61 e1       	ldi	r22, 0x11	; 17
    6cf6:	ce 01       	movw	r24, r28
    6cf8:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6cfc:	66 e9       	ldi	r22, 0x96	; 150
    6cfe:	70 e0       	ldi	r23, 0x00	; 0
    6d00:	80 e0       	ldi	r24, 0x00	; 0
    6d02:	90 e0       	ldi	r25, 0x00	; 0
    6d04:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    6d08:	69 e2       	ldi	r22, 0x29	; 41
    6d0a:	ce 01       	movw	r24, r28
    6d0c:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6d10:	66 e9       	ldi	r22, 0x96	; 150
    6d12:	70 e0       	ldi	r23, 0x00	; 0
    6d14:	80 e0       	ldi	r24, 0x00	; 0
    6d16:	90 e0       	ldi	r25, 0x00	; 0
    6d18:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    6d1c:	6d e2       	ldi	r22, 0x2D	; 45
    6d1e:	ce 01       	movw	r24, r28
    6d20:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6d24:	10 e0       	ldi	r17, 0x00	; 0
    6d26:	61 2f       	mov	r22, r17
    6d28:	ce 01       	movw	r24, r28
    6d2a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6d2e:	1e 5f       	subi	r17, 0xFE	; 254
    6d30:	10 34       	cpi	r17, 0x40	; 64
    6d32:	c9 f7       	brne	.-14     	; 0x6d26 <_ZN4UTFT7InitLCDEh+0x2564>
    6d34:	10 e0       	ldi	r17, 0x00	; 0
    6d36:	61 2f       	mov	r22, r17
    6d38:	ce 01       	movw	r24, r28
    6d3a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6d3e:	1f 5f       	subi	r17, 0xFF	; 255
    6d40:	10 34       	cpi	r17, 0x40	; 64
    6d42:	c9 f7       	brne	.-14     	; 0x6d36 <_ZN4UTFT7InitLCDEh+0x2574>
    6d44:	10 e0       	ldi	r17, 0x00	; 0
    6d46:	61 2f       	mov	r22, r17
    6d48:	ce 01       	movw	r24, r28
    6d4a:	0e 94 79 22 	call	0x44f2	; 0x44f2 <_ZN4UTFT14LCD_Write_DATAEc>
    6d4e:	1e 5f       	subi	r17, 0xFE	; 254
    6d50:	10 34       	cpi	r17, 0x40	; 64
    6d52:	c9 f7       	brne	.-14     	; 0x6d46 <_ZN4UTFT7InitLCDEh+0x2584>
    6d54:	6c e2       	ldi	r22, 0x2C	; 44
    6d56:	ce 01       	movw	r24, r28
    6d58:	0e 94 3d 22 	call	0x447a	; 0x447a <_ZN4UTFT13LCD_Write_COMEc>
    6d5c:	66 e9       	ldi	r22, 0x96	; 150
    6d5e:	70 e0       	ldi	r23, 0x00	; 0
    6d60:	80 e0       	ldi	r24, 0x00	; 0
    6d62:	90 e0       	ldi	r25, 0x00	; 0
    6d64:	0e 94 86 44 	call	0x890c	; 0x890c <delay>
    6d68:	ec 89       	ldd	r30, Y+20	; 0x14
    6d6a:	fd 89       	ldd	r31, Y+21	; 0x15
    6d6c:	90 81       	ld	r25, Z
    6d6e:	88 a1       	ldd	r24, Y+32	; 0x20
    6d70:	89 2b       	or	r24, r25
    6d72:	80 83       	st	Z, r24
    6d74:	8f ef       	ldi	r24, 0xFF	; 255
    6d76:	88 83       	st	Y, r24
    6d78:	89 83       	std	Y+1, r24	; 0x01
    6d7a:	1a 82       	std	Y+2, r1	; 0x02
    6d7c:	1b 82       	std	Y+3, r1	; 0x03
    6d7e:	18 aa       	std	Y+48, r1	; 0x30
    6d80:	1b a6       	std	Y+43, r1	; 0x2b
    6d82:	1a a6       	std	Y+42, r1	; 0x2a
    6d84:	df 91       	pop	r29
    6d86:	cf 91       	pop	r28
    6d88:	1f 91       	pop	r17
    6d8a:	0f 91       	pop	r16
    6d8c:	08 95       	ret

00006d8e <_ZN4UTFT5clrXYEv>:
    6d8e:	0f 93       	push	r16
    6d90:	1f 93       	push	r17
    6d92:	fc 01       	movw	r30, r24
    6d94:	64 81       	ldd	r22, Z+4	; 0x04
    6d96:	21 85       	ldd	r18, Z+9	; 0x09
    6d98:	32 85       	ldd	r19, Z+10	; 0x0a
    6d9a:	45 81       	ldd	r20, Z+5	; 0x05
    6d9c:	56 81       	ldd	r21, Z+6	; 0x06
    6d9e:	61 11       	cpse	r22, r1
    6da0:	03 c0       	rjmp	.+6      	; 0x6da8 <_ZN4UTFT5clrXYEv+0x1a>
    6da2:	89 01       	movw	r16, r18
    6da4:	9a 01       	movw	r18, r20
    6da6:	01 c0       	rjmp	.+2      	; 0x6daa <_ZN4UTFT5clrXYEv+0x1c>
    6da8:	8a 01       	movw	r16, r20
    6daa:	40 e0       	ldi	r20, 0x00	; 0
    6dac:	50 e0       	ldi	r21, 0x00	; 0
    6dae:	60 e0       	ldi	r22, 0x00	; 0
    6db0:	70 e0       	ldi	r23, 0x00	; 0
    6db2:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
    6db6:	1f 91       	pop	r17
    6db8:	0f 91       	pop	r16
    6dba:	08 95       	ret

00006dbc <_ZN4UTFT6clrScrEv>:
    6dbc:	cf 92       	push	r12
    6dbe:	df 92       	push	r13
    6dc0:	ef 92       	push	r14
    6dc2:	ff 92       	push	r15
    6dc4:	0f 93       	push	r16
    6dc6:	1f 93       	push	r17
    6dc8:	cf 93       	push	r28
    6dca:	df 93       	push	r29
    6dcc:	ec 01       	movw	r28, r24
    6dce:	ec 89       	ldd	r30, Y+20	; 0x14
    6dd0:	fd 89       	ldd	r31, Y+21	; 0x15
    6dd2:	90 81       	ld	r25, Z
    6dd4:	88 a1       	ldd	r24, Y+32	; 0x20
    6dd6:	80 95       	com	r24
    6dd8:	89 23       	and	r24, r25
    6dda:	80 83       	st	Z, r24
    6ddc:	ce 01       	movw	r24, r28
    6dde:	d7 df       	rcall	.-82     	; 0x6d8e <_ZN4UTFT5clrXYEv>
    6de0:	8e 85       	ldd	r24, Y+14	; 0x0e
    6de2:	81 30       	cpi	r24, 0x01	; 1
    6de4:	31 f0       	breq	.+12     	; 0x6df2 <_ZN4UTFT6clrScrEv+0x36>
    6de6:	e8 89       	ldd	r30, Y+16	; 0x10
    6de8:	f9 89       	ldd	r31, Y+17	; 0x11
    6dea:	90 81       	ld	r25, Z
    6dec:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6dee:	89 2b       	or	r24, r25
    6df0:	80 83       	st	Z, r24
    6df2:	ee 85       	ldd	r30, Y+14	; 0x0e
    6df4:	4d 81       	ldd	r20, Y+5	; 0x05
    6df6:	5e 81       	ldd	r21, Y+6	; 0x06
    6df8:	6f 81       	ldd	r22, Y+7	; 0x07
    6dfa:	78 85       	ldd	r23, Y+8	; 0x08
    6dfc:	89 85       	ldd	r24, Y+9	; 0x09
    6dfe:	9a 85       	ldd	r25, Y+10	; 0x0a
    6e00:	ab 85       	ldd	r26, Y+11	; 0x0b
    6e02:	bc 85       	ldd	r27, Y+12	; 0x0c
    6e04:	e0 31       	cpi	r30, 0x10	; 16
    6e06:	c1 f4       	brne	.+48     	; 0x6e38 <_ZN4UTFT6clrScrEv+0x7c>
    6e08:	9a 01       	movw	r18, r20
    6e0a:	ab 01       	movw	r20, r22
    6e0c:	2f 5f       	subi	r18, 0xFF	; 255
    6e0e:	3f 4f       	sbci	r19, 0xFF	; 255
    6e10:	4f 4f       	sbci	r20, 0xFF	; 255
    6e12:	5f 4f       	sbci	r21, 0xFF	; 255
    6e14:	bc 01       	movw	r22, r24
    6e16:	cd 01       	movw	r24, r26
    6e18:	6f 5f       	subi	r22, 0xFF	; 255
    6e1a:	7f 4f       	sbci	r23, 0xFF	; 255
    6e1c:	8f 4f       	sbci	r24, 0xFF	; 255
    6e1e:	9f 4f       	sbci	r25, 0xFF	; 255
    6e20:	0e 94 cf 46 	call	0x8d9e	; 0x8d9e <__mulsi3>
    6e24:	8b 01       	movw	r16, r22
    6e26:	9c 01       	movw	r18, r24
    6e28:	40 e0       	ldi	r20, 0x00	; 0
    6e2a:	50 e0       	ldi	r21, 0x00	; 0
    6e2c:	60 e0       	ldi	r22, 0x00	; 0
    6e2e:	70 e0       	ldi	r23, 0x00	; 0
    6e30:	ce 01       	movw	r24, r28
    6e32:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <_ZN4UTFT13_fast_fill_16Eiil>
    6e36:	4f c0       	rjmp	.+158    	; 0x6ed6 <_ZN4UTFT6clrScrEv+0x11a>
    6e38:	e8 30       	cpi	r30, 0x08	; 8
    6e3a:	21 f0       	breq	.+8      	; 0x6e44 <_ZN4UTFT6clrScrEv+0x88>
    6e3c:	c1 2c       	mov	r12, r1
    6e3e:	d1 2c       	mov	r13, r1
    6e40:	76 01       	movw	r14, r12
    6e42:	23 c0       	rjmp	.+70     	; 0x6e8a <_ZN4UTFT6clrScrEv+0xce>
    6e44:	9a 01       	movw	r18, r20
    6e46:	ab 01       	movw	r20, r22
    6e48:	2f 5f       	subi	r18, 0xFF	; 255
    6e4a:	3f 4f       	sbci	r19, 0xFF	; 255
    6e4c:	4f 4f       	sbci	r20, 0xFF	; 255
    6e4e:	5f 4f       	sbci	r21, 0xFF	; 255
    6e50:	bc 01       	movw	r22, r24
    6e52:	cd 01       	movw	r24, r26
    6e54:	6f 5f       	subi	r22, 0xFF	; 255
    6e56:	7f 4f       	sbci	r23, 0xFF	; 255
    6e58:	8f 4f       	sbci	r24, 0xFF	; 255
    6e5a:	9f 4f       	sbci	r25, 0xFF	; 255
    6e5c:	0e 94 cf 46 	call	0x8d9e	; 0x8d9e <__mulsi3>
    6e60:	9b 01       	movw	r18, r22
    6e62:	ac 01       	movw	r20, r24
    6e64:	60 e0       	ldi	r22, 0x00	; 0
    6e66:	70 e0       	ldi	r23, 0x00	; 0
    6e68:	ce 01       	movw	r24, r28
    6e6a:	0e 94 87 1e 	call	0x3d0e	; 0x3d0e <_ZN4UTFT12_fast_fill_8Eil>
    6e6e:	33 c0       	rjmp	.+102    	; 0x6ed6 <_ZN4UTFT6clrScrEv+0x11a>
    6e70:	2e 85       	ldd	r18, Y+14	; 0x0e
    6e72:	21 30       	cpi	r18, 0x01	; 1
    6e74:	31 f1       	breq	.+76     	; 0x6ec2 <_ZN4UTFT6clrScrEv+0x106>
    6e76:	40 e0       	ldi	r20, 0x00	; 0
    6e78:	60 e0       	ldi	r22, 0x00	; 0
    6e7a:	ce 01       	movw	r24, r28
    6e7c:	0e 94 ae 1b 	call	0x375c	; 0x375c <_ZN4UTFT12LCD_Writ_BusEcch>
    6e80:	8f ef       	ldi	r24, 0xFF	; 255
    6e82:	c8 1a       	sub	r12, r24
    6e84:	d8 0a       	sbc	r13, r24
    6e86:	e8 0a       	sbc	r14, r24
    6e88:	f8 0a       	sbc	r15, r24
    6e8a:	8d 81       	ldd	r24, Y+5	; 0x05
    6e8c:	9e 81       	ldd	r25, Y+6	; 0x06
    6e8e:	af 81       	ldd	r26, Y+7	; 0x07
    6e90:	b8 85       	ldd	r27, Y+8	; 0x08
    6e92:	9c 01       	movw	r18, r24
    6e94:	ad 01       	movw	r20, r26
    6e96:	2f 5f       	subi	r18, 0xFF	; 255
    6e98:	3f 4f       	sbci	r19, 0xFF	; 255
    6e9a:	4f 4f       	sbci	r20, 0xFF	; 255
    6e9c:	5f 4f       	sbci	r21, 0xFF	; 255
    6e9e:	89 85       	ldd	r24, Y+9	; 0x09
    6ea0:	9a 85       	ldd	r25, Y+10	; 0x0a
    6ea2:	ab 85       	ldd	r26, Y+11	; 0x0b
    6ea4:	bc 85       	ldd	r27, Y+12	; 0x0c
    6ea6:	bc 01       	movw	r22, r24
    6ea8:	cd 01       	movw	r24, r26
    6eaa:	6f 5f       	subi	r22, 0xFF	; 255
    6eac:	7f 4f       	sbci	r23, 0xFF	; 255
    6eae:	8f 4f       	sbci	r24, 0xFF	; 255
    6eb0:	9f 4f       	sbci	r25, 0xFF	; 255
    6eb2:	0e 94 cf 46 	call	0x8d9e	; 0x8d9e <__mulsi3>
    6eb6:	c6 16       	cp	r12, r22
    6eb8:	d7 06       	cpc	r13, r23
    6eba:	e8 06       	cpc	r14, r24
    6ebc:	f9 06       	cpc	r15, r25
    6ebe:	c4 f2       	brlt	.-80     	; 0x6e70 <_ZN4UTFT6clrScrEv+0xb4>
    6ec0:	0a c0       	rjmp	.+20     	; 0x6ed6 <_ZN4UTFT6clrScrEv+0x11a>
    6ec2:	21 e0       	ldi	r18, 0x01	; 1
    6ec4:	40 e0       	ldi	r20, 0x00	; 0
    6ec6:	61 e0       	ldi	r22, 0x01	; 1
    6ec8:	ce 01       	movw	r24, r28
    6eca:	0e 94 ae 1b 	call	0x375c	; 0x375c <_ZN4UTFT12LCD_Writ_BusEcch>
    6ece:	2e 85       	ldd	r18, Y+14	; 0x0e
    6ed0:	40 e0       	ldi	r20, 0x00	; 0
    6ed2:	61 e0       	ldi	r22, 0x01	; 1
    6ed4:	d2 cf       	rjmp	.-92     	; 0x6e7a <_ZN4UTFT6clrScrEv+0xbe>
    6ed6:	ec 89       	ldd	r30, Y+20	; 0x14
    6ed8:	fd 89       	ldd	r31, Y+21	; 0x15
    6eda:	90 81       	ld	r25, Z
    6edc:	88 a1       	ldd	r24, Y+32	; 0x20
    6ede:	89 2b       	or	r24, r25
    6ee0:	80 83       	st	Z, r24
    6ee2:	df 91       	pop	r29
    6ee4:	cf 91       	pop	r28
    6ee6:	1f 91       	pop	r17
    6ee8:	0f 91       	pop	r16
    6eea:	ff 90       	pop	r15
    6eec:	ef 90       	pop	r14
    6eee:	df 90       	pop	r13
    6ef0:	cf 90       	pop	r12
    6ef2:	08 95       	ret

00006ef4 <_ZN4UTFT8setColorEj>:
    6ef4:	fc 01       	movw	r30, r24
    6ef6:	70 83       	st	Z, r23
    6ef8:	61 83       	std	Z+1, r22	; 0x01
    6efa:	08 95       	ret

00006efc <_ZN4UTFT12setBackColorEm>:
    6efc:	fc 01       	movw	r30, r24
    6efe:	4f 3f       	cpi	r20, 0xFF	; 255
    6f00:	8f ef       	ldi	r24, 0xFF	; 255
    6f02:	58 07       	cpc	r21, r24
    6f04:	68 07       	cpc	r22, r24
    6f06:	78 07       	cpc	r23, r24
    6f08:	19 f4       	brne	.+6      	; 0x6f10 <_ZN4UTFT12setBackColorEm+0x14>
    6f0a:	81 e0       	ldi	r24, 0x01	; 1
    6f0c:	80 ab       	std	Z+48, r24	; 0x30
    6f0e:	08 95       	ret
    6f10:	52 83       	std	Z+2, r21	; 0x02
    6f12:	43 83       	std	Z+3, r20	; 0x03
    6f14:	10 aa       	std	Z+48, r1	; 0x30
    6f16:	08 95       	ret

00006f18 <_ZN4UTFT8setPixelEj>:
    6f18:	46 2f       	mov	r20, r22
    6f1a:	67 2f       	mov	r22, r23
    6f1c:	0c 94 55 22 	jmp	0x44aa	; 0x44aa <_ZN4UTFT14LCD_Write_DATAEcc>

00006f20 <_ZN4UTFT9drawHLineEiii>:
    6f20:	ef 92       	push	r14
    6f22:	ff 92       	push	r15
    6f24:	0f 93       	push	r16
    6f26:	1f 93       	push	r17
    6f28:	cf 93       	push	r28
    6f2a:	df 93       	push	r29
    6f2c:	ec 01       	movw	r28, r24
    6f2e:	79 01       	movw	r14, r18
    6f30:	37 ff       	sbrs	r19, 7
    6f32:	05 c0       	rjmp	.+10     	; 0x6f3e <_ZN4UTFT9drawHLineEiii+0x1e>
    6f34:	62 0f       	add	r22, r18
    6f36:	73 1f       	adc	r23, r19
    6f38:	f1 94       	neg	r15
    6f3a:	e1 94       	neg	r14
    6f3c:	f1 08       	sbc	r15, r1
    6f3e:	ec 89       	ldd	r30, Y+20	; 0x14
    6f40:	fd 89       	ldd	r31, Y+21	; 0x15
    6f42:	90 81       	ld	r25, Z
    6f44:	88 a1       	ldd	r24, Y+32	; 0x20
    6f46:	80 95       	com	r24
    6f48:	89 23       	and	r24, r25
    6f4a:	80 83       	st	Z, r24
    6f4c:	9b 01       	movw	r18, r22
    6f4e:	2e 0d       	add	r18, r14
    6f50:	3f 1d       	adc	r19, r15
    6f52:	8a 01       	movw	r16, r20
    6f54:	ce 01       	movw	r24, r28
    6f56:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
    6f5a:	8e 85       	ldd	r24, Y+14	; 0x0e
    6f5c:	80 31       	cpi	r24, 0x10	; 16
    6f5e:	91 f4       	brne	.+36     	; 0x6f84 <_ZN4UTFT9drawHLineEiii+0x64>
    6f60:	e8 89       	ldd	r30, Y+16	; 0x10
    6f62:	f9 89       	ldd	r31, Y+17	; 0x11
    6f64:	90 81       	ld	r25, Z
    6f66:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6f68:	89 2b       	or	r24, r25
    6f6a:	80 83       	st	Z, r24
    6f6c:	87 01       	movw	r16, r14
    6f6e:	ff 0c       	add	r15, r15
    6f70:	22 0b       	sbc	r18, r18
    6f72:	33 0b       	sbc	r19, r19
    6f74:	49 81       	ldd	r20, Y+1	; 0x01
    6f76:	50 e0       	ldi	r21, 0x00	; 0
    6f78:	68 81       	ld	r22, Y
    6f7a:	70 e0       	ldi	r23, 0x00	; 0
    6f7c:	ce 01       	movw	r24, r28
    6f7e:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <_ZN4UTFT13_fast_fill_16Eiil>
    6f82:	22 c0       	rjmp	.+68     	; 0x6fc8 <_ZN4UTFT9drawHLineEiii+0xa8>
    6f84:	88 30       	cpi	r24, 0x08	; 8
    6f86:	a1 f4       	brne	.+40     	; 0x6fb0 <_ZN4UTFT9drawHLineEiii+0x90>
    6f88:	98 81       	ld	r25, Y
    6f8a:	89 81       	ldd	r24, Y+1	; 0x01
    6f8c:	98 13       	cpse	r25, r24
    6f8e:	10 c0       	rjmp	.+32     	; 0x6fb0 <_ZN4UTFT9drawHLineEiii+0x90>
    6f90:	e8 89       	ldd	r30, Y+16	; 0x10
    6f92:	f9 89       	ldd	r31, Y+17	; 0x11
    6f94:	90 81       	ld	r25, Z
    6f96:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6f98:	89 2b       	or	r24, r25
    6f9a:	80 83       	st	Z, r24
    6f9c:	97 01       	movw	r18, r14
    6f9e:	ff 0c       	add	r15, r15
    6fa0:	44 0b       	sbc	r20, r20
    6fa2:	55 0b       	sbc	r21, r21
    6fa4:	68 81       	ld	r22, Y
    6fa6:	70 e0       	ldi	r23, 0x00	; 0
    6fa8:	ce 01       	movw	r24, r28
    6faa:	0e 94 87 1e 	call	0x3d0e	; 0x3d0e <_ZN4UTFT12_fast_fill_8Eil>
    6fae:	0c c0       	rjmp	.+24     	; 0x6fc8 <_ZN4UTFT9drawHLineEiii+0xa8>
    6fb0:	00 e0       	ldi	r16, 0x00	; 0
    6fb2:	10 e0       	ldi	r17, 0x00	; 0
    6fb4:	49 81       	ldd	r20, Y+1	; 0x01
    6fb6:	68 81       	ld	r22, Y
    6fb8:	ce 01       	movw	r24, r28
    6fba:	0e 94 55 22 	call	0x44aa	; 0x44aa <_ZN4UTFT14LCD_Write_DATAEcc>
    6fbe:	0f 5f       	subi	r16, 0xFF	; 255
    6fc0:	1f 4f       	sbci	r17, 0xFF	; 255
    6fc2:	e0 16       	cp	r14, r16
    6fc4:	f1 06       	cpc	r15, r17
    6fc6:	b4 f7       	brge	.-20     	; 0x6fb4 <_ZN4UTFT9drawHLineEiii+0x94>
    6fc8:	ec 89       	ldd	r30, Y+20	; 0x14
    6fca:	fd 89       	ldd	r31, Y+21	; 0x15
    6fcc:	90 81       	ld	r25, Z
    6fce:	88 a1       	ldd	r24, Y+32	; 0x20
    6fd0:	89 2b       	or	r24, r25
    6fd2:	80 83       	st	Z, r24
    6fd4:	ce 01       	movw	r24, r28
    6fd6:	df 91       	pop	r29
    6fd8:	cf 91       	pop	r28
    6fda:	1f 91       	pop	r17
    6fdc:	0f 91       	pop	r16
    6fde:	ff 90       	pop	r15
    6fe0:	ef 90       	pop	r14
    6fe2:	d5 ce       	rjmp	.-598    	; 0x6d8e <_ZN4UTFT5clrXYEv>

00006fe4 <_ZN4UTFT9drawVLineEiii>:
    6fe4:	ef 92       	push	r14
    6fe6:	ff 92       	push	r15
    6fe8:	0f 93       	push	r16
    6fea:	1f 93       	push	r17
    6fec:	cf 93       	push	r28
    6fee:	df 93       	push	r29
    6ff0:	ec 01       	movw	r28, r24
    6ff2:	79 01       	movw	r14, r18
    6ff4:	37 ff       	sbrs	r19, 7
    6ff6:	05 c0       	rjmp	.+10     	; 0x7002 <_ZN4UTFT9drawVLineEiii+0x1e>
    6ff8:	42 0f       	add	r20, r18
    6ffa:	53 1f       	adc	r21, r19
    6ffc:	f1 94       	neg	r15
    6ffe:	e1 94       	neg	r14
    7000:	f1 08       	sbc	r15, r1
    7002:	ec 89       	ldd	r30, Y+20	; 0x14
    7004:	fd 89       	ldd	r31, Y+21	; 0x15
    7006:	90 81       	ld	r25, Z
    7008:	88 a1       	ldd	r24, Y+32	; 0x20
    700a:	80 95       	com	r24
    700c:	89 23       	and	r24, r25
    700e:	80 83       	st	Z, r24
    7010:	8a 01       	movw	r16, r20
    7012:	0e 0d       	add	r16, r14
    7014:	1f 1d       	adc	r17, r15
    7016:	9b 01       	movw	r18, r22
    7018:	ce 01       	movw	r24, r28
    701a:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
    701e:	8e 85       	ldd	r24, Y+14	; 0x0e
    7020:	80 31       	cpi	r24, 0x10	; 16
    7022:	91 f4       	brne	.+36     	; 0x7048 <_ZN4UTFT9drawVLineEiii+0x64>
    7024:	e8 89       	ldd	r30, Y+16	; 0x10
    7026:	f9 89       	ldd	r31, Y+17	; 0x11
    7028:	90 81       	ld	r25, Z
    702a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    702c:	89 2b       	or	r24, r25
    702e:	80 83       	st	Z, r24
    7030:	87 01       	movw	r16, r14
    7032:	ff 0c       	add	r15, r15
    7034:	22 0b       	sbc	r18, r18
    7036:	33 0b       	sbc	r19, r19
    7038:	49 81       	ldd	r20, Y+1	; 0x01
    703a:	50 e0       	ldi	r21, 0x00	; 0
    703c:	68 81       	ld	r22, Y
    703e:	70 e0       	ldi	r23, 0x00	; 0
    7040:	ce 01       	movw	r24, r28
    7042:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <_ZN4UTFT13_fast_fill_16Eiil>
    7046:	22 c0       	rjmp	.+68     	; 0x708c <_ZN4UTFT9drawVLineEiii+0xa8>
    7048:	88 30       	cpi	r24, 0x08	; 8
    704a:	a1 f4       	brne	.+40     	; 0x7074 <_ZN4UTFT9drawVLineEiii+0x90>
    704c:	98 81       	ld	r25, Y
    704e:	89 81       	ldd	r24, Y+1	; 0x01
    7050:	98 13       	cpse	r25, r24
    7052:	10 c0       	rjmp	.+32     	; 0x7074 <_ZN4UTFT9drawVLineEiii+0x90>
    7054:	e8 89       	ldd	r30, Y+16	; 0x10
    7056:	f9 89       	ldd	r31, Y+17	; 0x11
    7058:	90 81       	ld	r25, Z
    705a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    705c:	89 2b       	or	r24, r25
    705e:	80 83       	st	Z, r24
    7060:	97 01       	movw	r18, r14
    7062:	ff 0c       	add	r15, r15
    7064:	44 0b       	sbc	r20, r20
    7066:	55 0b       	sbc	r21, r21
    7068:	68 81       	ld	r22, Y
    706a:	70 e0       	ldi	r23, 0x00	; 0
    706c:	ce 01       	movw	r24, r28
    706e:	0e 94 87 1e 	call	0x3d0e	; 0x3d0e <_ZN4UTFT12_fast_fill_8Eil>
    7072:	0c c0       	rjmp	.+24     	; 0x708c <_ZN4UTFT9drawVLineEiii+0xa8>
    7074:	00 e0       	ldi	r16, 0x00	; 0
    7076:	10 e0       	ldi	r17, 0x00	; 0
    7078:	49 81       	ldd	r20, Y+1	; 0x01
    707a:	68 81       	ld	r22, Y
    707c:	ce 01       	movw	r24, r28
    707e:	0e 94 55 22 	call	0x44aa	; 0x44aa <_ZN4UTFT14LCD_Write_DATAEcc>
    7082:	0f 5f       	subi	r16, 0xFF	; 255
    7084:	1f 4f       	sbci	r17, 0xFF	; 255
    7086:	e0 16       	cp	r14, r16
    7088:	f1 06       	cpc	r15, r17
    708a:	b4 f7       	brge	.-20     	; 0x7078 <_ZN4UTFT9drawVLineEiii+0x94>
    708c:	ec 89       	ldd	r30, Y+20	; 0x14
    708e:	fd 89       	ldd	r31, Y+21	; 0x15
    7090:	90 81       	ld	r25, Z
    7092:	88 a1       	ldd	r24, Y+32	; 0x20
    7094:	89 2b       	or	r24, r25
    7096:	80 83       	st	Z, r24
    7098:	ce 01       	movw	r24, r28
    709a:	df 91       	pop	r29
    709c:	cf 91       	pop	r28
    709e:	1f 91       	pop	r17
    70a0:	0f 91       	pop	r16
    70a2:	ff 90       	pop	r15
    70a4:	ef 90       	pop	r14
    70a6:	73 ce       	rjmp	.-794    	; 0x6d8e <_ZN4UTFT5clrXYEv>

000070a8 <_ZN4UTFT8fillRectEiiii>:
    70a8:	6f 92       	push	r6
    70aa:	7f 92       	push	r7
    70ac:	8f 92       	push	r8
    70ae:	9f 92       	push	r9
    70b0:	af 92       	push	r10
    70b2:	bf 92       	push	r11
    70b4:	cf 92       	push	r12
    70b6:	df 92       	push	r13
    70b8:	ef 92       	push	r14
    70ba:	ff 92       	push	r15
    70bc:	0f 93       	push	r16
    70be:	1f 93       	push	r17
    70c0:	cf 93       	push	r28
    70c2:	df 93       	push	r29
    70c4:	ec 01       	movw	r28, r24
    70c6:	4b 01       	movw	r8, r22
    70c8:	5a 01       	movw	r10, r20
    70ca:	69 01       	movw	r12, r18
    70cc:	78 01       	movw	r14, r16
    70ce:	26 17       	cp	r18, r22
    70d0:	37 07       	cpc	r19, r23
    70d2:	24 f4       	brge	.+8      	; 0x70dc <_ZN4UTFT8fillRectEiiii+0x34>
    70d4:	89 2d       	mov	r24, r9
    70d6:	49 01       	movw	r8, r18
    70d8:	c6 2e       	mov	r12, r22
    70da:	d8 2e       	mov	r13, r24
    70dc:	ea 14       	cp	r14, r10
    70de:	fb 04       	cpc	r15, r11
    70e0:	2c f4       	brge	.+10     	; 0x70ec <_ZN4UTFT8fillRectEiiii+0x44>
    70e2:	9a 2d       	mov	r25, r10
    70e4:	8b 2d       	mov	r24, r11
    70e6:	57 01       	movw	r10, r14
    70e8:	e9 2e       	mov	r14, r25
    70ea:	f8 2e       	mov	r15, r24
    70ec:	8e 85       	ldd	r24, Y+14	; 0x0e
    70ee:	80 31       	cpi	r24, 0x10	; 16
    70f0:	d9 f5       	brne	.+118    	; 0x7168 <_ZN4UTFT8fillRectEiiii+0xc0>
    70f2:	ec 89       	ldd	r30, Y+20	; 0x14
    70f4:	fd 89       	ldd	r31, Y+21	; 0x15
    70f6:	90 81       	ld	r25, Z
    70f8:	88 a1       	ldd	r24, Y+32	; 0x20
    70fa:	80 95       	com	r24
    70fc:	89 23       	and	r24, r25
    70fe:	80 83       	st	Z, r24
    7100:	87 01       	movw	r16, r14
    7102:	96 01       	movw	r18, r12
    7104:	a5 01       	movw	r20, r10
    7106:	b4 01       	movw	r22, r8
    7108:	ce 01       	movw	r24, r28
    710a:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
    710e:	e8 89       	ldd	r30, Y+16	; 0x10
    7110:	f9 89       	ldd	r31, Y+17	; 0x11
    7112:	90 81       	ld	r25, Z
    7114:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7116:	89 2b       	or	r24, r25
    7118:	80 83       	st	Z, r24
    711a:	96 01       	movw	r18, r12
    711c:	28 19       	sub	r18, r8
    711e:	39 09       	sbc	r19, r9
    7120:	c9 01       	movw	r24, r18
    7122:	33 0f       	add	r19, r19
    7124:	aa 0b       	sbc	r26, r26
    7126:	bb 0b       	sbc	r27, r27
    7128:	9c 01       	movw	r18, r24
    712a:	ad 01       	movw	r20, r26
    712c:	2f 5f       	subi	r18, 0xFF	; 255
    712e:	3f 4f       	sbci	r19, 0xFF	; 255
    7130:	4f 4f       	sbci	r20, 0xFF	; 255
    7132:	5f 4f       	sbci	r21, 0xFF	; 255
    7134:	b7 01       	movw	r22, r14
    7136:	6a 19       	sub	r22, r10
    7138:	7b 09       	sbc	r23, r11
    713a:	cb 01       	movw	r24, r22
    713c:	77 0f       	add	r23, r23
    713e:	aa 0b       	sbc	r26, r26
    7140:	bb 0b       	sbc	r27, r27
    7142:	bc 01       	movw	r22, r24
    7144:	cd 01       	movw	r24, r26
    7146:	6f 5f       	subi	r22, 0xFF	; 255
    7148:	7f 4f       	sbci	r23, 0xFF	; 255
    714a:	8f 4f       	sbci	r24, 0xFF	; 255
    714c:	9f 4f       	sbci	r25, 0xFF	; 255
    714e:	0e 94 cf 46 	call	0x8d9e	; 0x8d9e <__mulsi3>
    7152:	8b 01       	movw	r16, r22
    7154:	9c 01       	movw	r18, r24
    7156:	49 81       	ldd	r20, Y+1	; 0x01
    7158:	50 e0       	ldi	r21, 0x00	; 0
    715a:	88 81       	ld	r24, Y
    715c:	68 2f       	mov	r22, r24
    715e:	70 e0       	ldi	r23, 0x00	; 0
    7160:	ce 01       	movw	r24, r28
    7162:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <_ZN4UTFT13_fast_fill_16Eiil>
    7166:	3f c0       	rjmp	.+126    	; 0x71e6 <_ZN4UTFT8fillRectEiiii+0x13e>
    7168:	88 30       	cpi	r24, 0x08	; 8
    716a:	09 f0       	breq	.+2      	; 0x716e <_ZN4UTFT8fillRectEiiii+0xc6>
    716c:	43 c0       	rjmp	.+134    	; 0x71f4 <_ZN4UTFT8fillRectEiiii+0x14c>
    716e:	98 81       	ld	r25, Y
    7170:	89 81       	ldd	r24, Y+1	; 0x01
    7172:	98 13       	cpse	r25, r24
    7174:	3f c0       	rjmp	.+126    	; 0x71f4 <_ZN4UTFT8fillRectEiiii+0x14c>
    7176:	ec 89       	ldd	r30, Y+20	; 0x14
    7178:	fd 89       	ldd	r31, Y+21	; 0x15
    717a:	90 81       	ld	r25, Z
    717c:	88 a1       	ldd	r24, Y+32	; 0x20
    717e:	80 95       	com	r24
    7180:	89 23       	and	r24, r25
    7182:	80 83       	st	Z, r24
    7184:	87 01       	movw	r16, r14
    7186:	96 01       	movw	r18, r12
    7188:	a5 01       	movw	r20, r10
    718a:	b4 01       	movw	r22, r8
    718c:	ce 01       	movw	r24, r28
    718e:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
    7192:	e8 89       	ldd	r30, Y+16	; 0x10
    7194:	f9 89       	ldd	r31, Y+17	; 0x11
    7196:	90 81       	ld	r25, Z
    7198:	8e 8d       	ldd	r24, Y+30	; 0x1e
    719a:	89 2b       	or	r24, r25
    719c:	80 83       	st	Z, r24
    719e:	96 01       	movw	r18, r12
    71a0:	28 19       	sub	r18, r8
    71a2:	39 09       	sbc	r19, r9
    71a4:	c9 01       	movw	r24, r18
    71a6:	33 0f       	add	r19, r19
    71a8:	aa 0b       	sbc	r26, r26
    71aa:	bb 0b       	sbc	r27, r27
    71ac:	9c 01       	movw	r18, r24
    71ae:	ad 01       	movw	r20, r26
    71b0:	2f 5f       	subi	r18, 0xFF	; 255
    71b2:	3f 4f       	sbci	r19, 0xFF	; 255
    71b4:	4f 4f       	sbci	r20, 0xFF	; 255
    71b6:	5f 4f       	sbci	r21, 0xFF	; 255
    71b8:	b7 01       	movw	r22, r14
    71ba:	6a 19       	sub	r22, r10
    71bc:	7b 09       	sbc	r23, r11
    71be:	cb 01       	movw	r24, r22
    71c0:	77 0f       	add	r23, r23
    71c2:	aa 0b       	sbc	r26, r26
    71c4:	bb 0b       	sbc	r27, r27
    71c6:	bc 01       	movw	r22, r24
    71c8:	cd 01       	movw	r24, r26
    71ca:	6f 5f       	subi	r22, 0xFF	; 255
    71cc:	7f 4f       	sbci	r23, 0xFF	; 255
    71ce:	8f 4f       	sbci	r24, 0xFF	; 255
    71d0:	9f 4f       	sbci	r25, 0xFF	; 255
    71d2:	0e 94 cf 46 	call	0x8d9e	; 0x8d9e <__mulsi3>
    71d6:	9b 01       	movw	r18, r22
    71d8:	ac 01       	movw	r20, r24
    71da:	88 81       	ld	r24, Y
    71dc:	68 2f       	mov	r22, r24
    71de:	70 e0       	ldi	r23, 0x00	; 0
    71e0:	ce 01       	movw	r24, r28
    71e2:	0e 94 87 1e 	call	0x3d0e	; 0x3d0e <_ZN4UTFT12_fast_fill_8Eil>
    71e6:	ec 89       	ldd	r30, Y+20	; 0x14
    71e8:	fd 89       	ldd	r31, Y+21	; 0x15
    71ea:	90 81       	ld	r25, Z
    71ec:	88 a1       	ldd	r24, Y+32	; 0x20
    71ee:	89 2b       	or	r24, r25
    71f0:	80 83       	st	Z, r24
    71f2:	47 c0       	rjmp	.+142    	; 0x7282 <_ZN4UTFT8fillRectEiiii+0x1da>
    71f4:	8c 81       	ldd	r24, Y+4	; 0x04
    71f6:	81 11       	cpse	r24, r1
    71f8:	22 c0       	rjmp	.+68     	; 0x723e <_ZN4UTFT8fillRectEiiii+0x196>
    71fa:	37 01       	movw	r6, r14
    71fc:	6a 18       	sub	r6, r10
    71fe:	7b 08       	sbc	r7, r11
    7200:	77 fe       	sbrs	r7, 7
    7202:	03 c0       	rjmp	.+6      	; 0x720a <_ZN4UTFT8fillRectEiiii+0x162>
    7204:	8f ef       	ldi	r24, 0xFF	; 255
    7206:	68 1a       	sub	r6, r24
    7208:	78 0a       	sbc	r7, r24
    720a:	75 94       	asr	r7
    720c:	67 94       	ror	r6
    720e:	00 e0       	ldi	r16, 0x00	; 0
    7210:	10 e0       	ldi	r17, 0x00	; 0
    7212:	c8 18       	sub	r12, r8
    7214:	d9 08       	sbc	r13, r9
    7216:	60 16       	cp	r6, r16
    7218:	71 06       	cpc	r7, r17
    721a:	9c f1       	brlt	.+102    	; 0x7282 <_ZN4UTFT8fillRectEiiii+0x1da>
    721c:	a5 01       	movw	r20, r10
    721e:	40 0f       	add	r20, r16
    7220:	51 1f       	adc	r21, r17
    7222:	96 01       	movw	r18, r12
    7224:	b4 01       	movw	r22, r8
    7226:	ce 01       	movw	r24, r28
    7228:	7b de       	rcall	.-778    	; 0x6f20 <_ZN4UTFT9drawHLineEiii>
    722a:	a7 01       	movw	r20, r14
    722c:	40 1b       	sub	r20, r16
    722e:	51 0b       	sbc	r21, r17
    7230:	96 01       	movw	r18, r12
    7232:	b4 01       	movw	r22, r8
    7234:	ce 01       	movw	r24, r28
    7236:	74 de       	rcall	.-792    	; 0x6f20 <_ZN4UTFT9drawHLineEiii>
    7238:	0f 5f       	subi	r16, 0xFF	; 255
    723a:	1f 4f       	sbci	r17, 0xFF	; 255
    723c:	ec cf       	rjmp	.-40     	; 0x7216 <_ZN4UTFT8fillRectEiiii+0x16e>
    723e:	36 01       	movw	r6, r12
    7240:	68 18       	sub	r6, r8
    7242:	79 08       	sbc	r7, r9
    7244:	77 fe       	sbrs	r7, 7
    7246:	03 c0       	rjmp	.+6      	; 0x724e <_ZN4UTFT8fillRectEiiii+0x1a6>
    7248:	8f ef       	ldi	r24, 0xFF	; 255
    724a:	68 1a       	sub	r6, r24
    724c:	78 0a       	sbc	r7, r24
    724e:	75 94       	asr	r7
    7250:	67 94       	ror	r6
    7252:	00 e0       	ldi	r16, 0x00	; 0
    7254:	10 e0       	ldi	r17, 0x00	; 0
    7256:	ea 18       	sub	r14, r10
    7258:	fb 08       	sbc	r15, r11
    725a:	60 16       	cp	r6, r16
    725c:	71 06       	cpc	r7, r17
    725e:	8c f0       	brlt	.+34     	; 0x7282 <_ZN4UTFT8fillRectEiiii+0x1da>
    7260:	b4 01       	movw	r22, r8
    7262:	60 0f       	add	r22, r16
    7264:	71 1f       	adc	r23, r17
    7266:	97 01       	movw	r18, r14
    7268:	a5 01       	movw	r20, r10
    726a:	ce 01       	movw	r24, r28
    726c:	bb de       	rcall	.-650    	; 0x6fe4 <_ZN4UTFT9drawVLineEiii>
    726e:	b6 01       	movw	r22, r12
    7270:	60 1b       	sub	r22, r16
    7272:	71 0b       	sbc	r23, r17
    7274:	97 01       	movw	r18, r14
    7276:	a5 01       	movw	r20, r10
    7278:	ce 01       	movw	r24, r28
    727a:	b4 de       	rcall	.-664    	; 0x6fe4 <_ZN4UTFT9drawVLineEiii>
    727c:	0f 5f       	subi	r16, 0xFF	; 255
    727e:	1f 4f       	sbci	r17, 0xFF	; 255
    7280:	ec cf       	rjmp	.-40     	; 0x725a <_ZN4UTFT8fillRectEiiii+0x1b2>
    7282:	df 91       	pop	r29
    7284:	cf 91       	pop	r28
    7286:	1f 91       	pop	r17
    7288:	0f 91       	pop	r16
    728a:	ff 90       	pop	r15
    728c:	ef 90       	pop	r14
    728e:	df 90       	pop	r13
    7290:	cf 90       	pop	r12
    7292:	bf 90       	pop	r11
    7294:	af 90       	pop	r10
    7296:	9f 90       	pop	r9
    7298:	8f 90       	pop	r8
    729a:	7f 90       	pop	r7
    729c:	6f 90       	pop	r6
    729e:	08 95       	ret

000072a0 <_ZN4UTFT9printCharEhii>:
	sbi(P_CS, B_CS);
	clrXY();
}

void UTFT::printChar(byte c, int x, int y)
{
    72a0:	2f 92       	push	r2
    72a2:	3f 92       	push	r3
    72a4:	4f 92       	push	r4
    72a6:	5f 92       	push	r5
    72a8:	6f 92       	push	r6
    72aa:	7f 92       	push	r7
    72ac:	8f 92       	push	r8
    72ae:	9f 92       	push	r9
    72b0:	af 92       	push	r10
    72b2:	bf 92       	push	r11
    72b4:	cf 92       	push	r12
    72b6:	df 92       	push	r13
    72b8:	ef 92       	push	r14
    72ba:	ff 92       	push	r15
    72bc:	0f 93       	push	r16
    72be:	1f 93       	push	r17
    72c0:	cf 93       	push	r28
    72c2:	df 93       	push	r29
    72c4:	cd b7       	in	r28, 0x3d	; 61
    72c6:	de b7       	in	r29, 0x3e	; 62
    72c8:	28 97       	sbiw	r28, 0x08	; 8
    72ca:	0f b6       	in	r0, 0x3f	; 63
    72cc:	f8 94       	cli
    72ce:	de bf       	out	0x3e, r29	; 62
    72d0:	0f be       	out	0x3f, r0	; 63
    72d2:	cd bf       	out	0x3d, r28	; 61
    72d4:	98 87       	std	Y+8, r25	; 0x08
    72d6:	8f 83       	std	Y+7, r24	; 0x07
    72d8:	3a 01       	movw	r6, r20
    72da:	29 01       	movw	r4, r18
	byte i,ch;
	word j;
	word temp; 

	cbi(P_CS, B_CS);
    72dc:	dc 01       	movw	r26, r24
    72de:	54 96       	adiw	r26, 0x14	; 20
    72e0:	ed 91       	ld	r30, X+
    72e2:	fc 91       	ld	r31, X
    72e4:	55 97       	sbiw	r26, 0x15	; 21
    72e6:	90 81       	ld	r25, Z
    72e8:	90 96       	adiw	r26, 0x20	; 32
    72ea:	8c 91       	ld	r24, X
    72ec:	90 97       	sbiw	r26, 0x20	; 32
    72ee:	80 95       	com	r24
    72f0:	89 23       	and	r24, r25
    72f2:	80 83       	st	Z, r24
  
	if (!_transparent)
    72f4:	d0 96       	adiw	r26, 0x30	; 48
    72f6:	2c 91       	ld	r18, X
    72f8:	d0 97       	sbiw	r26, 0x30	; 48
    72fa:	9d 96       	adiw	r26, 0x2d	; 45
    72fc:	9c 91       	ld	r25, X
    72fe:	9d 97       	sbiw	r26, 0x2d	; 45
    7300:	9c 96       	adiw	r26, 0x2c	; 44
    7302:	8c 91       	ld	r24, X
    7304:	9c 97       	sbiw	r26, 0x2c	; 44
    7306:	e6 2e       	mov	r14, r22
    7308:	f1 2c       	mov	r15, r1
    730a:	21 11       	cpse	r18, r1
    730c:	00 c1       	rjmp	.+512    	; 0x750e <_ZN4UTFT9printCharEhii+0x26e>
	{
		if (orient==PORTRAIT)
    730e:	14 96       	adiw	r26, 0x04	; 4
    7310:	2c 91       	ld	r18, X
    7312:	14 97       	sbiw	r26, 0x04	; 4
    7314:	21 11       	cpse	r18, r1
    7316:	6f c0       	rjmp	.+222    	; 0x73f6 <_ZN4UTFT9printCharEhii+0x156>
		{
			setXY(x,y,x+cfont.x_size-1,y+cfont.y_size-1);
    7318:	82 01       	movw	r16, r4
    731a:	09 0f       	add	r16, r25
    731c:	11 1d       	adc	r17, r1
    731e:	01 50       	subi	r16, 0x01	; 1
    7320:	11 09       	sbc	r17, r1
    7322:	9a 01       	movw	r18, r20
    7324:	28 0f       	add	r18, r24
    7326:	31 1d       	adc	r19, r1
    7328:	21 50       	subi	r18, 0x01	; 1
    732a:	31 09       	sbc	r19, r1
    732c:	a2 01       	movw	r20, r4
    732e:	b3 01       	movw	r22, r6
    7330:	cd 01       	movw	r24, r26
    7332:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
	  
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    7336:	ef 81       	ldd	r30, Y+7	; 0x07
    7338:	f8 85       	ldd	r31, Y+8	; 0x08
    733a:	84 a5       	ldd	r24, Z+44	; 0x2c
    733c:	86 95       	lsr	r24
    733e:	86 95       	lsr	r24
    7340:	86 95       	lsr	r24
    7342:	95 a5       	ldd	r25, Z+45	; 0x2d
    7344:	26 a5       	ldd	r18, Z+46	; 0x2e
    7346:	e2 1a       	sub	r14, r18
    7348:	f1 08       	sbc	r15, r1
    734a:	89 9f       	mul	r24, r25
    734c:	c0 01       	movw	r24, r0
    734e:	11 24       	eor	r1, r1
    7350:	e8 9e       	mul	r14, r24
    7352:	90 01       	movw	r18, r0
    7354:	e9 9e       	mul	r14, r25
    7356:	30 0d       	add	r19, r0
    7358:	f8 9e       	mul	r15, r24
    735a:	30 0d       	add	r19, r0
    735c:	11 24       	eor	r1, r1
    735e:	79 01       	movw	r14, r18
    7360:	f4 e0       	ldi	r31, 0x04	; 4
    7362:	ef 0e       	add	r14, r31
    7364:	f1 1c       	adc	r15, r1
			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j++)
    7366:	c1 2c       	mov	r12, r1
    7368:	d1 2c       	mov	r13, r1
    736a:	af 81       	ldd	r26, Y+7	; 0x07
    736c:	b8 85       	ldd	r27, Y+8	; 0x08
    736e:	9c 96       	adiw	r26, 0x2c	; 44
    7370:	8c 91       	ld	r24, X
    7372:	9c 97       	sbiw	r26, 0x2c	; 44
    7374:	86 95       	lsr	r24
    7376:	86 95       	lsr	r24
    7378:	86 95       	lsr	r24
    737a:	9d 96       	adiw	r26, 0x2d	; 45
    737c:	9c 91       	ld	r25, X
    737e:	9d 97       	sbiw	r26, 0x2d	; 45
    7380:	89 9f       	mul	r24, r25
    7382:	c0 01       	movw	r24, r0
    7384:	11 24       	eor	r1, r1
    7386:	c8 16       	cp	r12, r24
    7388:	d9 06       	cpc	r13, r25
    738a:	08 f0       	brcs	.+2      	; 0x738e <_ZN4UTFT9printCharEhii+0xee>
    738c:	3d c1       	rjmp	.+634    	; 0x7608 <_ZN4UTFT9printCharEhii+0x368>
			{
				ch=pgm_read_byte(&cfont.font[temp]);
    738e:	9a 96       	adiw	r26, 0x2a	; 42
    7390:	ed 91       	ld	r30, X+
    7392:	fc 91       	ld	r31, X
    7394:	9b 97       	sbiw	r26, 0x2b	; 43
    7396:	ee 0d       	add	r30, r14
    7398:	ff 1d       	adc	r31, r15
    739a:	e4 91       	lpm	r30, Z
    739c:	97 e0       	ldi	r25, 0x07	; 7
    739e:	a9 2e       	mov	r10, r25
    73a0:	b1 2c       	mov	r11, r1
				for(i=0;i<8;i++)
				{   
					if((ch&(1<<(7-i)))!=0)   
    73a2:	0e 2f       	mov	r16, r30
    73a4:	10 e0       	ldi	r17, 0x00	; 0
    73a6:	c8 01       	movw	r24, r16
    73a8:	0a 2c       	mov	r0, r10
    73aa:	02 c0       	rjmp	.+4      	; 0x73b0 <_ZN4UTFT9printCharEhii+0x110>
    73ac:	95 95       	asr	r25
    73ae:	87 95       	ror	r24
    73b0:	0a 94       	dec	r0
    73b2:	e2 f7       	brpl	.-8      	; 0x73ac <_ZN4UTFT9printCharEhii+0x10c>
    73b4:	80 ff       	sbrs	r24, 0
    73b6:	09 c0       	rjmp	.+18     	; 0x73ca <_ZN4UTFT9printCharEhii+0x12a>
					{
						setPixel((fch<<8)|fcl);
    73b8:	ef 81       	ldd	r30, Y+7	; 0x07
    73ba:	f8 85       	ldd	r31, Y+8	; 0x08
    73bc:	60 81       	ld	r22, Z
    73be:	71 81       	ldd	r23, Z+1	; 0x01
    73c0:	76 27       	eor	r23, r22
    73c2:	67 27       	eor	r22, r23
    73c4:	76 27       	eor	r23, r22
    73c6:	cf 01       	movw	r24, r30
    73c8:	0a c0       	rjmp	.+20     	; 0x73de <_ZN4UTFT9printCharEhii+0x13e>
					} 
					else
					{
						setPixel((bch<<8)|bcl);
    73ca:	af 81       	ldd	r26, Y+7	; 0x07
    73cc:	b8 85       	ldd	r27, Y+8	; 0x08
    73ce:	12 96       	adiw	r26, 0x02	; 2
    73d0:	6d 91       	ld	r22, X+
    73d2:	7c 91       	ld	r23, X
    73d4:	13 97       	sbiw	r26, 0x03	; 3
    73d6:	76 27       	eor	r23, r22
    73d8:	67 27       	eor	r22, r23
    73da:	76 27       	eor	r23, r22
    73dc:	cd 01       	movw	r24, r26
    73de:	9c dd       	rcall	.-1224   	; 0x6f18 <_ZN4UTFT8setPixelEj>
    73e0:	b1 e0       	ldi	r27, 0x01	; 1
    73e2:	ab 1a       	sub	r10, r27
    73e4:	b1 08       	sbc	r11, r1
    73e6:	f8 f6       	brcc	.-66     	; 0x73a6 <_ZN4UTFT9printCharEhii+0x106>
					}   
				}
				temp++;
    73e8:	ff ef       	ldi	r31, 0xFF	; 255
    73ea:	ef 1a       	sub	r14, r31
    73ec:	ff 0a       	sbc	r15, r31
		if (orient==PORTRAIT)
		{
			setXY(x,y,x+cfont.x_size-1,y+cfont.y_size-1);
	  
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j++)
    73ee:	8f ef       	ldi	r24, 0xFF	; 255
    73f0:	c8 1a       	sub	r12, r24
    73f2:	d8 0a       	sbc	r13, r24
    73f4:	ba cf       	rjmp	.-140    	; 0x736a <_ZN4UTFT9printCharEhii+0xca>
				temp++;
			}
		}
		else
		{
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    73f6:	86 95       	lsr	r24
    73f8:	86 95       	lsr	r24
    73fa:	86 95       	lsr	r24
    73fc:	af 81       	ldd	r26, Y+7	; 0x07
    73fe:	b8 85       	ldd	r27, Y+8	; 0x08
    7400:	9e 96       	adiw	r26, 0x2e	; 46
    7402:	2c 91       	ld	r18, X
    7404:	e2 1a       	sub	r14, r18
    7406:	f1 08       	sbc	r15, r1
    7408:	89 9f       	mul	r24, r25
    740a:	c0 01       	movw	r24, r0
    740c:	11 24       	eor	r1, r1
    740e:	e8 9e       	mul	r14, r24
    7410:	90 01       	movw	r18, r0
    7412:	e9 9e       	mul	r14, r25
    7414:	30 0d       	add	r19, r0
    7416:	f8 9e       	mul	r15, r24
    7418:	30 0d       	add	r19, r0
    741a:	11 24       	eor	r1, r1
    741c:	79 01       	movw	r14, r18
    741e:	b4 e0       	ldi	r27, 0x04	; 4
    7420:	eb 0e       	add	r14, r27
    7422:	f1 1c       	adc	r15, r1

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
    7424:	c1 2c       	mov	r12, r1
    7426:	d1 2c       	mov	r13, r1
    7428:	ef 81       	ldd	r30, Y+7	; 0x07
    742a:	f8 85       	ldd	r31, Y+8	; 0x08
    742c:	24 a5       	ldd	r18, Z+44	; 0x2c
    742e:	62 2f       	mov	r22, r18
    7430:	66 95       	lsr	r22
    7432:	66 95       	lsr	r22
    7434:	66 95       	lsr	r22
    7436:	85 a5       	ldd	r24, Z+45	; 0x2d
    7438:	68 9f       	mul	r22, r24
    743a:	c0 01       	movw	r24, r0
    743c:	11 24       	eor	r1, r1
    743e:	c8 16       	cp	r12, r24
    7440:	d9 06       	cpc	r13, r25
    7442:	08 f0       	brcs	.+2      	; 0x7446 <_ZN4UTFT9printCharEhii+0x1a6>
    7444:	e1 c0       	rjmp	.+450    	; 0x7608 <_ZN4UTFT9printCharEhii+0x368>
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
    7446:	70 e0       	ldi	r23, 0x00	; 0
    7448:	c6 01       	movw	r24, r12
    744a:	0e 94 de 46 	call	0x8dbc	; 0x8dbc <__udivmodhi4>
    744e:	ab 01       	movw	r20, r22
    7450:	44 0d       	add	r20, r4
    7452:	55 1d       	adc	r21, r5
    7454:	c3 01       	movw	r24, r6
    7456:	82 0f       	add	r24, r18
    7458:	91 1d       	adc	r25, r1
    745a:	9c 01       	movw	r18, r24
    745c:	21 50       	subi	r18, 0x01	; 1
    745e:	31 09       	sbc	r19, r1
    7460:	8a 01       	movw	r16, r20
    7462:	b3 01       	movw	r22, r6
    7464:	cf 01       	movw	r24, r30
    7466:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    746a:	af 81       	ldd	r26, Y+7	; 0x07
    746c:	b8 85       	ldd	r27, Y+8	; 0x08
    746e:	9c 96       	adiw	r26, 0x2c	; 44
    7470:	8c 90       	ld	r8, X
    7472:	86 94       	lsr	r8
    7474:	86 94       	lsr	r8
    7476:	86 94       	lsr	r8
    7478:	91 2c       	mov	r9, r1
    747a:	b1 e0       	ldi	r27, 0x01	; 1
    747c:	8b 1a       	sub	r8, r27
    747e:	91 08       	sbc	r9, r1
						{
							setPixel((bch<<8)|bcl);
						}   
					}
				}
				temp+=(cfont.x_size/8);
    7480:	af 81       	ldd	r26, Y+7	; 0x07
    7482:	b8 85       	ldd	r27, Y+8	; 0x08
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    7484:	ef ef       	ldi	r30, 0xFF	; 255
    7486:	8e 16       	cp	r8, r30
    7488:	9e 06       	cpc	r9, r30
    748a:	b1 f1       	breq	.+108    	; 0x74f8 <_ZN4UTFT9printCharEhii+0x258>
				{
					ch=pgm_read_byte(&cfont.font[temp+zz]);
    748c:	9a 96       	adiw	r26, 0x2a	; 42
    748e:	ed 91       	ld	r30, X+
    7490:	fc 91       	ld	r31, X
    7492:	9b 97       	sbiw	r26, 0x2b	; 43
    7494:	c4 01       	movw	r24, r8
    7496:	8e 0d       	add	r24, r14
    7498:	9f 1d       	adc	r25, r15
    749a:	e8 0f       	add	r30, r24
    749c:	f9 1f       	adc	r31, r25
    749e:	e4 91       	lpm	r30, Z
    74a0:	a1 2c       	mov	r10, r1
    74a2:	b1 2c       	mov	r11, r1
					for(i=0;i<8;i++)
					{   
						if((ch&(1<<i))!=0)   
    74a4:	0e 2f       	mov	r16, r30
    74a6:	10 e0       	ldi	r17, 0x00	; 0
    74a8:	c8 01       	movw	r24, r16
    74aa:	0a 2c       	mov	r0, r10
    74ac:	02 c0       	rjmp	.+4      	; 0x74b2 <_ZN4UTFT9printCharEhii+0x212>
    74ae:	95 95       	asr	r25
    74b0:	87 95       	ror	r24
    74b2:	0a 94       	dec	r0
    74b4:	e2 f7       	brpl	.-8      	; 0x74ae <_ZN4UTFT9printCharEhii+0x20e>
    74b6:	80 ff       	sbrs	r24, 0
    74b8:	09 c0       	rjmp	.+18     	; 0x74cc <_ZN4UTFT9printCharEhii+0x22c>
						{
							setPixel((fch<<8)|fcl);
    74ba:	ef 81       	ldd	r30, Y+7	; 0x07
    74bc:	f8 85       	ldd	r31, Y+8	; 0x08
    74be:	60 81       	ld	r22, Z
    74c0:	71 81       	ldd	r23, Z+1	; 0x01
    74c2:	76 27       	eor	r23, r22
    74c4:	67 27       	eor	r22, r23
    74c6:	76 27       	eor	r23, r22
    74c8:	cf 01       	movw	r24, r30
    74ca:	0a c0       	rjmp	.+20     	; 0x74e0 <_ZN4UTFT9printCharEhii+0x240>
						} 
						else
						{
							setPixel((bch<<8)|bcl);
    74cc:	af 81       	ldd	r26, Y+7	; 0x07
    74ce:	b8 85       	ldd	r27, Y+8	; 0x08
    74d0:	12 96       	adiw	r26, 0x02	; 2
    74d2:	6d 91       	ld	r22, X+
    74d4:	7c 91       	ld	r23, X
    74d6:	13 97       	sbiw	r26, 0x03	; 3
    74d8:	76 27       	eor	r23, r22
    74da:	67 27       	eor	r22, r23
    74dc:	76 27       	eor	r23, r22
    74de:	cd 01       	movw	r24, r26
    74e0:	1b dd       	rcall	.-1482   	; 0x6f18 <_ZN4UTFT8setPixelEj>
    74e2:	bf ef       	ldi	r27, 0xFF	; 255
    74e4:	ab 1a       	sub	r10, r27
    74e6:	bb 0a       	sbc	r11, r27
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
				{
					ch=pgm_read_byte(&cfont.font[temp+zz]);
					for(i=0;i<8;i++)
    74e8:	e8 e0       	ldi	r30, 0x08	; 8
    74ea:	ae 16       	cp	r10, r30
    74ec:	b1 04       	cpc	r11, r1
    74ee:	e1 f6       	brne	.-72     	; 0x74a8 <_ZN4UTFT9printCharEhii+0x208>
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    74f0:	f1 e0       	ldi	r31, 0x01	; 1
    74f2:	8f 1a       	sub	r8, r31
    74f4:	91 08       	sbc	r9, r1
    74f6:	c4 cf       	rjmp	.-120    	; 0x7480 <_ZN4UTFT9printCharEhii+0x1e0>
						{
							setPixel((bch<<8)|bcl);
						}   
					}
				}
				temp+=(cfont.x_size/8);
    74f8:	9c 96       	adiw	r26, 0x2c	; 44
    74fa:	8c 91       	ld	r24, X
    74fc:	86 95       	lsr	r24
    74fe:	86 95       	lsr	r24
    7500:	86 95       	lsr	r24
    7502:	90 e0       	ldi	r25, 0x00	; 0
    7504:	e8 0e       	add	r14, r24
    7506:	f9 1e       	adc	r15, r25
		}
		else
		{
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
    7508:	c8 0e       	add	r12, r24
    750a:	d9 1e       	adc	r13, r25
    750c:	8d cf       	rjmp	.-230    	; 0x7428 <_ZN4UTFT9printCharEhii+0x188>
			}
		}
	}
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    750e:	86 95       	lsr	r24
    7510:	86 95       	lsr	r24
    7512:	86 95       	lsr	r24
    7514:	ef 81       	ldd	r30, Y+7	; 0x07
    7516:	f8 85       	ldd	r31, Y+8	; 0x08
    7518:	26 a5       	ldd	r18, Z+46	; 0x2e
    751a:	e2 1a       	sub	r14, r18
    751c:	f1 08       	sbc	r15, r1
    751e:	89 9f       	mul	r24, r25
    7520:	c0 01       	movw	r24, r0
    7522:	11 24       	eor	r1, r1
    7524:	e8 9e       	mul	r14, r24
    7526:	10 01       	movw	r2, r0
    7528:	e9 9e       	mul	r14, r25
    752a:	30 0c       	add	r3, r0
    752c:	f8 9e       	mul	r15, r24
    752e:	30 0c       	add	r3, r0
    7530:	11 24       	eor	r1, r1
    7532:	f4 e0       	ldi	r31, 0x04	; 4
    7534:	2f 0e       	add	r2, r31
    7536:	31 1c       	adc	r3, r1
    7538:	72 01       	movw	r14, r4
		for(j=0;j<cfont.y_size;j++) 
    753a:	af 81       	ldd	r26, Y+7	; 0x07
    753c:	b8 85       	ldd	r27, Y+8	; 0x08
    753e:	9d 96       	adiw	r26, 0x2d	; 45
    7540:	8c 91       	ld	r24, X
    7542:	90 e0       	ldi	r25, 0x00	; 0
    7544:	97 01       	movw	r18, r14
    7546:	24 19       	sub	r18, r4
    7548:	35 09       	sbc	r19, r5
    754a:	28 17       	cp	r18, r24
    754c:	39 07       	cpc	r19, r25
    754e:	08 f0       	brcs	.+2      	; 0x7552 <_ZN4UTFT9printCharEhii+0x2b2>
    7550:	5b c0       	rjmp	.+182    	; 0x7608 <_ZN4UTFT9printCharEhii+0x368>
    7552:	43 01       	movw	r8, r6
    7554:	c1 2c       	mov	r12, r1
    7556:	d1 2c       	mov	r13, r1
				for(i=0;i<8;i++)
				{   
				
					if((ch&(1<<(7-i)))!=0)   
					{
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
    7558:	f7 01       	movw	r30, r14
    755a:	31 96       	adiw	r30, 0x01	; 1
    755c:	fe 83       	std	Y+6, r31	; 0x06
    755e:	ed 83       	std	Y+5, r30	; 0x05
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
    7560:	af 81       	ldd	r26, Y+7	; 0x07
    7562:	b8 85       	ldd	r27, Y+8	; 0x08
    7564:	9c 96       	adiw	r26, 0x2c	; 44
    7566:	8c 91       	ld	r24, X
    7568:	9c 97       	sbiw	r26, 0x2c	; 44
    756a:	86 95       	lsr	r24
    756c:	86 95       	lsr	r24
    756e:	86 95       	lsr	r24
    7570:	90 e0       	ldi	r25, 0x00	; 0
    7572:	c8 16       	cp	r12, r24
    7574:	d9 06       	cpc	r13, r25
    7576:	0c f0       	brlt	.+2      	; 0x757a <_ZN4UTFT9printCharEhii+0x2da>
    7578:	41 c0       	rjmp	.+130    	; 0x75fc <_ZN4UTFT9printCharEhii+0x35c>
			{
				ch=pgm_read_byte(&cfont.font[temp+zz]); 
    757a:	9a 96       	adiw	r26, 0x2a	; 42
    757c:	ed 91       	ld	r30, X+
    757e:	fc 91       	ld	r31, X
    7580:	9b 97       	sbiw	r26, 0x2b	; 43
    7582:	c6 01       	movw	r24, r12
    7584:	82 0d       	add	r24, r2
    7586:	93 1d       	adc	r25, r3
    7588:	e8 0f       	add	r30, r24
    758a:	f9 1f       	adc	r31, r25
    758c:	e4 91       	lpm	r30, Z
    758e:	b4 01       	movw	r22, r8
    7590:	87 e0       	ldi	r24, 0x07	; 7
    7592:	a8 2e       	mov	r10, r24
    7594:	b1 2c       	mov	r11, r1
				for(i=0;i<8;i++)
				{   
				
					if((ch&(1<<(7-i)))!=0)   
    7596:	8e 2f       	mov	r24, r30
    7598:	90 e0       	ldi	r25, 0x00	; 0
    759a:	9c 83       	std	Y+4, r25	; 0x04
    759c:	8b 83       	std	Y+3, r24	; 0x03
    759e:	db 01       	movw	r26, r22
    75a0:	11 96       	adiw	r26, 0x01	; 1
    75a2:	ba 83       	std	Y+2, r27	; 0x02
    75a4:	a9 83       	std	Y+1, r26	; 0x01
    75a6:	8b 81       	ldd	r24, Y+3	; 0x03
    75a8:	9c 81       	ldd	r25, Y+4	; 0x04
    75aa:	0a 2c       	mov	r0, r10
    75ac:	02 c0       	rjmp	.+4      	; 0x75b2 <_ZN4UTFT9printCharEhii+0x312>
    75ae:	95 95       	asr	r25
    75b0:	87 95       	ror	r24
    75b2:	0a 94       	dec	r0
    75b4:	e2 f7       	brpl	.-8      	; 0x75ae <_ZN4UTFT9printCharEhii+0x30e>
    75b6:	80 ff       	sbrs	r24, 0
    75b8:	11 c0       	rjmp	.+34     	; 0x75dc <_ZN4UTFT9printCharEhii+0x33c>
					{
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
    75ba:	0d 81       	ldd	r16, Y+5	; 0x05
    75bc:	1e 81       	ldd	r17, Y+6	; 0x06
    75be:	9d 01       	movw	r18, r26
    75c0:	a7 01       	movw	r20, r14
    75c2:	8f 81       	ldd	r24, Y+7	; 0x07
    75c4:	98 85       	ldd	r25, Y+8	; 0x08
    75c6:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
						setPixel((fch<<8)|fcl);
    75ca:	ef 81       	ldd	r30, Y+7	; 0x07
    75cc:	f8 85       	ldd	r31, Y+8	; 0x08
    75ce:	60 81       	ld	r22, Z
    75d0:	71 81       	ldd	r23, Z+1	; 0x01
    75d2:	76 27       	eor	r23, r22
    75d4:	67 27       	eor	r22, r23
    75d6:	76 27       	eor	r23, r22
    75d8:	cf 01       	movw	r24, r30
    75da:	9e dc       	rcall	.-1732   	; 0x6f18 <_ZN4UTFT8setPixelEj>
    75dc:	f1 e0       	ldi	r31, 0x01	; 1
    75de:	af 1a       	sub	r10, r31
    75e0:	b1 08       	sbc	r11, r1
    75e2:	69 81       	ldd	r22, Y+1	; 0x01
    75e4:	7a 81       	ldd	r23, Y+2	; 0x02
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
			{
				ch=pgm_read_byte(&cfont.font[temp+zz]); 
				for(i=0;i<8;i++)
    75e6:	8f ef       	ldi	r24, 0xFF	; 255
    75e8:	a8 16       	cp	r10, r24
    75ea:	b8 06       	cpc	r11, r24
    75ec:	c1 f6       	brne	.-80     	; 0x759e <_ZN4UTFT9printCharEhii+0x2fe>
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
    75ee:	9f ef       	ldi	r25, 0xFF	; 255
    75f0:	c9 1a       	sub	r12, r25
    75f2:	d9 0a       	sbc	r13, r25
    75f4:	a8 e0       	ldi	r26, 0x08	; 8
    75f6:	8a 0e       	add	r8, r26
    75f8:	91 1c       	adc	r9, r1
    75fa:	b2 cf       	rjmp	.-156    	; 0x7560 <_ZN4UTFT9printCharEhii+0x2c0>
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
						setPixel((fch<<8)|fcl);
					} 
				}
			}
			temp+=(cfont.x_size/8);
    75fc:	28 0e       	add	r2, r24
    75fe:	39 1e       	adc	r3, r25
    7600:	bf ef       	ldi	r27, 0xFF	; 255
    7602:	eb 1a       	sub	r14, r27
    7604:	fb 0a       	sbc	r15, r27
		}
	}
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
    7606:	99 cf       	rjmp	.-206    	; 0x753a <_ZN4UTFT9printCharEhii+0x29a>
			}
			temp+=(cfont.x_size/8);
		}
	}

	sbi(P_CS, B_CS);
    7608:	af 81       	ldd	r26, Y+7	; 0x07
    760a:	b8 85       	ldd	r27, Y+8	; 0x08
    760c:	54 96       	adiw	r26, 0x14	; 20
    760e:	ed 91       	ld	r30, X+
    7610:	fc 91       	ld	r31, X
    7612:	55 97       	sbiw	r26, 0x15	; 21
    7614:	90 81       	ld	r25, Z
    7616:	90 96       	adiw	r26, 0x20	; 32
    7618:	8c 91       	ld	r24, X
    761a:	90 97       	sbiw	r26, 0x20	; 32
    761c:	89 2b       	or	r24, r25
    761e:	80 83       	st	Z, r24
	clrXY();
    7620:	cd 01       	movw	r24, r26
}
    7622:	28 96       	adiw	r28, 0x08	; 8
    7624:	0f b6       	in	r0, 0x3f	; 63
    7626:	f8 94       	cli
    7628:	de bf       	out	0x3e, r29	; 62
    762a:	0f be       	out	0x3f, r0	; 63
    762c:	cd bf       	out	0x3d, r28	; 61
    762e:	df 91       	pop	r29
    7630:	cf 91       	pop	r28
    7632:	1f 91       	pop	r17
    7634:	0f 91       	pop	r16
    7636:	ff 90       	pop	r15
    7638:	ef 90       	pop	r14
    763a:	df 90       	pop	r13
    763c:	cf 90       	pop	r12
    763e:	bf 90       	pop	r11
    7640:	af 90       	pop	r10
    7642:	9f 90       	pop	r9
    7644:	8f 90       	pop	r8
    7646:	7f 90       	pop	r7
    7648:	6f 90       	pop	r6
    764a:	5f 90       	pop	r5
    764c:	4f 90       	pop	r4
    764e:	3f 90       	pop	r3
			temp+=(cfont.x_size/8);
		}
	}

	sbi(P_CS, B_CS);
	clrXY();
    7650:	2f 90       	pop	r2
    7652:	9d cb       	rjmp	.-2246   	; 0x6d8e <_ZN4UTFT5clrXYEv>

00007654 <_ZN4UTFT10rotateCharEhiiii>:
}

void UTFT::rotateChar(byte c, int x, int y, int pos, int deg)
{
    7654:	2f 92       	push	r2
    7656:	3f 92       	push	r3
    7658:	4f 92       	push	r4
    765a:	5f 92       	push	r5
    765c:	6f 92       	push	r6
    765e:	7f 92       	push	r7
    7660:	8f 92       	push	r8
    7662:	9f 92       	push	r9
    7664:	af 92       	push	r10
    7666:	bf 92       	push	r11
    7668:	cf 92       	push	r12
    766a:	df 92       	push	r13
    766c:	ef 92       	push	r14
    766e:	ff 92       	push	r15
    7670:	0f 93       	push	r16
    7672:	1f 93       	push	r17
    7674:	cf 93       	push	r28
    7676:	df 93       	push	r29
    7678:	cd b7       	in	r28, 0x3d	; 61
    767a:	de b7       	in	r29, 0x3e	; 62
    767c:	ab 97       	sbiw	r28, 0x2b	; 43
    767e:	0f b6       	in	r0, 0x3f	; 63
    7680:	f8 94       	cli
    7682:	de bf       	out	0x3e, r29	; 62
    7684:	0f be       	out	0x3f, r0	; 63
    7686:	cd bf       	out	0x3d, r28	; 61
    7688:	9b a7       	std	Y+43, r25	; 0x2b
    768a:	8a a7       	std	Y+42, r24	; 0x2a
    768c:	76 2e       	mov	r7, r22
    768e:	4a 01       	movw	r8, r20
    7690:	59 01       	movw	r10, r18
    7692:	1b 8f       	std	Y+27, r17	; 0x1b
    7694:	0a 8f       	std	Y+26, r16	; 0x1a
	byte i,j,ch;
	word temp; 
	int newx,newy;
	double radian;
	radian=deg*0.0175;  
    7696:	b7 01       	movw	r22, r14
    7698:	ff 0c       	add	r15, r15
    769a:	88 0b       	sbc	r24, r24
    769c:	99 0b       	sbc	r25, r25
    769e:	1e d7       	rcall	.+3644   	; 0x84dc <__floatsisf>
    76a0:	29 e2       	ldi	r18, 0x29	; 41
    76a2:	3c e5       	ldi	r19, 0x5C	; 92
    76a4:	4f e8       	ldi	r20, 0x8F	; 143
    76a6:	5c e3       	ldi	r21, 0x3C	; 60
    76a8:	0e 94 5b 43 	call	0x86b6	; 0x86b6 <__mulsf3>
    76ac:	6b 01       	movw	r12, r22
    76ae:	7c 01       	movw	r14, r24

	cbi(P_CS, B_CS);
    76b0:	aa a5       	ldd	r26, Y+42	; 0x2a
    76b2:	bb a5       	ldd	r27, Y+43	; 0x2b
    76b4:	54 96       	adiw	r26, 0x14	; 20
    76b6:	ed 91       	ld	r30, X+
    76b8:	fc 91       	ld	r31, X
    76ba:	55 97       	sbiw	r26, 0x15	; 21
    76bc:	90 81       	ld	r25, Z
    76be:	90 96       	adiw	r26, 0x20	; 32
    76c0:	8c 91       	ld	r24, X
    76c2:	90 97       	sbiw	r26, 0x20	; 32
    76c4:	80 95       	com	r24
    76c6:	89 23       	and	r24, r25
    76c8:	80 83       	st	Z, r24

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    76ca:	9c 96       	adiw	r26, 0x2c	; 44
    76cc:	8c 91       	ld	r24, X
    76ce:	9c 97       	sbiw	r26, 0x2c	; 44
    76d0:	86 95       	lsr	r24
    76d2:	86 95       	lsr	r24
    76d4:	86 95       	lsr	r24
    76d6:	9d 96       	adiw	r26, 0x2d	; 45
    76d8:	9c 91       	ld	r25, X
    76da:	9d 97       	sbiw	r26, 0x2d	; 45
    76dc:	27 2d       	mov	r18, r7
    76de:	30 e0       	ldi	r19, 0x00	; 0
    76e0:	9e 96       	adiw	r26, 0x2e	; 46
    76e2:	4c 91       	ld	r20, X
    76e4:	24 1b       	sub	r18, r20
    76e6:	31 09       	sbc	r19, r1
    76e8:	89 9f       	mul	r24, r25
    76ea:	c0 01       	movw	r24, r0
    76ec:	11 24       	eor	r1, r1
    76ee:	28 9f       	mul	r18, r24
    76f0:	a0 01       	movw	r20, r0
    76f2:	29 9f       	mul	r18, r25
    76f4:	50 0d       	add	r21, r0
    76f6:	38 9f       	mul	r19, r24
    76f8:	50 0d       	add	r21, r0
    76fa:	11 24       	eor	r1, r1
    76fc:	fa 01       	movw	r30, r20
    76fe:	34 96       	adiw	r30, 0x04	; 4
    7700:	fd 83       	std	Y+5, r31	; 0x05
    7702:	ec 83       	std	Y+4, r30	; 0x04
	for(j=0;j<cfont.y_size;j++) 
    7704:	1b 82       	std	Y+3, r1	; 0x03
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    7706:	c4 01       	movw	r24, r8
    7708:	99 0c       	add	r9, r9
    770a:	aa 0b       	sbc	r26, r26
    770c:	bb 0b       	sbc	r27, r27
    770e:	8a a3       	std	Y+34, r24	; 0x22
    7710:	9b a3       	std	Y+35, r25	; 0x23
    7712:	ac a3       	std	Y+36, r26	; 0x24
    7714:	bd a3       	std	Y+37, r27	; 0x25
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    7716:	c5 01       	movw	r24, r10
    7718:	bb 0c       	add	r11, r11
    771a:	aa 0b       	sbc	r26, r26
    771c:	bb 0b       	sbc	r27, r27
    771e:	8e a3       	std	Y+38, r24	; 0x26
    7720:	9f a3       	std	Y+39, r25	; 0x27
    7722:	a8 a7       	std	Y+40, r26	; 0x28
    7724:	b9 a7       	std	Y+41, r27	; 0x29
	radian=deg*0.0175;  

	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
    7726:	aa a5       	ldd	r26, Y+42	; 0x2a
    7728:	bb a5       	ldd	r27, Y+43	; 0x2b
    772a:	9d 96       	adiw	r26, 0x2d	; 45
    772c:	8c 91       	ld	r24, X
    772e:	bb 81       	ldd	r27, Y+3	; 0x03
    7730:	b8 17       	cp	r27, r24
    7732:	08 f0       	brcs	.+2      	; 0x7736 <_ZN4UTFT10rotateCharEhiiii+0xe2>
    7734:	ee c0       	rjmp	.+476    	; 0x7912 <_ZN4UTFT10rotateCharEhiiii+0x2be>
    7736:	19 86       	std	Y+9, r1	; 0x09
    7738:	18 86       	std	Y+8, r1	; 0x08
    773a:	21 2c       	mov	r2, r1
    773c:	31 2c       	mov	r3, r1
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    773e:	8b 2f       	mov	r24, r27
    7740:	90 e0       	ldi	r25, 0x00	; 0
    7742:	a0 e0       	ldi	r26, 0x00	; 0
    7744:	b0 e0       	ldi	r27, 0x00	; 0
    7746:	8e 8f       	std	Y+30, r24	; 0x1e
    7748:	9f 8f       	std	Y+31, r25	; 0x1f
    774a:	a8 a3       	std	Y+32, r26	; 0x20
    774c:	b9 a3       	std	Y+33, r27	; 0x21
	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
    774e:	aa a5       	ldd	r26, Y+42	; 0x2a
    7750:	bb a5       	ldd	r27, Y+43	; 0x2b
    7752:	9c 96       	adiw	r26, 0x2c	; 44
    7754:	8c 91       	ld	r24, X
    7756:	9c 97       	sbiw	r26, 0x2c	; 44
    7758:	86 95       	lsr	r24
    775a:	86 95       	lsr	r24
    775c:	86 95       	lsr	r24
    775e:	90 e0       	ldi	r25, 0x00	; 0
    7760:	28 16       	cp	r2, r24
    7762:	39 06       	cpc	r3, r25
    7764:	0c f0       	brlt	.+2      	; 0x7768 <_ZN4UTFT10rotateCharEhiiii+0x114>
    7766:	cb c0       	rjmp	.+406    	; 0x78fe <_ZN4UTFT10rotateCharEhiiii+0x2aa>
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
    7768:	9a 96       	adiw	r26, 0x2a	; 42
    776a:	ed 91       	ld	r30, X+
    776c:	fc 91       	ld	r31, X
    776e:	9b 97       	sbiw	r26, 0x2b	; 43
    7770:	8c 81       	ldd	r24, Y+4	; 0x04
    7772:	9d 81       	ldd	r25, Y+5	; 0x05
    7774:	82 0d       	add	r24, r2
    7776:	93 1d       	adc	r25, r3
    7778:	e8 0f       	add	r30, r24
    777a:	f9 1f       	adc	r31, r25
    777c:	74 90       	lpm	r7, Z
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    777e:	c7 01       	movw	r24, r14
    7780:	b6 01       	movw	r22, r12
    7782:	76 d6       	rcall	.+3308   	; 0x8470 <cos>
    7784:	6a 87       	std	Y+10, r22	; 0x0a
    7786:	7b 87       	std	Y+11, r23	; 0x0b
    7788:	8c 87       	std	Y+12, r24	; 0x0c
    778a:	9d 87       	std	Y+13, r25	; 0x0d
    778c:	6e 8d       	ldd	r22, Y+30	; 0x1e
    778e:	7f 8d       	ldd	r23, Y+31	; 0x1f
    7790:	88 a1       	ldd	r24, Y+32	; 0x20
    7792:	99 a1       	ldd	r25, Y+33	; 0x21
    7794:	a3 d6       	rcall	.+3398   	; 0x84dc <__floatsisf>
    7796:	4b 01       	movw	r8, r22
    7798:	5c 01       	movw	r10, r24
    779a:	c7 01       	movw	r24, r14
    779c:	b6 01       	movw	r22, r12
    779e:	ee d7       	rcall	.+4060   	; 0x877c <sin>
    77a0:	6e 87       	std	Y+14, r22	; 0x0e
    77a2:	7f 87       	std	Y+15, r23	; 0x0f
    77a4:	88 8b       	std	Y+16, r24	; 0x10
    77a6:	99 8b       	std	Y+17, r25	; 0x11
    77a8:	9b 01       	movw	r18, r22
    77aa:	ac 01       	movw	r20, r24
    77ac:	c5 01       	movw	r24, r10
    77ae:	b4 01       	movw	r22, r8
    77b0:	82 d7       	rcall	.+3844   	; 0x86b6 <__mulsf3>
    77b2:	6a 8b       	std	Y+18, r22	; 0x12
    77b4:	7b 8b       	std	Y+19, r23	; 0x13
    77b6:	8c 8b       	std	Y+20, r24	; 0x14
    77b8:	9d 8b       	std	Y+21, r25	; 0x15
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    77ba:	a5 01       	movw	r20, r10
    77bc:	94 01       	movw	r18, r8
    77be:	6a 85       	ldd	r22, Y+10	; 0x0a
    77c0:	7b 85       	ldd	r23, Y+11	; 0x0b
    77c2:	8c 85       	ldd	r24, Y+12	; 0x0c
    77c4:	9d 85       	ldd	r25, Y+13	; 0x0d
    77c6:	77 d7       	rcall	.+3822   	; 0x86b6 <__mulsf3>
    77c8:	6e 8b       	std	Y+22, r22	; 0x16
    77ca:	7f 8b       	std	Y+23, r23	; 0x17
    77cc:	88 8f       	std	Y+24, r24	; 0x18
    77ce:	99 8f       	std	Y+25, r25	; 0x19
    77d0:	e8 85       	ldd	r30, Y+8	; 0x08
    77d2:	f9 85       	ldd	r31, Y+9	; 0x09
    77d4:	ff 83       	std	Y+7, r31	; 0x07
    77d6:	ee 83       	std	Y+6, r30	; 0x06
    77d8:	27 e0       	ldi	r18, 0x07	; 7
    77da:	30 e0       	ldi	r19, 0x00	; 0
    77dc:	3a 83       	std	Y+2, r19	; 0x02
    77de:	29 83       	std	Y+1, r18	; 0x01

				setXY(newx,newy,newx+1,newy+1);
				
				if((ch&(1<<(7-i)))!=0)   
    77e0:	87 2d       	mov	r24, r7
    77e2:	90 e0       	ldi	r25, 0x00	; 0
    77e4:	9d 8f       	std	Y+29, r25	; 0x1d
    77e6:	8c 8f       	std	Y+28, r24	; 0x1c
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    77e8:	aa a5       	ldd	r26, Y+42	; 0x2a
    77ea:	bb a5       	ldd	r27, Y+43	; 0x2b
    77ec:	9c 96       	adiw	r26, 0x2c	; 44
    77ee:	8c 91       	ld	r24, X
    77f0:	ea 8d       	ldd	r30, Y+26	; 0x1a
    77f2:	fb 8d       	ldd	r31, Y+27	; 0x1b
    77f4:	8e 9f       	mul	r24, r30
    77f6:	b0 01       	movw	r22, r0
    77f8:	8f 9f       	mul	r24, r31
    77fa:	70 0d       	add	r23, r0
    77fc:	11 24       	eor	r1, r1
    77fe:	2e 81       	ldd	r18, Y+6	; 0x06
    7800:	3f 81       	ldd	r19, Y+7	; 0x07
    7802:	62 0f       	add	r22, r18
    7804:	73 1f       	adc	r23, r19
    7806:	07 2e       	mov	r0, r23
    7808:	00 0c       	add	r0, r0
    780a:	88 0b       	sbc	r24, r24
    780c:	99 0b       	sbc	r25, r25
    780e:	66 d6       	rcall	.+3276   	; 0x84dc <__floatsisf>
    7810:	2b 01       	movw	r4, r22
    7812:	3c 01       	movw	r6, r24
    7814:	2a 85       	ldd	r18, Y+10	; 0x0a
    7816:	3b 85       	ldd	r19, Y+11	; 0x0b
    7818:	4c 85       	ldd	r20, Y+12	; 0x0c
    781a:	5d 85       	ldd	r21, Y+13	; 0x0d
    781c:	4c d7       	rcall	.+3736   	; 0x86b6 <__mulsf3>
    781e:	2a 89       	ldd	r18, Y+18	; 0x12
    7820:	3b 89       	ldd	r19, Y+19	; 0x13
    7822:	4c 89       	ldd	r20, Y+20	; 0x14
    7824:	5d 89       	ldd	r21, Y+21	; 0x15
    7826:	bb d5       	rcall	.+2934   	; 0x839e <__subsf3>
    7828:	4b 01       	movw	r8, r22
    782a:	5c 01       	movw	r10, r24
    782c:	6a a1       	ldd	r22, Y+34	; 0x22
    782e:	7b a1       	ldd	r23, Y+35	; 0x23
    7830:	8c a1       	ldd	r24, Y+36	; 0x24
    7832:	9d a1       	ldd	r25, Y+37	; 0x25
    7834:	53 d6       	rcall	.+3238   	; 0x84dc <__floatsisf>
    7836:	9b 01       	movw	r18, r22
    7838:	ac 01       	movw	r20, r24
    783a:	c5 01       	movw	r24, r10
    783c:	b4 01       	movw	r22, r8
    783e:	b0 d5       	rcall	.+2912   	; 0x83a0 <__addsf3>
    7840:	1a d6       	rcall	.+3124   	; 0x8476 <__fixsfsi>
    7842:	4b 01       	movw	r8, r22
    7844:	5c 01       	movw	r10, r24
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    7846:	2e 85       	ldd	r18, Y+14	; 0x0e
    7848:	3f 85       	ldd	r19, Y+15	; 0x0f
    784a:	48 89       	ldd	r20, Y+16	; 0x10
    784c:	59 89       	ldd	r21, Y+17	; 0x11
    784e:	c3 01       	movw	r24, r6
    7850:	b2 01       	movw	r22, r4
    7852:	31 d7       	rcall	.+3682   	; 0x86b6 <__mulsf3>
    7854:	2e 89       	ldd	r18, Y+22	; 0x16
    7856:	3f 89       	ldd	r19, Y+23	; 0x17
    7858:	48 8d       	ldd	r20, Y+24	; 0x18
    785a:	59 8d       	ldd	r21, Y+25	; 0x19
    785c:	a1 d5       	rcall	.+2882   	; 0x83a0 <__addsf3>
    785e:	2b 01       	movw	r4, r22
    7860:	3c 01       	movw	r6, r24
    7862:	6e a1       	ldd	r22, Y+38	; 0x26
    7864:	7f a1       	ldd	r23, Y+39	; 0x27
    7866:	88 a5       	ldd	r24, Y+40	; 0x28
    7868:	99 a5       	ldd	r25, Y+41	; 0x29
    786a:	38 d6       	rcall	.+3184   	; 0x84dc <__floatsisf>
    786c:	9b 01       	movw	r18, r22
    786e:	ac 01       	movw	r20, r24
    7870:	c3 01       	movw	r24, r6
    7872:	b2 01       	movw	r22, r4
    7874:	95 d5       	rcall	.+2858   	; 0x83a0 <__addsf3>
    7876:	ff d5       	rcall	.+3070   	; 0x8476 <__fixsfsi>
    7878:	8b 01       	movw	r16, r22

				setXY(newx,newy,newx+1,newy+1);
    787a:	0f 5f       	subi	r16, 0xFF	; 255
    787c:	1f 4f       	sbci	r17, 0xFF	; 255
    787e:	94 01       	movw	r18, r8
    7880:	2f 5f       	subi	r18, 0xFF	; 255
    7882:	3f 4f       	sbci	r19, 0xFF	; 255
    7884:	ab 01       	movw	r20, r22
    7886:	b4 01       	movw	r22, r8
    7888:	8a a5       	ldd	r24, Y+42	; 0x2a
    788a:	9b a5       	ldd	r25, Y+43	; 0x2b
    788c:	0e 94 a0 22 	call	0x4540	; 0x4540 <_ZN4UTFT5setXYEjjjj>
    7890:	8c 8d       	ldd	r24, Y+28	; 0x1c
				
				if((ch&(1<<(7-i)))!=0)   
    7892:	9d 8d       	ldd	r25, Y+29	; 0x1d
    7894:	09 80       	ldd	r0, Y+1	; 0x01
    7896:	02 c0       	rjmp	.+4      	; 0x789c <_ZN4UTFT10rotateCharEhiiii+0x248>
    7898:	95 95       	asr	r25
    789a:	87 95       	ror	r24
    789c:	0a 94       	dec	r0
    789e:	e2 f7       	brpl	.-8      	; 0x7898 <_ZN4UTFT10rotateCharEhiiii+0x244>
    78a0:	80 ff       	sbrs	r24, 0
    78a2:	0a c0       	rjmp	.+20     	; 0x78b8 <_ZN4UTFT10rotateCharEhiiii+0x264>
    78a4:	aa a5       	ldd	r26, Y+42	; 0x2a
				{
					setPixel((fch<<8)|fcl);
    78a6:	bb a5       	ldd	r27, Y+43	; 0x2b
    78a8:	6d 91       	ld	r22, X+
    78aa:	7c 91       	ld	r23, X
    78ac:	11 97       	sbiw	r26, 0x01	; 1
    78ae:	76 27       	eor	r23, r22
    78b0:	67 27       	eor	r22, r23
    78b2:	76 27       	eor	r23, r22
    78b4:	cd 01       	movw	r24, r26
    78b6:	0b c0       	rjmp	.+22     	; 0x78ce <_ZN4UTFT10rotateCharEhiiii+0x27a>
				} 
				else  
				{
					if (!_transparent)
    78b8:	ea a5       	ldd	r30, Y+42	; 0x2a
    78ba:	fb a5       	ldd	r31, Y+43	; 0x2b
    78bc:	80 a9       	ldd	r24, Z+48	; 0x30
    78be:	81 11       	cpse	r24, r1
    78c0:	07 c0       	rjmp	.+14     	; 0x78d0 <_ZN4UTFT10rotateCharEhiiii+0x27c>
						setPixel((bch<<8)|bcl);
    78c2:	62 81       	ldd	r22, Z+2	; 0x02
    78c4:	73 81       	ldd	r23, Z+3	; 0x03
    78c6:	76 27       	eor	r23, r22
    78c8:	67 27       	eor	r22, r23
    78ca:	76 27       	eor	r23, r22
    78cc:	cf 01       	movw	r24, r30
    78ce:	24 db       	rcall	.-2488   	; 0x6f18 <_ZN4UTFT8setPixelEj>
    78d0:	2e 81       	ldd	r18, Y+6	; 0x06
    78d2:	3f 81       	ldd	r19, Y+7	; 0x07
    78d4:	2f 5f       	subi	r18, 0xFF	; 255
    78d6:	3f 4f       	sbci	r19, 0xFF	; 255
    78d8:	3f 83       	std	Y+7, r19	; 0x07
    78da:	2e 83       	std	Y+6, r18	; 0x06
    78dc:	89 81       	ldd	r24, Y+1	; 0x01
    78de:	9a 81       	ldd	r25, Y+2	; 0x02
    78e0:	01 97       	sbiw	r24, 0x01	; 1
    78e2:	9a 83       	std	Y+2, r25	; 0x02
    78e4:	89 83       	std	Y+1, r24	; 0x01
    78e6:	01 96       	adiw	r24, 0x01	; 1
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
    78e8:	09 f0       	breq	.+2      	; 0x78ec <_ZN4UTFT10rotateCharEhiiii+0x298>
    78ea:	7e cf       	rjmp	.-260    	; 0x77e8 <_ZN4UTFT10rotateCharEhiiii+0x194>
    78ec:	bf ef       	ldi	r27, 0xFF	; 255
	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
    78ee:	2b 1a       	sub	r2, r27
    78f0:	3b 0a       	sbc	r3, r27
    78f2:	e8 85       	ldd	r30, Y+8	; 0x08
    78f4:	f9 85       	ldd	r31, Y+9	; 0x09
    78f6:	38 96       	adiw	r30, 0x08	; 8
    78f8:	f9 87       	std	Y+9, r31	; 0x09
    78fa:	e8 87       	std	Y+8, r30	; 0x08
    78fc:	28 cf       	rjmp	.-432    	; 0x774e <_ZN4UTFT10rotateCharEhiiii+0xfa>
    78fe:	2c 81       	ldd	r18, Y+4	; 0x04
					if (!_transparent)
						setPixel((bch<<8)|bcl);
				}   
			}
		}
		temp+=(cfont.x_size/8);
    7900:	3d 81       	ldd	r19, Y+5	; 0x05
    7902:	28 0f       	add	r18, r24
    7904:	39 1f       	adc	r19, r25
    7906:	3d 83       	std	Y+5, r19	; 0x05
    7908:	2c 83       	std	Y+4, r18	; 0x04
    790a:	3b 81       	ldd	r19, Y+3	; 0x03
	radian=deg*0.0175;  

	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
    790c:	3f 5f       	subi	r19, 0xFF	; 255
    790e:	3b 83       	std	Y+3, r19	; 0x03
    7910:	0a cf       	rjmp	.-492    	; 0x7726 <_ZN4UTFT10rotateCharEhiiii+0xd2>
    7912:	aa a5       	ldd	r26, Y+42	; 0x2a
				}   
			}
		}
		temp+=(cfont.x_size/8);
	}
	sbi(P_CS, B_CS);
    7914:	bb a5       	ldd	r27, Y+43	; 0x2b
    7916:	54 96       	adiw	r26, 0x14	; 20
    7918:	ed 91       	ld	r30, X+
    791a:	fc 91       	ld	r31, X
    791c:	55 97       	sbiw	r26, 0x15	; 21
    791e:	90 81       	ld	r25, Z
    7920:	90 96       	adiw	r26, 0x20	; 32
    7922:	8c 91       	ld	r24, X
    7924:	90 97       	sbiw	r26, 0x20	; 32
    7926:	89 2b       	or	r24, r25
    7928:	80 83       	st	Z, r24
    792a:	cd 01       	movw	r24, r26
	clrXY();
    792c:	ab 96       	adiw	r28, 0x2b	; 43
}
    792e:	0f b6       	in	r0, 0x3f	; 63
    7930:	f8 94       	cli
    7932:	de bf       	out	0x3e, r29	; 62
    7934:	0f be       	out	0x3f, r0	; 63
    7936:	cd bf       	out	0x3d, r28	; 61
    7938:	df 91       	pop	r29
    793a:	cf 91       	pop	r28
    793c:	1f 91       	pop	r17
    793e:	0f 91       	pop	r16
    7940:	ff 90       	pop	r15
    7942:	ef 90       	pop	r14
    7944:	df 90       	pop	r13
    7946:	cf 90       	pop	r12
    7948:	bf 90       	pop	r11
    794a:	af 90       	pop	r10
    794c:	9f 90       	pop	r9
    794e:	8f 90       	pop	r8
    7950:	7f 90       	pop	r7
    7952:	6f 90       	pop	r6
    7954:	5f 90       	pop	r5
    7956:	4f 90       	pop	r4
    7958:	3f 90       	pop	r3
    795a:	2f 90       	pop	r2
			}
		}
		temp+=(cfont.x_size/8);
	}
	sbi(P_CS, B_CS);
	clrXY();
    795c:	18 ca       	rjmp	.-3024   	; 0x6d8e <_ZN4UTFT5clrXYEv>

0000795e <_ZN4UTFT5printEPciii>:
    795e:	2f 92       	push	r2
}

void UTFT::print(char *st, int x, int y, int deg)
{
    7960:	3f 92       	push	r3
    7962:	4f 92       	push	r4
    7964:	5f 92       	push	r5
    7966:	6f 92       	push	r6
    7968:	7f 92       	push	r7
    796a:	8f 92       	push	r8
    796c:	9f 92       	push	r9
    796e:	af 92       	push	r10
    7970:	bf 92       	push	r11
    7972:	cf 92       	push	r12
    7974:	df 92       	push	r13
    7976:	ef 92       	push	r14
    7978:	ff 92       	push	r15
    797a:	0f 93       	push	r16
    797c:	1f 93       	push	r17
    797e:	cf 93       	push	r28
    7980:	df 93       	push	r29
    7982:	6c 01       	movw	r12, r24
    7984:	2b 01       	movw	r4, r22
    7986:	ea 01       	movw	r28, r20
    7988:	39 01       	movw	r6, r18
    798a:	18 01       	movw	r2, r16
	int stl, i;

	stl = strlen(st);
    798c:	fb 01       	movw	r30, r22
    798e:	01 90       	ld	r0, Z+
    7990:	00 20       	and	r0, r0
    7992:	e9 f7       	brne	.-6      	; 0x798e <_ZN4UTFT5printEPciii+0x30>
    7994:	31 97       	sbiw	r30, 0x01	; 1
    7996:	5f 01       	movw	r10, r30
    7998:	a6 1a       	sub	r10, r22
    799a:	b7 0a       	sbc	r11, r23

	if (orient==PORTRAIT)
    799c:	fc 01       	movw	r30, r24
    799e:	84 81       	ldd	r24, Z+4	; 0x04
    79a0:	81 11       	cpse	r24, r1
    79a2:	19 c0       	rjmp	.+50     	; 0x79d6 <_ZN4UTFT5printEPciii+0x78>
	{
	if (x==RIGHT)
    79a4:	4f 30       	cpi	r20, 0x0F	; 15
    79a6:	57 42       	sbci	r21, 0x27	; 39
    79a8:	61 f4       	brne	.+24     	; 0x79c2 <_ZN4UTFT5printEPciii+0x64>
		x=(disp_x_size+1)-(stl*cfont.x_size);
    79aa:	f6 01       	movw	r30, r12
    79ac:	c5 81       	ldd	r28, Z+5	; 0x05
    79ae:	d6 81       	ldd	r29, Z+6	; 0x06
    79b0:	21 96       	adiw	r28, 0x01	; 1
    79b2:	24 a5       	ldd	r18, Z+44	; 0x2c
    79b4:	2a 9d       	mul	r18, r10
    79b6:	c0 01       	movw	r24, r0
    79b8:	2b 9d       	mul	r18, r11
    79ba:	90 0d       	add	r25, r0
    79bc:	11 24       	eor	r1, r1
    79be:	c8 1b       	sub	r28, r24
    79c0:	d9 0b       	sbc	r29, r25
	if (x==CENTER)
    79c2:	ce 30       	cpi	r28, 0x0E	; 14
    79c4:	f7 e2       	ldi	r31, 0x27	; 39
    79c6:	df 07       	cpc	r29, r31
    79c8:	c1 f5       	brne	.+112    	; 0x7a3a <_ZN4UTFT5printEPciii+0xdc>
		x=((disp_x_size+1)-(stl*cfont.x_size))/2;
    79ca:	f6 01       	movw	r30, r12
    79cc:	85 81       	ldd	r24, Z+5	; 0x05
    79ce:	96 81       	ldd	r25, Z+6	; 0x06
    79d0:	a7 81       	ldd	r26, Z+7	; 0x07
    79d2:	b0 85       	ldd	r27, Z+8	; 0x08
    79d4:	18 c0       	rjmp	.+48     	; 0x7a06 <_ZN4UTFT5printEPciii+0xa8>
	}
	else
	{
	if (x==RIGHT)
    79d6:	4f 30       	cpi	r20, 0x0F	; 15
    79d8:	57 42       	sbci	r21, 0x27	; 39
    79da:	61 f4       	brne	.+24     	; 0x79f4 <_ZN4UTFT5printEPciii+0x96>
		x=(disp_y_size+1)-(stl*cfont.x_size);
    79dc:	f6 01       	movw	r30, r12
    79de:	c1 85       	ldd	r28, Z+9	; 0x09
    79e0:	d2 85       	ldd	r29, Z+10	; 0x0a
    79e2:	21 96       	adiw	r28, 0x01	; 1
    79e4:	24 a5       	ldd	r18, Z+44	; 0x2c
    79e6:	2a 9d       	mul	r18, r10
    79e8:	c0 01       	movw	r24, r0
    79ea:	2b 9d       	mul	r18, r11
    79ec:	90 0d       	add	r25, r0
    79ee:	11 24       	eor	r1, r1
    79f0:	c8 1b       	sub	r28, r24
    79f2:	d9 0b       	sbc	r29, r25
	if (x==CENTER)
    79f4:	ce 30       	cpi	r28, 0x0E	; 14
    79f6:	f7 e2       	ldi	r31, 0x27	; 39
    79f8:	df 07       	cpc	r29, r31
    79fa:	f9 f4       	brne	.+62     	; 0x7a3a <_ZN4UTFT5printEPciii+0xdc>
		x=((disp_y_size+1)-(stl*cfont.x_size))/2;
    79fc:	f6 01       	movw	r30, r12
    79fe:	81 85       	ldd	r24, Z+9	; 0x09
    7a00:	92 85       	ldd	r25, Z+10	; 0x0a
    7a02:	a3 85       	ldd	r26, Z+11	; 0x0b
    7a04:	b4 85       	ldd	r27, Z+12	; 0x0c
    7a06:	01 96       	adiw	r24, 0x01	; 1
    7a08:	a1 1d       	adc	r26, r1
    7a0a:	b1 1d       	adc	r27, r1
    7a0c:	24 a5       	ldd	r18, Z+44	; 0x2c
    7a0e:	2a 9d       	mul	r18, r10
    7a10:	80 01       	movw	r16, r0
    7a12:	2b 9d       	mul	r18, r11
    7a14:	10 0d       	add	r17, r0
    7a16:	11 24       	eor	r1, r1
    7a18:	01 2e       	mov	r0, r17
    7a1a:	00 0c       	add	r0, r0
    7a1c:	22 0b       	sbc	r18, r18
    7a1e:	33 0b       	sbc	r19, r19
    7a20:	bc 01       	movw	r22, r24
    7a22:	cd 01       	movw	r24, r26
    7a24:	60 1b       	sub	r22, r16
    7a26:	71 0b       	sbc	r23, r17
    7a28:	82 0b       	sbc	r24, r18
    7a2a:	93 0b       	sbc	r25, r19
    7a2c:	22 e0       	ldi	r18, 0x02	; 2
    7a2e:	30 e0       	ldi	r19, 0x00	; 0
    7a30:	40 e0       	ldi	r20, 0x00	; 0
    7a32:	50 e0       	ldi	r21, 0x00	; 0
    7a34:	0e 94 14 47 	call	0x8e28	; 0x8e28 <__divmodsi4>
    7a38:	e9 01       	movw	r28, r18
	}

	for (i=0; i<stl; i++)
    7a3a:	81 2c       	mov	r8, r1
    7a3c:	91 2c       	mov	r9, r1
    7a3e:	8a 14       	cp	r8, r10
    7a40:	9b 04       	cpc	r9, r11
    7a42:	0c f5       	brge	.+66     	; 0x7a86 <_ZN4UTFT5printEPciii+0x128>
		if (deg==0)
    7a44:	21 14       	cp	r2, r1
    7a46:	31 04       	cpc	r3, r1
    7a48:	79 f4       	brne	.+30     	; 0x7a68 <_ZN4UTFT5printEPciii+0x10a>
			printChar(*st++, x + (i*(cfont.x_size)), y);
    7a4a:	f6 01       	movw	r30, r12
    7a4c:	84 a5       	ldd	r24, Z+44	; 0x2c
    7a4e:	88 9d       	mul	r24, r8
    7a50:	a0 01       	movw	r20, r0
    7a52:	89 9d       	mul	r24, r9
    7a54:	50 0d       	add	r21, r0
    7a56:	11 24       	eor	r1, r1
    7a58:	4c 0f       	add	r20, r28
    7a5a:	5d 1f       	adc	r21, r29
    7a5c:	93 01       	movw	r18, r6
    7a5e:	f2 01       	movw	r30, r4
    7a60:	60 81       	ld	r22, Z
    7a62:	c6 01       	movw	r24, r12
    7a64:	1d dc       	rcall	.-1990   	; 0x72a0 <_ZN4UTFT9printCharEhii>
    7a66:	08 c0       	rjmp	.+16     	; 0x7a78 <_ZN4UTFT5printEPciii+0x11a>
		else
			rotateChar(*st++, x, y, i, deg);
    7a68:	71 01       	movw	r14, r2
    7a6a:	84 01       	movw	r16, r8
    7a6c:	93 01       	movw	r18, r6
    7a6e:	ae 01       	movw	r20, r28
    7a70:	f2 01       	movw	r30, r4
    7a72:	60 81       	ld	r22, Z
    7a74:	c6 01       	movw	r24, r12
    7a76:	ee dd       	rcall	.-1060   	; 0x7654 <_ZN4UTFT10rotateCharEhiiii>
		x=(disp_y_size+1)-(stl*cfont.x_size);
	if (x==CENTER)
		x=((disp_y_size+1)-(stl*cfont.x_size))/2;
	}

	for (i=0; i<stl; i++)
    7a78:	ff ef       	ldi	r31, 0xFF	; 255
    7a7a:	8f 1a       	sub	r8, r31
    7a7c:	9f 0a       	sbc	r9, r31
    7a7e:	8f ef       	ldi	r24, 0xFF	; 255
    7a80:	48 1a       	sub	r4, r24
    7a82:	58 0a       	sbc	r5, r24
    7a84:	dc cf       	rjmp	.-72     	; 0x7a3e <_ZN4UTFT5printEPciii+0xe0>
		if (deg==0)
			printChar(*st++, x + (i*(cfont.x_size)), y);
		else
			rotateChar(*st++, x, y, i, deg);
}
    7a86:	df 91       	pop	r29
    7a88:	cf 91       	pop	r28
    7a8a:	1f 91       	pop	r17
    7a8c:	0f 91       	pop	r16
    7a8e:	ff 90       	pop	r15
    7a90:	ef 90       	pop	r14
    7a92:	df 90       	pop	r13
    7a94:	cf 90       	pop	r12
    7a96:	bf 90       	pop	r11
    7a98:	af 90       	pop	r10
    7a9a:	9f 90       	pop	r9
    7a9c:	8f 90       	pop	r8
    7a9e:	7f 90       	pop	r7
    7aa0:	6f 90       	pop	r6
    7aa2:	5f 90       	pop	r5
    7aa4:	4f 90       	pop	r4
    7aa6:	3f 90       	pop	r3
    7aa8:	2f 90       	pop	r2
    7aaa:	08 95       	ret

00007aac <_ZN4UTFT5printE6Stringiii>:

void UTFT::print(String st, int x, int y, int deg)
{
    7aac:	6f 92       	push	r6
    7aae:	7f 92       	push	r7
    7ab0:	8f 92       	push	r8
    7ab2:	9f 92       	push	r9
    7ab4:	af 92       	push	r10
    7ab6:	bf 92       	push	r11
    7ab8:	cf 92       	push	r12
    7aba:	df 92       	push	r13
    7abc:	ef 92       	push	r14
    7abe:	ff 92       	push	r15
    7ac0:	0f 93       	push	r16
    7ac2:	1f 93       	push	r17
    7ac4:	cf 93       	push	r28
    7ac6:	df 93       	push	r29
    7ac8:	cd b7       	in	r28, 0x3d	; 61
    7aca:	de b7       	in	r29, 0x3e	; 62
    7acc:	5c 01       	movw	r10, r24
    7ace:	cb 01       	movw	r24, r22
    7ad0:	4a 01       	movw	r8, r20
    7ad2:	39 01       	movw	r6, r18
	char buf[st.length()+1];

	st.toCharArray(buf, st.length()+1);
	print(buf, x, y, deg);
}
    7ad4:	cd b6       	in	r12, 0x3d	; 61
    7ad6:	de b6       	in	r13, 0x3e	; 62
			rotateChar(*st++, x, y, i, deg);
}

void UTFT::print(String st, int x, int y, int deg)
{
	char buf[st.length()+1];
    7ad8:	fb 01       	movw	r30, r22
    7ada:	44 81       	ldd	r20, Z+4	; 0x04
    7adc:	55 81       	ldd	r21, Z+5	; 0x05
    7ade:	4f 5f       	subi	r20, 0xFF	; 255
    7ae0:	5f 4f       	sbci	r21, 0xFF	; 255
    7ae2:	2d b7       	in	r18, 0x3d	; 61
    7ae4:	3e b7       	in	r19, 0x3e	; 62
    7ae6:	24 1b       	sub	r18, r20
    7ae8:	35 0b       	sbc	r19, r21
    7aea:	0f b6       	in	r0, 0x3f	; 63
    7aec:	f8 94       	cli
    7aee:	3e bf       	out	0x3e, r19	; 62
    7af0:	0f be       	out	0x3f, r0	; 63
    7af2:	2d bf       	out	0x3d, r18	; 61
    7af4:	ed b7       	in	r30, 0x3d	; 61
    7af6:	fe b7       	in	r31, 0x3e	; 62
    7af8:	31 96       	adiw	r30, 0x01	; 1
    7afa:	7f 01       	movw	r14, r30
	void setCharAt(unsigned int index, char c);
	char operator [] (unsigned int index) const;
	char& operator [] (unsigned int index);
	void getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index=0) const;
	void toCharArray(char *buf, unsigned int bufsize, unsigned int index=0) const
		{ getBytes((unsigned char *)buf, bufsize, index); }
    7afc:	20 e0       	ldi	r18, 0x00	; 0
    7afe:	30 e0       	ldi	r19, 0x00	; 0
    7b00:	bf 01       	movw	r22, r30
    7b02:	0e 94 a0 46 	call	0x8d40	; 0x8d40 <_ZNK6String8getBytesEPhjj>

	st.toCharArray(buf, st.length()+1);
	print(buf, x, y, deg);
    7b06:	93 01       	movw	r18, r6
    7b08:	a4 01       	movw	r20, r8
    7b0a:	b7 01       	movw	r22, r14
    7b0c:	c5 01       	movw	r24, r10
    7b0e:	27 df       	rcall	.-434    	; 0x795e <_ZN4UTFT5printEPciii>
}
    7b10:	0f b6       	in	r0, 0x3f	; 63
    7b12:	f8 94       	cli
    7b14:	de be       	out	0x3e, r13	; 62
    7b16:	0f be       	out	0x3f, r0	; 63
    7b18:	cd be       	out	0x3d, r12	; 61
    7b1a:	df 91       	pop	r29
    7b1c:	cf 91       	pop	r28
    7b1e:	1f 91       	pop	r17
    7b20:	0f 91       	pop	r16
    7b22:	ff 90       	pop	r15
    7b24:	ef 90       	pop	r14
    7b26:	df 90       	pop	r13
    7b28:	cf 90       	pop	r12
    7b2a:	bf 90       	pop	r11
    7b2c:	af 90       	pop	r10
    7b2e:	9f 90       	pop	r9
    7b30:	8f 90       	pop	r8
    7b32:	7f 90       	pop	r7
    7b34:	6f 90       	pop	r6
    7b36:	08 95       	ret

00007b38 <_ZN4UTFT9printNumIEliiic>:

void UTFT::printNumI(long num, int x, int y, int length, char filler)
{
    7b38:	2f 92       	push	r2
    7b3a:	3f 92       	push	r3
    7b3c:	4f 92       	push	r4
    7b3e:	5f 92       	push	r5
    7b40:	6f 92       	push	r6
    7b42:	7f 92       	push	r7
    7b44:	8f 92       	push	r8
    7b46:	9f 92       	push	r9
    7b48:	af 92       	push	r10
    7b4a:	bf 92       	push	r11
    7b4c:	cf 92       	push	r12
    7b4e:	ef 92       	push	r14
    7b50:	ff 92       	push	r15
    7b52:	0f 93       	push	r16
    7b54:	1f 93       	push	r17
    7b56:	cf 93       	push	r28
    7b58:	df 93       	push	r29
    7b5a:	cd b7       	in	r28, 0x3d	; 61
    7b5c:	de b7       	in	r29, 0x3e	; 62
    7b5e:	ea 97       	sbiw	r28, 0x3a	; 58
    7b60:	0f b6       	in	r0, 0x3f	; 63
    7b62:	f8 94       	cli
    7b64:	de bf       	out	0x3e, r29	; 62
    7b66:	0f be       	out	0x3f, r0	; 63
    7b68:	cd bf       	out	0x3d, r28	; 61
    7b6a:	9e ab       	std	Y+54, r25	; 0x36
    7b6c:	8d ab       	std	Y+53, r24	; 0x35
    7b6e:	2a 01       	movw	r4, r20
    7b70:	3b 01       	movw	r6, r22
    7b72:	38 af       	std	Y+56, r19	; 0x38
    7b74:	2f ab       	std	Y+55, r18	; 0x37
    7b76:	1a af       	std	Y+58, r17	; 0x3a
    7b78:	09 af       	std	Y+57, r16	; 0x39
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
  
	if (num==0)
    7b7a:	41 15       	cp	r20, r1
    7b7c:	51 05       	cpc	r21, r1
    7b7e:	61 05       	cpc	r22, r1
    7b80:	71 05       	cpc	r23, r1
    7b82:	f1 f4       	brne	.+60     	; 0x7bc0 <_ZN4UTFT9printNumIEliiic+0x88>
	{
		if (length!=0)
    7b84:	e1 14       	cp	r14, r1
    7b86:	f1 04       	cpc	r15, r1
    7b88:	b9 f0       	breq	.+46     	; 0x7bb8 <_ZN4UTFT9printNumIEliiic+0x80>
    7b8a:	de 01       	movw	r26, r28
    7b8c:	11 96       	adiw	r26, 0x01	; 1
    7b8e:	80 e0       	ldi	r24, 0x00	; 0
    7b90:	90 e0       	ldi	r25, 0x00	; 0
    7b92:	fd 01       	movw	r30, r26
		{
			for (c=0; c<(length-1); c++)
    7b94:	21 e0       	ldi	r18, 0x01	; 1
    7b96:	e2 1a       	sub	r14, r18
    7b98:	f1 08       	sbc	r15, r1
    7b9a:	8e 15       	cp	r24, r14
    7b9c:	9f 05       	cpc	r25, r15
    7b9e:	1c f4       	brge	.+6      	; 0x7ba6 <_ZN4UTFT9printNumIEliiic+0x6e>
				st[c]=filler;
    7ba0:	cd 92       	st	X+, r12
  
	if (num==0)
	{
		if (length!=0)
		{
			for (c=0; c<(length-1); c++)
    7ba2:	01 96       	adiw	r24, 0x01	; 1
    7ba4:	fa cf       	rjmp	.-12     	; 0x7b9a <_ZN4UTFT9printNumIEliiic+0x62>
				st[c]=filler;
			st[c]=48;
    7ba6:	e8 0f       	add	r30, r24
    7ba8:	f9 1f       	adc	r31, r25
    7baa:	20 e3       	ldi	r18, 0x30	; 48
    7bac:	20 83       	st	Z, r18
			st[c+1]=0;
    7bae:	fe 01       	movw	r30, r28
    7bb0:	e8 0f       	add	r30, r24
    7bb2:	f9 1f       	adc	r31, r25
    7bb4:	12 82       	std	Z+2, r1	; 0x02
    7bb6:	85 c0       	rjmp	.+266    	; 0x7cc2 <_ZN4UTFT9printNumIEliiic+0x18a>
		}
		else
		{
			st[0]=48;
    7bb8:	80 e3       	ldi	r24, 0x30	; 48
    7bba:	89 83       	std	Y+1, r24	; 0x01
			st[1]=0;
    7bbc:	1a 82       	std	Y+2, r1	; 0x02
    7bbe:	81 c0       	rjmp	.+258    	; 0x7cc2 <_ZN4UTFT9printNumIEliiic+0x18a>
		}
	}
	else
	{
		if (num<0)
    7bc0:	77 ff       	sbrs	r23, 7
    7bc2:	0a c0       	rjmp	.+20     	; 0x7bd8 <_ZN4UTFT9printNumIEliiic+0xa0>
		{
			neg=true;
			num=-num;
    7bc4:	70 94       	com	r7
    7bc6:	60 94       	com	r6
    7bc8:	50 94       	com	r5
    7bca:	40 94       	com	r4
    7bcc:	41 1c       	adc	r4, r1
    7bce:	51 1c       	adc	r5, r1
    7bd0:	61 1c       	adc	r6, r1
    7bd2:	71 1c       	adc	r7, r1
	}
	else
	{
		if (num<0)
		{
			neg=true;
    7bd4:	11 e0       	ldi	r17, 0x01	; 1
    7bd6:	01 c0       	rjmp	.+2      	; 0x7bda <_ZN4UTFT9printNumIEliiic+0xa2>

void UTFT::printNumI(long num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
    7bd8:	10 e0       	ldi	r17, 0x00	; 0
    7bda:	5e 01       	movw	r10, r28
    7bdc:	3c e1       	ldi	r19, 0x1C	; 28
    7bde:	a3 0e       	add	r10, r19
    7be0:	b1 1c       	adc	r11, r1
	}
	else
	{
		if (num<0)
		{
			neg=true;
    7be2:	15 01       	movw	r2, r10
			num=-num;
		}
	  
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7be4:	c3 01       	movw	r24, r6
    7be6:	b2 01       	movw	r22, r4
    7be8:	2a e0       	ldi	r18, 0x0A	; 10
    7bea:	30 e0       	ldi	r19, 0x00	; 0
    7bec:	40 e0       	ldi	r20, 0x00	; 0
    7bee:	50 e0       	ldi	r21, 0x00	; 0
    7bf0:	0e 94 14 47 	call	0x8e28	; 0x8e28 <__divmodsi4>
    7bf4:	20 e3       	ldi	r18, 0x30	; 48
    7bf6:	26 0f       	add	r18, r22
    7bf8:	f1 01       	movw	r30, r2
    7bfa:	21 93       	st	Z+, r18
    7bfc:	1f 01       	movw	r2, r30
    7bfe:	4f 01       	movw	r8, r30
    7c00:	8a 18       	sub	r8, r10
    7c02:	9b 08       	sbc	r9, r11
			c++;
			num=(num-(num % 10))/10;
    7c04:	a3 01       	movw	r20, r6
    7c06:	92 01       	movw	r18, r4
    7c08:	26 1b       	sub	r18, r22
    7c0a:	37 0b       	sbc	r19, r23
    7c0c:	48 0b       	sbc	r20, r24
    7c0e:	59 0b       	sbc	r21, r25
    7c10:	ca 01       	movw	r24, r20
    7c12:	b9 01       	movw	r22, r18
    7c14:	2a e0       	ldi	r18, 0x0A	; 10
    7c16:	30 e0       	ldi	r19, 0x00	; 0
    7c18:	40 e0       	ldi	r20, 0x00	; 0
    7c1a:	50 e0       	ldi	r21, 0x00	; 0
    7c1c:	0e 94 14 47 	call	0x8e28	; 0x8e28 <__divmodsi4>
    7c20:	29 01       	movw	r4, r18
    7c22:	3a 01       	movw	r6, r20
		{
			neg=true;
			num=-num;
		}
	  
		while (num>0)
    7c24:	23 2b       	or	r18, r19
    7c26:	24 2b       	or	r18, r20
    7c28:	25 2b       	or	r18, r21
    7c2a:	e1 f6       	brne	.-72     	; 0x7be4 <_ZN4UTFT9printNumIEliiic+0xac>
		{
			buf[c]=48+(num % 10);
			c++;
			num=(num-(num % 10))/10;
		}
		buf[c]=0;
    7c2c:	f5 01       	movw	r30, r10
    7c2e:	e8 0d       	add	r30, r8
    7c30:	f9 1d       	adc	r31, r9
    7c32:	10 82       	st	Z, r1
	  
		if (neg)
    7c34:	11 23       	and	r17, r17
    7c36:	11 f0       	breq	.+4      	; 0x7c3c <_ZN4UTFT9printNumIEliiic+0x104>
		{
			st[0]=45;
    7c38:	8d e2       	ldi	r24, 0x2D	; 45
    7c3a:	89 83       	std	Y+1, r24	; 0x01
		}
	  
		if (length>(c+neg))
    7c3c:	81 2f       	mov	r24, r17
    7c3e:	90 e0       	ldi	r25, 0x00	; 0
    7c40:	9c 01       	movw	r18, r24
    7c42:	28 0d       	add	r18, r8
    7c44:	39 1d       	adc	r19, r9
    7c46:	2e 15       	cp	r18, r14
    7c48:	3f 05       	cpc	r19, r15
    7c4a:	b4 f4       	brge	.+44     	; 0x7c78 <_ZN4UTFT9printNumIEliiic+0x140>
    7c4c:	e1 e0       	ldi	r30, 0x01	; 1
    7c4e:	f0 e0       	ldi	r31, 0x00	; 0
    7c50:	ec 0f       	add	r30, r28
    7c52:	fd 1f       	adc	r31, r29
    7c54:	e8 0f       	add	r30, r24
    7c56:	f9 1f       	adc	r31, r25
		{
			for (int i=0; i<(length-c-neg); i++)
    7c58:	e8 18       	sub	r14, r8
    7c5a:	f9 08       	sbc	r15, r9
    7c5c:	e8 1a       	sub	r14, r24
    7c5e:	f9 0a       	sbc	r15, r25
    7c60:	af 01       	movw	r20, r30
    7c62:	bf 01       	movw	r22, r30
    7c64:	64 1b       	sub	r22, r20
    7c66:	75 0b       	sbc	r23, r21
    7c68:	6e 15       	cp	r22, r14
    7c6a:	7f 05       	cpc	r23, r15
    7c6c:	1c f0       	brlt	.+6      	; 0x7c74 <_ZN4UTFT9printNumIEliiic+0x13c>
    7c6e:	f7 fe       	sbrs	r15, 7
    7c70:	05 c0       	rjmp	.+10     	; 0x7c7c <_ZN4UTFT9printNumIEliiic+0x144>
    7c72:	02 c0       	rjmp	.+4      	; 0x7c78 <_ZN4UTFT9printNumIEliiic+0x140>
			{
				st[i+neg]=filler;
    7c74:	c1 92       	st	Z+, r12
			st[0]=45;
		}
	  
		if (length>(c+neg))
		{
			for (int i=0; i<(length-c-neg); i++)
    7c76:	f5 cf       	rjmp	.-22     	; 0x7c62 <_ZN4UTFT9printNumIEliiic+0x12a>
void UTFT::printNumI(long num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
    7c78:	e1 2c       	mov	r14, r1
    7c7a:	f1 2c       	mov	r15, r1
    7c7c:	d5 01       	movw	r26, r10
    7c7e:	a8 0d       	add	r26, r8
    7c80:	b9 1d       	adc	r27, r9
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7c82:	40 e0       	ldi	r20, 0x00	; 0
    7c84:	50 e0       	ldi	r21, 0x00	; 0
    7c86:	8e 0d       	add	r24, r14
    7c88:	9f 1d       	adc	r25, r15
    7c8a:	11 97       	sbiw	r26, 0x01	; 1
    7c8c:	48 15       	cp	r20, r8
    7c8e:	59 05       	cpc	r21, r9
    7c90:	71 f0       	breq	.+28     	; 0x7cae <_ZN4UTFT9printNumIEliiic+0x176>
		{
			st[i+neg+f]=buf[c-i-1];
    7c92:	fa 01       	movw	r30, r20
    7c94:	e8 0f       	add	r30, r24
    7c96:	f9 1f       	adc	r31, r25
    7c98:	61 e0       	ldi	r22, 0x01	; 1
    7c9a:	70 e0       	ldi	r23, 0x00	; 0
    7c9c:	6c 0f       	add	r22, r28
    7c9e:	7d 1f       	adc	r23, r29
    7ca0:	e6 0f       	add	r30, r22
    7ca2:	f7 1f       	adc	r31, r23
    7ca4:	6c 91       	ld	r22, X
    7ca6:	60 83       	st	Z, r22
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7ca8:	4f 5f       	subi	r20, 0xFF	; 255
    7caa:	5f 4f       	sbci	r21, 0xFF	; 255
    7cac:	ee cf       	rjmp	.-36     	; 0x7c8a <_ZN4UTFT9printNumIEliiic+0x152>
		{
			st[i+neg+f]=buf[c-i-1];
		}
		st[c+neg+f]=0;
    7cae:	81 e0       	ldi	r24, 0x01	; 1
    7cb0:	90 e0       	ldi	r25, 0x00	; 0
    7cb2:	8c 0f       	add	r24, r28
    7cb4:	9d 1f       	adc	r25, r29
    7cb6:	e8 0e       	add	r14, r24
    7cb8:	f9 1e       	adc	r15, r25
    7cba:	f7 01       	movw	r30, r14
    7cbc:	e2 0f       	add	r30, r18
    7cbe:	f3 1f       	adc	r31, r19
    7cc0:	10 82       	st	Z, r1

	}

	print(st,x,y);
    7cc2:	00 e0       	ldi	r16, 0x00	; 0
    7cc4:	10 e0       	ldi	r17, 0x00	; 0
    7cc6:	29 ad       	ldd	r18, Y+57	; 0x39
    7cc8:	3a ad       	ldd	r19, Y+58	; 0x3a
    7cca:	4f a9       	ldd	r20, Y+55	; 0x37
    7ccc:	58 ad       	ldd	r21, Y+56	; 0x38
    7cce:	be 01       	movw	r22, r28
    7cd0:	6f 5f       	subi	r22, 0xFF	; 255
    7cd2:	7f 4f       	sbci	r23, 0xFF	; 255
    7cd4:	8d a9       	ldd	r24, Y+53	; 0x35
    7cd6:	9e a9       	ldd	r25, Y+54	; 0x36
    7cd8:	42 de       	rcall	.-892    	; 0x795e <_ZN4UTFT5printEPciii>
}
    7cda:	ea 96       	adiw	r28, 0x3a	; 58
    7cdc:	0f b6       	in	r0, 0x3f	; 63
    7cde:	f8 94       	cli
    7ce0:	de bf       	out	0x3e, r29	; 62
    7ce2:	0f be       	out	0x3f, r0	; 63
    7ce4:	cd bf       	out	0x3d, r28	; 61
    7ce6:	df 91       	pop	r29
    7ce8:	cf 91       	pop	r28
    7cea:	1f 91       	pop	r17
    7cec:	0f 91       	pop	r16
    7cee:	ff 90       	pop	r15
    7cf0:	ef 90       	pop	r14
    7cf2:	cf 90       	pop	r12
    7cf4:	bf 90       	pop	r11
    7cf6:	af 90       	pop	r10
    7cf8:	9f 90       	pop	r9
    7cfa:	8f 90       	pop	r8
    7cfc:	7f 90       	pop	r7
    7cfe:	6f 90       	pop	r6
    7d00:	5f 90       	pop	r5
    7d02:	4f 90       	pop	r4
    7d04:	3f 90       	pop	r3
    7d06:	2f 90       	pop	r2
    7d08:	08 95       	ret

00007d0a <_ZN4UTFT9printNumFEdhiicic>:

void UTFT::printNumF(double num, byte dec, int x, int y, char divider, int length, char filler)
{
    7d0a:	2f 92       	push	r2
    7d0c:	3f 92       	push	r3
    7d0e:	4f 92       	push	r4
    7d10:	5f 92       	push	r5
    7d12:	6f 92       	push	r6
    7d14:	7f 92       	push	r7
    7d16:	8f 92       	push	r8
    7d18:	af 92       	push	r10
    7d1a:	cf 92       	push	r12
    7d1c:	ef 92       	push	r14
    7d1e:	ff 92       	push	r15
    7d20:	0f 93       	push	r16
    7d22:	1f 93       	push	r17
    7d24:	cf 93       	push	r28
    7d26:	df 93       	push	r29
    7d28:	cd b7       	in	r28, 0x3d	; 61
    7d2a:	de b7       	in	r29, 0x3e	; 62
    7d2c:	6d 97       	sbiw	r28, 0x1d	; 29
    7d2e:	0f b6       	in	r0, 0x3f	; 63
    7d30:	f8 94       	cli
    7d32:	de bf       	out	0x3e, r29	; 62
    7d34:	0f be       	out	0x3f, r0	; 63
    7d36:	cd bf       	out	0x3d, r28	; 61
    7d38:	3c 01       	movw	r6, r24
    7d3a:	1a 01       	movw	r2, r20
    7d3c:	2b 01       	movw	r4, r22
    7d3e:	1d 8f       	std	Y+29, r17	; 0x1d
    7d40:	0c 8f       	std	Y+28, r16	; 0x1c
    7d42:	4a 2d       	mov	r20, r10
	char st[27];
	boolean neg=false;

	if (dec<1)
    7d44:	22 23       	and	r18, r18
    7d46:	21 f0       	breq	.+8      	; 0x7d50 <_ZN4UTFT9printNumFEdhiicic+0x46>
    7d48:	26 30       	cpi	r18, 0x06	; 6
    7d4a:	18 f0       	brcs	.+6      	; 0x7d52 <_ZN4UTFT9printNumFEdhiicic+0x48>
    7d4c:	25 e0       	ldi	r18, 0x05	; 5
    7d4e:	01 c0       	rjmp	.+2      	; 0x7d52 <_ZN4UTFT9printNumFEdhiicic+0x48>
		dec=1;
    7d50:	21 e0       	ldi	r18, 0x01	; 1
void UTFT::_convert_float(char *buf, double num, int width, byte prec)
{
	dtostrf(num, width, prec, buf);
    7d52:	8e 01       	movw	r16, r28
    7d54:	0f 5f       	subi	r16, 0xFF	; 255
    7d56:	1f 4f       	sbci	r17, 0xFF	; 255
    7d58:	c2 01       	movw	r24, r4
    7d5a:	b1 01       	movw	r22, r2
    7d5c:	0e 94 51 47 	call	0x8ea2	; 0x8ea2 <dtostrf>
	if (num<0)
		neg = true;

	_convert_float(st, num, length, dec);

	if (divider != '.')
    7d60:	8e e2       	ldi	r24, 0x2E	; 46
    7d62:	c8 16       	cp	r12, r24
    7d64:	61 f0       	breq	.+24     	; 0x7d7e <_ZN4UTFT9printNumFEdhiicic+0x74>
    7d66:	f8 01       	movw	r30, r16
    7d68:	ce 01       	movw	r24, r28
    7d6a:	4c 96       	adiw	r24, 0x1c	; 28
	{
		for (int i=0; i<sizeof(st); i++)
    7d6c:	e8 17       	cp	r30, r24
    7d6e:	f9 07       	cpc	r31, r25
    7d70:	31 f0       	breq	.+12     	; 0x7d7e <_ZN4UTFT9printNumFEdhiicic+0x74>
			if (st[i]=='.')
    7d72:	20 81       	ld	r18, Z
    7d74:	2e 32       	cpi	r18, 0x2E	; 46
    7d76:	09 f4       	brne	.+2      	; 0x7d7a <_ZN4UTFT9printNumFEdhiicic+0x70>
				st[i]=divider;
    7d78:	c0 82       	st	Z, r12
    7d7a:	31 96       	adiw	r30, 0x01	; 1

	_convert_float(st, num, length, dec);

	if (divider != '.')
	{
		for (int i=0; i<sizeof(st); i++)
    7d7c:	f7 cf       	rjmp	.-18     	; 0x7d6c <_ZN4UTFT9printNumFEdhiicic+0x62>
			if (st[i]=='.')
				st[i]=divider;
	}

	if (filler != ' ')
    7d7e:	80 e2       	ldi	r24, 0x20	; 32
    7d80:	88 16       	cp	r8, r24
    7d82:	39 f1       	breq	.+78     	; 0x7dd2 <_ZN4UTFT9printNumFEdhiicic+0xc8>
	{
		if (neg)
    7d84:	20 e0       	ldi	r18, 0x00	; 0
    7d86:	30 e0       	ldi	r19, 0x00	; 0
    7d88:	a9 01       	movw	r20, r18
    7d8a:	c2 01       	movw	r24, r4
    7d8c:	b1 01       	movw	r22, r2
    7d8e:	6c d3       	rcall	.+1752   	; 0x8468 <__cmpsf2>
    7d90:	87 ff       	sbrs	r24, 7
    7d92:	12 c0       	rjmp	.+36     	; 0x7db8 <_ZN4UTFT9printNumFEdhiicic+0xae>
		{
			st[0]='-';
    7d94:	8d e2       	ldi	r24, 0x2D	; 45
    7d96:	89 83       	std	Y+1, r24	; 0x01
    7d98:	fe 01       	movw	r30, r28
    7d9a:	31 96       	adiw	r30, 0x01	; 1
    7d9c:	9e 01       	movw	r18, r28
    7d9e:	25 5e       	subi	r18, 0xE5	; 229
    7da0:	3f 4f       	sbci	r19, 0xFF	; 255
			for (int i=1; i<sizeof(st); i++)
    7da2:	e2 17       	cp	r30, r18
    7da4:	f3 07       	cpc	r31, r19
    7da6:	a9 f0       	breq	.+42     	; 0x7dd2 <_ZN4UTFT9printNumFEdhiicic+0xc8>
				if ((st[i]==' ') || (st[i]=='-'))
    7da8:	81 81       	ldd	r24, Z+1	; 0x01
    7daa:	80 32       	cpi	r24, 0x20	; 32
    7dac:	11 f0       	breq	.+4      	; 0x7db2 <_ZN4UTFT9printNumFEdhiicic+0xa8>
    7dae:	8d 32       	cpi	r24, 0x2D	; 45
    7db0:	09 f4       	brne	.+2      	; 0x7db4 <_ZN4UTFT9printNumFEdhiicic+0xaa>
					st[i]=filler;
    7db2:	81 82       	std	Z+1, r8	; 0x01
    7db4:	31 96       	adiw	r30, 0x01	; 1
	if (filler != ' ')
	{
		if (neg)
		{
			st[0]='-';
			for (int i=1; i<sizeof(st); i++)
    7db6:	f5 cf       	rjmp	.-22     	; 0x7da2 <_ZN4UTFT9printNumFEdhiicic+0x98>
    7db8:	fe 01       	movw	r30, r28
    7dba:	31 96       	adiw	r30, 0x01	; 1
    7dbc:	ce 01       	movw	r24, r28
    7dbe:	4c 96       	adiw	r24, 0x1c	; 28
				if ((st[i]==' ') || (st[i]=='-'))
					st[i]=filler;
		}
		else
		{
			for (int i=0; i<sizeof(st); i++)
    7dc0:	e8 17       	cp	r30, r24
    7dc2:	f9 07       	cpc	r31, r25
    7dc4:	31 f0       	breq	.+12     	; 0x7dd2 <_ZN4UTFT9printNumFEdhiicic+0xc8>
				if (st[i]==' ')
    7dc6:	20 81       	ld	r18, Z
    7dc8:	20 32       	cpi	r18, 0x20	; 32
    7dca:	09 f4       	brne	.+2      	; 0x7dce <_ZN4UTFT9printNumFEdhiicic+0xc4>
					st[i]=filler;
    7dcc:	80 82       	st	Z, r8
    7dce:	31 96       	adiw	r30, 0x01	; 1
				if ((st[i]==' ') || (st[i]=='-'))
					st[i]=filler;
		}
		else
		{
			for (int i=0; i<sizeof(st); i++)
    7dd0:	f7 cf       	rjmp	.-18     	; 0x7dc0 <_ZN4UTFT9printNumFEdhiicic+0xb6>
				if (st[i]==' ')
					st[i]=filler;
		}
	}

	print(st,x,y);
    7dd2:	00 e0       	ldi	r16, 0x00	; 0
    7dd4:	10 e0       	ldi	r17, 0x00	; 0
    7dd6:	97 01       	movw	r18, r14
    7dd8:	4c 8d       	ldd	r20, Y+28	; 0x1c
    7dda:	5d 8d       	ldd	r21, Y+29	; 0x1d
    7ddc:	be 01       	movw	r22, r28
    7dde:	6f 5f       	subi	r22, 0xFF	; 255
    7de0:	7f 4f       	sbci	r23, 0xFF	; 255
    7de2:	c3 01       	movw	r24, r6
    7de4:	bc dd       	rcall	.-1160   	; 0x795e <_ZN4UTFT5printEPciii>
}
    7de6:	6d 96       	adiw	r28, 0x1d	; 29
    7de8:	0f b6       	in	r0, 0x3f	; 63
    7dea:	f8 94       	cli
    7dec:	de bf       	out	0x3e, r29	; 62
    7dee:	0f be       	out	0x3f, r0	; 63
    7df0:	cd bf       	out	0x3d, r28	; 61
    7df2:	df 91       	pop	r29
    7df4:	cf 91       	pop	r28
    7df6:	1f 91       	pop	r17
    7df8:	0f 91       	pop	r16
    7dfa:	ff 90       	pop	r15
    7dfc:	ef 90       	pop	r14
    7dfe:	cf 90       	pop	r12
    7e00:	af 90       	pop	r10
    7e02:	8f 90       	pop	r8
    7e04:	7f 90       	pop	r7
    7e06:	6f 90       	pop	r6
    7e08:	5f 90       	pop	r5
    7e0a:	4f 90       	pop	r4
    7e0c:	3f 90       	pop	r3
    7e0e:	2f 90       	pop	r2
    7e10:	08 95       	ret

00007e12 <_ZN4UTFT7setFontEPh>:

void UTFT::setFont(uint8_t* font)
{
    7e12:	dc 01       	movw	r26, r24
	cfont.font=font;
    7e14:	9b 96       	adiw	r26, 0x2b	; 43
    7e16:	7c 93       	st	X, r23
    7e18:	6e 93       	st	-X, r22
    7e1a:	9a 97       	sbiw	r26, 0x2a	; 42
	cfont.x_size=fontbyte(0);
    7e1c:	fb 01       	movw	r30, r22
    7e1e:	84 91       	lpm	r24, Z
    7e20:	9c 96       	adiw	r26, 0x2c	; 44
    7e22:	8c 93       	st	X, r24
    7e24:	9c 97       	sbiw	r26, 0x2c	; 44
	cfont.y_size=fontbyte(1);
    7e26:	31 96       	adiw	r30, 0x01	; 1
    7e28:	e4 91       	lpm	r30, Z
    7e2a:	9d 96       	adiw	r26, 0x2d	; 45
    7e2c:	ec 93       	st	X, r30
    7e2e:	9d 97       	sbiw	r26, 0x2d	; 45
	cfont.offset=fontbyte(2);
    7e30:	fb 01       	movw	r30, r22
    7e32:	32 96       	adiw	r30, 0x02	; 2
    7e34:	e4 91       	lpm	r30, Z
    7e36:	9e 96       	adiw	r26, 0x2e	; 46
    7e38:	ec 93       	st	X, r30
    7e3a:	9e 97       	sbiw	r26, 0x2e	; 46
	cfont.numchars=fontbyte(3);
    7e3c:	fb 01       	movw	r30, r22
    7e3e:	33 96       	adiw	r30, 0x03	; 3
    7e40:	64 91       	lpm	r22, Z
    7e42:	9f 96       	adiw	r26, 0x2f	; 47
    7e44:	6c 93       	st	X, r22
    7e46:	08 95       	ret

00007e48 <twi_init>:
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    7e48:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <twi_state>
    7e4c:	81 e0       	ldi	r24, 0x01	; 1
    7e4e:	80 93 0c 09 	sts	0x090C, r24	; 0x80090c <twi_sendStop>
    7e52:	10 92 0b 09 	sts	0x090B, r1	; 0x80090b <twi_inRepStart>
    7e56:	61 e0       	ldi	r22, 0x01	; 1
    7e58:	84 e1       	ldi	r24, 0x14	; 20
    7e5a:	84 d6       	rcall	.+3336   	; 0x8b64 <digitalWrite>
    7e5c:	61 e0       	ldi	r22, 0x01	; 1
    7e5e:	85 e1       	ldi	r24, 0x15	; 21
    7e60:	81 d6       	rcall	.+3330   	; 0x8b64 <digitalWrite>
    7e62:	e9 eb       	ldi	r30, 0xB9	; 185
    7e64:	f0 e0       	ldi	r31, 0x00	; 0
    7e66:	80 81       	ld	r24, Z
    7e68:	8e 7f       	andi	r24, 0xFE	; 254
    7e6a:	80 83       	st	Z, r24
    7e6c:	80 81       	ld	r24, Z
    7e6e:	8d 7f       	andi	r24, 0xFD	; 253
    7e70:	80 83       	st	Z, r24
    7e72:	88 e4       	ldi	r24, 0x48	; 72
    7e74:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    7e78:	85 e4       	ldi	r24, 0x45	; 69
    7e7a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    7e7e:	08 95       	ret

00007e80 <twi_setAddress>:
    7e80:	88 0f       	add	r24, r24
    7e82:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7000ba>
    7e86:	08 95       	ret

00007e88 <twi_transmit>:
    7e88:	40 91 c3 08 	lds	r20, 0x08C3	; 0x8008c3 <twi_txBufferLength>
    7e8c:	26 2f       	mov	r18, r22
    7e8e:	30 e0       	ldi	r19, 0x00	; 0
    7e90:	24 0f       	add	r18, r20
    7e92:	31 1d       	adc	r19, r1
    7e94:	21 32       	cpi	r18, 0x21	; 33
    7e96:	31 05       	cpc	r19, r1
    7e98:	dc f4       	brge	.+54     	; 0x7ed0 <twi_transmit+0x48>
    7e9a:	20 91 0e 09 	lds	r18, 0x090E	; 0x80090e <twi_state>
    7e9e:	24 30       	cpi	r18, 0x04	; 4
    7ea0:	c9 f4       	brne	.+50     	; 0x7ed4 <twi_transmit+0x4c>
    7ea2:	fc 01       	movw	r30, r24
    7ea4:	80 e0       	ldi	r24, 0x00	; 0
    7ea6:	90 e0       	ldi	r25, 0x00	; 0
    7ea8:	86 17       	cp	r24, r22
    7eaa:	58 f4       	brcc	.+22     	; 0x7ec2 <twi_transmit+0x3a>
    7eac:	30 91 c3 08 	lds	r19, 0x08C3	; 0x8008c3 <twi_txBufferLength>
    7eb0:	21 91       	ld	r18, Z+
    7eb2:	dc 01       	movw	r26, r24
    7eb4:	ab 53       	subi	r26, 0x3B	; 59
    7eb6:	b7 4f       	sbci	r27, 0xF7	; 247
    7eb8:	a3 0f       	add	r26, r19
    7eba:	b1 1d       	adc	r27, r1
    7ebc:	2c 93       	st	X, r18
    7ebe:	01 96       	adiw	r24, 0x01	; 1
    7ec0:	f3 cf       	rjmp	.-26     	; 0x7ea8 <twi_transmit+0x20>
    7ec2:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <twi_txBufferLength>
    7ec6:	68 0f       	add	r22, r24
    7ec8:	60 93 c3 08 	sts	0x08C3, r22	; 0x8008c3 <twi_txBufferLength>
    7ecc:	80 e0       	ldi	r24, 0x00	; 0
    7ece:	08 95       	ret
    7ed0:	81 e0       	ldi	r24, 0x01	; 1
    7ed2:	08 95       	ret
    7ed4:	82 e0       	ldi	r24, 0x02	; 2
    7ed6:	08 95       	ret

00007ed8 <twi_attachSlaveRxEvent>:
    7ed8:	90 93 08 09 	sts	0x0908, r25	; 0x800908 <twi_onSlaveReceive+0x1>
    7edc:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <twi_onSlaveReceive>
    7ee0:	08 95       	ret

00007ee2 <twi_attachSlaveTxEvent>:
    7ee2:	90 93 0a 09 	sts	0x090A, r25	; 0x80090a <twi_onSlaveTransmit+0x1>
    7ee6:	80 93 09 09 	sts	0x0909, r24	; 0x800909 <twi_onSlaveTransmit>
    7eea:	08 95       	ret

00007eec <twi_stop>:
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    7eec:	85 ed       	ldi	r24, 0xD5	; 213
    7eee:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    7ef2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    7ef6:	84 fd       	sbrc	r24, 4
    7ef8:	fc cf       	rjmp	.-8      	; 0x7ef2 <twi_stop+0x6>
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    7efa:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <twi_state>
    7efe:	08 95       	ret

00007f00 <twi_releaseBus>:
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    7f00:	85 ec       	ldi	r24, 0xC5	; 197
    7f02:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

  // update twi state
  twi_state = TWI_READY;
    7f06:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <twi_state>
    7f0a:	08 95       	ret

00007f0c <__vector_39>:
}

ISR(TWI_vect)
{
    7f0c:	1f 92       	push	r1
    7f0e:	0f 92       	push	r0
    7f10:	0f b6       	in	r0, 0x3f	; 63
    7f12:	0f 92       	push	r0
    7f14:	11 24       	eor	r1, r1
    7f16:	0b b6       	in	r0, 0x3b	; 59
    7f18:	0f 92       	push	r0
    7f1a:	2f 93       	push	r18
    7f1c:	3f 93       	push	r19
    7f1e:	4f 93       	push	r20
    7f20:	5f 93       	push	r21
    7f22:	6f 93       	push	r22
    7f24:	7f 93       	push	r23
    7f26:	8f 93       	push	r24
    7f28:	9f 93       	push	r25
    7f2a:	af 93       	push	r26
    7f2c:	bf 93       	push	r27
    7f2e:	ef 93       	push	r30
    7f30:	ff 93       	push	r31
  switch(TW_STATUS){
    7f32:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    7f36:	88 7f       	andi	r24, 0xF8	; 248
    7f38:	80 36       	cpi	r24, 0x60	; 96
    7f3a:	09 f4       	brne	.+2      	; 0x7f3e <__vector_39+0x32>
    7f3c:	9d c0       	rjmp	.+314    	; 0x8078 <__vector_39+0x16c>
    7f3e:	70 f5       	brcc	.+92     	; 0x7f9c <__vector_39+0x90>
    7f40:	88 32       	cpi	r24, 0x28	; 40
    7f42:	09 f4       	brne	.+2      	; 0x7f46 <__vector_39+0x3a>
    7f44:	5c c0       	rjmp	.+184    	; 0x7ffe <__vector_39+0xf2>
    7f46:	90 f4       	brcc	.+36     	; 0x7f6c <__vector_39+0x60>
    7f48:	80 31       	cpi	r24, 0x10	; 16
    7f4a:	09 f4       	brne	.+2      	; 0x7f4e <__vector_39+0x42>
    7f4c:	55 c0       	rjmp	.+170    	; 0x7ff8 <__vector_39+0xec>
    7f4e:	38 f4       	brcc	.+14     	; 0x7f5e <__vector_39+0x52>
    7f50:	88 23       	and	r24, r24
    7f52:	09 f4       	brne	.+2      	; 0x7f56 <__vector_39+0x4a>
    7f54:	f3 c0       	rjmp	.+486    	; 0x813c <__vector_39+0x230>
    7f56:	88 30       	cpi	r24, 0x08	; 8
    7f58:	09 f4       	brne	.+2      	; 0x7f5c <__vector_39+0x50>
    7f5a:	4e c0       	rjmp	.+156    	; 0x7ff8 <__vector_39+0xec>
    7f5c:	f2 c0       	rjmp	.+484    	; 0x8142 <__vector_39+0x236>
    7f5e:	88 31       	cpi	r24, 0x18	; 24
    7f60:	09 f4       	brne	.+2      	; 0x7f64 <__vector_39+0x58>
    7f62:	4d c0       	rjmp	.+154    	; 0x7ffe <__vector_39+0xf2>
    7f64:	80 32       	cpi	r24, 0x20	; 32
    7f66:	09 f4       	brne	.+2      	; 0x7f6a <__vector_39+0x5e>
    7f68:	5e c0       	rjmp	.+188    	; 0x8026 <__vector_39+0x11a>
    7f6a:	eb c0       	rjmp	.+470    	; 0x8142 <__vector_39+0x236>
    7f6c:	80 34       	cpi	r24, 0x40	; 64
    7f6e:	09 f4       	brne	.+2      	; 0x7f72 <__vector_39+0x66>
    7f70:	69 c0       	rjmp	.+210    	; 0x8044 <__vector_39+0x138>
    7f72:	50 f4       	brcc	.+20     	; 0x7f88 <__vector_39+0x7c>
    7f74:	80 33       	cpi	r24, 0x30	; 48
    7f76:	09 f4       	brne	.+2      	; 0x7f7a <__vector_39+0x6e>
    7f78:	56 c0       	rjmp	.+172    	; 0x8026 <__vector_39+0x11a>
    7f7a:	88 33       	cpi	r24, 0x38	; 56
    7f7c:	09 f0       	breq	.+2      	; 0x7f80 <__vector_39+0x74>
    7f7e:	e1 c0       	rjmp	.+450    	; 0x8142 <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    7f80:	80 93 a1 08 	sts	0x08A1, r24	; 0x8008a1 <twi_error>
      twi_releaseBus();
    7f84:	bd df       	rcall	.-134    	; 0x7f00 <twi_releaseBus>
      break;
    7f86:	dd c0       	rjmp	.+442    	; 0x8142 <__vector_39+0x236>
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    7f88:	80 35       	cpi	r24, 0x50	; 80
    7f8a:	09 f4       	brne	.+2      	; 0x7f8e <__vector_39+0x82>
    7f8c:	4f c0       	rjmp	.+158    	; 0x802c <__vector_39+0x120>
    7f8e:	88 35       	cpi	r24, 0x58	; 88
    7f90:	09 f4       	brne	.+2      	; 0x7f94 <__vector_39+0x88>
    7f92:	5d c0       	rjmp	.+186    	; 0x804e <__vector_39+0x142>
    7f94:	88 34       	cpi	r24, 0x48	; 72
    7f96:	09 f0       	breq	.+2      	; 0x7f9a <__vector_39+0x8e>
    7f98:	d4 c0       	rjmp	.+424    	; 0x8142 <__vector_39+0x236>
    7f9a:	d2 c0       	rjmp	.+420    	; 0x8140 <__vector_39+0x234>
    7f9c:	88 39       	cpi	r24, 0x98	; 152
    7f9e:	09 f4       	brne	.+2      	; 0x7fa2 <__vector_39+0x96>
    7fa0:	c3 c0       	rjmp	.+390    	; 0x8128 <__vector_39+0x21c>
    7fa2:	a8 f4       	brcc	.+42     	; 0x7fce <__vector_39+0xc2>
    7fa4:	88 37       	cpi	r24, 0x78	; 120
    7fa6:	09 f4       	brne	.+2      	; 0x7faa <__vector_39+0x9e>
    7fa8:	67 c0       	rjmp	.+206    	; 0x8078 <__vector_39+0x16c>
    7faa:	38 f4       	brcc	.+14     	; 0x7fba <__vector_39+0xae>
    7fac:	88 36       	cpi	r24, 0x68	; 104
    7fae:	09 f4       	brne	.+2      	; 0x7fb2 <__vector_39+0xa6>
    7fb0:	63 c0       	rjmp	.+198    	; 0x8078 <__vector_39+0x16c>
    7fb2:	80 37       	cpi	r24, 0x70	; 112
    7fb4:	09 f4       	brne	.+2      	; 0x7fb8 <__vector_39+0xac>
    7fb6:	60 c0       	rjmp	.+192    	; 0x8078 <__vector_39+0x16c>
    7fb8:	c4 c0       	rjmp	.+392    	; 0x8142 <__vector_39+0x236>
    7fba:	88 38       	cpi	r24, 0x88	; 136
    7fbc:	09 f4       	brne	.+2      	; 0x7fc0 <__vector_39+0xb4>
    7fbe:	b4 c0       	rjmp	.+360    	; 0x8128 <__vector_39+0x21c>
    7fc0:	80 39       	cpi	r24, 0x90	; 144
    7fc2:	09 f4       	brne	.+2      	; 0x7fc6 <__vector_39+0xba>
    7fc4:	5f c0       	rjmp	.+190    	; 0x8084 <__vector_39+0x178>
    7fc6:	80 38       	cpi	r24, 0x80	; 128
    7fc8:	09 f0       	breq	.+2      	; 0x7fcc <__vector_39+0xc0>
    7fca:	bb c0       	rjmp	.+374    	; 0x8142 <__vector_39+0x236>
    7fcc:	5b c0       	rjmp	.+182    	; 0x8084 <__vector_39+0x178>
    7fce:	80 3b       	cpi	r24, 0xB0	; 176
    7fd0:	09 f4       	brne	.+2      	; 0x7fd4 <__vector_39+0xc8>
    7fd2:	82 c0       	rjmp	.+260    	; 0x80d8 <__vector_39+0x1cc>
    7fd4:	38 f4       	brcc	.+14     	; 0x7fe4 <__vector_39+0xd8>
    7fd6:	80 3a       	cpi	r24, 0xA0	; 160
    7fd8:	09 f4       	brne	.+2      	; 0x7fdc <__vector_39+0xd0>
    7fda:	66 c0       	rjmp	.+204    	; 0x80a8 <__vector_39+0x19c>
    7fdc:	88 3a       	cpi	r24, 0xA8	; 168
    7fde:	09 f4       	brne	.+2      	; 0x7fe2 <__vector_39+0xd6>
    7fe0:	7b c0       	rjmp	.+246    	; 0x80d8 <__vector_39+0x1cc>
    7fe2:	af c0       	rjmp	.+350    	; 0x8142 <__vector_39+0x236>
    7fe4:	80 3c       	cpi	r24, 0xC0	; 192
    7fe6:	09 f4       	brne	.+2      	; 0x7fea <__vector_39+0xde>
    7fe8:	a3 c0       	rjmp	.+326    	; 0x8130 <__vector_39+0x224>
    7fea:	88 3c       	cpi	r24, 0xC8	; 200
    7fec:	09 f4       	brne	.+2      	; 0x7ff0 <__vector_39+0xe4>
    7fee:	a0 c0       	rjmp	.+320    	; 0x8130 <__vector_39+0x224>
    7ff0:	88 3b       	cpi	r24, 0xB8	; 184
    7ff2:	09 f4       	brne	.+2      	; 0x7ff6 <__vector_39+0xea>
    7ff4:	86 c0       	rjmp	.+268    	; 0x8102 <__vector_39+0x1f6>
    7ff6:	a5 c0       	rjmp	.+330    	; 0x8142 <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    7ff8:	80 91 0d 09 	lds	r24, 0x090D	; 0x80090d <twi_slarw>
    7ffc:	10 c0       	rjmp	.+32     	; 0x801e <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    7ffe:	90 91 e6 08 	lds	r25, 0x08E6	; 0x8008e6 <twi_masterBufferIndex>
    8002:	80 91 e5 08 	lds	r24, 0x08E5	; 0x8008e5 <twi_masterBufferLength>
    8006:	98 17       	cp	r25, r24
    8008:	70 f5       	brcc	.+92     	; 0x8066 <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    800a:	e0 91 e6 08 	lds	r30, 0x08E6	; 0x8008e6 <twi_masterBufferIndex>
    800e:	81 e0       	ldi	r24, 0x01	; 1
    8010:	8e 0f       	add	r24, r30
    8012:	80 93 e6 08 	sts	0x08E6, r24	; 0x8008e6 <twi_masterBufferIndex>
    8016:	f0 e0       	ldi	r31, 0x00	; 0
    8018:	e9 51       	subi	r30, 0x19	; 25
    801a:	f7 4f       	sbci	r31, 0xF7	; 247
    801c:	80 81       	ld	r24, Z
    801e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    8022:	85 ec       	ldi	r24, 0xC5	; 197
    8024:	82 c0       	rjmp	.+260    	; 0x812a <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    8026:	80 93 a1 08 	sts	0x08A1, r24	; 0x8008a1 <twi_error>
    802a:	8a c0       	rjmp	.+276    	; 0x8140 <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    802c:	e0 91 e6 08 	lds	r30, 0x08E6	; 0x8008e6 <twi_masterBufferIndex>
    8030:	81 e0       	ldi	r24, 0x01	; 1
    8032:	8e 0f       	add	r24, r30
    8034:	80 93 e6 08 	sts	0x08E6, r24	; 0x8008e6 <twi_masterBufferIndex>
    8038:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    803c:	f0 e0       	ldi	r31, 0x00	; 0
    803e:	e9 51       	subi	r30, 0x19	; 25
    8040:	f7 4f       	sbci	r31, 0xF7	; 247
    8042:	80 83       	st	Z, r24
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    8044:	90 91 e6 08 	lds	r25, 0x08E6	; 0x8008e6 <twi_masterBufferIndex>
    8048:	80 91 e5 08 	lds	r24, 0x08E5	; 0x8008e5 <twi_masterBufferLength>
    804c:	6a c0       	rjmp	.+212    	; 0x8122 <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    804e:	e0 91 e6 08 	lds	r30, 0x08E6	; 0x8008e6 <twi_masterBufferIndex>
    8052:	81 e0       	ldi	r24, 0x01	; 1
    8054:	8e 0f       	add	r24, r30
    8056:	80 93 e6 08 	sts	0x08E6, r24	; 0x8008e6 <twi_masterBufferIndex>
    805a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    805e:	f0 e0       	ldi	r31, 0x00	; 0
    8060:	e9 51       	subi	r30, 0x19	; 25
    8062:	f7 4f       	sbci	r31, 0xF7	; 247
    8064:	80 83       	st	Z, r24
	if (twi_sendStop)
    8066:	80 91 0c 09 	lds	r24, 0x090C	; 0x80090c <twi_sendStop>
    806a:	81 11       	cpse	r24, r1
    806c:	69 c0       	rjmp	.+210    	; 0x8140 <__vector_39+0x234>
          twi_stop();
	else {
	  twi_inRepStart = true;	// we're gonna send the START
    806e:	81 e0       	ldi	r24, 0x01	; 1
    8070:	80 93 0b 09 	sts	0x090B, r24	; 0x80090b <twi_inRepStart>
	  // don't enable the interrupt. We'll generate the start, but we 
	  // avoid handling the interrupt until we're in the next transaction,
	  // at the point where we would normally issue the start.
	  TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    8074:	84 ea       	ldi	r24, 0xA4	; 164
    8076:	5d c0       	rjmp	.+186    	; 0x8132 <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    8078:	83 e0       	ldi	r24, 0x03	; 3
    807a:	80 93 0e 09 	sts	0x090E, r24	; 0x80090e <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    807e:	10 92 a2 08 	sts	0x08A2, r1	; 0x8008a2 <twi_rxBufferIndex>
    8082:	cf cf       	rjmp	.-98     	; 0x8022 <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    8084:	80 91 a2 08 	lds	r24, 0x08A2	; 0x8008a2 <twi_rxBufferIndex>
    8088:	80 32       	cpi	r24, 0x20	; 32
    808a:	08 f0       	brcs	.+2      	; 0x808e <__vector_39+0x182>
    808c:	4d c0       	rjmp	.+154    	; 0x8128 <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    808e:	e0 91 a2 08 	lds	r30, 0x08A2	; 0x8008a2 <twi_rxBufferIndex>
    8092:	81 e0       	ldi	r24, 0x01	; 1
    8094:	8e 0f       	add	r24, r30
    8096:	80 93 a2 08 	sts	0x08A2, r24	; 0x8008a2 <twi_rxBufferIndex>
    809a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    809e:	f0 e0       	ldi	r31, 0x00	; 0
    80a0:	ed 55       	subi	r30, 0x5D	; 93
    80a2:	f7 4f       	sbci	r31, 0xF7	; 247
    80a4:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    80a6:	bd cf       	rjmp	.-134    	; 0x8022 <__vector_39+0x116>
    80a8:	2b df       	rcall	.-426    	; 0x7f00 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    80aa:	80 91 a2 08 	lds	r24, 0x08A2	; 0x8008a2 <twi_rxBufferIndex>
    80ae:	80 32       	cpi	r24, 0x20	; 32
    80b0:	30 f4       	brcc	.+12     	; 0x80be <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    80b2:	e0 91 a2 08 	lds	r30, 0x08A2	; 0x8008a2 <twi_rxBufferIndex>
    80b6:	f0 e0       	ldi	r31, 0x00	; 0
    80b8:	ed 55       	subi	r30, 0x5D	; 93
    80ba:	f7 4f       	sbci	r31, 0xF7	; 247
    80bc:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    80be:	60 91 a2 08 	lds	r22, 0x08A2	; 0x8008a2 <twi_rxBufferIndex>
    80c2:	70 e0       	ldi	r23, 0x00	; 0
    80c4:	e0 91 07 09 	lds	r30, 0x0907	; 0x800907 <twi_onSlaveReceive>
    80c8:	f0 91 08 09 	lds	r31, 0x0908	; 0x800908 <twi_onSlaveReceive+0x1>
    80cc:	83 ea       	ldi	r24, 0xA3	; 163
    80ce:	98 e0       	ldi	r25, 0x08	; 8
    80d0:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    80d2:	10 92 a2 08 	sts	0x08A2, r1	; 0x8008a2 <twi_rxBufferIndex>
      break;
    80d6:	35 c0       	rjmp	.+106    	; 0x8142 <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    80d8:	84 e0       	ldi	r24, 0x04	; 4
    80da:	80 93 0e 09 	sts	0x090E, r24	; 0x80090e <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    80de:	10 92 c4 08 	sts	0x08C4, r1	; 0x8008c4 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    80e2:	10 92 c3 08 	sts	0x08C3, r1	; 0x8008c3 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    80e6:	e0 91 09 09 	lds	r30, 0x0909	; 0x800909 <twi_onSlaveTransmit>
    80ea:	f0 91 0a 09 	lds	r31, 0x090A	; 0x80090a <twi_onSlaveTransmit+0x1>
    80ee:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    80f0:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <twi_txBufferLength>
    80f4:	81 11       	cpse	r24, r1
    80f6:	05 c0       	rjmp	.+10     	; 0x8102 <__vector_39+0x1f6>
        twi_txBufferLength = 1;
    80f8:	81 e0       	ldi	r24, 0x01	; 1
    80fa:	80 93 c3 08 	sts	0x08C3, r24	; 0x8008c3 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    80fe:	10 92 c5 08 	sts	0x08C5, r1	; 0x8008c5 <twi_txBuffer>
      }
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    8102:	e0 91 c4 08 	lds	r30, 0x08C4	; 0x8008c4 <twi_txBufferIndex>
    8106:	81 e0       	ldi	r24, 0x01	; 1
    8108:	8e 0f       	add	r24, r30
    810a:	80 93 c4 08 	sts	0x08C4, r24	; 0x8008c4 <twi_txBufferIndex>
    810e:	f0 e0       	ldi	r31, 0x00	; 0
    8110:	eb 53       	subi	r30, 0x3B	; 59
    8112:	f7 4f       	sbci	r31, 0xF7	; 247
    8114:	80 81       	ld	r24, Z
    8116:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    811a:	90 91 c4 08 	lds	r25, 0x08C4	; 0x8008c4 <twi_txBufferIndex>
    811e:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <twi_txBufferLength>
    8122:	98 17       	cp	r25, r24
    8124:	08 f4       	brcc	.+2      	; 0x8128 <__vector_39+0x21c>
    8126:	7d cf       	rjmp	.-262    	; 0x8022 <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    8128:	85 e8       	ldi	r24, 0x85	; 133
    812a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    812e:	09 c0       	rjmp	.+18     	; 0x8142 <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    8130:	85 ec       	ldi	r24, 0xC5	; 197
    8132:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    8136:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <twi_state>
      break;
    813a:	03 c0       	rjmp	.+6      	; 0x8142 <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    813c:	10 92 a1 08 	sts	0x08A1, r1	; 0x8008a1 <twi_error>
      twi_stop();
    8140:	d5 de       	rcall	.-598    	; 0x7eec <twi_stop>
      break;
  }
}
    8142:	ff 91       	pop	r31
    8144:	ef 91       	pop	r30
    8146:	bf 91       	pop	r27
    8148:	af 91       	pop	r26
    814a:	9f 91       	pop	r25
    814c:	8f 91       	pop	r24
    814e:	7f 91       	pop	r23
    8150:	6f 91       	pop	r22
    8152:	5f 91       	pop	r21
    8154:	4f 91       	pop	r20
    8156:	3f 91       	pop	r19
    8158:	2f 91       	pop	r18
    815a:	0f 90       	pop	r0
    815c:	0b be       	out	0x3b, r0	; 59
    815e:	0f 90       	pop	r0
    8160:	0f be       	out	0x3f, r0	; 63
    8162:	0f 90       	pop	r0
    8164:	1f 90       	pop	r1
    8166:	18 95       	reti

00008168 <_ZN7TwoWire9availableEv>:
}

// sets function called on slave write
void TwoWire::onReceive( void (*function)(int) )
{
  user_onReceive = function;
    8168:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <_ZN7TwoWire14rxBufferLengthE>
    816c:	90 e0       	ldi	r25, 0x00	; 0
    816e:	20 91 43 09 	lds	r18, 0x0943	; 0x800943 <_ZN7TwoWire13rxBufferIndexE>
    8172:	82 1b       	sub	r24, r18
    8174:	91 09       	sbc	r25, r1
    8176:	08 95       	ret

00008178 <_ZN7TwoWire4readEv>:
    8178:	90 91 43 09 	lds	r25, 0x0943	; 0x800943 <_ZN7TwoWire13rxBufferIndexE>
    817c:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <_ZN7TwoWire14rxBufferLengthE>
    8180:	98 17       	cp	r25, r24
    8182:	50 f4       	brcc	.+20     	; 0x8198 <_ZN7TwoWire4readEv+0x20>
    8184:	e9 2f       	mov	r30, r25
    8186:	f0 e0       	ldi	r31, 0x00	; 0
    8188:	ec 5b       	subi	r30, 0xBC	; 188
    818a:	f6 4f       	sbci	r31, 0xF6	; 246
    818c:	20 81       	ld	r18, Z
    818e:	30 e0       	ldi	r19, 0x00	; 0
    8190:	9f 5f       	subi	r25, 0xFF	; 255
    8192:	90 93 43 09 	sts	0x0943, r25	; 0x800943 <_ZN7TwoWire13rxBufferIndexE>
    8196:	02 c0       	rjmp	.+4      	; 0x819c <_ZN7TwoWire4readEv+0x24>
    8198:	2f ef       	ldi	r18, 0xFF	; 255
    819a:	3f ef       	ldi	r19, 0xFF	; 255
    819c:	c9 01       	movw	r24, r18
    819e:	08 95       	ret

000081a0 <_ZN7TwoWire4peekEv>:
    81a0:	e0 91 43 09 	lds	r30, 0x0943	; 0x800943 <_ZN7TwoWire13rxBufferIndexE>
    81a4:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <_ZN7TwoWire14rxBufferLengthE>
    81a8:	e8 17       	cp	r30, r24
    81aa:	30 f4       	brcc	.+12     	; 0x81b8 <_ZN7TwoWire4peekEv+0x18>
    81ac:	f0 e0       	ldi	r31, 0x00	; 0
    81ae:	ec 5b       	subi	r30, 0xBC	; 188
    81b0:	f6 4f       	sbci	r31, 0xF6	; 246
    81b2:	80 81       	ld	r24, Z
    81b4:	90 e0       	ldi	r25, 0x00	; 0
    81b6:	08 95       	ret
    81b8:	8f ef       	ldi	r24, 0xFF	; 255
    81ba:	9f ef       	ldi	r25, 0xFF	; 255
    81bc:	08 95       	ret

000081be <_ZN7TwoWire5flushEv>:
    81be:	08 95       	ret

000081c0 <_ZN7TwoWire16onReceiveServiceEPhi>:
    81c0:	cf 93       	push	r28
    81c2:	df 93       	push	r29
    81c4:	ec 01       	movw	r28, r24
    81c6:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <_ZN7TwoWire14user_onReceiveE>
    81ca:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <_ZN7TwoWire14user_onReceiveE+0x1>
    81ce:	30 97       	sbiw	r30, 0x00	; 0
    81d0:	f1 f0       	breq	.+60     	; 0x820e <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    81d2:	90 91 43 09 	lds	r25, 0x0943	; 0x800943 <_ZN7TwoWire13rxBufferIndexE>
    81d6:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <_ZN7TwoWire14rxBufferLengthE>
    81da:	98 17       	cp	r25, r24
    81dc:	c0 f0       	brcs	.+48     	; 0x820e <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    81de:	90 e0       	ldi	r25, 0x00	; 0
    81e0:	29 2f       	mov	r18, r25
    81e2:	30 e0       	ldi	r19, 0x00	; 0
    81e4:	26 17       	cp	r18, r22
    81e6:	37 07       	cpc	r19, r23
    81e8:	54 f4       	brge	.+20     	; 0x81fe <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    81ea:	de 01       	movw	r26, r28
    81ec:	a2 0f       	add	r26, r18
    81ee:	b3 1f       	adc	r27, r19
    81f0:	4c 91       	ld	r20, X
    81f2:	d9 01       	movw	r26, r18
    81f4:	ac 5b       	subi	r26, 0xBC	; 188
    81f6:	b6 4f       	sbci	r27, 0xF6	; 246
    81f8:	4c 93       	st	X, r20
    81fa:	9f 5f       	subi	r25, 0xFF	; 255
    81fc:	f1 cf       	rjmp	.-30     	; 0x81e0 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    81fe:	10 92 43 09 	sts	0x0943, r1	; 0x800943 <_ZN7TwoWire13rxBufferIndexE>
    8202:	60 93 42 09 	sts	0x0942, r22	; 0x800942 <_ZN7TwoWire14rxBufferLengthE>
    8206:	cb 01       	movw	r24, r22
    8208:	df 91       	pop	r29
    820a:	cf 91       	pop	r28
    820c:	19 94       	eijmp
    820e:	df 91       	pop	r29
    8210:	cf 91       	pop	r28
    8212:	08 95       	ret

00008214 <_ZN7TwoWire16onRequestServiceEv>:
    8214:	e0 91 1d 09 	lds	r30, 0x091D	; 0x80091d <_ZN7TwoWire14user_onRequestE>
    8218:	f0 91 1e 09 	lds	r31, 0x091E	; 0x80091e <_ZN7TwoWire14user_onRequestE+0x1>
    821c:	30 97       	sbiw	r30, 0x00	; 0
    821e:	29 f0       	breq	.+10     	; 0x822a <_ZN7TwoWire16onRequestServiceEv+0x16>
    8220:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_ZN7TwoWire13txBufferIndexE>
    8224:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <_ZN7TwoWire14txBufferLengthE>
    8228:	19 94       	eijmp
    822a:	08 95       	ret

0000822c <_ZN7TwoWire5writeEPKhj>:
    822c:	cf 92       	push	r12
    822e:	df 92       	push	r13
    8230:	ef 92       	push	r14
    8232:	ff 92       	push	r15
    8234:	0f 93       	push	r16
    8236:	1f 93       	push	r17
    8238:	cf 93       	push	r28
    823a:	df 93       	push	r29
    823c:	7c 01       	movw	r14, r24
    823e:	cb 01       	movw	r24, r22
    8240:	8a 01       	movw	r16, r20
    8242:	20 91 1f 09 	lds	r18, 0x091F	; 0x80091f <_ZN7TwoWire12transmittingE>
    8246:	22 23       	and	r18, r18
    8248:	89 f0       	breq	.+34     	; 0x826c <_ZN7TwoWire5writeEPKhj+0x40>
    824a:	eb 01       	movw	r28, r22
    824c:	6b 01       	movw	r12, r22
    824e:	c4 0e       	add	r12, r20
    8250:	d5 1e       	adc	r13, r21
    8252:	cc 15       	cp	r28, r12
    8254:	dd 05       	cpc	r29, r13
    8256:	61 f0       	breq	.+24     	; 0x8270 <_ZN7TwoWire5writeEPKhj+0x44>
    8258:	69 91       	ld	r22, Y+
    825a:	d7 01       	movw	r26, r14
    825c:	ed 91       	ld	r30, X+
    825e:	fc 91       	ld	r31, X
    8260:	01 90       	ld	r0, Z+
    8262:	f0 81       	ld	r31, Z
    8264:	e0 2d       	mov	r30, r0
    8266:	c7 01       	movw	r24, r14
    8268:	19 95       	eicall
    826a:	f3 cf       	rjmp	.-26     	; 0x8252 <_ZN7TwoWire5writeEPKhj+0x26>
    826c:	64 2f       	mov	r22, r20
    826e:	0c de       	rcall	.-1000   	; 0x7e88 <twi_transmit>
    8270:	c8 01       	movw	r24, r16
    8272:	df 91       	pop	r29
    8274:	cf 91       	pop	r28
    8276:	1f 91       	pop	r17
    8278:	0f 91       	pop	r16
    827a:	ff 90       	pop	r15
    827c:	ef 90       	pop	r14
    827e:	df 90       	pop	r13
    8280:	cf 90       	pop	r12
    8282:	08 95       	ret

00008284 <_ZN7TwoWire5writeEh>:
    8284:	cf 93       	push	r28
    8286:	df 93       	push	r29
    8288:	1f 92       	push	r1
    828a:	cd b7       	in	r28, 0x3d	; 61
    828c:	de b7       	in	r29, 0x3e	; 62
    828e:	69 83       	std	Y+1, r22	; 0x01
    8290:	20 91 1f 09 	lds	r18, 0x091F	; 0x80091f <_ZN7TwoWire12transmittingE>
    8294:	22 23       	and	r18, r18
    8296:	d1 f0       	breq	.+52     	; 0x82cc <_ZN7TwoWire5writeEh+0x48>
    8298:	20 91 20 09 	lds	r18, 0x0920	; 0x800920 <_ZN7TwoWire14txBufferLengthE>
    829c:	20 32       	cpi	r18, 0x20	; 32
    829e:	40 f0       	brcs	.+16     	; 0x82b0 <_ZN7TwoWire5writeEh+0x2c>
    82a0:	21 e0       	ldi	r18, 0x01	; 1
    82a2:	30 e0       	ldi	r19, 0x00	; 0
    82a4:	fc 01       	movw	r30, r24
    82a6:	33 83       	std	Z+3, r19	; 0x03
    82a8:	22 83       	std	Z+2, r18	; 0x02
    82aa:	80 e0       	ldi	r24, 0x00	; 0
    82ac:	90 e0       	ldi	r25, 0x00	; 0
    82ae:	14 c0       	rjmp	.+40     	; 0x82d8 <_ZN7TwoWire5writeEh+0x54>
    82b0:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <_ZN7TwoWire13txBufferIndexE>
    82b4:	e8 2f       	mov	r30, r24
    82b6:	f0 e0       	ldi	r31, 0x00	; 0
    82b8:	ee 5d       	subi	r30, 0xDE	; 222
    82ba:	f6 4f       	sbci	r31, 0xF6	; 246
    82bc:	99 81       	ldd	r25, Y+1	; 0x01
    82be:	90 83       	st	Z, r25
    82c0:	8f 5f       	subi	r24, 0xFF	; 255
    82c2:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <_ZN7TwoWire13txBufferIndexE>
    82c6:	80 93 20 09 	sts	0x0920, r24	; 0x800920 <_ZN7TwoWire14txBufferLengthE>
    82ca:	04 c0       	rjmp	.+8      	; 0x82d4 <_ZN7TwoWire5writeEh+0x50>
    82cc:	61 e0       	ldi	r22, 0x01	; 1
    82ce:	ce 01       	movw	r24, r28
    82d0:	01 96       	adiw	r24, 0x01	; 1
    82d2:	da dd       	rcall	.-1100   	; 0x7e88 <twi_transmit>
    82d4:	81 e0       	ldi	r24, 0x01	; 1
    82d6:	90 e0       	ldi	r25, 0x00	; 0
    82d8:	0f 90       	pop	r0
    82da:	df 91       	pop	r29
    82dc:	cf 91       	pop	r28
    82de:	08 95       	ret

000082e0 <_ZN7TwoWireC1Ev>:
    82e0:	fc 01       	movw	r30, r24
    82e2:	13 82       	std	Z+3, r1	; 0x03
    82e4:	12 82       	std	Z+2, r1	; 0x02
    82e6:	88 ee       	ldi	r24, 0xE8	; 232
    82e8:	93 e0       	ldi	r25, 0x03	; 3
    82ea:	a0 e0       	ldi	r26, 0x00	; 0
    82ec:	b0 e0       	ldi	r27, 0x00	; 0
    82ee:	84 83       	std	Z+4, r24	; 0x04
    82f0:	95 83       	std	Z+5, r25	; 0x05
    82f2:	a6 83       	std	Z+6, r26	; 0x06
    82f4:	b7 83       	std	Z+7, r27	; 0x07
    82f6:	82 e7       	ldi	r24, 0x72	; 114
    82f8:	93 e0       	ldi	r25, 0x03	; 3
    82fa:	91 83       	std	Z+1, r25	; 0x01
    82fc:	80 83       	st	Z, r24
    82fe:	08 95       	ret

00008300 <_ZN7TwoWire5beginEv>:
    8300:	10 92 43 09 	sts	0x0943, r1	; 0x800943 <_ZN7TwoWire13rxBufferIndexE>
    8304:	10 92 42 09 	sts	0x0942, r1	; 0x800942 <_ZN7TwoWire14rxBufferLengthE>
    8308:	10 92 21 09 	sts	0x0921, r1	; 0x800921 <_ZN7TwoWire13txBufferIndexE>
    830c:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <_ZN7TwoWire14txBufferLengthE>
    8310:	9b cd       	rjmp	.-1226   	; 0x7e48 <twi_init>

00008312 <_ZN7TwoWire5beginEh>:
    8312:	cf 93       	push	r28
    8314:	df 93       	push	r29
    8316:	ec 01       	movw	r28, r24
    8318:	86 2f       	mov	r24, r22
    831a:	b2 dd       	rcall	.-1180   	; 0x7e80 <twi_setAddress>
    831c:	8a e0       	ldi	r24, 0x0A	; 10
    831e:	91 e4       	ldi	r25, 0x41	; 65
    8320:	e0 dd       	rcall	.-1088   	; 0x7ee2 <twi_attachSlaveTxEvent>
    8322:	80 ee       	ldi	r24, 0xE0	; 224
    8324:	90 e4       	ldi	r25, 0x40	; 64
    8326:	d8 dd       	rcall	.-1104   	; 0x7ed8 <twi_attachSlaveRxEvent>
    8328:	ce 01       	movw	r24, r28
    832a:	df 91       	pop	r29
    832c:	cf 91       	pop	r28
    832e:	e8 cf       	rjmp	.-48     	; 0x8300 <_ZN7TwoWire5beginEv>

00008330 <_ZN7TwoWire5beginEi>:
    8330:	f0 cf       	rjmp	.-32     	; 0x8312 <_ZN7TwoWire5beginEh>

00008332 <_ZN7TwoWire9onRequestEPFvvE>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    8332:	70 93 1e 09 	sts	0x091E, r23	; 0x80091e <_ZN7TwoWire14user_onRequestE+0x1>
    8336:	60 93 1d 09 	sts	0x091D, r22	; 0x80091d <_ZN7TwoWire14user_onRequestE>
    833a:	08 95       	ret

0000833c <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    833c:	8f e0       	ldi	r24, 0x0F	; 15
    833e:	99 e0       	ldi	r25, 0x09	; 9
    8340:	cf cf       	rjmp	.-98     	; 0x82e0 <_ZN7TwoWireC1Ev>

00008342 <_ZN6WindowC1Ev>:
 * Window implementation
 * 
 * This class draws the window (middle section of the screen) representing synthesis parameters
 */

Window::Window() {
    8342:	fc 01       	movw	r30, r24
    8344:	10 82       	st	Z, r1
    8346:	11 82       	std	Z+1, r1	; 0x01
    8348:	8c ed       	ldi	r24, 0xDC	; 220
    834a:	90 e0       	ldi	r25, 0x00	; 0
    834c:	93 83       	std	Z+3, r25	; 0x03
    834e:	82 83       	std	Z+2, r24	; 0x02
    8350:	14 82       	std	Z+4, r1	; 0x04
    8352:	80 e0       	ldi	r24, 0x00	; 0
    8354:	90 e0       	ldi	r25, 0x00	; 0
    8356:	a0 e8       	ldi	r26, 0x80	; 128
    8358:	b0 e4       	ldi	r27, 0x40	; 64
    835a:	85 83       	std	Z+5, r24	; 0x05
    835c:	96 83       	std	Z+6, r25	; 0x06
    835e:	a7 83       	std	Z+7, r26	; 0x07
    8360:	b0 87       	std	Z+8, r27	; 0x08
    8362:	11 86       	std	Z+9, r1	; 0x09
    8364:	80 ee       	ldi	r24, 0xE0	; 224
    8366:	9e e2       	ldi	r25, 0x2E	; 46
    8368:	93 87       	std	Z+11, r25	; 0x0b
    836a:	82 87       	std	Z+10, r24	; 0x0a
    836c:	88 e2       	ldi	r24, 0x28	; 40
    836e:	84 87       	std	Z+12, r24	; 0x0c
    8370:	15 86       	std	Z+13, r1	; 0x0d
    8372:	17 86       	std	Z+15, r1	; 0x0f
    8374:	16 86       	std	Z+14, r1	; 0x0e
    8376:	88 ec       	ldi	r24, 0xC8	; 200
    8378:	90 e0       	ldi	r25, 0x00	; 0
    837a:	91 8b       	std	Z+17, r25	; 0x11
    837c:	80 8b       	std	Z+16, r24	; 0x10
    837e:	84 eb       	ldi	r24, 0xB4	; 180
    8380:	82 8b       	std	Z+18, r24	; 0x12
    8382:	8a ef       	ldi	r24, 0xFA	; 250
    8384:	90 e0       	ldi	r25, 0x00	; 0
    8386:	94 8b       	std	Z+20, r25	; 0x14
    8388:	83 8b       	std	Z+19, r24	; 0x13
    838a:	15 8a       	std	Z+21, r1	; 0x15
    838c:	16 8a       	std	Z+22, r1	; 0x16
    838e:	17 8a       	std	Z+23, r1	; 0x17
    8390:	10 8e       	std	Z+24, r1	; 0x18
    8392:	8f e7       	ldi	r24, 0x7F	; 127
    8394:	81 8f       	std	Z+25, r24	; 0x19
    8396:	12 8e       	std	Z+26, r1	; 0x1a
    8398:	13 8e       	std	Z+27, r1	; 0x1b
    839a:	14 8e       	std	Z+28, r1	; 0x1c
    839c:	08 95       	ret

0000839e <__subsf3>:
    839e:	50 58       	subi	r21, 0x80	; 128

000083a0 <__addsf3>:
    83a0:	bb 27       	eor	r27, r27
    83a2:	aa 27       	eor	r26, r26
    83a4:	0e d0       	rcall	.+28     	; 0x83c2 <__addsf3x>
    83a6:	38 c1       	rjmp	.+624    	; 0x8618 <__fp_round>
    83a8:	01 d1       	rcall	.+514    	; 0x85ac <__fp_pscA>
    83aa:	30 f0       	brcs	.+12     	; 0x83b8 <__addsf3+0x18>
    83ac:	06 d1       	rcall	.+524    	; 0x85ba <__fp_pscB>
    83ae:	20 f0       	brcs	.+8      	; 0x83b8 <__addsf3+0x18>
    83b0:	31 f4       	brne	.+12     	; 0x83be <__addsf3+0x1e>
    83b2:	9f 3f       	cpi	r25, 0xFF	; 255
    83b4:	11 f4       	brne	.+4      	; 0x83ba <__addsf3+0x1a>
    83b6:	1e f4       	brtc	.+6      	; 0x83be <__addsf3+0x1e>
    83b8:	f6 c0       	rjmp	.+492    	; 0x85a6 <__fp_nan>
    83ba:	0e f4       	brtc	.+2      	; 0x83be <__addsf3+0x1e>
    83bc:	e0 95       	com	r30
    83be:	e7 fb       	bst	r30, 7
    83c0:	ec c0       	rjmp	.+472    	; 0x859a <__fp_inf>

000083c2 <__addsf3x>:
    83c2:	e9 2f       	mov	r30, r25
    83c4:	4b d1       	rcall	.+662    	; 0x865c <__fp_split3>
    83c6:	80 f3       	brcs	.-32     	; 0x83a8 <__addsf3+0x8>
    83c8:	ba 17       	cp	r27, r26
    83ca:	62 07       	cpc	r22, r18
    83cc:	73 07       	cpc	r23, r19
    83ce:	84 07       	cpc	r24, r20
    83d0:	95 07       	cpc	r25, r21
    83d2:	18 f0       	brcs	.+6      	; 0x83da <__addsf3x+0x18>
    83d4:	71 f4       	brne	.+28     	; 0x83f2 <__addsf3x+0x30>
    83d6:	9e f5       	brtc	.+102    	; 0x843e <__addsf3x+0x7c>
    83d8:	63 c1       	rjmp	.+710    	; 0x86a0 <__fp_zero>
    83da:	0e f4       	brtc	.+2      	; 0x83de <__addsf3x+0x1c>
    83dc:	e0 95       	com	r30
    83de:	0b 2e       	mov	r0, r27
    83e0:	ba 2f       	mov	r27, r26
    83e2:	a0 2d       	mov	r26, r0
    83e4:	0b 01       	movw	r0, r22
    83e6:	b9 01       	movw	r22, r18
    83e8:	90 01       	movw	r18, r0
    83ea:	0c 01       	movw	r0, r24
    83ec:	ca 01       	movw	r24, r20
    83ee:	a0 01       	movw	r20, r0
    83f0:	11 24       	eor	r1, r1
    83f2:	ff 27       	eor	r31, r31
    83f4:	59 1b       	sub	r21, r25
    83f6:	99 f0       	breq	.+38     	; 0x841e <__addsf3x+0x5c>
    83f8:	59 3f       	cpi	r21, 0xF9	; 249
    83fa:	50 f4       	brcc	.+20     	; 0x8410 <__addsf3x+0x4e>
    83fc:	50 3e       	cpi	r21, 0xE0	; 224
    83fe:	68 f1       	brcs	.+90     	; 0x845a <__addsf3x+0x98>
    8400:	1a 16       	cp	r1, r26
    8402:	f0 40       	sbci	r31, 0x00	; 0
    8404:	a2 2f       	mov	r26, r18
    8406:	23 2f       	mov	r18, r19
    8408:	34 2f       	mov	r19, r20
    840a:	44 27       	eor	r20, r20
    840c:	58 5f       	subi	r21, 0xF8	; 248
    840e:	f3 cf       	rjmp	.-26     	; 0x83f6 <__addsf3x+0x34>
    8410:	46 95       	lsr	r20
    8412:	37 95       	ror	r19
    8414:	27 95       	ror	r18
    8416:	a7 95       	ror	r26
    8418:	f0 40       	sbci	r31, 0x00	; 0
    841a:	53 95       	inc	r21
    841c:	c9 f7       	brne	.-14     	; 0x8410 <__addsf3x+0x4e>
    841e:	7e f4       	brtc	.+30     	; 0x843e <__addsf3x+0x7c>
    8420:	1f 16       	cp	r1, r31
    8422:	ba 0b       	sbc	r27, r26
    8424:	62 0b       	sbc	r22, r18
    8426:	73 0b       	sbc	r23, r19
    8428:	84 0b       	sbc	r24, r20
    842a:	ba f0       	brmi	.+46     	; 0x845a <__addsf3x+0x98>
    842c:	91 50       	subi	r25, 0x01	; 1
    842e:	a1 f0       	breq	.+40     	; 0x8458 <__addsf3x+0x96>
    8430:	ff 0f       	add	r31, r31
    8432:	bb 1f       	adc	r27, r27
    8434:	66 1f       	adc	r22, r22
    8436:	77 1f       	adc	r23, r23
    8438:	88 1f       	adc	r24, r24
    843a:	c2 f7       	brpl	.-16     	; 0x842c <__addsf3x+0x6a>
    843c:	0e c0       	rjmp	.+28     	; 0x845a <__addsf3x+0x98>
    843e:	ba 0f       	add	r27, r26
    8440:	62 1f       	adc	r22, r18
    8442:	73 1f       	adc	r23, r19
    8444:	84 1f       	adc	r24, r20
    8446:	48 f4       	brcc	.+18     	; 0x845a <__addsf3x+0x98>
    8448:	87 95       	ror	r24
    844a:	77 95       	ror	r23
    844c:	67 95       	ror	r22
    844e:	b7 95       	ror	r27
    8450:	f7 95       	ror	r31
    8452:	9e 3f       	cpi	r25, 0xFE	; 254
    8454:	08 f0       	brcs	.+2      	; 0x8458 <__addsf3x+0x96>
    8456:	b3 cf       	rjmp	.-154    	; 0x83be <__addsf3+0x1e>
    8458:	93 95       	inc	r25
    845a:	88 0f       	add	r24, r24
    845c:	08 f0       	brcs	.+2      	; 0x8460 <__addsf3x+0x9e>
    845e:	99 27       	eor	r25, r25
    8460:	ee 0f       	add	r30, r30
    8462:	97 95       	ror	r25
    8464:	87 95       	ror	r24
    8466:	08 95       	ret

00008468 <__cmpsf2>:
    8468:	74 d0       	rcall	.+232    	; 0x8552 <__fp_cmp>
    846a:	08 f4       	brcc	.+2      	; 0x846e <__cmpsf2+0x6>
    846c:	81 e0       	ldi	r24, 0x01	; 1
    846e:	08 95       	ret

00008470 <cos>:
    8470:	ac d0       	rcall	.+344    	; 0x85ca <__fp_rempio2>
    8472:	e3 95       	inc	r30
    8474:	e2 c0       	rjmp	.+452    	; 0x863a <__fp_sinus>

00008476 <__fixsfsi>:
    8476:	04 d0       	rcall	.+8      	; 0x8480 <__fixunssfsi>
    8478:	68 94       	set
    847a:	b1 11       	cpse	r27, r1
    847c:	12 c1       	rjmp	.+548    	; 0x86a2 <__fp_szero>
    847e:	08 95       	ret

00008480 <__fixunssfsi>:
    8480:	f5 d0       	rcall	.+490    	; 0x866c <__fp_splitA>
    8482:	88 f0       	brcs	.+34     	; 0x84a6 <__fixunssfsi+0x26>
    8484:	9f 57       	subi	r25, 0x7F	; 127
    8486:	90 f0       	brcs	.+36     	; 0x84ac <__fixunssfsi+0x2c>
    8488:	b9 2f       	mov	r27, r25
    848a:	99 27       	eor	r25, r25
    848c:	b7 51       	subi	r27, 0x17	; 23
    848e:	a0 f0       	brcs	.+40     	; 0x84b8 <__fixunssfsi+0x38>
    8490:	d1 f0       	breq	.+52     	; 0x84c6 <__fixunssfsi+0x46>
    8492:	66 0f       	add	r22, r22
    8494:	77 1f       	adc	r23, r23
    8496:	88 1f       	adc	r24, r24
    8498:	99 1f       	adc	r25, r25
    849a:	1a f0       	brmi	.+6      	; 0x84a2 <__fixunssfsi+0x22>
    849c:	ba 95       	dec	r27
    849e:	c9 f7       	brne	.-14     	; 0x8492 <__fixunssfsi+0x12>
    84a0:	12 c0       	rjmp	.+36     	; 0x84c6 <__fixunssfsi+0x46>
    84a2:	b1 30       	cpi	r27, 0x01	; 1
    84a4:	81 f0       	breq	.+32     	; 0x84c6 <__fixunssfsi+0x46>
    84a6:	fc d0       	rcall	.+504    	; 0x86a0 <__fp_zero>
    84a8:	b1 e0       	ldi	r27, 0x01	; 1
    84aa:	08 95       	ret
    84ac:	f9 c0       	rjmp	.+498    	; 0x86a0 <__fp_zero>
    84ae:	67 2f       	mov	r22, r23
    84b0:	78 2f       	mov	r23, r24
    84b2:	88 27       	eor	r24, r24
    84b4:	b8 5f       	subi	r27, 0xF8	; 248
    84b6:	39 f0       	breq	.+14     	; 0x84c6 <__fixunssfsi+0x46>
    84b8:	b9 3f       	cpi	r27, 0xF9	; 249
    84ba:	cc f3       	brlt	.-14     	; 0x84ae <__fixunssfsi+0x2e>
    84bc:	86 95       	lsr	r24
    84be:	77 95       	ror	r23
    84c0:	67 95       	ror	r22
    84c2:	b3 95       	inc	r27
    84c4:	d9 f7       	brne	.-10     	; 0x84bc <__fixunssfsi+0x3c>
    84c6:	3e f4       	brtc	.+14     	; 0x84d6 <__fixunssfsi+0x56>
    84c8:	90 95       	com	r25
    84ca:	80 95       	com	r24
    84cc:	70 95       	com	r23
    84ce:	61 95       	neg	r22
    84d0:	7f 4f       	sbci	r23, 0xFF	; 255
    84d2:	8f 4f       	sbci	r24, 0xFF	; 255
    84d4:	9f 4f       	sbci	r25, 0xFF	; 255
    84d6:	08 95       	ret

000084d8 <__floatunsisf>:
    84d8:	e8 94       	clt
    84da:	09 c0       	rjmp	.+18     	; 0x84ee <__floatsisf+0x12>

000084dc <__floatsisf>:
    84dc:	97 fb       	bst	r25, 7
    84de:	3e f4       	brtc	.+14     	; 0x84ee <__floatsisf+0x12>
    84e0:	90 95       	com	r25
    84e2:	80 95       	com	r24
    84e4:	70 95       	com	r23
    84e6:	61 95       	neg	r22
    84e8:	7f 4f       	sbci	r23, 0xFF	; 255
    84ea:	8f 4f       	sbci	r24, 0xFF	; 255
    84ec:	9f 4f       	sbci	r25, 0xFF	; 255
    84ee:	99 23       	and	r25, r25
    84f0:	a9 f0       	breq	.+42     	; 0x851c <__floatsisf+0x40>
    84f2:	f9 2f       	mov	r31, r25
    84f4:	96 e9       	ldi	r25, 0x96	; 150
    84f6:	bb 27       	eor	r27, r27
    84f8:	93 95       	inc	r25
    84fa:	f6 95       	lsr	r31
    84fc:	87 95       	ror	r24
    84fe:	77 95       	ror	r23
    8500:	67 95       	ror	r22
    8502:	b7 95       	ror	r27
    8504:	f1 11       	cpse	r31, r1
    8506:	f8 cf       	rjmp	.-16     	; 0x84f8 <__floatsisf+0x1c>
    8508:	fa f4       	brpl	.+62     	; 0x8548 <__floatsisf+0x6c>
    850a:	bb 0f       	add	r27, r27
    850c:	11 f4       	brne	.+4      	; 0x8512 <__floatsisf+0x36>
    850e:	60 ff       	sbrs	r22, 0
    8510:	1b c0       	rjmp	.+54     	; 0x8548 <__floatsisf+0x6c>
    8512:	6f 5f       	subi	r22, 0xFF	; 255
    8514:	7f 4f       	sbci	r23, 0xFF	; 255
    8516:	8f 4f       	sbci	r24, 0xFF	; 255
    8518:	9f 4f       	sbci	r25, 0xFF	; 255
    851a:	16 c0       	rjmp	.+44     	; 0x8548 <__floatsisf+0x6c>
    851c:	88 23       	and	r24, r24
    851e:	11 f0       	breq	.+4      	; 0x8524 <__floatsisf+0x48>
    8520:	96 e9       	ldi	r25, 0x96	; 150
    8522:	11 c0       	rjmp	.+34     	; 0x8546 <__floatsisf+0x6a>
    8524:	77 23       	and	r23, r23
    8526:	21 f0       	breq	.+8      	; 0x8530 <__floatsisf+0x54>
    8528:	9e e8       	ldi	r25, 0x8E	; 142
    852a:	87 2f       	mov	r24, r23
    852c:	76 2f       	mov	r23, r22
    852e:	05 c0       	rjmp	.+10     	; 0x853a <__floatsisf+0x5e>
    8530:	66 23       	and	r22, r22
    8532:	71 f0       	breq	.+28     	; 0x8550 <__floatsisf+0x74>
    8534:	96 e8       	ldi	r25, 0x86	; 134
    8536:	86 2f       	mov	r24, r22
    8538:	70 e0       	ldi	r23, 0x00	; 0
    853a:	60 e0       	ldi	r22, 0x00	; 0
    853c:	2a f0       	brmi	.+10     	; 0x8548 <__floatsisf+0x6c>
    853e:	9a 95       	dec	r25
    8540:	66 0f       	add	r22, r22
    8542:	77 1f       	adc	r23, r23
    8544:	88 1f       	adc	r24, r24
    8546:	da f7       	brpl	.-10     	; 0x853e <__floatsisf+0x62>
    8548:	88 0f       	add	r24, r24
    854a:	96 95       	lsr	r25
    854c:	87 95       	ror	r24
    854e:	97 f9       	bld	r25, 7
    8550:	08 95       	ret

00008552 <__fp_cmp>:
    8552:	99 0f       	add	r25, r25
    8554:	00 08       	sbc	r0, r0
    8556:	55 0f       	add	r21, r21
    8558:	aa 0b       	sbc	r26, r26
    855a:	e0 e8       	ldi	r30, 0x80	; 128
    855c:	fe ef       	ldi	r31, 0xFE	; 254
    855e:	16 16       	cp	r1, r22
    8560:	17 06       	cpc	r1, r23
    8562:	e8 07       	cpc	r30, r24
    8564:	f9 07       	cpc	r31, r25
    8566:	c0 f0       	brcs	.+48     	; 0x8598 <__fp_cmp+0x46>
    8568:	12 16       	cp	r1, r18
    856a:	13 06       	cpc	r1, r19
    856c:	e4 07       	cpc	r30, r20
    856e:	f5 07       	cpc	r31, r21
    8570:	98 f0       	brcs	.+38     	; 0x8598 <__fp_cmp+0x46>
    8572:	62 1b       	sub	r22, r18
    8574:	73 0b       	sbc	r23, r19
    8576:	84 0b       	sbc	r24, r20
    8578:	95 0b       	sbc	r25, r21
    857a:	39 f4       	brne	.+14     	; 0x858a <__fp_cmp+0x38>
    857c:	0a 26       	eor	r0, r26
    857e:	61 f0       	breq	.+24     	; 0x8598 <__fp_cmp+0x46>
    8580:	23 2b       	or	r18, r19
    8582:	24 2b       	or	r18, r20
    8584:	25 2b       	or	r18, r21
    8586:	21 f4       	brne	.+8      	; 0x8590 <__fp_cmp+0x3e>
    8588:	08 95       	ret
    858a:	0a 26       	eor	r0, r26
    858c:	09 f4       	brne	.+2      	; 0x8590 <__fp_cmp+0x3e>
    858e:	a1 40       	sbci	r26, 0x01	; 1
    8590:	a6 95       	lsr	r26
    8592:	8f ef       	ldi	r24, 0xFF	; 255
    8594:	81 1d       	adc	r24, r1
    8596:	81 1d       	adc	r24, r1
    8598:	08 95       	ret

0000859a <__fp_inf>:
    859a:	97 f9       	bld	r25, 7
    859c:	9f 67       	ori	r25, 0x7F	; 127
    859e:	80 e8       	ldi	r24, 0x80	; 128
    85a0:	70 e0       	ldi	r23, 0x00	; 0
    85a2:	60 e0       	ldi	r22, 0x00	; 0
    85a4:	08 95       	ret

000085a6 <__fp_nan>:
    85a6:	9f ef       	ldi	r25, 0xFF	; 255
    85a8:	80 ec       	ldi	r24, 0xC0	; 192
    85aa:	08 95       	ret

000085ac <__fp_pscA>:
    85ac:	00 24       	eor	r0, r0
    85ae:	0a 94       	dec	r0
    85b0:	16 16       	cp	r1, r22
    85b2:	17 06       	cpc	r1, r23
    85b4:	18 06       	cpc	r1, r24
    85b6:	09 06       	cpc	r0, r25
    85b8:	08 95       	ret

000085ba <__fp_pscB>:
    85ba:	00 24       	eor	r0, r0
    85bc:	0a 94       	dec	r0
    85be:	12 16       	cp	r1, r18
    85c0:	13 06       	cpc	r1, r19
    85c2:	14 06       	cpc	r1, r20
    85c4:	05 06       	cpc	r0, r21
    85c6:	08 95       	ret
    85c8:	ee cf       	rjmp	.-36     	; 0x85a6 <__fp_nan>

000085ca <__fp_rempio2>:
    85ca:	50 d0       	rcall	.+160    	; 0x866c <__fp_splitA>
    85cc:	e8 f3       	brcs	.-6      	; 0x85c8 <__fp_pscB+0xe>
    85ce:	e8 94       	clt
    85d0:	e0 e0       	ldi	r30, 0x00	; 0
    85d2:	bb 27       	eor	r27, r27
    85d4:	9f 57       	subi	r25, 0x7F	; 127
    85d6:	f0 f0       	brcs	.+60     	; 0x8614 <__fp_rempio2+0x4a>
    85d8:	2a ed       	ldi	r18, 0xDA	; 218
    85da:	3f e0       	ldi	r19, 0x0F	; 15
    85dc:	49 ec       	ldi	r20, 0xC9	; 201
    85de:	06 c0       	rjmp	.+12     	; 0x85ec <__fp_rempio2+0x22>
    85e0:	ee 0f       	add	r30, r30
    85e2:	bb 0f       	add	r27, r27
    85e4:	66 1f       	adc	r22, r22
    85e6:	77 1f       	adc	r23, r23
    85e8:	88 1f       	adc	r24, r24
    85ea:	28 f0       	brcs	.+10     	; 0x85f6 <__fp_rempio2+0x2c>
    85ec:	b2 3a       	cpi	r27, 0xA2	; 162
    85ee:	62 07       	cpc	r22, r18
    85f0:	73 07       	cpc	r23, r19
    85f2:	84 07       	cpc	r24, r20
    85f4:	28 f0       	brcs	.+10     	; 0x8600 <__fp_rempio2+0x36>
    85f6:	b2 5a       	subi	r27, 0xA2	; 162
    85f8:	62 0b       	sbc	r22, r18
    85fa:	73 0b       	sbc	r23, r19
    85fc:	84 0b       	sbc	r24, r20
    85fe:	e3 95       	inc	r30
    8600:	9a 95       	dec	r25
    8602:	72 f7       	brpl	.-36     	; 0x85e0 <__fp_rempio2+0x16>
    8604:	80 38       	cpi	r24, 0x80	; 128
    8606:	30 f4       	brcc	.+12     	; 0x8614 <__fp_rempio2+0x4a>
    8608:	9a 95       	dec	r25
    860a:	bb 0f       	add	r27, r27
    860c:	66 1f       	adc	r22, r22
    860e:	77 1f       	adc	r23, r23
    8610:	88 1f       	adc	r24, r24
    8612:	d2 f7       	brpl	.-12     	; 0x8608 <__fp_rempio2+0x3e>
    8614:	90 48       	sbci	r25, 0x80	; 128
    8616:	ba c0       	rjmp	.+372    	; 0x878c <__fp_mpack_finite>

00008618 <__fp_round>:
    8618:	09 2e       	mov	r0, r25
    861a:	03 94       	inc	r0
    861c:	00 0c       	add	r0, r0
    861e:	11 f4       	brne	.+4      	; 0x8624 <__fp_round+0xc>
    8620:	88 23       	and	r24, r24
    8622:	52 f0       	brmi	.+20     	; 0x8638 <__fp_round+0x20>
    8624:	bb 0f       	add	r27, r27
    8626:	40 f4       	brcc	.+16     	; 0x8638 <__fp_round+0x20>
    8628:	bf 2b       	or	r27, r31
    862a:	11 f4       	brne	.+4      	; 0x8630 <__fp_round+0x18>
    862c:	60 ff       	sbrs	r22, 0
    862e:	04 c0       	rjmp	.+8      	; 0x8638 <__fp_round+0x20>
    8630:	6f 5f       	subi	r22, 0xFF	; 255
    8632:	7f 4f       	sbci	r23, 0xFF	; 255
    8634:	8f 4f       	sbci	r24, 0xFF	; 255
    8636:	9f 4f       	sbci	r25, 0xFF	; 255
    8638:	08 95       	ret

0000863a <__fp_sinus>:
    863a:	ef 93       	push	r30
    863c:	e0 ff       	sbrs	r30, 0
    863e:	06 c0       	rjmp	.+12     	; 0x864c <__fp_sinus+0x12>
    8640:	a2 ea       	ldi	r26, 0xA2	; 162
    8642:	2a ed       	ldi	r18, 0xDA	; 218
    8644:	3f e0       	ldi	r19, 0x0F	; 15
    8646:	49 ec       	ldi	r20, 0xC9	; 201
    8648:	5f eb       	ldi	r21, 0xBF	; 191
    864a:	bb de       	rcall	.-650    	; 0x83c2 <__addsf3x>
    864c:	e5 df       	rcall	.-54     	; 0x8618 <__fp_round>
    864e:	0f 90       	pop	r0
    8650:	03 94       	inc	r0
    8652:	01 fc       	sbrc	r0, 1
    8654:	90 58       	subi	r25, 0x80	; 128
    8656:	ec e5       	ldi	r30, 0x5C	; 92
    8658:	f1 e0       	ldi	r31, 0x01	; 1
    865a:	a4 c0       	rjmp	.+328    	; 0x87a4 <__fp_powsodd>

0000865c <__fp_split3>:
    865c:	57 fd       	sbrc	r21, 7
    865e:	90 58       	subi	r25, 0x80	; 128
    8660:	44 0f       	add	r20, r20
    8662:	55 1f       	adc	r21, r21
    8664:	59 f0       	breq	.+22     	; 0x867c <__fp_splitA+0x10>
    8666:	5f 3f       	cpi	r21, 0xFF	; 255
    8668:	71 f0       	breq	.+28     	; 0x8686 <__fp_splitA+0x1a>
    866a:	47 95       	ror	r20

0000866c <__fp_splitA>:
    866c:	88 0f       	add	r24, r24
    866e:	97 fb       	bst	r25, 7
    8670:	99 1f       	adc	r25, r25
    8672:	61 f0       	breq	.+24     	; 0x868c <__fp_splitA+0x20>
    8674:	9f 3f       	cpi	r25, 0xFF	; 255
    8676:	79 f0       	breq	.+30     	; 0x8696 <__fp_splitA+0x2a>
    8678:	87 95       	ror	r24
    867a:	08 95       	ret
    867c:	12 16       	cp	r1, r18
    867e:	13 06       	cpc	r1, r19
    8680:	14 06       	cpc	r1, r20
    8682:	55 1f       	adc	r21, r21
    8684:	f2 cf       	rjmp	.-28     	; 0x866a <__fp_split3+0xe>
    8686:	46 95       	lsr	r20
    8688:	f1 df       	rcall	.-30     	; 0x866c <__fp_splitA>
    868a:	08 c0       	rjmp	.+16     	; 0x869c <__fp_splitA+0x30>
    868c:	16 16       	cp	r1, r22
    868e:	17 06       	cpc	r1, r23
    8690:	18 06       	cpc	r1, r24
    8692:	99 1f       	adc	r25, r25
    8694:	f1 cf       	rjmp	.-30     	; 0x8678 <__fp_splitA+0xc>
    8696:	86 95       	lsr	r24
    8698:	71 05       	cpc	r23, r1
    869a:	61 05       	cpc	r22, r1
    869c:	08 94       	sec
    869e:	08 95       	ret

000086a0 <__fp_zero>:
    86a0:	e8 94       	clt

000086a2 <__fp_szero>:
    86a2:	bb 27       	eor	r27, r27
    86a4:	66 27       	eor	r22, r22
    86a6:	77 27       	eor	r23, r23
    86a8:	cb 01       	movw	r24, r22
    86aa:	97 f9       	bld	r25, 7
    86ac:	08 95       	ret

000086ae <__gesf2>:
    86ae:	51 df       	rcall	.-350    	; 0x8552 <__fp_cmp>
    86b0:	08 f4       	brcc	.+2      	; 0x86b4 <__gesf2+0x6>
    86b2:	8f ef       	ldi	r24, 0xFF	; 255
    86b4:	08 95       	ret

000086b6 <__mulsf3>:
    86b6:	0b d0       	rcall	.+22     	; 0x86ce <__mulsf3x>
    86b8:	af cf       	rjmp	.-162    	; 0x8618 <__fp_round>
    86ba:	78 df       	rcall	.-272    	; 0x85ac <__fp_pscA>
    86bc:	28 f0       	brcs	.+10     	; 0x86c8 <__mulsf3+0x12>
    86be:	7d df       	rcall	.-262    	; 0x85ba <__fp_pscB>
    86c0:	18 f0       	brcs	.+6      	; 0x86c8 <__mulsf3+0x12>
    86c2:	95 23       	and	r25, r21
    86c4:	09 f0       	breq	.+2      	; 0x86c8 <__mulsf3+0x12>
    86c6:	69 cf       	rjmp	.-302    	; 0x859a <__fp_inf>
    86c8:	6e cf       	rjmp	.-292    	; 0x85a6 <__fp_nan>
    86ca:	11 24       	eor	r1, r1
    86cc:	ea cf       	rjmp	.-44     	; 0x86a2 <__fp_szero>

000086ce <__mulsf3x>:
    86ce:	c6 df       	rcall	.-116    	; 0x865c <__fp_split3>
    86d0:	a0 f3       	brcs	.-24     	; 0x86ba <__mulsf3+0x4>

000086d2 <__mulsf3_pse>:
    86d2:	95 9f       	mul	r25, r21
    86d4:	d1 f3       	breq	.-12     	; 0x86ca <__mulsf3+0x14>
    86d6:	95 0f       	add	r25, r21
    86d8:	50 e0       	ldi	r21, 0x00	; 0
    86da:	55 1f       	adc	r21, r21
    86dc:	62 9f       	mul	r22, r18
    86de:	f0 01       	movw	r30, r0
    86e0:	72 9f       	mul	r23, r18
    86e2:	bb 27       	eor	r27, r27
    86e4:	f0 0d       	add	r31, r0
    86e6:	b1 1d       	adc	r27, r1
    86e8:	63 9f       	mul	r22, r19
    86ea:	aa 27       	eor	r26, r26
    86ec:	f0 0d       	add	r31, r0
    86ee:	b1 1d       	adc	r27, r1
    86f0:	aa 1f       	adc	r26, r26
    86f2:	64 9f       	mul	r22, r20
    86f4:	66 27       	eor	r22, r22
    86f6:	b0 0d       	add	r27, r0
    86f8:	a1 1d       	adc	r26, r1
    86fa:	66 1f       	adc	r22, r22
    86fc:	82 9f       	mul	r24, r18
    86fe:	22 27       	eor	r18, r18
    8700:	b0 0d       	add	r27, r0
    8702:	a1 1d       	adc	r26, r1
    8704:	62 1f       	adc	r22, r18
    8706:	73 9f       	mul	r23, r19
    8708:	b0 0d       	add	r27, r0
    870a:	a1 1d       	adc	r26, r1
    870c:	62 1f       	adc	r22, r18
    870e:	83 9f       	mul	r24, r19
    8710:	a0 0d       	add	r26, r0
    8712:	61 1d       	adc	r22, r1
    8714:	22 1f       	adc	r18, r18
    8716:	74 9f       	mul	r23, r20
    8718:	33 27       	eor	r19, r19
    871a:	a0 0d       	add	r26, r0
    871c:	61 1d       	adc	r22, r1
    871e:	23 1f       	adc	r18, r19
    8720:	84 9f       	mul	r24, r20
    8722:	60 0d       	add	r22, r0
    8724:	21 1d       	adc	r18, r1
    8726:	82 2f       	mov	r24, r18
    8728:	76 2f       	mov	r23, r22
    872a:	6a 2f       	mov	r22, r26
    872c:	11 24       	eor	r1, r1
    872e:	9f 57       	subi	r25, 0x7F	; 127
    8730:	50 40       	sbci	r21, 0x00	; 0
    8732:	8a f0       	brmi	.+34     	; 0x8756 <__mulsf3_pse+0x84>
    8734:	e1 f0       	breq	.+56     	; 0x876e <__mulsf3_pse+0x9c>
    8736:	88 23       	and	r24, r24
    8738:	4a f0       	brmi	.+18     	; 0x874c <__mulsf3_pse+0x7a>
    873a:	ee 0f       	add	r30, r30
    873c:	ff 1f       	adc	r31, r31
    873e:	bb 1f       	adc	r27, r27
    8740:	66 1f       	adc	r22, r22
    8742:	77 1f       	adc	r23, r23
    8744:	88 1f       	adc	r24, r24
    8746:	91 50       	subi	r25, 0x01	; 1
    8748:	50 40       	sbci	r21, 0x00	; 0
    874a:	a9 f7       	brne	.-22     	; 0x8736 <__mulsf3_pse+0x64>
    874c:	9e 3f       	cpi	r25, 0xFE	; 254
    874e:	51 05       	cpc	r21, r1
    8750:	70 f0       	brcs	.+28     	; 0x876e <__mulsf3_pse+0x9c>
    8752:	23 cf       	rjmp	.-442    	; 0x859a <__fp_inf>
    8754:	a6 cf       	rjmp	.-180    	; 0x86a2 <__fp_szero>
    8756:	5f 3f       	cpi	r21, 0xFF	; 255
    8758:	ec f3       	brlt	.-6      	; 0x8754 <__mulsf3_pse+0x82>
    875a:	98 3e       	cpi	r25, 0xE8	; 232
    875c:	dc f3       	brlt	.-10     	; 0x8754 <__mulsf3_pse+0x82>
    875e:	86 95       	lsr	r24
    8760:	77 95       	ror	r23
    8762:	67 95       	ror	r22
    8764:	b7 95       	ror	r27
    8766:	f7 95       	ror	r31
    8768:	e7 95       	ror	r30
    876a:	9f 5f       	subi	r25, 0xFF	; 255
    876c:	c1 f7       	brne	.-16     	; 0x875e <__mulsf3_pse+0x8c>
    876e:	fe 2b       	or	r31, r30
    8770:	88 0f       	add	r24, r24
    8772:	91 1d       	adc	r25, r1
    8774:	96 95       	lsr	r25
    8776:	87 95       	ror	r24
    8778:	97 f9       	bld	r25, 7
    877a:	08 95       	ret

0000877c <sin>:
    877c:	9f 93       	push	r25
    877e:	25 df       	rcall	.-438    	; 0x85ca <__fp_rempio2>
    8780:	0f 90       	pop	r0
    8782:	07 fc       	sbrc	r0, 7
    8784:	ee 5f       	subi	r30, 0xFE	; 254
    8786:	59 cf       	rjmp	.-334    	; 0x863a <__fp_sinus>

00008788 <__fp_mpack>:
    8788:	9f 3f       	cpi	r25, 0xFF	; 255
    878a:	31 f0       	breq	.+12     	; 0x8798 <__fp_mpack_finite+0xc>

0000878c <__fp_mpack_finite>:
    878c:	91 50       	subi	r25, 0x01	; 1
    878e:	20 f4       	brcc	.+8      	; 0x8798 <__fp_mpack_finite+0xc>
    8790:	87 95       	ror	r24
    8792:	77 95       	ror	r23
    8794:	67 95       	ror	r22
    8796:	b7 95       	ror	r27
    8798:	88 0f       	add	r24, r24
    879a:	91 1d       	adc	r25, r1
    879c:	96 95       	lsr	r25
    879e:	87 95       	ror	r24
    87a0:	97 f9       	bld	r25, 7
    87a2:	08 95       	ret

000087a4 <__fp_powsodd>:
    87a4:	9f 93       	push	r25
    87a6:	8f 93       	push	r24
    87a8:	7f 93       	push	r23
    87aa:	6f 93       	push	r22
    87ac:	ff 93       	push	r31
    87ae:	ef 93       	push	r30
    87b0:	9b 01       	movw	r18, r22
    87b2:	ac 01       	movw	r20, r24
    87b4:	80 df       	rcall	.-256    	; 0x86b6 <__mulsf3>
    87b6:	ef 91       	pop	r30
    87b8:	ff 91       	pop	r31
    87ba:	05 d0       	rcall	.+10     	; 0x87c6 <__fp_powser>
    87bc:	2f 91       	pop	r18
    87be:	3f 91       	pop	r19
    87c0:	4f 91       	pop	r20
    87c2:	5f 91       	pop	r21
    87c4:	78 cf       	rjmp	.-272    	; 0x86b6 <__mulsf3>

000087c6 <__fp_powser>:
    87c6:	df 93       	push	r29
    87c8:	cf 93       	push	r28
    87ca:	1f 93       	push	r17
    87cc:	0f 93       	push	r16
    87ce:	ff 92       	push	r15
    87d0:	ef 92       	push	r14
    87d2:	df 92       	push	r13
    87d4:	7b 01       	movw	r14, r22
    87d6:	8c 01       	movw	r16, r24
    87d8:	68 94       	set
    87da:	05 c0       	rjmp	.+10     	; 0x87e6 <__fp_powser+0x20>
    87dc:	da 2e       	mov	r13, r26
    87de:	ef 01       	movw	r28, r30
    87e0:	76 df       	rcall	.-276    	; 0x86ce <__mulsf3x>
    87e2:	fe 01       	movw	r30, r28
    87e4:	e8 94       	clt
    87e6:	a5 91       	lpm	r26, Z+
    87e8:	25 91       	lpm	r18, Z+
    87ea:	35 91       	lpm	r19, Z+
    87ec:	45 91       	lpm	r20, Z+
    87ee:	55 91       	lpm	r21, Z+
    87f0:	ae f3       	brts	.-22     	; 0x87dc <__fp_powser+0x16>
    87f2:	ef 01       	movw	r28, r30
    87f4:	e6 dd       	rcall	.-1076   	; 0x83c2 <__addsf3x>
    87f6:	fe 01       	movw	r30, r28
    87f8:	97 01       	movw	r18, r14
    87fa:	a8 01       	movw	r20, r16
    87fc:	da 94       	dec	r13
    87fe:	79 f7       	brne	.-34     	; 0x87de <__fp_powser+0x18>
    8800:	df 90       	pop	r13
    8802:	ef 90       	pop	r14
    8804:	ff 90       	pop	r15
    8806:	0f 91       	pop	r16
    8808:	1f 91       	pop	r17
    880a:	cf 91       	pop	r28
    880c:	df 91       	pop	r29
    880e:	08 95       	ret

00008810 <initVariant>:
    8810:	08 95       	ret

00008812 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    8812:	b5 d0       	rcall	.+362    	; 0x897e <init>

	initVariant();
    8814:	fd df       	rcall	.-6      	; 0x8810 <initVariant>
    8816:	0e 94 bf 18 	call	0x317e	; 0x317e <setup>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    881a:	c0 e0       	ldi	r28, 0x00	; 0
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    881c:	d0 e0       	ldi	r29, 0x00	; 0
    881e:	0e 94 df 18 	call	0x31be	; 0x31be <loop>
#endif
	
	setup();
    
	for (;;) {
		loop();
    8822:	20 97       	sbiw	r28, 0x00	; 0
		if (serialEventRun) serialEventRun();
    8824:	e1 f3       	breq	.-8      	; 0x881e <main+0xc>
    8826:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    882a:	f9 cf       	rjmp	.-14     	; 0x881e <main+0xc>

0000882c <_Znwj>:
    882c:	59 c3       	rjmp	.+1714   	; 0x8ee0 <malloc>

0000882e <__vector_23>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    882e:	1f 92       	push	r1
    8830:	0f 92       	push	r0
    8832:	0f b6       	in	r0, 0x3f	; 63
    8834:	0f 92       	push	r0
    8836:	11 24       	eor	r1, r1
    8838:	2f 93       	push	r18
    883a:	3f 93       	push	r19
    883c:	8f 93       	push	r24
    883e:	9f 93       	push	r25
    8840:	af 93       	push	r26
    8842:	bf 93       	push	r27
    8844:	80 91 65 09 	lds	r24, 0x0965	; 0x800965 <timer0_millis>
    8848:	90 91 66 09 	lds	r25, 0x0966	; 0x800966 <timer0_millis+0x1>
    884c:	a0 91 67 09 	lds	r26, 0x0967	; 0x800967 <timer0_millis+0x2>
    8850:	b0 91 68 09 	lds	r27, 0x0968	; 0x800968 <timer0_millis+0x3>
    8854:	30 91 64 09 	lds	r19, 0x0964	; 0x800964 <timer0_fract>
    8858:	23 e0       	ldi	r18, 0x03	; 3
    885a:	23 0f       	add	r18, r19
    885c:	2d 37       	cpi	r18, 0x7D	; 125
    885e:	20 f4       	brcc	.+8      	; 0x8868 <__vector_23+0x3a>
    8860:	01 96       	adiw	r24, 0x01	; 1
    8862:	a1 1d       	adc	r26, r1
    8864:	b1 1d       	adc	r27, r1
    8866:	05 c0       	rjmp	.+10     	; 0x8872 <__vector_23+0x44>
    8868:	26 e8       	ldi	r18, 0x86	; 134
    886a:	23 0f       	add	r18, r19
    886c:	02 96       	adiw	r24, 0x02	; 2
    886e:	a1 1d       	adc	r26, r1
    8870:	b1 1d       	adc	r27, r1
    8872:	20 93 64 09 	sts	0x0964, r18	; 0x800964 <timer0_fract>
    8876:	80 93 65 09 	sts	0x0965, r24	; 0x800965 <timer0_millis>
    887a:	90 93 66 09 	sts	0x0966, r25	; 0x800966 <timer0_millis+0x1>
    887e:	a0 93 67 09 	sts	0x0967, r26	; 0x800967 <timer0_millis+0x2>
    8882:	b0 93 68 09 	sts	0x0968, r27	; 0x800968 <timer0_millis+0x3>
    8886:	80 91 69 09 	lds	r24, 0x0969	; 0x800969 <timer0_overflow_count>
    888a:	90 91 6a 09 	lds	r25, 0x096A	; 0x80096a <timer0_overflow_count+0x1>
    888e:	a0 91 6b 09 	lds	r26, 0x096B	; 0x80096b <timer0_overflow_count+0x2>
    8892:	b0 91 6c 09 	lds	r27, 0x096C	; 0x80096c <timer0_overflow_count+0x3>
    8896:	01 96       	adiw	r24, 0x01	; 1
    8898:	a1 1d       	adc	r26, r1
    889a:	b1 1d       	adc	r27, r1
    889c:	80 93 69 09 	sts	0x0969, r24	; 0x800969 <timer0_overflow_count>
    88a0:	90 93 6a 09 	sts	0x096A, r25	; 0x80096a <timer0_overflow_count+0x1>
    88a4:	a0 93 6b 09 	sts	0x096B, r26	; 0x80096b <timer0_overflow_count+0x2>
    88a8:	b0 93 6c 09 	sts	0x096C, r27	; 0x80096c <timer0_overflow_count+0x3>
    88ac:	bf 91       	pop	r27
    88ae:	af 91       	pop	r26
    88b0:	9f 91       	pop	r25
    88b2:	8f 91       	pop	r24
    88b4:	3f 91       	pop	r19
    88b6:	2f 91       	pop	r18
    88b8:	0f 90       	pop	r0
    88ba:	0f be       	out	0x3f, r0	; 63
    88bc:	0f 90       	pop	r0
    88be:	1f 90       	pop	r1
    88c0:	18 95       	reti

000088c2 <micros>:
    88c2:	3f b7       	in	r19, 0x3f	; 63
    88c4:	f8 94       	cli
    88c6:	80 91 69 09 	lds	r24, 0x0969	; 0x800969 <timer0_overflow_count>
    88ca:	90 91 6a 09 	lds	r25, 0x096A	; 0x80096a <timer0_overflow_count+0x1>
    88ce:	a0 91 6b 09 	lds	r26, 0x096B	; 0x80096b <timer0_overflow_count+0x2>
    88d2:	b0 91 6c 09 	lds	r27, 0x096C	; 0x80096c <timer0_overflow_count+0x3>
    88d6:	26 b5       	in	r18, 0x26	; 38
    88d8:	a8 9b       	sbis	0x15, 0	; 21
    88da:	05 c0       	rjmp	.+10     	; 0x88e6 <micros+0x24>
    88dc:	2f 3f       	cpi	r18, 0xFF	; 255
    88de:	19 f0       	breq	.+6      	; 0x88e6 <micros+0x24>
    88e0:	01 96       	adiw	r24, 0x01	; 1
    88e2:	a1 1d       	adc	r26, r1
    88e4:	b1 1d       	adc	r27, r1
    88e6:	3f bf       	out	0x3f, r19	; 63
    88e8:	ba 2f       	mov	r27, r26
    88ea:	a9 2f       	mov	r26, r25
    88ec:	98 2f       	mov	r25, r24
    88ee:	88 27       	eor	r24, r24
    88f0:	82 0f       	add	r24, r18
    88f2:	91 1d       	adc	r25, r1
    88f4:	a1 1d       	adc	r26, r1
    88f6:	b1 1d       	adc	r27, r1
    88f8:	bc 01       	movw	r22, r24
    88fa:	cd 01       	movw	r24, r26
    88fc:	42 e0       	ldi	r20, 0x02	; 2
    88fe:	66 0f       	add	r22, r22
    8900:	77 1f       	adc	r23, r23
    8902:	88 1f       	adc	r24, r24
    8904:	99 1f       	adc	r25, r25
    8906:	4a 95       	dec	r20
    8908:	d1 f7       	brne	.-12     	; 0x88fe <micros+0x3c>
    890a:	08 95       	ret

0000890c <delay>:
    890c:	8f 92       	push	r8
    890e:	9f 92       	push	r9
    8910:	af 92       	push	r10
    8912:	bf 92       	push	r11
    8914:	cf 92       	push	r12
    8916:	df 92       	push	r13
    8918:	ef 92       	push	r14
    891a:	ff 92       	push	r15
    891c:	6b 01       	movw	r12, r22
    891e:	7c 01       	movw	r14, r24
    8920:	d0 df       	rcall	.-96     	; 0x88c2 <micros>
    8922:	4b 01       	movw	r8, r22
    8924:	5c 01       	movw	r10, r24
    8926:	c1 14       	cp	r12, r1
    8928:	d1 04       	cpc	r13, r1
    892a:	e1 04       	cpc	r14, r1
    892c:	f1 04       	cpc	r15, r1
    892e:	f1 f0       	breq	.+60     	; 0x896c <delay+0x60>
    8930:	35 d2       	rcall	.+1130   	; 0x8d9c <yield>
    8932:	c7 df       	rcall	.-114    	; 0x88c2 <micros>
    8934:	dc 01       	movw	r26, r24
    8936:	cb 01       	movw	r24, r22
    8938:	88 19       	sub	r24, r8
    893a:	99 09       	sbc	r25, r9
    893c:	aa 09       	sbc	r26, r10
    893e:	bb 09       	sbc	r27, r11
    8940:	88 3e       	cpi	r24, 0xE8	; 232
    8942:	93 40       	sbci	r25, 0x03	; 3
    8944:	a1 05       	cpc	r26, r1
    8946:	b1 05       	cpc	r27, r1
    8948:	70 f3       	brcs	.-36     	; 0x8926 <delay+0x1a>
    894a:	21 e0       	ldi	r18, 0x01	; 1
    894c:	c2 1a       	sub	r12, r18
    894e:	d1 08       	sbc	r13, r1
    8950:	e1 08       	sbc	r14, r1
    8952:	f1 08       	sbc	r15, r1
    8954:	88 ee       	ldi	r24, 0xE8	; 232
    8956:	88 0e       	add	r8, r24
    8958:	83 e0       	ldi	r24, 0x03	; 3
    895a:	98 1e       	adc	r9, r24
    895c:	a1 1c       	adc	r10, r1
    895e:	b1 1c       	adc	r11, r1
    8960:	c1 14       	cp	r12, r1
    8962:	d1 04       	cpc	r13, r1
    8964:	e1 04       	cpc	r14, r1
    8966:	f1 04       	cpc	r15, r1
    8968:	21 f7       	brne	.-56     	; 0x8932 <delay+0x26>
    896a:	dd cf       	rjmp	.-70     	; 0x8926 <delay+0x1a>
    896c:	ff 90       	pop	r15
    896e:	ef 90       	pop	r14
    8970:	df 90       	pop	r13
    8972:	cf 90       	pop	r12
    8974:	bf 90       	pop	r11
    8976:	af 90       	pop	r10
    8978:	9f 90       	pop	r9
    897a:	8f 90       	pop	r8
    897c:	08 95       	ret

0000897e <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    897e:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    8980:	84 b5       	in	r24, 0x24	; 36
    8982:	82 60       	ori	r24, 0x02	; 2
    8984:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    8986:	84 b5       	in	r24, 0x24	; 36
    8988:	81 60       	ori	r24, 0x01	; 1
    898a:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    898c:	85 b5       	in	r24, 0x25	; 37
    898e:	82 60       	ori	r24, 0x02	; 2
    8990:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    8992:	85 b5       	in	r24, 0x25	; 37
    8994:	81 60       	ori	r24, 0x01	; 1
    8996:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    8998:	ee e6       	ldi	r30, 0x6E	; 110
    899a:	f0 e0       	ldi	r31, 0x00	; 0
    899c:	80 81       	ld	r24, Z
    899e:	81 60       	ori	r24, 0x01	; 1
    89a0:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    89a2:	e1 e8       	ldi	r30, 0x81	; 129
    89a4:	f0 e0       	ldi	r31, 0x00	; 0
    89a6:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    89a8:	80 81       	ld	r24, Z
    89aa:	82 60       	ori	r24, 0x02	; 2
    89ac:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    89ae:	80 81       	ld	r24, Z
    89b0:	81 60       	ori	r24, 0x01	; 1
    89b2:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    89b4:	e0 e8       	ldi	r30, 0x80	; 128
    89b6:	f0 e0       	ldi	r31, 0x00	; 0
    89b8:	80 81       	ld	r24, Z
    89ba:	81 60       	ori	r24, 0x01	; 1
    89bc:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    89be:	e1 eb       	ldi	r30, 0xB1	; 177
    89c0:	f0 e0       	ldi	r31, 0x00	; 0
    89c2:	80 81       	ld	r24, Z
    89c4:	84 60       	ori	r24, 0x04	; 4
    89c6:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    89c8:	e0 eb       	ldi	r30, 0xB0	; 176
    89ca:	f0 e0       	ldi	r31, 0x00	; 0
    89cc:	80 81       	ld	r24, Z
    89ce:	81 60       	ori	r24, 0x01	; 1
    89d0:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
    89d2:	e1 e9       	ldi	r30, 0x91	; 145
    89d4:	f0 e0       	ldi	r31, 0x00	; 0
    89d6:	80 81       	ld	r24, Z
    89d8:	82 60       	ori	r24, 0x02	; 2
    89da:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
    89dc:	80 81       	ld	r24, Z
    89de:	81 60       	ori	r24, 0x01	; 1
    89e0:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
    89e2:	e0 e9       	ldi	r30, 0x90	; 144
    89e4:	f0 e0       	ldi	r31, 0x00	; 0
    89e6:	80 81       	ld	r24, Z
    89e8:	81 60       	ori	r24, 0x01	; 1
    89ea:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
    89ec:	e1 ea       	ldi	r30, 0xA1	; 161
    89ee:	f0 e0       	ldi	r31, 0x00	; 0
    89f0:	80 81       	ld	r24, Z
    89f2:	82 60       	ori	r24, 0x02	; 2
    89f4:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
    89f6:	80 81       	ld	r24, Z
    89f8:	81 60       	ori	r24, 0x01	; 1
    89fa:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
    89fc:	e0 ea       	ldi	r30, 0xA0	; 160
    89fe:	f0 e0       	ldi	r31, 0x00	; 0
    8a00:	80 81       	ld	r24, Z
    8a02:	81 60       	ori	r24, 0x01	; 1
    8a04:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
    8a06:	e1 e2       	ldi	r30, 0x21	; 33
    8a08:	f1 e0       	ldi	r31, 0x01	; 1
    8a0a:	80 81       	ld	r24, Z
    8a0c:	82 60       	ori	r24, 0x02	; 2
    8a0e:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
    8a10:	80 81       	ld	r24, Z
    8a12:	81 60       	ori	r24, 0x01	; 1
    8a14:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
    8a16:	e0 e2       	ldi	r30, 0x20	; 32
    8a18:	f1 e0       	ldi	r31, 0x01	; 1
    8a1a:	80 81       	ld	r24, Z
    8a1c:	81 60       	ori	r24, 0x01	; 1
    8a1e:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    8a20:	ea e7       	ldi	r30, 0x7A	; 122
    8a22:	f0 e0       	ldi	r31, 0x00	; 0
    8a24:	80 81       	ld	r24, Z
    8a26:	84 60       	ori	r24, 0x04	; 4
    8a28:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    8a2a:	80 81       	ld	r24, Z
    8a2c:	82 60       	ori	r24, 0x02	; 2
    8a2e:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    8a30:	80 81       	ld	r24, Z
    8a32:	81 60       	ori	r24, 0x01	; 1
    8a34:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    8a36:	80 81       	ld	r24, Z
    8a38:	80 68       	ori	r24, 0x80	; 128
    8a3a:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    8a3c:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    8a40:	08 95       	ret

00008a42 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    8a42:	90 e0       	ldi	r25, 0x00	; 0
    8a44:	fc 01       	movw	r30, r24
    8a46:	31 97       	sbiw	r30, 0x01	; 1
    8a48:	e2 31       	cpi	r30, 0x12	; 18
    8a4a:	f1 05       	cpc	r31, r1
    8a4c:	08 f0       	brcs	.+2      	; 0x8a50 <turnOffPWM+0xe>
    8a4e:	4d c0       	rjmp	.+154    	; 0x8aea <turnOffPWM+0xa8>
    8a50:	88 27       	eor	r24, r24
    8a52:	e3 54       	subi	r30, 0x43	; 67
    8a54:	ff 4f       	sbci	r31, 0xFF	; 255
    8a56:	8f 4f       	sbci	r24, 0xFF	; 255
    8a58:	03 c2       	rjmp	.+1030   	; 0x8e60 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    8a5a:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    8a5e:	8f 77       	andi	r24, 0x7F	; 127
    8a60:	03 c0       	rjmp	.+6      	; 0x8a68 <turnOffPWM+0x26>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    8a62:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    8a66:	8f 7d       	andi	r24, 0xDF	; 223
    8a68:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    8a6c:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
    8a6e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    8a72:	87 7f       	andi	r24, 0xF7	; 247
    8a74:	f9 cf       	rjmp	.-14     	; 0x8a68 <turnOffPWM+0x26>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    8a76:	84 b5       	in	r24, 0x24	; 36
    8a78:	8f 77       	andi	r24, 0x7F	; 127
    8a7a:	02 c0       	rjmp	.+4      	; 0x8a80 <turnOffPWM+0x3e>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    8a7c:	84 b5       	in	r24, 0x24	; 36
    8a7e:	8f 7d       	andi	r24, 0xDF	; 223
    8a80:	84 bd       	out	0x24, r24	; 36
    8a82:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    8a84:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    8a88:	8f 77       	andi	r24, 0x7F	; 127
    8a8a:	03 c0       	rjmp	.+6      	; 0x8a92 <turnOffPWM+0x50>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    8a8c:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    8a90:	8f 7d       	andi	r24, 0xDF	; 223
    8a92:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    8a96:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
    8a98:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    8a9c:	8f 77       	andi	r24, 0x7F	; 127
    8a9e:	07 c0       	rjmp	.+14     	; 0x8aae <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
    8aa0:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    8aa4:	8f 7d       	andi	r24, 0xDF	; 223
    8aa6:	03 c0       	rjmp	.+6      	; 0x8aae <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
    8aa8:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    8aac:	87 7f       	andi	r24, 0xF7	; 247
    8aae:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    8ab2:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
    8ab4:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    8ab8:	8f 77       	andi	r24, 0x7F	; 127
    8aba:	07 c0       	rjmp	.+14     	; 0x8aca <turnOffPWM+0x88>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
    8abc:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    8ac0:	8f 7d       	andi	r24, 0xDF	; 223
    8ac2:	03 c0       	rjmp	.+6      	; 0x8aca <turnOffPWM+0x88>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
    8ac4:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    8ac8:	87 7f       	andi	r24, 0xF7	; 247
    8aca:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    8ace:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
    8ad0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    8ad4:	8f 77       	andi	r24, 0x7F	; 127
    8ad6:	07 c0       	rjmp	.+14     	; 0x8ae6 <turnOffPWM+0xa4>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
    8ad8:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    8adc:	8f 7d       	andi	r24, 0xDF	; 223
    8ade:	03 c0       	rjmp	.+6      	; 0x8ae6 <turnOffPWM+0xa4>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
    8ae0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    8ae4:	87 7f       	andi	r24, 0xF7	; 247
    8ae6:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    8aea:	08 95       	ret

00008aec <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    8aec:	cf 93       	push	r28
    8aee:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    8af0:	90 e0       	ldi	r25, 0x00	; 0
    8af2:	fc 01       	movw	r30, r24
    8af4:	e6 5c       	subi	r30, 0xC6	; 198
    8af6:	fc 4e       	sbci	r31, 0xEC	; 236
    8af8:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    8afa:	fc 01       	movw	r30, r24
    8afc:	e0 58       	subi	r30, 0x80	; 128
    8afe:	fc 4e       	sbci	r31, 0xEC	; 236
    8b00:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    8b02:	88 23       	and	r24, r24
    8b04:	61 f1       	breq	.+88     	; 0x8b5e <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    8b06:	90 e0       	ldi	r25, 0x00	; 0
    8b08:	88 0f       	add	r24, r24
    8b0a:	99 1f       	adc	r25, r25
    8b0c:	fc 01       	movw	r30, r24
    8b0e:	e6 50       	subi	r30, 0x06	; 6
    8b10:	fc 4e       	sbci	r31, 0xEC	; 236
    8b12:	c5 91       	lpm	r28, Z+
    8b14:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    8b16:	fc 01       	movw	r30, r24
    8b18:	e0 52       	subi	r30, 0x20	; 32
    8b1a:	fc 4e       	sbci	r31, 0xEC	; 236
    8b1c:	a5 91       	lpm	r26, Z+
    8b1e:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    8b20:	61 11       	cpse	r22, r1
    8b22:	09 c0       	rjmp	.+18     	; 0x8b36 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    8b24:	9f b7       	in	r25, 0x3f	; 63
                cli();
    8b26:	f8 94       	cli
		*reg &= ~bit;
    8b28:	88 81       	ld	r24, Y
    8b2a:	20 95       	com	r18
    8b2c:	82 23       	and	r24, r18
    8b2e:	88 83       	st	Y, r24
		*out &= ~bit;
    8b30:	ec 91       	ld	r30, X
    8b32:	2e 23       	and	r18, r30
    8b34:	0b c0       	rjmp	.+22     	; 0x8b4c <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    8b36:	62 30       	cpi	r22, 0x02	; 2
    8b38:	61 f4       	brne	.+24     	; 0x8b52 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    8b3a:	9f b7       	in	r25, 0x3f	; 63
                cli();
    8b3c:	f8 94       	cli
		*reg &= ~bit;
    8b3e:	88 81       	ld	r24, Y
    8b40:	32 2f       	mov	r19, r18
    8b42:	30 95       	com	r19
    8b44:	83 23       	and	r24, r19
    8b46:	88 83       	st	Y, r24
		*out |= bit;
    8b48:	ec 91       	ld	r30, X
    8b4a:	2e 2b       	or	r18, r30
    8b4c:	2c 93       	st	X, r18
		SREG = oldSREG;
    8b4e:	9f bf       	out	0x3f, r25	; 63
    8b50:	06 c0       	rjmp	.+12     	; 0x8b5e <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    8b52:	8f b7       	in	r24, 0x3f	; 63
                cli();
    8b54:	f8 94       	cli
		*reg |= bit;
    8b56:	e8 81       	ld	r30, Y
    8b58:	2e 2b       	or	r18, r30
    8b5a:	28 83       	st	Y, r18
		SREG = oldSREG;
    8b5c:	8f bf       	out	0x3f, r24	; 63
	}
}
    8b5e:	df 91       	pop	r29
    8b60:	cf 91       	pop	r28
    8b62:	08 95       	ret

00008b64 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    8b64:	1f 93       	push	r17
    8b66:	cf 93       	push	r28
    8b68:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    8b6a:	28 2f       	mov	r18, r24
    8b6c:	30 e0       	ldi	r19, 0x00	; 0
    8b6e:	f9 01       	movw	r30, r18
    8b70:	ec 50       	subi	r30, 0x0C	; 12
    8b72:	fd 4e       	sbci	r31, 0xED	; 237
    8b74:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    8b76:	f9 01       	movw	r30, r18
    8b78:	e6 5c       	subi	r30, 0xC6	; 198
    8b7a:	fc 4e       	sbci	r31, 0xEC	; 236
    8b7c:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    8b7e:	f9 01       	movw	r30, r18
    8b80:	e0 58       	subi	r30, 0x80	; 128
    8b82:	fc 4e       	sbci	r31, 0xEC	; 236
    8b84:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    8b86:	cc 23       	and	r28, r28
    8b88:	b9 f0       	breq	.+46     	; 0x8bb8 <digitalWrite+0x54>
    8b8a:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    8b8c:	81 11       	cpse	r24, r1
    8b8e:	59 df       	rcall	.-334    	; 0x8a42 <turnOffPWM>

	out = portOutputRegister(port);
    8b90:	ec 2f       	mov	r30, r28
    8b92:	f0 e0       	ldi	r31, 0x00	; 0
    8b94:	ee 0f       	add	r30, r30
    8b96:	ff 1f       	adc	r31, r31
    8b98:	e0 52       	subi	r30, 0x20	; 32
    8b9a:	fc 4e       	sbci	r31, 0xEC	; 236
    8b9c:	a5 91       	lpm	r26, Z+
    8b9e:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    8ba0:	9f b7       	in	r25, 0x3f	; 63
	cli();
    8ba2:	f8 94       	cli

	if (val == LOW) {
    8ba4:	11 11       	cpse	r17, r1
    8ba6:	04 c0       	rjmp	.+8      	; 0x8bb0 <digitalWrite+0x4c>
		*out &= ~bit;
    8ba8:	8c 91       	ld	r24, X
    8baa:	d0 95       	com	r29
    8bac:	d8 23       	and	r29, r24
    8bae:	02 c0       	rjmp	.+4      	; 0x8bb4 <digitalWrite+0x50>
	} else {
		*out |= bit;
    8bb0:	ec 91       	ld	r30, X
    8bb2:	de 2b       	or	r29, r30
    8bb4:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    8bb6:	9f bf       	out	0x3f, r25	; 63
}
    8bb8:	df 91       	pop	r29
    8bba:	cf 91       	pop	r28
    8bbc:	1f 91       	pop	r17
    8bbe:	08 95       	ret

00008bc0 <digitalRead>:

int digitalRead(uint8_t pin)
{
    8bc0:	cf 93       	push	r28
    8bc2:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    8bc4:	28 2f       	mov	r18, r24
    8bc6:	30 e0       	ldi	r19, 0x00	; 0
    8bc8:	f9 01       	movw	r30, r18
    8bca:	ec 50       	subi	r30, 0x0C	; 12
    8bcc:	fd 4e       	sbci	r31, 0xED	; 237
    8bce:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    8bd0:	f9 01       	movw	r30, r18
    8bd2:	e6 5c       	subi	r30, 0xC6	; 198
    8bd4:	fc 4e       	sbci	r31, 0xEC	; 236
    8bd6:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    8bd8:	f9 01       	movw	r30, r18
    8bda:	e0 58       	subi	r30, 0x80	; 128
    8bdc:	fc 4e       	sbci	r31, 0xEC	; 236
    8bde:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
    8be0:	cc 23       	and	r28, r28
    8be2:	89 f0       	breq	.+34     	; 0x8c06 <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    8be4:	81 11       	cpse	r24, r1
    8be6:	2d df       	rcall	.-422    	; 0x8a42 <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
    8be8:	ec 2f       	mov	r30, r28
    8bea:	f0 e0       	ldi	r31, 0x00	; 0
    8bec:	ee 0f       	add	r30, r30
    8bee:	ff 1f       	adc	r31, r31
    8bf0:	ea 53       	subi	r30, 0x3A	; 58
    8bf2:	fc 4e       	sbci	r31, 0xEC	; 236
    8bf4:	a5 91       	lpm	r26, Z+
    8bf6:	b4 91       	lpm	r27, Z
    8bf8:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
    8bfa:	ed 23       	and	r30, r29
    8bfc:	81 e0       	ldi	r24, 0x01	; 1
    8bfe:	90 e0       	ldi	r25, 0x00	; 0
    8c00:	21 f4       	brne	.+8      	; 0x8c0a <digitalRead+0x4a>
    8c02:	80 e0       	ldi	r24, 0x00	; 0
    8c04:	02 c0       	rjmp	.+4      	; 0x8c0a <digitalRead+0x4a>
    8c06:	80 e0       	ldi	r24, 0x00	; 0
    8c08:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
    8c0a:	df 91       	pop	r29
    8c0c:	cf 91       	pop	r28
    8c0e:	08 95       	ret

00008c10 <_ZN6StringD1Ev>:
/*  Character Access                         */
/*********************************************/

char String::charAt(unsigned int loc) const
{
	return operator[](loc);
    8c10:	fc 01       	movw	r30, r24
    8c12:	80 81       	ld	r24, Z
    8c14:	91 81       	ldd	r25, Z+1	; 0x01
    8c16:	fc c1       	rjmp	.+1016   	; 0x9010 <free>

00008c18 <_ZN6String10invalidateEv>:
    8c18:	cf 93       	push	r28
    8c1a:	df 93       	push	r29
    8c1c:	ec 01       	movw	r28, r24
    8c1e:	88 81       	ld	r24, Y
    8c20:	99 81       	ldd	r25, Y+1	; 0x01
    8c22:	00 97       	sbiw	r24, 0x00	; 0
    8c24:	09 f0       	breq	.+2      	; 0x8c28 <_ZN6String10invalidateEv+0x10>
    8c26:	f4 d1       	rcall	.+1000   	; 0x9010 <free>
    8c28:	19 82       	std	Y+1, r1	; 0x01
    8c2a:	18 82       	st	Y, r1
    8c2c:	1d 82       	std	Y+5, r1	; 0x05
    8c2e:	1c 82       	std	Y+4, r1	; 0x04
    8c30:	1b 82       	std	Y+3, r1	; 0x03
    8c32:	1a 82       	std	Y+2, r1	; 0x02
    8c34:	df 91       	pop	r29
    8c36:	cf 91       	pop	r28
    8c38:	08 95       	ret

00008c3a <_ZN6String12changeBufferEj>:
    8c3a:	0f 93       	push	r16
    8c3c:	1f 93       	push	r17
    8c3e:	cf 93       	push	r28
    8c40:	df 93       	push	r29
    8c42:	ec 01       	movw	r28, r24
    8c44:	8b 01       	movw	r16, r22
    8c46:	6f 5f       	subi	r22, 0xFF	; 255
    8c48:	7f 4f       	sbci	r23, 0xFF	; 255
    8c4a:	88 81       	ld	r24, Y
    8c4c:	99 81       	ldd	r25, Y+1	; 0x01
    8c4e:	69 d2       	rcall	.+1234   	; 0x9122 <realloc>
    8c50:	00 97       	sbiw	r24, 0x00	; 0
    8c52:	31 f0       	breq	.+12     	; 0x8c60 <_ZN6String12changeBufferEj+0x26>
    8c54:	99 83       	std	Y+1, r25	; 0x01
    8c56:	88 83       	st	Y, r24
    8c58:	1b 83       	std	Y+3, r17	; 0x03
    8c5a:	0a 83       	std	Y+2, r16	; 0x02
    8c5c:	81 e0       	ldi	r24, 0x01	; 1
    8c5e:	01 c0       	rjmp	.+2      	; 0x8c62 <_ZN6String12changeBufferEj+0x28>
    8c60:	80 e0       	ldi	r24, 0x00	; 0
    8c62:	df 91       	pop	r29
    8c64:	cf 91       	pop	r28
    8c66:	1f 91       	pop	r17
    8c68:	0f 91       	pop	r16
    8c6a:	08 95       	ret

00008c6c <_ZN6String7reserveEj>:
    8c6c:	cf 93       	push	r28
    8c6e:	df 93       	push	r29
    8c70:	ec 01       	movw	r28, r24
    8c72:	88 81       	ld	r24, Y
    8c74:	99 81       	ldd	r25, Y+1	; 0x01
    8c76:	89 2b       	or	r24, r25
    8c78:	29 f0       	breq	.+10     	; 0x8c84 <_ZN6String7reserveEj+0x18>
    8c7a:	8a 81       	ldd	r24, Y+2	; 0x02
    8c7c:	9b 81       	ldd	r25, Y+3	; 0x03
    8c7e:	86 17       	cp	r24, r22
    8c80:	97 07       	cpc	r25, r23
    8c82:	58 f4       	brcc	.+22     	; 0x8c9a <_ZN6String7reserveEj+0x2e>
    8c84:	ce 01       	movw	r24, r28
    8c86:	d9 df       	rcall	.-78     	; 0x8c3a <_ZN6String12changeBufferEj>
    8c88:	88 23       	and	r24, r24
    8c8a:	41 f0       	breq	.+16     	; 0x8c9c <_ZN6String7reserveEj+0x30>
    8c8c:	8c 81       	ldd	r24, Y+4	; 0x04
    8c8e:	9d 81       	ldd	r25, Y+5	; 0x05
    8c90:	89 2b       	or	r24, r25
    8c92:	19 f4       	brne	.+6      	; 0x8c9a <_ZN6String7reserveEj+0x2e>
    8c94:	e8 81       	ld	r30, Y
    8c96:	f9 81       	ldd	r31, Y+1	; 0x01
    8c98:	10 82       	st	Z, r1
    8c9a:	81 e0       	ldi	r24, 0x01	; 1
    8c9c:	df 91       	pop	r29
    8c9e:	cf 91       	pop	r28
    8ca0:	08 95       	ret

00008ca2 <_ZN6String4copyEPKcj>:
    8ca2:	ef 92       	push	r14
    8ca4:	ff 92       	push	r15
    8ca6:	0f 93       	push	r16
    8ca8:	1f 93       	push	r17
    8caa:	cf 93       	push	r28
    8cac:	df 93       	push	r29
    8cae:	ec 01       	movw	r28, r24
    8cb0:	7b 01       	movw	r14, r22
    8cb2:	8a 01       	movw	r16, r20
    8cb4:	ba 01       	movw	r22, r20
    8cb6:	da df       	rcall	.-76     	; 0x8c6c <_ZN6String7reserveEj>
    8cb8:	81 11       	cpse	r24, r1
    8cba:	03 c0       	rjmp	.+6      	; 0x8cc2 <_ZN6String4copyEPKcj+0x20>
    8cbc:	ce 01       	movw	r24, r28
    8cbe:	ac df       	rcall	.-168    	; 0x8c18 <_ZN6String10invalidateEv>
    8cc0:	06 c0       	rjmp	.+12     	; 0x8cce <_ZN6String4copyEPKcj+0x2c>
    8cc2:	1d 83       	std	Y+5, r17	; 0x05
    8cc4:	0c 83       	std	Y+4, r16	; 0x04
    8cc6:	b7 01       	movw	r22, r14
    8cc8:	88 81       	ld	r24, Y
    8cca:	99 81       	ldd	r25, Y+1	; 0x01
    8ccc:	13 d3       	rcall	.+1574   	; 0x92f4 <strcpy>
    8cce:	ce 01       	movw	r24, r28
    8cd0:	df 91       	pop	r29
    8cd2:	cf 91       	pop	r28
    8cd4:	1f 91       	pop	r17
    8cd6:	0f 91       	pop	r16
    8cd8:	ff 90       	pop	r15
    8cda:	ef 90       	pop	r14
    8cdc:	08 95       	ret

00008cde <_ZN6StringC1EPKc>:
    8cde:	fc 01       	movw	r30, r24
    8ce0:	11 82       	std	Z+1, r1	; 0x01
    8ce2:	10 82       	st	Z, r1
    8ce4:	13 82       	std	Z+3, r1	; 0x03
    8ce6:	12 82       	std	Z+2, r1	; 0x02
    8ce8:	15 82       	std	Z+5, r1	; 0x05
    8cea:	14 82       	std	Z+4, r1	; 0x04
    8cec:	61 15       	cp	r22, r1
    8cee:	71 05       	cpc	r23, r1
    8cf0:	49 f0       	breq	.+18     	; 0x8d04 <_ZN6StringC1EPKc+0x26>
    8cf2:	fb 01       	movw	r30, r22
    8cf4:	01 90       	ld	r0, Z+
    8cf6:	00 20       	and	r0, r0
    8cf8:	e9 f7       	brne	.-6      	; 0x8cf4 <_ZN6StringC1EPKc+0x16>
    8cfa:	31 97       	sbiw	r30, 0x01	; 1
    8cfc:	af 01       	movw	r20, r30
    8cfe:	46 1b       	sub	r20, r22
    8d00:	57 0b       	sbc	r21, r23
    8d02:	cf cf       	rjmp	.-98     	; 0x8ca2 <_ZN6String4copyEPKcj>
    8d04:	08 95       	ret

00008d06 <_ZN6StringaSERKS_>:
    8d06:	cf 93       	push	r28
    8d08:	df 93       	push	r29
    8d0a:	ec 01       	movw	r28, r24
    8d0c:	fb 01       	movw	r30, r22
    8d0e:	86 17       	cp	r24, r22
    8d10:	97 07       	cpc	r25, r23
    8d12:	51 f0       	breq	.+20     	; 0x8d28 <_ZN6StringaSERKS_+0x22>
    8d14:	60 81       	ld	r22, Z
    8d16:	71 81       	ldd	r23, Z+1	; 0x01
    8d18:	61 15       	cp	r22, r1
    8d1a:	71 05       	cpc	r23, r1
    8d1c:	21 f0       	breq	.+8      	; 0x8d26 <_ZN6StringaSERKS_+0x20>
    8d1e:	44 81       	ldd	r20, Z+4	; 0x04
    8d20:	55 81       	ldd	r21, Z+5	; 0x05
    8d22:	bf df       	rcall	.-130    	; 0x8ca2 <_ZN6String4copyEPKcj>
    8d24:	01 c0       	rjmp	.+2      	; 0x8d28 <_ZN6StringaSERKS_+0x22>
    8d26:	78 df       	rcall	.-272    	; 0x8c18 <_ZN6String10invalidateEv>
    8d28:	ce 01       	movw	r24, r28
    8d2a:	df 91       	pop	r29
    8d2c:	cf 91       	pop	r28
    8d2e:	08 95       	ret

00008d30 <_ZN6StringC1ERKS_>:
    8d30:	fc 01       	movw	r30, r24
    8d32:	11 82       	std	Z+1, r1	; 0x01
    8d34:	10 82       	st	Z, r1
    8d36:	13 82       	std	Z+3, r1	; 0x03
    8d38:	12 82       	std	Z+2, r1	; 0x02
    8d3a:	15 82       	std	Z+5, r1	; 0x05
    8d3c:	14 82       	std	Z+4, r1	; 0x04
    8d3e:	e3 cf       	rjmp	.-58     	; 0x8d06 <_ZN6StringaSERKS_>

00008d40 <_ZNK6String8getBytesEPhjj>:
	if (index >= len || !buffer) return 0;
	return buffer[index];
}

void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index) const
{
    8d40:	0f 93       	push	r16
    8d42:	1f 93       	push	r17
    8d44:	cf 93       	push	r28
    8d46:	df 93       	push	r29
	if (!bufsize || !buf) return;
    8d48:	41 15       	cp	r20, r1
    8d4a:	51 05       	cpc	r21, r1
    8d4c:	11 f1       	breq	.+68     	; 0x8d92 <_ZNK6String8getBytesEPhjj+0x52>
    8d4e:	61 15       	cp	r22, r1
    8d50:	71 05       	cpc	r23, r1
    8d52:	f9 f0       	breq	.+62     	; 0x8d92 <_ZNK6String8getBytesEPhjj+0x52>
	if (index >= len) {
    8d54:	dc 01       	movw	r26, r24
    8d56:	14 96       	adiw	r26, 0x04	; 4
    8d58:	ed 91       	ld	r30, X+
    8d5a:	fc 91       	ld	r31, X
    8d5c:	15 97       	sbiw	r26, 0x05	; 5
    8d5e:	2e 17       	cp	r18, r30
    8d60:	3f 07       	cpc	r19, r31
    8d62:	18 f0       	brcs	.+6      	; 0x8d6a <_ZNK6String8getBytesEPhjj+0x2a>
		buf[0] = 0;
    8d64:	fb 01       	movw	r30, r22
    8d66:	10 82       	st	Z, r1
		return;
    8d68:	14 c0       	rjmp	.+40     	; 0x8d92 <_ZNK6String8getBytesEPhjj+0x52>
	}
	unsigned int n = bufsize - 1;
	if (n > len - index) n = len - index;
    8d6a:	e2 1b       	sub	r30, r18
    8d6c:	f3 0b       	sbc	r31, r19
    8d6e:	ea 01       	movw	r28, r20
    8d70:	21 97       	sbiw	r28, 0x01	; 1
    8d72:	ec 17       	cp	r30, r28
    8d74:	fd 07       	cpc	r31, r29
    8d76:	08 f4       	brcc	.+2      	; 0x8d7a <_ZNK6String8getBytesEPhjj+0x3a>
    8d78:	ef 01       	movw	r28, r30
    8d7a:	8b 01       	movw	r16, r22
    8d7c:	fc 01       	movw	r30, r24
	strncpy((char *)buf, buffer + index, n);
    8d7e:	60 81       	ld	r22, Z
    8d80:	71 81       	ldd	r23, Z+1	; 0x01
    8d82:	62 0f       	add	r22, r18
    8d84:	73 1f       	adc	r23, r19
    8d86:	ae 01       	movw	r20, r28
    8d88:	c8 01       	movw	r24, r16
    8d8a:	bb d2       	rcall	.+1398   	; 0x9302 <strncpy>
	buf[n] = 0;
    8d8c:	c0 0f       	add	r28, r16
    8d8e:	d1 1f       	adc	r29, r17
    8d90:	18 82       	st	Y, r1
}
    8d92:	df 91       	pop	r29
    8d94:	cf 91       	pop	r28
    8d96:	1f 91       	pop	r17
    8d98:	0f 91       	pop	r16
    8d9a:	08 95       	ret

00008d9c <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    8d9c:	08 95       	ret

00008d9e <__mulsi3>:
    8d9e:	db 01       	movw	r26, r22
    8da0:	8f 93       	push	r24
    8da2:	9f 93       	push	r25
    8da4:	65 d0       	rcall	.+202    	; 0x8e70 <__muluhisi3>
    8da6:	bf 91       	pop	r27
    8da8:	af 91       	pop	r26
    8daa:	a2 9f       	mul	r26, r18
    8dac:	80 0d       	add	r24, r0
    8dae:	91 1d       	adc	r25, r1
    8db0:	a3 9f       	mul	r26, r19
    8db2:	90 0d       	add	r25, r0
    8db4:	b2 9f       	mul	r27, r18
    8db6:	90 0d       	add	r25, r0
    8db8:	11 24       	eor	r1, r1
    8dba:	08 95       	ret

00008dbc <__udivmodhi4>:
    8dbc:	aa 1b       	sub	r26, r26
    8dbe:	bb 1b       	sub	r27, r27
    8dc0:	51 e1       	ldi	r21, 0x11	; 17
    8dc2:	07 c0       	rjmp	.+14     	; 0x8dd2 <__udivmodhi4_ep>

00008dc4 <__udivmodhi4_loop>:
    8dc4:	aa 1f       	adc	r26, r26
    8dc6:	bb 1f       	adc	r27, r27
    8dc8:	a6 17       	cp	r26, r22
    8dca:	b7 07       	cpc	r27, r23
    8dcc:	10 f0       	brcs	.+4      	; 0x8dd2 <__udivmodhi4_ep>
    8dce:	a6 1b       	sub	r26, r22
    8dd0:	b7 0b       	sbc	r27, r23

00008dd2 <__udivmodhi4_ep>:
    8dd2:	88 1f       	adc	r24, r24
    8dd4:	99 1f       	adc	r25, r25
    8dd6:	5a 95       	dec	r21
    8dd8:	a9 f7       	brne	.-22     	; 0x8dc4 <__udivmodhi4_loop>
    8dda:	80 95       	com	r24
    8ddc:	90 95       	com	r25
    8dde:	bc 01       	movw	r22, r24
    8de0:	cd 01       	movw	r24, r26
    8de2:	08 95       	ret

00008de4 <__udivmodsi4>:
    8de4:	a1 e2       	ldi	r26, 0x21	; 33
    8de6:	1a 2e       	mov	r1, r26
    8de8:	aa 1b       	sub	r26, r26
    8dea:	bb 1b       	sub	r27, r27
    8dec:	fd 01       	movw	r30, r26
    8dee:	0d c0       	rjmp	.+26     	; 0x8e0a <__udivmodsi4_ep>

00008df0 <__udivmodsi4_loop>:
    8df0:	aa 1f       	adc	r26, r26
    8df2:	bb 1f       	adc	r27, r27
    8df4:	ee 1f       	adc	r30, r30
    8df6:	ff 1f       	adc	r31, r31
    8df8:	a2 17       	cp	r26, r18
    8dfa:	b3 07       	cpc	r27, r19
    8dfc:	e4 07       	cpc	r30, r20
    8dfe:	f5 07       	cpc	r31, r21
    8e00:	20 f0       	brcs	.+8      	; 0x8e0a <__udivmodsi4_ep>
    8e02:	a2 1b       	sub	r26, r18
    8e04:	b3 0b       	sbc	r27, r19
    8e06:	e4 0b       	sbc	r30, r20
    8e08:	f5 0b       	sbc	r31, r21

00008e0a <__udivmodsi4_ep>:
    8e0a:	66 1f       	adc	r22, r22
    8e0c:	77 1f       	adc	r23, r23
    8e0e:	88 1f       	adc	r24, r24
    8e10:	99 1f       	adc	r25, r25
    8e12:	1a 94       	dec	r1
    8e14:	69 f7       	brne	.-38     	; 0x8df0 <__udivmodsi4_loop>
    8e16:	60 95       	com	r22
    8e18:	70 95       	com	r23
    8e1a:	80 95       	com	r24
    8e1c:	90 95       	com	r25
    8e1e:	9b 01       	movw	r18, r22
    8e20:	ac 01       	movw	r20, r24
    8e22:	bd 01       	movw	r22, r26
    8e24:	cf 01       	movw	r24, r30
    8e26:	08 95       	ret

00008e28 <__divmodsi4>:
    8e28:	05 2e       	mov	r0, r21
    8e2a:	97 fb       	bst	r25, 7
    8e2c:	16 f4       	brtc	.+4      	; 0x8e32 <__divmodsi4+0xa>
    8e2e:	00 94       	com	r0
    8e30:	0f d0       	rcall	.+30     	; 0x8e50 <__negsi2>
    8e32:	57 fd       	sbrc	r21, 7
    8e34:	05 d0       	rcall	.+10     	; 0x8e40 <__divmodsi4_neg2>
    8e36:	d6 df       	rcall	.-84     	; 0x8de4 <__udivmodsi4>
    8e38:	07 fc       	sbrc	r0, 7
    8e3a:	02 d0       	rcall	.+4      	; 0x8e40 <__divmodsi4_neg2>
    8e3c:	46 f4       	brtc	.+16     	; 0x8e4e <__divmodsi4_exit>
    8e3e:	08 c0       	rjmp	.+16     	; 0x8e50 <__negsi2>

00008e40 <__divmodsi4_neg2>:
    8e40:	50 95       	com	r21
    8e42:	40 95       	com	r20
    8e44:	30 95       	com	r19
    8e46:	21 95       	neg	r18
    8e48:	3f 4f       	sbci	r19, 0xFF	; 255
    8e4a:	4f 4f       	sbci	r20, 0xFF	; 255
    8e4c:	5f 4f       	sbci	r21, 0xFF	; 255

00008e4e <__divmodsi4_exit>:
    8e4e:	08 95       	ret

00008e50 <__negsi2>:
    8e50:	90 95       	com	r25
    8e52:	80 95       	com	r24
    8e54:	70 95       	com	r23
    8e56:	61 95       	neg	r22
    8e58:	7f 4f       	sbci	r23, 0xFF	; 255
    8e5a:	8f 4f       	sbci	r24, 0xFF	; 255
    8e5c:	9f 4f       	sbci	r25, 0xFF	; 255
    8e5e:	08 95       	ret

00008e60 <__tablejump2__>:
    8e60:	ee 0f       	add	r30, r30
    8e62:	ff 1f       	adc	r31, r31
    8e64:	88 1f       	adc	r24, r24
    8e66:	8b bf       	out	0x3b, r24	; 59
    8e68:	07 90       	elpm	r0, Z+
    8e6a:	f6 91       	elpm	r31, Z
    8e6c:	e0 2d       	mov	r30, r0
    8e6e:	19 94       	eijmp

00008e70 <__muluhisi3>:
    8e70:	09 d0       	rcall	.+18     	; 0x8e84 <__umulhisi3>
    8e72:	a5 9f       	mul	r26, r21
    8e74:	90 0d       	add	r25, r0
    8e76:	b4 9f       	mul	r27, r20
    8e78:	90 0d       	add	r25, r0
    8e7a:	a4 9f       	mul	r26, r20
    8e7c:	80 0d       	add	r24, r0
    8e7e:	91 1d       	adc	r25, r1
    8e80:	11 24       	eor	r1, r1
    8e82:	08 95       	ret

00008e84 <__umulhisi3>:
    8e84:	a2 9f       	mul	r26, r18
    8e86:	b0 01       	movw	r22, r0
    8e88:	b3 9f       	mul	r27, r19
    8e8a:	c0 01       	movw	r24, r0
    8e8c:	a3 9f       	mul	r26, r19
    8e8e:	70 0d       	add	r23, r0
    8e90:	81 1d       	adc	r24, r1
    8e92:	11 24       	eor	r1, r1
    8e94:	91 1d       	adc	r25, r1
    8e96:	b2 9f       	mul	r27, r18
    8e98:	70 0d       	add	r23, r0
    8e9a:	81 1d       	adc	r24, r1
    8e9c:	11 24       	eor	r1, r1
    8e9e:	91 1d       	adc	r25, r1
    8ea0:	08 95       	ret

00008ea2 <dtostrf>:
    8ea2:	ef 92       	push	r14
    8ea4:	0f 93       	push	r16
    8ea6:	1f 93       	push	r17
    8ea8:	cf 93       	push	r28
    8eaa:	df 93       	push	r29
    8eac:	e8 01       	movw	r28, r16
    8eae:	47 fd       	sbrc	r20, 7
    8eb0:	02 c0       	rjmp	.+4      	; 0x8eb6 <dtostrf+0x14>
    8eb2:	34 e0       	ldi	r19, 0x04	; 4
    8eb4:	01 c0       	rjmp	.+2      	; 0x8eb8 <dtostrf+0x16>
    8eb6:	34 e1       	ldi	r19, 0x14	; 20
    8eb8:	04 2e       	mov	r0, r20
    8eba:	00 0c       	add	r0, r0
    8ebc:	55 0b       	sbc	r21, r21
    8ebe:	57 ff       	sbrs	r21, 7
    8ec0:	03 c0       	rjmp	.+6      	; 0x8ec8 <dtostrf+0x26>
    8ec2:	51 95       	neg	r21
    8ec4:	41 95       	neg	r20
    8ec6:	51 09       	sbc	r21, r1
    8ec8:	e3 2e       	mov	r14, r19
    8eca:	02 2f       	mov	r16, r18
    8ecc:	24 2f       	mov	r18, r20
    8ece:	ae 01       	movw	r20, r28
    8ed0:	27 d2       	rcall	.+1102   	; 0x9320 <dtoa_prf>
    8ed2:	ce 01       	movw	r24, r28
    8ed4:	df 91       	pop	r29
    8ed6:	cf 91       	pop	r28
    8ed8:	1f 91       	pop	r17
    8eda:	0f 91       	pop	r16
    8edc:	ef 90       	pop	r14
    8ede:	08 95       	ret

00008ee0 <malloc>:
    8ee0:	0f 93       	push	r16
    8ee2:	1f 93       	push	r17
    8ee4:	cf 93       	push	r28
    8ee6:	df 93       	push	r29
    8ee8:	82 30       	cpi	r24, 0x02	; 2
    8eea:	91 05       	cpc	r25, r1
    8eec:	10 f4       	brcc	.+4      	; 0x8ef2 <malloc+0x12>
    8eee:	82 e0       	ldi	r24, 0x02	; 2
    8ef0:	90 e0       	ldi	r25, 0x00	; 0
    8ef2:	e0 91 6f 09 	lds	r30, 0x096F	; 0x80096f <__flp>
    8ef6:	f0 91 70 09 	lds	r31, 0x0970	; 0x800970 <__flp+0x1>
    8efa:	20 e0       	ldi	r18, 0x00	; 0
    8efc:	30 e0       	ldi	r19, 0x00	; 0
    8efe:	a0 e0       	ldi	r26, 0x00	; 0
    8f00:	b0 e0       	ldi	r27, 0x00	; 0
    8f02:	30 97       	sbiw	r30, 0x00	; 0
    8f04:	19 f1       	breq	.+70     	; 0x8f4c <malloc+0x6c>
    8f06:	40 81       	ld	r20, Z
    8f08:	51 81       	ldd	r21, Z+1	; 0x01
    8f0a:	02 81       	ldd	r16, Z+2	; 0x02
    8f0c:	13 81       	ldd	r17, Z+3	; 0x03
    8f0e:	48 17       	cp	r20, r24
    8f10:	59 07       	cpc	r21, r25
    8f12:	c8 f0       	brcs	.+50     	; 0x8f46 <malloc+0x66>
    8f14:	84 17       	cp	r24, r20
    8f16:	95 07       	cpc	r25, r21
    8f18:	69 f4       	brne	.+26     	; 0x8f34 <malloc+0x54>
    8f1a:	10 97       	sbiw	r26, 0x00	; 0
    8f1c:	31 f0       	breq	.+12     	; 0x8f2a <malloc+0x4a>
    8f1e:	12 96       	adiw	r26, 0x02	; 2
    8f20:	0c 93       	st	X, r16
    8f22:	12 97       	sbiw	r26, 0x02	; 2
    8f24:	13 96       	adiw	r26, 0x03	; 3
    8f26:	1c 93       	st	X, r17
    8f28:	27 c0       	rjmp	.+78     	; 0x8f78 <malloc+0x98>
    8f2a:	00 93 6f 09 	sts	0x096F, r16	; 0x80096f <__flp>
    8f2e:	10 93 70 09 	sts	0x0970, r17	; 0x800970 <__flp+0x1>
    8f32:	22 c0       	rjmp	.+68     	; 0x8f78 <malloc+0x98>
    8f34:	21 15       	cp	r18, r1
    8f36:	31 05       	cpc	r19, r1
    8f38:	19 f0       	breq	.+6      	; 0x8f40 <malloc+0x60>
    8f3a:	42 17       	cp	r20, r18
    8f3c:	53 07       	cpc	r21, r19
    8f3e:	18 f4       	brcc	.+6      	; 0x8f46 <malloc+0x66>
    8f40:	9a 01       	movw	r18, r20
    8f42:	bd 01       	movw	r22, r26
    8f44:	ef 01       	movw	r28, r30
    8f46:	df 01       	movw	r26, r30
    8f48:	f8 01       	movw	r30, r16
    8f4a:	db cf       	rjmp	.-74     	; 0x8f02 <malloc+0x22>
    8f4c:	21 15       	cp	r18, r1
    8f4e:	31 05       	cpc	r19, r1
    8f50:	f9 f0       	breq	.+62     	; 0x8f90 <malloc+0xb0>
    8f52:	28 1b       	sub	r18, r24
    8f54:	39 0b       	sbc	r19, r25
    8f56:	24 30       	cpi	r18, 0x04	; 4
    8f58:	31 05       	cpc	r19, r1
    8f5a:	80 f4       	brcc	.+32     	; 0x8f7c <malloc+0x9c>
    8f5c:	8a 81       	ldd	r24, Y+2	; 0x02
    8f5e:	9b 81       	ldd	r25, Y+3	; 0x03
    8f60:	61 15       	cp	r22, r1
    8f62:	71 05       	cpc	r23, r1
    8f64:	21 f0       	breq	.+8      	; 0x8f6e <malloc+0x8e>
    8f66:	fb 01       	movw	r30, r22
    8f68:	93 83       	std	Z+3, r25	; 0x03
    8f6a:	82 83       	std	Z+2, r24	; 0x02
    8f6c:	04 c0       	rjmp	.+8      	; 0x8f76 <malloc+0x96>
    8f6e:	90 93 70 09 	sts	0x0970, r25	; 0x800970 <__flp+0x1>
    8f72:	80 93 6f 09 	sts	0x096F, r24	; 0x80096f <__flp>
    8f76:	fe 01       	movw	r30, r28
    8f78:	32 96       	adiw	r30, 0x02	; 2
    8f7a:	44 c0       	rjmp	.+136    	; 0x9004 <malloc+0x124>
    8f7c:	fe 01       	movw	r30, r28
    8f7e:	e2 0f       	add	r30, r18
    8f80:	f3 1f       	adc	r31, r19
    8f82:	81 93       	st	Z+, r24
    8f84:	91 93       	st	Z+, r25
    8f86:	22 50       	subi	r18, 0x02	; 2
    8f88:	31 09       	sbc	r19, r1
    8f8a:	39 83       	std	Y+1, r19	; 0x01
    8f8c:	28 83       	st	Y, r18
    8f8e:	3a c0       	rjmp	.+116    	; 0x9004 <malloc+0x124>
    8f90:	20 91 6d 09 	lds	r18, 0x096D	; 0x80096d <__brkval>
    8f94:	30 91 6e 09 	lds	r19, 0x096E	; 0x80096e <__brkval+0x1>
    8f98:	23 2b       	or	r18, r19
    8f9a:	41 f4       	brne	.+16     	; 0x8fac <malloc+0xcc>
    8f9c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    8fa0:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    8fa4:	30 93 6e 09 	sts	0x096E, r19	; 0x80096e <__brkval+0x1>
    8fa8:	20 93 6d 09 	sts	0x096D, r18	; 0x80096d <__brkval>
    8fac:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    8fb0:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    8fb4:	21 15       	cp	r18, r1
    8fb6:	31 05       	cpc	r19, r1
    8fb8:	41 f4       	brne	.+16     	; 0x8fca <malloc+0xea>
    8fba:	2d b7       	in	r18, 0x3d	; 61
    8fbc:	3e b7       	in	r19, 0x3e	; 62
    8fbe:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    8fc2:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    8fc6:	24 1b       	sub	r18, r20
    8fc8:	35 0b       	sbc	r19, r21
    8fca:	e0 91 6d 09 	lds	r30, 0x096D	; 0x80096d <__brkval>
    8fce:	f0 91 6e 09 	lds	r31, 0x096E	; 0x80096e <__brkval+0x1>
    8fd2:	e2 17       	cp	r30, r18
    8fd4:	f3 07       	cpc	r31, r19
    8fd6:	a0 f4       	brcc	.+40     	; 0x9000 <malloc+0x120>
    8fd8:	2e 1b       	sub	r18, r30
    8fda:	3f 0b       	sbc	r19, r31
    8fdc:	28 17       	cp	r18, r24
    8fde:	39 07       	cpc	r19, r25
    8fe0:	78 f0       	brcs	.+30     	; 0x9000 <malloc+0x120>
    8fe2:	ac 01       	movw	r20, r24
    8fe4:	4e 5f       	subi	r20, 0xFE	; 254
    8fe6:	5f 4f       	sbci	r21, 0xFF	; 255
    8fe8:	24 17       	cp	r18, r20
    8fea:	35 07       	cpc	r19, r21
    8fec:	48 f0       	brcs	.+18     	; 0x9000 <malloc+0x120>
    8fee:	4e 0f       	add	r20, r30
    8ff0:	5f 1f       	adc	r21, r31
    8ff2:	50 93 6e 09 	sts	0x096E, r21	; 0x80096e <__brkval+0x1>
    8ff6:	40 93 6d 09 	sts	0x096D, r20	; 0x80096d <__brkval>
    8ffa:	81 93       	st	Z+, r24
    8ffc:	91 93       	st	Z+, r25
    8ffe:	02 c0       	rjmp	.+4      	; 0x9004 <malloc+0x124>
    9000:	e0 e0       	ldi	r30, 0x00	; 0
    9002:	f0 e0       	ldi	r31, 0x00	; 0
    9004:	cf 01       	movw	r24, r30
    9006:	df 91       	pop	r29
    9008:	cf 91       	pop	r28
    900a:	1f 91       	pop	r17
    900c:	0f 91       	pop	r16
    900e:	08 95       	ret

00009010 <free>:
    9010:	cf 93       	push	r28
    9012:	df 93       	push	r29
    9014:	00 97       	sbiw	r24, 0x00	; 0
    9016:	09 f4       	brne	.+2      	; 0x901a <free+0xa>
    9018:	81 c0       	rjmp	.+258    	; 0x911c <free+0x10c>
    901a:	fc 01       	movw	r30, r24
    901c:	32 97       	sbiw	r30, 0x02	; 2
    901e:	13 82       	std	Z+3, r1	; 0x03
    9020:	12 82       	std	Z+2, r1	; 0x02
    9022:	a0 91 6f 09 	lds	r26, 0x096F	; 0x80096f <__flp>
    9026:	b0 91 70 09 	lds	r27, 0x0970	; 0x800970 <__flp+0x1>
    902a:	10 97       	sbiw	r26, 0x00	; 0
    902c:	81 f4       	brne	.+32     	; 0x904e <free+0x3e>
    902e:	20 81       	ld	r18, Z
    9030:	31 81       	ldd	r19, Z+1	; 0x01
    9032:	82 0f       	add	r24, r18
    9034:	93 1f       	adc	r25, r19
    9036:	20 91 6d 09 	lds	r18, 0x096D	; 0x80096d <__brkval>
    903a:	30 91 6e 09 	lds	r19, 0x096E	; 0x80096e <__brkval+0x1>
    903e:	28 17       	cp	r18, r24
    9040:	39 07       	cpc	r19, r25
    9042:	51 f5       	brne	.+84     	; 0x9098 <free+0x88>
    9044:	f0 93 6e 09 	sts	0x096E, r31	; 0x80096e <__brkval+0x1>
    9048:	e0 93 6d 09 	sts	0x096D, r30	; 0x80096d <__brkval>
    904c:	67 c0       	rjmp	.+206    	; 0x911c <free+0x10c>
    904e:	ed 01       	movw	r28, r26
    9050:	20 e0       	ldi	r18, 0x00	; 0
    9052:	30 e0       	ldi	r19, 0x00	; 0
    9054:	ce 17       	cp	r28, r30
    9056:	df 07       	cpc	r29, r31
    9058:	40 f4       	brcc	.+16     	; 0x906a <free+0x5a>
    905a:	4a 81       	ldd	r20, Y+2	; 0x02
    905c:	5b 81       	ldd	r21, Y+3	; 0x03
    905e:	9e 01       	movw	r18, r28
    9060:	41 15       	cp	r20, r1
    9062:	51 05       	cpc	r21, r1
    9064:	f1 f0       	breq	.+60     	; 0x90a2 <free+0x92>
    9066:	ea 01       	movw	r28, r20
    9068:	f5 cf       	rjmp	.-22     	; 0x9054 <free+0x44>
    906a:	d3 83       	std	Z+3, r29	; 0x03
    906c:	c2 83       	std	Z+2, r28	; 0x02
    906e:	40 81       	ld	r20, Z
    9070:	51 81       	ldd	r21, Z+1	; 0x01
    9072:	84 0f       	add	r24, r20
    9074:	95 1f       	adc	r25, r21
    9076:	c8 17       	cp	r28, r24
    9078:	d9 07       	cpc	r29, r25
    907a:	59 f4       	brne	.+22     	; 0x9092 <free+0x82>
    907c:	88 81       	ld	r24, Y
    907e:	99 81       	ldd	r25, Y+1	; 0x01
    9080:	84 0f       	add	r24, r20
    9082:	95 1f       	adc	r25, r21
    9084:	02 96       	adiw	r24, 0x02	; 2
    9086:	91 83       	std	Z+1, r25	; 0x01
    9088:	80 83       	st	Z, r24
    908a:	8a 81       	ldd	r24, Y+2	; 0x02
    908c:	9b 81       	ldd	r25, Y+3	; 0x03
    908e:	93 83       	std	Z+3, r25	; 0x03
    9090:	82 83       	std	Z+2, r24	; 0x02
    9092:	21 15       	cp	r18, r1
    9094:	31 05       	cpc	r19, r1
    9096:	29 f4       	brne	.+10     	; 0x90a2 <free+0x92>
    9098:	f0 93 70 09 	sts	0x0970, r31	; 0x800970 <__flp+0x1>
    909c:	e0 93 6f 09 	sts	0x096F, r30	; 0x80096f <__flp>
    90a0:	3d c0       	rjmp	.+122    	; 0x911c <free+0x10c>
    90a2:	e9 01       	movw	r28, r18
    90a4:	fb 83       	std	Y+3, r31	; 0x03
    90a6:	ea 83       	std	Y+2, r30	; 0x02
    90a8:	49 91       	ld	r20, Y+
    90aa:	59 91       	ld	r21, Y+
    90ac:	c4 0f       	add	r28, r20
    90ae:	d5 1f       	adc	r29, r21
    90b0:	ec 17       	cp	r30, r28
    90b2:	fd 07       	cpc	r31, r29
    90b4:	61 f4       	brne	.+24     	; 0x90ce <free+0xbe>
    90b6:	80 81       	ld	r24, Z
    90b8:	91 81       	ldd	r25, Z+1	; 0x01
    90ba:	84 0f       	add	r24, r20
    90bc:	95 1f       	adc	r25, r21
    90be:	02 96       	adiw	r24, 0x02	; 2
    90c0:	e9 01       	movw	r28, r18
    90c2:	99 83       	std	Y+1, r25	; 0x01
    90c4:	88 83       	st	Y, r24
    90c6:	82 81       	ldd	r24, Z+2	; 0x02
    90c8:	93 81       	ldd	r25, Z+3	; 0x03
    90ca:	9b 83       	std	Y+3, r25	; 0x03
    90cc:	8a 83       	std	Y+2, r24	; 0x02
    90ce:	e0 e0       	ldi	r30, 0x00	; 0
    90d0:	f0 e0       	ldi	r31, 0x00	; 0
    90d2:	12 96       	adiw	r26, 0x02	; 2
    90d4:	8d 91       	ld	r24, X+
    90d6:	9c 91       	ld	r25, X
    90d8:	13 97       	sbiw	r26, 0x03	; 3
    90da:	00 97       	sbiw	r24, 0x00	; 0
    90dc:	19 f0       	breq	.+6      	; 0x90e4 <free+0xd4>
    90de:	fd 01       	movw	r30, r26
    90e0:	dc 01       	movw	r26, r24
    90e2:	f7 cf       	rjmp	.-18     	; 0x90d2 <free+0xc2>
    90e4:	8d 91       	ld	r24, X+
    90e6:	9c 91       	ld	r25, X
    90e8:	11 97       	sbiw	r26, 0x01	; 1
    90ea:	9d 01       	movw	r18, r26
    90ec:	2e 5f       	subi	r18, 0xFE	; 254
    90ee:	3f 4f       	sbci	r19, 0xFF	; 255
    90f0:	82 0f       	add	r24, r18
    90f2:	93 1f       	adc	r25, r19
    90f4:	20 91 6d 09 	lds	r18, 0x096D	; 0x80096d <__brkval>
    90f8:	30 91 6e 09 	lds	r19, 0x096E	; 0x80096e <__brkval+0x1>
    90fc:	28 17       	cp	r18, r24
    90fe:	39 07       	cpc	r19, r25
    9100:	69 f4       	brne	.+26     	; 0x911c <free+0x10c>
    9102:	30 97       	sbiw	r30, 0x00	; 0
    9104:	29 f4       	brne	.+10     	; 0x9110 <free+0x100>
    9106:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <__flp+0x1>
    910a:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <__flp>
    910e:	02 c0       	rjmp	.+4      	; 0x9114 <free+0x104>
    9110:	13 82       	std	Z+3, r1	; 0x03
    9112:	12 82       	std	Z+2, r1	; 0x02
    9114:	b0 93 6e 09 	sts	0x096E, r27	; 0x80096e <__brkval+0x1>
    9118:	a0 93 6d 09 	sts	0x096D, r26	; 0x80096d <__brkval>
    911c:	df 91       	pop	r29
    911e:	cf 91       	pop	r28
    9120:	08 95       	ret

00009122 <realloc>:
    9122:	6f 92       	push	r6
    9124:	7f 92       	push	r7
    9126:	8f 92       	push	r8
    9128:	9f 92       	push	r9
    912a:	af 92       	push	r10
    912c:	bf 92       	push	r11
    912e:	cf 92       	push	r12
    9130:	df 92       	push	r13
    9132:	ef 92       	push	r14
    9134:	ff 92       	push	r15
    9136:	0f 93       	push	r16
    9138:	1f 93       	push	r17
    913a:	cf 93       	push	r28
    913c:	df 93       	push	r29
    913e:	00 97       	sbiw	r24, 0x00	; 0
    9140:	81 f4       	brne	.+32     	; 0x9162 <realloc+0x40>
    9142:	cb 01       	movw	r24, r22
    9144:	df 91       	pop	r29
    9146:	cf 91       	pop	r28
    9148:	1f 91       	pop	r17
    914a:	0f 91       	pop	r16
    914c:	ff 90       	pop	r15
    914e:	ef 90       	pop	r14
    9150:	df 90       	pop	r13
    9152:	cf 90       	pop	r12
    9154:	bf 90       	pop	r11
    9156:	af 90       	pop	r10
    9158:	9f 90       	pop	r9
    915a:	8f 90       	pop	r8
    915c:	7f 90       	pop	r7
    915e:	6f 90       	pop	r6
    9160:	bf ce       	rjmp	.-642    	; 0x8ee0 <malloc>
    9162:	fc 01       	movw	r30, r24
    9164:	e6 0f       	add	r30, r22
    9166:	f7 1f       	adc	r31, r23
    9168:	9c 01       	movw	r18, r24
    916a:	22 50       	subi	r18, 0x02	; 2
    916c:	31 09       	sbc	r19, r1
    916e:	e2 17       	cp	r30, r18
    9170:	f3 07       	cpc	r31, r19
    9172:	08 f4       	brcc	.+2      	; 0x9176 <realloc+0x54>
    9174:	a5 c0       	rjmp	.+330    	; 0x92c0 <realloc+0x19e>
    9176:	ec 01       	movw	r28, r24
    9178:	d9 01       	movw	r26, r18
    917a:	0d 91       	ld	r16, X+
    917c:	1c 91       	ld	r17, X
    917e:	11 97       	sbiw	r26, 0x01	; 1
    9180:	06 17       	cp	r16, r22
    9182:	17 07       	cpc	r17, r23
    9184:	a8 f0       	brcs	.+42     	; 0x91b0 <realloc+0x8e>
    9186:	05 30       	cpi	r16, 0x05	; 5
    9188:	11 05       	cpc	r17, r1
    918a:	08 f4       	brcc	.+2      	; 0x918e <realloc+0x6c>
    918c:	97 c0       	rjmp	.+302    	; 0x92bc <realloc+0x19a>
    918e:	c8 01       	movw	r24, r16
    9190:	04 97       	sbiw	r24, 0x04	; 4
    9192:	86 17       	cp	r24, r22
    9194:	97 07       	cpc	r25, r23
    9196:	08 f4       	brcc	.+2      	; 0x919a <realloc+0x78>
    9198:	91 c0       	rjmp	.+290    	; 0x92bc <realloc+0x19a>
    919a:	02 50       	subi	r16, 0x02	; 2
    919c:	11 09       	sbc	r17, r1
    919e:	06 1b       	sub	r16, r22
    91a0:	17 0b       	sbc	r17, r23
    91a2:	01 93       	st	Z+, r16
    91a4:	11 93       	st	Z+, r17
    91a6:	6d 93       	st	X+, r22
    91a8:	7c 93       	st	X, r23
    91aa:	cf 01       	movw	r24, r30
    91ac:	31 df       	rcall	.-414    	; 0x9010 <free>
    91ae:	86 c0       	rjmp	.+268    	; 0x92bc <realloc+0x19a>
    91b0:	5b 01       	movw	r10, r22
    91b2:	a0 1a       	sub	r10, r16
    91b4:	b1 0a       	sbc	r11, r17
    91b6:	4c 01       	movw	r8, r24
    91b8:	80 0e       	add	r8, r16
    91ba:	91 1e       	adc	r9, r17
    91bc:	a0 91 6f 09 	lds	r26, 0x096F	; 0x80096f <__flp>
    91c0:	b0 91 70 09 	lds	r27, 0x0970	; 0x800970 <__flp+0x1>
    91c4:	61 2c       	mov	r6, r1
    91c6:	71 2c       	mov	r7, r1
    91c8:	e1 2c       	mov	r14, r1
    91ca:	f1 2c       	mov	r15, r1
    91cc:	10 97       	sbiw	r26, 0x00	; 0
    91ce:	09 f4       	brne	.+2      	; 0x91d2 <realloc+0xb0>
    91d0:	46 c0       	rjmp	.+140    	; 0x925e <realloc+0x13c>
    91d2:	8d 91       	ld	r24, X+
    91d4:	9c 91       	ld	r25, X
    91d6:	11 97       	sbiw	r26, 0x01	; 1
    91d8:	a8 15       	cp	r26, r8
    91da:	b9 05       	cpc	r27, r9
    91dc:	b1 f5       	brne	.+108    	; 0x924a <realloc+0x128>
    91de:	6c 01       	movw	r12, r24
    91e0:	42 e0       	ldi	r20, 0x02	; 2
    91e2:	c4 0e       	add	r12, r20
    91e4:	d1 1c       	adc	r13, r1
    91e6:	ca 14       	cp	r12, r10
    91e8:	db 04       	cpc	r13, r11
    91ea:	78 f1       	brcs	.+94     	; 0x924a <realloc+0x128>
    91ec:	4c 01       	movw	r8, r24
    91ee:	8a 18       	sub	r8, r10
    91f0:	9b 08       	sbc	r9, r11
    91f2:	64 01       	movw	r12, r8
    91f4:	42 e0       	ldi	r20, 0x02	; 2
    91f6:	c4 0e       	add	r12, r20
    91f8:	d1 1c       	adc	r13, r1
    91fa:	12 96       	adiw	r26, 0x02	; 2
    91fc:	bc 90       	ld	r11, X
    91fe:	12 97       	sbiw	r26, 0x02	; 2
    9200:	13 96       	adiw	r26, 0x03	; 3
    9202:	ac 91       	ld	r26, X
    9204:	b5 e0       	ldi	r27, 0x05	; 5
    9206:	cb 16       	cp	r12, r27
    9208:	d1 04       	cpc	r13, r1
    920a:	40 f0       	brcs	.+16     	; 0x921c <realloc+0xfa>
    920c:	b2 82       	std	Z+2, r11	; 0x02
    920e:	a3 83       	std	Z+3, r26	; 0x03
    9210:	91 82       	std	Z+1, r9	; 0x01
    9212:	80 82       	st	Z, r8
    9214:	d9 01       	movw	r26, r18
    9216:	6d 93       	st	X+, r22
    9218:	7c 93       	st	X, r23
    921a:	09 c0       	rjmp	.+18     	; 0x922e <realloc+0x10c>
    921c:	0e 5f       	subi	r16, 0xFE	; 254
    921e:	1f 4f       	sbci	r17, 0xFF	; 255
    9220:	80 0f       	add	r24, r16
    9222:	91 1f       	adc	r25, r17
    9224:	f9 01       	movw	r30, r18
    9226:	91 83       	std	Z+1, r25	; 0x01
    9228:	80 83       	st	Z, r24
    922a:	eb 2d       	mov	r30, r11
    922c:	fa 2f       	mov	r31, r26
    922e:	e1 14       	cp	r14, r1
    9230:	f1 04       	cpc	r15, r1
    9232:	31 f0       	breq	.+12     	; 0x9240 <realloc+0x11e>
    9234:	d7 01       	movw	r26, r14
    9236:	13 96       	adiw	r26, 0x03	; 3
    9238:	fc 93       	st	X, r31
    923a:	ee 93       	st	-X, r30
    923c:	12 97       	sbiw	r26, 0x02	; 2
    923e:	3e c0       	rjmp	.+124    	; 0x92bc <realloc+0x19a>
    9240:	f0 93 70 09 	sts	0x0970, r31	; 0x800970 <__flp+0x1>
    9244:	e0 93 6f 09 	sts	0x096F, r30	; 0x80096f <__flp>
    9248:	39 c0       	rjmp	.+114    	; 0x92bc <realloc+0x19a>
    924a:	68 16       	cp	r6, r24
    924c:	79 06       	cpc	r7, r25
    924e:	08 f4       	brcc	.+2      	; 0x9252 <realloc+0x130>
    9250:	3c 01       	movw	r6, r24
    9252:	7d 01       	movw	r14, r26
    9254:	12 96       	adiw	r26, 0x02	; 2
    9256:	0d 90       	ld	r0, X+
    9258:	bc 91       	ld	r27, X
    925a:	a0 2d       	mov	r26, r0
    925c:	b7 cf       	rjmp	.-146    	; 0x91cc <realloc+0xaa>
    925e:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <__brkval>
    9262:	90 91 6e 09 	lds	r25, 0x096E	; 0x80096e <__brkval+0x1>
    9266:	88 16       	cp	r8, r24
    9268:	99 06       	cpc	r9, r25
    926a:	e1 f4       	brne	.+56     	; 0x92a4 <realloc+0x182>
    926c:	66 16       	cp	r6, r22
    926e:	77 06       	cpc	r7, r23
    9270:	c8 f4       	brcc	.+50     	; 0x92a4 <realloc+0x182>
    9272:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
    9276:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__data_start+0x1>
    927a:	00 97       	sbiw	r24, 0x00	; 0
    927c:	41 f4       	brne	.+16     	; 0x928e <realloc+0x16c>
    927e:	8d b7       	in	r24, 0x3d	; 61
    9280:	9e b7       	in	r25, 0x3e	; 62
    9282:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    9286:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    928a:	84 1b       	sub	r24, r20
    928c:	95 0b       	sbc	r25, r21
    928e:	e8 17       	cp	r30, r24
    9290:	f9 07       	cpc	r31, r25
    9292:	b0 f4       	brcc	.+44     	; 0x92c0 <realloc+0x19e>
    9294:	f0 93 6e 09 	sts	0x096E, r31	; 0x80096e <__brkval+0x1>
    9298:	e0 93 6d 09 	sts	0x096D, r30	; 0x80096d <__brkval>
    929c:	f9 01       	movw	r30, r18
    929e:	71 83       	std	Z+1, r23	; 0x01
    92a0:	60 83       	st	Z, r22
    92a2:	0c c0       	rjmp	.+24     	; 0x92bc <realloc+0x19a>
    92a4:	cb 01       	movw	r24, r22
    92a6:	1c de       	rcall	.-968    	; 0x8ee0 <malloc>
    92a8:	7c 01       	movw	r14, r24
    92aa:	00 97       	sbiw	r24, 0x00	; 0
    92ac:	49 f0       	breq	.+18     	; 0x92c0 <realloc+0x19e>
    92ae:	a8 01       	movw	r20, r16
    92b0:	be 01       	movw	r22, r28
    92b2:	17 d0       	rcall	.+46     	; 0x92e2 <memcpy>
    92b4:	ce 01       	movw	r24, r28
    92b6:	ac de       	rcall	.-680    	; 0x9010 <free>
    92b8:	c7 01       	movw	r24, r14
    92ba:	04 c0       	rjmp	.+8      	; 0x92c4 <realloc+0x1a2>
    92bc:	ce 01       	movw	r24, r28
    92be:	02 c0       	rjmp	.+4      	; 0x92c4 <realloc+0x1a2>
    92c0:	80 e0       	ldi	r24, 0x00	; 0
    92c2:	90 e0       	ldi	r25, 0x00	; 0
    92c4:	df 91       	pop	r29
    92c6:	cf 91       	pop	r28
    92c8:	1f 91       	pop	r17
    92ca:	0f 91       	pop	r16
    92cc:	ff 90       	pop	r15
    92ce:	ef 90       	pop	r14
    92d0:	df 90       	pop	r13
    92d2:	cf 90       	pop	r12
    92d4:	bf 90       	pop	r11
    92d6:	af 90       	pop	r10
    92d8:	9f 90       	pop	r9
    92da:	8f 90       	pop	r8
    92dc:	7f 90       	pop	r7
    92de:	6f 90       	pop	r6
    92e0:	08 95       	ret

000092e2 <memcpy>:
    92e2:	fb 01       	movw	r30, r22
    92e4:	dc 01       	movw	r26, r24
    92e6:	02 c0       	rjmp	.+4      	; 0x92ec <memcpy+0xa>
    92e8:	01 90       	ld	r0, Z+
    92ea:	0d 92       	st	X+, r0
    92ec:	41 50       	subi	r20, 0x01	; 1
    92ee:	50 40       	sbci	r21, 0x00	; 0
    92f0:	d8 f7       	brcc	.-10     	; 0x92e8 <memcpy+0x6>
    92f2:	08 95       	ret

000092f4 <strcpy>:
    92f4:	fb 01       	movw	r30, r22
    92f6:	dc 01       	movw	r26, r24
    92f8:	01 90       	ld	r0, Z+
    92fa:	0d 92       	st	X+, r0
    92fc:	00 20       	and	r0, r0
    92fe:	e1 f7       	brne	.-8      	; 0x92f8 <strcpy+0x4>
    9300:	08 95       	ret

00009302 <strncpy>:
    9302:	fb 01       	movw	r30, r22
    9304:	dc 01       	movw	r26, r24
    9306:	41 50       	subi	r20, 0x01	; 1
    9308:	50 40       	sbci	r21, 0x00	; 0
    930a:	48 f0       	brcs	.+18     	; 0x931e <strncpy+0x1c>
    930c:	01 90       	ld	r0, Z+
    930e:	0d 92       	st	X+, r0
    9310:	00 20       	and	r0, r0
    9312:	c9 f7       	brne	.-14     	; 0x9306 <strncpy+0x4>
    9314:	01 c0       	rjmp	.+2      	; 0x9318 <strncpy+0x16>
    9316:	1d 92       	st	X+, r1
    9318:	41 50       	subi	r20, 0x01	; 1
    931a:	50 40       	sbci	r21, 0x00	; 0
    931c:	e0 f7       	brcc	.-8      	; 0x9316 <strncpy+0x14>
    931e:	08 95       	ret

00009320 <dtoa_prf>:
    9320:	8f 92       	push	r8
    9322:	9f 92       	push	r9
    9324:	af 92       	push	r10
    9326:	bf 92       	push	r11
    9328:	cf 92       	push	r12
    932a:	df 92       	push	r13
    932c:	ef 92       	push	r14
    932e:	ff 92       	push	r15
    9330:	0f 93       	push	r16
    9332:	1f 93       	push	r17
    9334:	cf 93       	push	r28
    9336:	df 93       	push	r29
    9338:	cd b7       	in	r28, 0x3d	; 61
    933a:	de b7       	in	r29, 0x3e	; 62
    933c:	29 97       	sbiw	r28, 0x09	; 9
    933e:	0f b6       	in	r0, 0x3f	; 63
    9340:	f8 94       	cli
    9342:	de bf       	out	0x3e, r29	; 62
    9344:	0f be       	out	0x3f, r0	; 63
    9346:	cd bf       	out	0x3d, r28	; 61
    9348:	6a 01       	movw	r12, r20
    934a:	12 2f       	mov	r17, r18
    934c:	b0 2e       	mov	r11, r16
    934e:	2b e3       	ldi	r18, 0x3B	; 59
    9350:	20 17       	cp	r18, r16
    9352:	20 f0       	brcs	.+8      	; 0x935c <dtoa_prf+0x3c>
    9354:	ff 24       	eor	r15, r15
    9356:	f3 94       	inc	r15
    9358:	f0 0e       	add	r15, r16
    935a:	02 c0       	rjmp	.+4      	; 0x9360 <dtoa_prf+0x40>
    935c:	2c e3       	ldi	r18, 0x3C	; 60
    935e:	f2 2e       	mov	r15, r18
    9360:	0f 2d       	mov	r16, r15
    9362:	27 e0       	ldi	r18, 0x07	; 7
    9364:	ae 01       	movw	r20, r28
    9366:	4f 5f       	subi	r20, 0xFF	; 255
    9368:	5f 4f       	sbci	r21, 0xFF	; 255
    936a:	50 d1       	rcall	.+672    	; 0x960c <__ftoa_engine>
    936c:	bc 01       	movw	r22, r24
    936e:	49 81       	ldd	r20, Y+1	; 0x01
    9370:	84 2f       	mov	r24, r20
    9372:	89 70       	andi	r24, 0x09	; 9
    9374:	81 30       	cpi	r24, 0x01	; 1
    9376:	31 f0       	breq	.+12     	; 0x9384 <dtoa_prf+0x64>
    9378:	e1 fc       	sbrc	r14, 1
    937a:	06 c0       	rjmp	.+12     	; 0x9388 <dtoa_prf+0x68>
    937c:	e0 fe       	sbrs	r14, 0
    937e:	06 c0       	rjmp	.+12     	; 0x938c <dtoa_prf+0x6c>
    9380:	90 e2       	ldi	r25, 0x20	; 32
    9382:	05 c0       	rjmp	.+10     	; 0x938e <dtoa_prf+0x6e>
    9384:	9d e2       	ldi	r25, 0x2D	; 45
    9386:	03 c0       	rjmp	.+6      	; 0x938e <dtoa_prf+0x6e>
    9388:	9b e2       	ldi	r25, 0x2B	; 43
    938a:	01 c0       	rjmp	.+2      	; 0x938e <dtoa_prf+0x6e>
    938c:	90 e0       	ldi	r25, 0x00	; 0
    938e:	5e 2d       	mov	r21, r14
    9390:	50 71       	andi	r21, 0x10	; 16
    9392:	43 ff       	sbrs	r20, 3
    9394:	3c c0       	rjmp	.+120    	; 0x940e <dtoa_prf+0xee>
    9396:	91 11       	cpse	r25, r1
    9398:	02 c0       	rjmp	.+4      	; 0x939e <dtoa_prf+0x7e>
    939a:	83 e0       	ldi	r24, 0x03	; 3
    939c:	01 c0       	rjmp	.+2      	; 0x93a0 <dtoa_prf+0x80>
    939e:	84 e0       	ldi	r24, 0x04	; 4
    93a0:	81 17       	cp	r24, r17
    93a2:	18 f4       	brcc	.+6      	; 0x93aa <dtoa_prf+0x8a>
    93a4:	21 2f       	mov	r18, r17
    93a6:	28 1b       	sub	r18, r24
    93a8:	01 c0       	rjmp	.+2      	; 0x93ac <dtoa_prf+0x8c>
    93aa:	20 e0       	ldi	r18, 0x00	; 0
    93ac:	51 11       	cpse	r21, r1
    93ae:	0b c0       	rjmp	.+22     	; 0x93c6 <dtoa_prf+0xa6>
    93b0:	f6 01       	movw	r30, r12
    93b2:	82 2f       	mov	r24, r18
    93b4:	30 e2       	ldi	r19, 0x20	; 32
    93b6:	88 23       	and	r24, r24
    93b8:	19 f0       	breq	.+6      	; 0x93c0 <dtoa_prf+0xa0>
    93ba:	31 93       	st	Z+, r19
    93bc:	81 50       	subi	r24, 0x01	; 1
    93be:	fb cf       	rjmp	.-10     	; 0x93b6 <dtoa_prf+0x96>
    93c0:	c2 0e       	add	r12, r18
    93c2:	d1 1c       	adc	r13, r1
    93c4:	20 e0       	ldi	r18, 0x00	; 0
    93c6:	99 23       	and	r25, r25
    93c8:	29 f0       	breq	.+10     	; 0x93d4 <dtoa_prf+0xb4>
    93ca:	d6 01       	movw	r26, r12
    93cc:	9c 93       	st	X, r25
    93ce:	f6 01       	movw	r30, r12
    93d0:	31 96       	adiw	r30, 0x01	; 1
    93d2:	6f 01       	movw	r12, r30
    93d4:	c6 01       	movw	r24, r12
    93d6:	03 96       	adiw	r24, 0x03	; 3
    93d8:	e2 fe       	sbrs	r14, 2
    93da:	0a c0       	rjmp	.+20     	; 0x93f0 <dtoa_prf+0xd0>
    93dc:	3e e4       	ldi	r19, 0x4E	; 78
    93de:	d6 01       	movw	r26, r12
    93e0:	3c 93       	st	X, r19
    93e2:	41 e4       	ldi	r20, 0x41	; 65
    93e4:	11 96       	adiw	r26, 0x01	; 1
    93e6:	4c 93       	st	X, r20
    93e8:	11 97       	sbiw	r26, 0x01	; 1
    93ea:	12 96       	adiw	r26, 0x02	; 2
    93ec:	3c 93       	st	X, r19
    93ee:	06 c0       	rjmp	.+12     	; 0x93fc <dtoa_prf+0xdc>
    93f0:	3e e6       	ldi	r19, 0x6E	; 110
    93f2:	f6 01       	movw	r30, r12
    93f4:	30 83       	st	Z, r19
    93f6:	41 e6       	ldi	r20, 0x61	; 97
    93f8:	41 83       	std	Z+1, r20	; 0x01
    93fa:	32 83       	std	Z+2, r19	; 0x02
    93fc:	fc 01       	movw	r30, r24
    93fe:	32 2f       	mov	r19, r18
    9400:	40 e2       	ldi	r20, 0x20	; 32
    9402:	33 23       	and	r19, r19
    9404:	09 f4       	brne	.+2      	; 0x9408 <dtoa_prf+0xe8>
    9406:	42 c0       	rjmp	.+132    	; 0x948c <dtoa_prf+0x16c>
    9408:	41 93       	st	Z+, r20
    940a:	31 50       	subi	r19, 0x01	; 1
    940c:	fa cf       	rjmp	.-12     	; 0x9402 <dtoa_prf+0xe2>
    940e:	42 ff       	sbrs	r20, 2
    9410:	44 c0       	rjmp	.+136    	; 0x949a <dtoa_prf+0x17a>
    9412:	91 11       	cpse	r25, r1
    9414:	02 c0       	rjmp	.+4      	; 0x941a <dtoa_prf+0xfa>
    9416:	83 e0       	ldi	r24, 0x03	; 3
    9418:	01 c0       	rjmp	.+2      	; 0x941c <dtoa_prf+0xfc>
    941a:	84 e0       	ldi	r24, 0x04	; 4
    941c:	81 17       	cp	r24, r17
    941e:	18 f4       	brcc	.+6      	; 0x9426 <dtoa_prf+0x106>
    9420:	21 2f       	mov	r18, r17
    9422:	28 1b       	sub	r18, r24
    9424:	01 c0       	rjmp	.+2      	; 0x9428 <dtoa_prf+0x108>
    9426:	20 e0       	ldi	r18, 0x00	; 0
    9428:	51 11       	cpse	r21, r1
    942a:	0b c0       	rjmp	.+22     	; 0x9442 <dtoa_prf+0x122>
    942c:	f6 01       	movw	r30, r12
    942e:	82 2f       	mov	r24, r18
    9430:	30 e2       	ldi	r19, 0x20	; 32
    9432:	88 23       	and	r24, r24
    9434:	19 f0       	breq	.+6      	; 0x943c <dtoa_prf+0x11c>
    9436:	31 93       	st	Z+, r19
    9438:	81 50       	subi	r24, 0x01	; 1
    943a:	fb cf       	rjmp	.-10     	; 0x9432 <dtoa_prf+0x112>
    943c:	c2 0e       	add	r12, r18
    943e:	d1 1c       	adc	r13, r1
    9440:	20 e0       	ldi	r18, 0x00	; 0
    9442:	99 23       	and	r25, r25
    9444:	29 f0       	breq	.+10     	; 0x9450 <dtoa_prf+0x130>
    9446:	d6 01       	movw	r26, r12
    9448:	9c 93       	st	X, r25
    944a:	f6 01       	movw	r30, r12
    944c:	31 96       	adiw	r30, 0x01	; 1
    944e:	6f 01       	movw	r12, r30
    9450:	c6 01       	movw	r24, r12
    9452:	03 96       	adiw	r24, 0x03	; 3
    9454:	e2 fe       	sbrs	r14, 2
    9456:	0b c0       	rjmp	.+22     	; 0x946e <dtoa_prf+0x14e>
    9458:	39 e4       	ldi	r19, 0x49	; 73
    945a:	d6 01       	movw	r26, r12
    945c:	3c 93       	st	X, r19
    945e:	3e e4       	ldi	r19, 0x4E	; 78
    9460:	11 96       	adiw	r26, 0x01	; 1
    9462:	3c 93       	st	X, r19
    9464:	11 97       	sbiw	r26, 0x01	; 1
    9466:	36 e4       	ldi	r19, 0x46	; 70
    9468:	12 96       	adiw	r26, 0x02	; 2
    946a:	3c 93       	st	X, r19
    946c:	07 c0       	rjmp	.+14     	; 0x947c <dtoa_prf+0x15c>
    946e:	39 e6       	ldi	r19, 0x69	; 105
    9470:	f6 01       	movw	r30, r12
    9472:	30 83       	st	Z, r19
    9474:	3e e6       	ldi	r19, 0x6E	; 110
    9476:	31 83       	std	Z+1, r19	; 0x01
    9478:	36 e6       	ldi	r19, 0x66	; 102
    947a:	32 83       	std	Z+2, r19	; 0x02
    947c:	fc 01       	movw	r30, r24
    947e:	32 2f       	mov	r19, r18
    9480:	40 e2       	ldi	r20, 0x20	; 32
    9482:	33 23       	and	r19, r19
    9484:	19 f0       	breq	.+6      	; 0x948c <dtoa_prf+0x16c>
    9486:	41 93       	st	Z+, r20
    9488:	31 50       	subi	r19, 0x01	; 1
    948a:	fb cf       	rjmp	.-10     	; 0x9482 <dtoa_prf+0x162>
    948c:	fc 01       	movw	r30, r24
    948e:	e2 0f       	add	r30, r18
    9490:	f1 1d       	adc	r31, r1
    9492:	10 82       	st	Z, r1
    9494:	8e ef       	ldi	r24, 0xFE	; 254
    9496:	9f ef       	ldi	r25, 0xFF	; 255
    9498:	a6 c0       	rjmp	.+332    	; 0x95e6 <dtoa_prf+0x2c6>
    949a:	21 e0       	ldi	r18, 0x01	; 1
    949c:	30 e0       	ldi	r19, 0x00	; 0
    949e:	91 11       	cpse	r25, r1
    94a0:	02 c0       	rjmp	.+4      	; 0x94a6 <dtoa_prf+0x186>
    94a2:	20 e0       	ldi	r18, 0x00	; 0
    94a4:	30 e0       	ldi	r19, 0x00	; 0
    94a6:	16 16       	cp	r1, r22
    94a8:	17 06       	cpc	r1, r23
    94aa:	1c f4       	brge	.+6      	; 0x94b2 <dtoa_prf+0x192>
    94ac:	fb 01       	movw	r30, r22
    94ae:	31 96       	adiw	r30, 0x01	; 1
    94b0:	02 c0       	rjmp	.+4      	; 0x94b6 <dtoa_prf+0x196>
    94b2:	e1 e0       	ldi	r30, 0x01	; 1
    94b4:	f0 e0       	ldi	r31, 0x00	; 0
    94b6:	2e 0f       	add	r18, r30
    94b8:	3f 1f       	adc	r19, r31
    94ba:	bb 20       	and	r11, r11
    94bc:	21 f0       	breq	.+8      	; 0x94c6 <dtoa_prf+0x1a6>
    94be:	eb 2d       	mov	r30, r11
    94c0:	f0 e0       	ldi	r31, 0x00	; 0
    94c2:	31 96       	adiw	r30, 0x01	; 1
    94c4:	02 c0       	rjmp	.+4      	; 0x94ca <dtoa_prf+0x1aa>
    94c6:	e0 e0       	ldi	r30, 0x00	; 0
    94c8:	f0 e0       	ldi	r31, 0x00	; 0
    94ca:	2e 0f       	add	r18, r30
    94cc:	3f 1f       	adc	r19, r31
    94ce:	e1 2f       	mov	r30, r17
    94d0:	f0 e0       	ldi	r31, 0x00	; 0
    94d2:	2e 17       	cp	r18, r30
    94d4:	3f 07       	cpc	r19, r31
    94d6:	1c f4       	brge	.+6      	; 0x94de <dtoa_prf+0x1be>
    94d8:	12 1b       	sub	r17, r18
    94da:	21 2f       	mov	r18, r17
    94dc:	01 c0       	rjmp	.+2      	; 0x94e0 <dtoa_prf+0x1c0>
    94de:	20 e0       	ldi	r18, 0x00	; 0
    94e0:	8e 2d       	mov	r24, r14
    94e2:	88 71       	andi	r24, 0x18	; 24
    94e4:	59 f4       	brne	.+22     	; 0x94fc <dtoa_prf+0x1dc>
    94e6:	f6 01       	movw	r30, r12
    94e8:	82 2f       	mov	r24, r18
    94ea:	30 e2       	ldi	r19, 0x20	; 32
    94ec:	88 23       	and	r24, r24
    94ee:	19 f0       	breq	.+6      	; 0x94f6 <dtoa_prf+0x1d6>
    94f0:	31 93       	st	Z+, r19
    94f2:	81 50       	subi	r24, 0x01	; 1
    94f4:	fb cf       	rjmp	.-10     	; 0x94ec <dtoa_prf+0x1cc>
    94f6:	c2 0e       	add	r12, r18
    94f8:	d1 1c       	adc	r13, r1
    94fa:	20 e0       	ldi	r18, 0x00	; 0
    94fc:	99 23       	and	r25, r25
    94fe:	29 f0       	breq	.+10     	; 0x950a <dtoa_prf+0x1ea>
    9500:	d6 01       	movw	r26, r12
    9502:	9c 93       	st	X, r25
    9504:	f6 01       	movw	r30, r12
    9506:	31 96       	adiw	r30, 0x01	; 1
    9508:	6f 01       	movw	r12, r30
    950a:	51 11       	cpse	r21, r1
    950c:	0b c0       	rjmp	.+22     	; 0x9524 <dtoa_prf+0x204>
    950e:	f6 01       	movw	r30, r12
    9510:	82 2f       	mov	r24, r18
    9512:	90 e3       	ldi	r25, 0x30	; 48
    9514:	88 23       	and	r24, r24
    9516:	19 f0       	breq	.+6      	; 0x951e <dtoa_prf+0x1fe>
    9518:	91 93       	st	Z+, r25
    951a:	81 50       	subi	r24, 0x01	; 1
    951c:	fb cf       	rjmp	.-10     	; 0x9514 <dtoa_prf+0x1f4>
    951e:	c2 0e       	add	r12, r18
    9520:	d1 1c       	adc	r13, r1
    9522:	20 e0       	ldi	r18, 0x00	; 0
    9524:	0f 2d       	mov	r16, r15
    9526:	06 0f       	add	r16, r22
    9528:	9a 81       	ldd	r25, Y+2	; 0x02
    952a:	34 2f       	mov	r19, r20
    952c:	30 71       	andi	r19, 0x10	; 16
    952e:	44 ff       	sbrs	r20, 4
    9530:	03 c0       	rjmp	.+6      	; 0x9538 <dtoa_prf+0x218>
    9532:	91 33       	cpi	r25, 0x31	; 49
    9534:	09 f4       	brne	.+2      	; 0x9538 <dtoa_prf+0x218>
    9536:	01 50       	subi	r16, 0x01	; 1
    9538:	10 16       	cp	r1, r16
    953a:	24 f4       	brge	.+8      	; 0x9544 <dtoa_prf+0x224>
    953c:	09 30       	cpi	r16, 0x09	; 9
    953e:	18 f0       	brcs	.+6      	; 0x9546 <dtoa_prf+0x226>
    9540:	08 e0       	ldi	r16, 0x08	; 8
    9542:	01 c0       	rjmp	.+2      	; 0x9546 <dtoa_prf+0x226>
    9544:	01 e0       	ldi	r16, 0x01	; 1
    9546:	ab 01       	movw	r20, r22
    9548:	77 ff       	sbrs	r23, 7
    954a:	02 c0       	rjmp	.+4      	; 0x9550 <dtoa_prf+0x230>
    954c:	40 e0       	ldi	r20, 0x00	; 0
    954e:	50 e0       	ldi	r21, 0x00	; 0
    9550:	fb 01       	movw	r30, r22
    9552:	e4 1b       	sub	r30, r20
    9554:	f5 0b       	sbc	r31, r21
    9556:	a1 e0       	ldi	r26, 0x01	; 1
    9558:	b0 e0       	ldi	r27, 0x00	; 0
    955a:	ac 0f       	add	r26, r28
    955c:	bd 1f       	adc	r27, r29
    955e:	ea 0f       	add	r30, r26
    9560:	fb 1f       	adc	r31, r27
    9562:	8e e2       	ldi	r24, 0x2E	; 46
    9564:	a8 2e       	mov	r10, r24
    9566:	4b 01       	movw	r8, r22
    9568:	80 1a       	sub	r8, r16
    956a:	91 08       	sbc	r9, r1
    956c:	0b 2d       	mov	r16, r11
    956e:	10 e0       	ldi	r17, 0x00	; 0
    9570:	11 95       	neg	r17
    9572:	01 95       	neg	r16
    9574:	11 09       	sbc	r17, r1
    9576:	4f 3f       	cpi	r20, 0xFF	; 255
    9578:	bf ef       	ldi	r27, 0xFF	; 255
    957a:	5b 07       	cpc	r21, r27
    957c:	21 f4       	brne	.+8      	; 0x9586 <dtoa_prf+0x266>
    957e:	d6 01       	movw	r26, r12
    9580:	ac 92       	st	X, r10
    9582:	11 96       	adiw	r26, 0x01	; 1
    9584:	6d 01       	movw	r12, r26
    9586:	64 17       	cp	r22, r20
    9588:	75 07       	cpc	r23, r21
    958a:	2c f0       	brlt	.+10     	; 0x9596 <dtoa_prf+0x276>
    958c:	84 16       	cp	r8, r20
    958e:	95 06       	cpc	r9, r21
    9590:	14 f4       	brge	.+4      	; 0x9596 <dtoa_prf+0x276>
    9592:	81 81       	ldd	r24, Z+1	; 0x01
    9594:	01 c0       	rjmp	.+2      	; 0x9598 <dtoa_prf+0x278>
    9596:	80 e3       	ldi	r24, 0x30	; 48
    9598:	41 50       	subi	r20, 0x01	; 1
    959a:	51 09       	sbc	r21, r1
    959c:	31 96       	adiw	r30, 0x01	; 1
    959e:	d6 01       	movw	r26, r12
    95a0:	11 96       	adiw	r26, 0x01	; 1
    95a2:	7d 01       	movw	r14, r26
    95a4:	40 17       	cp	r20, r16
    95a6:	51 07       	cpc	r21, r17
    95a8:	24 f0       	brlt	.+8      	; 0x95b2 <dtoa_prf+0x292>
    95aa:	d6 01       	movw	r26, r12
    95ac:	8c 93       	st	X, r24
    95ae:	67 01       	movw	r12, r14
    95b0:	e2 cf       	rjmp	.-60     	; 0x9576 <dtoa_prf+0x256>
    95b2:	64 17       	cp	r22, r20
    95b4:	75 07       	cpc	r23, r21
    95b6:	39 f4       	brne	.+14     	; 0x95c6 <dtoa_prf+0x2a6>
    95b8:	96 33       	cpi	r25, 0x36	; 54
    95ba:	20 f4       	brcc	.+8      	; 0x95c4 <dtoa_prf+0x2a4>
    95bc:	95 33       	cpi	r25, 0x35	; 53
    95be:	19 f4       	brne	.+6      	; 0x95c6 <dtoa_prf+0x2a6>
    95c0:	31 11       	cpse	r19, r1
    95c2:	01 c0       	rjmp	.+2      	; 0x95c6 <dtoa_prf+0x2a6>
    95c4:	81 e3       	ldi	r24, 0x31	; 49
    95c6:	f6 01       	movw	r30, r12
    95c8:	80 83       	st	Z, r24
    95ca:	f7 01       	movw	r30, r14
    95cc:	82 2f       	mov	r24, r18
    95ce:	90 e2       	ldi	r25, 0x20	; 32
    95d0:	88 23       	and	r24, r24
    95d2:	19 f0       	breq	.+6      	; 0x95da <dtoa_prf+0x2ba>
    95d4:	91 93       	st	Z+, r25
    95d6:	81 50       	subi	r24, 0x01	; 1
    95d8:	fb cf       	rjmp	.-10     	; 0x95d0 <dtoa_prf+0x2b0>
    95da:	f7 01       	movw	r30, r14
    95dc:	e2 0f       	add	r30, r18
    95de:	f1 1d       	adc	r31, r1
    95e0:	10 82       	st	Z, r1
    95e2:	80 e0       	ldi	r24, 0x00	; 0
    95e4:	90 e0       	ldi	r25, 0x00	; 0
    95e6:	29 96       	adiw	r28, 0x09	; 9
    95e8:	0f b6       	in	r0, 0x3f	; 63
    95ea:	f8 94       	cli
    95ec:	de bf       	out	0x3e, r29	; 62
    95ee:	0f be       	out	0x3f, r0	; 63
    95f0:	cd bf       	out	0x3d, r28	; 61
    95f2:	df 91       	pop	r29
    95f4:	cf 91       	pop	r28
    95f6:	1f 91       	pop	r17
    95f8:	0f 91       	pop	r16
    95fa:	ff 90       	pop	r15
    95fc:	ef 90       	pop	r14
    95fe:	df 90       	pop	r13
    9600:	cf 90       	pop	r12
    9602:	bf 90       	pop	r11
    9604:	af 90       	pop	r10
    9606:	9f 90       	pop	r9
    9608:	8f 90       	pop	r8
    960a:	08 95       	ret

0000960c <__ftoa_engine>:
    960c:	28 30       	cpi	r18, 0x08	; 8
    960e:	08 f0       	brcs	.+2      	; 0x9612 <__ftoa_engine+0x6>
    9610:	27 e0       	ldi	r18, 0x07	; 7
    9612:	33 27       	eor	r19, r19
    9614:	da 01       	movw	r26, r20
    9616:	99 0f       	add	r25, r25
    9618:	31 1d       	adc	r19, r1
    961a:	87 fd       	sbrc	r24, 7
    961c:	91 60       	ori	r25, 0x01	; 1
    961e:	00 96       	adiw	r24, 0x00	; 0
    9620:	61 05       	cpc	r22, r1
    9622:	71 05       	cpc	r23, r1
    9624:	39 f4       	brne	.+14     	; 0x9634 <__ftoa_engine+0x28>
    9626:	32 60       	ori	r19, 0x02	; 2
    9628:	2e 5f       	subi	r18, 0xFE	; 254
    962a:	3d 93       	st	X+, r19
    962c:	30 e3       	ldi	r19, 0x30	; 48
    962e:	2a 95       	dec	r18
    9630:	e1 f7       	brne	.-8      	; 0x962a <__ftoa_engine+0x1e>
    9632:	08 95       	ret
    9634:	9f 3f       	cpi	r25, 0xFF	; 255
    9636:	30 f0       	brcs	.+12     	; 0x9644 <__ftoa_engine+0x38>
    9638:	80 38       	cpi	r24, 0x80	; 128
    963a:	71 05       	cpc	r23, r1
    963c:	61 05       	cpc	r22, r1
    963e:	09 f0       	breq	.+2      	; 0x9642 <__ftoa_engine+0x36>
    9640:	3c 5f       	subi	r19, 0xFC	; 252
    9642:	3c 5f       	subi	r19, 0xFC	; 252
    9644:	3d 93       	st	X+, r19
    9646:	91 30       	cpi	r25, 0x01	; 1
    9648:	08 f0       	brcs	.+2      	; 0x964c <__ftoa_engine+0x40>
    964a:	80 68       	ori	r24, 0x80	; 128
    964c:	91 1d       	adc	r25, r1
    964e:	df 93       	push	r29
    9650:	cf 93       	push	r28
    9652:	1f 93       	push	r17
    9654:	0f 93       	push	r16
    9656:	ff 92       	push	r15
    9658:	ef 92       	push	r14
    965a:	19 2f       	mov	r17, r25
    965c:	98 7f       	andi	r25, 0xF8	; 248
    965e:	96 95       	lsr	r25
    9660:	e9 2f       	mov	r30, r25
    9662:	96 95       	lsr	r25
    9664:	96 95       	lsr	r25
    9666:	e9 0f       	add	r30, r25
    9668:	ff 27       	eor	r31, r31
    966a:	e8 50       	subi	r30, 0x08	; 8
    966c:	fe 4f       	sbci	r31, 0xFE	; 254
    966e:	99 27       	eor	r25, r25
    9670:	33 27       	eor	r19, r19
    9672:	ee 24       	eor	r14, r14
    9674:	ff 24       	eor	r15, r15
    9676:	a7 01       	movw	r20, r14
    9678:	e7 01       	movw	r28, r14
    967a:	05 90       	lpm	r0, Z+
    967c:	08 94       	sec
    967e:	07 94       	ror	r0
    9680:	28 f4       	brcc	.+10     	; 0x968c <__ftoa_engine+0x80>
    9682:	36 0f       	add	r19, r22
    9684:	e7 1e       	adc	r14, r23
    9686:	f8 1e       	adc	r15, r24
    9688:	49 1f       	adc	r20, r25
    968a:	51 1d       	adc	r21, r1
    968c:	66 0f       	add	r22, r22
    968e:	77 1f       	adc	r23, r23
    9690:	88 1f       	adc	r24, r24
    9692:	99 1f       	adc	r25, r25
    9694:	06 94       	lsr	r0
    9696:	a1 f7       	brne	.-24     	; 0x9680 <__ftoa_engine+0x74>
    9698:	05 90       	lpm	r0, Z+
    969a:	07 94       	ror	r0
    969c:	28 f4       	brcc	.+10     	; 0x96a8 <__ftoa_engine+0x9c>
    969e:	e7 0e       	add	r14, r23
    96a0:	f8 1e       	adc	r15, r24
    96a2:	49 1f       	adc	r20, r25
    96a4:	56 1f       	adc	r21, r22
    96a6:	c1 1d       	adc	r28, r1
    96a8:	77 0f       	add	r23, r23
    96aa:	88 1f       	adc	r24, r24
    96ac:	99 1f       	adc	r25, r25
    96ae:	66 1f       	adc	r22, r22
    96b0:	06 94       	lsr	r0
    96b2:	a1 f7       	brne	.-24     	; 0x969c <__ftoa_engine+0x90>
    96b4:	05 90       	lpm	r0, Z+
    96b6:	07 94       	ror	r0
    96b8:	28 f4       	brcc	.+10     	; 0x96c4 <__ftoa_engine+0xb8>
    96ba:	f8 0e       	add	r15, r24
    96bc:	49 1f       	adc	r20, r25
    96be:	56 1f       	adc	r21, r22
    96c0:	c7 1f       	adc	r28, r23
    96c2:	d1 1d       	adc	r29, r1
    96c4:	88 0f       	add	r24, r24
    96c6:	99 1f       	adc	r25, r25
    96c8:	66 1f       	adc	r22, r22
    96ca:	77 1f       	adc	r23, r23
    96cc:	06 94       	lsr	r0
    96ce:	a1 f7       	brne	.-24     	; 0x96b8 <__ftoa_engine+0xac>
    96d0:	05 90       	lpm	r0, Z+
    96d2:	07 94       	ror	r0
    96d4:	20 f4       	brcc	.+8      	; 0x96de <__ftoa_engine+0xd2>
    96d6:	49 0f       	add	r20, r25
    96d8:	56 1f       	adc	r21, r22
    96da:	c7 1f       	adc	r28, r23
    96dc:	d8 1f       	adc	r29, r24
    96de:	99 0f       	add	r25, r25
    96e0:	66 1f       	adc	r22, r22
    96e2:	77 1f       	adc	r23, r23
    96e4:	88 1f       	adc	r24, r24
    96e6:	06 94       	lsr	r0
    96e8:	a9 f7       	brne	.-22     	; 0x96d4 <__ftoa_engine+0xc8>
    96ea:	84 91       	lpm	r24, Z
    96ec:	10 95       	com	r17
    96ee:	17 70       	andi	r17, 0x07	; 7
    96f0:	41 f0       	breq	.+16     	; 0x9702 <__ftoa_engine+0xf6>
    96f2:	d6 95       	lsr	r29
    96f4:	c7 95       	ror	r28
    96f6:	57 95       	ror	r21
    96f8:	47 95       	ror	r20
    96fa:	f7 94       	ror	r15
    96fc:	e7 94       	ror	r14
    96fe:	1a 95       	dec	r17
    9700:	c1 f7       	brne	.-16     	; 0x96f2 <__ftoa_engine+0xe6>
    9702:	ee e9       	ldi	r30, 0x9E	; 158
    9704:	f1 e0       	ldi	r31, 0x01	; 1
    9706:	68 94       	set
    9708:	15 90       	lpm	r1, Z+
    970a:	15 91       	lpm	r17, Z+
    970c:	35 91       	lpm	r19, Z+
    970e:	65 91       	lpm	r22, Z+
    9710:	95 91       	lpm	r25, Z+
    9712:	05 90       	lpm	r0, Z+
    9714:	7f e2       	ldi	r23, 0x2F	; 47
    9716:	73 95       	inc	r23
    9718:	e1 18       	sub	r14, r1
    971a:	f1 0a       	sbc	r15, r17
    971c:	43 0b       	sbc	r20, r19
    971e:	56 0b       	sbc	r21, r22
    9720:	c9 0b       	sbc	r28, r25
    9722:	d0 09       	sbc	r29, r0
    9724:	c0 f7       	brcc	.-16     	; 0x9716 <__ftoa_engine+0x10a>
    9726:	e1 0c       	add	r14, r1
    9728:	f1 1e       	adc	r15, r17
    972a:	43 1f       	adc	r20, r19
    972c:	56 1f       	adc	r21, r22
    972e:	c9 1f       	adc	r28, r25
    9730:	d0 1d       	adc	r29, r0
    9732:	7e f4       	brtc	.+30     	; 0x9752 <__ftoa_engine+0x146>
    9734:	70 33       	cpi	r23, 0x30	; 48
    9736:	11 f4       	brne	.+4      	; 0x973c <__ftoa_engine+0x130>
    9738:	8a 95       	dec	r24
    973a:	e6 cf       	rjmp	.-52     	; 0x9708 <__ftoa_engine+0xfc>
    973c:	e8 94       	clt
    973e:	01 50       	subi	r16, 0x01	; 1
    9740:	30 f0       	brcs	.+12     	; 0x974e <__ftoa_engine+0x142>
    9742:	08 0f       	add	r16, r24
    9744:	0a f4       	brpl	.+2      	; 0x9748 <__ftoa_engine+0x13c>
    9746:	00 27       	eor	r16, r16
    9748:	02 17       	cp	r16, r18
    974a:	08 f4       	brcc	.+2      	; 0x974e <__ftoa_engine+0x142>
    974c:	20 2f       	mov	r18, r16
    974e:	23 95       	inc	r18
    9750:	02 2f       	mov	r16, r18
    9752:	7a 33       	cpi	r23, 0x3A	; 58
    9754:	28 f0       	brcs	.+10     	; 0x9760 <__ftoa_engine+0x154>
    9756:	79 e3       	ldi	r23, 0x39	; 57
    9758:	7d 93       	st	X+, r23
    975a:	2a 95       	dec	r18
    975c:	e9 f7       	brne	.-6      	; 0x9758 <__ftoa_engine+0x14c>
    975e:	10 c0       	rjmp	.+32     	; 0x9780 <__ftoa_engine+0x174>
    9760:	7d 93       	st	X+, r23
    9762:	2a 95       	dec	r18
    9764:	89 f6       	brne	.-94     	; 0x9708 <__ftoa_engine+0xfc>
    9766:	06 94       	lsr	r0
    9768:	97 95       	ror	r25
    976a:	67 95       	ror	r22
    976c:	37 95       	ror	r19
    976e:	17 95       	ror	r17
    9770:	17 94       	ror	r1
    9772:	e1 18       	sub	r14, r1
    9774:	f1 0a       	sbc	r15, r17
    9776:	43 0b       	sbc	r20, r19
    9778:	56 0b       	sbc	r21, r22
    977a:	c9 0b       	sbc	r28, r25
    977c:	d0 09       	sbc	r29, r0
    977e:	98 f0       	brcs	.+38     	; 0x97a6 <__ftoa_engine+0x19a>
    9780:	23 95       	inc	r18
    9782:	7e 91       	ld	r23, -X
    9784:	73 95       	inc	r23
    9786:	7a 33       	cpi	r23, 0x3A	; 58
    9788:	08 f0       	brcs	.+2      	; 0x978c <__ftoa_engine+0x180>
    978a:	70 e3       	ldi	r23, 0x30	; 48
    978c:	7c 93       	st	X, r23
    978e:	20 13       	cpse	r18, r16
    9790:	b8 f7       	brcc	.-18     	; 0x9780 <__ftoa_engine+0x174>
    9792:	7e 91       	ld	r23, -X
    9794:	70 61       	ori	r23, 0x10	; 16
    9796:	7d 93       	st	X+, r23
    9798:	30 f0       	brcs	.+12     	; 0x97a6 <__ftoa_engine+0x19a>
    979a:	83 95       	inc	r24
    979c:	71 e3       	ldi	r23, 0x31	; 49
    979e:	7d 93       	st	X+, r23
    97a0:	70 e3       	ldi	r23, 0x30	; 48
    97a2:	2a 95       	dec	r18
    97a4:	e1 f7       	brne	.-8      	; 0x979e <__ftoa_engine+0x192>
    97a6:	11 24       	eor	r1, r1
    97a8:	ef 90       	pop	r14
    97aa:	ff 90       	pop	r15
    97ac:	0f 91       	pop	r16
    97ae:	1f 91       	pop	r17
    97b0:	cf 91       	pop	r28
    97b2:	df 91       	pop	r29
    97b4:	99 27       	eor	r25, r25
    97b6:	87 fd       	sbrc	r24, 7
    97b8:	90 95       	com	r25
    97ba:	08 95       	ret

000097bc <__do_global_dtors>:
    97bc:	1a e0       	ldi	r17, 0x0A	; 10
    97be:	cf e0       	ldi	r28, 0x0F	; 15
    97c0:	da e0       	ldi	r29, 0x0A	; 10
    97c2:	00 e0       	ldi	r16, 0x00	; 0
    97c4:	05 c0       	rjmp	.+10     	; 0x97d0 <__do_global_dtors+0x14>
    97c6:	80 2f       	mov	r24, r16
    97c8:	fe 01       	movw	r30, r28
    97ca:	4a db       	rcall	.-2412   	; 0x8e60 <__tablejump2__>
    97cc:	21 96       	adiw	r28, 0x01	; 1
    97ce:	01 1d       	adc	r16, r1
    97d0:	c3 31       	cpi	r28, 0x13	; 19
    97d2:	d1 07       	cpc	r29, r17
    97d4:	80 e0       	ldi	r24, 0x00	; 0
    97d6:	08 07       	cpc	r16, r24
    97d8:	b1 f7       	brne	.-20     	; 0x97c6 <__do_global_dtors+0xa>
    97da:	f8 94       	cli

000097dc <__stop_program>:
    97dc:	ff cf       	rjmp	.-2      	; 0x97dc <__stop_program>
