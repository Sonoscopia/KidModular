
OscillatorController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001a0  00800200  00009fde  0000a072  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00009fde  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000068e  008003a0  008003a0  0000a212  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000a212  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000a244  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000b60  00000000  00000000  0000a284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0002f470  00000000  00000000  0000ade4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004822  00000000  00000000  0003a254  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000935a  00000000  00000000  0003ea76  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000029a8  00000000  00000000  00047dd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00004634  00000000  00000000  0004a778  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000108bc  00000000  00000000  0004edac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000b18  00000000  00000000  0005f668  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__dtors_end>
       4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
       8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
       c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      10:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      14:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      18:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      1c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      20:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      24:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      28:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      2c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      30:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      34:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      38:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      3c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      40:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      44:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      48:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      4c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      50:	0c 94 f2 1a 	jmp	0x35e4	; 0x35e4 <__vector_20>
      54:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      58:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      5c:	0c 94 f9 46 	jmp	0x8df2	; 0x8df2 <__vector_23>
      60:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      64:	0c 94 ac 45 	jmp	0x8b58	; 0x8b58 <__vector_25>
      68:	0c 94 e2 45 	jmp	0x8bc4	; 0x8bc4 <__vector_26>
      6c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      70:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      74:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      78:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      7c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      80:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      84:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      88:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      8c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      90:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      94:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      98:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      9c:	0c 94 ca 40 	jmp	0x8194	; 0x8194 <__vector_39>
      a0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      a4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      a8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      ac:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      b0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      b4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      b8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      bc:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      c0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      c4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      c8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      cc:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      d0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      d4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      d8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      dc:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      e0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      e4:	f2 22       	and	r15, r18
      e6:	db 23       	and	r29, r27
      e8:	0d 23       	and	r16, r29
      ea:	0d 23       	and	r16, r29
      ec:	26 23       	and	r18, r22
      ee:	db 23       	and	r29, r27
      f0:	d3 22       	and	r13, r19
      f2:	b0 23       	and	r27, r16
      f4:	4a 23       	and	r20, r26
      f6:	db 23       	and	r29, r27
      f8:	58 23       	and	r21, r24
      fa:	58 23       	and	r21, r24
      fc:	75 23       	and	r23, r21
      fe:	75 23       	and	r23, r21
     100:	f2 22       	and	r15, r18
     102:	b0 23       	and	r27, r16
     104:	db 23       	and	r29, r27
     106:	f2 22       	and	r15, r18
     108:	58 23       	and	r21, r24
     10a:	b0 23       	and	r27, r16
     10c:	0d 23       	and	r16, r29
     10e:	84 23       	and	r24, r20
     110:	b0 23       	and	r27, r16
     112:	b0 23       	and	r27, r16
     114:	b0 23       	and	r27, r16
     116:	b0 23       	and	r27, r16
     118:	b0 23       	and	r27, r16
     11a:	9d 23       	and	r25, r29
     11c:	b0 23       	and	r27, r16
     11e:	b0 23       	and	r27, r16
     120:	4b 24       	eor	r4, r11
     122:	b9 36       	cpi	r27, 0x69	; 105
     124:	18 25       	eor	r17, r8
     126:	18 25       	eor	r17, r8
     128:	aa 26       	eor	r10, r26
     12a:	b9 36       	cpi	r27, 0x69	; 105
     12c:	b0 29       	or	r27, r0
     12e:	e4 27       	eor	r30, r20
     130:	5d 29       	or	r21, r13
     132:	b9 36       	cpi	r27, 0x69	; 105
     134:	0a 2b       	or	r16, r26
     136:	13 2c       	mov	r1, r3
     138:	bf 2d       	mov	r27, r15
     13a:	bf 2d       	mov	r27, r15
     13c:	4b 24       	eor	r4, r11
     13e:	5c 32       	cpi	r21, 0x2C	; 44
     140:	b9 36       	cpi	r27, 0x69	; 105
     142:	4b 24       	eor	r4, r11
     144:	e6 2c       	mov	r14, r6
     146:	bf 2e       	mov	r11, r31
     148:	96 25       	eor	r25, r6
     14a:	88 2f       	mov	r24, r24
     14c:	56 30       	cpi	r21, 0x06	; 6
     14e:	5c 32       	cpi	r21, 0x2C	; 44
     150:	83 31       	cpi	r24, 0x13	; 19
     152:	15 33       	cpi	r17, 0x35	; 53
     154:	5c 34       	cpi	r21, 0x4C	; 76
     156:	bb 35       	cpi	r27, 0x5B	; 91
     158:	cf 35       	cpi	r28, 0x5F	; 95
     15a:	58 28       	or	r5, r8
     15c:	05 a8       	ldd	r0, Z+53	; 0x35
     15e:	4c cd       	rjmp	.-1384   	; 0xfffffbf8 <__eeprom_end+0xff7efbf8>
     160:	b2 d4       	rcall	.+2404   	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     162:	4e b9       	out	0x0e, r20	; 14
     164:	38 36       	cpi	r19, 0x68	; 104
     166:	a9 02       	muls	r26, r25
     168:	0c 50       	subi	r16, 0x0C	; 12
     16a:	b9 91       	ld	r27, Y+
     16c:	86 88       	ldd	r8, Z+22	; 0x16
     16e:	08 3c       	cpi	r16, 0xC8	; 200
     170:	a6 aa       	std	Z+54, r10	; 0x36
     172:	aa 2a       	or	r10, r26
     174:	be 00       	.word	0x00be	; ????
     176:	00 00       	nop
     178:	80 3f       	cpi	r24, 0xF0	; 240
     17a:	1d 48       	sbci	r17, 0x8D	; 141
     17c:	20 48       	sbci	r18, 0x80	; 128
     17e:	0f 48       	sbci	r16, 0x8F	; 143
     180:	13 48       	sbci	r17, 0x83	; 131
     182:	19 48       	sbci	r17, 0x89	; 137
     184:	57 48       	sbci	r21, 0x87	; 135
     186:	24 48       	sbci	r18, 0x84	; 132
     188:	28 48       	sbci	r18, 0x88	; 136
     18a:	2e 48       	sbci	r18, 0x8E	; 142
     18c:	32 48       	sbci	r19, 0x82	; 130
     18e:	36 48       	sbci	r19, 0x86	; 134
     190:	3c 48       	sbci	r19, 0x8C	; 140
     192:	40 48       	sbci	r20, 0x80	; 128
     194:	44 48       	sbci	r20, 0x84	; 132
     196:	57 48       	sbci	r21, 0x87	; 135
     198:	4a 48       	sbci	r20, 0x8A	; 138
     19a:	4e 48       	sbci	r20, 0x8E	; 142
     19c:	52 48       	sbci	r21, 0x82	; 130

0000019e <__trampolines_end>:
     19e:	00 40       	sbci	r16, 0x00	; 0
     1a0:	7a 10       	cpse	r7, r10
     1a2:	f3 5a       	subi	r31, 0xA3	; 163
     1a4:	00 a0       	ldd	r0, Z+32	; 0x20
     1a6:	72 4e       	sbci	r23, 0xE2	; 226
     1a8:	18 09       	sbc	r17, r8
     1aa:	00 10       	cpse	r0, r0
     1ac:	a5 d4       	rcall	.+2378   	; 0xaf8 <__LOCK_REGION_LENGTH__+0x6f8>
     1ae:	e8 00       	.word	0x00e8	; ????
     1b0:	00 e8       	ldi	r16, 0x80	; 128
     1b2:	76 48       	sbci	r23, 0x86	; 134
     1b4:	17 00       	.word	0x0017	; ????
     1b6:	00 e4       	ldi	r16, 0x40	; 64
     1b8:	0b 54       	subi	r16, 0x4B	; 75
     1ba:	02 00       	.word	0x0002	; ????
     1bc:	00 ca       	rjmp	.-3072   	; 0xfffff5be <__eeprom_end+0xff7ef5be>
     1be:	9a 3b       	cpi	r25, 0xBA	; 186
     1c0:	00 00       	nop
     1c2:	00 e1       	ldi	r16, 0x10	; 16
     1c4:	f5 05       	cpc	r31, r5
     1c6:	00 00       	nop
     1c8:	80 96       	adiw	r24, 0x20	; 32
     1ca:	98 00       	.word	0x0098	; ????
     1cc:	00 00       	nop
     1ce:	40 42       	sbci	r20, 0x20	; 32
     1d0:	0f 00       	.word	0x000f	; ????
     1d2:	00 00       	nop
     1d4:	a0 86       	std	Z+8, r10	; 0x08
     1d6:	01 00       	.word	0x0001	; ????
     1d8:	00 00       	nop
     1da:	10 27       	eor	r17, r16
     1dc:	00 00       	nop
     1de:	00 00       	nop
     1e0:	e8 03       	fmulsu	r22, r16
     1e2:	00 00       	nop
     1e4:	00 00       	nop
     1e6:	64 00       	.word	0x0064	; ????
     1e8:	00 00       	nop
     1ea:	00 00       	nop
     1ec:	0a 00       	.word	0x000a	; ????
     1ee:	00 00       	nop
     1f0:	00 00       	nop
     1f2:	01 00       	.word	0x0001	; ????
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	2c 76       	andi	r18, 0x6C	; 108
     1fa:	d8 88       	ldd	r13, Y+16	; 0x10
     1fc:	dc 67       	ori	r29, 0x7C	; 124
     1fe:	4f 08       	sbc	r4, r15
     200:	23 df       	rcall	.-442    	; 0x48 <__SREG__+0x9>
     202:	c1 df       	rcall	.-126    	; 0x186 <__SREG__+0x147>
     204:	ae 59       	subi	r26, 0x9E	; 158
     206:	e1 b1       	in	r30, 0x01	; 1
     208:	b7 96       	adiw	r30, 0x27	; 39
     20a:	e5 e3       	ldi	r30, 0x35	; 53
     20c:	e4 53       	subi	r30, 0x34	; 52
     20e:	c6 3a       	cpi	r28, 0xA6	; 166
     210:	e6 51       	subi	r30, 0x16	; 22
     212:	99 76       	andi	r25, 0x69	; 105
     214:	96 e8       	ldi	r25, 0x86	; 134
     216:	e6 c2       	rjmp	.+1484   	; 0x7e4 <__LOCK_REGION_LENGTH__+0x3e4>
     218:	84 26       	eor	r8, r20
     21a:	eb 89       	ldd	r30, Y+19	; 0x13
     21c:	8c 9b       	sbis	0x11, 4	; 17
     21e:	62 ed       	ldi	r22, 0xD2	; 210
     220:	40 7c       	andi	r20, 0xC0	; 192
     222:	6f fc       	.word	0xfc6f	; ????
     224:	ef bc       	out	0x2f, r14	; 47
     226:	9c 9f       	mul	r25, r28
     228:	40 f2       	brcs	.-112    	; 0x1ba <__trampolines_end+0x1c>
     22a:	ba a5       	ldd	r27, Y+42	; 0x2a
     22c:	6f a5       	ldd	r22, Y+47	; 0x2f
     22e:	f4 90       	lpm	r15, Z
     230:	05 5a       	subi	r16, 0xA5	; 165
     232:	2a f7       	brpl	.-54     	; 0x1fe <__trampolines_end+0x60>
     234:	5c 93       	st	X, r21
     236:	6b 6c       	ori	r22, 0xCB	; 203
     238:	f9 67       	ori	r31, 0x79	; 121
     23a:	6d c1       	rjmp	.+730    	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
     23c:	1b fc       	.word	0xfc1b	; ????
     23e:	e0 e4       	ldi	r30, 0x40	; 64
     240:	0d 47       	sbci	r16, 0x7D	; 125
     242:	fe f5       	brtc	.+126    	; 0x2c2 <BigFont+0x2a>
     244:	20 e6       	ldi	r18, 0x60	; 96
     246:	b5 00       	.word	0x00b5	; ????
     248:	d0 ed       	ldi	r29, 0xD0	; 208
     24a:	90 2e       	mov	r9, r16
     24c:	03 00       	.word	0x0003	; ????
     24e:	94 35       	cpi	r25, 0x54	; 84
     250:	77 05       	cpc	r23, r7
     252:	00 80       	ld	r0, Z
     254:	84 1e       	adc	r8, r20
     256:	08 00       	.word	0x0008	; ????
     258:	00 20       	and	r0, r0
     25a:	4e 0a       	sbc	r4, r30
     25c:	00 00       	nop
     25e:	00 c8       	rjmp	.-4096   	; 0xfffff260 <__eeprom_end+0xff7ef260>
     260:	0c 33       	cpi	r16, 0x3C	; 60
     262:	33 33       	cpi	r19, 0x33	; 51
     264:	33 0f       	add	r19, r19
     266:	98 6e       	ori	r25, 0xE8	; 232
     268:	12 83       	std	Z+2, r17	; 0x02
     26a:	11 41       	sbci	r17, 0x11	; 17
     26c:	ef 8d       	ldd	r30, Y+31	; 0x1f
     26e:	21 14       	cp	r2, r1
     270:	89 3b       	cpi	r24, 0xB9	; 185
     272:	e6 55       	subi	r30, 0x56	; 86
     274:	16 cf       	rjmp	.-468    	; 0xa2 <__SREG__+0x63>
     276:	fe e6       	ldi	r31, 0x6E	; 110
     278:	db 18       	sub	r13, r11
     27a:	d1 84       	ldd	r13, Z+9	; 0x09
     27c:	4b 38       	cpi	r20, 0x8B	; 139
     27e:	1b f7       	brvc	.-58     	; 0x246 <__trampolines_end+0xa8>
     280:	7c 1d       	adc	r23, r12
     282:	90 1d       	adc	r25, r0
     284:	a4 bb       	out	0x14, r26	; 20
     286:	e4 24       	eor	r14, r4
     288:	20 32       	cpi	r18, 0x20	; 32
     28a:	84 72       	andi	r24, 0x24	; 36
     28c:	5e 22       	and	r5, r30
     28e:	81 00       	.word	0x0081	; ????
     290:	c9 f1       	breq	.+114    	; 0x304 <BigFont+0x6c>
     292:	24 ec       	ldi	r18, 0xC4	; 196
     294:	a1 e5       	ldi	r26, 0x51	; 81
     296:	3d 27       	eor	r19, r29

00000298 <BigFont>:
     298:	10 10 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
	...
     2c0:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
     2d0:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
     2e0:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
     2fc:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
     30c:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
     31c:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
     32c:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
     33c:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     34c:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     35c:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     36c:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     37c:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     3a0:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     3b0:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     3c0:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     3d0:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     3e0:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     3f0:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     400:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     410:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     430:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     448:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     470:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     480:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     490:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     4a0:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     4b0:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4c0:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     4d0:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     4e0:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     4f0:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     500:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     510:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     520:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     530:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     540:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     550:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     560:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     570:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     580:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     590:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     5a0:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     5b0:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     5c0:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     5d0:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     5e0:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     5f0:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     600:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     610:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     620:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     630:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     640:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     650:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     660:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     670:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     680:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     690:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     6a0:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     6b0:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     6c0:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     6d0:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6e0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     6f0:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     700:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     710:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     720:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     730:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     740:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     750:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     760:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     770:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     780:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     790:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     7a0:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     7b0:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     7c0:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     7d0:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     7e0:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     7f0:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     800:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     810:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     820:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     830:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     840:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     850:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     860:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     870:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     880:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     890:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     8a0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     8b0:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     8c0:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     8d0:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     8e0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     8f0:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     900:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     910:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     920:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     930:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     940:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     950:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     960:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     970:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     980:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     990:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     9a0:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     9b0:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     9c0:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     9d0:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     9e0:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     9f0:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     a00:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     a10:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     a20:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     a30:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     a40:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     a50:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     a60:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     a98:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     ac8:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     ae0:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     af0:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     b08:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     b20:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     b30:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     b48:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     b60:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     b70:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     b88:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     b98:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     ba8:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     bc0:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     bd0:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     be0:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     bf0:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     c00:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     c10:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     c20:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     c30:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     c48:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     c68:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     c88:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     ca8:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     cb8:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     cc8:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     cd8:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce8:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     d08:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     d20:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     d30:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     d48:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     d68:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     d88:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     da8:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     dc8:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     dd8:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     de8:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     e00:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     e10:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     e20:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     e30:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     e40:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     e50:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     e60:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000e7c <SmallFont>:
     e7c:	08 0c 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
     e8c:	00 00 20 20 20 20 20 20 00 20 00 00 00 28 50 50     ..      . ...(PP
	...
     ea4:	00 00 28 28 fc 28 50 fc 50 50 00 00 00 20 78 a8     ..((.(P.PP... x.
     eb4:	a0 60 30 28 a8 f0 20 00 00 00 48 a8 b0 50 28 34     .`0(.. ...H..P(4
     ec4:	54 48 00 00 00 00 20 50 50 78 a8 a8 90 6c 00 00     TH.... PPx...l..
     ed4:	00 40 40 80 00 00 00 00 00 00 00 00 00 04 08 10     .@@.............
     ee4:	10 10 10 10 10 08 04 00 00 40 20 10 10 10 10 10     .........@ .....
     ef4:	10 20 40 00 00 00 00 20 a8 70 70 a8 20 00 00 00     . @.... .pp. ...
     f04:	00 00 20 20 20 f8 20 20 20 00 00 00 00 00 00 00     ..   .   .......
     f14:	00 00 00 00 00 40 40 80 00 00 00 00 00 f8 00 00     .....@@.........
	...
     f30:	00 40 00 00 00 08 10 10 10 20 20 40 40 40 80 00     .@.......  @@@..
     f40:	00 00 70 88 88 88 88 88 88 70 00 00 00 00 20 60     ..p......p.... `
     f50:	20 20 20 20 20 70 00 00 00 00 70 88 88 10 20 40          p....p... @
     f60:	80 f8 00 00 00 00 70 88 08 30 08 08 88 70 00 00     ......p..0...p..
     f70:	00 00 10 30 50 50 90 78 10 18 00 00 00 00 f8 80     ...0PP.x........
     f80:	80 f0 08 08 88 70 00 00 00 00 70 90 80 f0 88 88     .....p....p.....
     f90:	88 70 00 00 00 00 f8 90 10 20 20 20 20 20 00 00     .p.......     ..
     fa0:	00 00 70 88 88 70 88 88 88 70 00 00 00 00 70 88     ..p..p...p....p.
     fb0:	88 88 78 08 48 70 00 00 00 00 00 00 20 00 00 00     ..x.Hp...... ...
     fc0:	00 20 00 00 00 00 00 00 00 20 00 00 00 20 20 00     . ....... ...  .
     fd0:	00 04 08 10 20 40 20 10 08 04 00 00 00 00 00 00     .... @ .........
     fe0:	f8 00 00 f8 00 00 00 00 00 40 20 10 08 04 08 10     .........@ .....
     ff0:	20 40 00 00 00 00 70 88 88 10 20 20 00 20 00 00      @....p...  . ..
    1000:	00 00 70 88 98 a8 a8 b8 80 78 00 00 00 00 20 20     ..p......x....  
    1010:	30 50 50 78 48 cc 00 00 00 00 f0 48 48 70 48 48     0PPxH......HHpHH
    1020:	48 f0 00 00 00 00 78 88 80 80 80 80 88 70 00 00     H.....x......p..
    1030:	00 00 f0 48 48 48 48 48 48 f0 00 00 00 00 f8 48     ...HHHHHH......H
    1040:	50 70 50 40 48 f8 00 00 00 00 f8 48 50 70 50 40     PpP@H......HPpP@
    1050:	40 e0 00 00 00 00 38 48 80 80 9c 88 48 30 00 00     @.....8H....H0..
    1060:	00 00 cc 48 48 78 48 48 48 cc 00 00 00 00 f8 20     ...HHxHHH...... 
    1070:	20 20 20 20 20 f8 00 00 00 00 7c 10 10 10 10 10          .....|.....
    1080:	10 90 e0 00 00 00 ec 48 50 60 50 50 48 ec 00 00     .......HP`PPH...
    1090:	00 00 e0 40 40 40 40 40 44 fc 00 00 00 00 d8 d8     ...@@@@@D.......
    10a0:	d8 d8 a8 a8 a8 a8 00 00 00 00 dc 48 68 68 58 58     ...........HhhXX
    10b0:	48 e8 00 00 00 00 70 88 88 88 88 88 88 70 00 00     H.....p......p..
    10c0:	00 00 f0 48 48 70 40 40 40 e0 00 00 00 00 70 88     ...HHp@@@.....p.
    10d0:	88 88 88 e8 98 70 18 00 00 00 f0 48 48 70 50 48     .....p.....HHpPH
    10e0:	48 ec 00 00 00 00 78 88 80 60 10 08 88 f0 00 00     H.....x..`......
    10f0:	00 00 f8 a8 20 20 20 20 20 70 00 00 00 00 cc 48     ....     p.....H
    1100:	48 48 48 48 48 30 00 00 00 00 cc 48 48 50 50 30     HHHHH0.....HHPP0
    1110:	20 20 00 00 00 00 a8 a8 a8 70 50 50 50 50 00 00       .......pPPPP..
    1120:	00 00 d8 50 50 20 20 50 50 d8 00 00 00 00 d8 50     ...PP  PP......P
    1130:	50 20 20 20 20 70 00 00 00 00 f8 90 10 20 20 40     P    p.......  @
    1140:	48 f8 00 00 00 38 20 20 20 20 20 20 20 20 38 00     H....8        8.
    1150:	00 40 40 40 20 20 10 10 10 08 00 00 00 70 10 10     .@@@  .......p..
    1160:	10 10 10 10 10 10 70 00 00 20 50 00 00 00 00 00     ......p.. P.....
	...
    117c:	00 00 00 fc 00 20 00 00 00 00 00 00 00 00 00 00     ..... ..........
    118c:	00 00 00 00 00 30 48 38 48 3c 00 00 00 00 c0 40     .....0H8H<.....@
    119c:	40 70 48 48 48 70 00 00 00 00 00 00 00 38 48 40     @pHHHp.......8H@
    11ac:	40 38 00 00 00 00 18 08 08 38 48 48 48 3c 00 00     @8.......8HHH<..
    11bc:	00 00 00 00 00 30 48 78 40 38 00 00 00 00 1c 20     .....0Hx@8..... 
    11cc:	20 78 20 20 20 78 00 00 00 00 00 00 00 3c 48 30      x   x.......<H0
    11dc:	40 78 44 38 00 00 c0 40 40 70 48 48 48 ec 00 00     @xD8...@@pHHH...
    11ec:	00 00 20 00 00 60 20 20 20 70 00 00 00 00 10 00     .. ..`   p......
    11fc:	00 30 10 10 10 10 10 e0 00 00 c0 40 40 5c 50 70     .0.........@@\Pp
    120c:	48 ec 00 00 00 00 e0 20 20 20 20 20 20 f8 00 00     H......      ...
    121c:	00 00 00 00 00 f0 a8 a8 a8 a8 00 00 00 00 00 00     ................
    122c:	00 f0 48 48 48 ec 00 00 00 00 00 00 00 30 48 48     ..HHH........0HH
    123c:	48 30 00 00 00 00 00 00 00 f0 48 48 48 70 40 e0     H0........HHHp@.
    124c:	00 00 00 00 00 38 48 48 48 38 08 1c 00 00 00 00     .....8HHH8......
    125c:	00 d8 60 40 40 e0 00 00 00 00 00 00 00 78 40 30     ..`@@........x@0
    126c:	08 78 00 00 00 00 00 20 20 70 20 20 20 18 00 00     .x.....  p   ...
    127c:	00 00 00 00 00 d8 48 48 48 3c 00 00 00 00 00 00     ......HHH<......
    128c:	00 ec 48 50 30 20 00 00 00 00 00 00 00 a8 a8 70     ..HP0 .........p
    129c:	50 50 00 00 00 00 00 00 00 d8 50 20 50 d8 00 00     PP........P P...
    12ac:	00 00 00 00 00 ec 48 50 30 20 20 c0 00 00 00 00     ......HP0  .....
    12bc:	00 78 10 20 20 78 00 00 00 18 10 10 10 20 10 10     .x.  x....... ..
    12cc:	10 10 18 00 10 10 10 10 10 10 10 10 10 10 10 10     ................
    12dc:	00 60 20 20 20 10 20 20 20 20 60 00 40 a4 18 00     .`   .    `.@...
	...

000012f4 <digital_pin_to_timer_PGM>:
    12f4:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    1320:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000133a <digital_pin_to_bit_mask_PGM>:
    133a:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    134a:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    135a:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    136a:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    137a:	04 08 10 20 40 80                                   ... @.

00001380 <digital_pin_to_port_PGM>:
    1380:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    1390:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    13a0:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    13b0:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    13c0:	0b 0b 0b 0b 0b 0b                                   ......

000013c6 <port_to_input_PGM>:
    13c6:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    13d6:	00 01 00 00 03 01 06 01 09 01                       ..........

000013e0 <port_to_output_PGM>:
    13e0:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    13f0:	02 01 00 00 05 01 08 01 0b 01                       ..........

000013fa <port_to_mode_PGM>:
    13fa:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    140a:	01 01 00 00 04 01 07 01 0a 01                       ..........

00001414 <__ctors_start>:
    1414:	e3 0c       	add	r14, r3
    1416:	10 14       	cp	r1, r0
    1418:	0f 16       	cp	r0, r31
    141a:	8a 17       	cp	r24, r26
    141c:	e2 42       	sbci	r30, 0x22	; 34
    141e:	14 46       	sbci	r17, 0x64	; 100

00001420 <__ctors_end>:
    1420:	a9 0d       	add	r26, r9
    1422:	d6 14       	cp	r13, r6
    1424:	d5 16       	cp	r13, r21
    1426:	99 18       	sub	r9, r9

00001428 <__dtors_end>:
    1428:	11 24       	eor	r1, r1
    142a:	1f be       	out	0x3f, r1	; 63
    142c:	cf ef       	ldi	r28, 0xFF	; 255
    142e:	d1 e2       	ldi	r29, 0x21	; 33
    1430:	de bf       	out	0x3e, r29	; 62
    1432:	cd bf       	out	0x3d, r28	; 61
    1434:	00 e0       	ldi	r16, 0x00	; 0
    1436:	0c bf       	out	0x3c, r16	; 60

00001438 <__do_copy_data>:
    1438:	13 e0       	ldi	r17, 0x03	; 3
    143a:	a0 e0       	ldi	r26, 0x00	; 0
    143c:	b2 e0       	ldi	r27, 0x02	; 2
    143e:	ee ed       	ldi	r30, 0xDE	; 222
    1440:	ff e9       	ldi	r31, 0x9F	; 159
    1442:	00 e0       	ldi	r16, 0x00	; 0
    1444:	0b bf       	out	0x3b, r16	; 59
    1446:	02 c0       	rjmp	.+4      	; 0x144c <__do_copy_data+0x14>
    1448:	07 90       	elpm	r0, Z+
    144a:	0d 92       	st	X+, r0
    144c:	a0 3a       	cpi	r26, 0xA0	; 160
    144e:	b1 07       	cpc	r27, r17
    1450:	d9 f7       	brne	.-10     	; 0x1448 <__do_copy_data+0x10>

00001452 <__do_clear_bss>:
    1452:	2a e0       	ldi	r18, 0x0A	; 10
    1454:	a0 ea       	ldi	r26, 0xA0	; 160
    1456:	b3 e0       	ldi	r27, 0x03	; 3
    1458:	01 c0       	rjmp	.+2      	; 0x145c <.do_clear_bss_start>

0000145a <.do_clear_bss_loop>:
    145a:	1d 92       	st	X+, r1

0000145c <.do_clear_bss_start>:
    145c:	ae 32       	cpi	r26, 0x2E	; 46
    145e:	b2 07       	cpc	r27, r18
    1460:	e1 f7       	brne	.-8      	; 0x145a <.do_clear_bss_loop>

00001462 <__do_global_ctors>:
    1462:	1a e0       	ldi	r17, 0x0A	; 10
    1464:	c0 e1       	ldi	r28, 0x10	; 16
    1466:	da e0       	ldi	r29, 0x0A	; 10
    1468:	00 e0       	ldi	r16, 0x00	; 0
    146a:	06 c0       	rjmp	.+12     	; 0x1478 <__do_global_ctors+0x16>
    146c:	21 97       	sbiw	r28, 0x01	; 1
    146e:	01 09       	sbc	r16, r1
    1470:	80 2f       	mov	r24, r16
    1472:	fe 01       	movw	r30, r28
    1474:	0e 94 30 4b 	call	0x9660	; 0x9660 <__tablejump2__>
    1478:	ca 30       	cpi	r28, 0x0A	; 10
    147a:	d1 07       	cpc	r29, r17
    147c:	80 e0       	ldi	r24, 0x00	; 0
    147e:	08 07       	cpc	r16, r24
    1480:	a9 f7       	brne	.-22     	; 0x146c <__do_global_ctors+0xa>
    1482:	0e 94 42 46 	call	0x8c84	; 0x8c84 <main>
    1486:	0c 94 de 4f 	jmp	0x9fbc	; 0x9fbc <__do_global_dtors>

0000148a <__bad_interrupt>:
    148a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000148e <_ZN7ControlC1Ev>:

void Control::storePreset() {

}

void Control::loadPreset() {
    148e:	cf 93       	push	r28
    1490:	df 93       	push	r29
    1492:	ec 01       	movw	r28, r24
    1494:	d7 d3       	rcall	.+1966   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    1496:	1d 8a       	std	Y+21, r1	; 0x15
    1498:	1e 8a       	std	Y+22, r1	; 0x16
    149a:	8c ed       	ldi	r24, 0xDC	; 220
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	98 8f       	std	Y+24, r25	; 0x18
    14a0:	8f 8b       	std	Y+23, r24	; 0x17
    14a2:	19 8e       	std	Y+25, r1	; 0x19
    14a4:	80 e9       	ldi	r24, 0x90	; 144
    14a6:	91 e0       	ldi	r25, 0x01	; 1
    14a8:	9b 8f       	std	Y+27, r25	; 0x1b
    14aa:	8a 8f       	std	Y+26, r24	; 0x1a
    14ac:	1c 8e       	std	Y+28, r1	; 0x1c
    14ae:	80 e4       	ldi	r24, 0x40	; 64
    14b0:	9f e1       	ldi	r25, 0x1F	; 31
    14b2:	9e 8f       	std	Y+30, r25	; 0x1e
    14b4:	8d 8f       	std	Y+29, r24	; 0x1d
    14b6:	88 e2       	ldi	r24, 0x28	; 40
    14b8:	8f 8f       	std	Y+31, r24	; 0x1f
    14ba:	18 a2       	std	Y+32, r1	; 0x20
    14bc:	1a a2       	std	Y+34, r1	; 0x22
    14be:	19 a2       	std	Y+33, r1	; 0x21
    14c0:	88 ec       	ldi	r24, 0xC8	; 200
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	9c a3       	std	Y+36, r25	; 0x24
    14c6:	8b a3       	std	Y+35, r24	; 0x23
    14c8:	84 eb       	ldi	r24, 0xB4	; 180
    14ca:	8d a3       	std	Y+37, r24	; 0x25
    14cc:	8a ef       	ldi	r24, 0xFA	; 250
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	9f a3       	std	Y+39, r25	; 0x27
    14d2:	8e a3       	std	Y+38, r24	; 0x26
    14d4:	18 a6       	std	Y+40, r1	; 0x28
    14d6:	19 a6       	std	Y+41, r1	; 0x29
    14d8:	1a a6       	std	Y+42, r1	; 0x2a
    14da:	1b a6       	std	Y+43, r1	; 0x2b
    14dc:	8f e7       	ldi	r24, 0x7F	; 127
    14de:	8c a7       	std	Y+44, r24	; 0x2c
    14e0:	1d a6       	std	Y+45, r1	; 0x2d
    14e2:	1e a6       	std	Y+46, r1	; 0x2e
    14e4:	1f a6       	std	Y+47, r1	; 0x2f
    14e6:	ce 01       	movw	r24, r28
    14e8:	c0 96       	adiw	r24, 0x30	; 48
    14ea:	ac d3       	rcall	.+1880   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    14ec:	ce 01       	movw	r24, r28
    14ee:	8b 5b       	subi	r24, 0xBB	; 187
    14f0:	9f 4f       	sbci	r25, 0xFF	; 255
    14f2:	a8 d3       	rcall	.+1872   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    14f4:	ce 01       	movw	r24, r28
    14f6:	86 5a       	subi	r24, 0xA6	; 166
    14f8:	9f 4f       	sbci	r25, 0xFF	; 255
    14fa:	a4 d3       	rcall	.+1864   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    14fc:	ce 01       	movw	r24, r28
    14fe:	81 59       	subi	r24, 0x91	; 145
    1500:	9f 4f       	sbci	r25, 0xFF	; 255
    1502:	a0 d3       	rcall	.+1856   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    1504:	fe 01       	movw	r30, r28
    1506:	e0 57       	subi	r30, 0x70	; 112
    1508:	ff 4f       	sbci	r31, 0xFF	; 255
    150a:	81 e0       	ldi	r24, 0x01	; 1
    150c:	80 83       	st	Z, r24
    150e:	31 96       	adiw	r30, 0x01	; 1
    1510:	80 83       	st	Z, r24
    1512:	cc 57       	subi	r28, 0x7C	; 124
    1514:	df 4f       	sbci	r29, 0xFF	; 255
    1516:	18 82       	st	Y, r1
    1518:	62 e0       	ldi	r22, 0x02	; 2
    151a:	8e e0       	ldi	r24, 0x0E	; 14
    151c:	df 91       	pop	r29
    151e:	cf 91       	pop	r28
    1520:	0c 94 58 48 	jmp	0x90b0	; 0x90b0 <pinMode>

00001524 <_ZN7Control7incMenuEv>:
    1524:	fc 01       	movw	r30, r24
    1526:	ea 57       	subi	r30, 0x7A	; 122
    1528:	ff 4f       	sbci	r31, 0xFF	; 255
    152a:	a0 81       	ld	r26, Z
    152c:	b1 81       	ldd	r27, Z+1	; 0x01
    152e:	9c 91       	ld	r25, X
    1530:	9f 5f       	subi	r25, 0xFF	; 255
    1532:	9c 93       	st	X, r25
    1534:	01 90       	ld	r0, Z+
    1536:	f0 81       	ld	r31, Z
    1538:	e0 2d       	mov	r30, r0
    153a:	80 81       	ld	r24, Z
    153c:	85 30       	cpi	r24, 0x05	; 5
    153e:	08 f0       	brcs	.+2      	; 0x1542 <_ZN7Control7incMenuEv+0x1e>
    1540:	10 82       	st	Z, r1
    1542:	08 95       	ret

00001544 <_ZN7Control11setEncodersEv>:
    1544:	cf 93       	push	r28
    1546:	df 93       	push	r29
    1548:	ec 01       	movw	r28, r24
    154a:	fc 01       	movw	r30, r24
    154c:	ea 57       	subi	r30, 0x7A	; 122
    154e:	ff 4f       	sbci	r31, 0xFF	; 255
    1550:	01 90       	ld	r0, Z+
    1552:	f0 81       	ld	r31, Z
    1554:	e0 2d       	mov	r30, r0
    1556:	80 81       	ld	r24, Z
    1558:	82 30       	cpi	r24, 0x02	; 2
    155a:	09 f4       	brne	.+2      	; 0x155e <_ZN7Control11setEncodersEv+0x1a>
    155c:	50 c0       	rjmp	.+160    	; 0x15fe <_ZN7Control11setEncodersEv+0xba>
    155e:	d0 f4       	brcc	.+52     	; 0x1594 <_ZN7Control11setEncodersEv+0x50>
    1560:	88 23       	and	r24, r24
    1562:	b9 f1       	breq	.+110    	; 0x15d2 <_ZN7Control11setEncodersEv+0x8e>
    1564:	81 30       	cpi	r24, 0x01	; 1
    1566:	09 f0       	breq	.+2      	; 0x156a <_ZN7Control11setEncodersEv+0x26>
    1568:	82 c0       	rjmp	.+260    	; 0x166e <_ZN7Control11setEncodersEv+0x12a>
    156a:	45 e0       	ldi	r20, 0x05	; 5
    156c:	61 e0       	ldi	r22, 0x01	; 1
    156e:	ce 01       	movw	r24, r28
    1570:	c0 96       	adiw	r24, 0x30	; 48
    1572:	8b d3       	rcall	.+1814   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1574:	44 e1       	ldi	r20, 0x14	; 20
    1576:	50 e0       	ldi	r21, 0x00	; 0
    1578:	61 e0       	ldi	r22, 0x01	; 1
    157a:	70 e0       	ldi	r23, 0x00	; 0
    157c:	ce 01       	movw	r24, r28
    157e:	8b 5b       	subi	r24, 0xBB	; 187
    1580:	9f 4f       	sbci	r25, 0xFF	; 255
    1582:	7d d3       	rcall	.+1786   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    1584:	45 e0       	ldi	r20, 0x05	; 5
    1586:	61 e0       	ldi	r22, 0x01	; 1
    1588:	ce 01       	movw	r24, r28
    158a:	86 5a       	subi	r24, 0xA6	; 166
    158c:	9f 4f       	sbci	r25, 0xFF	; 255
    158e:	7d d3       	rcall	.+1786   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1590:	45 e0       	ldi	r20, 0x05	; 5
    1592:	66 c0       	rjmp	.+204    	; 0x1660 <_ZN7Control11setEncodersEv+0x11c>
    1594:	83 30       	cpi	r24, 0x03	; 3
    1596:	09 f4       	brne	.+2      	; 0x159a <_ZN7Control11setEncodersEv+0x56>
    1598:	51 c0       	rjmp	.+162    	; 0x163c <_ZN7Control11setEncodersEv+0xf8>
    159a:	84 30       	cpi	r24, 0x04	; 4
    159c:	09 f0       	breq	.+2      	; 0x15a0 <_ZN7Control11setEncodersEv+0x5c>
    159e:	67 c0       	rjmp	.+206    	; 0x166e <_ZN7Control11setEncodersEv+0x12a>
    15a0:	45 e0       	ldi	r20, 0x05	; 5
    15a2:	61 e0       	ldi	r22, 0x01	; 1
    15a4:	ce 01       	movw	r24, r28
    15a6:	c0 96       	adiw	r24, 0x30	; 48
    15a8:	74 d3       	rcall	.+1768   	; 0x1c92 <_ZN14EncoderHandler11setMulN_s8tEaa>
    15aa:	45 e0       	ldi	r20, 0x05	; 5
    15ac:	61 e0       	ldi	r22, 0x01	; 1
    15ae:	ce 01       	movw	r24, r28
    15b0:	8b 5b       	subi	r24, 0xBB	; 187
    15b2:	9f 4f       	sbci	r25, 0xFF	; 255
    15b4:	6a d3       	rcall	.+1748   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    15b6:	45 e0       	ldi	r20, 0x05	; 5
    15b8:	61 e0       	ldi	r22, 0x01	; 1
    15ba:	ce 01       	movw	r24, r28
    15bc:	86 5a       	subi	r24, 0xA6	; 166
    15be:	9f 4f       	sbci	r25, 0xFF	; 255
    15c0:	68 d3       	rcall	.+1744   	; 0x1c92 <_ZN14EncoderHandler11setMulN_s8tEaa>
    15c2:	45 e0       	ldi	r20, 0x05	; 5
    15c4:	61 e0       	ldi	r22, 0x01	; 1
    15c6:	ce 01       	movw	r24, r28
    15c8:	81 59       	subi	r24, 0x91	; 145
    15ca:	9f 4f       	sbci	r25, 0xFF	; 255
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	5c c3       	rjmp	.+1720   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    15d2:	41 e0       	ldi	r20, 0x01	; 1
    15d4:	61 e0       	ldi	r22, 0x01	; 1
    15d6:	ce 01       	movw	r24, r28
    15d8:	c0 96       	adiw	r24, 0x30	; 48
    15da:	57 d3       	rcall	.+1710   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    15dc:	44 e1       	ldi	r20, 0x14	; 20
    15de:	50 e0       	ldi	r21, 0x00	; 0
    15e0:	61 e0       	ldi	r22, 0x01	; 1
    15e2:	70 e0       	ldi	r23, 0x00	; 0
    15e4:	ce 01       	movw	r24, r28
    15e6:	8b 5b       	subi	r24, 0xBB	; 187
    15e8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ea:	49 d3       	rcall	.+1682   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    15ec:	41 e0       	ldi	r20, 0x01	; 1
    15ee:	61 e0       	ldi	r22, 0x01	; 1
    15f0:	ce 01       	movw	r24, r28
    15f2:	86 5a       	subi	r24, 0xA6	; 166
    15f4:	9f 4f       	sbci	r25, 0xFF	; 255
    15f6:	49 d3       	rcall	.+1682   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    15f8:	44 e6       	ldi	r20, 0x64	; 100
    15fa:	50 e0       	ldi	r21, 0x00	; 0
    15fc:	17 c0       	rjmp	.+46     	; 0x162c <_ZN7Control11setEncodersEv+0xe8>
    15fe:	44 e1       	ldi	r20, 0x14	; 20
    1600:	50 e0       	ldi	r21, 0x00	; 0
    1602:	61 e0       	ldi	r22, 0x01	; 1
    1604:	70 e0       	ldi	r23, 0x00	; 0
    1606:	ce 01       	movw	r24, r28
    1608:	c0 96       	adiw	r24, 0x30	; 48
    160a:	39 d3       	rcall	.+1650   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    160c:	44 e1       	ldi	r20, 0x14	; 20
    160e:	50 e0       	ldi	r21, 0x00	; 0
    1610:	61 e0       	ldi	r22, 0x01	; 1
    1612:	70 e0       	ldi	r23, 0x00	; 0
    1614:	ce 01       	movw	r24, r28
    1616:	8b 5b       	subi	r24, 0xBB	; 187
    1618:	9f 4f       	sbci	r25, 0xFF	; 255
    161a:	31 d3       	rcall	.+1634   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    161c:	44 e1       	ldi	r20, 0x14	; 20
    161e:	61 e0       	ldi	r22, 0x01	; 1
    1620:	ce 01       	movw	r24, r28
    1622:	86 5a       	subi	r24, 0xA6	; 166
    1624:	9f 4f       	sbci	r25, 0xFF	; 255
    1626:	31 d3       	rcall	.+1634   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1628:	44 e1       	ldi	r20, 0x14	; 20
    162a:	50 e0       	ldi	r21, 0x00	; 0
    162c:	61 e0       	ldi	r22, 0x01	; 1
    162e:	70 e0       	ldi	r23, 0x00	; 0
    1630:	ce 01       	movw	r24, r28
    1632:	81 59       	subi	r24, 0x91	; 145
    1634:	9f 4f       	sbci	r25, 0xFF	; 255
    1636:	df 91       	pop	r29
    1638:	cf 91       	pop	r28
    163a:	21 c3       	rjmp	.+1602   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    163c:	45 e0       	ldi	r20, 0x05	; 5
    163e:	61 e0       	ldi	r22, 0x01	; 1
    1640:	ce 01       	movw	r24, r28
    1642:	c0 96       	adiw	r24, 0x30	; 48
    1644:	22 d3       	rcall	.+1604   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1646:	45 e0       	ldi	r20, 0x05	; 5
    1648:	61 e0       	ldi	r22, 0x01	; 1
    164a:	ce 01       	movw	r24, r28
    164c:	8b 5b       	subi	r24, 0xBB	; 187
    164e:	9f 4f       	sbci	r25, 0xFF	; 255
    1650:	1c d3       	rcall	.+1592   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1652:	45 e0       	ldi	r20, 0x05	; 5
    1654:	61 e0       	ldi	r22, 0x01	; 1
    1656:	ce 01       	movw	r24, r28
    1658:	86 5a       	subi	r24, 0xA6	; 166
    165a:	9f 4f       	sbci	r25, 0xFF	; 255
    165c:	16 d3       	rcall	.+1580   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    165e:	41 e0       	ldi	r20, 0x01	; 1
    1660:	61 e0       	ldi	r22, 0x01	; 1
    1662:	ce 01       	movw	r24, r28
    1664:	81 59       	subi	r24, 0x91	; 145
    1666:	9f 4f       	sbci	r25, 0xFF	; 255
    1668:	df 91       	pop	r29
    166a:	cf 91       	pop	r28
    166c:	12 c3       	rjmp	.+1572   	; 0x1c92 <_ZN14EncoderHandler11setMulN_s8tEaa>
    166e:	df 91       	pop	r29
    1670:	cf 91       	pop	r28
    1672:	08 95       	ret

00001674 <_ZN7Control4initEPN10Parameters8params_tE>:
    1674:	0f 93       	push	r16
    1676:	1f 93       	push	r17
    1678:	cf 93       	push	r28
    167a:	df 93       	push	r29
    167c:	ec 01       	movw	r28, r24
    167e:	fc 01       	movw	r30, r24
    1680:	ea 57       	subi	r30, 0x7A	; 122
    1682:	ff 4f       	sbci	r31, 0xFF	; 255
    1684:	71 83       	std	Z+1, r23	; 0x01
    1686:	60 83       	st	Z, r22
    1688:	83 e0       	ldi	r24, 0x03	; 3
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	0e 94 4e 46 	call	0x8c9c	; 0x8c9c <_Znwj>
    1690:	8c 01       	movw	r16, r24
    1692:	43 e0       	ldi	r20, 0x03	; 3
    1694:	62 e0       	ldi	r22, 0x02	; 2
    1696:	0e 94 b8 1a 	call	0x3570	; 0x3570 <_ZN6RotaryC1Ecc>
    169a:	fe 01       	movw	r30, r28
    169c:	e8 57       	subi	r30, 0x78	; 120
    169e:	ff 4f       	sbci	r31, 0xFF	; 255
    16a0:	11 83       	std	Z+1, r17	; 0x01
    16a2:	00 83       	st	Z, r16
    16a4:	42 e1       	ldi	r20, 0x12	; 18
    16a6:	b8 01       	movw	r22, r16
    16a8:	ce 01       	movw	r24, r28
    16aa:	c0 96       	adiw	r24, 0x30	; 48
    16ac:	e0 d2       	rcall	.+1472   	; 0x1c6e <_ZN14EncoderHandler4initEP6Rotaryh>
    16ae:	83 e0       	ldi	r24, 0x03	; 3
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	0e 94 4e 46 	call	0x8c9c	; 0x8c9c <_Znwj>
    16b6:	8c 01       	movw	r16, r24
    16b8:	45 e0       	ldi	r20, 0x05	; 5
    16ba:	64 e0       	ldi	r22, 0x04	; 4
    16bc:	0e 94 b8 1a 	call	0x3570	; 0x3570 <_ZN6RotaryC1Ecc>
    16c0:	fe 01       	movw	r30, r28
    16c2:	e6 57       	subi	r30, 0x76	; 118
    16c4:	ff 4f       	sbci	r31, 0xFF	; 255
    16c6:	11 83       	std	Z+1, r17	; 0x01
    16c8:	00 83       	st	Z, r16
    16ca:	41 e1       	ldi	r20, 0x11	; 17
    16cc:	b8 01       	movw	r22, r16
    16ce:	ce 01       	movw	r24, r28
    16d0:	8b 5b       	subi	r24, 0xBB	; 187
    16d2:	9f 4f       	sbci	r25, 0xFF	; 255
    16d4:	cc d2       	rcall	.+1432   	; 0x1c6e <_ZN14EncoderHandler4initEP6Rotaryh>
    16d6:	83 e0       	ldi	r24, 0x03	; 3
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	0e 94 4e 46 	call	0x8c9c	; 0x8c9c <_Znwj>
    16de:	8c 01       	movw	r16, r24
    16e0:	47 e0       	ldi	r20, 0x07	; 7
    16e2:	66 e0       	ldi	r22, 0x06	; 6
    16e4:	0e 94 b8 1a 	call	0x3570	; 0x3570 <_ZN6RotaryC1Ecc>
    16e8:	fe 01       	movw	r30, r28
    16ea:	e4 57       	subi	r30, 0x74	; 116
    16ec:	ff 4f       	sbci	r31, 0xFF	; 255
    16ee:	11 83       	std	Z+1, r17	; 0x01
    16f0:	00 83       	st	Z, r16
    16f2:	40 e1       	ldi	r20, 0x10	; 16
    16f4:	b8 01       	movw	r22, r16
    16f6:	ce 01       	movw	r24, r28
    16f8:	86 5a       	subi	r24, 0xA6	; 166
    16fa:	9f 4f       	sbci	r25, 0xFF	; 255
    16fc:	b8 d2       	rcall	.+1392   	; 0x1c6e <_ZN14EncoderHandler4initEP6Rotaryh>
    16fe:	83 e0       	ldi	r24, 0x03	; 3
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	0e 94 4e 46 	call	0x8c9c	; 0x8c9c <_Znwj>
    1706:	8c 01       	movw	r16, r24
    1708:	49 e0       	ldi	r20, 0x09	; 9
    170a:	68 e0       	ldi	r22, 0x08	; 8
    170c:	0e 94 b8 1a 	call	0x3570	; 0x3570 <_ZN6RotaryC1Ecc>
    1710:	fe 01       	movw	r30, r28
    1712:	e2 57       	subi	r30, 0x72	; 114
    1714:	ff 4f       	sbci	r31, 0xFF	; 255
    1716:	11 83       	std	Z+1, r17	; 0x01
    1718:	00 83       	st	Z, r16
    171a:	4f e0       	ldi	r20, 0x0F	; 15
    171c:	b8 01       	movw	r22, r16
    171e:	ce 01       	movw	r24, r28
    1720:	81 59       	subi	r24, 0x91	; 145
    1722:	9f 4f       	sbci	r25, 0xFF	; 255
    1724:	a4 d2       	rcall	.+1352   	; 0x1c6e <_ZN14EncoderHandler4initEP6Rotaryh>
    1726:	ce 01       	movw	r24, r28
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	1f 91       	pop	r17
    172e:	0f 91       	pop	r16
    1730:	09 cf       	rjmp	.-494    	; 0x1544 <_ZN7Control11setEncodersEv>

00001732 <_ZN7Control10readButtonEv>:
    1732:	ef 92       	push	r14
    1734:	ff 92       	push	r15
    1736:	0f 93       	push	r16
    1738:	1f 93       	push	r17
    173a:	cf 93       	push	r28
    173c:	df 93       	push	r29
    173e:	ec 01       	movw	r28, r24
    1740:	8e e0       	ldi	r24, 0x0E	; 14
    1742:	0e 94 c2 48 	call	0x9184	; 0x9184 <digitalRead>
    1746:	8e 01       	movw	r16, r28
    1748:	00 57       	subi	r16, 0x70	; 112
    174a:	1f 4f       	sbci	r17, 0xFF	; 255
    174c:	21 e0       	ldi	r18, 0x01	; 1
    174e:	89 2b       	or	r24, r25
    1750:	09 f4       	brne	.+2      	; 0x1754 <_ZN7Control10readButtonEv+0x22>
    1752:	20 e0       	ldi	r18, 0x00	; 0
    1754:	f8 01       	movw	r30, r16
    1756:	20 83       	st	Z, r18
    1758:	6a e0       	ldi	r22, 0x0A	; 10
    175a:	70 e0       	ldi	r23, 0x00	; 0
    175c:	80 e0       	ldi	r24, 0x00	; 0
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    1764:	f8 01       	movw	r30, r16
    1766:	80 81       	ld	r24, Z
    1768:	9e 01       	movw	r18, r28
    176a:	2f 56       	subi	r18, 0x6F	; 111
    176c:	3f 4f       	sbci	r19, 0xFF	; 255
    176e:	79 01       	movw	r14, r18
    1770:	81 11       	cpse	r24, r1
    1772:	0d c0       	rjmp	.+26     	; 0x178e <_ZN7Control10readButtonEv+0x5c>
    1774:	f9 01       	movw	r30, r18
    1776:	80 81       	ld	r24, Z
    1778:	88 23       	and	r24, r24
    177a:	49 f0       	breq	.+18     	; 0x178e <_ZN7Control10readButtonEv+0x5c>
    177c:	ce 01       	movw	r24, r28
    177e:	d2 de       	rcall	.-604    	; 0x1524 <_ZN7Control7incMenuEv>
    1780:	fe 01       	movw	r30, r28
    1782:	ec 57       	subi	r30, 0x7C	; 124
    1784:	ff 4f       	sbci	r31, 0xFF	; 255
    1786:	81 e0       	ldi	r24, 0x01	; 1
    1788:	80 83       	st	Z, r24
    178a:	ce 01       	movw	r24, r28
    178c:	db de       	rcall	.-586    	; 0x1544 <_ZN7Control11setEncodersEv>
    178e:	f8 01       	movw	r30, r16
    1790:	80 81       	ld	r24, Z
    1792:	f7 01       	movw	r30, r14
    1794:	80 83       	st	Z, r24
    1796:	df 91       	pop	r29
    1798:	cf 91       	pop	r28
    179a:	1f 91       	pop	r17
    179c:	0f 91       	pop	r16
    179e:	ff 90       	pop	r15
    17a0:	ef 90       	pop	r14
    17a2:	08 95       	ret

000017a4 <_ZN7Control4readEv>:
    17a4:	c6 cf       	rjmp	.-116    	; 0x1732 <_ZN7Control10readButtonEv>

000017a6 <_ZN7Control16updateParametersEv>:
    17a6:	0f 93       	push	r16
    17a8:	1f 93       	push	r17
    17aa:	cf 93       	push	r28
    17ac:	df 93       	push	r29
    17ae:	ec 01       	movw	r28, r24
    17b0:	8c 01       	movw	r16, r24
    17b2:	0a 57       	subi	r16, 0x7A	; 122
    17b4:	1f 4f       	sbci	r17, 0xFF	; 255
    17b6:	d8 01       	movw	r26, r16
    17b8:	ed 91       	ld	r30, X+
    17ba:	fc 91       	ld	r31, X
    17bc:	80 81       	ld	r24, Z
    17be:	82 30       	cpi	r24, 0x02	; 2
    17c0:	09 f4       	brne	.+2      	; 0x17c4 <_ZN7Control16updateParametersEv+0x1e>
    17c2:	9c c0       	rjmp	.+312    	; 0x18fc <_ZN7Control16updateParametersEv+0x156>
    17c4:	60 f5       	brcc	.+88     	; 0x181e <_ZN7Control16updateParametersEv+0x78>
    17c6:	88 23       	and	r24, r24
    17c8:	09 f4       	brne	.+2      	; 0x17cc <_ZN7Control16updateParametersEv+0x26>
    17ca:	5c c0       	rjmp	.+184    	; 0x1884 <_ZN7Control16updateParametersEv+0xde>
    17cc:	81 30       	cpi	r24, 0x01	; 1
    17ce:	09 f0       	breq	.+2      	; 0x17d2 <_ZN7Control16updateParametersEv+0x2c>
    17d0:	f5 c0       	rjmp	.+490    	; 0x19bc <_ZN7Control16updateParametersEv+0x216>
    17d2:	bf 01       	movw	r22, r30
    17d4:	69 5f       	subi	r22, 0xF9	; 249
    17d6:	7f 4f       	sbci	r23, 0xFF	; 255
    17d8:	2f ef       	ldi	r18, 0xFF	; 255
    17da:	40 e0       	ldi	r20, 0x00	; 0
    17dc:	ce 01       	movw	r24, r28
    17de:	c0 96       	adiw	r24, 0x30	; 48
    17e0:	02 d3       	rcall	.+1540   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    17e2:	f8 01       	movw	r30, r16
    17e4:	60 81       	ld	r22, Z
    17e6:	71 81       	ldd	r23, Z+1	; 0x01
    17e8:	68 5f       	subi	r22, 0xF8	; 248
    17ea:	7f 4f       	sbci	r23, 0xFF	; 255
    17ec:	20 ee       	ldi	r18, 0xE0	; 224
    17ee:	3e e2       	ldi	r19, 0x2E	; 46
    17f0:	4e e1       	ldi	r20, 0x1E	; 30
    17f2:	50 e0       	ldi	r21, 0x00	; 0
    17f4:	ce 01       	movw	r24, r28
    17f6:	8b 5b       	subi	r24, 0xBB	; 187
    17f8:	9f 4f       	sbci	r25, 0xFF	; 255
    17fa:	4f d2       	rcall	.+1182   	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    17fc:	d8 01       	movw	r26, r16
    17fe:	6d 91       	ld	r22, X+
    1800:	7c 91       	ld	r23, X
    1802:	66 5f       	subi	r22, 0xF6	; 246
    1804:	7f 4f       	sbci	r23, 0xFF	; 255
    1806:	2f ef       	ldi	r18, 0xFF	; 255
    1808:	40 e0       	ldi	r20, 0x00	; 0
    180a:	ce 01       	movw	r24, r28
    180c:	86 5a       	subi	r24, 0xA6	; 166
    180e:	9f 4f       	sbci	r25, 0xFF	; 255
    1810:	ea d2       	rcall	.+1492   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1812:	f8 01       	movw	r30, r16
    1814:	60 81       	ld	r22, Z
    1816:	71 81       	ldd	r23, Z+1	; 0x01
    1818:	65 5f       	subi	r22, 0xF5	; 245
    181a:	7f 4f       	sbci	r23, 0xFF	; 255
    181c:	c5 c0       	rjmp	.+394    	; 0x19a8 <_ZN7Control16updateParametersEv+0x202>
    181e:	83 30       	cpi	r24, 0x03	; 3
    1820:	09 f4       	brne	.+2      	; 0x1824 <_ZN7Control16updateParametersEv+0x7e>
    1822:	9f c0       	rjmp	.+318    	; 0x1962 <_ZN7Control16updateParametersEv+0x1bc>
    1824:	84 30       	cpi	r24, 0x04	; 4
    1826:	09 f0       	breq	.+2      	; 0x182a <_ZN7Control16updateParametersEv+0x84>
    1828:	c9 c0       	rjmp	.+402    	; 0x19bc <_ZN7Control16updateParametersEv+0x216>
    182a:	bf 01       	movw	r22, r30
    182c:	69 5e       	subi	r22, 0xE9	; 233
    182e:	7f 4f       	sbci	r23, 0xFF	; 255
    1830:	2f e7       	ldi	r18, 0x7F	; 127
    1832:	41 e8       	ldi	r20, 0x81	; 129
    1834:	ce 01       	movw	r24, r28
    1836:	c0 96       	adiw	r24, 0x30	; 48
    1838:	8c d2       	rcall	.+1304   	; 0x1d52 <_ZN14EncoderHandler12setValue_s8tEPaaa>
    183a:	d8 01       	movw	r26, r16
    183c:	6d 91       	ld	r22, X+
    183e:	7c 91       	ld	r23, X
    1840:	68 5e       	subi	r22, 0xE8	; 232
    1842:	7f 4f       	sbci	r23, 0xFF	; 255
    1844:	2f ef       	ldi	r18, 0xFF	; 255
    1846:	40 e0       	ldi	r20, 0x00	; 0
    1848:	ce 01       	movw	r24, r28
    184a:	8b 5b       	subi	r24, 0xBB	; 187
    184c:	9f 4f       	sbci	r25, 0xFF	; 255
    184e:	cb d2       	rcall	.+1430   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1850:	f8 01       	movw	r30, r16
    1852:	60 81       	ld	r22, Z
    1854:	71 81       	ldd	r23, Z+1	; 0x01
    1856:	67 5e       	subi	r22, 0xE7	; 231
    1858:	7f 4f       	sbci	r23, 0xFF	; 255
    185a:	2f e7       	ldi	r18, 0x7F	; 127
    185c:	41 e8       	ldi	r20, 0x81	; 129
    185e:	ce 01       	movw	r24, r28
    1860:	86 5a       	subi	r24, 0xA6	; 166
    1862:	9f 4f       	sbci	r25, 0xFF	; 255
    1864:	76 d2       	rcall	.+1260   	; 0x1d52 <_ZN14EncoderHandler12setValue_s8tEPaaa>
    1866:	d8 01       	movw	r26, r16
    1868:	6d 91       	ld	r22, X+
    186a:	7c 91       	ld	r23, X
    186c:	66 5e       	subi	r22, 0xE6	; 230
    186e:	7f 4f       	sbci	r23, 0xFF	; 255
    1870:	2f e0       	ldi	r18, 0x0F	; 15
    1872:	40 e0       	ldi	r20, 0x00	; 0
    1874:	ce 01       	movw	r24, r28
    1876:	81 59       	subi	r24, 0x91	; 145
    1878:	9f 4f       	sbci	r25, 0xFF	; 255
    187a:	df 91       	pop	r29
    187c:	cf 91       	pop	r28
    187e:	1f 91       	pop	r17
    1880:	0f 91       	pop	r16
    1882:	b1 c2       	rjmp	.+1378   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1884:	bf 01       	movw	r22, r30
    1886:	6f 5f       	subi	r22, 0xFF	; 255
    1888:	7f 4f       	sbci	r23, 0xFF	; 255
    188a:	23 e0       	ldi	r18, 0x03	; 3
    188c:	40 e0       	ldi	r20, 0x00	; 0
    188e:	ce 01       	movw	r24, r28
    1890:	c0 96       	adiw	r24, 0x30	; 48
    1892:	a9 d2       	rcall	.+1362   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1894:	f8 01       	movw	r30, r16
    1896:	60 81       	ld	r22, Z
    1898:	71 81       	ldd	r23, Z+1	; 0x01
    189a:	6e 5f       	subi	r22, 0xFE	; 254
    189c:	7f 4f       	sbci	r23, 0xFF	; 255
    189e:	20 e4       	ldi	r18, 0x40	; 64
    18a0:	3f e1       	ldi	r19, 0x1F	; 31
    18a2:	4e e1       	ldi	r20, 0x1E	; 30
    18a4:	50 e0       	ldi	r21, 0x00	; 0
    18a6:	ce 01       	movw	r24, r28
    18a8:	8b 5b       	subi	r24, 0xBB	; 187
    18aa:	9f 4f       	sbci	r25, 0xFF	; 255
    18ac:	f6 d1       	rcall	.+1004   	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    18ae:	d8 01       	movw	r26, r16
    18b0:	6d 91       	ld	r22, X+
    18b2:	7c 91       	ld	r23, X
    18b4:	6c 5f       	subi	r22, 0xFC	; 252
    18b6:	7f 4f       	sbci	r23, 0xFF	; 255
    18b8:	23 e0       	ldi	r18, 0x03	; 3
    18ba:	40 e0       	ldi	r20, 0x00	; 0
    18bc:	ce 01       	movw	r24, r28
    18be:	86 5a       	subi	r24, 0xA6	; 166
    18c0:	9f 4f       	sbci	r25, 0xFF	; 255
    18c2:	91 d2       	rcall	.+1314   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    18c4:	f8 01       	movw	r30, r16
    18c6:	60 81       	ld	r22, Z
    18c8:	71 81       	ldd	r23, Z+1	; 0x01
    18ca:	6b 5f       	subi	r22, 0xFB	; 251
    18cc:	7f 4f       	sbci	r23, 0xFF	; 255
    18ce:	20 ec       	ldi	r18, 0xC0	; 192
    18d0:	32 e1       	ldi	r19, 0x12	; 18
    18d2:	41 e0       	ldi	r20, 0x01	; 1
    18d4:	50 e0       	ldi	r21, 0x00	; 0
    18d6:	ce 01       	movw	r24, r28
    18d8:	81 59       	subi	r24, 0x91	; 145
    18da:	9f 4f       	sbci	r25, 0xFF	; 255
    18dc:	de d1       	rcall	.+956    	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    18de:	d8 01       	movw	r26, r16
    18e0:	ed 91       	ld	r30, X+
    18e2:	fc 91       	ld	r31, X
    18e4:	65 81       	ldd	r22, Z+5	; 0x05
    18e6:	76 81       	ldd	r23, Z+6	; 0x06
    18e8:	4a e0       	ldi	r20, 0x0A	; 10
    18ea:	50 e0       	ldi	r21, 0x00	; 0
    18ec:	84 e8       	ldi	r24, 0x84	; 132
    18ee:	99 e0       	ldi	r25, 0x09	; 9
    18f0:	df 91       	pop	r29
    18f2:	cf 91       	pop	r28
    18f4:	1f 91       	pop	r17
    18f6:	0f 91       	pop	r16
    18f8:	0c 94 e9 46 	jmp	0x8dd2	; 0x8dd2 <_ZN5Print7printlnEji>
    18fc:	bf 01       	movw	r22, r30
    18fe:	64 5f       	subi	r22, 0xF4	; 244
    1900:	7f 4f       	sbci	r23, 0xFF	; 255
    1902:	20 e7       	ldi	r18, 0x70	; 112
    1904:	37 e1       	ldi	r19, 0x17	; 23
    1906:	40 e0       	ldi	r20, 0x00	; 0
    1908:	50 e0       	ldi	r21, 0x00	; 0
    190a:	ce 01       	movw	r24, r28
    190c:	c0 96       	adiw	r24, 0x30	; 48
    190e:	c5 d1       	rcall	.+906    	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    1910:	d8 01       	movw	r26, r16
    1912:	6d 91       	ld	r22, X+
    1914:	7c 91       	ld	r23, X
    1916:	62 5f       	subi	r22, 0xF2	; 242
    1918:	7f 4f       	sbci	r23, 0xFF	; 255
    191a:	20 e7       	ldi	r18, 0x70	; 112
    191c:	37 e1       	ldi	r19, 0x17	; 23
    191e:	40 e0       	ldi	r20, 0x00	; 0
    1920:	50 e0       	ldi	r21, 0x00	; 0
    1922:	ce 01       	movw	r24, r28
    1924:	8b 5b       	subi	r24, 0xBB	; 187
    1926:	9f 4f       	sbci	r25, 0xFF	; 255
    1928:	b8 d1       	rcall	.+880    	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    192a:	f8 01       	movw	r30, r16
    192c:	60 81       	ld	r22, Z
    192e:	71 81       	ldd	r23, Z+1	; 0x01
    1930:	60 5f       	subi	r22, 0xF0	; 240
    1932:	7f 4f       	sbci	r23, 0xFF	; 255
    1934:	2f ef       	ldi	r18, 0xFF	; 255
    1936:	40 e0       	ldi	r20, 0x00	; 0
    1938:	ce 01       	movw	r24, r28
    193a:	86 5a       	subi	r24, 0xA6	; 166
    193c:	9f 4f       	sbci	r25, 0xFF	; 255
    193e:	53 d2       	rcall	.+1190   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1940:	d8 01       	movw	r26, r16
    1942:	6d 91       	ld	r22, X+
    1944:	7c 91       	ld	r23, X
    1946:	6f 5e       	subi	r22, 0xEF	; 239
    1948:	7f 4f       	sbci	r23, 0xFF	; 255
    194a:	20 e7       	ldi	r18, 0x70	; 112
    194c:	37 e1       	ldi	r19, 0x17	; 23
    194e:	40 e0       	ldi	r20, 0x00	; 0
    1950:	50 e0       	ldi	r21, 0x00	; 0
    1952:	ce 01       	movw	r24, r28
    1954:	81 59       	subi	r24, 0x91	; 145
    1956:	9f 4f       	sbci	r25, 0xFF	; 255
    1958:	df 91       	pop	r29
    195a:	cf 91       	pop	r28
    195c:	1f 91       	pop	r17
    195e:	0f 91       	pop	r16
    1960:	9c c1       	rjmp	.+824    	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    1962:	bf 01       	movw	r22, r30
    1964:	6d 5e       	subi	r22, 0xED	; 237
    1966:	7f 4f       	sbci	r23, 0xFF	; 255
    1968:	27 e0       	ldi	r18, 0x07	; 7
    196a:	40 e0       	ldi	r20, 0x00	; 0
    196c:	ce 01       	movw	r24, r28
    196e:	c0 96       	adiw	r24, 0x30	; 48
    1970:	3a d2       	rcall	.+1140   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1972:	f8 01       	movw	r30, r16
    1974:	60 81       	ld	r22, Z
    1976:	71 81       	ldd	r23, Z+1	; 0x01
    1978:	6c 5e       	subi	r22, 0xEC	; 236
    197a:	7f 4f       	sbci	r23, 0xFF	; 255
    197c:	2f ef       	ldi	r18, 0xFF	; 255
    197e:	40 e0       	ldi	r20, 0x00	; 0
    1980:	ce 01       	movw	r24, r28
    1982:	8b 5b       	subi	r24, 0xBB	; 187
    1984:	9f 4f       	sbci	r25, 0xFF	; 255
    1986:	2f d2       	rcall	.+1118   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1988:	d8 01       	movw	r26, r16
    198a:	6d 91       	ld	r22, X+
    198c:	7c 91       	ld	r23, X
    198e:	6b 5e       	subi	r22, 0xEB	; 235
    1990:	7f 4f       	sbci	r23, 0xFF	; 255
    1992:	2f ef       	ldi	r18, 0xFF	; 255
    1994:	40 e0       	ldi	r20, 0x00	; 0
    1996:	ce 01       	movw	r24, r28
    1998:	86 5a       	subi	r24, 0xA6	; 166
    199a:	9f 4f       	sbci	r25, 0xFF	; 255
    199c:	24 d2       	rcall	.+1096   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    199e:	f8 01       	movw	r30, r16
    19a0:	60 81       	ld	r22, Z
    19a2:	71 81       	ldd	r23, Z+1	; 0x01
    19a4:	6a 5e       	subi	r22, 0xEA	; 234
    19a6:	7f 4f       	sbci	r23, 0xFF	; 255
    19a8:	2f e7       	ldi	r18, 0x7F	; 127
    19aa:	41 e8       	ldi	r20, 0x81	; 129
    19ac:	ce 01       	movw	r24, r28
    19ae:	81 59       	subi	r24, 0x91	; 145
    19b0:	9f 4f       	sbci	r25, 0xFF	; 255
    19b2:	df 91       	pop	r29
    19b4:	cf 91       	pop	r28
    19b6:	1f 91       	pop	r17
    19b8:	0f 91       	pop	r16
    19ba:	cb c1       	rjmp	.+918    	; 0x1d52 <_ZN14EncoderHandler12setValue_s8tEPaaa>
    19bc:	df 91       	pop	r29
    19be:	cf 91       	pop	r28
    19c0:	1f 91       	pop	r17
    19c2:	0f 91       	pop	r16
    19c4:	08 95       	ret

000019c6 <_GLOBAL__sub_I__ZN7ControlC2Ev>:

    19c6:	cf 93       	push	r28
    19c8:	df 93       	push	r29
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    19ca:	69 ea       	ldi	r22, 0xA9	; 169
    19cc:	72 e0       	ldi	r23, 0x02	; 2
    19ce:	80 e6       	ldi	r24, 0x60	; 96
    19d0:	94 e0       	ldi	r25, 0x04	; 4
    19d2:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    19d6:	6e ea       	ldi	r22, 0xAE	; 174
    19d8:	72 e0       	ldi	r23, 0x02	; 2
    19da:	86 e6       	ldi	r24, 0x66	; 102
    19dc:	94 e0       	ldi	r25, 0x04	; 4
    19de:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    19e2:	63 eb       	ldi	r22, 0xB3	; 179
    19e4:	72 e0       	ldi	r23, 0x02	; 2
    19e6:	8c e6       	ldi	r24, 0x6C	; 108
    19e8:	94 e0       	ldi	r25, 0x04	; 4
    19ea:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    19ee:	68 eb       	ldi	r22, 0xB8	; 184
    19f0:	72 e0       	ldi	r23, 0x02	; 2
    19f2:	82 e7       	ldi	r24, 0x72	; 114
    19f4:	94 e0       	ldi	r25, 0x04	; 4
    19f6:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    19fa:	6b eb       	ldi	r22, 0xBB	; 187
    19fc:	72 e0       	ldi	r23, 0x02	; 2
    19fe:	88 e7       	ldi	r24, 0x78	; 120
    1a00:	94 e0       	ldi	r25, 0x04	; 4
    1a02:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    1a06:	61 ec       	ldi	r22, 0xC1	; 193
    1a08:	72 e0       	ldi	r23, 0x02	; 2
    1a0a:	88 e4       	ldi	r24, 0x48	; 72
    1a0c:	94 e0       	ldi	r25, 0x04	; 4
    1a0e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a12:	67 ec       	ldi	r22, 0xC7	; 199
    1a14:	72 e0       	ldi	r23, 0x02	; 2
    1a16:	8e e4       	ldi	r24, 0x4E	; 78
    1a18:	94 e0       	ldi	r25, 0x04	; 4
    1a1a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a1e:	6d ec       	ldi	r22, 0xCD	; 205
    1a20:	72 e0       	ldi	r23, 0x02	; 2
    1a22:	84 e5       	ldi	r24, 0x54	; 84
    1a24:	94 e0       	ldi	r25, 0x04	; 4
    1a26:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a2a:	67 ec       	ldi	r22, 0xC7	; 199
    1a2c:	72 e0       	ldi	r23, 0x02	; 2
    1a2e:	8a e5       	ldi	r24, 0x5A	; 90
    1a30:	94 e0       	ldi	r25, 0x04	; 4
    1a32:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    1a36:	62 ed       	ldi	r22, 0xD2	; 210
    1a38:	72 e0       	ldi	r23, 0x02	; 2
    1a3a:	80 e3       	ldi	r24, 0x30	; 48
    1a3c:	94 e0       	ldi	r25, 0x04	; 4
    1a3e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a42:	67 ec       	ldi	r22, 0xC7	; 199
    1a44:	72 e0       	ldi	r23, 0x02	; 2
    1a46:	86 e3       	ldi	r24, 0x36	; 54
    1a48:	94 e0       	ldi	r25, 0x04	; 4
    1a4a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a4e:	68 ed       	ldi	r22, 0xD8	; 216
    1a50:	72 e0       	ldi	r23, 0x02	; 2
    1a52:	8c e3       	ldi	r24, 0x3C	; 60
    1a54:	94 e0       	ldi	r25, 0x04	; 4
    1a56:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a5a:	6d ec       	ldi	r22, 0xCD	; 205
    1a5c:	72 e0       	ldi	r23, 0x02	; 2
    1a5e:	82 e4       	ldi	r24, 0x42	; 66
    1a60:	94 e0       	ldi	r25, 0x04	; 4
    1a62:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    1a66:	6d ed       	ldi	r22, 0xDD	; 221
    1a68:	72 e0       	ldi	r23, 0x02	; 2
    1a6a:	88 e1       	ldi	r24, 0x18	; 24
    1a6c:	94 e0       	ldi	r25, 0x04	; 4
    1a6e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a72:	62 ee       	ldi	r22, 0xE2	; 226
    1a74:	72 e0       	ldi	r23, 0x02	; 2
    1a76:	8e e1       	ldi	r24, 0x1E	; 30
    1a78:	94 e0       	ldi	r25, 0x04	; 4
    1a7a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a7e:	67 ee       	ldi	r22, 0xE7	; 231
    1a80:	72 e0       	ldi	r23, 0x02	; 2
    1a82:	84 e2       	ldi	r24, 0x24	; 36
    1a84:	94 e0       	ldi	r25, 0x04	; 4
    1a86:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1a8a:	6c ee       	ldi	r22, 0xEC	; 236
    1a8c:	72 e0       	ldi	r23, 0x02	; 2
    1a8e:	8a e2       	ldi	r24, 0x2A	; 42
    1a90:	94 e0       	ldi	r25, 0x04	; 4
    1a92:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    1a96:	62 ed       	ldi	r22, 0xD2	; 210
    1a98:	72 e0       	ldi	r23, 0x02	; 2
    1a9a:	80 e0       	ldi	r24, 0x00	; 0
    1a9c:	94 e0       	ldi	r25, 0x04	; 4
    1a9e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1aa2:	61 ef       	ldi	r22, 0xF1	; 241
    1aa4:	72 e0       	ldi	r23, 0x02	; 2
    1aa6:	86 e0       	ldi	r24, 0x06	; 6
    1aa8:	94 e0       	ldi	r25, 0x04	; 4
    1aaa:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1aae:	66 ef       	ldi	r22, 0xF6	; 246
    1ab0:	72 e0       	ldi	r23, 0x02	; 2
    1ab2:	8c e0       	ldi	r24, 0x0C	; 12
    1ab4:	94 e0       	ldi	r25, 0x04	; 4
    1ab6:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1aba:	6d ec       	ldi	r22, 0xCD	; 205
    1abc:	72 e0       	ldi	r23, 0x02	; 2
    1abe:	82 e1       	ldi	r24, 0x12	; 18
    1ac0:	94 e0       	ldi	r25, 0x04	; 4
    1ac2:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    1ac6:	6d ef       	ldi	r22, 0xFD	; 253
    1ac8:	72 e0       	ldi	r23, 0x02	; 2
    1aca:	88 ee       	ldi	r24, 0xE8	; 232
    1acc:	93 e0       	ldi	r25, 0x03	; 3
    1ace:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1ad2:	67 e0       	ldi	r22, 0x07	; 7
    1ad4:	73 e0       	ldi	r23, 0x03	; 3
    1ad6:	8e ee       	ldi	r24, 0xEE	; 238
    1ad8:	93 e0       	ldi	r25, 0x03	; 3
    1ada:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1ade:	6f e0       	ldi	r22, 0x0F	; 15
    1ae0:	73 e0       	ldi	r23, 0x03	; 3
    1ae2:	84 ef       	ldi	r24, 0xF4	; 244
    1ae4:	93 e0       	ldi	r25, 0x03	; 3
    1ae6:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1aea:	68 e1       	ldi	r22, 0x18	; 24
    1aec:	73 e0       	ldi	r23, 0x03	; 3
    1aee:	8a ef       	ldi	r24, 0xFA	; 250
    1af0:	93 e0       	ldi	r25, 0x03	; 3
    1af2:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    1af6:	60 e2       	ldi	r22, 0x20	; 32
    1af8:	73 e0       	ldi	r23, 0x03	; 3
    1afa:	80 ed       	ldi	r24, 0xD0	; 208
    1afc:	93 e0       	ldi	r25, 0x03	; 3
    1afe:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1b02:	64 e2       	ldi	r22, 0x24	; 36
    1b04:	73 e0       	ldi	r23, 0x03	; 3
    1b06:	86 ed       	ldi	r24, 0xD6	; 214
    1b08:	93 e0       	ldi	r25, 0x03	; 3
    1b0a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1b0e:	68 e2       	ldi	r22, 0x28	; 40
    1b10:	73 e0       	ldi	r23, 0x03	; 3
    1b12:	8c ed       	ldi	r24, 0xDC	; 220
    1b14:	93 e0       	ldi	r25, 0x03	; 3
    1b16:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1b1a:	6c e2       	ldi	r22, 0x2C	; 44
    1b1c:	73 e0       	ldi	r23, 0x03	; 3
    1b1e:	82 ee       	ldi	r24, 0xE2	; 226
    1b20:	93 e0       	ldi	r25, 0x03	; 3
    1b22:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    1b26:	60 e3       	ldi	r22, 0x30	; 48
    1b28:	73 e0       	ldi	r23, 0x03	; 3
    1b2a:	80 ea       	ldi	r24, 0xA0	; 160
    1b2c:	93 e0       	ldi	r25, 0x03	; 3
    1b2e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1b32:	c0 e0       	ldi	r28, 0x00	; 0
    1b34:	d0 e0       	ldi	r29, 0x00	; 0
    1b36:	26 96       	adiw	r28, 0x06	; 6
    1b38:	63 e8       	ldi	r22, 0x83	; 131
    1b3a:	73 e0       	ldi	r23, 0x03	; 3
    1b3c:	ce 01       	movw	r24, r28
    1b3e:	80 56       	subi	r24, 0x60	; 96
    1b40:	9c 4f       	sbci	r25, 0xFC	; 252
    1b42:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    1b46:	ca 32       	cpi	r28, 0x2A	; 42
    1b48:	d1 05       	cpc	r29, r1
    1b4a:	a9 f7       	brne	.-22     	; 0x1b36 <_GLOBAL__sub_I__ZN7ControlC2Ev+0x170>
    1b4c:	df 91       	pop	r29
    1b4e:	cf 91       	pop	r28
    1b50:	08 95       	ret

00001b52 <_GLOBAL__sub_D__ZN7ControlC2Ev>:
    1b52:	cf 93       	push	r28
    1b54:	df 93       	push	r29
    1b56:	c0 ed       	ldi	r28, 0xD0	; 208
    1b58:	d3 e0       	ldi	r29, 0x03	; 3
    1b5a:	26 97       	sbiw	r28, 0x06	; 6
    1b5c:	ce 01       	movw	r24, r28
    1b5e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1b62:	83 e0       	ldi	r24, 0x03	; 3
    1b64:	c0 3a       	cpi	r28, 0xA0	; 160
    1b66:	d8 07       	cpc	r29, r24
    1b68:	c1 f7       	brne	.-16     	; 0x1b5a <_GLOBAL__sub_D__ZN7ControlC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    1b6a:	82 ee       	ldi	r24, 0xE2	; 226
    1b6c:	93 e0       	ldi	r25, 0x03	; 3
    1b6e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1b72:	8c ed       	ldi	r24, 0xDC	; 220
    1b74:	93 e0       	ldi	r25, 0x03	; 3
    1b76:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1b7a:	86 ed       	ldi	r24, 0xD6	; 214
    1b7c:	93 e0       	ldi	r25, 0x03	; 3
    1b7e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1b82:	80 ed       	ldi	r24, 0xD0	; 208
    1b84:	93 e0       	ldi	r25, 0x03	; 3
    1b86:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    1b8a:	8a ef       	ldi	r24, 0xFA	; 250
    1b8c:	93 e0       	ldi	r25, 0x03	; 3
    1b8e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1b92:	84 ef       	ldi	r24, 0xF4	; 244
    1b94:	93 e0       	ldi	r25, 0x03	; 3
    1b96:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1b9a:	8e ee       	ldi	r24, 0xEE	; 238
    1b9c:	93 e0       	ldi	r25, 0x03	; 3
    1b9e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1ba2:	88 ee       	ldi	r24, 0xE8	; 232
    1ba4:	93 e0       	ldi	r25, 0x03	; 3
    1ba6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    1baa:	82 e1       	ldi	r24, 0x12	; 18
    1bac:	94 e0       	ldi	r25, 0x04	; 4
    1bae:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1bb2:	8c e0       	ldi	r24, 0x0C	; 12
    1bb4:	94 e0       	ldi	r25, 0x04	; 4
    1bb6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1bba:	86 e0       	ldi	r24, 0x06	; 6
    1bbc:	94 e0       	ldi	r25, 0x04	; 4
    1bbe:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1bc2:	80 e0       	ldi	r24, 0x00	; 0
    1bc4:	94 e0       	ldi	r25, 0x04	; 4
    1bc6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    1bca:	8a e2       	ldi	r24, 0x2A	; 42
    1bcc:	94 e0       	ldi	r25, 0x04	; 4
    1bce:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1bd2:	84 e2       	ldi	r24, 0x24	; 36
    1bd4:	94 e0       	ldi	r25, 0x04	; 4
    1bd6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1bda:	8e e1       	ldi	r24, 0x1E	; 30
    1bdc:	94 e0       	ldi	r25, 0x04	; 4
    1bde:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1be2:	88 e1       	ldi	r24, 0x18	; 24
    1be4:	94 e0       	ldi	r25, 0x04	; 4
    1be6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    1bea:	82 e4       	ldi	r24, 0x42	; 66
    1bec:	94 e0       	ldi	r25, 0x04	; 4
    1bee:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1bf2:	8c e3       	ldi	r24, 0x3C	; 60
    1bf4:	94 e0       	ldi	r25, 0x04	; 4
    1bf6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1bfa:	86 e3       	ldi	r24, 0x36	; 54
    1bfc:	94 e0       	ldi	r25, 0x04	; 4
    1bfe:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1c02:	80 e3       	ldi	r24, 0x30	; 48
    1c04:	94 e0       	ldi	r25, 0x04	; 4
    1c06:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    1c0a:	8a e5       	ldi	r24, 0x5A	; 90
    1c0c:	94 e0       	ldi	r25, 0x04	; 4
    1c0e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1c12:	84 e5       	ldi	r24, 0x54	; 84
    1c14:	94 e0       	ldi	r25, 0x04	; 4
    1c16:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1c1a:	8e e4       	ldi	r24, 0x4E	; 78
    1c1c:	94 e0       	ldi	r25, 0x04	; 4
    1c1e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1c22:	88 e4       	ldi	r24, 0x48	; 72
    1c24:	94 e0       	ldi	r25, 0x04	; 4
    1c26:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1c2a:	ce e7       	ldi	r28, 0x7E	; 126
    1c2c:	d4 e0       	ldi	r29, 0x04	; 4
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    1c2e:	26 97       	sbiw	r28, 0x06	; 6
    1c30:	ce 01       	movw	r24, r28
    1c32:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    1c36:	84 e0       	ldi	r24, 0x04	; 4
    1c38:	c0 36       	cpi	r28, 0x60	; 96
    1c3a:	d8 07       	cpc	r29, r24
    1c3c:	c1 f7       	brne	.-16     	; 0x1c2e <_GLOBAL__sub_D__ZN7ControlC2Ev+0xdc>
    1c3e:	df 91       	pop	r29
    1c40:	cf 91       	pop	r28
    1c42:	08 95       	ret

00001c44 <_ZN14EncoderHandlerC1Ev>:
 * EncoderHandler implementation
 * 
 * This class provides additional functionality to the Encoder library
 */

EncoderHandler::EncoderHandler(){
    1c44:	cf 93       	push	r28
    1c46:	df 93       	push	r29
    1c48:	ec 01       	movw	r28, r24
    1c4a:	0e 94 b7 1a 	call	0x356e	; 0x356e <_ZN6RotaryC1Ev>
	bMul_u16t = 1;
    1c4e:	81 e0       	ldi	r24, 0x01	; 1
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	98 87       	std	Y+8, r25	; 0x08
    1c54:	8f 83       	std	Y+7, r24	; 0x07
	nMul_u16t = 10;
    1c56:	8a e0       	ldi	r24, 0x0A	; 10
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	9a 87       	std	Y+10, r25	; 0x0a
    1c5c:	89 87       	std	Y+9, r24	; 0x09
	bMul_u8t = 1;
    1c5e:	91 e0       	ldi	r25, 0x01	; 1
    1c60:	9b 87       	std	Y+11, r25	; 0x0b
	nMul_u8t = 10;
    1c62:	8c 87       	std	Y+12, r24	; 0x0c
	bMul_s8t = 1;
    1c64:	9d 87       	std	Y+13, r25	; 0x0d
	nMul_s8t = 10; 
    1c66:	8e 87       	std	Y+14, r24	; 0x0e
}
    1c68:	df 91       	pop	r29
    1c6a:	cf 91       	pop	r28
    1c6c:	08 95       	ret

00001c6e <_ZN14EncoderHandler4initEP6Rotaryh>:

void EncoderHandler::init(Rotary* r, byte bP) {
	enc = r; 
    1c6e:	fc 01       	movw	r30, r24
    1c70:	75 83       	std	Z+5, r23	; 0x05
    1c72:	64 83       	std	Z+4, r22	; 0x04
	bPin = bP;
    1c74:	46 83       	std	Z+6, r20	; 0x06
	pinMode(bPin, INPUT_PULLUP);
    1c76:	62 e0       	ldi	r22, 0x02	; 2
    1c78:	84 2f       	mov	r24, r20
    1c7a:	0c 94 58 48 	jmp	0x90b0	; 0x90b0 <pinMode>

00001c7e <_ZN14EncoderHandler11setMul_u16tEjj>:
	bMulF = bM;
	nMulF = nM;
}*/

void EncoderHandler::setMul_u16t(uint16_t bM, uint16_t nM) {
	bMul_u16t = bM;
    1c7e:	fc 01       	movw	r30, r24
    1c80:	70 87       	std	Z+8, r23	; 0x08
    1c82:	67 83       	std	Z+7, r22	; 0x07
	nMul_u16t = nM;
    1c84:	52 87       	std	Z+10, r21	; 0x0a
    1c86:	41 87       	std	Z+9, r20	; 0x09
    1c88:	08 95       	ret

00001c8a <_ZN14EncoderHandler11setMulN_u8tEhh>:
}

void EncoderHandler::setMulN_u8t(uint8_t bM, uint8_t nM) {
	bMul_u8t = bM;
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	63 87       	std	Z+11, r22	; 0x0b
	nMul_u8t = nM;
    1c8e:	44 87       	std	Z+12, r20	; 0x0c
    1c90:	08 95       	ret

00001c92 <_ZN14EncoderHandler11setMulN_s8tEaa>:
}

void EncoderHandler::setMulN_s8t(int8_t bM, int8_t nM) {
	bMul_s8t = bM;
    1c92:	fc 01       	movw	r30, r24
    1c94:	65 87       	std	Z+13, r22	; 0x0d
	nMul_s8t = nM;
    1c96:	46 87       	std	Z+14, r20	; 0x0e
    1c98:	08 95       	ret

00001c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>:
		changed = true;
	}
	//changed = false; // --> set from outside (where?)
}*/

void EncoderHandler::setValue_u16t(uint16_t* v, uint16_t min, uint16_t max) {
    1c9a:	cf 92       	push	r12
    1c9c:	df 92       	push	r13
    1c9e:	ef 92       	push	r14
    1ca0:	ff 92       	push	r15
    1ca2:	0f 93       	push	r16
    1ca4:	1f 93       	push	r17
    1ca6:	cf 93       	push	r28
    1ca8:	df 93       	push	r29
    1caa:	ec 01       	movw	r28, r24
    1cac:	7b 01       	movw	r14, r22
    1cae:	8a 01       	movw	r16, r20
    1cb0:	69 01       	movw	r12, r18
	button = digitalRead(bPin);
    1cb2:	8e 81       	ldd	r24, Y+6	; 0x06
    1cb4:	0e 94 c2 48 	call	0x9184	; 0x9184 <digitalRead>
    1cb8:	21 e0       	ldi	r18, 0x01	; 1
    1cba:	89 2b       	or	r24, r25
    1cbc:	09 f4       	brne	.+2      	; 0x1cc0 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x26>
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	2c 8b       	std	Y+20, r18	; 0x14
	
	result = enc->process();
    1cc2:	8c 81       	ldd	r24, Y+4	; 0x04
    1cc4:	9d 81       	ldd	r25, Y+5	; 0x05
    1cc6:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <_ZN6Rotary7processEv>
    1cca:	8b 8b       	std	Y+19, r24	; 0x13
	if(result == DIR_CW){
    1ccc:	80 31       	cpi	r24, 0x10	; 16
    1cce:	d9 f4       	brne	.+54     	; 0x1d06 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x6c>
	if(m) return nMulF;
	else return bMulF;
}*/

uint16_t EncoderHandler::returnMul_u16t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_u16t;
    1cd0:	8c 89       	ldd	r24, Y+20	; 0x14
    1cd2:	88 23       	and	r24, r24
    1cd4:	19 f0       	breq	.+6      	; 0x1cdc <_ZN14EncoderHandler13setValue_u16tEPjjj+0x42>
    1cd6:	29 85       	ldd	r18, Y+9	; 0x09
    1cd8:	3a 85       	ldd	r19, Y+10	; 0x0a
    1cda:	02 c0       	rjmp	.+4      	; 0x1ce0 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x46>
	else return bMul_u16t;
    1cdc:	2f 81       	ldd	r18, Y+7	; 0x07
    1cde:	38 85       	ldd	r19, Y+8	; 0x08
void EncoderHandler::setValue_u16t(uint16_t* v, uint16_t min, uint16_t max) {
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_u16t(button);
    1ce0:	f7 01       	movw	r30, r14
    1ce2:	80 81       	ld	r24, Z
    1ce4:	91 81       	ldd	r25, Z+1	; 0x01
    1ce6:	82 0f       	add	r24, r18
    1ce8:	93 1f       	adc	r25, r19
		else return f;
	}
}*/

uint16_t EncoderHandler::clip_u16t(uint16_t v, uint16_t mn, uint16_t mx){
	if(v < mn){
    1cea:	80 17       	cp	r24, r16
    1cec:	91 07       	cpc	r25, r17
    1cee:	28 f0       	brcs	.+10     	; 0x1cfa <_ZN14EncoderHandler13setValue_u16tEPjjj+0x60>
    1cf0:	c8 16       	cp	r12, r24
    1cf2:	d9 06       	cpc	r13, r25
    1cf4:	18 f4       	brcc	.+6      	; 0x1cfc <_ZN14EncoderHandler13setValue_u16tEPjjj+0x62>
    1cf6:	c6 01       	movw	r24, r12
    1cf8:	01 c0       	rjmp	.+2      	; 0x1cfc <_ZN14EncoderHandler13setValue_u16tEPjjj+0x62>
    1cfa:	c8 01       	movw	r24, r16
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_u16t(button);
		*v = clip_u16t(*v, min, max);
    1cfc:	f7 01       	movw	r30, r14
    1cfe:	91 83       	std	Z+1, r25	; 0x01
    1d00:	80 83       	st	Z, r24
		changed = true;
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1d06:	8b 89       	ldd	r24, Y+19	; 0x13
    1d08:	80 32       	cpi	r24, 0x20	; 32
    1d0a:	d1 f4       	brne	.+52     	; 0x1d40 <_ZN14EncoderHandler13setValue_u16tEPjjj+0xa6>
	if(m) return nMulF;
	else return bMulF;
}*/

uint16_t EncoderHandler::returnMul_u16t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_u16t;
    1d0c:	8c 89       	ldd	r24, Y+20	; 0x14
    1d0e:	88 23       	and	r24, r24
    1d10:	19 f0       	breq	.+6      	; 0x1d18 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x7e>
    1d12:	29 85       	ldd	r18, Y+9	; 0x09
    1d14:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d16:	02 c0       	rjmp	.+4      	; 0x1d1c <_ZN14EncoderHandler13setValue_u16tEPjjj+0x82>
	else return bMul_u16t;
    1d18:	2f 81       	ldd	r18, Y+7	; 0x07
    1d1a:	38 85       	ldd	r19, Y+8	; 0x08
		*v += returnMul_u16t(button);
		*v = clip_u16t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_u16t(button);
    1d1c:	f7 01       	movw	r30, r14
    1d1e:	80 81       	ld	r24, Z
    1d20:	91 81       	ldd	r25, Z+1	; 0x01
    1d22:	82 1b       	sub	r24, r18
    1d24:	93 0b       	sbc	r25, r19
		else return f;
	}
}*/

uint16_t EncoderHandler::clip_u16t(uint16_t v, uint16_t mn, uint16_t mx){
	if(v < mn){
    1d26:	80 17       	cp	r24, r16
    1d28:	91 07       	cpc	r25, r17
    1d2a:	28 f0       	brcs	.+10     	; 0x1d36 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x9c>
    1d2c:	86 01       	movw	r16, r12
    1d2e:	8c 15       	cp	r24, r12
    1d30:	9d 05       	cpc	r25, r13
    1d32:	08 f4       	brcc	.+2      	; 0x1d36 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x9c>
    1d34:	8c 01       	movw	r16, r24
		*v = clip_u16t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_u16t(button);
		*v = clip_u16t(*v, min, max);
    1d36:	f7 01       	movw	r30, r14
    1d38:	11 83       	std	Z+1, r17	; 0x01
    1d3a:	00 83       	st	Z, r16
		changed = true;
    1d3c:	81 e0       	ldi	r24, 0x01	; 1
    1d3e:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1d40:	df 91       	pop	r29
    1d42:	cf 91       	pop	r28
    1d44:	1f 91       	pop	r17
    1d46:	0f 91       	pop	r16
    1d48:	ff 90       	pop	r15
    1d4a:	ef 90       	pop	r14
    1d4c:	df 90       	pop	r13
    1d4e:	cf 90       	pop	r12
    1d50:	08 95       	ret

00001d52 <_ZN14EncoderHandler12setValue_s8tEPaaa>:

void EncoderHandler::setValue_s8t(int8_t* v, int8_t min, int8_t max) {
    1d52:	ef 92       	push	r14
    1d54:	ff 92       	push	r15
    1d56:	0f 93       	push	r16
    1d58:	1f 93       	push	r17
    1d5a:	cf 93       	push	r28
    1d5c:	df 93       	push	r29
    1d5e:	ec 01       	movw	r28, r24
    1d60:	7b 01       	movw	r14, r22
    1d62:	14 2f       	mov	r17, r20
    1d64:	02 2f       	mov	r16, r18
	button = digitalRead(bPin);
    1d66:	8e 81       	ldd	r24, Y+6	; 0x06
    1d68:	0e 94 c2 48 	call	0x9184	; 0x9184 <digitalRead>
    1d6c:	21 e0       	ldi	r18, 0x01	; 1
    1d6e:	89 2b       	or	r24, r25
    1d70:	09 f4       	brne	.+2      	; 0x1d74 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x22>
    1d72:	20 e0       	ldi	r18, 0x00	; 0
    1d74:	2c 8b       	std	Y+20, r18	; 0x14
	
	result = enc->process();
    1d76:	8c 81       	ldd	r24, Y+4	; 0x04
    1d78:	9d 81       	ldd	r25, Y+5	; 0x05
    1d7a:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <_ZN6Rotary7processEv>
    1d7e:	8b 8b       	std	Y+19, r24	; 0x13
	if(result == DIR_CW){
    1d80:	80 31       	cpi	r24, 0x10	; 16
    1d82:	a1 f4       	brne	.+40     	; 0x1dac <_ZN14EncoderHandler12setValue_s8tEPaaa+0x5a>
	if(m) return nMul_u8t;
	else return bMul_u8t;
}

int8_t EncoderHandler::returnMul_s8t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_s8t;
    1d84:	8c 89       	ldd	r24, Y+20	; 0x14
    1d86:	88 23       	and	r24, r24
    1d88:	11 f0       	breq	.+4      	; 0x1d8e <_ZN14EncoderHandler12setValue_s8tEPaaa+0x3c>
    1d8a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d8c:	01 c0       	rjmp	.+2      	; 0x1d90 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x3e>
	else return bMul_s8t;
    1d8e:	9d 85       	ldd	r25, Y+13	; 0x0d
void EncoderHandler::setValue_s8t(int8_t* v, int8_t min, int8_t max) {
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_s8t(button);
    1d90:	f7 01       	movw	r30, r14
    1d92:	80 81       	ld	r24, Z
    1d94:	89 0f       	add	r24, r25
		else return v;
	}
}

int8_t EncoderHandler::clip_s8t(int8_t v, int8_t mn, int8_t mx){
	if(v < mn){
    1d96:	81 17       	cp	r24, r17
    1d98:	24 f0       	brlt	.+8      	; 0x1da2 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x50>
    1d9a:	08 17       	cp	r16, r24
    1d9c:	1c f4       	brge	.+6      	; 0x1da4 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x52>
    1d9e:	80 2f       	mov	r24, r16
    1da0:	01 c0       	rjmp	.+2      	; 0x1da4 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x52>
    1da2:	81 2f       	mov	r24, r17
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_s8t(button);
		*v = clip_s8t(*v, min, max);
    1da4:	f7 01       	movw	r30, r14
    1da6:	80 83       	st	Z, r24
		changed = true;
    1da8:	81 e0       	ldi	r24, 0x01	; 1
    1daa:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1dac:	8b 89       	ldd	r24, Y+19	; 0x13
    1dae:	80 32       	cpi	r24, 0x20	; 32
    1db0:	99 f4       	brne	.+38     	; 0x1dd8 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x86>
	if(m) return nMul_u8t;
	else return bMul_u8t;
}

int8_t EncoderHandler::returnMul_s8t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_s8t;
    1db2:	8c 89       	ldd	r24, Y+20	; 0x14
    1db4:	88 23       	and	r24, r24
    1db6:	11 f0       	breq	.+4      	; 0x1dbc <_ZN14EncoderHandler12setValue_s8tEPaaa+0x6a>
    1db8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dba:	01 c0       	rjmp	.+2      	; 0x1dbe <_ZN14EncoderHandler12setValue_s8tEPaaa+0x6c>
	else return bMul_s8t;
    1dbc:	9d 85       	ldd	r25, Y+13	; 0x0d
		*v += returnMul_s8t(button);
		*v = clip_s8t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_s8t(button);
    1dbe:	f7 01       	movw	r30, r14
    1dc0:	80 81       	ld	r24, Z
    1dc2:	89 1b       	sub	r24, r25
		else return v;
	}
}

int8_t EncoderHandler::clip_s8t(int8_t v, int8_t mn, int8_t mx){
	if(v < mn){
    1dc4:	81 17       	cp	r24, r17
    1dc6:	24 f0       	brlt	.+8      	; 0x1dd0 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x7e>
    1dc8:	10 2f       	mov	r17, r16
    1dca:	80 17       	cp	r24, r16
    1dcc:	0c f4       	brge	.+2      	; 0x1dd0 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x7e>
    1dce:	18 2f       	mov	r17, r24
		*v = clip_s8t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_s8t(button);
		*v = clip_s8t(*v, min, max);
    1dd0:	f7 01       	movw	r30, r14
    1dd2:	10 83       	st	Z, r17
		changed = true;
    1dd4:	81 e0       	ldi	r24, 0x01	; 1
    1dd6:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1dd8:	df 91       	pop	r29
    1dda:	cf 91       	pop	r28
    1ddc:	1f 91       	pop	r17
    1dde:	0f 91       	pop	r16
    1de0:	ff 90       	pop	r15
    1de2:	ef 90       	pop	r14
    1de4:	08 95       	ret

00001de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>:

void EncoderHandler::setValue_u8t(uint8_t* v, uint8_t min, uint8_t max) {
    1de6:	ef 92       	push	r14
    1de8:	ff 92       	push	r15
    1dea:	0f 93       	push	r16
    1dec:	1f 93       	push	r17
    1dee:	cf 93       	push	r28
    1df0:	df 93       	push	r29
    1df2:	ec 01       	movw	r28, r24
    1df4:	7b 01       	movw	r14, r22
    1df6:	14 2f       	mov	r17, r20
    1df8:	02 2f       	mov	r16, r18
	button = digitalRead(bPin);
    1dfa:	8e 81       	ldd	r24, Y+6	; 0x06
    1dfc:	0e 94 c2 48 	call	0x9184	; 0x9184 <digitalRead>
    1e00:	21 e0       	ldi	r18, 0x01	; 1
    1e02:	89 2b       	or	r24, r25
    1e04:	09 f4       	brne	.+2      	; 0x1e08 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x22>
    1e06:	20 e0       	ldi	r18, 0x00	; 0
    1e08:	2c 8b       	std	Y+20, r18	; 0x14
	result = enc->process();
    1e0a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e0c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e0e:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <_ZN6Rotary7processEv>
    1e12:	8b 8b       	std	Y+19, r24	; 0x13
	if(result == DIR_CW){
    1e14:	80 31       	cpi	r24, 0x10	; 16
    1e16:	a1 f4       	brne	.+40     	; 0x1e40 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x5a>
	if(m) return nMul_u16t;
	else return bMul_u16t;
}

uint8_t EncoderHandler::returnMul_u8t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_u8t;
    1e18:	8c 89       	ldd	r24, Y+20	; 0x14
    1e1a:	88 23       	and	r24, r24
    1e1c:	11 f0       	breq	.+4      	; 0x1e22 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x3c>
    1e1e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e20:	01 c0       	rjmp	.+2      	; 0x1e24 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x3e>
	else return bMul_u8t;
    1e22:	9b 85       	ldd	r25, Y+11	; 0x0b

void EncoderHandler::setValue_u8t(uint8_t* v, uint8_t min, uint8_t max) {
	button = digitalRead(bPin);
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_u8t(button);
    1e24:	f7 01       	movw	r30, r14
    1e26:	80 81       	ld	r24, Z
    1e28:	89 0f       	add	r24, r25
		else return v;
	}
}

uint8_t EncoderHandler::clip_u8t(uint8_t v, uint8_t mn, uint8_t mx){
	if(v < mn){
    1e2a:	81 17       	cp	r24, r17
    1e2c:	20 f0       	brcs	.+8      	; 0x1e36 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x50>
    1e2e:	08 17       	cp	r16, r24
    1e30:	18 f4       	brcc	.+6      	; 0x1e38 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x52>
    1e32:	80 2f       	mov	r24, r16
    1e34:	01 c0       	rjmp	.+2      	; 0x1e38 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x52>
    1e36:	81 2f       	mov	r24, r17
void EncoderHandler::setValue_u8t(uint8_t* v, uint8_t min, uint8_t max) {
	button = digitalRead(bPin);
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_u8t(button);
		*v = clip_u8t(*v, min, max);
    1e38:	f7 01       	movw	r30, r14
    1e3a:	80 83       	st	Z, r24
		changed = true;
    1e3c:	81 e0       	ldi	r24, 0x01	; 1
    1e3e:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1e40:	8b 89       	ldd	r24, Y+19	; 0x13
    1e42:	80 32       	cpi	r24, 0x20	; 32
    1e44:	99 f4       	brne	.+38     	; 0x1e6c <_ZN14EncoderHandler12setValue_u8tEPhhh+0x86>
	if(m) return nMul_u16t;
	else return bMul_u16t;
}

uint8_t EncoderHandler::returnMul_u8t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_u8t;
    1e46:	8c 89       	ldd	r24, Y+20	; 0x14
    1e48:	88 23       	and	r24, r24
    1e4a:	11 f0       	breq	.+4      	; 0x1e50 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x6a>
    1e4c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e4e:	01 c0       	rjmp	.+2      	; 0x1e52 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x6c>
	else return bMul_u8t;
    1e50:	9b 85       	ldd	r25, Y+11	; 0x0b
		*v += returnMul_u8t(button);
		*v = clip_u8t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_u8t(button);
    1e52:	f7 01       	movw	r30, r14
    1e54:	80 81       	ld	r24, Z
    1e56:	89 1b       	sub	r24, r25
		else return v;
	}
}

uint8_t EncoderHandler::clip_u8t(uint8_t v, uint8_t mn, uint8_t mx){
	if(v < mn){
    1e58:	81 17       	cp	r24, r17
    1e5a:	20 f0       	brcs	.+8      	; 0x1e64 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x7e>
    1e5c:	10 2f       	mov	r17, r16
    1e5e:	80 17       	cp	r24, r16
    1e60:	08 f4       	brcc	.+2      	; 0x1e64 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x7e>
    1e62:	18 2f       	mov	r17, r24
		*v = clip_u8t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_u8t(button);
		*v = clip_u8t(*v, min, max);
    1e64:	f7 01       	movw	r30, r14
    1e66:	10 83       	st	Z, r17
		changed = true;
    1e68:	81 e0       	ldi	r24, 0x01	; 1
    1e6a:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1e6c:	df 91       	pop	r29
    1e6e:	cf 91       	pop	r28
    1e70:	1f 91       	pop	r17
    1e72:	0f 91       	pop	r16
    1e74:	ff 90       	pop	r15
    1e76:	ef 90       	pop	r14
    1e78:	08 95       	ret

00001e7a <_ZN4MenuC1Ev>:
 * 
 * This class draws the upper menu as well as the bottom labels and associated parameters
 */


Menu::Menu() {
    1e7a:	fc 01       	movw	r30, r24

class Parameters {
public: 
	Parameters(){};
	
    typedef struct {
    1e7c:	10 82       	st	Z, r1
    1e7e:	11 82       	std	Z+1, r1	; 0x01
    1e80:	8c ed       	ldi	r24, 0xDC	; 220
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	93 83       	std	Z+3, r25	; 0x03
    1e86:	82 83       	std	Z+2, r24	; 0x02
    1e88:	14 82       	std	Z+4, r1	; 0x04
    1e8a:	80 e9       	ldi	r24, 0x90	; 144
    1e8c:	91 e0       	ldi	r25, 0x01	; 1
    1e8e:	96 83       	std	Z+6, r25	; 0x06
    1e90:	85 83       	std	Z+5, r24	; 0x05
    1e92:	17 82       	std	Z+7, r1	; 0x07
    1e94:	80 e4       	ldi	r24, 0x40	; 64
    1e96:	9f e1       	ldi	r25, 0x1F	; 31
    1e98:	91 87       	std	Z+9, r25	; 0x09
    1e9a:	80 87       	std	Z+8, r24	; 0x08
    1e9c:	88 e2       	ldi	r24, 0x28	; 40
    1e9e:	82 87       	std	Z+10, r24	; 0x0a
    1ea0:	13 86       	std	Z+11, r1	; 0x0b
    1ea2:	15 86       	std	Z+13, r1	; 0x0d
    1ea4:	14 86       	std	Z+12, r1	; 0x0c
    1ea6:	88 ec       	ldi	r24, 0xC8	; 200
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	97 87       	std	Z+15, r25	; 0x0f
    1eac:	86 87       	std	Z+14, r24	; 0x0e
    1eae:	84 eb       	ldi	r24, 0xB4	; 180
    1eb0:	80 8b       	std	Z+16, r24	; 0x10
    1eb2:	8a ef       	ldi	r24, 0xFA	; 250
    1eb4:	90 e0       	ldi	r25, 0x00	; 0
    1eb6:	92 8b       	std	Z+18, r25	; 0x12
    1eb8:	81 8b       	std	Z+17, r24	; 0x11
    1eba:	13 8a       	std	Z+19, r1	; 0x13
    1ebc:	14 8a       	std	Z+20, r1	; 0x14
    1ebe:	15 8a       	std	Z+21, r1	; 0x15
    1ec0:	16 8a       	std	Z+22, r1	; 0x16
    1ec2:	8f e7       	ldi	r24, 0x7F	; 127
    1ec4:	87 8b       	std	Z+23, r24	; 0x17
    1ec6:	10 8e       	std	Z+24, r1	; 0x18
    1ec8:	11 8e       	std	Z+25, r1	; 0x19
    1eca:	12 8e       	std	Z+26, r1	; 0x1a
	tWidth = (WIDTH+1)/TLABELS; // 96px
    1ecc:	80 e6       	ldi	r24, 0x60	; 96
    1ece:	83 a3       	std	Z+35, r24	; 0x23
	bWidth = (WIDTH+1)/BLABELS; // 120px
    1ed0:	88 e7       	ldi	r24, 0x78	; 120
    1ed2:	84 a3       	std	Z+36, r24	; 0x24
	height = HEIGHT/8; // 40px
    1ed4:	87 e2       	ldi	r24, 0x27	; 39
    1ed6:	85 a3       	std	Z+37, r24	; 0x25
    1ed8:	08 95       	ret

00001eda <_ZN4Menu4initEP4UTFTPhS2_PN10Parameters8params_tE>:
}

void Menu::init(UTFT* u, uint8_t* sF, uint8_t* bF, params_t* p) {
    1eda:	0f 93       	push	r16
    1edc:	1f 93       	push	r17
    1ede:	fc 01       	movw	r30, r24
	//Serial.println(p->oscFreq);
	paramsPtr = p;
    1ee0:	12 a3       	std	Z+34, r17	; 0x22
    1ee2:	01 a3       	std	Z+33, r16	; 0x21
	mLCD = u;
    1ee4:	74 8f       	std	Z+28, r23	; 0x1c
    1ee6:	63 8f       	std	Z+27, r22	; 0x1b
	sFont = sF;
    1ee8:	56 8f       	std	Z+30, r21	; 0x1e
    1eea:	45 8f       	std	Z+29, r20	; 0x1d
	bFont = bF;
    1eec:	30 a3       	std	Z+32, r19	; 0x20
    1eee:	27 8f       	std	Z+31, r18	; 0x1f
}
    1ef0:	1f 91       	pop	r17
    1ef2:	0f 91       	pop	r16
    1ef4:	08 95       	ret

00001ef6 <_ZN4Menu11drawTopMenuEv>:
void Menu::drawMenus(){
	drawBottomMenu();
	drawTopMenu();
}

void Menu::drawTopMenu() {
    1ef6:	8f 92       	push	r8
    1ef8:	9f 92       	push	r9
    1efa:	af 92       	push	r10
    1efc:	bf 92       	push	r11
    1efe:	cf 92       	push	r12
    1f00:	df 92       	push	r13
    1f02:	ef 92       	push	r14
    1f04:	ff 92       	push	r15
    1f06:	0f 93       	push	r16
    1f08:	1f 93       	push	r17
    1f0a:	cf 93       	push	r28
    1f0c:	df 93       	push	r29
    1f0e:	00 d0       	rcall	.+0      	; 0x1f10 <_ZN4Menu11drawTopMenuEv+0x1a>
    1f10:	00 d0       	rcall	.+0      	; 0x1f12 <_ZN4Menu11drawTopMenuEv+0x1c>
    1f12:	cd b7       	in	r28, 0x3d	; 61
    1f14:	de b7       	in	r29, 0x3e	; 62
    1f16:	7c 01       	movw	r14, r24
	mLCD->setFont(bFont); // set font
    1f18:	dc 01       	movw	r26, r24
    1f1a:	5f 96       	adiw	r26, 0x1f	; 31
    1f1c:	6d 91       	ld	r22, X+
    1f1e:	7c 91       	ld	r23, X
    1f20:	90 97       	sbiw	r26, 0x20	; 32
    1f22:	5b 96       	adiw	r26, 0x1b	; 27
    1f24:	8d 91       	ld	r24, X+
    1f26:	9c 91       	ld	r25, X
    1f28:	5c 97       	sbiw	r26, 0x1c	; 28
    1f2a:	0e 94 4b 40 	call	0x8096	; 0x8096 <_ZN4UTFT7setFontEPh>
	// draw outer rect
	mLCD->setColor(COLOR);
    1f2e:	60 e0       	ldi	r22, 0x00	; 0
    1f30:	78 ef       	ldi	r23, 0xF8	; 248
    1f32:	f7 01       	movw	r30, r14
    1f34:	83 8d       	ldd	r24, Z+27	; 0x1b
    1f36:	94 8d       	ldd	r25, Z+28	; 0x1c
    1f38:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN4UTFT8setColorEj>
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);
    1f3c:	d7 01       	movw	r26, r14
    1f3e:	95 96       	adiw	r26, 0x25	; 37
    1f40:	0c 91       	ld	r16, X
    1f42:	95 97       	sbiw	r26, 0x25	; 37
    1f44:	10 e0       	ldi	r17, 0x00	; 0
    1f46:	2f ed       	ldi	r18, 0xDF	; 223
    1f48:	31 e0       	ldi	r19, 0x01	; 1
    1f4a:	40 e0       	ldi	r20, 0x00	; 0
    1f4c:	50 e0       	ldi	r21, 0x00	; 0
    1f4e:	60 e0       	ldi	r22, 0x00	; 0
    1f50:	70 e0       	ldi	r23, 0x00	; 0
    1f52:	5b 96       	adiw	r26, 0x1b	; 27
    1f54:	8d 91       	ld	r24, X+
    1f56:	9c 91       	ld	r25, X
    1f58:	5c 97       	sbiw	r26, 0x1c	; 28
    1f5a:	0e 94 59 38 	call	0x70b2	; 0x70b2 <_ZN4UTFT8fillRectEiiii>
    1f5e:	8e e3       	ldi	r24, 0x3E	; 62
    1f60:	a8 2e       	mov	r10, r24
    1f62:	85 e0       	ldi	r24, 0x05	; 5
    1f64:	b8 2e       	mov	r11, r24


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
    1f66:	c1 2c       	mov	r12, r1
    1f68:	d1 2c       	mov	r13, r1
		if (i != paramsPtr->menu){ // print all but selected
    1f6a:	d7 01       	movw	r26, r14
    1f6c:	91 96       	adiw	r26, 0x21	; 33
    1f6e:	ed 91       	ld	r30, X+
    1f70:	fc 91       	ld	r31, X
    1f72:	92 97       	sbiw	r26, 0x22	; 34
    1f74:	20 81       	ld	r18, Z
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	5b 96       	adiw	r26, 0x1b	; 27
    1f7a:	8d 91       	ld	r24, X+
    1f7c:	9c 91       	ld	r25, X
    1f7e:	5c 97       	sbiw	r26, 0x1c	; 28
    1f80:	f6 01       	movw	r30, r12
    1f82:	31 96       	adiw	r30, 0x01	; 1
    1f84:	4f 01       	movw	r8, r30
			mLCD->setColor(BKGCOLOR);
    1f86:	60 e0       	ldi	r22, 0x00	; 0
    1f88:	70 e0       	ldi	r23, 0x00	; 0
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
		if (i != paramsPtr->menu){ // print all but selected
    1f8a:	2c 15       	cp	r18, r12
    1f8c:	3d 05       	cpc	r19, r13
    1f8e:	09 f4       	brne	.+2      	; 0x1f92 <_ZN4Menu11drawTopMenuEv+0x9c>
    1f90:	56 c0       	rjmp	.+172    	; 0x203e <_ZN4Menu11drawTopMenuEv+0x148>
			mLCD->setColor(BKGCOLOR);
    1f92:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN4UTFT8setColorEj>
			//              start X                 start Y        end X                      end Y
			mLCD->fillRect( (tWidth*i)+STROKEWEIGHT, STROKEWEIGHT, (tWidth*(i+1))-STROKEWEIGHT, height-STROKEWEIGHT );
    1f96:	d7 01       	movw	r26, r14
    1f98:	93 96       	adiw	r26, 0x23	; 35
    1f9a:	8c 91       	ld	r24, X
    1f9c:	93 97       	sbiw	r26, 0x23	; 35
    1f9e:	90 e0       	ldi	r25, 0x00	; 0
    1fa0:	95 96       	adiw	r26, 0x25	; 37
    1fa2:	0c 91       	ld	r16, X
    1fa4:	95 97       	sbiw	r26, 0x25	; 37
    1fa6:	10 e0       	ldi	r17, 0x00	; 0
    1fa8:	03 50       	subi	r16, 0x03	; 3
    1faa:	11 09       	sbc	r17, r1
    1fac:	88 9e       	mul	r8, r24
    1fae:	90 01       	movw	r18, r0
    1fb0:	89 9e       	mul	r8, r25
    1fb2:	30 0d       	add	r19, r0
    1fb4:	98 9e       	mul	r9, r24
    1fb6:	30 0d       	add	r19, r0
    1fb8:	11 24       	eor	r1, r1
    1fba:	23 50       	subi	r18, 0x03	; 3
    1fbc:	31 09       	sbc	r19, r1
    1fbe:	8c 9d       	mul	r24, r12
    1fc0:	b0 01       	movw	r22, r0
    1fc2:	8d 9d       	mul	r24, r13
    1fc4:	70 0d       	add	r23, r0
    1fc6:	9c 9d       	mul	r25, r12
    1fc8:	70 0d       	add	r23, r0
    1fca:	11 24       	eor	r1, r1
    1fcc:	6d 5f       	subi	r22, 0xFD	; 253
    1fce:	7f 4f       	sbci	r23, 0xFF	; 255
    1fd0:	43 e0       	ldi	r20, 0x03	; 3
    1fd2:	50 e0       	ldi	r21, 0x00	; 0
    1fd4:	5b 96       	adiw	r26, 0x1b	; 27
    1fd6:	8d 91       	ld	r24, X+
    1fd8:	9c 91       	ld	r25, X
    1fda:	5c 97       	sbiw	r26, 0x1c	; 28
    1fdc:	0e 94 59 38 	call	0x70b2	; 0x70b2 <_ZN4UTFT8fillRectEiiii>
			mLCD->setColor(COLOR);
    1fe0:	60 e0       	ldi	r22, 0x00	; 0
    1fe2:	78 ef       	ldi	r23, 0xF8	; 248
    1fe4:	f7 01       	movw	r30, r14
    1fe6:	83 8d       	ldd	r24, Z+27	; 0x1b
    1fe8:	94 8d       	ldd	r25, Z+28	; 0x1c
    1fea:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN4UTFT8setColorEj>
			mLCD->setBackColor(BKGCOLOR);
    1fee:	40 e0       	ldi	r20, 0x00	; 0
    1ff0:	50 e0       	ldi	r21, 0x00	; 0
    1ff2:	ba 01       	movw	r22, r20
    1ff4:	d7 01       	movw	r26, r14
    1ff6:	5b 96       	adiw	r26, 0x1b	; 27
    1ff8:	8d 91       	ld	r24, X+
    1ffa:	9c 91       	ld	r25, X
    1ffc:	5c 97       	sbiw	r26, 0x1c	; 28
    1ffe:	0e 94 83 37 	call	0x6f06	; 0x6f06 <_ZN4UTFT12setBackColorEm>
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
    2002:	f7 01       	movw	r30, r14
    2004:	23 a1       	ldd	r18, Z+35	; 0x23
    2006:	2c 9d       	mul	r18, r12
    2008:	c0 01       	movw	r24, r0
    200a:	2d 9d       	mul	r18, r13
    200c:	90 0d       	add	r25, r0
    200e:	11 24       	eor	r1, r1
    2010:	6c 01       	movw	r12, r24
    2012:	f3 e0       	ldi	r31, 0x03	; 3
    2014:	cf 0e       	add	r12, r31
    2016:	d1 1c       	adc	r13, r1
    2018:	b5 01       	movw	r22, r10
    201a:	ce 01       	movw	r24, r28
    201c:	01 96       	adiw	r24, 0x01	; 1
    201e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringC1ERKS_>
    2022:	00 e0       	ldi	r16, 0x00	; 0
    2024:	10 e0       	ldi	r17, 0x00	; 0
    2026:	2a e0       	ldi	r18, 0x0A	; 10
    2028:	30 e0       	ldi	r19, 0x00	; 0
    202a:	a6 01       	movw	r20, r12
    202c:	be 01       	movw	r22, r28
    202e:	6f 5f       	subi	r22, 0xFF	; 255
    2030:	7f 4f       	sbci	r23, 0xFF	; 255
    2032:	d7 01       	movw	r26, r14
    2034:	5b 96       	adiw	r26, 0x1b	; 27
    2036:	8d 91       	ld	r24, X+
    2038:	9c 91       	ld	r25, X
    203a:	5c 97       	sbiw	r26, 0x1c	; 28
    203c:	27 c0       	rjmp	.+78     	; 0x208c <_ZN4Menu11drawTopMenuEv+0x196>
		}
		else{ // print selected
			mLCD->setColor(BKGCOLOR);
    203e:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN4UTFT8setColorEj>
			mLCD->setBackColor(COLOR);
    2042:	40 e0       	ldi	r20, 0x00	; 0
    2044:	58 ef       	ldi	r21, 0xF8	; 248
    2046:	6f ef       	ldi	r22, 0xFF	; 255
    2048:	7f ef       	ldi	r23, 0xFF	; 255
    204a:	f7 01       	movw	r30, r14
    204c:	83 8d       	ldd	r24, Z+27	; 0x1b
    204e:	94 8d       	ldd	r25, Z+28	; 0x1c
    2050:	0e 94 83 37 	call	0x6f06	; 0x6f06 <_ZN4UTFT12setBackColorEm>
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
    2054:	d7 01       	movw	r26, r14
    2056:	93 96       	adiw	r26, 0x23	; 35
    2058:	2c 91       	ld	r18, X
    205a:	2c 9d       	mul	r18, r12
    205c:	c0 01       	movw	r24, r0
    205e:	2d 9d       	mul	r18, r13
    2060:	90 0d       	add	r25, r0
    2062:	11 24       	eor	r1, r1
    2064:	6c 01       	movw	r12, r24
    2066:	b3 e0       	ldi	r27, 0x03	; 3
    2068:	cb 0e       	add	r12, r27
    206a:	d1 1c       	adc	r13, r1
    206c:	b5 01       	movw	r22, r10
    206e:	ce 01       	movw	r24, r28
    2070:	01 96       	adiw	r24, 0x01	; 1
    2072:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringC1ERKS_>
    2076:	00 e0       	ldi	r16, 0x00	; 0
    2078:	10 e0       	ldi	r17, 0x00	; 0
    207a:	2a e0       	ldi	r18, 0x0A	; 10
    207c:	30 e0       	ldi	r19, 0x00	; 0
    207e:	a6 01       	movw	r20, r12
    2080:	be 01       	movw	r22, r28
    2082:	6f 5f       	subi	r22, 0xFF	; 255
    2084:	7f 4f       	sbci	r23, 0xFF	; 255
    2086:	f7 01       	movw	r30, r14
    2088:	83 8d       	ldd	r24, Z+27	; 0x1b
    208a:	94 8d       	ldd	r25, Z+28	; 0x1c
    208c:	0e 94 63 3d 	call	0x7ac6	; 0x7ac6 <_ZN4UTFT5printE6Stringiii>
    2090:	ce 01       	movw	r24, r28
    2092:	01 96       	adiw	r24, 0x01	; 1
    2094:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	mLCD->setColor(COLOR);
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
    2098:	64 01       	movw	r12, r8
    209a:	f6 e0       	ldi	r31, 0x06	; 6
    209c:	af 0e       	add	r10, r31
    209e:	b1 1c       	adc	r11, r1
    20a0:	25 e0       	ldi	r18, 0x05	; 5
    20a2:	82 16       	cp	r8, r18
    20a4:	91 04       	cpc	r9, r1
    20a6:	09 f0       	breq	.+2      	; 0x20aa <_ZN4Menu11drawTopMenuEv+0x1b4>
    20a8:	60 cf       	rjmp	.-320    	; 0x1f6a <_ZN4Menu11drawTopMenuEv+0x74>
			mLCD->setColor(BKGCOLOR);
			mLCD->setBackColor(COLOR);
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
		}
	}
}
    20aa:	26 96       	adiw	r28, 0x06	; 6
    20ac:	0f b6       	in	r0, 0x3f	; 63
    20ae:	f8 94       	cli
    20b0:	de bf       	out	0x3e, r29	; 62
    20b2:	0f be       	out	0x3f, r0	; 63
    20b4:	cd bf       	out	0x3d, r28	; 61
    20b6:	df 91       	pop	r29
    20b8:	cf 91       	pop	r28
    20ba:	1f 91       	pop	r17
    20bc:	0f 91       	pop	r16
    20be:	ff 90       	pop	r15
    20c0:	ef 90       	pop	r14
    20c2:	df 90       	pop	r13
    20c4:	cf 90       	pop	r12
    20c6:	bf 90       	pop	r11
    20c8:	af 90       	pop	r10
    20ca:	9f 90       	pop	r9
    20cc:	8f 90       	pop	r8
    20ce:	08 95       	ret

000020d0 <_ZN4Menu16drawBottomLabelsEPK6String>:
		break;
		default:
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
    20d0:	4f 92       	push	r4
    20d2:	5f 92       	push	r5
    20d4:	6f 92       	push	r6
    20d6:	7f 92       	push	r7
    20d8:	8f 92       	push	r8
    20da:	9f 92       	push	r9
    20dc:	af 92       	push	r10
    20de:	bf 92       	push	r11
    20e0:	cf 92       	push	r12
    20e2:	df 92       	push	r13
    20e4:	ef 92       	push	r14
    20e6:	ff 92       	push	r15
    20e8:	0f 93       	push	r16
    20ea:	1f 93       	push	r17
    20ec:	cf 93       	push	r28
    20ee:	df 93       	push	r29
    20f0:	00 d0       	rcall	.+0      	; 0x20f2 <_ZN4Menu16drawBottomLabelsEPK6String+0x22>
    20f2:	00 d0       	rcall	.+0      	; 0x20f4 <_ZN4Menu16drawBottomLabelsEPK6String+0x24>
    20f4:	cd b7       	in	r28, 0x3d	; 61
    20f6:	de b7       	in	r29, 0x3e	; 62
    20f8:	7c 01       	movw	r14, r24
    20fa:	5b 01       	movw	r10, r22
	for(int i = 0; i < BLABELS; i++){
    20fc:	c1 2c       	mov	r12, r1
    20fe:	d1 2c       	mov	r13, r1
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
    2100:	8d e4       	ldi	r24, 0x4D	; 77
    2102:	48 2e       	mov	r4, r24
    2104:	55 24       	eor	r5, r5
    2106:	53 94       	inc	r5
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
	for(int i = 0; i < BLABELS; i++){
		mLCD->setColor(COLOR);
    2108:	60 e0       	ldi	r22, 0x00	; 0
    210a:	78 ef       	ldi	r23, 0xF8	; 248
    210c:	f7 01       	movw	r30, r14
    210e:	83 8d       	ldd	r24, Z+27	; 0x1b
    2110:	94 8d       	ldd	r25, Z+28	; 0x1c
    2112:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN4UTFT8setColorEj>
		mLCD->setBackColor(BKGCOLOR);
    2116:	40 e0       	ldi	r20, 0x00	; 0
    2118:	50 e0       	ldi	r21, 0x00	; 0
    211a:	ba 01       	movw	r22, r20
    211c:	f7 01       	movw	r30, r14
    211e:	83 8d       	ldd	r24, Z+27	; 0x1b
    2120:	94 8d       	ldd	r25, Z+28	; 0x1c
    2122:	0e 94 83 37 	call	0x6f06	; 0x6f06 <_ZN4UTFT12setBackColorEm>
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
    2126:	f7 01       	movw	r30, r14
    2128:	85 a1       	ldd	r24, Z+37	; 0x25
    212a:	32 01       	movw	r6, r4
    212c:	68 1a       	sub	r6, r24
    212e:	71 08       	sbc	r7, r1
    2130:	84 a1       	ldd	r24, Z+36	; 0x24
    2132:	8c 9d       	mul	r24, r12
    2134:	40 01       	movw	r8, r0
    2136:	8d 9d       	mul	r24, r13
    2138:	90 0c       	add	r9, r0
    213a:	11 24       	eor	r1, r1
    213c:	f5 e0       	ldi	r31, 0x05	; 5
    213e:	8f 0e       	add	r8, r31
    2140:	91 1c       	adc	r9, r1
    2142:	b5 01       	movw	r22, r10
    2144:	ce 01       	movw	r24, r28
    2146:	01 96       	adiw	r24, 0x01	; 1
    2148:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringC1ERKS_>
    214c:	00 e0       	ldi	r16, 0x00	; 0
    214e:	10 e0       	ldi	r17, 0x00	; 0
    2150:	93 01       	movw	r18, r6
    2152:	a4 01       	movw	r20, r8
    2154:	be 01       	movw	r22, r28
    2156:	6f 5f       	subi	r22, 0xFF	; 255
    2158:	7f 4f       	sbci	r23, 0xFF	; 255
    215a:	f7 01       	movw	r30, r14
    215c:	83 8d       	ldd	r24, Z+27	; 0x1b
    215e:	94 8d       	ldd	r25, Z+28	; 0x1c
    2160:	0e 94 63 3d 	call	0x7ac6	; 0x7ac6 <_ZN4UTFT5printE6Stringiii>
    2164:	ce 01       	movw	r24, r28
    2166:	01 96       	adiw	r24, 0x01	; 1
    2168:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
		default:
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
	for(int i = 0; i < BLABELS; i++){
    216c:	ff ef       	ldi	r31, 0xFF	; 255
    216e:	cf 1a       	sub	r12, r31
    2170:	df 0a       	sbc	r13, r31
    2172:	86 e0       	ldi	r24, 0x06	; 6
    2174:	a8 0e       	add	r10, r24
    2176:	b1 1c       	adc	r11, r1
    2178:	e4 e0       	ldi	r30, 0x04	; 4
    217a:	ce 16       	cp	r12, r30
    217c:	d1 04       	cpc	r13, r1
    217e:	21 f6       	brne	.-120    	; 0x2108 <_ZN4Menu16drawBottomLabelsEPK6String+0x38>
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
	}
}
    2180:	26 96       	adiw	r28, 0x06	; 6
    2182:	0f b6       	in	r0, 0x3f	; 63
    2184:	f8 94       	cli
    2186:	de bf       	out	0x3e, r29	; 62
    2188:	0f be       	out	0x3f, r0	; 63
    218a:	cd bf       	out	0x3d, r28	; 61
    218c:	df 91       	pop	r29
    218e:	cf 91       	pop	r28
    2190:	1f 91       	pop	r17
    2192:	0f 91       	pop	r16
    2194:	ff 90       	pop	r15
    2196:	ef 90       	pop	r14
    2198:	df 90       	pop	r13
    219a:	cf 90       	pop	r12
    219c:	bf 90       	pop	r11
    219e:	af 90       	pop	r10
    21a0:	9f 90       	pop	r9
    21a2:	8f 90       	pop	r8
    21a4:	7f 90       	pop	r7
    21a6:	6f 90       	pop	r6
    21a8:	5f 90       	pop	r5
    21aa:	4f 90       	pop	r4
    21ac:	08 95       	ret

000021ae <_ZN4Menu14drawBottomMenuEv>:
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
		}
	}
}

void Menu::drawBottomMenu() {
    21ae:	cf 92       	push	r12
    21b0:	df 92       	push	r13
    21b2:	ef 92       	push	r14
    21b4:	ff 92       	push	r15
    21b6:	0f 93       	push	r16
    21b8:	1f 93       	push	r17
    21ba:	cf 93       	push	r28
    21bc:	df 93       	push	r29
    21be:	ec 01       	movw	r28, r24
	mLCD->setFont(sFont); // set font
    21c0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    21c2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    21c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21c6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21c8:	0e 94 4b 40 	call	0x8096	; 0x8096 <_ZN4UTFT7setFontEPh>
	// draw outer rect
	mLCD->setColor(COLOR);
    21cc:	60 e0       	ldi	r22, 0x00	; 0
    21ce:	78 ef       	ldi	r23, 0xF8	; 248
    21d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21d4:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN4UTFT8setColorEj>
	mLCD->fillRect(ORIGIN, HEIGHT-height, WIDTH, HEIGHT);
    21d8:	8d a1       	ldd	r24, Y+37	; 0x25
    21da:	4f e3       	ldi	r20, 0x3F	; 63
    21dc:	51 e0       	ldi	r21, 0x01	; 1
    21de:	48 1b       	sub	r20, r24
    21e0:	51 09       	sbc	r21, r1
    21e2:	0f e3       	ldi	r16, 0x3F	; 63
    21e4:	11 e0       	ldi	r17, 0x01	; 1
    21e6:	2f ed       	ldi	r18, 0xDF	; 223
    21e8:	31 e0       	ldi	r19, 0x01	; 1
    21ea:	60 e0       	ldi	r22, 0x00	; 0
    21ec:	70 e0       	ldi	r23, 0x00	; 0
    21ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21f2:	0e 94 59 38 	call	0x70b2	; 0x70b2 <_ZN4UTFT8fillRectEiiii>
	// draw inner rects
	mLCD->setColor(BKGCOLOR);
    21f6:	60 e0       	ldi	r22, 0x00	; 0
    21f8:	70 e0       	ldi	r23, 0x00	; 0
    21fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21fe:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN4UTFT8setColorEj>
	for(int i = 0; i < BLABELS; i++){
    2202:	e1 2c       	mov	r14, r1
    2204:	f1 2c       	mov	r15, r1
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
    2206:	82 e4       	ldi	r24, 0x42	; 66
    2208:	c8 2e       	mov	r12, r24
    220a:	dd 24       	eor	r13, r13
    220c:	d3 94       	inc	r13
    220e:	8c a1       	ldd	r24, Y+36	; 0x24
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	2f ef       	ldi	r18, 0xFF	; 255
    2214:	e2 1a       	sub	r14, r18
    2216:	f2 0a       	sbc	r15, r18
    2218:	8e 9d       	mul	r24, r14
    221a:	b0 01       	movw	r22, r0
    221c:	8f 9d       	mul	r24, r15
    221e:	70 0d       	add	r23, r0
    2220:	9e 9d       	mul	r25, r14
    2222:	70 0d       	add	r23, r0
    2224:	11 24       	eor	r1, r1
    2226:	9b 01       	movw	r18, r22
    2228:	23 50       	subi	r18, 0x03	; 3
    222a:	31 09       	sbc	r19, r1
    222c:	4d a1       	ldd	r20, Y+37	; 0x25
    222e:	f6 01       	movw	r30, r12
    2230:	e4 1b       	sub	r30, r20
    2232:	f1 09       	sbc	r31, r1
    2234:	af 01       	movw	r20, r30
    2236:	68 1b       	sub	r22, r24
    2238:	79 0b       	sbc	r23, r25
    223a:	6d 5f       	subi	r22, 0xFD	; 253
    223c:	7f 4f       	sbci	r23, 0xFF	; 255
    223e:	0c e3       	ldi	r16, 0x3C	; 60
    2240:	11 e0       	ldi	r17, 0x01	; 1
    2242:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2244:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2246:	0e 94 59 38 	call	0x70b2	; 0x70b2 <_ZN4UTFT8fillRectEiiii>
	// draw outer rect
	mLCD->setColor(COLOR);
	mLCD->fillRect(ORIGIN, HEIGHT-height, WIDTH, HEIGHT);
	// draw inner rects
	mLCD->setColor(BKGCOLOR);
	for(int i = 0; i < BLABELS; i++){
    224a:	f4 e0       	ldi	r31, 0x04	; 4
    224c:	ef 16       	cp	r14, r31
    224e:	f1 04       	cpc	r15, r1
    2250:	f1 f6       	brne	.-68     	; 0x220e <__stack+0xf>
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
    2252:	e9 a1       	ldd	r30, Y+33	; 0x21
    2254:	fa a1       	ldd	r31, Y+34	; 0x22
    2256:	80 81       	ld	r24, Z
    2258:	82 30       	cpi	r24, 0x02	; 2
    225a:	91 f0       	breq	.+36     	; 0x2280 <__stack+0x81>
    225c:	38 f4       	brcc	.+14     	; 0x226c <__stack+0x6d>
    225e:	88 23       	and	r24, r24
    2260:	61 f0       	breq	.+24     	; 0x227a <__stack+0x7b>
    2262:	81 30       	cpi	r24, 0x01	; 1
    2264:	e1 f4       	brne	.+56     	; 0x229e <__stack+0x9f>
		case 0:
			drawBottomLabels(oscLabels);
		break;
		case 1:
			drawBottomLabels(filLabels);
    2266:	6e e0       	ldi	r22, 0x0E	; 14
    2268:	75 e0       	ldi	r23, 0x05	; 5
    226a:	0f c0       	rjmp	.+30     	; 0x228a <__stack+0x8b>
	for(int i = 0; i < BLABELS; i++){
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
    226c:	83 30       	cpi	r24, 0x03	; 3
    226e:	59 f0       	breq	.+22     	; 0x2286 <__stack+0x87>
    2270:	84 30       	cpi	r24, 0x04	; 4
    2272:	a9 f4       	brne	.+42     	; 0x229e <__stack+0x9f>
		break;
		case 3:
			drawBottomLabels(fxLabels);
		break;
		case 4:
			drawBottomLabels(settLabels);
    2274:	66 ec       	ldi	r22, 0xC6	; 198
    2276:	74 e0       	ldi	r23, 0x04	; 4
    2278:	08 c0       	rjmp	.+16     	; 0x228a <__stack+0x8b>
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
		case 0:
			drawBottomLabels(oscLabels);
    227a:	66 e2       	ldi	r22, 0x26	; 38
    227c:	75 e0       	ldi	r23, 0x05	; 5
    227e:	05 c0       	rjmp	.+10     	; 0x228a <__stack+0x8b>
		break;
		case 1:
			drawBottomLabels(filLabels);
		break;
		case 2:
			drawBottomLabels(envLabels);
    2280:	66 ef       	ldi	r22, 0xF6	; 246
    2282:	74 e0       	ldi	r23, 0x04	; 4
    2284:	02 c0       	rjmp	.+4      	; 0x228a <__stack+0x8b>
		break;
		case 3:
			drawBottomLabels(fxLabels);
    2286:	6e ed       	ldi	r22, 0xDE	; 222
    2288:	74 e0       	ldi	r23, 0x04	; 4
		break;
		case 4:
			drawBottomLabels(settLabels);
    228a:	ce 01       	movw	r24, r28
		break;
		default:
		break;
	}
}
    228c:	df 91       	pop	r29
    228e:	cf 91       	pop	r28
    2290:	1f 91       	pop	r17
    2292:	0f 91       	pop	r16
    2294:	ff 90       	pop	r15
    2296:	ef 90       	pop	r14
    2298:	df 90       	pop	r13
    229a:	cf 90       	pop	r12
		break;
		case 3:
			drawBottomLabels(fxLabels);
		break;
		case 4:
			drawBottomLabels(settLabels);
    229c:	19 cf       	rjmp	.-462    	; 0x20d0 <_ZN4Menu16drawBottomLabelsEPK6String>
		break;
		default:
		break;
	}
}
    229e:	df 91       	pop	r29
    22a0:	cf 91       	pop	r28
    22a2:	1f 91       	pop	r17
    22a4:	0f 91       	pop	r16
    22a6:	ff 90       	pop	r15
    22a8:	ef 90       	pop	r14
    22aa:	df 90       	pop	r13
    22ac:	cf 90       	pop	r12
    22ae:	08 95       	ret

000022b0 <_ZN4Menu9drawMenusEv>:
	mLCD = u;
	sFont = sF;
	bFont = bF;
}

void Menu::drawMenus(){
    22b0:	cf 93       	push	r28
    22b2:	df 93       	push	r29
    22b4:	ec 01       	movw	r28, r24
	drawBottomMenu();
    22b6:	7b df       	rcall	.-266    	; 0x21ae <_ZN4Menu14drawBottomMenuEv>
	drawTopMenu();
    22b8:	ce 01       	movw	r24, r28
}
    22ba:	df 91       	pop	r29
	bFont = bF;
}

void Menu::drawMenus(){
	drawBottomMenu();
	drawTopMenu();
    22bc:	cf 91       	pop	r28
    22be:	1b ce       	rjmp	.-970    	; 0x1ef6 <_ZN4Menu11drawTopMenuEv>

000022c0 <_ZN4Menu10drawValuesEv>:
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
	}
}
void Menu::drawValues() {
    22c0:	6f 92       	push	r6
    22c2:	7f 92       	push	r7
    22c4:	8f 92       	push	r8
    22c6:	9f 92       	push	r9
    22c8:	af 92       	push	r10
    22ca:	bf 92       	push	r11
    22cc:	cf 92       	push	r12
    22ce:	df 92       	push	r13
    22d0:	ef 92       	push	r14
    22d2:	ff 92       	push	r15
    22d4:	0f 93       	push	r16
    22d6:	1f 93       	push	r17
    22d8:	cf 93       	push	r28
    22da:	df 93       	push	r29
    22dc:	00 d0       	rcall	.+0      	; 0x22de <_ZN4Menu10drawValuesEv+0x1e>
    22de:	00 d0       	rcall	.+0      	; 0x22e0 <_ZN4Menu10drawValuesEv+0x20>
    22e0:	cd b7       	in	r28, 0x3d	; 61
    22e2:	de b7       	in	r29, 0x3e	; 62
    22e4:	3c 01       	movw	r6, r24
	byte i = 0;
	mLCD->setFont(sFont);
    22e6:	dc 01       	movw	r26, r24
    22e8:	5d 96       	adiw	r26, 0x1d	; 29
    22ea:	6d 91       	ld	r22, X+
    22ec:	7c 91       	ld	r23, X
    22ee:	5e 97       	sbiw	r26, 0x1e	; 30
    22f0:	5b 96       	adiw	r26, 0x1b	; 27
    22f2:	8d 91       	ld	r24, X+
    22f4:	9c 91       	ld	r25, X
    22f6:	5c 97       	sbiw	r26, 0x1c	; 28
    22f8:	0e 94 4b 40 	call	0x8096	; 0x8096 <_ZN4UTFT7setFontEPh>
	mLCD->setColor(COLOR);
    22fc:	60 e0       	ldi	r22, 0x00	; 0
    22fe:	78 ef       	ldi	r23, 0xF8	; 248
    2300:	f3 01       	movw	r30, r6
    2302:	83 8d       	ldd	r24, Z+27	; 0x1b
    2304:	94 8d       	ldd	r25, Z+28	; 0x1c
    2306:	0e 94 7f 37 	call	0x6efe	; 0x6efe <_ZN4UTFT8setColorEj>
	mLCD->setBackColor(BKGCOLOR);
    230a:	40 e0       	ldi	r20, 0x00	; 0
    230c:	50 e0       	ldi	r21, 0x00	; 0
    230e:	ba 01       	movw	r22, r20
    2310:	d3 01       	movw	r26, r6
    2312:	5b 96       	adiw	r26, 0x1b	; 27
    2314:	8d 91       	ld	r24, X+
    2316:	9c 91       	ld	r25, X
    2318:	5c 97       	sbiw	r26, 0x1c	; 28
    231a:	0e 94 83 37 	call	0x6f06	; 0x6f06 <_ZN4UTFT12setBackColorEm>
	switch(paramsPtr->menu){
    231e:	d3 01       	movw	r26, r6
    2320:	91 96       	adiw	r26, 0x21	; 33
    2322:	ed 91       	ld	r30, X+
    2324:	fc 91       	ld	r31, X
    2326:	92 97       	sbiw	r26, 0x22	; 34
    2328:	80 81       	ld	r24, Z
    232a:	82 30       	cpi	r24, 0x02	; 2
    232c:	09 f4       	brne	.+2      	; 0x2330 <_ZN4Menu10drawValuesEv+0x70>
    232e:	8b c1       	rjmp	.+790    	; 0x2646 <_ZN4Menu10drawValuesEv+0x386>
    2330:	08 f0       	brcs	.+2      	; 0x2334 <_ZN4Menu10drawValuesEv+0x74>
    2332:	6c c0       	rjmp	.+216    	; 0x240c <_ZN4Menu10drawValuesEv+0x14c>
    2334:	88 23       	and	r24, r24
    2336:	09 f4       	brne	.+2      	; 0x233a <_ZN4Menu10drawValuesEv+0x7a>
    2338:	da c0       	rjmp	.+436    	; 0x24ee <_ZN4Menu10drawValuesEv+0x22e>
    233a:	81 30       	cpi	r24, 0x01	; 1
    233c:	09 f0       	breq	.+2      	; 0x2340 <_ZN4Menu10drawValuesEv+0x80>
    233e:	5b c2       	rjmp	.+1206   	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
			mLCD->print(waveNames[paramsPtr->lfoWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumF((float)((paramsPtr->lfoFreq)/LFOMUL), 2, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 1:
			mLCD->printNumI(paramsPtr->filType, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2340:	d3 01       	movw	r26, r6
    2342:	95 96       	adiw	r26, 0x25	; 37
    2344:	8c 91       	ld	r24, X
    2346:	95 97       	sbiw	r26, 0x25	; 37
    2348:	1d e4       	ldi	r17, 0x4D	; 77
    234a:	c1 2e       	mov	r12, r17
    234c:	dd 24       	eor	r13, r13
    234e:	d3 94       	inc	r13
    2350:	96 01       	movw	r18, r12
    2352:	28 1b       	sub	r18, r24
    2354:	31 09       	sbc	r19, r1
    2356:	94 96       	adiw	r26, 0x24	; 36
    2358:	4c 91       	ld	r20, X
    235a:	94 97       	sbiw	r26, 0x24	; 36
    235c:	46 95       	lsr	r20
    235e:	50 e0       	ldi	r21, 0x00	; 0
    2360:	4d 5f       	subi	r20, 0xFD	; 253
    2362:	5f 4f       	sbci	r21, 0xFF	; 255
    2364:	00 e2       	ldi	r16, 0x20	; 32
    2366:	e0 2e       	mov	r14, r16
    2368:	00 e0       	ldi	r16, 0x00	; 0
    236a:	10 e0       	ldi	r17, 0x00	; 0
    236c:	67 81       	ldd	r22, Z+7	; 0x07
    236e:	5b 96       	adiw	r26, 0x1b	; 27
    2370:	8d 91       	ld	r24, X+
    2372:	9c 91       	ld	r25, X
    2374:	5c 97       	sbiw	r26, 0x1c	; 28
    2376:	0e 94 4e 3e 	call	0x7c9c	; 0x7c9c <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->filFreq, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    237a:	f3 01       	movw	r30, r6
    237c:	84 a1       	ldd	r24, Z+36	; 0x24
    237e:	95 a1       	ldd	r25, Z+37	; 0x25
    2380:	96 01       	movw	r18, r12
    2382:	29 1b       	sub	r18, r25
    2384:	31 09       	sbc	r19, r1
    2386:	48 2f       	mov	r20, r24
    2388:	50 e0       	ldi	r21, 0x00	; 0
    238a:	4d 5f       	subi	r20, 0xFD	; 253
    238c:	5f 4f       	sbci	r21, 0xFF	; 255
    238e:	86 95       	lsr	r24
    2390:	48 0f       	add	r20, r24
    2392:	51 1d       	adc	r21, r1
    2394:	01 a0       	ldd	r0, Z+33	; 0x21
    2396:	f2 a1       	ldd	r31, Z+34	; 0x22
    2398:	e0 2d       	mov	r30, r0
    239a:	60 85       	ldd	r22, Z+8	; 0x08
    239c:	71 85       	ldd	r23, Z+9	; 0x09
    239e:	d3 01       	movw	r26, r6
    23a0:	5b 96       	adiw	r26, 0x1b	; 27
    23a2:	8d 91       	ld	r24, X+
    23a4:	9c 91       	ld	r25, X
    23a6:	5c 97       	sbiw	r26, 0x1c	; 28
    23a8:	0e 94 a9 3d 	call	0x7b52	; 0x7b52 <_ZN4UTFT9printNumIEjiiic>
			i++;
			mLCD->printNumI(paramsPtr->filRes, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    23ac:	f3 01       	movw	r30, r6
    23ae:	84 a1       	ldd	r24, Z+36	; 0x24
    23b0:	95 a1       	ldd	r25, Z+37	; 0x25
    23b2:	96 01       	movw	r18, r12
    23b4:	29 1b       	sub	r18, r25
    23b6:	31 09       	sbc	r19, r1
    23b8:	48 2f       	mov	r20, r24
    23ba:	50 e0       	ldi	r21, 0x00	; 0
    23bc:	44 0f       	add	r20, r20
    23be:	55 1f       	adc	r21, r21
    23c0:	4d 5f       	subi	r20, 0xFD	; 253
    23c2:	5f 4f       	sbci	r21, 0xFF	; 255
    23c4:	86 95       	lsr	r24
    23c6:	48 0f       	add	r20, r24
    23c8:	51 1d       	adc	r21, r1
    23ca:	01 a0       	ldd	r0, Z+33	; 0x21
    23cc:	f2 a1       	ldd	r31, Z+34	; 0x22
    23ce:	e0 2d       	mov	r30, r0
    23d0:	62 85       	ldd	r22, Z+10	; 0x0a
    23d2:	d3 01       	movw	r26, r6
    23d4:	5b 96       	adiw	r26, 0x1b	; 27
    23d6:	8d 91       	ld	r24, X+
    23d8:	9c 91       	ld	r25, X
    23da:	5c 97       	sbiw	r26, 0x1c	; 28
    23dc:	0e 94 4e 3e 	call	0x7c9c	; 0x7c9c <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->filLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    23e0:	f3 01       	movw	r30, r6
    23e2:	84 a1       	ldd	r24, Z+36	; 0x24
    23e4:	95 a1       	ldd	r25, Z+37	; 0x25
    23e6:	96 01       	movw	r18, r12
    23e8:	29 1b       	sub	r18, r25
    23ea:	31 09       	sbc	r19, r1
    23ec:	f3 e0       	ldi	r31, 0x03	; 3
    23ee:	8f 9f       	mul	r24, r31
    23f0:	a0 01       	movw	r20, r0
    23f2:	11 24       	eor	r1, r1
    23f4:	4d 5f       	subi	r20, 0xFD	; 253
    23f6:	5f 4f       	sbci	r21, 0xFF	; 255
    23f8:	86 95       	lsr	r24
    23fa:	48 0f       	add	r20, r24
    23fc:	51 1d       	adc	r21, r1
    23fe:	d3 01       	movw	r26, r6
    2400:	91 96       	adiw	r26, 0x21	; 33
    2402:	ed 91       	ld	r30, X+
    2404:	fc 91       	ld	r31, X
    2406:	92 97       	sbiw	r26, 0x22	; 34
    2408:	63 85       	ldd	r22, Z+11	; 0x0b
    240a:	ef c1       	rjmp	.+990    	; 0x27ea <_ZN4Menu10drawValuesEv+0x52a>
void Menu::drawValues() {
	byte i = 0;
	mLCD->setFont(sFont);
	mLCD->setColor(COLOR);
	mLCD->setBackColor(BKGCOLOR);
	switch(paramsPtr->menu){
    240c:	83 30       	cpi	r24, 0x03	; 3
    240e:	09 f4       	brne	.+2      	; 0x2412 <_ZN4Menu10drawValuesEv+0x152>
    2410:	88 c1       	rjmp	.+784    	; 0x2722 <_ZN4Menu10drawValuesEv+0x462>
    2412:	84 30       	cpi	r24, 0x04	; 4
    2414:	09 f0       	breq	.+2      	; 0x2418 <_ZN4Menu10drawValuesEv+0x158>
    2416:	ef c1       	rjmp	.+990    	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
			mLCD->printNumI(paramsPtr->fxParam, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumI(paramsPtr->fxLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 4:
			mLCD->printNumI(paramsPtr->inPitch, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2418:	d3 01       	movw	r26, r6
    241a:	95 96       	adiw	r26, 0x25	; 37
    241c:	8c 91       	ld	r24, X
    241e:	95 97       	sbiw	r26, 0x25	; 37
    2420:	9d e4       	ldi	r25, 0x4D	; 77
    2422:	c9 2e       	mov	r12, r25
    2424:	dd 24       	eor	r13, r13
    2426:	d3 94       	inc	r13
    2428:	96 01       	movw	r18, r12
    242a:	28 1b       	sub	r18, r24
    242c:	31 09       	sbc	r19, r1
    242e:	94 96       	adiw	r26, 0x24	; 36
    2430:	4c 91       	ld	r20, X
    2432:	94 97       	sbiw	r26, 0x24	; 36
    2434:	46 95       	lsr	r20
    2436:	50 e0       	ldi	r21, 0x00	; 0
    2438:	4d 5f       	subi	r20, 0xFD	; 253
    243a:	5f 4f       	sbci	r21, 0xFF	; 255
    243c:	60 e2       	ldi	r22, 0x20	; 32
    243e:	e6 2e       	mov	r14, r22
    2440:	00 e0       	ldi	r16, 0x00	; 0
    2442:	10 e0       	ldi	r17, 0x00	; 0
    2444:	67 89       	ldd	r22, Z+23	; 0x17
    2446:	5b 96       	adiw	r26, 0x1b	; 27
    2448:	8d 91       	ld	r24, X+
    244a:	9c 91       	ld	r25, X
    244c:	5c 97       	sbiw	r26, 0x1c	; 28
    244e:	0e 94 f3 3e 	call	0x7de6	; 0x7de6 <_ZN4UTFT9printNumIEaiiic>
			i++;
			mLCD->printNumI(paramsPtr->inEnv, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2452:	f3 01       	movw	r30, r6
    2454:	84 a1       	ldd	r24, Z+36	; 0x24
    2456:	95 a1       	ldd	r25, Z+37	; 0x25
    2458:	96 01       	movw	r18, r12
    245a:	29 1b       	sub	r18, r25
    245c:	31 09       	sbc	r19, r1
    245e:	48 2f       	mov	r20, r24
    2460:	50 e0       	ldi	r21, 0x00	; 0
    2462:	4d 5f       	subi	r20, 0xFD	; 253
    2464:	5f 4f       	sbci	r21, 0xFF	; 255
    2466:	86 95       	lsr	r24
    2468:	48 0f       	add	r20, r24
    246a:	51 1d       	adc	r21, r1
    246c:	01 a0       	ldd	r0, Z+33	; 0x21
    246e:	f2 a1       	ldd	r31, Z+34	; 0x22
    2470:	e0 2d       	mov	r30, r0
    2472:	60 8d       	ldd	r22, Z+24	; 0x18
    2474:	d3 01       	movw	r26, r6
    2476:	5b 96       	adiw	r26, 0x1b	; 27
    2478:	8d 91       	ld	r24, X+
    247a:	9c 91       	ld	r25, X
    247c:	5c 97       	sbiw	r26, 0x1c	; 28
    247e:	0e 94 4e 3e 	call	0x7c9c	; 0x7c9c <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->filEnv, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2482:	f3 01       	movw	r30, r6
    2484:	84 a1       	ldd	r24, Z+36	; 0x24
    2486:	95 a1       	ldd	r25, Z+37	; 0x25
    2488:	96 01       	movw	r18, r12
    248a:	29 1b       	sub	r18, r25
    248c:	31 09       	sbc	r19, r1
    248e:	48 2f       	mov	r20, r24
    2490:	50 e0       	ldi	r21, 0x00	; 0
    2492:	44 0f       	add	r20, r20
    2494:	55 1f       	adc	r21, r21
    2496:	4d 5f       	subi	r20, 0xFD	; 253
    2498:	5f 4f       	sbci	r21, 0xFF	; 255
    249a:	86 95       	lsr	r24
    249c:	48 0f       	add	r20, r24
    249e:	51 1d       	adc	r21, r1
    24a0:	01 a0       	ldd	r0, Z+33	; 0x21
    24a2:	f2 a1       	ldd	r31, Z+34	; 0x22
    24a4:	e0 2d       	mov	r30, r0
    24a6:	61 8d       	ldd	r22, Z+25	; 0x19
    24a8:	d3 01       	movw	r26, r6
    24aa:	5b 96       	adiw	r26, 0x1b	; 27
    24ac:	8d 91       	ld	r24, X+
    24ae:	9c 91       	ld	r25, X
    24b0:	5c 97       	sbiw	r26, 0x1c	; 28
    24b2:	0e 94 f3 3e 	call	0x7de6	; 0x7de6 <_ZN4UTFT9printNumIEaiiic>
			i++;
			mLCD->printNumI(paramsPtr->preset, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    24b6:	f3 01       	movw	r30, r6
    24b8:	84 a1       	ldd	r24, Z+36	; 0x24
    24ba:	95 a1       	ldd	r25, Z+37	; 0x25
    24bc:	96 01       	movw	r18, r12
    24be:	29 1b       	sub	r18, r25
    24c0:	31 09       	sbc	r19, r1
    24c2:	f3 e0       	ldi	r31, 0x03	; 3
    24c4:	8f 9f       	mul	r24, r31
    24c6:	a0 01       	movw	r20, r0
    24c8:	11 24       	eor	r1, r1
    24ca:	4d 5f       	subi	r20, 0xFD	; 253
    24cc:	5f 4f       	sbci	r21, 0xFF	; 255
    24ce:	86 95       	lsr	r24
    24d0:	48 0f       	add	r20, r24
    24d2:	51 1d       	adc	r21, r1
    24d4:	d3 01       	movw	r26, r6
    24d6:	91 96       	adiw	r26, 0x21	; 33
    24d8:	ed 91       	ld	r30, X+
    24da:	fc 91       	ld	r31, X
    24dc:	92 97       	sbiw	r26, 0x22	; 34
    24de:	62 8d       	ldd	r22, Z+26	; 0x1a
    24e0:	5b 96       	adiw	r26, 0x1b	; 27
    24e2:	8d 91       	ld	r24, X+
    24e4:	9c 91       	ld	r25, X
    24e6:	5c 97       	sbiw	r26, 0x1c	; 28
    24e8:	0e 94 4e 3e 	call	0x7c9c	; 0x7c9c <_ZN4UTFT9printNumIEhiiic>
		break;
		default:
		break;
	}
    24ec:	84 c1       	rjmp	.+776    	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
	mLCD->setFont(sFont);
	mLCD->setColor(COLOR);
	mLCD->setBackColor(BKGCOLOR);
	switch(paramsPtr->menu){
		case 0:
			mLCD->print(waveNames[paramsPtr->oscWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    24ee:	d3 01       	movw	r26, r6
    24f0:	95 96       	adiw	r26, 0x25	; 37
    24f2:	8c 91       	ld	r24, X
    24f4:	95 97       	sbiw	r26, 0x25	; 37
    24f6:	2d e4       	ldi	r18, 0x4D	; 77
    24f8:	a2 2e       	mov	r10, r18
    24fa:	bb 24       	eor	r11, r11
    24fc:	b3 94       	inc	r11
    24fe:	75 01       	movw	r14, r10
    2500:	e8 1a       	sub	r14, r24
    2502:	f1 08       	sbc	r15, r1
    2504:	94 96       	adiw	r26, 0x24	; 36
    2506:	cc 90       	ld	r12, X
    2508:	c6 94       	lsr	r12
    250a:	d1 2c       	mov	r13, r1
    250c:	b3 e0       	ldi	r27, 0x03	; 3
    250e:	cb 0e       	add	r12, r27
    2510:	d1 1c       	adc	r13, r1
    2512:	61 81       	ldd	r22, Z+1	; 0x01
    2514:	36 e0       	ldi	r19, 0x06	; 6
    2516:	93 2e       	mov	r9, r19
    2518:	96 9e       	mul	r9, r22
    251a:	b0 01       	movw	r22, r0
    251c:	11 24       	eor	r1, r1
    251e:	62 55       	subi	r22, 0x52	; 82
    2520:	7b 4f       	sbci	r23, 0xFB	; 251
    2522:	ce 01       	movw	r24, r28
    2524:	01 96       	adiw	r24, 0x01	; 1
    2526:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringC1ERKS_>
    252a:	00 e0       	ldi	r16, 0x00	; 0
    252c:	10 e0       	ldi	r17, 0x00	; 0
    252e:	97 01       	movw	r18, r14
    2530:	a6 01       	movw	r20, r12
    2532:	be 01       	movw	r22, r28
    2534:	6f 5f       	subi	r22, 0xFF	; 255
    2536:	7f 4f       	sbci	r23, 0xFF	; 255
    2538:	f3 01       	movw	r30, r6
    253a:	83 8d       	ldd	r24, Z+27	; 0x1b
    253c:	94 8d       	ldd	r25, Z+28	; 0x1c
    253e:	0e 94 63 3d 	call	0x7ac6	; 0x7ac6 <_ZN4UTFT5printE6Stringiii>
    2542:	ce 01       	movw	r24, r28
    2544:	01 96       	adiw	r24, 0x01	; 1
    2546:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
			i++;
			mLCD->printNumI(paramsPtr->oscFreq, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    254a:	d3 01       	movw	r26, r6
    254c:	94 96       	adiw	r26, 0x24	; 36
    254e:	8c 91       	ld	r24, X
    2550:	94 97       	sbiw	r26, 0x24	; 36
    2552:	95 96       	adiw	r26, 0x25	; 37
    2554:	9c 91       	ld	r25, X
    2556:	95 97       	sbiw	r26, 0x25	; 37
    2558:	95 01       	movw	r18, r10
    255a:	29 1b       	sub	r18, r25
    255c:	31 09       	sbc	r19, r1
    255e:	48 2f       	mov	r20, r24
    2560:	50 e0       	ldi	r21, 0x00	; 0
    2562:	4d 5f       	subi	r20, 0xFD	; 253
    2564:	5f 4f       	sbci	r21, 0xFF	; 255
    2566:	86 95       	lsr	r24
    2568:	48 0f       	add	r20, r24
    256a:	51 1d       	adc	r21, r1
    256c:	91 96       	adiw	r26, 0x21	; 33
    256e:	ed 91       	ld	r30, X+
    2570:	fc 91       	ld	r31, X
    2572:	92 97       	sbiw	r26, 0x22	; 34
    2574:	62 81       	ldd	r22, Z+2	; 0x02
    2576:	73 81       	ldd	r23, Z+3	; 0x03
    2578:	e0 e2       	ldi	r30, 0x20	; 32
    257a:	ee 2e       	mov	r14, r30
    257c:	5b 96       	adiw	r26, 0x1b	; 27
    257e:	8d 91       	ld	r24, X+
    2580:	9c 91       	ld	r25, X
    2582:	5c 97       	sbiw	r26, 0x1c	; 28
    2584:	0e 94 a9 3d 	call	0x7b52	; 0x7b52 <_ZN4UTFT9printNumIEjiiic>
			i++;
			mLCD->print(waveNames[paramsPtr->lfoWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2588:	f3 01       	movw	r30, r6
    258a:	85 a1       	ldd	r24, Z+37	; 0x25
    258c:	75 01       	movw	r14, r10
    258e:	e8 1a       	sub	r14, r24
    2590:	f1 08       	sbc	r15, r1
    2592:	84 a1       	ldd	r24, Z+36	; 0x24
    2594:	c8 2e       	mov	r12, r24
    2596:	d1 2c       	mov	r13, r1
    2598:	cc 0c       	add	r12, r12
    259a:	dd 1c       	adc	r13, r13
    259c:	f3 e0       	ldi	r31, 0x03	; 3
    259e:	cf 0e       	add	r12, r31
    25a0:	d1 1c       	adc	r13, r1
    25a2:	86 95       	lsr	r24
    25a4:	c8 0e       	add	r12, r24
    25a6:	d1 1c       	adc	r13, r1
    25a8:	d3 01       	movw	r26, r6
    25aa:	91 96       	adiw	r26, 0x21	; 33
    25ac:	ed 91       	ld	r30, X+
    25ae:	fc 91       	ld	r31, X
    25b0:	92 97       	sbiw	r26, 0x22	; 34
    25b2:	64 81       	ldd	r22, Z+4	; 0x04
    25b4:	96 9e       	mul	r9, r22
    25b6:	b0 01       	movw	r22, r0
    25b8:	11 24       	eor	r1, r1
    25ba:	62 55       	subi	r22, 0x52	; 82
    25bc:	7b 4f       	sbci	r23, 0xFB	; 251
    25be:	ce 01       	movw	r24, r28
    25c0:	01 96       	adiw	r24, 0x01	; 1
    25c2:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringC1ERKS_>
    25c6:	97 01       	movw	r18, r14
    25c8:	a6 01       	movw	r20, r12
    25ca:	be 01       	movw	r22, r28
    25cc:	6f 5f       	subi	r22, 0xFF	; 255
    25ce:	7f 4f       	sbci	r23, 0xFF	; 255
    25d0:	f3 01       	movw	r30, r6
    25d2:	83 8d       	ldd	r24, Z+27	; 0x1b
    25d4:	94 8d       	ldd	r25, Z+28	; 0x1c
    25d6:	0e 94 63 3d 	call	0x7ac6	; 0x7ac6 <_ZN4UTFT5printE6Stringiii>
    25da:	ce 01       	movw	r24, r28
    25dc:	01 96       	adiw	r24, 0x01	; 1
    25de:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
			i++;
			mLCD->printNumF((float)((paramsPtr->lfoFreq)/LFOMUL), 2, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    25e2:	d3 01       	movw	r26, r6
    25e4:	94 96       	adiw	r26, 0x24	; 36
    25e6:	8c 91       	ld	r24, X
    25e8:	94 97       	sbiw	r26, 0x24	; 36
    25ea:	95 96       	adiw	r26, 0x25	; 37
    25ec:	9c 91       	ld	r25, X
    25ee:	75 01       	movw	r14, r10
    25f0:	e9 1a       	sub	r14, r25
    25f2:	f1 08       	sbc	r15, r1
    25f4:	b3 e0       	ldi	r27, 0x03	; 3
    25f6:	8b 9f       	mul	r24, r27
    25f8:	80 01       	movw	r16, r0
    25fa:	11 24       	eor	r1, r1
    25fc:	0d 5f       	subi	r16, 0xFD	; 253
    25fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2600:	86 95       	lsr	r24
    2602:	08 0f       	add	r16, r24
    2604:	11 1d       	adc	r17, r1
    2606:	d3 01       	movw	r26, r6
    2608:	91 96       	adiw	r26, 0x21	; 33
    260a:	ed 91       	ld	r30, X+
    260c:	fc 91       	ld	r31, X
    260e:	92 97       	sbiw	r26, 0x22	; 34
    2610:	65 81       	ldd	r22, Z+5	; 0x05
    2612:	76 81       	ldd	r23, Z+6	; 0x06
    2614:	80 e0       	ldi	r24, 0x00	; 0
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	0e 94 14 44 	call	0x8828	; 0x8828 <__floatunsisf>
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	48 ec       	ldi	r20, 0xC8	; 200
    2622:	52 e4       	ldi	r21, 0x42	; 66
    2624:	0e 94 7b 43 	call	0x86f6	; 0x86f6 <__divsf3>
    2628:	ab 01       	movw	r20, r22
    262a:	bc 01       	movw	r22, r24
    262c:	a0 e2       	ldi	r26, 0x20	; 32
    262e:	8a 2e       	mov	r8, r26
    2630:	a1 2c       	mov	r10, r1
    2632:	b1 2c       	mov	r11, r1
    2634:	be e2       	ldi	r27, 0x2E	; 46
    2636:	cb 2e       	mov	r12, r27
    2638:	22 e0       	ldi	r18, 0x02	; 2
    263a:	f3 01       	movw	r30, r6
    263c:	83 8d       	ldd	r24, Z+27	; 0x1b
    263e:	94 8d       	ldd	r25, Z+28	; 0x1c
    2640:	0e 94 c7 3f 	call	0x7f8e	; 0x7f8e <_ZN4UTFT9printNumFEdhiicic>
		break;
    2644:	d8 c0       	rjmp	.+432    	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
			mLCD->printNumI(paramsPtr->filRes, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumI(paramsPtr->filLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 2:
			mLCD->printNumI(paramsPtr->envAtk, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2646:	d3 01       	movw	r26, r6
    2648:	95 96       	adiw	r26, 0x25	; 37
    264a:	8c 91       	ld	r24, X
    264c:	95 97       	sbiw	r26, 0x25	; 37
    264e:	2d e4       	ldi	r18, 0x4D	; 77
    2650:	c2 2e       	mov	r12, r18
    2652:	dd 24       	eor	r13, r13
    2654:	d3 94       	inc	r13
    2656:	96 01       	movw	r18, r12
    2658:	28 1b       	sub	r18, r24
    265a:	31 09       	sbc	r19, r1
    265c:	94 96       	adiw	r26, 0x24	; 36
    265e:	4c 91       	ld	r20, X
    2660:	94 97       	sbiw	r26, 0x24	; 36
    2662:	46 95       	lsr	r20
    2664:	50 e0       	ldi	r21, 0x00	; 0
    2666:	4d 5f       	subi	r20, 0xFD	; 253
    2668:	5f 4f       	sbci	r21, 0xFF	; 255
    266a:	64 85       	ldd	r22, Z+12	; 0x0c
    266c:	75 85       	ldd	r23, Z+13	; 0x0d
    266e:	e0 e2       	ldi	r30, 0x20	; 32
    2670:	ee 2e       	mov	r14, r30
    2672:	00 e0       	ldi	r16, 0x00	; 0
    2674:	10 e0       	ldi	r17, 0x00	; 0
    2676:	5b 96       	adiw	r26, 0x1b	; 27
    2678:	8d 91       	ld	r24, X+
    267a:	9c 91       	ld	r25, X
    267c:	5c 97       	sbiw	r26, 0x1c	; 28
    267e:	0e 94 a9 3d 	call	0x7b52	; 0x7b52 <_ZN4UTFT9printNumIEjiiic>
			i++;
			mLCD->printNumI(paramsPtr->envDcy, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2682:	f3 01       	movw	r30, r6
    2684:	84 a1       	ldd	r24, Z+36	; 0x24
    2686:	95 a1       	ldd	r25, Z+37	; 0x25
    2688:	96 01       	movw	r18, r12
    268a:	29 1b       	sub	r18, r25
    268c:	31 09       	sbc	r19, r1
    268e:	48 2f       	mov	r20, r24
    2690:	50 e0       	ldi	r21, 0x00	; 0
    2692:	4d 5f       	subi	r20, 0xFD	; 253
    2694:	5f 4f       	sbci	r21, 0xFF	; 255
    2696:	86 95       	lsr	r24
    2698:	48 0f       	add	r20, r24
    269a:	51 1d       	adc	r21, r1
    269c:	01 a0       	ldd	r0, Z+33	; 0x21
    269e:	f2 a1       	ldd	r31, Z+34	; 0x22
    26a0:	e0 2d       	mov	r30, r0
    26a2:	66 85       	ldd	r22, Z+14	; 0x0e
    26a4:	77 85       	ldd	r23, Z+15	; 0x0f
    26a6:	d3 01       	movw	r26, r6
    26a8:	5b 96       	adiw	r26, 0x1b	; 27
    26aa:	8d 91       	ld	r24, X+
    26ac:	9c 91       	ld	r25, X
    26ae:	5c 97       	sbiw	r26, 0x1c	; 28
    26b0:	0e 94 a9 3d 	call	0x7b52	; 0x7b52 <_ZN4UTFT9printNumIEjiiic>
			i++;
			mLCD->printNumI(paramsPtr->envSus, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    26b4:	f3 01       	movw	r30, r6
    26b6:	84 a1       	ldd	r24, Z+36	; 0x24
    26b8:	95 a1       	ldd	r25, Z+37	; 0x25
    26ba:	96 01       	movw	r18, r12
    26bc:	29 1b       	sub	r18, r25
    26be:	31 09       	sbc	r19, r1
    26c0:	48 2f       	mov	r20, r24
    26c2:	50 e0       	ldi	r21, 0x00	; 0
    26c4:	44 0f       	add	r20, r20
    26c6:	55 1f       	adc	r21, r21
    26c8:	4d 5f       	subi	r20, 0xFD	; 253
    26ca:	5f 4f       	sbci	r21, 0xFF	; 255
    26cc:	86 95       	lsr	r24
    26ce:	48 0f       	add	r20, r24
    26d0:	51 1d       	adc	r21, r1
    26d2:	01 a0       	ldd	r0, Z+33	; 0x21
    26d4:	f2 a1       	ldd	r31, Z+34	; 0x22
    26d6:	e0 2d       	mov	r30, r0
    26d8:	60 89       	ldd	r22, Z+16	; 0x10
    26da:	d3 01       	movw	r26, r6
    26dc:	5b 96       	adiw	r26, 0x1b	; 27
    26de:	8d 91       	ld	r24, X+
    26e0:	9c 91       	ld	r25, X
    26e2:	5c 97       	sbiw	r26, 0x1c	; 28
    26e4:	0e 94 4e 3e 	call	0x7c9c	; 0x7c9c <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->envRel, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    26e8:	f3 01       	movw	r30, r6
    26ea:	84 a1       	ldd	r24, Z+36	; 0x24
    26ec:	95 a1       	ldd	r25, Z+37	; 0x25
    26ee:	96 01       	movw	r18, r12
    26f0:	29 1b       	sub	r18, r25
    26f2:	31 09       	sbc	r19, r1
    26f4:	f3 e0       	ldi	r31, 0x03	; 3
    26f6:	8f 9f       	mul	r24, r31
    26f8:	a0 01       	movw	r20, r0
    26fa:	11 24       	eor	r1, r1
    26fc:	4d 5f       	subi	r20, 0xFD	; 253
    26fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2700:	86 95       	lsr	r24
    2702:	48 0f       	add	r20, r24
    2704:	51 1d       	adc	r21, r1
    2706:	d3 01       	movw	r26, r6
    2708:	91 96       	adiw	r26, 0x21	; 33
    270a:	ed 91       	ld	r30, X+
    270c:	fc 91       	ld	r31, X
    270e:	92 97       	sbiw	r26, 0x22	; 34
    2710:	61 89       	ldd	r22, Z+17	; 0x11
    2712:	72 89       	ldd	r23, Z+18	; 0x12
    2714:	5b 96       	adiw	r26, 0x1b	; 27
    2716:	8d 91       	ld	r24, X+
    2718:	9c 91       	ld	r25, X
    271a:	5c 97       	sbiw	r26, 0x1c	; 28
    271c:	0e 94 a9 3d 	call	0x7b52	; 0x7b52 <_ZN4UTFT9printNumIEjiiic>
		break;
    2720:	6a c0       	rjmp	.+212    	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
		case 3:
			mLCD->printNumI(paramsPtr->fxType, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2722:	d3 01       	movw	r26, r6
    2724:	95 96       	adiw	r26, 0x25	; 37
    2726:	8c 91       	ld	r24, X
    2728:	95 97       	sbiw	r26, 0x25	; 37
    272a:	1d e4       	ldi	r17, 0x4D	; 77
    272c:	c1 2e       	mov	r12, r17
    272e:	dd 24       	eor	r13, r13
    2730:	d3 94       	inc	r13
    2732:	96 01       	movw	r18, r12
    2734:	28 1b       	sub	r18, r24
    2736:	31 09       	sbc	r19, r1
    2738:	94 96       	adiw	r26, 0x24	; 36
    273a:	4c 91       	ld	r20, X
    273c:	94 97       	sbiw	r26, 0x24	; 36
    273e:	46 95       	lsr	r20
    2740:	50 e0       	ldi	r21, 0x00	; 0
    2742:	4d 5f       	subi	r20, 0xFD	; 253
    2744:	5f 4f       	sbci	r21, 0xFF	; 255
    2746:	00 e2       	ldi	r16, 0x20	; 32
    2748:	e0 2e       	mov	r14, r16
    274a:	00 e0       	ldi	r16, 0x00	; 0
    274c:	10 e0       	ldi	r17, 0x00	; 0
    274e:	63 89       	ldd	r22, Z+19	; 0x13
    2750:	5b 96       	adiw	r26, 0x1b	; 27
    2752:	8d 91       	ld	r24, X+
    2754:	9c 91       	ld	r25, X
    2756:	5c 97       	sbiw	r26, 0x1c	; 28
    2758:	0e 94 4e 3e 	call	0x7c9c	; 0x7c9c <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->fxAmt, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    275c:	f3 01       	movw	r30, r6
    275e:	84 a1       	ldd	r24, Z+36	; 0x24
    2760:	95 a1       	ldd	r25, Z+37	; 0x25
    2762:	96 01       	movw	r18, r12
    2764:	29 1b       	sub	r18, r25
    2766:	31 09       	sbc	r19, r1
    2768:	48 2f       	mov	r20, r24
    276a:	50 e0       	ldi	r21, 0x00	; 0
    276c:	4d 5f       	subi	r20, 0xFD	; 253
    276e:	5f 4f       	sbci	r21, 0xFF	; 255
    2770:	86 95       	lsr	r24
    2772:	48 0f       	add	r20, r24
    2774:	51 1d       	adc	r21, r1
    2776:	01 a0       	ldd	r0, Z+33	; 0x21
    2778:	f2 a1       	ldd	r31, Z+34	; 0x22
    277a:	e0 2d       	mov	r30, r0
    277c:	64 89       	ldd	r22, Z+20	; 0x14
    277e:	d3 01       	movw	r26, r6
    2780:	5b 96       	adiw	r26, 0x1b	; 27
    2782:	8d 91       	ld	r24, X+
    2784:	9c 91       	ld	r25, X
    2786:	5c 97       	sbiw	r26, 0x1c	; 28
    2788:	0e 94 4e 3e 	call	0x7c9c	; 0x7c9c <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->fxParam, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    278c:	f3 01       	movw	r30, r6
    278e:	84 a1       	ldd	r24, Z+36	; 0x24
    2790:	95 a1       	ldd	r25, Z+37	; 0x25
    2792:	96 01       	movw	r18, r12
    2794:	29 1b       	sub	r18, r25
    2796:	31 09       	sbc	r19, r1
    2798:	48 2f       	mov	r20, r24
    279a:	50 e0       	ldi	r21, 0x00	; 0
    279c:	44 0f       	add	r20, r20
    279e:	55 1f       	adc	r21, r21
    27a0:	4d 5f       	subi	r20, 0xFD	; 253
    27a2:	5f 4f       	sbci	r21, 0xFF	; 255
    27a4:	86 95       	lsr	r24
    27a6:	48 0f       	add	r20, r24
    27a8:	51 1d       	adc	r21, r1
    27aa:	01 a0       	ldd	r0, Z+33	; 0x21
    27ac:	f2 a1       	ldd	r31, Z+34	; 0x22
    27ae:	e0 2d       	mov	r30, r0
    27b0:	65 89       	ldd	r22, Z+21	; 0x15
    27b2:	d3 01       	movw	r26, r6
    27b4:	5b 96       	adiw	r26, 0x1b	; 27
    27b6:	8d 91       	ld	r24, X+
    27b8:	9c 91       	ld	r25, X
    27ba:	5c 97       	sbiw	r26, 0x1c	; 28
    27bc:	0e 94 4e 3e 	call	0x7c9c	; 0x7c9c <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->fxLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    27c0:	f3 01       	movw	r30, r6
    27c2:	84 a1       	ldd	r24, Z+36	; 0x24
    27c4:	95 a1       	ldd	r25, Z+37	; 0x25
    27c6:	96 01       	movw	r18, r12
    27c8:	29 1b       	sub	r18, r25
    27ca:	31 09       	sbc	r19, r1
    27cc:	f3 e0       	ldi	r31, 0x03	; 3
    27ce:	8f 9f       	mul	r24, r31
    27d0:	a0 01       	movw	r20, r0
    27d2:	11 24       	eor	r1, r1
    27d4:	4d 5f       	subi	r20, 0xFD	; 253
    27d6:	5f 4f       	sbci	r21, 0xFF	; 255
    27d8:	86 95       	lsr	r24
    27da:	48 0f       	add	r20, r24
    27dc:	51 1d       	adc	r21, r1
    27de:	d3 01       	movw	r26, r6
    27e0:	91 96       	adiw	r26, 0x21	; 33
    27e2:	ed 91       	ld	r30, X+
    27e4:	fc 91       	ld	r31, X
    27e6:	92 97       	sbiw	r26, 0x22	; 34
    27e8:	66 89       	ldd	r22, Z+22	; 0x16
    27ea:	5b 96       	adiw	r26, 0x1b	; 27
    27ec:	8d 91       	ld	r24, X+
    27ee:	9c 91       	ld	r25, X
    27f0:	5c 97       	sbiw	r26, 0x1c	; 28
    27f2:	0e 94 f3 3e 	call	0x7de6	; 0x7de6 <_ZN4UTFT9printNumIEaiiic>
			mLCD->printNumI(paramsPtr->preset, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		default:
		break;
	}
    27f6:	26 96       	adiw	r28, 0x06	; 6
    27f8:	0f b6       	in	r0, 0x3f	; 63
    27fa:	f8 94       	cli
    27fc:	de bf       	out	0x3e, r29	; 62
    27fe:	0f be       	out	0x3f, r0	; 63
    2800:	cd bf       	out	0x3d, r28	; 61
    2802:	df 91       	pop	r29
    2804:	cf 91       	pop	r28
    2806:	1f 91       	pop	r17
    2808:	0f 91       	pop	r16
    280a:	ff 90       	pop	r15
    280c:	ef 90       	pop	r14
    280e:	df 90       	pop	r13
    2810:	cf 90       	pop	r12
    2812:	bf 90       	pop	r11
    2814:	af 90       	pop	r10
    2816:	9f 90       	pop	r9
    2818:	8f 90       	pop	r8
    281a:	7f 90       	pop	r7
    281c:	6f 90       	pop	r6
    281e:	08 95       	ret

00002820 <_GLOBAL__sub_I__ZN4MenuC2Ev>:
    2820:	cf 93       	push	r28
    2822:	df 93       	push	r29
    2824:	69 ea       	ldi	r22, 0xA9	; 169
    2826:	72 e0       	ldi	r23, 0x02	; 2
    2828:	8e e3       	ldi	r24, 0x3E	; 62
    282a:	95 e0       	ldi	r25, 0x05	; 5
    282c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2830:	6e ea       	ldi	r22, 0xAE	; 174
    2832:	72 e0       	ldi	r23, 0x02	; 2
    2834:	84 e4       	ldi	r24, 0x44	; 68
    2836:	95 e0       	ldi	r25, 0x05	; 5
    2838:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    283c:	63 eb       	ldi	r22, 0xB3	; 179
    283e:	72 e0       	ldi	r23, 0x02	; 2
    2840:	8a e4       	ldi	r24, 0x4A	; 74
    2842:	95 e0       	ldi	r25, 0x05	; 5
    2844:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2848:	68 eb       	ldi	r22, 0xB8	; 184
    284a:	72 e0       	ldi	r23, 0x02	; 2
    284c:	80 e5       	ldi	r24, 0x50	; 80
    284e:	95 e0       	ldi	r25, 0x05	; 5
    2850:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2854:	6b eb       	ldi	r22, 0xBB	; 187
    2856:	72 e0       	ldi	r23, 0x02	; 2
    2858:	86 e5       	ldi	r24, 0x56	; 86
    285a:	95 e0       	ldi	r25, 0x05	; 5
    285c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2860:	61 ec       	ldi	r22, 0xC1	; 193
    2862:	72 e0       	ldi	r23, 0x02	; 2
    2864:	86 e2       	ldi	r24, 0x26	; 38
    2866:	95 e0       	ldi	r25, 0x05	; 5
    2868:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    286c:	67 ec       	ldi	r22, 0xC7	; 199
    286e:	72 e0       	ldi	r23, 0x02	; 2
    2870:	8c e2       	ldi	r24, 0x2C	; 44
    2872:	95 e0       	ldi	r25, 0x05	; 5
    2874:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2878:	6d ec       	ldi	r22, 0xCD	; 205
    287a:	72 e0       	ldi	r23, 0x02	; 2
    287c:	82 e3       	ldi	r24, 0x32	; 50
    287e:	95 e0       	ldi	r25, 0x05	; 5
    2880:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2884:	67 ec       	ldi	r22, 0xC7	; 199
    2886:	72 e0       	ldi	r23, 0x02	; 2
    2888:	88 e3       	ldi	r24, 0x38	; 56
    288a:	95 e0       	ldi	r25, 0x05	; 5
    288c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2890:	62 ed       	ldi	r22, 0xD2	; 210
    2892:	72 e0       	ldi	r23, 0x02	; 2
    2894:	8e e0       	ldi	r24, 0x0E	; 14
    2896:	95 e0       	ldi	r25, 0x05	; 5
    2898:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    289c:	67 ec       	ldi	r22, 0xC7	; 199
    289e:	72 e0       	ldi	r23, 0x02	; 2
    28a0:	84 e1       	ldi	r24, 0x14	; 20
    28a2:	95 e0       	ldi	r25, 0x05	; 5
    28a4:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    28a8:	68 ed       	ldi	r22, 0xD8	; 216
    28aa:	72 e0       	ldi	r23, 0x02	; 2
    28ac:	8a e1       	ldi	r24, 0x1A	; 26
    28ae:	95 e0       	ldi	r25, 0x05	; 5
    28b0:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    28b4:	6d ec       	ldi	r22, 0xCD	; 205
    28b6:	72 e0       	ldi	r23, 0x02	; 2
    28b8:	80 e2       	ldi	r24, 0x20	; 32
    28ba:	95 e0       	ldi	r25, 0x05	; 5
    28bc:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    28c0:	6d ed       	ldi	r22, 0xDD	; 221
    28c2:	72 e0       	ldi	r23, 0x02	; 2
    28c4:	86 ef       	ldi	r24, 0xF6	; 246
    28c6:	94 e0       	ldi	r25, 0x04	; 4
    28c8:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    28cc:	62 ee       	ldi	r22, 0xE2	; 226
    28ce:	72 e0       	ldi	r23, 0x02	; 2
    28d0:	8c ef       	ldi	r24, 0xFC	; 252
    28d2:	94 e0       	ldi	r25, 0x04	; 4
    28d4:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    28d8:	67 ee       	ldi	r22, 0xE7	; 231
    28da:	72 e0       	ldi	r23, 0x02	; 2
    28dc:	82 e0       	ldi	r24, 0x02	; 2
    28de:	95 e0       	ldi	r25, 0x05	; 5
    28e0:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    28e4:	6c ee       	ldi	r22, 0xEC	; 236
    28e6:	72 e0       	ldi	r23, 0x02	; 2
    28e8:	88 e0       	ldi	r24, 0x08	; 8
    28ea:	95 e0       	ldi	r25, 0x05	; 5
    28ec:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    28f0:	62 ed       	ldi	r22, 0xD2	; 210
    28f2:	72 e0       	ldi	r23, 0x02	; 2
    28f4:	8e ed       	ldi	r24, 0xDE	; 222
    28f6:	94 e0       	ldi	r25, 0x04	; 4
    28f8:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    28fc:	61 ef       	ldi	r22, 0xF1	; 241
    28fe:	72 e0       	ldi	r23, 0x02	; 2
    2900:	84 ee       	ldi	r24, 0xE4	; 228
    2902:	94 e0       	ldi	r25, 0x04	; 4
    2904:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2908:	66 ef       	ldi	r22, 0xF6	; 246
    290a:	72 e0       	ldi	r23, 0x02	; 2
    290c:	8a ee       	ldi	r24, 0xEA	; 234
    290e:	94 e0       	ldi	r25, 0x04	; 4
    2910:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2914:	6d ec       	ldi	r22, 0xCD	; 205
    2916:	72 e0       	ldi	r23, 0x02	; 2
    2918:	80 ef       	ldi	r24, 0xF0	; 240
    291a:	94 e0       	ldi	r25, 0x04	; 4
    291c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2920:	6d ef       	ldi	r22, 0xFD	; 253
    2922:	72 e0       	ldi	r23, 0x02	; 2
    2924:	86 ec       	ldi	r24, 0xC6	; 198
    2926:	94 e0       	ldi	r25, 0x04	; 4
    2928:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    292c:	67 e0       	ldi	r22, 0x07	; 7
    292e:	73 e0       	ldi	r23, 0x03	; 3
    2930:	8c ec       	ldi	r24, 0xCC	; 204
    2932:	94 e0       	ldi	r25, 0x04	; 4
    2934:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2938:	6f e0       	ldi	r22, 0x0F	; 15
    293a:	73 e0       	ldi	r23, 0x03	; 3
    293c:	82 ed       	ldi	r24, 0xD2	; 210
    293e:	94 e0       	ldi	r25, 0x04	; 4
    2940:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2944:	68 e1       	ldi	r22, 0x18	; 24
    2946:	73 e0       	ldi	r23, 0x03	; 3
    2948:	88 ed       	ldi	r24, 0xD8	; 216
    294a:	94 e0       	ldi	r25, 0x04	; 4
    294c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    2950:	60 e2       	ldi	r22, 0x20	; 32
    2952:	73 e0       	ldi	r23, 0x03	; 3
    2954:	8e ea       	ldi	r24, 0xAE	; 174
    2956:	94 e0       	ldi	r25, 0x04	; 4
    2958:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    295c:	64 e2       	ldi	r22, 0x24	; 36
    295e:	73 e0       	ldi	r23, 0x03	; 3
    2960:	84 eb       	ldi	r24, 0xB4	; 180
    2962:	94 e0       	ldi	r25, 0x04	; 4
    2964:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2968:	68 e2       	ldi	r22, 0x28	; 40
    296a:	73 e0       	ldi	r23, 0x03	; 3
    296c:	8a eb       	ldi	r24, 0xBA	; 186
    296e:	94 e0       	ldi	r25, 0x04	; 4
    2970:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2974:	6c e2       	ldi	r22, 0x2C	; 44
    2976:	73 e0       	ldi	r23, 0x03	; 3
    2978:	80 ec       	ldi	r24, 0xC0	; 192
    297a:	94 e0       	ldi	r25, 0x04	; 4
    297c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    2980:	60 e3       	ldi	r22, 0x30	; 48
    2982:	73 e0       	ldi	r23, 0x03	; 3
    2984:	8e e7       	ldi	r24, 0x7E	; 126
    2986:	94 e0       	ldi	r25, 0x04	; 4
    2988:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    298c:	c0 e0       	ldi	r28, 0x00	; 0
    298e:	d0 e0       	ldi	r29, 0x00	; 0
    2990:	26 96       	adiw	r28, 0x06	; 6
    2992:	63 e8       	ldi	r22, 0x83	; 131
    2994:	73 e0       	ldi	r23, 0x03	; 3
    2996:	ce 01       	movw	r24, r28
    2998:	82 58       	subi	r24, 0x82	; 130
    299a:	9b 4f       	sbci	r25, 0xFB	; 251
    299c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    29a0:	ca 32       	cpi	r28, 0x2A	; 42
    29a2:	d1 05       	cpc	r29, r1
    29a4:	a9 f7       	brne	.-22     	; 0x2990 <_GLOBAL__sub_I__ZN4MenuC2Ev+0x170>
    29a6:	df 91       	pop	r29
    29a8:	cf 91       	pop	r28
    29aa:	08 95       	ret

000029ac <_GLOBAL__sub_D__ZN4MenuC2Ev>:
    29ac:	cf 93       	push	r28
    29ae:	df 93       	push	r29
    29b0:	ce ea       	ldi	r28, 0xAE	; 174
    29b2:	d4 e0       	ldi	r29, 0x04	; 4
    29b4:	26 97       	sbiw	r28, 0x06	; 6
    29b6:	ce 01       	movw	r24, r28
    29b8:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    29bc:	84 e0       	ldi	r24, 0x04	; 4
    29be:	ce 37       	cpi	r28, 0x7E	; 126
    29c0:	d8 07       	cpc	r29, r24
    29c2:	c1 f7       	brne	.-16     	; 0x29b4 <_GLOBAL__sub_D__ZN4MenuC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    29c4:	80 ec       	ldi	r24, 0xC0	; 192
    29c6:	94 e0       	ldi	r25, 0x04	; 4
    29c8:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    29cc:	8a eb       	ldi	r24, 0xBA	; 186
    29ce:	94 e0       	ldi	r25, 0x04	; 4
    29d0:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    29d4:	84 eb       	ldi	r24, 0xB4	; 180
    29d6:	94 e0       	ldi	r25, 0x04	; 4
    29d8:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    29dc:	8e ea       	ldi	r24, 0xAE	; 174
    29de:	94 e0       	ldi	r25, 0x04	; 4
    29e0:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    29e4:	88 ed       	ldi	r24, 0xD8	; 216
    29e6:	94 e0       	ldi	r25, 0x04	; 4
    29e8:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    29ec:	82 ed       	ldi	r24, 0xD2	; 210
    29ee:	94 e0       	ldi	r25, 0x04	; 4
    29f0:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    29f4:	8c ec       	ldi	r24, 0xCC	; 204
    29f6:	94 e0       	ldi	r25, 0x04	; 4
    29f8:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    29fc:	86 ec       	ldi	r24, 0xC6	; 198
    29fe:	94 e0       	ldi	r25, 0x04	; 4
    2a00:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2a04:	80 ef       	ldi	r24, 0xF0	; 240
    2a06:	94 e0       	ldi	r25, 0x04	; 4
    2a08:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a0c:	8a ee       	ldi	r24, 0xEA	; 234
    2a0e:	94 e0       	ldi	r25, 0x04	; 4
    2a10:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a14:	84 ee       	ldi	r24, 0xE4	; 228
    2a16:	94 e0       	ldi	r25, 0x04	; 4
    2a18:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a1c:	8e ed       	ldi	r24, 0xDE	; 222
    2a1e:	94 e0       	ldi	r25, 0x04	; 4
    2a20:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2a24:	88 e0       	ldi	r24, 0x08	; 8
    2a26:	95 e0       	ldi	r25, 0x05	; 5
    2a28:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a2c:	82 e0       	ldi	r24, 0x02	; 2
    2a2e:	95 e0       	ldi	r25, 0x05	; 5
    2a30:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a34:	8c ef       	ldi	r24, 0xFC	; 252
    2a36:	94 e0       	ldi	r25, 0x04	; 4
    2a38:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a3c:	86 ef       	ldi	r24, 0xF6	; 246
    2a3e:	94 e0       	ldi	r25, 0x04	; 4
    2a40:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2a44:	80 e2       	ldi	r24, 0x20	; 32
    2a46:	95 e0       	ldi	r25, 0x05	; 5
    2a48:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a4c:	8a e1       	ldi	r24, 0x1A	; 26
    2a4e:	95 e0       	ldi	r25, 0x05	; 5
    2a50:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a54:	84 e1       	ldi	r24, 0x14	; 20
    2a56:	95 e0       	ldi	r25, 0x05	; 5
    2a58:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a5c:	8e e0       	ldi	r24, 0x0E	; 14
    2a5e:	95 e0       	ldi	r25, 0x05	; 5
    2a60:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2a64:	88 e3       	ldi	r24, 0x38	; 56
    2a66:	95 e0       	ldi	r25, 0x05	; 5
    2a68:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a6c:	82 e3       	ldi	r24, 0x32	; 50
    2a6e:	95 e0       	ldi	r25, 0x05	; 5
    2a70:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a74:	8c e2       	ldi	r24, 0x2C	; 44
    2a76:	95 e0       	ldi	r25, 0x05	; 5
    2a78:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a7c:	86 e2       	ldi	r24, 0x26	; 38
    2a7e:	95 e0       	ldi	r25, 0x05	; 5
    2a80:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a84:	cc e5       	ldi	r28, 0x5C	; 92
    2a86:	d5 e0       	ldi	r29, 0x05	; 5
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    2a88:	26 97       	sbiw	r28, 0x06	; 6
    2a8a:	ce 01       	movw	r24, r28
    2a8c:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2a90:	85 e0       	ldi	r24, 0x05	; 5
    2a92:	ce 33       	cpi	r28, 0x3E	; 62
    2a94:	d8 07       	cpc	r29, r24
    2a96:	c1 f7       	brne	.-16     	; 0x2a88 <_GLOBAL__sub_D__ZN4MenuC2Ev+0xdc>
    2a98:	df 91       	pop	r29
    2a9a:	cf 91       	pop	r28
    2a9c:	08 95       	ret

00002a9e <_ZN6ScreenC1Ev>:
 * Screen implementation
 * 
 * This class handles all screen manipulations
 */

Screen::Screen() {
    2a9e:	cf 93       	push	r28
    2aa0:	df 93       	push	r29
    2aa2:	ec 01       	movw	r28, r24
    2aa4:	0e 94 96 20 	call	0x412c	; 0x412c <_ZN4UTFTC1Ev>
    2aa8:	ce 01       	movw	r24, r28
    2aaa:	c1 96       	adiw	r24, 0x31	; 49
    2aac:	e6 d9       	rcall	.-3124   	; 0x1e7a <_ZN4MenuC1Ev>
    2aae:	ce 01       	movw	r24, r28
    2ab0:	89 5a       	subi	r24, 0xA9	; 169
    2ab2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ab4:	0e 94 e5 42 	call	0x85ca	; 0x85ca <_ZN6WindowC1Ev>
    2ab8:	ce 01       	movw	r24, r28
    2aba:	84 58       	subi	r24, 0x84	; 132
    2abc:	9f 4f       	sbci	r25, 0xFF	; 255
    2abe:	0e 94 96 20 	call	0x412c	; 0x412c <_ZN4UTFTC1Ev>
    2ac2:	ce 01       	movw	r24, r28
    2ac4:	83 55       	subi	r24, 0x53	; 83
    2ac6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ac8:	d8 d9       	rcall	.-3152   	; 0x1e7a <_ZN4MenuC1Ev>
    2aca:	ce 01       	movw	r24, r28
    2acc:	8d 52       	subi	r24, 0x2D	; 45
    2ace:	9f 4f       	sbci	r25, 0xFF	; 255

}
    2ad0:	df 91       	pop	r29
    2ad2:	cf 91       	pop	r28
 * Screen implementation
 * 
 * This class handles all screen manipulations
 */

Screen::Screen() {
    2ad4:	0c 94 e5 42 	jmp	0x85ca	; 0x85ca <_ZN6WindowC1Ev>

00002ad8 <_ZN6Screen4initEP7Control>:

}

void Screen::init(Control *obj) {
    2ad8:	8f 92       	push	r8
    2ada:	9f 92       	push	r9
    2adc:	af 92       	push	r10
    2ade:	bf 92       	push	r11
    2ae0:	cf 92       	push	r12
    2ae2:	df 92       	push	r13
    2ae4:	ef 92       	push	r14
    2ae6:	ff 92       	push	r15
    2ae8:	0f 93       	push	r16
    2aea:	1f 93       	push	r17
    2aec:	cf 93       	push	r28
    2aee:	df 93       	push	r29
    2af0:	ec 01       	movw	r28, r24
	ctrlPtr = obj;
    2af2:	5c 01       	movw	r10, r24
    2af4:	8a e7       	ldi	r24, 0x7A	; 122
    2af6:	a8 0e       	add	r10, r24
    2af8:	b1 1c       	adc	r11, r1
    2afa:	d5 01       	movw	r26, r10
    2afc:	6d 93       	st	X+, r22
    2afe:	7c 93       	st	X, r23

	lcd = *new UTFT(CTE32HR,38,39,40,41);
    2b00:	81 e3       	ldi	r24, 0x31	; 49
    2b02:	90 e0       	ldi	r25, 0x00	; 0
    2b04:	0e 94 4e 46 	call	0x8c9c	; 0x8c9c <_Znwj>
    2b08:	4c 01       	movw	r8, r24
    2b0a:	c1 2c       	mov	r12, r1
    2b0c:	d1 2c       	mov	r13, r1
    2b0e:	89 e2       	ldi	r24, 0x29	; 41
    2b10:	e8 2e       	mov	r14, r24
    2b12:	f1 2c       	mov	r15, r1
    2b14:	08 e2       	ldi	r16, 0x28	; 40
    2b16:	10 e0       	ldi	r17, 0x00	; 0
    2b18:	27 e2       	ldi	r18, 0x27	; 39
    2b1a:	30 e0       	ldi	r19, 0x00	; 0
    2b1c:	46 e2       	ldi	r20, 0x26	; 38
    2b1e:	50 e0       	ldi	r21, 0x00	; 0
    2b20:	65 e1       	ldi	r22, 0x15	; 21
    2b22:	c4 01       	movw	r24, r8
    2b24:	0e 94 97 20 	call	0x412e	; 0x412e <_ZN4UTFTC1Ehiiiii>
    2b28:	7e 01       	movw	r14, r28
    2b2a:	bc e7       	ldi	r27, 0x7C	; 124
    2b2c:	eb 0e       	add	r14, r27
    2b2e:	f1 1c       	adc	r15, r1
    2b30:	81 e3       	ldi	r24, 0x31	; 49
    2b32:	f4 01       	movw	r30, r8
    2b34:	d7 01       	movw	r26, r14
    2b36:	01 90       	ld	r0, Z+
    2b38:	0d 92       	st	X+, r0
    2b3a:	8a 95       	dec	r24
    2b3c:	e1 f7       	brne	.-8      	; 0x2b36 <_ZN6Screen4initEP7Control+0x5e>
	lcd.InitLCD();
    2b3e:	61 e0       	ldi	r22, 0x01	; 1
    2b40:	c7 01       	movw	r24, r14
    2b42:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN4UTFT7InitLCDEh>
	extern uint8_t BigFont[];
	extern uint8_t SmallFont[];
	
	menu.init(&lcd, SmallFont, BigFont, ctrlPtr->paramsPtr);
    2b46:	c3 55       	subi	r28, 0x53	; 83
    2b48:	df 4f       	sbci	r29, 0xFF	; 255
    2b4a:	d5 01       	movw	r26, r10
    2b4c:	ed 91       	ld	r30, X+
    2b4e:	fc 91       	ld	r31, X
    2b50:	ea 57       	subi	r30, 0x7A	; 122
    2b52:	ff 4f       	sbci	r31, 0xFF	; 255
    2b54:	00 81       	ld	r16, Z
    2b56:	11 81       	ldd	r17, Z+1	; 0x01
    2b58:	28 e9       	ldi	r18, 0x98	; 152
    2b5a:	32 e0       	ldi	r19, 0x02	; 2
    2b5c:	4c e7       	ldi	r20, 0x7C	; 124
    2b5e:	5e e0       	ldi	r21, 0x0E	; 14
    2b60:	b7 01       	movw	r22, r14
    2b62:	ce 01       	movw	r24, r28
    2b64:	ba d9       	rcall	.-3212   	; 0x1eda <_ZN4Menu4initEP4UTFTPhS2_PN10Parameters8params_tE>
	
	lcd.clrScr();
    2b66:	c7 01       	movw	r24, r14
    2b68:	0e 94 e3 36 	call	0x6dc6	; 0x6dc6 <_ZN4UTFT6clrScrEv>
	menu.drawMenus();
    2b6c:	ce 01       	movw	r24, r28
    2b6e:	a0 db       	rcall	.-2240   	; 0x22b0 <_ZN4Menu9drawMenusEv>
	menu.drawValues();
    2b70:	ce 01       	movw	r24, r28
}
    2b72:	df 91       	pop	r29
    2b74:	cf 91       	pop	r28
    2b76:	1f 91       	pop	r17
    2b78:	0f 91       	pop	r16
    2b7a:	ff 90       	pop	r15
    2b7c:	ef 90       	pop	r14
    2b7e:	df 90       	pop	r13
    2b80:	cf 90       	pop	r12
    2b82:	bf 90       	pop	r11
    2b84:	af 90       	pop	r10
    2b86:	9f 90       	pop	r9
	
	menu.init(&lcd, SmallFont, BigFont, ctrlPtr->paramsPtr);
	
	lcd.clrScr();
	menu.drawMenus();
	menu.drawValues();
    2b88:	8f 90       	pop	r8
    2b8a:	9a cb       	rjmp	.-2252   	; 0x22c0 <_ZN4Menu10drawValuesEv>

00002b8c <_ZN6Screen7displayEv>:
}

void Screen::display() {
    2b8c:	ef 92       	push	r14
    2b8e:	ff 92       	push	r15
    2b90:	0f 93       	push	r16
    2b92:	1f 93       	push	r17
    2b94:	cf 93       	push	r28
    2b96:	df 93       	push	r29
    2b98:	8c 01       	movw	r16, r24
	if(ctrlPtr->menuChanged){
    2b9a:	ec 01       	movw	r28, r24
    2b9c:	c6 58       	subi	r28, 0x86	; 134
    2b9e:	df 4f       	sbci	r29, 0xFF	; 255
    2ba0:	e8 81       	ld	r30, Y
    2ba2:	f9 81       	ldd	r31, Y+1	; 0x01
    2ba4:	ec 57       	subi	r30, 0x7C	; 124
    2ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba8:	80 81       	ld	r24, Z
    2baa:	88 23       	and	r24, r24
    2bac:	69 f0       	breq	.+26     	; 0x2bc8 <_ZN6Screen7displayEv+0x3c>
		menu.drawMenus();
    2bae:	78 01       	movw	r14, r16
    2bb0:	8d ea       	ldi	r24, 0xAD	; 173
    2bb2:	e8 0e       	add	r14, r24
    2bb4:	f1 1c       	adc	r15, r1
    2bb6:	c7 01       	movw	r24, r14
    2bb8:	7b db       	rcall	.-2314   	; 0x22b0 <_ZN4Menu9drawMenusEv>
		menu.drawValues();
    2bba:	c7 01       	movw	r24, r14
    2bbc:	81 db       	rcall	.-2302   	; 0x22c0 <_ZN4Menu10drawValuesEv>
		ctrlPtr->menuChanged = false;
    2bbe:	e8 81       	ld	r30, Y
    2bc0:	f9 81       	ldd	r31, Y+1	; 0x01
    2bc2:	ec 57       	subi	r30, 0x7C	; 124
    2bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc6:	10 82       	st	Z, r1
	}
	if (ctrlPtr->enc1h.changed
    2bc8:	e8 81       	ld	r30, Y
    2bca:	f9 81       	ldd	r31, Y+1	; 0x01
    2bcc:	83 a9       	ldd	r24, Z+51	; 0x33
    2bce:	81 11       	cpse	r24, r1
    2bd0:	0f c0       	rjmp	.+30     	; 0x2bf0 <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc2h.changed
    2bd2:	df 01       	movw	r26, r30
    2bd4:	a8 5b       	subi	r26, 0xB8	; 184
    2bd6:	bf 4f       	sbci	r27, 0xFF	; 255
    2bd8:	8c 91       	ld	r24, X
    2bda:	81 11       	cpse	r24, r1
    2bdc:	09 c0       	rjmp	.+18     	; 0x2bf0 <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc3h.changed
    2bde:	55 96       	adiw	r26, 0x15	; 21
    2be0:	8c 91       	ld	r24, X
    2be2:	81 11       	cpse	r24, r1
    2be4:	05 c0       	rjmp	.+10     	; 0x2bf0 <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc4h.changed )
    2be6:	ee 58       	subi	r30, 0x8E	; 142
    2be8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bea:	80 81       	ld	r24, Z
    2bec:	88 23       	and	r24, r24
    2bee:	81 f0       	breq	.+32     	; 0x2c10 <_ZN6Screen7displayEv+0x84>
	{
		menu.drawValues();
    2bf0:	c8 01       	movw	r24, r16
    2bf2:	83 55       	subi	r24, 0x53	; 83
    2bf4:	9f 4f       	sbci	r25, 0xFF	; 255
    2bf6:	64 db       	rcall	.-2360   	; 0x22c0 <_ZN4Menu10drawValuesEv>
		ctrlPtr->enc1h.changed = false;
    2bf8:	e8 81       	ld	r30, Y
    2bfa:	f9 81       	ldd	r31, Y+1	; 0x01
    2bfc:	13 aa       	std	Z+51, r1	; 0x33
		ctrlPtr->enc2h.changed = false;
    2bfe:	df 01       	movw	r26, r30
    2c00:	a8 5b       	subi	r26, 0xB8	; 184
    2c02:	bf 4f       	sbci	r27, 0xFF	; 255
    2c04:	1c 92       	st	X, r1
		ctrlPtr->enc3h.changed = false;
    2c06:	55 96       	adiw	r26, 0x15	; 21
    2c08:	1c 92       	st	X, r1
		ctrlPtr->enc4h.changed = false;
    2c0a:	ee 58       	subi	r30, 0x8E	; 142
    2c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c0e:	10 82       	st	Z, r1
	}
    2c10:	df 91       	pop	r29
    2c12:	cf 91       	pop	r28
    2c14:	1f 91       	pop	r17
    2c16:	0f 91       	pop	r16
    2c18:	ff 90       	pop	r15
    2c1a:	ef 90       	pop	r14
    2c1c:	08 95       	ret

00002c1e <_GLOBAL__sub_I__ZN6ScreenC2Ev>:
    2c1e:	cf 93       	push	r28
    2c20:	df 93       	push	r29
    2c22:	69 ea       	ldi	r22, 0xA9	; 169
    2c24:	72 e0       	ldi	r23, 0x02	; 2
    2c26:	8c e1       	ldi	r24, 0x1C	; 28
    2c28:	96 e0       	ldi	r25, 0x06	; 6
    2c2a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2c2e:	6e ea       	ldi	r22, 0xAE	; 174
    2c30:	72 e0       	ldi	r23, 0x02	; 2
    2c32:	82 e2       	ldi	r24, 0x22	; 34
    2c34:	96 e0       	ldi	r25, 0x06	; 6
    2c36:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2c3a:	63 eb       	ldi	r22, 0xB3	; 179
    2c3c:	72 e0       	ldi	r23, 0x02	; 2
    2c3e:	88 e2       	ldi	r24, 0x28	; 40
    2c40:	96 e0       	ldi	r25, 0x06	; 6
    2c42:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2c46:	68 eb       	ldi	r22, 0xB8	; 184
    2c48:	72 e0       	ldi	r23, 0x02	; 2
    2c4a:	8e e2       	ldi	r24, 0x2E	; 46
    2c4c:	96 e0       	ldi	r25, 0x06	; 6
    2c4e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2c52:	6b eb       	ldi	r22, 0xBB	; 187
    2c54:	72 e0       	ldi	r23, 0x02	; 2
    2c56:	84 e3       	ldi	r24, 0x34	; 52
    2c58:	96 e0       	ldi	r25, 0x06	; 6
    2c5a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2c5e:	61 ec       	ldi	r22, 0xC1	; 193
    2c60:	72 e0       	ldi	r23, 0x02	; 2
    2c62:	84 e0       	ldi	r24, 0x04	; 4
    2c64:	96 e0       	ldi	r25, 0x06	; 6
    2c66:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2c6a:	67 ec       	ldi	r22, 0xC7	; 199
    2c6c:	72 e0       	ldi	r23, 0x02	; 2
    2c6e:	8a e0       	ldi	r24, 0x0A	; 10
    2c70:	96 e0       	ldi	r25, 0x06	; 6
    2c72:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2c76:	6d ec       	ldi	r22, 0xCD	; 205
    2c78:	72 e0       	ldi	r23, 0x02	; 2
    2c7a:	80 e1       	ldi	r24, 0x10	; 16
    2c7c:	96 e0       	ldi	r25, 0x06	; 6
    2c7e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2c82:	67 ec       	ldi	r22, 0xC7	; 199
    2c84:	72 e0       	ldi	r23, 0x02	; 2
    2c86:	86 e1       	ldi	r24, 0x16	; 22
    2c88:	96 e0       	ldi	r25, 0x06	; 6
    2c8a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2c8e:	62 ed       	ldi	r22, 0xD2	; 210
    2c90:	72 e0       	ldi	r23, 0x02	; 2
    2c92:	8c ee       	ldi	r24, 0xEC	; 236
    2c94:	95 e0       	ldi	r25, 0x05	; 5
    2c96:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2c9a:	67 ec       	ldi	r22, 0xC7	; 199
    2c9c:	72 e0       	ldi	r23, 0x02	; 2
    2c9e:	82 ef       	ldi	r24, 0xF2	; 242
    2ca0:	95 e0       	ldi	r25, 0x05	; 5
    2ca2:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2ca6:	68 ed       	ldi	r22, 0xD8	; 216
    2ca8:	72 e0       	ldi	r23, 0x02	; 2
    2caa:	88 ef       	ldi	r24, 0xF8	; 248
    2cac:	95 e0       	ldi	r25, 0x05	; 5
    2cae:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2cb2:	6d ec       	ldi	r22, 0xCD	; 205
    2cb4:	72 e0       	ldi	r23, 0x02	; 2
    2cb6:	8e ef       	ldi	r24, 0xFE	; 254
    2cb8:	95 e0       	ldi	r25, 0x05	; 5
    2cba:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2cbe:	6d ed       	ldi	r22, 0xDD	; 221
    2cc0:	72 e0       	ldi	r23, 0x02	; 2
    2cc2:	84 ed       	ldi	r24, 0xD4	; 212
    2cc4:	95 e0       	ldi	r25, 0x05	; 5
    2cc6:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2cca:	62 ee       	ldi	r22, 0xE2	; 226
    2ccc:	72 e0       	ldi	r23, 0x02	; 2
    2cce:	8a ed       	ldi	r24, 0xDA	; 218
    2cd0:	95 e0       	ldi	r25, 0x05	; 5
    2cd2:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2cd6:	67 ee       	ldi	r22, 0xE7	; 231
    2cd8:	72 e0       	ldi	r23, 0x02	; 2
    2cda:	80 ee       	ldi	r24, 0xE0	; 224
    2cdc:	95 e0       	ldi	r25, 0x05	; 5
    2cde:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2ce2:	6c ee       	ldi	r22, 0xEC	; 236
    2ce4:	72 e0       	ldi	r23, 0x02	; 2
    2ce6:	86 ee       	ldi	r24, 0xE6	; 230
    2ce8:	95 e0       	ldi	r25, 0x05	; 5
    2cea:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2cee:	62 ed       	ldi	r22, 0xD2	; 210
    2cf0:	72 e0       	ldi	r23, 0x02	; 2
    2cf2:	8c eb       	ldi	r24, 0xBC	; 188
    2cf4:	95 e0       	ldi	r25, 0x05	; 5
    2cf6:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2cfa:	61 ef       	ldi	r22, 0xF1	; 241
    2cfc:	72 e0       	ldi	r23, 0x02	; 2
    2cfe:	82 ec       	ldi	r24, 0xC2	; 194
    2d00:	95 e0       	ldi	r25, 0x05	; 5
    2d02:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d06:	66 ef       	ldi	r22, 0xF6	; 246
    2d08:	72 e0       	ldi	r23, 0x02	; 2
    2d0a:	88 ec       	ldi	r24, 0xC8	; 200
    2d0c:	95 e0       	ldi	r25, 0x05	; 5
    2d0e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d12:	6d ec       	ldi	r22, 0xCD	; 205
    2d14:	72 e0       	ldi	r23, 0x02	; 2
    2d16:	8e ec       	ldi	r24, 0xCE	; 206
    2d18:	95 e0       	ldi	r25, 0x05	; 5
    2d1a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2d1e:	6d ef       	ldi	r22, 0xFD	; 253
    2d20:	72 e0       	ldi	r23, 0x02	; 2
    2d22:	84 ea       	ldi	r24, 0xA4	; 164
    2d24:	95 e0       	ldi	r25, 0x05	; 5
    2d26:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d2a:	67 e0       	ldi	r22, 0x07	; 7
    2d2c:	73 e0       	ldi	r23, 0x03	; 3
    2d2e:	8a ea       	ldi	r24, 0xAA	; 170
    2d30:	95 e0       	ldi	r25, 0x05	; 5
    2d32:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d36:	6f e0       	ldi	r22, 0x0F	; 15
    2d38:	73 e0       	ldi	r23, 0x03	; 3
    2d3a:	80 eb       	ldi	r24, 0xB0	; 176
    2d3c:	95 e0       	ldi	r25, 0x05	; 5
    2d3e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d42:	68 e1       	ldi	r22, 0x18	; 24
    2d44:	73 e0       	ldi	r23, 0x03	; 3
    2d46:	86 eb       	ldi	r24, 0xB6	; 182
    2d48:	95 e0       	ldi	r25, 0x05	; 5
    2d4a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    2d4e:	60 e2       	ldi	r22, 0x20	; 32
    2d50:	73 e0       	ldi	r23, 0x03	; 3
    2d52:	8c e8       	ldi	r24, 0x8C	; 140
    2d54:	95 e0       	ldi	r25, 0x05	; 5
    2d56:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d5a:	64 e2       	ldi	r22, 0x24	; 36
    2d5c:	73 e0       	ldi	r23, 0x03	; 3
    2d5e:	82 e9       	ldi	r24, 0x92	; 146
    2d60:	95 e0       	ldi	r25, 0x05	; 5
    2d62:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d66:	68 e2       	ldi	r22, 0x28	; 40
    2d68:	73 e0       	ldi	r23, 0x03	; 3
    2d6a:	88 e9       	ldi	r24, 0x98	; 152
    2d6c:	95 e0       	ldi	r25, 0x05	; 5
    2d6e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d72:	6c e2       	ldi	r22, 0x2C	; 44
    2d74:	73 e0       	ldi	r23, 0x03	; 3
    2d76:	8e e9       	ldi	r24, 0x9E	; 158
    2d78:	95 e0       	ldi	r25, 0x05	; 5
    2d7a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    2d7e:	60 e3       	ldi	r22, 0x30	; 48
    2d80:	73 e0       	ldi	r23, 0x03	; 3
    2d82:	8c e5       	ldi	r24, 0x5C	; 92
    2d84:	95 e0       	ldi	r25, 0x05	; 5
    2d86:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d8a:	c0 e0       	ldi	r28, 0x00	; 0
    2d8c:	d0 e0       	ldi	r29, 0x00	; 0
    2d8e:	26 96       	adiw	r28, 0x06	; 6
    2d90:	63 e8       	ldi	r22, 0x83	; 131
    2d92:	73 e0       	ldi	r23, 0x03	; 3
    2d94:	ce 01       	movw	r24, r28
    2d96:	84 5a       	subi	r24, 0xA4	; 164
    2d98:	9a 4f       	sbci	r25, 0xFA	; 250
    2d9a:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2d9e:	ca 32       	cpi	r28, 0x2A	; 42
    2da0:	d1 05       	cpc	r29, r1
    2da2:	a9 f7       	brne	.-22     	; 0x2d8e <_GLOBAL__sub_I__ZN6ScreenC2Ev+0x170>
    2da4:	df 91       	pop	r29
    2da6:	cf 91       	pop	r28
    2da8:	08 95       	ret

00002daa <_GLOBAL__sub_D__ZN6ScreenC2Ev>:
    2daa:	cf 93       	push	r28
    2dac:	df 93       	push	r29
    2dae:	cc e8       	ldi	r28, 0x8C	; 140
    2db0:	d5 e0       	ldi	r29, 0x05	; 5
    2db2:	26 97       	sbiw	r28, 0x06	; 6
    2db4:	ce 01       	movw	r24, r28
    2db6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2dba:	85 e0       	ldi	r24, 0x05	; 5
    2dbc:	cc 35       	cpi	r28, 0x5C	; 92
    2dbe:	d8 07       	cpc	r29, r24
    2dc0:	c1 f7       	brne	.-16     	; 0x2db2 <_GLOBAL__sub_D__ZN6ScreenC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    2dc2:	8e e9       	ldi	r24, 0x9E	; 158
    2dc4:	95 e0       	ldi	r25, 0x05	; 5
    2dc6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2dca:	88 e9       	ldi	r24, 0x98	; 152
    2dcc:	95 e0       	ldi	r25, 0x05	; 5
    2dce:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2dd2:	82 e9       	ldi	r24, 0x92	; 146
    2dd4:	95 e0       	ldi	r25, 0x05	; 5
    2dd6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2dda:	8c e8       	ldi	r24, 0x8C	; 140
    2ddc:	95 e0       	ldi	r25, 0x05	; 5
    2dde:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2de2:	86 eb       	ldi	r24, 0xB6	; 182
    2de4:	95 e0       	ldi	r25, 0x05	; 5
    2de6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2dea:	80 eb       	ldi	r24, 0xB0	; 176
    2dec:	95 e0       	ldi	r25, 0x05	; 5
    2dee:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2df2:	8a ea       	ldi	r24, 0xAA	; 170
    2df4:	95 e0       	ldi	r25, 0x05	; 5
    2df6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2dfa:	84 ea       	ldi	r24, 0xA4	; 164
    2dfc:	95 e0       	ldi	r25, 0x05	; 5
    2dfe:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2e02:	8e ec       	ldi	r24, 0xCE	; 206
    2e04:	95 e0       	ldi	r25, 0x05	; 5
    2e06:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e0a:	88 ec       	ldi	r24, 0xC8	; 200
    2e0c:	95 e0       	ldi	r25, 0x05	; 5
    2e0e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e12:	82 ec       	ldi	r24, 0xC2	; 194
    2e14:	95 e0       	ldi	r25, 0x05	; 5
    2e16:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e1a:	8c eb       	ldi	r24, 0xBC	; 188
    2e1c:	95 e0       	ldi	r25, 0x05	; 5
    2e1e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2e22:	86 ee       	ldi	r24, 0xE6	; 230
    2e24:	95 e0       	ldi	r25, 0x05	; 5
    2e26:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e2a:	80 ee       	ldi	r24, 0xE0	; 224
    2e2c:	95 e0       	ldi	r25, 0x05	; 5
    2e2e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e32:	8a ed       	ldi	r24, 0xDA	; 218
    2e34:	95 e0       	ldi	r25, 0x05	; 5
    2e36:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e3a:	84 ed       	ldi	r24, 0xD4	; 212
    2e3c:	95 e0       	ldi	r25, 0x05	; 5
    2e3e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2e42:	8e ef       	ldi	r24, 0xFE	; 254
    2e44:	95 e0       	ldi	r25, 0x05	; 5
    2e46:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e4a:	88 ef       	ldi	r24, 0xF8	; 248
    2e4c:	95 e0       	ldi	r25, 0x05	; 5
    2e4e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e52:	82 ef       	ldi	r24, 0xF2	; 242
    2e54:	95 e0       	ldi	r25, 0x05	; 5
    2e56:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e5a:	8c ee       	ldi	r24, 0xEC	; 236
    2e5c:	95 e0       	ldi	r25, 0x05	; 5
    2e5e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2e62:	86 e1       	ldi	r24, 0x16	; 22
    2e64:	96 e0       	ldi	r25, 0x06	; 6
    2e66:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e6a:	80 e1       	ldi	r24, 0x10	; 16
    2e6c:	96 e0       	ldi	r25, 0x06	; 6
    2e6e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e72:	8a e0       	ldi	r24, 0x0A	; 10
    2e74:	96 e0       	ldi	r25, 0x06	; 6
    2e76:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e7a:	84 e0       	ldi	r24, 0x04	; 4
    2e7c:	96 e0       	ldi	r25, 0x06	; 6
    2e7e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e82:	ca e3       	ldi	r28, 0x3A	; 58
    2e84:	d6 e0       	ldi	r29, 0x06	; 6
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    2e86:	26 97       	sbiw	r28, 0x06	; 6
    2e88:	ce 01       	movw	r24, r28
    2e8a:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    2e8e:	86 e0       	ldi	r24, 0x06	; 6
    2e90:	cc 31       	cpi	r28, 0x1C	; 28
    2e92:	d8 07       	cpc	r29, r24
    2e94:	c1 f7       	brne	.-16     	; 0x2e86 <_GLOBAL__sub_D__ZN6ScreenC2Ev+0xdc>
    2e96:	df 91       	pop	r29
    2e98:	cf 91       	pop	r28
    2e9a:	08 95       	ret

00002e9c <_Z10encoderISRv>:
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
	message[1] = b1;
	message[2] = b2; 
    2e9c:	80 e3       	ldi	r24, 0x30	; 48
    2e9e:	97 e0       	ldi	r25, 0x07	; 7
    2ea0:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <_ZN7Control16updateParametersEv>

00002ea4 <setup>:
    2ea4:	68 e0       	ldi	r22, 0x08	; 8
    2ea6:	70 e0       	ldi	r23, 0x00	; 0
    2ea8:	8f e2       	ldi	r24, 0x2F	; 47
    2eaa:	99 e0       	ldi	r25, 0x09	; 9
    2eac:	0e 94 dc 42 	call	0x85b8	; 0x85b8 <_ZN7TwoWire5beginEi>
    2eb0:	62 ec       	ldi	r22, 0xC2	; 194
    2eb2:	77 e0       	ldi	r23, 0x07	; 7
    2eb4:	80 e3       	ldi	r24, 0x30	; 48
    2eb6:	97 e0       	ldi	r25, 0x07	; 7
    2eb8:	0e 94 3a 0b 	call	0x1674	; 0x1674 <_ZN7Control4initEPN10Parameters8params_tE>
    2ebc:	60 e3       	ldi	r22, 0x30	; 48
    2ebe:	77 e0       	ldi	r23, 0x07	; 7
    2ec0:	8a e3       	ldi	r24, 0x3A	; 58
    2ec2:	96 e0       	ldi	r25, 0x06	; 6
    2ec4:	09 de       	rcall	.-1006   	; 0x2ad8 <_ZN6Screen4initEP7Control>
    2ec6:	48 ee       	ldi	r20, 0xE8	; 232
    2ec8:	53 e0       	ldi	r21, 0x03	; 3
    2eca:	60 e0       	ldi	r22, 0x00	; 0
    2ecc:	70 e0       	ldi	r23, 0x00	; 0
    2ece:	8b eb       	ldi	r24, 0xBB	; 187
    2ed0:	98 e0       	ldi	r25, 0x08	; 8
    2ed2:	1b d4       	rcall	.+2102   	; 0x370a <_ZN8TimerOne10initializeEl>
    2ed4:	2f ef       	ldi	r18, 0xFF	; 255
    2ed6:	3f ef       	ldi	r19, 0xFF	; 255
    2ed8:	a9 01       	movw	r20, r18
    2eda:	6e e4       	ldi	r22, 0x4E	; 78
    2edc:	77 e1       	ldi	r23, 0x17	; 23
    2ede:	8b eb       	ldi	r24, 0xBB	; 187
    2ee0:	98 e0       	ldi	r25, 0x08	; 8
    2ee2:	28 c4       	rjmp	.+2128   	; 0x3734 <_ZN8TimerOne15attachInterruptEPFvvEl>

00002ee4 <loop>:
    2ee4:	80 e3       	ldi	r24, 0x30	; 48
    2ee6:	97 e0       	ldi	r25, 0x07	; 7
    2ee8:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <_ZN7Control4readEv>
    2eec:	8b eb       	ldi	r24, 0xBB	; 187
    2eee:	98 e0       	ldi	r25, 0x08	; 8
    2ef0:	12 d4       	rcall	.+2084   	; 0x3716 <_ZN8TimerOne15detachInterruptEv>
    2ef2:	62 e1       	ldi	r22, 0x12	; 18
    2ef4:	79 e1       	ldi	r23, 0x19	; 25
    2ef6:	8f e2       	ldi	r24, 0x2F	; 47
    2ef8:	99 e0       	ldi	r25, 0x09	; 9
    2efa:	0e 94 dd 42 	call	0x85ba	; 0x85ba <_ZN7TwoWire9onRequestEPFvvE>
    2efe:	8a e3       	ldi	r24, 0x3A	; 58
    2f00:	96 e0       	ldi	r25, 0x06	; 6
    2f02:	44 de       	rcall	.-888    	; 0x2b8c <_ZN6Screen7displayEv>
    2f04:	2f ef       	ldi	r18, 0xFF	; 255
    2f06:	3f ef       	ldi	r19, 0xFF	; 255
    2f08:	a9 01       	movw	r20, r18
    2f0a:	6e e4       	ldi	r22, 0x4E	; 78
    2f0c:	77 e1       	ldi	r23, 0x17	; 23
    2f0e:	8b eb       	ldi	r24, 0xBB	; 187
    2f10:	98 e0       	ldi	r25, 0x08	; 8
    2f12:	10 c4       	rjmp	.+2080   	; 0x3734 <_ZN8TimerOne15attachInterruptEPFvvEl>

00002f14 <_GLOBAL__sub_I_parameters>:
    2f14:	cf 93       	push	r28
    2f16:	df 93       	push	r29
    2f18:	69 ea       	ldi	r22, 0xA9	; 169
    2f1a:	72 e0       	ldi	r23, 0x02	; 2
    2f1c:	8d e9       	ldi	r24, 0x9D	; 157
    2f1e:	98 e0       	ldi	r25, 0x08	; 8
    2f20:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f24:	6e ea       	ldi	r22, 0xAE	; 174
    2f26:	72 e0       	ldi	r23, 0x02	; 2
    2f28:	83 ea       	ldi	r24, 0xA3	; 163
    2f2a:	98 e0       	ldi	r25, 0x08	; 8
    2f2c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f30:	63 eb       	ldi	r22, 0xB3	; 179
    2f32:	72 e0       	ldi	r23, 0x02	; 2
    2f34:	89 ea       	ldi	r24, 0xA9	; 169
    2f36:	98 e0       	ldi	r25, 0x08	; 8
    2f38:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f3c:	68 eb       	ldi	r22, 0xB8	; 184
    2f3e:	72 e0       	ldi	r23, 0x02	; 2
    2f40:	8f ea       	ldi	r24, 0xAF	; 175
    2f42:	98 e0       	ldi	r25, 0x08	; 8
    2f44:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f48:	6b eb       	ldi	r22, 0xBB	; 187
    2f4a:	72 e0       	ldi	r23, 0x02	; 2
    2f4c:	85 eb       	ldi	r24, 0xB5	; 181
    2f4e:	98 e0       	ldi	r25, 0x08	; 8
    2f50:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2f54:	61 ec       	ldi	r22, 0xC1	; 193
    2f56:	72 e0       	ldi	r23, 0x02	; 2
    2f58:	85 e8       	ldi	r24, 0x85	; 133
    2f5a:	98 e0       	ldi	r25, 0x08	; 8
    2f5c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f60:	67 ec       	ldi	r22, 0xC7	; 199
    2f62:	72 e0       	ldi	r23, 0x02	; 2
    2f64:	8b e8       	ldi	r24, 0x8B	; 139
    2f66:	98 e0       	ldi	r25, 0x08	; 8
    2f68:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f6c:	6d ec       	ldi	r22, 0xCD	; 205
    2f6e:	72 e0       	ldi	r23, 0x02	; 2
    2f70:	81 e9       	ldi	r24, 0x91	; 145
    2f72:	98 e0       	ldi	r25, 0x08	; 8
    2f74:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f78:	67 ec       	ldi	r22, 0xC7	; 199
    2f7a:	72 e0       	ldi	r23, 0x02	; 2
    2f7c:	87 e9       	ldi	r24, 0x97	; 151
    2f7e:	98 e0       	ldi	r25, 0x08	; 8
    2f80:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2f84:	62 ed       	ldi	r22, 0xD2	; 210
    2f86:	72 e0       	ldi	r23, 0x02	; 2
    2f88:	8d e6       	ldi	r24, 0x6D	; 109
    2f8a:	98 e0       	ldi	r25, 0x08	; 8
    2f8c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f90:	67 ec       	ldi	r22, 0xC7	; 199
    2f92:	72 e0       	ldi	r23, 0x02	; 2
    2f94:	83 e7       	ldi	r24, 0x73	; 115
    2f96:	98 e0       	ldi	r25, 0x08	; 8
    2f98:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2f9c:	68 ed       	ldi	r22, 0xD8	; 216
    2f9e:	72 e0       	ldi	r23, 0x02	; 2
    2fa0:	89 e7       	ldi	r24, 0x79	; 121
    2fa2:	98 e0       	ldi	r25, 0x08	; 8
    2fa4:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2fa8:	6d ec       	ldi	r22, 0xCD	; 205
    2faa:	72 e0       	ldi	r23, 0x02	; 2
    2fac:	8f e7       	ldi	r24, 0x7F	; 127
    2fae:	98 e0       	ldi	r25, 0x08	; 8
    2fb0:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2fb4:	6d ed       	ldi	r22, 0xDD	; 221
    2fb6:	72 e0       	ldi	r23, 0x02	; 2
    2fb8:	85 e5       	ldi	r24, 0x55	; 85
    2fba:	98 e0       	ldi	r25, 0x08	; 8
    2fbc:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2fc0:	62 ee       	ldi	r22, 0xE2	; 226
    2fc2:	72 e0       	ldi	r23, 0x02	; 2
    2fc4:	8b e5       	ldi	r24, 0x5B	; 91
    2fc6:	98 e0       	ldi	r25, 0x08	; 8
    2fc8:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2fcc:	67 ee       	ldi	r22, 0xE7	; 231
    2fce:	72 e0       	ldi	r23, 0x02	; 2
    2fd0:	81 e6       	ldi	r24, 0x61	; 97
    2fd2:	98 e0       	ldi	r25, 0x08	; 8
    2fd4:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2fd8:	6c ee       	ldi	r22, 0xEC	; 236
    2fda:	72 e0       	ldi	r23, 0x02	; 2
    2fdc:	87 e6       	ldi	r24, 0x67	; 103
    2fde:	98 e0       	ldi	r25, 0x08	; 8
    2fe0:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2fe4:	62 ed       	ldi	r22, 0xD2	; 210
    2fe6:	72 e0       	ldi	r23, 0x02	; 2
    2fe8:	8d e3       	ldi	r24, 0x3D	; 61
    2fea:	98 e0       	ldi	r25, 0x08	; 8
    2fec:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2ff0:	61 ef       	ldi	r22, 0xF1	; 241
    2ff2:	72 e0       	ldi	r23, 0x02	; 2
    2ff4:	83 e4       	ldi	r24, 0x43	; 67
    2ff6:	98 e0       	ldi	r25, 0x08	; 8
    2ff8:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    2ffc:	66 ef       	ldi	r22, 0xF6	; 246
    2ffe:	72 e0       	ldi	r23, 0x02	; 2
    3000:	89 e4       	ldi	r24, 0x49	; 73
    3002:	98 e0       	ldi	r25, 0x08	; 8
    3004:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    3008:	6d ec       	ldi	r22, 0xCD	; 205
    300a:	72 e0       	ldi	r23, 0x02	; 2
    300c:	8f e4       	ldi	r24, 0x4F	; 79
    300e:	98 e0       	ldi	r25, 0x08	; 8
    3010:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    3014:	6d ef       	ldi	r22, 0xFD	; 253
    3016:	72 e0       	ldi	r23, 0x02	; 2
    3018:	85 e2       	ldi	r24, 0x25	; 37
    301a:	98 e0       	ldi	r25, 0x08	; 8
    301c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    3020:	67 e0       	ldi	r22, 0x07	; 7
    3022:	73 e0       	ldi	r23, 0x03	; 3
    3024:	8b e2       	ldi	r24, 0x2B	; 43
    3026:	98 e0       	ldi	r25, 0x08	; 8
    3028:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    302c:	6f e0       	ldi	r22, 0x0F	; 15
    302e:	73 e0       	ldi	r23, 0x03	; 3
    3030:	81 e3       	ldi	r24, 0x31	; 49
    3032:	98 e0       	ldi	r25, 0x08	; 8
    3034:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    3038:	68 e1       	ldi	r22, 0x18	; 24
    303a:	73 e0       	ldi	r23, 0x03	; 3
    303c:	87 e3       	ldi	r24, 0x37	; 55
    303e:	98 e0       	ldi	r25, 0x08	; 8
    3040:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    3044:	60 e2       	ldi	r22, 0x20	; 32
    3046:	73 e0       	ldi	r23, 0x03	; 3
    3048:	8d e0       	ldi	r24, 0x0D	; 13
    304a:	98 e0       	ldi	r25, 0x08	; 8
    304c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    3050:	64 e2       	ldi	r22, 0x24	; 36
    3052:	73 e0       	ldi	r23, 0x03	; 3
    3054:	83 e1       	ldi	r24, 0x13	; 19
    3056:	98 e0       	ldi	r25, 0x08	; 8
    3058:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    305c:	68 e2       	ldi	r22, 0x28	; 40
    305e:	73 e0       	ldi	r23, 0x03	; 3
    3060:	89 e1       	ldi	r24, 0x19	; 25
    3062:	98 e0       	ldi	r25, 0x08	; 8
    3064:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    3068:	6c e2       	ldi	r22, 0x2C	; 44
    306a:	73 e0       	ldi	r23, 0x03	; 3
    306c:	8f e1       	ldi	r24, 0x1F	; 31
    306e:	98 e0       	ldi	r25, 0x08	; 8
    3070:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    3074:	60 e3       	ldi	r22, 0x30	; 48
    3076:	73 e0       	ldi	r23, 0x03	; 3
    3078:	8d ed       	ldi	r24, 0xDD	; 221
    307a:	97 e0       	ldi	r25, 0x07	; 7
    307c:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    3080:	c0 e0       	ldi	r28, 0x00	; 0
    3082:	d0 e0       	ldi	r29, 0x00	; 0
    3084:	26 96       	adiw	r28, 0x06	; 6
    3086:	63 e8       	ldi	r22, 0x83	; 131
    3088:	73 e0       	ldi	r23, 0x03	; 3
    308a:	ce 01       	movw	r24, r28
    308c:	83 52       	subi	r24, 0x23	; 35
    308e:	98 4f       	sbci	r25, 0xF8	; 248
    3090:	0e 94 51 49 	call	0x92a2	; 0x92a2 <_ZN6StringC1EPKc>
    3094:	ca 32       	cpi	r28, 0x2A	; 42
    3096:	d1 05       	cpc	r29, r1
    3098:	a9 f7       	brne	.-22     	; 0x3084 <_GLOBAL__sub_I_parameters+0x170>
    309a:	10 92 c2 07 	sts	0x07C2, r1	; 0x8007c2 <parameters>
    309e:	10 92 c3 07 	sts	0x07C3, r1	; 0x8007c3 <parameters+0x1>
    30a2:	8c ed       	ldi	r24, 0xDC	; 220
    30a4:	90 e0       	ldi	r25, 0x00	; 0
    30a6:	90 93 c5 07 	sts	0x07C5, r25	; 0x8007c5 <parameters+0x3>
    30aa:	80 93 c4 07 	sts	0x07C4, r24	; 0x8007c4 <parameters+0x2>
    30ae:	10 92 c6 07 	sts	0x07C6, r1	; 0x8007c6 <parameters+0x4>
    30b2:	80 e9       	ldi	r24, 0x90	; 144
    30b4:	91 e0       	ldi	r25, 0x01	; 1
    30b6:	90 93 c8 07 	sts	0x07C8, r25	; 0x8007c8 <parameters+0x6>
    30ba:	80 93 c7 07 	sts	0x07C7, r24	; 0x8007c7 <parameters+0x5>
    30be:	10 92 c9 07 	sts	0x07C9, r1	; 0x8007c9 <parameters+0x7>
    30c2:	80 e4       	ldi	r24, 0x40	; 64
    30c4:	9f e1       	ldi	r25, 0x1F	; 31
    30c6:	90 93 cb 07 	sts	0x07CB, r25	; 0x8007cb <parameters+0x9>
    30ca:	80 93 ca 07 	sts	0x07CA, r24	; 0x8007ca <parameters+0x8>
    30ce:	88 e2       	ldi	r24, 0x28	; 40
    30d0:	80 93 cc 07 	sts	0x07CC, r24	; 0x8007cc <parameters+0xa>
    30d4:	10 92 cd 07 	sts	0x07CD, r1	; 0x8007cd <parameters+0xb>
    30d8:	10 92 cf 07 	sts	0x07CF, r1	; 0x8007cf <parameters+0xd>
    30dc:	10 92 ce 07 	sts	0x07CE, r1	; 0x8007ce <parameters+0xc>
    30e0:	88 ec       	ldi	r24, 0xC8	; 200
    30e2:	90 e0       	ldi	r25, 0x00	; 0
    30e4:	90 93 d1 07 	sts	0x07D1, r25	; 0x8007d1 <parameters+0xf>
    30e8:	80 93 d0 07 	sts	0x07D0, r24	; 0x8007d0 <parameters+0xe>
    30ec:	84 eb       	ldi	r24, 0xB4	; 180
    30ee:	80 93 d2 07 	sts	0x07D2, r24	; 0x8007d2 <parameters+0x10>
    30f2:	8a ef       	ldi	r24, 0xFA	; 250
    30f4:	90 e0       	ldi	r25, 0x00	; 0
    30f6:	90 93 d4 07 	sts	0x07D4, r25	; 0x8007d4 <parameters+0x12>
    30fa:	80 93 d3 07 	sts	0x07D3, r24	; 0x8007d3 <parameters+0x11>
    30fe:	10 92 d5 07 	sts	0x07D5, r1	; 0x8007d5 <parameters+0x13>
    3102:	10 92 d6 07 	sts	0x07D6, r1	; 0x8007d6 <parameters+0x14>
    3106:	10 92 d7 07 	sts	0x07D7, r1	; 0x8007d7 <parameters+0x15>
    310a:	10 92 d8 07 	sts	0x07D8, r1	; 0x8007d8 <parameters+0x16>
    310e:	8f e7       	ldi	r24, 0x7F	; 127
    3110:	80 93 d9 07 	sts	0x07D9, r24	; 0x8007d9 <parameters+0x17>
    3114:	10 92 da 07 	sts	0x07DA, r1	; 0x8007da <parameters+0x18>
    3118:	10 92 db 07 	sts	0x07DB, r1	; 0x8007db <parameters+0x19>
    311c:	10 92 dc 07 	sts	0x07DC, r1	; 0x8007dc <parameters+0x1a>
#include "GLOBALS.h"

#define DEBUG 0

Parameters parameters;
Control control; 
    3120:	80 e3       	ldi	r24, 0x30	; 48
    3122:	97 e0       	ldi	r25, 0x07	; 7
    3124:	0e 94 47 0a 	call	0x148e	; 0x148e <_ZN7ControlC1Ev>
Screen screen; 
    3128:	8a e3       	ldi	r24, 0x3A	; 58
    312a:	96 e0       	ldi	r25, 0x06	; 6

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
	message[1] = b1;
	message[2] = b2; 
    312c:	df 91       	pop	r29
    312e:	cf 91       	pop	r28

#define DEBUG 0

Parameters parameters;
Control control; 
Screen screen; 
    3130:	b6 cc       	rjmp	.-1684   	; 0x2a9e <_ZN6ScreenC1Ev>

00003132 <_GLOBAL__sub_D_parameters>:

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
	message[1] = b1;
	message[2] = b2; 
    3132:	cf 93       	push	r28
    3134:	df 93       	push	r29
    3136:	cd e0       	ldi	r28, 0x0D	; 13
    3138:	d8 e0       	ldi	r29, 0x08	; 8
    313a:	26 97       	sbiw	r28, 0x06	; 6
    313c:	ce 01       	movw	r24, r28
    313e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    3142:	87 e0       	ldi	r24, 0x07	; 7
    3144:	cd 3d       	cpi	r28, 0xDD	; 221
    3146:	d8 07       	cpc	r29, r24
    3148:	c1 f7       	brne	.-16     	; 0x313a <_GLOBAL__sub_D_parameters+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    314a:	8f e1       	ldi	r24, 0x1F	; 31
    314c:	98 e0       	ldi	r25, 0x08	; 8
    314e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    3152:	89 e1       	ldi	r24, 0x19	; 25
    3154:	98 e0       	ldi	r25, 0x08	; 8
    3156:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    315a:	83 e1       	ldi	r24, 0x13	; 19
    315c:	98 e0       	ldi	r25, 0x08	; 8
    315e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    3162:	8d e0       	ldi	r24, 0x0D	; 13
    3164:	98 e0       	ldi	r25, 0x08	; 8
    3166:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    316a:	87 e3       	ldi	r24, 0x37	; 55
    316c:	98 e0       	ldi	r25, 0x08	; 8
    316e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    3172:	81 e3       	ldi	r24, 0x31	; 49
    3174:	98 e0       	ldi	r25, 0x08	; 8
    3176:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    317a:	8b e2       	ldi	r24, 0x2B	; 43
    317c:	98 e0       	ldi	r25, 0x08	; 8
    317e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    3182:	85 e2       	ldi	r24, 0x25	; 37
    3184:	98 e0       	ldi	r25, 0x08	; 8
    3186:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    318a:	8f e4       	ldi	r24, 0x4F	; 79
    318c:	98 e0       	ldi	r25, 0x08	; 8
    318e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    3192:	89 e4       	ldi	r24, 0x49	; 73
    3194:	98 e0       	ldi	r25, 0x08	; 8
    3196:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    319a:	83 e4       	ldi	r24, 0x43	; 67
    319c:	98 e0       	ldi	r25, 0x08	; 8
    319e:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31a2:	8d e3       	ldi	r24, 0x3D	; 61
    31a4:	98 e0       	ldi	r25, 0x08	; 8
    31a6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    31aa:	87 e6       	ldi	r24, 0x67	; 103
    31ac:	98 e0       	ldi	r25, 0x08	; 8
    31ae:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31b2:	81 e6       	ldi	r24, 0x61	; 97
    31b4:	98 e0       	ldi	r25, 0x08	; 8
    31b6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31ba:	8b e5       	ldi	r24, 0x5B	; 91
    31bc:	98 e0       	ldi	r25, 0x08	; 8
    31be:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31c2:	85 e5       	ldi	r24, 0x55	; 85
    31c4:	98 e0       	ldi	r25, 0x08	; 8
    31c6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    31ca:	8f e7       	ldi	r24, 0x7F	; 127
    31cc:	98 e0       	ldi	r25, 0x08	; 8
    31ce:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31d2:	89 e7       	ldi	r24, 0x79	; 121
    31d4:	98 e0       	ldi	r25, 0x08	; 8
    31d6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31da:	83 e7       	ldi	r24, 0x73	; 115
    31dc:	98 e0       	ldi	r25, 0x08	; 8
    31de:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31e2:	8d e6       	ldi	r24, 0x6D	; 109
    31e4:	98 e0       	ldi	r25, 0x08	; 8
    31e6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    31ea:	87 e9       	ldi	r24, 0x97	; 151
    31ec:	98 e0       	ldi	r25, 0x08	; 8
    31ee:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31f2:	81 e9       	ldi	r24, 0x91	; 145
    31f4:	98 e0       	ldi	r25, 0x08	; 8
    31f6:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    31fa:	8b e8       	ldi	r24, 0x8B	; 139
    31fc:	98 e0       	ldi	r25, 0x08	; 8
    31fe:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    3202:	85 e8       	ldi	r24, 0x85	; 133
    3204:	98 e0       	ldi	r25, 0x08	; 8
    3206:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    320a:	cb eb       	ldi	r28, 0xBB	; 187
    320c:	d8 e0       	ldi	r29, 0x08	; 8
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    320e:	26 97       	sbiw	r28, 0x06	; 6
    3210:	ce 01       	movw	r24, r28
    3212:	0e 94 ea 48 	call	0x91d4	; 0x91d4 <_ZN6StringD1Ev>
    3216:	88 e0       	ldi	r24, 0x08	; 8
    3218:	cd 39       	cpi	r28, 0x9D	; 157
    321a:	d8 07       	cpc	r29, r24
    321c:	c1 f7       	brne	.-16     	; 0x320e <_GLOBAL__sub_D_parameters+0xdc>
    321e:	df 91       	pop	r29
    3220:	cf 91       	pop	r28
    3222:	08 95       	ret

00003224 <_Z12requestEventv>:
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    3224:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <message>
	message[1] = b1;
    3228:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <message+0x1>
	message[2] = b2; 
    322c:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <message+0x2>
	byte paramAddr = 0x00; 
	byte byte1 = 0;
	byte byte2 = 0;
	setMessage(paramAddr, byte1, byte2);
		
	switch (parameters.data.menu)
    3230:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    3234:	82 30       	cpi	r24, 0x02	; 2
    3236:	09 f4       	brne	.+2      	; 0x323a <_Z12requestEventv+0x16>
    3238:	aa c0       	rjmp	.+340    	; 0x338e <_Z12requestEventv+0x16a>
    323a:	30 f4       	brcc	.+12     	; 0x3248 <_Z12requestEventv+0x24>
    323c:	88 23       	and	r24, r24
    323e:	59 f0       	breq	.+22     	; 0x3256 <_Z12requestEventv+0x32>
    3240:	81 30       	cpi	r24, 0x01	; 1
    3242:	09 f4       	brne	.+2      	; 0x3246 <_Z12requestEventv+0x22>
    3244:	57 c0       	rjmp	.+174    	; 0x32f4 <_Z12requestEventv+0xd0>
    3246:	08 95       	ret
    3248:	83 30       	cpi	r24, 0x03	; 3
    324a:	09 f4       	brne	.+2      	; 0x324e <_Z12requestEventv+0x2a>
    324c:	fd c0       	rjmp	.+506    	; 0x3448 <_Z12requestEventv+0x224>
    324e:	84 30       	cpi	r24, 0x04	; 4
    3250:	09 f4       	brne	.+2      	; 0x3254 <_Z12requestEventv+0x30>
    3252:	49 c1       	rjmp	.+658    	; 0x34e6 <_Z12requestEventv+0x2c2>
    3254:	08 95       	ret
	{			
		// Lowest nibble -> menu
		// Highest nibble -> param num (ex: oscWave=0, oscFreq=1, lfoWave=2, lfoFreq=3)
		case 0: 
			if (control.enc1h.changed)
    3256:	80 91 63 07 	lds	r24, 0x0763	; 0x800763 <control+0x33>
    325a:	88 23       	and	r24, r24
    325c:	79 f0       	breq	.+30     	; 0x327c <_Z12requestEventv+0x58>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = parameters.data.oscWave;
    325e:	80 91 c3 07 	lds	r24, 0x07C3	; 0x8007c3 <parameters+0x1>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    3262:	91 e0       	ldi	r25, 0x01	; 1
    3264:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <message>
	message[1] = b1;
    3268:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <message+0x1>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = parameters.data.oscWave;
			    byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    326c:	43 e0       	ldi	r20, 0x03	; 3
    326e:	50 e0       	ldi	r21, 0x00	; 0
    3270:	66 e0       	ldi	r22, 0x06	; 6
    3272:	72 e0       	ldi	r23, 0x02	; 2
    3274:	8f e2       	ldi	r24, 0x2F	; 47
    3276:	99 e0       	ldi	r25, 0x09	; 9
    3278:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}	
			if (control.enc2h.changed)
    327c:	80 91 78 07 	lds	r24, 0x0778	; 0x800778 <control+0x48>
    3280:	88 23       	and	r24, r24
    3282:	b1 f0       	breq	.+44     	; 0x32b0 <_Z12requestEventv+0x8c>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.oscFreq);
    3284:	20 91 c4 07 	lds	r18, 0x07C4	; 0x8007c4 <parameters+0x2>
    3288:	90 91 c5 07 	lds	r25, 0x07C5	; 0x8007c5 <parameters+0x3>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    328c:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    3290:	8f 5f       	subi	r24, 0xFF	; 255
    3292:	80 61       	ori	r24, 0x10	; 16
    3294:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    3298:	20 93 07 02 	sts	0x0207, r18	; 0x800207 <message+0x1>
	message[2] = b2; 
    329c:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.oscFreq);
				byte2 = get_upperByte(parameters.data.oscFreq); 
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    32a0:	43 e0       	ldi	r20, 0x03	; 3
    32a2:	50 e0       	ldi	r21, 0x00	; 0
    32a4:	66 e0       	ldi	r22, 0x06	; 6
    32a6:	72 e0       	ldi	r23, 0x02	; 2
    32a8:	8f e2       	ldi	r24, 0x2F	; 47
    32aa:	99 e0       	ldi	r25, 0x09	; 9
    32ac:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc3h.changed)
    32b0:	80 91 8d 07 	lds	r24, 0x078D	; 0x80078d <control+0x5d>
    32b4:	88 23       	and	r24, r24
    32b6:	a1 f0       	breq	.+40     	; 0x32e0 <_Z12requestEventv+0xbc>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.lfoWave;
    32b8:	90 91 c6 07 	lds	r25, 0x07C6	; 0x8007c6 <parameters+0x4>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    32bc:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    32c0:	8f 5f       	subi	r24, 0xFF	; 255
    32c2:	80 62       	ori	r24, 0x20	; 32
    32c4:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    32c8:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <message+0x1>
	message[2] = b2; 
    32cc:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.lfoWave;
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    32d0:	43 e0       	ldi	r20, 0x03	; 3
    32d2:	50 e0       	ldi	r21, 0x00	; 0
    32d4:	66 e0       	ldi	r22, 0x06	; 6
    32d6:	72 e0       	ldi	r23, 0x02	; 2
    32d8:	8f e2       	ldi	r24, 0x2F	; 47
    32da:	99 e0       	ldi	r25, 0x09	; 9
    32dc:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc4h.changed)
    32e0:	80 91 a2 07 	lds	r24, 0x07A2	; 0x8007a2 <control+0x72>
    32e4:	88 23       	and	r24, r24
    32e6:	09 f4       	brne	.+2      	; 0x32ea <_Z12requestEventv+0xc6>
    32e8:	41 c1       	rjmp	.+642    	; 0x356c <_Z12requestEventv+0x348>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (3 << 4);
				byte1 = get_lowerByte(parameters.data.lfoFreq); // this is an integer (float * LFOMUL)
    32ea:	20 91 c7 07 	lds	r18, 0x07C7	; 0x8007c7 <parameters+0x5>
    32ee:	90 91 c8 07 	lds	r25, 0x07C8	; 0x8007c8 <parameters+0x6>
    32f2:	9f c0       	rjmp	.+318    	; 0x3432 <_Z12requestEventv+0x20e>
				Wire.write(message, 3);
			}
		break;
		
		case 1:
			if (control.enc1h.changed)
    32f4:	80 91 63 07 	lds	r24, 0x0763	; 0x800763 <control+0x33>
    32f8:	88 23       	and	r24, r24
    32fa:	79 f0       	breq	.+30     	; 0x331a <_Z12requestEventv+0xf6>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = parameters.data.filType;
    32fc:	80 91 c9 07 	lds	r24, 0x07C9	; 0x8007c9 <parameters+0x7>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    3300:	92 e0       	ldi	r25, 0x02	; 2
    3302:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <message>
	message[1] = b1;
    3306:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <message+0x1>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = parameters.data.filType;
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    330a:	43 e0       	ldi	r20, 0x03	; 3
    330c:	50 e0       	ldi	r21, 0x00	; 0
    330e:	66 e0       	ldi	r22, 0x06	; 6
    3310:	72 e0       	ldi	r23, 0x02	; 2
    3312:	8f e2       	ldi	r24, 0x2F	; 47
    3314:	99 e0       	ldi	r25, 0x09	; 9
    3316:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc2h.changed)
    331a:	80 91 78 07 	lds	r24, 0x0778	; 0x800778 <control+0x48>
    331e:	88 23       	and	r24, r24
    3320:	b1 f0       	breq	.+44     	; 0x334e <_Z12requestEventv+0x12a>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.filFreq);
    3322:	20 91 ca 07 	lds	r18, 0x07CA	; 0x8007ca <parameters+0x8>
    3326:	90 91 cb 07 	lds	r25, 0x07CB	; 0x8007cb <parameters+0x9>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    332a:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    332e:	8f 5f       	subi	r24, 0xFF	; 255
    3330:	80 61       	ori	r24, 0x10	; 16
    3332:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    3336:	20 93 07 02 	sts	0x0207, r18	; 0x800207 <message+0x1>
	message[2] = b2; 
    333a:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.filFreq);
				byte2 = get_upperByte(parameters.data.filFreq);
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    333e:	43 e0       	ldi	r20, 0x03	; 3
    3340:	50 e0       	ldi	r21, 0x00	; 0
    3342:	66 e0       	ldi	r22, 0x06	; 6
    3344:	72 e0       	ldi	r23, 0x02	; 2
    3346:	8f e2       	ldi	r24, 0x2F	; 47
    3348:	99 e0       	ldi	r25, 0x09	; 9
    334a:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc3h.changed)
    334e:	80 91 8d 07 	lds	r24, 0x078D	; 0x80078d <control+0x5d>
    3352:	88 23       	and	r24, r24
    3354:	a1 f0       	breq	.+40     	; 0x337e <_Z12requestEventv+0x15a>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.filRes;
    3356:	90 91 cc 07 	lds	r25, 0x07CC	; 0x8007cc <parameters+0xa>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    335a:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    335e:	8f 5f       	subi	r24, 0xFF	; 255
    3360:	80 62       	ori	r24, 0x20	; 32
    3362:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    3366:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <message+0x1>
	message[2] = b2; 
    336a:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.filRes;
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    336e:	43 e0       	ldi	r20, 0x03	; 3
    3370:	50 e0       	ldi	r21, 0x00	; 0
    3372:	66 e0       	ldi	r22, 0x06	; 6
    3374:	72 e0       	ldi	r23, 0x02	; 2
    3376:	8f e2       	ldi	r24, 0x2F	; 47
    3378:	99 e0       	ldi	r25, 0x09	; 9
    337a:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc4h.changed)
    337e:	80 91 a2 07 	lds	r24, 0x07A2	; 0x8007a2 <control+0x72>
    3382:	88 23       	and	r24, r24
    3384:	09 f4       	brne	.+2      	; 0x3388 <_Z12requestEventv+0x164>
    3386:	f2 c0       	rjmp	.+484    	; 0x356c <_Z12requestEventv+0x348>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (3 << 4);
				byte1 = get_lowerByte(parameters.data.filLfo); // this is an integer (float * LFOMUL)
    3388:	90 91 cd 07 	lds	r25, 0x07CD	; 0x8007cd <parameters+0xb>
    338c:	a7 c0       	rjmp	.+334    	; 0x34dc <_Z12requestEventv+0x2b8>
				Wire.write(message, 3);
			}
		break;
		
		case 2:
			if (control.enc1h.changed)
    338e:	80 91 63 07 	lds	r24, 0x0763	; 0x800763 <control+0x33>
    3392:	88 23       	and	r24, r24
    3394:	99 f0       	breq	.+38     	; 0x33bc <_Z12requestEventv+0x198>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = get_lowerByte(parameters.data.envAtk);
    3396:	90 91 ce 07 	lds	r25, 0x07CE	; 0x8007ce <parameters+0xc>
    339a:	80 91 cf 07 	lds	r24, 0x07CF	; 0x8007cf <parameters+0xd>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    339e:	23 e0       	ldi	r18, 0x03	; 3
    33a0:	20 93 06 02 	sts	0x0206, r18	; 0x800206 <message>
	message[1] = b1;
    33a4:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <message+0x1>
	message[2] = b2; 
    33a8:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = get_lowerByte(parameters.data.envAtk);
				byte2 = get_upperByte(parameters.data.envAtk);
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    33ac:	43 e0       	ldi	r20, 0x03	; 3
    33ae:	50 e0       	ldi	r21, 0x00	; 0
    33b0:	66 e0       	ldi	r22, 0x06	; 6
    33b2:	72 e0       	ldi	r23, 0x02	; 2
    33b4:	8f e2       	ldi	r24, 0x2F	; 47
    33b6:	99 e0       	ldi	r25, 0x09	; 9
    33b8:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc2h.changed)
    33bc:	80 91 78 07 	lds	r24, 0x0778	; 0x800778 <control+0x48>
    33c0:	88 23       	and	r24, r24
    33c2:	b1 f0       	breq	.+44     	; 0x33f0 <_Z12requestEventv+0x1cc>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.envDcy);
    33c4:	20 91 d0 07 	lds	r18, 0x07D0	; 0x8007d0 <parameters+0xe>
    33c8:	90 91 d1 07 	lds	r25, 0x07D1	; 0x8007d1 <parameters+0xf>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    33cc:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    33d0:	8f 5f       	subi	r24, 0xFF	; 255
    33d2:	80 61       	ori	r24, 0x10	; 16
    33d4:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    33d8:	20 93 07 02 	sts	0x0207, r18	; 0x800207 <message+0x1>
	message[2] = b2; 
    33dc:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.envDcy);
				byte2 = get_upperByte(parameters.data.envDcy);
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    33e0:	43 e0       	ldi	r20, 0x03	; 3
    33e2:	50 e0       	ldi	r21, 0x00	; 0
    33e4:	66 e0       	ldi	r22, 0x06	; 6
    33e6:	72 e0       	ldi	r23, 0x02	; 2
    33e8:	8f e2       	ldi	r24, 0x2F	; 47
    33ea:	99 e0       	ldi	r25, 0x09	; 9
    33ec:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc3h.changed)
    33f0:	80 91 8d 07 	lds	r24, 0x078D	; 0x80078d <control+0x5d>
    33f4:	88 23       	and	r24, r24
    33f6:	a1 f0       	breq	.+40     	; 0x3420 <_Z12requestEventv+0x1fc>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.envSus;
    33f8:	90 91 d2 07 	lds	r25, 0x07D2	; 0x8007d2 <parameters+0x10>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    33fc:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    3400:	8f 5f       	subi	r24, 0xFF	; 255
    3402:	80 62       	ori	r24, 0x20	; 32
    3404:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    3408:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <message+0x1>
	message[2] = b2; 
    340c:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.envSus;
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    3410:	43 e0       	ldi	r20, 0x03	; 3
    3412:	50 e0       	ldi	r21, 0x00	; 0
    3414:	66 e0       	ldi	r22, 0x06	; 6
    3416:	72 e0       	ldi	r23, 0x02	; 2
    3418:	8f e2       	ldi	r24, 0x2F	; 47
    341a:	99 e0       	ldi	r25, 0x09	; 9
    341c:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc4h.changed)
    3420:	80 91 a2 07 	lds	r24, 0x07A2	; 0x8007a2 <control+0x72>
    3424:	88 23       	and	r24, r24
    3426:	09 f4       	brne	.+2      	; 0x342a <_Z12requestEventv+0x206>
    3428:	a1 c0       	rjmp	.+322    	; 0x356c <_Z12requestEventv+0x348>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (3 << 4);
				byte1 = get_lowerByte(parameters.data.envRel); // this is an integer (float * LFOMUL)
    342a:	20 91 d3 07 	lds	r18, 0x07D3	; 0x8007d3 <parameters+0x11>
    342e:	90 91 d4 07 	lds	r25, 0x07D4	; 0x8007d4 <parameters+0x12>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    3432:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    3436:	8f 5f       	subi	r24, 0xFF	; 255
    3438:	80 63       	ori	r24, 0x30	; 48
    343a:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    343e:	20 93 07 02 	sts	0x0207, r18	; 0x800207 <message+0x1>
	message[2] = b2; 
    3442:	90 93 08 02 	sts	0x0208, r25	; 0x800208 <message+0x2>
    3446:	8a c0       	rjmp	.+276    	; 0x355c <_Z12requestEventv+0x338>
				Wire.write(message, 3);
			}
		break;
		
		case 3:
			if (control.enc1h.changed)
    3448:	80 91 63 07 	lds	r24, 0x0763	; 0x800763 <control+0x33>
    344c:	88 23       	and	r24, r24
    344e:	79 f0       	breq	.+30     	; 0x346e <_Z12requestEventv+0x24a>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = get_lowerByte(parameters.data.fxType);
    3450:	80 91 d5 07 	lds	r24, 0x07D5	; 0x8007d5 <parameters+0x13>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    3454:	94 e0       	ldi	r25, 0x04	; 4
    3456:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <message>
	message[1] = b1;
    345a:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <message+0x1>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = get_lowerByte(parameters.data.fxType);
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    345e:	43 e0       	ldi	r20, 0x03	; 3
    3460:	50 e0       	ldi	r21, 0x00	; 0
    3462:	66 e0       	ldi	r22, 0x06	; 6
    3464:	72 e0       	ldi	r23, 0x02	; 2
    3466:	8f e2       	ldi	r24, 0x2F	; 47
    3468:	99 e0       	ldi	r25, 0x09	; 9
    346a:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc2h.changed)
    346e:	80 91 78 07 	lds	r24, 0x0778	; 0x800778 <control+0x48>
    3472:	88 23       	and	r24, r24
    3474:	a1 f0       	breq	.+40     	; 0x349e <_Z12requestEventv+0x27a>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.fxAmt);
    3476:	90 91 d6 07 	lds	r25, 0x07D6	; 0x8007d6 <parameters+0x14>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    347a:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    347e:	8f 5f       	subi	r24, 0xFF	; 255
    3480:	80 61       	ori	r24, 0x10	; 16
    3482:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    3486:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <message+0x1>
	message[2] = b2; 
    348a:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.fxAmt);
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    348e:	43 e0       	ldi	r20, 0x03	; 3
    3490:	50 e0       	ldi	r21, 0x00	; 0
    3492:	66 e0       	ldi	r22, 0x06	; 6
    3494:	72 e0       	ldi	r23, 0x02	; 2
    3496:	8f e2       	ldi	r24, 0x2F	; 47
    3498:	99 e0       	ldi	r25, 0x09	; 9
    349a:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc3h.changed)
    349e:	80 91 8d 07 	lds	r24, 0x078D	; 0x80078d <control+0x5d>
    34a2:	88 23       	and	r24, r24
    34a4:	a1 f0       	breq	.+40     	; 0x34ce <_Z12requestEventv+0x2aa>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.fxParam;
    34a6:	90 91 d7 07 	lds	r25, 0x07D7	; 0x8007d7 <parameters+0x15>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    34aa:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    34ae:	8f 5f       	subi	r24, 0xFF	; 255
    34b0:	80 62       	ori	r24, 0x20	; 32
    34b2:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    34b6:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <message+0x1>
	message[2] = b2; 
    34ba:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.fxParam;
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    34be:	43 e0       	ldi	r20, 0x03	; 3
    34c0:	50 e0       	ldi	r21, 0x00	; 0
    34c2:	66 e0       	ldi	r22, 0x06	; 6
    34c4:	72 e0       	ldi	r23, 0x02	; 2
    34c6:	8f e2       	ldi	r24, 0x2F	; 47
    34c8:	99 e0       	ldi	r25, 0x09	; 9
    34ca:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc4h.changed)
    34ce:	80 91 a2 07 	lds	r24, 0x07A2	; 0x8007a2 <control+0x72>
    34d2:	88 23       	and	r24, r24
    34d4:	09 f4       	brne	.+2      	; 0x34d8 <_Z12requestEventv+0x2b4>
    34d6:	4a c0       	rjmp	.+148    	; 0x356c <_Z12requestEventv+0x348>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (3 << 4);
				byte1 = get_lowerByte(parameters.data.fxLfo); // this is an integer (float * LFOMUL)
    34d8:	90 91 d8 07 	lds	r25, 0x07D8	; 0x8007d8 <parameters+0x16>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    34dc:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    34e0:	8f 5f       	subi	r24, 0xFF	; 255
    34e2:	80 63       	ori	r24, 0x30	; 48
    34e4:	35 c0       	rjmp	.+106    	; 0x3550 <_Z12requestEventv+0x32c>
				Wire.write(message, 3);
			}
		break;
		
		case 4:
			if (control.enc1h.changed)
    34e6:	80 91 63 07 	lds	r24, 0x0763	; 0x800763 <control+0x33>
    34ea:	88 23       	and	r24, r24
    34ec:	79 f0       	breq	.+30     	; 0x350c <_Z12requestEventv+0x2e8>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = get_lowerByte(parameters.data.inPitch);
    34ee:	80 91 d9 07 	lds	r24, 0x07D9	; 0x8007d9 <parameters+0x17>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    34f2:	95 e0       	ldi	r25, 0x05	; 5
    34f4:	90 93 06 02 	sts	0x0206, r25	; 0x800206 <message>
	message[1] = b1;
    34f8:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <message+0x1>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (0 << 4);
				byte1 = get_lowerByte(parameters.data.inPitch);
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    34fc:	43 e0       	ldi	r20, 0x03	; 3
    34fe:	50 e0       	ldi	r21, 0x00	; 0
    3500:	66 e0       	ldi	r22, 0x06	; 6
    3502:	72 e0       	ldi	r23, 0x02	; 2
    3504:	8f e2       	ldi	r24, 0x2F	; 47
    3506:	99 e0       	ldi	r25, 0x09	; 9
    3508:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc2h.changed)
    350c:	80 91 78 07 	lds	r24, 0x0778	; 0x800778 <control+0x48>
    3510:	88 23       	and	r24, r24
    3512:	a1 f0       	breq	.+40     	; 0x353c <_Z12requestEventv+0x318>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.inEnv);
    3514:	90 91 da 07 	lds	r25, 0x07DA	; 0x8007da <parameters+0x18>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    3518:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    351c:	8f 5f       	subi	r24, 0xFF	; 255
    351e:	80 61       	ori	r24, 0x10	; 16
    3520:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    3524:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <message+0x1>
	message[2] = b2; 
    3528:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (1 << 4);
				byte1 = get_lowerByte(parameters.data.inEnv);
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    352c:	43 e0       	ldi	r20, 0x03	; 3
    352e:	50 e0       	ldi	r21, 0x00	; 0
    3530:	66 e0       	ldi	r22, 0x06	; 6
    3532:	72 e0       	ldi	r23, 0x02	; 2
    3534:	8f e2       	ldi	r24, 0x2F	; 47
    3536:	99 e0       	ldi	r25, 0x09	; 9
    3538:	0e 94 5a 42 	call	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
			}
			if (control.enc3h.changed)
    353c:	80 91 8d 07 	lds	r24, 0x078D	; 0x80078d <control+0x5d>
    3540:	88 23       	and	r24, r24
    3542:	a1 f0       	breq	.+40     	; 0x356c <_Z12requestEventv+0x348>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.filEnv;
    3544:	90 91 db 07 	lds	r25, 0x07DB	; 0x8007db <parameters+0x19>
	//byte message[3] = {paramAddr, byte1, byte2};
	//Wire.write(message, 3);
}

void setMessage(byte p, byte b1, byte b2){
	message[0] = p;
    3548:	80 91 c2 07 	lds	r24, 0x07C2	; 0x8007c2 <parameters>
    354c:	8f 5f       	subi	r24, 0xFF	; 255
    354e:	80 62       	ori	r24, 0x20	; 32
    3550:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <message>
	message[1] = b1;
    3554:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <message+0x1>
	message[2] = b2; 
    3558:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <message+0x2>
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = (parameters.data.menu+1) | (2 << 4);
				byte1 = parameters.data.filEnv;
				byte2 = 0; // ensure upper byte is 00000000
				setMessage(paramAddr, byte1, byte2);
				Wire.write(message, 3);
    355c:	43 e0       	ldi	r20, 0x03	; 3
    355e:	50 e0       	ldi	r21, 0x00	; 0
    3560:	66 e0       	ldi	r22, 0x06	; 6
    3562:	72 e0       	ldi	r23, 0x02	; 2
    3564:	8f e2       	ldi	r24, 0x2F	; 47
    3566:	99 e0       	ldi	r25, 0x09	; 9
    3568:	0c 94 5a 42 	jmp	0x84b4	; 0x84b4 <_ZN7TwoWire5writeEPKhj>
    356c:	08 95       	ret

0000356e <_ZN6RotaryC1Ev>:
#endif

/*
 * Constructor. Each arg is the pin number for each encoder contact.
 */
Rotary::Rotary(){}
    356e:	08 95       	ret

00003570 <_ZN6RotaryC1Ecc>:
Rotary::Rotary(char _pin1, char _pin2) {
    3570:	cf 93       	push	r28
    3572:	df 93       	push	r29
    3574:	ec 01       	movw	r28, r24
    3576:	86 2f       	mov	r24, r22
  // Assign variables.
  pin1 = _pin1;
    3578:	69 83       	std	Y+1, r22	; 0x01
  pin2 = _pin2;
    357a:	4a 83       	std	Y+2, r20	; 0x02
  // Set pins to input.
  pinMode(pin1, INPUT);
    357c:	60 e0       	ldi	r22, 0x00	; 0
    357e:	0e 94 58 48 	call	0x90b0	; 0x90b0 <pinMode>
  pinMode(pin2, INPUT);
    3582:	60 e0       	ldi	r22, 0x00	; 0
    3584:	8a 81       	ldd	r24, Y+2	; 0x02
    3586:	0e 94 58 48 	call	0x90b0	; 0x90b0 <pinMode>
#ifdef ENABLE_PULLUPS
  digitalWrite(pin1, HIGH);
    358a:	61 e0       	ldi	r22, 0x01	; 1
    358c:	89 81       	ldd	r24, Y+1	; 0x01
    358e:	0e 94 94 48 	call	0x9128	; 0x9128 <digitalWrite>
  digitalWrite(pin2, HIGH);
    3592:	61 e0       	ldi	r22, 0x01	; 1
    3594:	8a 81       	ldd	r24, Y+2	; 0x02
    3596:	0e 94 94 48 	call	0x9128	; 0x9128 <digitalWrite>
#endif
  // Initialise state.
  state = R_START;
    359a:	18 82       	st	Y, r1
}
    359c:	df 91       	pop	r29
    359e:	cf 91       	pop	r28
    35a0:	08 95       	ret

000035a2 <_ZN6Rotary7processEv>:

unsigned char Rotary::process() {
    35a2:	0f 93       	push	r16
    35a4:	1f 93       	push	r17
    35a6:	cf 93       	push	r28
    35a8:	df 93       	push	r29
    35aa:	ec 01       	movw	r28, r24
  // Grab state of input pins.
  unsigned char pinstate = (digitalRead(pin2) << 1) | digitalRead(pin1);
    35ac:	8a 81       	ldd	r24, Y+2	; 0x02
    35ae:	0e 94 c2 48 	call	0x9184	; 0x9184 <digitalRead>
    35b2:	8c 01       	movw	r16, r24
    35b4:	89 81       	ldd	r24, Y+1	; 0x01
    35b6:	0e 94 c2 48 	call	0x9184	; 0x9184 <digitalRead>
  // Determine new state from the pins and state table.
  state = ttable[state & 0xf][pinstate];
    35ba:	e8 81       	ld	r30, Y
    35bc:	ef 70       	andi	r30, 0x0F	; 15
    35be:	00 0f       	add	r16, r16
    35c0:	11 1f       	adc	r17, r17
    35c2:	80 2b       	or	r24, r16
    35c4:	94 e0       	ldi	r25, 0x04	; 4
    35c6:	e9 9f       	mul	r30, r25
    35c8:	f0 01       	movw	r30, r0
    35ca:	11 24       	eor	r1, r1
    35cc:	eb 5a       	subi	r30, 0xAB	; 171
    35ce:	fc 4f       	sbci	r31, 0xFC	; 252
    35d0:	e8 0f       	add	r30, r24
    35d2:	f1 1d       	adc	r31, r1
    35d4:	80 81       	ld	r24, Z
    35d6:	88 83       	st	Y, r24
  // Return emit bits, ie the generated event.
  return state & 0x30;
}
    35d8:	80 73       	andi	r24, 0x30	; 48
    35da:	df 91       	pop	r29
    35dc:	cf 91       	pop	r28
    35de:	1f 91       	pop	r17
    35e0:	0f 91       	pop	r16
    35e2:	08 95       	ret

000035e4 <__vector_20>:
  else if(pin == 2 || pin == 10) {
    DDRB |= _BV(PORTB2);
    TCCR1A |= _BV(COM1B1);
  }
  setPwmDuty(pin, duty);
  resume();			// Lex - make sure the clock is running.  We don't want to restart the count, in case we are starting the second WGM
    35e4:	1f 92       	push	r1
    35e6:	0f 92       	push	r0
    35e8:	0f b6       	in	r0, 0x3f	; 63
    35ea:	0f 92       	push	r0
    35ec:	11 24       	eor	r1, r1
    35ee:	0b b6       	in	r0, 0x3b	; 59
    35f0:	0f 92       	push	r0
    35f2:	2f 93       	push	r18
    35f4:	3f 93       	push	r19
    35f6:	4f 93       	push	r20
    35f8:	5f 93       	push	r21
    35fa:	6f 93       	push	r22
    35fc:	7f 93       	push	r23
    35fe:	8f 93       	push	r24
    3600:	9f 93       	push	r25
    3602:	af 93       	push	r26
    3604:	bf 93       	push	r27
    3606:	ef 93       	push	r30
    3608:	ff 93       	push	r31
    360a:	e0 91 bf 08 	lds	r30, 0x08BF	; 0x8008bf <Timer1+0x4>
    360e:	f0 91 c0 08 	lds	r31, 0x08C0	; 0x8008c0 <Timer1+0x5>
    3612:	19 95       	eicall
    3614:	ff 91       	pop	r31
    3616:	ef 91       	pop	r30
    3618:	bf 91       	pop	r27
    361a:	af 91       	pop	r26
    361c:	9f 91       	pop	r25
    361e:	8f 91       	pop	r24
    3620:	7f 91       	pop	r23
    3622:	6f 91       	pop	r22
    3624:	5f 91       	pop	r21
    3626:	4f 91       	pop	r20
    3628:	3f 91       	pop	r19
    362a:	2f 91       	pop	r18
    362c:	0f 90       	pop	r0
    362e:	0b be       	out	0x3b, r0	; 59
    3630:	0f 90       	pop	r0
    3632:	0f be       	out	0x3f, r0	; 63
    3634:	0f 90       	pop	r0
    3636:	1f 90       	pop	r1
    3638:	18 95       	reti

0000363a <_ZN8TimerOne9setPeriodEl>:
    363a:	fc 01       	movw	r30, r24
    363c:	a3 e0       	ldi	r26, 0x03	; 3
    363e:	44 0f       	add	r20, r20
    3640:	55 1f       	adc	r21, r21
    3642:	66 1f       	adc	r22, r22
    3644:	77 1f       	adc	r23, r23
    3646:	aa 95       	dec	r26
    3648:	d1 f7       	brne	.-12     	; 0x363e <_ZN8TimerOne9setPeriodEl+0x4>
    364a:	41 15       	cp	r20, r1
    364c:	51 05       	cpc	r21, r1
    364e:	81 e0       	ldi	r24, 0x01	; 1
    3650:	68 07       	cpc	r22, r24
    3652:	71 05       	cpc	r23, r1
    3654:	14 f4       	brge	.+4      	; 0x365a <_ZN8TimerOne9setPeriodEl+0x20>
    3656:	81 e0       	ldi	r24, 0x01	; 1
    3658:	0e c0       	rjmp	.+28     	; 0x3676 <_ZN8TimerOne9setPeriodEl+0x3c>
    365a:	33 e0       	ldi	r19, 0x03	; 3
    365c:	75 95       	asr	r23
    365e:	67 95       	ror	r22
    3660:	57 95       	ror	r21
    3662:	47 95       	ror	r20
    3664:	3a 95       	dec	r19
    3666:	d1 f7       	brne	.-12     	; 0x365c <_ZN8TimerOne9setPeriodEl+0x22>
    3668:	41 15       	cp	r20, r1
    366a:	51 05       	cpc	r21, r1
    366c:	81 e0       	ldi	r24, 0x01	; 1
    366e:	68 07       	cpc	r22, r24
    3670:	71 05       	cpc	r23, r1
    3672:	1c f4       	brge	.+6      	; 0x367a <_ZN8TimerOne9setPeriodEl+0x40>
    3674:	82 e0       	ldi	r24, 0x02	; 2
    3676:	82 83       	std	Z+2, r24	; 0x02
    3678:	31 c0       	rjmp	.+98     	; 0x36dc <_ZN8TimerOne9setPeriodEl+0xa2>
    367a:	23 e0       	ldi	r18, 0x03	; 3
    367c:	75 95       	asr	r23
    367e:	67 95       	ror	r22
    3680:	57 95       	ror	r21
    3682:	47 95       	ror	r20
    3684:	2a 95       	dec	r18
    3686:	d1 f7       	brne	.-12     	; 0x367c <_ZN8TimerOne9setPeriodEl+0x42>
    3688:	41 15       	cp	r20, r1
    368a:	51 05       	cpc	r21, r1
    368c:	81 e0       	ldi	r24, 0x01	; 1
    368e:	68 07       	cpc	r22, r24
    3690:	71 05       	cpc	r23, r1
    3692:	14 f4       	brge	.+4      	; 0x3698 <_ZN8TimerOne9setPeriodEl+0x5e>
    3694:	83 e0       	ldi	r24, 0x03	; 3
    3696:	ef cf       	rjmp	.-34     	; 0x3676 <_ZN8TimerOne9setPeriodEl+0x3c>
    3698:	92 e0       	ldi	r25, 0x02	; 2
    369a:	75 95       	asr	r23
    369c:	67 95       	ror	r22
    369e:	57 95       	ror	r21
    36a0:	47 95       	ror	r20
    36a2:	9a 95       	dec	r25
    36a4:	d1 f7       	brne	.-12     	; 0x369a <_ZN8TimerOne9setPeriodEl+0x60>
    36a6:	41 15       	cp	r20, r1
    36a8:	51 05       	cpc	r21, r1
    36aa:	81 e0       	ldi	r24, 0x01	; 1
    36ac:	68 07       	cpc	r22, r24
    36ae:	71 05       	cpc	r23, r1
    36b0:	14 f4       	brge	.+4      	; 0x36b6 <_ZN8TimerOne9setPeriodEl+0x7c>
    36b2:	84 e0       	ldi	r24, 0x04	; 4
    36b4:	e0 cf       	rjmp	.-64     	; 0x3676 <_ZN8TimerOne9setPeriodEl+0x3c>
    36b6:	82 e0       	ldi	r24, 0x02	; 2
    36b8:	75 95       	asr	r23
    36ba:	67 95       	ror	r22
    36bc:	57 95       	ror	r21
    36be:	47 95       	ror	r20
    36c0:	8a 95       	dec	r24
    36c2:	d1 f7       	brne	.-12     	; 0x36b8 <_ZN8TimerOne9setPeriodEl+0x7e>
    36c4:	85 e0       	ldi	r24, 0x05	; 5
    36c6:	82 83       	std	Z+2, r24	; 0x02
    36c8:	41 15       	cp	r20, r1
    36ca:	51 05       	cpc	r21, r1
    36cc:	81 e0       	ldi	r24, 0x01	; 1
    36ce:	68 07       	cpc	r22, r24
    36d0:	71 05       	cpc	r23, r1
    36d2:	24 f0       	brlt	.+8      	; 0x36dc <_ZN8TimerOne9setPeriodEl+0xa2>
    36d4:	4f ef       	ldi	r20, 0xFF	; 255
    36d6:	5f ef       	ldi	r21, 0xFF	; 255
    36d8:	60 e0       	ldi	r22, 0x00	; 0
    36da:	70 e0       	ldi	r23, 0x00	; 0
    36dc:	8f b7       	in	r24, 0x3f	; 63
    36de:	83 83       	std	Z+3, r24	; 0x03
    36e0:	f8 94       	cli
    36e2:	51 83       	std	Z+1, r21	; 0x01
    36e4:	40 83       	st	Z, r20
    36e6:	50 93 87 00 	sts	0x0087, r21	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
    36ea:	40 93 86 00 	sts	0x0086, r20	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
    36ee:	83 81       	ldd	r24, Z+3	; 0x03
    36f0:	8f bf       	out	0x3f, r24	; 63
    36f2:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    36f6:	88 7f       	andi	r24, 0xF8	; 248
    36f8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    36fc:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    3700:	82 81       	ldd	r24, Z+2	; 0x02
    3702:	89 2b       	or	r24, r25
    3704:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    3708:	08 95       	ret

0000370a <_ZN8TimerOne10initializeEl>:
    370a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    370e:	20 e1       	ldi	r18, 0x10	; 16
    3710:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    3714:	92 cf       	rjmp	.-220    	; 0x363a <_ZN8TimerOne9setPeriodEl>

00003716 <_ZN8TimerOne15detachInterruptEv>:
    3716:	ef e6       	ldi	r30, 0x6F	; 111
    3718:	f0 e0       	ldi	r31, 0x00	; 0
    371a:	80 81       	ld	r24, Z
    371c:	8e 7f       	andi	r24, 0xFE	; 254
    371e:	80 83       	st	Z, r24
    3720:	08 95       	ret

00003722 <_ZN8TimerOne6resumeEv>:
    3722:	e1 e8       	ldi	r30, 0x81	; 129
    3724:	f0 e0       	ldi	r31, 0x00	; 0
    3726:	20 81       	ld	r18, Z
    3728:	dc 01       	movw	r26, r24
    372a:	12 96       	adiw	r26, 0x02	; 2
    372c:	8c 91       	ld	r24, X
    372e:	82 2b       	or	r24, r18
    3730:	80 83       	st	Z, r24
    3732:	08 95       	ret

00003734 <_ZN8TimerOne15attachInterruptEPFvvEl>:
  if(pin == 1 || pin == 9)       TCCR1A &= ~_BV(COM1A1);   // clear the bit that enables pwm on PB1
  else if(pin == 2 || pin == 10) TCCR1A &= ~_BV(COM1B1);   // clear the bit that enables pwm on PB2
}

void TimerOne::attachInterrupt(void (*isr)(), long microseconds)
{
    3734:	0f 93       	push	r16
    3736:	1f 93       	push	r17
    3738:	cf 93       	push	r28
    373a:	df 93       	push	r29
    373c:	ec 01       	movw	r28, r24
    373e:	8b 01       	movw	r16, r22
    3740:	ba 01       	movw	r22, r20
    3742:	a9 01       	movw	r20, r18
  if(microseconds > 0) setPeriod(microseconds);
    3744:	14 16       	cp	r1, r20
    3746:	15 06       	cpc	r1, r21
    3748:	16 06       	cpc	r1, r22
    374a:	17 06       	cpc	r1, r23
    374c:	0c f4       	brge	.+2      	; 0x3750 <_ZN8TimerOne15attachInterruptEPFvvEl+0x1c>
    374e:	75 df       	rcall	.-278    	; 0x363a <_ZN8TimerOne9setPeriodEl>
  isrCallback = isr;                                       // register the user's callback with the real ISR
    3750:	1d 83       	std	Y+5, r17	; 0x05
    3752:	0c 83       	std	Y+4, r16	; 0x04
  TIMSK1 = _BV(TOIE1);                                     // sets the timer overflow interrupt enable bit
    3754:	81 e0       	ldi	r24, 0x01	; 1
    3756:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
	// might be running with interrupts disabled (eg inside an ISR), so don't touch the global state
//  sei();
  resume();												
    375a:	ce 01       	movw	r24, r28
}
    375c:	df 91       	pop	r29
    375e:	cf 91       	pop	r28
    3760:	1f 91       	pop	r17
  if(microseconds > 0) setPeriod(microseconds);
  isrCallback = isr;                                       // register the user's callback with the real ISR
  TIMSK1 = _BV(TOIE1);                                     // sets the timer overflow interrupt enable bit
	// might be running with interrupts disabled (eg inside an ISR), so don't touch the global state
//  sei();
  resume();												
    3762:	0f 91       	pop	r16
    3764:	de cf       	rjmp	.-68     	; 0x3722 <_ZN8TimerOne6resumeEv>

00003766 <_ZN4UTFT12LCD_Writ_BusEcch>:
			} 
		}
		sbi(P_CS, B_CS);
	}
	clrXY();
}
    3766:	fc 01       	movw	r30, r24
    3768:	28 30       	cpi	r18, 0x08	; 8
    376a:	09 f4       	brne	.+2      	; 0x376e <_ZN4UTFT12LCD_Writ_BusEcch+0x8>
    376c:	ee c0       	rjmp	.+476    	; 0x394a <_ZN4UTFT12LCD_Writ_BusEcch+0x1e4>
    376e:	18 f4       	brcc	.+6      	; 0x3776 <_ZN4UTFT12LCD_Writ_BusEcch+0x10>
    3770:	21 30       	cpi	r18, 0x01	; 1
    3772:	41 f0       	breq	.+16     	; 0x3784 <_ZN4UTFT12LCD_Writ_BusEcch+0x1e>
    3774:	08 95       	ret
    3776:	20 31       	cpi	r18, 0x10	; 16
    3778:	09 f4       	brne	.+2      	; 0x377c <_ZN4UTFT12LCD_Writ_BusEcch+0x16>
    377a:	f7 c0       	rjmp	.+494    	; 0x396a <_ZN4UTFT12LCD_Writ_BusEcch+0x204>
    377c:	21 31       	cpi	r18, 0x11	; 17
    377e:	09 f4       	brne	.+2      	; 0x3782 <_ZN4UTFT12LCD_Writ_BusEcch+0x1c>
    3780:	02 c1       	rjmp	.+516    	; 0x3986 <_ZN4UTFT12LCD_Writ_BusEcch+0x220>
    3782:	08 95       	ret
    3784:	87 85       	ldd	r24, Z+15	; 0x0f
    3786:	84 30       	cpi	r24, 0x04	; 4
    3788:	c1 f4       	brne	.+48     	; 0x37ba <_ZN4UTFT12LCD_Writ_BusEcch+0x54>
    378a:	a0 8d       	ldd	r26, Z+24	; 0x18
    378c:	b1 8d       	ldd	r27, Z+25	; 0x19
    378e:	82 a1       	ldd	r24, Z+34	; 0x22
    3790:	9c 91       	ld	r25, X
    3792:	61 30       	cpi	r22, 0x01	; 1
    3794:	11 f4       	brne	.+4      	; 0x379a <_ZN4UTFT12LCD_Writ_BusEcch+0x34>
    3796:	89 2b       	or	r24, r25
    3798:	02 c0       	rjmp	.+4      	; 0x379e <_ZN4UTFT12LCD_Writ_BusEcch+0x38>
    379a:	80 95       	com	r24
    379c:	89 23       	and	r24, r25
    379e:	8c 93       	st	X, r24
    37a0:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37a2:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37a4:	9c 91       	ld	r25, X
    37a6:	83 a1       	ldd	r24, Z+35	; 0x23
    37a8:	80 95       	com	r24
    37aa:	89 23       	and	r24, r25
    37ac:	8c 93       	st	X, r24
    37ae:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37b0:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37b2:	9c 91       	ld	r25, X
    37b4:	83 a1       	ldd	r24, Z+35	; 0x23
    37b6:	89 2b       	or	r24, r25
    37b8:	08 c0       	rjmp	.+16     	; 0x37ca <_ZN4UTFT12LCD_Writ_BusEcch+0x64>
    37ba:	a0 89       	ldd	r26, Z+16	; 0x10
    37bc:	b1 89       	ldd	r27, Z+17	; 0x11
    37be:	86 8d       	ldd	r24, Z+30	; 0x1e
    37c0:	9c 91       	ld	r25, X
    37c2:	61 30       	cpi	r22, 0x01	; 1
    37c4:	c1 f3       	breq	.-16     	; 0x37b6 <_ZN4UTFT12LCD_Writ_BusEcch+0x50>
    37c6:	80 95       	com	r24
    37c8:	89 23       	and	r24, r25
    37ca:	8c 93       	st	X, r24
    37cc:	a0 8d       	ldd	r26, Z+24	; 0x18
    37ce:	b1 8d       	ldd	r27, Z+25	; 0x19
    37d0:	82 a1       	ldd	r24, Z+34	; 0x22
    37d2:	9c 91       	ld	r25, X
    37d4:	47 ff       	sbrs	r20, 7
    37d6:	02 c0       	rjmp	.+4      	; 0x37dc <_ZN4UTFT12LCD_Writ_BusEcch+0x76>
    37d8:	89 2b       	or	r24, r25
    37da:	02 c0       	rjmp	.+4      	; 0x37e0 <_ZN4UTFT12LCD_Writ_BusEcch+0x7a>
    37dc:	80 95       	com	r24
    37de:	89 23       	and	r24, r25
    37e0:	8c 93       	st	X, r24
    37e2:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37e4:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37e6:	9c 91       	ld	r25, X
    37e8:	83 a1       	ldd	r24, Z+35	; 0x23
    37ea:	80 95       	com	r24
    37ec:	89 23       	and	r24, r25
    37ee:	8c 93       	st	X, r24
    37f0:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37f2:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37f4:	9c 91       	ld	r25, X
    37f6:	83 a1       	ldd	r24, Z+35	; 0x23
    37f8:	89 2b       	or	r24, r25
    37fa:	8c 93       	st	X, r24
    37fc:	a0 8d       	ldd	r26, Z+24	; 0x18
    37fe:	b1 8d       	ldd	r27, Z+25	; 0x19
    3800:	82 a1       	ldd	r24, Z+34	; 0x22
    3802:	9c 91       	ld	r25, X
    3804:	46 ff       	sbrs	r20, 6
    3806:	02 c0       	rjmp	.+4      	; 0x380c <_ZN4UTFT12LCD_Writ_BusEcch+0xa6>
    3808:	89 2b       	or	r24, r25
    380a:	02 c0       	rjmp	.+4      	; 0x3810 <_ZN4UTFT12LCD_Writ_BusEcch+0xaa>
    380c:	80 95       	com	r24
    380e:	89 23       	and	r24, r25
    3810:	8c 93       	st	X, r24
    3812:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3814:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3816:	9c 91       	ld	r25, X
    3818:	83 a1       	ldd	r24, Z+35	; 0x23
    381a:	80 95       	com	r24
    381c:	89 23       	and	r24, r25
    381e:	8c 93       	st	X, r24
    3820:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3822:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3824:	9c 91       	ld	r25, X
    3826:	83 a1       	ldd	r24, Z+35	; 0x23
    3828:	89 2b       	or	r24, r25
    382a:	8c 93       	st	X, r24
    382c:	a0 8d       	ldd	r26, Z+24	; 0x18
    382e:	b1 8d       	ldd	r27, Z+25	; 0x19
    3830:	82 a1       	ldd	r24, Z+34	; 0x22
    3832:	9c 91       	ld	r25, X
    3834:	45 ff       	sbrs	r20, 5
    3836:	02 c0       	rjmp	.+4      	; 0x383c <_ZN4UTFT12LCD_Writ_BusEcch+0xd6>
    3838:	89 2b       	or	r24, r25
    383a:	02 c0       	rjmp	.+4      	; 0x3840 <_ZN4UTFT12LCD_Writ_BusEcch+0xda>
    383c:	80 95       	com	r24
    383e:	89 23       	and	r24, r25
    3840:	8c 93       	st	X, r24
    3842:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3844:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3846:	9c 91       	ld	r25, X
    3848:	83 a1       	ldd	r24, Z+35	; 0x23
    384a:	80 95       	com	r24
    384c:	89 23       	and	r24, r25
    384e:	8c 93       	st	X, r24
    3850:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3852:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3854:	9c 91       	ld	r25, X
    3856:	83 a1       	ldd	r24, Z+35	; 0x23
    3858:	89 2b       	or	r24, r25
    385a:	8c 93       	st	X, r24
    385c:	a0 8d       	ldd	r26, Z+24	; 0x18
    385e:	b1 8d       	ldd	r27, Z+25	; 0x19
    3860:	82 a1       	ldd	r24, Z+34	; 0x22
    3862:	9c 91       	ld	r25, X
    3864:	44 ff       	sbrs	r20, 4
    3866:	02 c0       	rjmp	.+4      	; 0x386c <_ZN4UTFT12LCD_Writ_BusEcch+0x106>
    3868:	89 2b       	or	r24, r25
    386a:	02 c0       	rjmp	.+4      	; 0x3870 <_ZN4UTFT12LCD_Writ_BusEcch+0x10a>
    386c:	80 95       	com	r24
    386e:	89 23       	and	r24, r25
    3870:	8c 93       	st	X, r24
    3872:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3874:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3876:	9c 91       	ld	r25, X
    3878:	83 a1       	ldd	r24, Z+35	; 0x23
    387a:	80 95       	com	r24
    387c:	89 23       	and	r24, r25
    387e:	8c 93       	st	X, r24
    3880:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3882:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3884:	9c 91       	ld	r25, X
    3886:	83 a1       	ldd	r24, Z+35	; 0x23
    3888:	89 2b       	or	r24, r25
    388a:	8c 93       	st	X, r24
    388c:	a0 8d       	ldd	r26, Z+24	; 0x18
    388e:	b1 8d       	ldd	r27, Z+25	; 0x19
    3890:	82 a1       	ldd	r24, Z+34	; 0x22
    3892:	9c 91       	ld	r25, X
    3894:	43 ff       	sbrs	r20, 3
    3896:	02 c0       	rjmp	.+4      	; 0x389c <_ZN4UTFT12LCD_Writ_BusEcch+0x136>
    3898:	89 2b       	or	r24, r25
    389a:	02 c0       	rjmp	.+4      	; 0x38a0 <_ZN4UTFT12LCD_Writ_BusEcch+0x13a>
    389c:	80 95       	com	r24
    389e:	89 23       	and	r24, r25
    38a0:	8c 93       	st	X, r24
    38a2:	a2 8d       	ldd	r26, Z+26	; 0x1a
    38a4:	b3 8d       	ldd	r27, Z+27	; 0x1b
    38a6:	9c 91       	ld	r25, X
    38a8:	83 a1       	ldd	r24, Z+35	; 0x23
    38aa:	80 95       	com	r24
    38ac:	89 23       	and	r24, r25
    38ae:	8c 93       	st	X, r24
    38b0:	a2 8d       	ldd	r26, Z+26	; 0x1a
    38b2:	b3 8d       	ldd	r27, Z+27	; 0x1b
    38b4:	9c 91       	ld	r25, X
    38b6:	83 a1       	ldd	r24, Z+35	; 0x23
    38b8:	89 2b       	or	r24, r25
    38ba:	8c 93       	st	X, r24
    38bc:	a0 8d       	ldd	r26, Z+24	; 0x18
    38be:	b1 8d       	ldd	r27, Z+25	; 0x19
    38c0:	82 a1       	ldd	r24, Z+34	; 0x22
    38c2:	9c 91       	ld	r25, X
    38c4:	42 ff       	sbrs	r20, 2
    38c6:	02 c0       	rjmp	.+4      	; 0x38cc <_ZN4UTFT12LCD_Writ_BusEcch+0x166>
    38c8:	89 2b       	or	r24, r25
    38ca:	02 c0       	rjmp	.+4      	; 0x38d0 <_ZN4UTFT12LCD_Writ_BusEcch+0x16a>
    38cc:	80 95       	com	r24
    38ce:	89 23       	and	r24, r25
    38d0:	8c 93       	st	X, r24
    38d2:	a2 8d       	ldd	r26, Z+26	; 0x1a
    38d4:	b3 8d       	ldd	r27, Z+27	; 0x1b
    38d6:	9c 91       	ld	r25, X
    38d8:	83 a1       	ldd	r24, Z+35	; 0x23
    38da:	80 95       	com	r24
    38dc:	89 23       	and	r24, r25
    38de:	8c 93       	st	X, r24
    38e0:	a2 8d       	ldd	r26, Z+26	; 0x1a
    38e2:	b3 8d       	ldd	r27, Z+27	; 0x1b
    38e4:	9c 91       	ld	r25, X
    38e6:	83 a1       	ldd	r24, Z+35	; 0x23
    38e8:	89 2b       	or	r24, r25
    38ea:	8c 93       	st	X, r24
    38ec:	a0 8d       	ldd	r26, Z+24	; 0x18
    38ee:	b1 8d       	ldd	r27, Z+25	; 0x19
    38f0:	82 a1       	ldd	r24, Z+34	; 0x22
    38f2:	9c 91       	ld	r25, X
    38f4:	41 ff       	sbrs	r20, 1
    38f6:	02 c0       	rjmp	.+4      	; 0x38fc <_ZN4UTFT12LCD_Writ_BusEcch+0x196>
    38f8:	89 2b       	or	r24, r25
    38fa:	02 c0       	rjmp	.+4      	; 0x3900 <_ZN4UTFT12LCD_Writ_BusEcch+0x19a>
    38fc:	80 95       	com	r24
    38fe:	89 23       	and	r24, r25
    3900:	8c 93       	st	X, r24
    3902:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3904:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3906:	9c 91       	ld	r25, X
    3908:	83 a1       	ldd	r24, Z+35	; 0x23
    390a:	80 95       	com	r24
    390c:	89 23       	and	r24, r25
    390e:	8c 93       	st	X, r24
    3910:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3912:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3914:	9c 91       	ld	r25, X
    3916:	83 a1       	ldd	r24, Z+35	; 0x23
    3918:	89 2b       	or	r24, r25
    391a:	8c 93       	st	X, r24
    391c:	a0 8d       	ldd	r26, Z+24	; 0x18
    391e:	b1 8d       	ldd	r27, Z+25	; 0x19
    3920:	82 a1       	ldd	r24, Z+34	; 0x22
    3922:	9c 91       	ld	r25, X
    3924:	40 ff       	sbrs	r20, 0
    3926:	02 c0       	rjmp	.+4      	; 0x392c <_ZN4UTFT12LCD_Writ_BusEcch+0x1c6>
    3928:	89 2b       	or	r24, r25
    392a:	02 c0       	rjmp	.+4      	; 0x3930 <_ZN4UTFT12LCD_Writ_BusEcch+0x1ca>
    392c:	80 95       	com	r24
    392e:	89 23       	and	r24, r25
    3930:	8c 93       	st	X, r24
    3932:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3934:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3936:	9c 91       	ld	r25, X
    3938:	83 a1       	ldd	r24, Z+35	; 0x23
    393a:	80 95       	com	r24
    393c:	89 23       	and	r24, r25
    393e:	8c 93       	st	X, r24
    3940:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3942:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3944:	9c 91       	ld	r25, X
    3946:	83 a1       	ldd	r24, Z+35	; 0x23
    3948:	a2 c0       	rjmp	.+324    	; 0x3a8e <_ZN4UTFT12LCD_Writ_BusEcch+0x328>
    394a:	62 b9       	out	0x02, r22	; 2
    394c:	a2 89       	ldd	r26, Z+18	; 0x12
    394e:	b3 89       	ldd	r27, Z+19	; 0x13
    3950:	9c 91       	ld	r25, X
    3952:	87 8d       	ldd	r24, Z+31	; 0x1f
    3954:	80 95       	com	r24
    3956:	89 23       	and	r24, r25
    3958:	8c 93       	st	X, r24
    395a:	a2 89       	ldd	r26, Z+18	; 0x12
    395c:	b3 89       	ldd	r27, Z+19	; 0x13
    395e:	9c 91       	ld	r25, X
    3960:	87 8d       	ldd	r24, Z+31	; 0x1f
    3962:	89 2b       	or	r24, r25
    3964:	8c 93       	st	X, r24
    3966:	42 b9       	out	0x02, r20	; 2
    3968:	02 c0       	rjmp	.+4      	; 0x396e <_ZN4UTFT12LCD_Writ_BusEcch+0x208>
    396a:	62 b9       	out	0x02, r22	; 2
    396c:	48 b9       	out	0x08, r20	; 8
    396e:	a2 89       	ldd	r26, Z+18	; 0x12
    3970:	b3 89       	ldd	r27, Z+19	; 0x13
    3972:	9c 91       	ld	r25, X
    3974:	87 8d       	ldd	r24, Z+31	; 0x1f
    3976:	80 95       	com	r24
    3978:	89 23       	and	r24, r25
    397a:	8c 93       	st	X, r24
    397c:	a2 89       	ldd	r26, Z+18	; 0x12
    397e:	b3 89       	ldd	r27, Z+19	; 0x13
    3980:	9c 91       	ld	r25, X
    3982:	87 8d       	ldd	r24, Z+31	; 0x1f
    3984:	84 c0       	rjmp	.+264    	; 0x3a8e <_ZN4UTFT12LCD_Writ_BusEcch+0x328>
    3986:	a5 98       	cbi	0x14, 5	; 20
    3988:	94 b3       	in	r25, 0x14	; 20
    398a:	86 2f       	mov	r24, r22
    398c:	80 71       	andi	r24, 0x10	; 16
    398e:	88 0f       	add	r24, r24
    3990:	89 2b       	or	r24, r25
    3992:	84 bb       	out	0x14, r24	; 20
    3994:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3998:	87 7e       	andi	r24, 0xE7	; 231
    399a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    399e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    39a2:	86 2f       	mov	r24, r22
    39a4:	80 7c       	andi	r24, 0xC0	; 192
    39a6:	86 95       	lsr	r24
    39a8:	86 95       	lsr	r24
    39aa:	86 95       	lsr	r24
    39ac:	89 2b       	or	r24, r25
    39ae:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    39b2:	8e b1       	in	r24, 0x0e	; 14
    39b4:	84 7c       	andi	r24, 0xC4	; 196
    39b6:	8e b9       	out	0x0e, r24	; 14
    39b8:	9e b1       	in	r25, 0x0e	; 14
    39ba:	26 2f       	mov	r18, r22
    39bc:	2c 70       	andi	r18, 0x0C	; 12
    39be:	22 0f       	add	r18, r18
    39c0:	22 0f       	add	r18, r18
    39c2:	86 2f       	mov	r24, r22
    39c4:	83 70       	andi	r24, 0x03	; 3
    39c6:	28 0f       	add	r18, r24
    39c8:	86 2f       	mov	r24, r22
    39ca:	80 72       	andi	r24, 0x20	; 32
    39cc:	68 2f       	mov	r22, r24
    39ce:	70 e0       	ldi	r23, 0x00	; 0
    39d0:	75 95       	asr	r23
    39d2:	67 95       	ror	r22
    39d4:	75 95       	asr	r23
    39d6:	67 95       	ror	r22
    39d8:	62 0f       	add	r22, r18
    39da:	69 2b       	or	r22, r25
    39dc:	6e b9       	out	0x0e, r22	; 14
    39de:	a4 8d       	ldd	r26, Z+28	; 0x1c
    39e0:	b5 8d       	ldd	r27, Z+29	; 0x1d
    39e2:	9c 91       	ld	r25, X
    39e4:	84 a1       	ldd	r24, Z+36	; 0x24
    39e6:	80 95       	com	r24
    39e8:	89 23       	and	r24, r25
    39ea:	8c 93       	st	X, r24
    39ec:	a4 8d       	ldd	r26, Z+28	; 0x1c
    39ee:	b5 8d       	ldd	r27, Z+29	; 0x1d
    39f0:	9c 91       	ld	r25, X
    39f2:	84 a1       	ldd	r24, Z+36	; 0x24
    39f4:	89 2b       	or	r24, r25
    39f6:	8c 93       	st	X, r24
    39f8:	a4 8d       	ldd	r26, Z+28	; 0x1c
    39fa:	b5 8d       	ldd	r27, Z+29	; 0x1d
    39fc:	9c 91       	ld	r25, X
    39fe:	84 a1       	ldd	r24, Z+36	; 0x24
    3a00:	80 95       	com	r24
    3a02:	89 23       	and	r24, r25
    3a04:	8c 93       	st	X, r24
    3a06:	a4 89       	ldd	r26, Z+20	; 0x14
    3a08:	b5 89       	ldd	r27, Z+21	; 0x15
    3a0a:	9c 91       	ld	r25, X
    3a0c:	80 a1       	ldd	r24, Z+32	; 0x20
    3a0e:	80 95       	com	r24
    3a10:	89 23       	and	r24, r25
    3a12:	8c 93       	st	X, r24
    3a14:	a5 98       	cbi	0x14, 5	; 20
    3a16:	94 b3       	in	r25, 0x14	; 20
    3a18:	84 2f       	mov	r24, r20
    3a1a:	80 71       	andi	r24, 0x10	; 16
    3a1c:	88 0f       	add	r24, r24
    3a1e:	89 2b       	or	r24, r25
    3a20:	84 bb       	out	0x14, r24	; 20
    3a22:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3a26:	87 7e       	andi	r24, 0xE7	; 231
    3a28:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3a2c:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3a30:	84 2f       	mov	r24, r20
    3a32:	80 7c       	andi	r24, 0xC0	; 192
    3a34:	86 95       	lsr	r24
    3a36:	86 95       	lsr	r24
    3a38:	86 95       	lsr	r24
    3a3a:	89 2b       	or	r24, r25
    3a3c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3a40:	8e b1       	in	r24, 0x0e	; 14
    3a42:	84 7c       	andi	r24, 0xC4	; 196
    3a44:	8e b9       	out	0x0e, r24	; 14
    3a46:	9e b1       	in	r25, 0x0e	; 14
    3a48:	24 2f       	mov	r18, r20
    3a4a:	2c 70       	andi	r18, 0x0C	; 12
    3a4c:	22 0f       	add	r18, r18
    3a4e:	22 0f       	add	r18, r18
    3a50:	84 2f       	mov	r24, r20
    3a52:	83 70       	andi	r24, 0x03	; 3
    3a54:	28 0f       	add	r18, r24
    3a56:	84 2f       	mov	r24, r20
    3a58:	80 72       	andi	r24, 0x20	; 32
    3a5a:	48 2f       	mov	r20, r24
    3a5c:	50 e0       	ldi	r21, 0x00	; 0
    3a5e:	55 95       	asr	r21
    3a60:	47 95       	ror	r20
    3a62:	55 95       	asr	r21
    3a64:	47 95       	ror	r20
    3a66:	42 0f       	add	r20, r18
    3a68:	49 2b       	or	r20, r25
    3a6a:	4e b9       	out	0x0e, r20	; 14
    3a6c:	a2 89       	ldd	r26, Z+18	; 0x12
    3a6e:	b3 89       	ldd	r27, Z+19	; 0x13
    3a70:	9c 91       	ld	r25, X
    3a72:	87 8d       	ldd	r24, Z+31	; 0x1f
    3a74:	80 95       	com	r24
    3a76:	89 23       	and	r24, r25
    3a78:	8c 93       	st	X, r24
    3a7a:	a2 89       	ldd	r26, Z+18	; 0x12
    3a7c:	b3 89       	ldd	r27, Z+19	; 0x13
    3a7e:	9c 91       	ld	r25, X
    3a80:	87 8d       	ldd	r24, Z+31	; 0x1f
    3a82:	89 2b       	or	r24, r25
    3a84:	8c 93       	st	X, r24
    3a86:	a4 89       	ldd	r26, Z+20	; 0x14
    3a88:	b5 89       	ldd	r27, Z+21	; 0x15
    3a8a:	9c 91       	ld	r25, X
    3a8c:	80 a1       	ldd	r24, Z+32	; 0x20
    3a8e:	89 2b       	or	r24, r25
    3a90:	8c 93       	st	X, r24
    3a92:	08 95       	ret

00003a94 <_ZN4UTFT24_set_direction_registersEh>:
    3a94:	61 31       	cpi	r22, 0x11	; 17
    3a96:	31 f0       	breq	.+12     	; 0x3aa4 <_ZN4UTFT24_set_direction_registersEh+0x10>
    3a98:	8f ef       	ldi	r24, 0xFF	; 255
    3a9a:	81 b9       	out	0x01, r24	; 1
    3a9c:	60 31       	cpi	r22, 0x10	; 16
    3a9e:	49 f4       	brne	.+18     	; 0x3ab2 <_ZN4UTFT24_set_direction_registersEh+0x1e>
    3aa0:	87 b9       	out	0x07, r24	; 7
    3aa2:	08 95       	ret
    3aa4:	88 e1       	ldi	r24, 0x18	; 24
    3aa6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
    3aaa:	80 e2       	ldi	r24, 0x20	; 32
    3aac:	83 bb       	out	0x13, r24	; 19
    3aae:	8b e3       	ldi	r24, 0x3B	; 59
    3ab0:	8d b9       	out	0x0d, r24	; 13
    3ab2:	08 95       	ret

00003ab4 <_ZN4UTFT13_fast_fill_16Eiil>:
    3ab4:	8f 92       	push	r8
    3ab6:	9f 92       	push	r9
    3ab8:	af 92       	push	r10
    3aba:	bf 92       	push	r11
    3abc:	cf 92       	push	r12
    3abe:	df 92       	push	r13
    3ac0:	ef 92       	push	r14
    3ac2:	ff 92       	push	r15
    3ac4:	0f 93       	push	r16
    3ac6:	1f 93       	push	r17
    3ac8:	cf 93       	push	r28
    3aca:	df 93       	push	r29
    3acc:	ec 01       	movw	r28, r24
    3ace:	68 01       	movw	r12, r16
    3ad0:	79 01       	movw	r14, r18
    3ad2:	62 b9       	out	0x02, r22	; 2
    3ad4:	48 b9       	out	0x08, r20	; 8
    3ad6:	c9 01       	movw	r24, r18
    3ad8:	b8 01       	movw	r22, r16
    3ada:	20 e1       	ldi	r18, 0x10	; 16
    3adc:	30 e0       	ldi	r19, 0x00	; 0
    3ade:	40 e0       	ldi	r20, 0x00	; 0
    3ae0:	50 e0       	ldi	r21, 0x00	; 0
    3ae2:	0e 94 14 4b 	call	0x9628	; 0x9628 <__divmodsi4>
    3ae6:	49 01       	movw	r8, r18
    3ae8:	5a 01       	movw	r10, r20
    3aea:	80 e0       	ldi	r24, 0x00	; 0
    3aec:	90 e0       	ldi	r25, 0x00	; 0
    3aee:	dc 01       	movw	r26, r24
    3af0:	88 15       	cp	r24, r8
    3af2:	99 05       	cpc	r25, r9
    3af4:	aa 05       	cpc	r26, r10
    3af6:	bb 05       	cpc	r27, r11
    3af8:	0c f0       	brlt	.+2      	; 0x3afc <_ZN4UTFT13_fast_fill_16Eiil+0x48>
    3afa:	d4 c0       	rjmp	.+424    	; 0x3ca4 <_ZN4UTFT13_fast_fill_16Eiil+0x1f0>
    3afc:	ea 89       	ldd	r30, Y+18	; 0x12
    3afe:	fb 89       	ldd	r31, Y+19	; 0x13
    3b00:	30 81       	ld	r19, Z
    3b02:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b04:	20 95       	com	r18
    3b06:	23 23       	and	r18, r19
    3b08:	20 83       	st	Z, r18
    3b0a:	ea 89       	ldd	r30, Y+18	; 0x12
    3b0c:	fb 89       	ldd	r31, Y+19	; 0x13
    3b0e:	30 81       	ld	r19, Z
    3b10:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b12:	23 2b       	or	r18, r19
    3b14:	20 83       	st	Z, r18
    3b16:	ea 89       	ldd	r30, Y+18	; 0x12
    3b18:	fb 89       	ldd	r31, Y+19	; 0x13
    3b1a:	30 81       	ld	r19, Z
    3b1c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b1e:	20 95       	com	r18
    3b20:	23 23       	and	r18, r19
    3b22:	20 83       	st	Z, r18
    3b24:	ea 89       	ldd	r30, Y+18	; 0x12
    3b26:	fb 89       	ldd	r31, Y+19	; 0x13
    3b28:	30 81       	ld	r19, Z
    3b2a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b2c:	23 2b       	or	r18, r19
    3b2e:	20 83       	st	Z, r18
    3b30:	ea 89       	ldd	r30, Y+18	; 0x12
    3b32:	fb 89       	ldd	r31, Y+19	; 0x13
    3b34:	30 81       	ld	r19, Z
    3b36:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b38:	20 95       	com	r18
    3b3a:	23 23       	and	r18, r19
    3b3c:	20 83       	st	Z, r18
    3b3e:	ea 89       	ldd	r30, Y+18	; 0x12
    3b40:	fb 89       	ldd	r31, Y+19	; 0x13
    3b42:	30 81       	ld	r19, Z
    3b44:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b46:	23 2b       	or	r18, r19
    3b48:	20 83       	st	Z, r18
    3b4a:	ea 89       	ldd	r30, Y+18	; 0x12
    3b4c:	fb 89       	ldd	r31, Y+19	; 0x13
    3b4e:	30 81       	ld	r19, Z
    3b50:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b52:	20 95       	com	r18
    3b54:	23 23       	and	r18, r19
    3b56:	20 83       	st	Z, r18
    3b58:	ea 89       	ldd	r30, Y+18	; 0x12
    3b5a:	fb 89       	ldd	r31, Y+19	; 0x13
    3b5c:	30 81       	ld	r19, Z
    3b5e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b60:	23 2b       	or	r18, r19
    3b62:	20 83       	st	Z, r18
    3b64:	ea 89       	ldd	r30, Y+18	; 0x12
    3b66:	fb 89       	ldd	r31, Y+19	; 0x13
    3b68:	30 81       	ld	r19, Z
    3b6a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b6c:	20 95       	com	r18
    3b6e:	23 23       	and	r18, r19
    3b70:	20 83       	st	Z, r18
    3b72:	ea 89       	ldd	r30, Y+18	; 0x12
    3b74:	fb 89       	ldd	r31, Y+19	; 0x13
    3b76:	30 81       	ld	r19, Z
    3b78:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b7a:	23 2b       	or	r18, r19
    3b7c:	20 83       	st	Z, r18
    3b7e:	ea 89       	ldd	r30, Y+18	; 0x12
    3b80:	fb 89       	ldd	r31, Y+19	; 0x13
    3b82:	30 81       	ld	r19, Z
    3b84:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b86:	20 95       	com	r18
    3b88:	23 23       	and	r18, r19
    3b8a:	20 83       	st	Z, r18
    3b8c:	ea 89       	ldd	r30, Y+18	; 0x12
    3b8e:	fb 89       	ldd	r31, Y+19	; 0x13
    3b90:	30 81       	ld	r19, Z
    3b92:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b94:	23 2b       	or	r18, r19
    3b96:	20 83       	st	Z, r18
    3b98:	ea 89       	ldd	r30, Y+18	; 0x12
    3b9a:	fb 89       	ldd	r31, Y+19	; 0x13
    3b9c:	30 81       	ld	r19, Z
    3b9e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ba0:	20 95       	com	r18
    3ba2:	23 23       	and	r18, r19
    3ba4:	20 83       	st	Z, r18
    3ba6:	ea 89       	ldd	r30, Y+18	; 0x12
    3ba8:	fb 89       	ldd	r31, Y+19	; 0x13
    3baa:	30 81       	ld	r19, Z
    3bac:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bae:	23 2b       	or	r18, r19
    3bb0:	20 83       	st	Z, r18
    3bb2:	ea 89       	ldd	r30, Y+18	; 0x12
    3bb4:	fb 89       	ldd	r31, Y+19	; 0x13
    3bb6:	30 81       	ld	r19, Z
    3bb8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bba:	20 95       	com	r18
    3bbc:	23 23       	and	r18, r19
    3bbe:	20 83       	st	Z, r18
    3bc0:	ea 89       	ldd	r30, Y+18	; 0x12
    3bc2:	fb 89       	ldd	r31, Y+19	; 0x13
    3bc4:	30 81       	ld	r19, Z
    3bc6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bc8:	23 2b       	or	r18, r19
    3bca:	20 83       	st	Z, r18
    3bcc:	ea 89       	ldd	r30, Y+18	; 0x12
    3bce:	fb 89       	ldd	r31, Y+19	; 0x13
    3bd0:	30 81       	ld	r19, Z
    3bd2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bd4:	20 95       	com	r18
    3bd6:	23 23       	and	r18, r19
    3bd8:	20 83       	st	Z, r18
    3bda:	ea 89       	ldd	r30, Y+18	; 0x12
    3bdc:	fb 89       	ldd	r31, Y+19	; 0x13
    3bde:	30 81       	ld	r19, Z
    3be0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3be2:	23 2b       	or	r18, r19
    3be4:	20 83       	st	Z, r18
    3be6:	ea 89       	ldd	r30, Y+18	; 0x12
    3be8:	fb 89       	ldd	r31, Y+19	; 0x13
    3bea:	30 81       	ld	r19, Z
    3bec:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bee:	20 95       	com	r18
    3bf0:	23 23       	and	r18, r19
    3bf2:	20 83       	st	Z, r18
    3bf4:	ea 89       	ldd	r30, Y+18	; 0x12
    3bf6:	fb 89       	ldd	r31, Y+19	; 0x13
    3bf8:	30 81       	ld	r19, Z
    3bfa:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bfc:	23 2b       	or	r18, r19
    3bfe:	20 83       	st	Z, r18
    3c00:	ea 89       	ldd	r30, Y+18	; 0x12
    3c02:	fb 89       	ldd	r31, Y+19	; 0x13
    3c04:	30 81       	ld	r19, Z
    3c06:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c08:	20 95       	com	r18
    3c0a:	23 23       	and	r18, r19
    3c0c:	20 83       	st	Z, r18
    3c0e:	ea 89       	ldd	r30, Y+18	; 0x12
    3c10:	fb 89       	ldd	r31, Y+19	; 0x13
    3c12:	30 81       	ld	r19, Z
    3c14:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c16:	23 2b       	or	r18, r19
    3c18:	20 83       	st	Z, r18
    3c1a:	ea 89       	ldd	r30, Y+18	; 0x12
    3c1c:	fb 89       	ldd	r31, Y+19	; 0x13
    3c1e:	30 81       	ld	r19, Z
    3c20:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c22:	20 95       	com	r18
    3c24:	23 23       	and	r18, r19
    3c26:	20 83       	st	Z, r18
    3c28:	ea 89       	ldd	r30, Y+18	; 0x12
    3c2a:	fb 89       	ldd	r31, Y+19	; 0x13
    3c2c:	30 81       	ld	r19, Z
    3c2e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c30:	23 2b       	or	r18, r19
    3c32:	20 83       	st	Z, r18
    3c34:	ea 89       	ldd	r30, Y+18	; 0x12
    3c36:	fb 89       	ldd	r31, Y+19	; 0x13
    3c38:	30 81       	ld	r19, Z
    3c3a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c3c:	20 95       	com	r18
    3c3e:	23 23       	and	r18, r19
    3c40:	20 83       	st	Z, r18
    3c42:	ea 89       	ldd	r30, Y+18	; 0x12
    3c44:	fb 89       	ldd	r31, Y+19	; 0x13
    3c46:	30 81       	ld	r19, Z
    3c48:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c4a:	23 2b       	or	r18, r19
    3c4c:	20 83       	st	Z, r18
    3c4e:	ea 89       	ldd	r30, Y+18	; 0x12
    3c50:	fb 89       	ldd	r31, Y+19	; 0x13
    3c52:	30 81       	ld	r19, Z
    3c54:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c56:	20 95       	com	r18
    3c58:	23 23       	and	r18, r19
    3c5a:	20 83       	st	Z, r18
    3c5c:	ea 89       	ldd	r30, Y+18	; 0x12
    3c5e:	fb 89       	ldd	r31, Y+19	; 0x13
    3c60:	30 81       	ld	r19, Z
    3c62:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c64:	23 2b       	or	r18, r19
    3c66:	20 83       	st	Z, r18
    3c68:	ea 89       	ldd	r30, Y+18	; 0x12
    3c6a:	fb 89       	ldd	r31, Y+19	; 0x13
    3c6c:	30 81       	ld	r19, Z
    3c6e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c70:	20 95       	com	r18
    3c72:	23 23       	and	r18, r19
    3c74:	20 83       	st	Z, r18
    3c76:	ea 89       	ldd	r30, Y+18	; 0x12
    3c78:	fb 89       	ldd	r31, Y+19	; 0x13
    3c7a:	30 81       	ld	r19, Z
    3c7c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c7e:	23 2b       	or	r18, r19
    3c80:	20 83       	st	Z, r18
    3c82:	ea 89       	ldd	r30, Y+18	; 0x12
    3c84:	fb 89       	ldd	r31, Y+19	; 0x13
    3c86:	40 81       	ld	r20, Z
    3c88:	3f 8d       	ldd	r19, Y+31	; 0x1f
    3c8a:	30 95       	com	r19
    3c8c:	34 23       	and	r19, r20
    3c8e:	30 83       	st	Z, r19
    3c90:	ea 89       	ldd	r30, Y+18	; 0x12
    3c92:	fb 89       	ldd	r31, Y+19	; 0x13
    3c94:	20 81       	ld	r18, Z
    3c96:	3f 8d       	ldd	r19, Y+31	; 0x1f
    3c98:	32 2b       	or	r19, r18
    3c9a:	30 83       	st	Z, r19
    3c9c:	01 96       	adiw	r24, 0x01	; 1
    3c9e:	a1 1d       	adc	r26, r1
    3ca0:	b1 1d       	adc	r27, r1
    3ca2:	26 cf       	rjmp	.-436    	; 0x3af0 <_ZN4UTFT13_fast_fill_16Eiil+0x3c>
    3ca4:	d7 01       	movw	r26, r14
    3ca6:	c6 01       	movw	r24, r12
    3ca8:	8f 70       	andi	r24, 0x0F	; 15
    3caa:	99 27       	eor	r25, r25
    3cac:	aa 27       	eor	r26, r26
    3cae:	bb 27       	eor	r27, r27
    3cb0:	89 2b       	or	r24, r25
    3cb2:	8a 2b       	or	r24, r26
    3cb4:	8b 2b       	or	r24, r27
    3cb6:	19 f1       	breq	.+70     	; 0x3cfe <_ZN4UTFT13_fast_fill_16Eiil+0x24a>
    3cb8:	c7 01       	movw	r24, r14
    3cba:	b6 01       	movw	r22, r12
    3cbc:	20 e1       	ldi	r18, 0x10	; 16
    3cbe:	30 e0       	ldi	r19, 0x00	; 0
    3cc0:	40 e0       	ldi	r20, 0x00	; 0
    3cc2:	50 e0       	ldi	r21, 0x00	; 0
    3cc4:	0e 94 14 4b 	call	0x9628	; 0x9628 <__divmodsi4>
    3cc8:	c1 2c       	mov	r12, r1
    3cca:	d1 2c       	mov	r13, r1
    3ccc:	76 01       	movw	r14, r12
    3cce:	6c 15       	cp	r22, r12
    3cd0:	7d 05       	cpc	r23, r13
    3cd2:	8e 05       	cpc	r24, r14
    3cd4:	9f 05       	cpc	r25, r15
    3cd6:	9c f0       	brlt	.+38     	; 0x3cfe <_ZN4UTFT13_fast_fill_16Eiil+0x24a>
    3cd8:	ea 89       	ldd	r30, Y+18	; 0x12
    3cda:	fb 89       	ldd	r31, Y+19	; 0x13
    3cdc:	30 81       	ld	r19, Z
    3cde:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ce0:	20 95       	com	r18
    3ce2:	23 23       	and	r18, r19
    3ce4:	20 83       	st	Z, r18
    3ce6:	ea 89       	ldd	r30, Y+18	; 0x12
    3ce8:	fb 89       	ldd	r31, Y+19	; 0x13
    3cea:	30 81       	ld	r19, Z
    3cec:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3cee:	23 2b       	or	r18, r19
    3cf0:	20 83       	st	Z, r18
    3cf2:	2f ef       	ldi	r18, 0xFF	; 255
    3cf4:	c2 1a       	sub	r12, r18
    3cf6:	d2 0a       	sbc	r13, r18
    3cf8:	e2 0a       	sbc	r14, r18
    3cfa:	f2 0a       	sbc	r15, r18
    3cfc:	e8 cf       	rjmp	.-48     	; 0x3cce <_ZN4UTFT13_fast_fill_16Eiil+0x21a>
    3cfe:	df 91       	pop	r29
    3d00:	cf 91       	pop	r28
    3d02:	1f 91       	pop	r17
    3d04:	0f 91       	pop	r16
    3d06:	ff 90       	pop	r15
    3d08:	ef 90       	pop	r14
    3d0a:	df 90       	pop	r13
    3d0c:	cf 90       	pop	r12
    3d0e:	bf 90       	pop	r11
    3d10:	af 90       	pop	r10
    3d12:	9f 90       	pop	r9
    3d14:	8f 90       	pop	r8
    3d16:	08 95       	ret

00003d18 <_ZN4UTFT12_fast_fill_8Eil>:
    3d18:	8f 92       	push	r8
    3d1a:	9f 92       	push	r9
    3d1c:	af 92       	push	r10
    3d1e:	bf 92       	push	r11
    3d20:	cf 92       	push	r12
    3d22:	df 92       	push	r13
    3d24:	ef 92       	push	r14
    3d26:	ff 92       	push	r15
    3d28:	cf 93       	push	r28
    3d2a:	df 93       	push	r29
    3d2c:	ec 01       	movw	r28, r24
    3d2e:	69 01       	movw	r12, r18
    3d30:	7a 01       	movw	r14, r20
    3d32:	62 b9       	out	0x02, r22	; 2
    3d34:	ca 01       	movw	r24, r20
    3d36:	b9 01       	movw	r22, r18
    3d38:	20 e1       	ldi	r18, 0x10	; 16
    3d3a:	30 e0       	ldi	r19, 0x00	; 0
    3d3c:	40 e0       	ldi	r20, 0x00	; 0
    3d3e:	50 e0       	ldi	r21, 0x00	; 0
    3d40:	0e 94 14 4b 	call	0x9628	; 0x9628 <__divmodsi4>
    3d44:	49 01       	movw	r8, r18
    3d46:	5a 01       	movw	r10, r20
    3d48:	80 e0       	ldi	r24, 0x00	; 0
    3d4a:	90 e0       	ldi	r25, 0x00	; 0
    3d4c:	dc 01       	movw	r26, r24
    3d4e:	88 15       	cp	r24, r8
    3d50:	99 05       	cpc	r25, r9
    3d52:	aa 05       	cpc	r26, r10
    3d54:	bb 05       	cpc	r27, r11
    3d56:	0c f0       	brlt	.+2      	; 0x3d5a <_ZN4UTFT12_fast_fill_8Eil+0x42>
    3d58:	a4 c1       	rjmp	.+840    	; 0x40a2 <_ZN4UTFT12_fast_fill_8Eil+0x38a>
    3d5a:	ea 89       	ldd	r30, Y+18	; 0x12
    3d5c:	fb 89       	ldd	r31, Y+19	; 0x13
    3d5e:	30 81       	ld	r19, Z
    3d60:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d62:	20 95       	com	r18
    3d64:	23 23       	and	r18, r19
    3d66:	20 83       	st	Z, r18
    3d68:	ea 89       	ldd	r30, Y+18	; 0x12
    3d6a:	fb 89       	ldd	r31, Y+19	; 0x13
    3d6c:	30 81       	ld	r19, Z
    3d6e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d70:	23 2b       	or	r18, r19
    3d72:	20 83       	st	Z, r18
    3d74:	ea 89       	ldd	r30, Y+18	; 0x12
    3d76:	fb 89       	ldd	r31, Y+19	; 0x13
    3d78:	30 81       	ld	r19, Z
    3d7a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d7c:	20 95       	com	r18
    3d7e:	23 23       	and	r18, r19
    3d80:	20 83       	st	Z, r18
    3d82:	ea 89       	ldd	r30, Y+18	; 0x12
    3d84:	fb 89       	ldd	r31, Y+19	; 0x13
    3d86:	30 81       	ld	r19, Z
    3d88:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d8a:	23 2b       	or	r18, r19
    3d8c:	20 83       	st	Z, r18
    3d8e:	ea 89       	ldd	r30, Y+18	; 0x12
    3d90:	fb 89       	ldd	r31, Y+19	; 0x13
    3d92:	30 81       	ld	r19, Z
    3d94:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d96:	20 95       	com	r18
    3d98:	23 23       	and	r18, r19
    3d9a:	20 83       	st	Z, r18
    3d9c:	ea 89       	ldd	r30, Y+18	; 0x12
    3d9e:	fb 89       	ldd	r31, Y+19	; 0x13
    3da0:	30 81       	ld	r19, Z
    3da2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3da4:	23 2b       	or	r18, r19
    3da6:	20 83       	st	Z, r18
    3da8:	ea 89       	ldd	r30, Y+18	; 0x12
    3daa:	fb 89       	ldd	r31, Y+19	; 0x13
    3dac:	30 81       	ld	r19, Z
    3dae:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3db0:	20 95       	com	r18
    3db2:	23 23       	and	r18, r19
    3db4:	20 83       	st	Z, r18
    3db6:	ea 89       	ldd	r30, Y+18	; 0x12
    3db8:	fb 89       	ldd	r31, Y+19	; 0x13
    3dba:	30 81       	ld	r19, Z
    3dbc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dbe:	23 2b       	or	r18, r19
    3dc0:	20 83       	st	Z, r18
    3dc2:	ea 89       	ldd	r30, Y+18	; 0x12
    3dc4:	fb 89       	ldd	r31, Y+19	; 0x13
    3dc6:	30 81       	ld	r19, Z
    3dc8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dca:	20 95       	com	r18
    3dcc:	23 23       	and	r18, r19
    3dce:	20 83       	st	Z, r18
    3dd0:	ea 89       	ldd	r30, Y+18	; 0x12
    3dd2:	fb 89       	ldd	r31, Y+19	; 0x13
    3dd4:	30 81       	ld	r19, Z
    3dd6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dd8:	23 2b       	or	r18, r19
    3dda:	20 83       	st	Z, r18
    3ddc:	ea 89       	ldd	r30, Y+18	; 0x12
    3dde:	fb 89       	ldd	r31, Y+19	; 0x13
    3de0:	30 81       	ld	r19, Z
    3de2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3de4:	20 95       	com	r18
    3de6:	23 23       	and	r18, r19
    3de8:	20 83       	st	Z, r18
    3dea:	ea 89       	ldd	r30, Y+18	; 0x12
    3dec:	fb 89       	ldd	r31, Y+19	; 0x13
    3dee:	30 81       	ld	r19, Z
    3df0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3df2:	23 2b       	or	r18, r19
    3df4:	20 83       	st	Z, r18
    3df6:	ea 89       	ldd	r30, Y+18	; 0x12
    3df8:	fb 89       	ldd	r31, Y+19	; 0x13
    3dfa:	30 81       	ld	r19, Z
    3dfc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dfe:	20 95       	com	r18
    3e00:	23 23       	and	r18, r19
    3e02:	20 83       	st	Z, r18
    3e04:	ea 89       	ldd	r30, Y+18	; 0x12
    3e06:	fb 89       	ldd	r31, Y+19	; 0x13
    3e08:	30 81       	ld	r19, Z
    3e0a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e0c:	23 2b       	or	r18, r19
    3e0e:	20 83       	st	Z, r18
    3e10:	ea 89       	ldd	r30, Y+18	; 0x12
    3e12:	fb 89       	ldd	r31, Y+19	; 0x13
    3e14:	30 81       	ld	r19, Z
    3e16:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e18:	20 95       	com	r18
    3e1a:	23 23       	and	r18, r19
    3e1c:	20 83       	st	Z, r18
    3e1e:	ea 89       	ldd	r30, Y+18	; 0x12
    3e20:	fb 89       	ldd	r31, Y+19	; 0x13
    3e22:	30 81       	ld	r19, Z
    3e24:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e26:	23 2b       	or	r18, r19
    3e28:	20 83       	st	Z, r18
    3e2a:	ea 89       	ldd	r30, Y+18	; 0x12
    3e2c:	fb 89       	ldd	r31, Y+19	; 0x13
    3e2e:	30 81       	ld	r19, Z
    3e30:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e32:	20 95       	com	r18
    3e34:	23 23       	and	r18, r19
    3e36:	20 83       	st	Z, r18
    3e38:	ea 89       	ldd	r30, Y+18	; 0x12
    3e3a:	fb 89       	ldd	r31, Y+19	; 0x13
    3e3c:	30 81       	ld	r19, Z
    3e3e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e40:	23 2b       	or	r18, r19
    3e42:	20 83       	st	Z, r18
    3e44:	ea 89       	ldd	r30, Y+18	; 0x12
    3e46:	fb 89       	ldd	r31, Y+19	; 0x13
    3e48:	30 81       	ld	r19, Z
    3e4a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e4c:	20 95       	com	r18
    3e4e:	23 23       	and	r18, r19
    3e50:	20 83       	st	Z, r18
    3e52:	ea 89       	ldd	r30, Y+18	; 0x12
    3e54:	fb 89       	ldd	r31, Y+19	; 0x13
    3e56:	30 81       	ld	r19, Z
    3e58:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e5a:	23 2b       	or	r18, r19
    3e5c:	20 83       	st	Z, r18
    3e5e:	ea 89       	ldd	r30, Y+18	; 0x12
    3e60:	fb 89       	ldd	r31, Y+19	; 0x13
    3e62:	30 81       	ld	r19, Z
    3e64:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e66:	20 95       	com	r18
    3e68:	23 23       	and	r18, r19
    3e6a:	20 83       	st	Z, r18
    3e6c:	ea 89       	ldd	r30, Y+18	; 0x12
    3e6e:	fb 89       	ldd	r31, Y+19	; 0x13
    3e70:	30 81       	ld	r19, Z
    3e72:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e74:	23 2b       	or	r18, r19
    3e76:	20 83       	st	Z, r18
    3e78:	ea 89       	ldd	r30, Y+18	; 0x12
    3e7a:	fb 89       	ldd	r31, Y+19	; 0x13
    3e7c:	30 81       	ld	r19, Z
    3e7e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e80:	20 95       	com	r18
    3e82:	23 23       	and	r18, r19
    3e84:	20 83       	st	Z, r18
    3e86:	ea 89       	ldd	r30, Y+18	; 0x12
    3e88:	fb 89       	ldd	r31, Y+19	; 0x13
    3e8a:	30 81       	ld	r19, Z
    3e8c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e8e:	23 2b       	or	r18, r19
    3e90:	20 83       	st	Z, r18
    3e92:	ea 89       	ldd	r30, Y+18	; 0x12
    3e94:	fb 89       	ldd	r31, Y+19	; 0x13
    3e96:	30 81       	ld	r19, Z
    3e98:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e9a:	20 95       	com	r18
    3e9c:	23 23       	and	r18, r19
    3e9e:	20 83       	st	Z, r18
    3ea0:	ea 89       	ldd	r30, Y+18	; 0x12
    3ea2:	fb 89       	ldd	r31, Y+19	; 0x13
    3ea4:	30 81       	ld	r19, Z
    3ea6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ea8:	23 2b       	or	r18, r19
    3eaa:	20 83       	st	Z, r18
    3eac:	ea 89       	ldd	r30, Y+18	; 0x12
    3eae:	fb 89       	ldd	r31, Y+19	; 0x13
    3eb0:	30 81       	ld	r19, Z
    3eb2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3eb4:	20 95       	com	r18
    3eb6:	23 23       	and	r18, r19
    3eb8:	20 83       	st	Z, r18
    3eba:	ea 89       	ldd	r30, Y+18	; 0x12
    3ebc:	fb 89       	ldd	r31, Y+19	; 0x13
    3ebe:	30 81       	ld	r19, Z
    3ec0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ec2:	23 2b       	or	r18, r19
    3ec4:	20 83       	st	Z, r18
    3ec6:	ea 89       	ldd	r30, Y+18	; 0x12
    3ec8:	fb 89       	ldd	r31, Y+19	; 0x13
    3eca:	30 81       	ld	r19, Z
    3ecc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ece:	20 95       	com	r18
    3ed0:	23 23       	and	r18, r19
    3ed2:	20 83       	st	Z, r18
    3ed4:	ea 89       	ldd	r30, Y+18	; 0x12
    3ed6:	fb 89       	ldd	r31, Y+19	; 0x13
    3ed8:	30 81       	ld	r19, Z
    3eda:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3edc:	23 2b       	or	r18, r19
    3ede:	20 83       	st	Z, r18
    3ee0:	ea 89       	ldd	r30, Y+18	; 0x12
    3ee2:	fb 89       	ldd	r31, Y+19	; 0x13
    3ee4:	30 81       	ld	r19, Z
    3ee6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ee8:	20 95       	com	r18
    3eea:	23 23       	and	r18, r19
    3eec:	20 83       	st	Z, r18
    3eee:	ea 89       	ldd	r30, Y+18	; 0x12
    3ef0:	fb 89       	ldd	r31, Y+19	; 0x13
    3ef2:	30 81       	ld	r19, Z
    3ef4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ef6:	23 2b       	or	r18, r19
    3ef8:	20 83       	st	Z, r18
    3efa:	ea 89       	ldd	r30, Y+18	; 0x12
    3efc:	fb 89       	ldd	r31, Y+19	; 0x13
    3efe:	30 81       	ld	r19, Z
    3f00:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f02:	20 95       	com	r18
    3f04:	23 23       	and	r18, r19
    3f06:	20 83       	st	Z, r18
    3f08:	ea 89       	ldd	r30, Y+18	; 0x12
    3f0a:	fb 89       	ldd	r31, Y+19	; 0x13
    3f0c:	30 81       	ld	r19, Z
    3f0e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f10:	23 2b       	or	r18, r19
    3f12:	20 83       	st	Z, r18
    3f14:	ea 89       	ldd	r30, Y+18	; 0x12
    3f16:	fb 89       	ldd	r31, Y+19	; 0x13
    3f18:	30 81       	ld	r19, Z
    3f1a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f1c:	20 95       	com	r18
    3f1e:	23 23       	and	r18, r19
    3f20:	20 83       	st	Z, r18
    3f22:	ea 89       	ldd	r30, Y+18	; 0x12
    3f24:	fb 89       	ldd	r31, Y+19	; 0x13
    3f26:	30 81       	ld	r19, Z
    3f28:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f2a:	23 2b       	or	r18, r19
    3f2c:	20 83       	st	Z, r18
    3f2e:	ea 89       	ldd	r30, Y+18	; 0x12
    3f30:	fb 89       	ldd	r31, Y+19	; 0x13
    3f32:	30 81       	ld	r19, Z
    3f34:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f36:	20 95       	com	r18
    3f38:	23 23       	and	r18, r19
    3f3a:	20 83       	st	Z, r18
    3f3c:	ea 89       	ldd	r30, Y+18	; 0x12
    3f3e:	fb 89       	ldd	r31, Y+19	; 0x13
    3f40:	30 81       	ld	r19, Z
    3f42:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f44:	23 2b       	or	r18, r19
    3f46:	20 83       	st	Z, r18
    3f48:	ea 89       	ldd	r30, Y+18	; 0x12
    3f4a:	fb 89       	ldd	r31, Y+19	; 0x13
    3f4c:	30 81       	ld	r19, Z
    3f4e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f50:	20 95       	com	r18
    3f52:	23 23       	and	r18, r19
    3f54:	20 83       	st	Z, r18
    3f56:	ea 89       	ldd	r30, Y+18	; 0x12
    3f58:	fb 89       	ldd	r31, Y+19	; 0x13
    3f5a:	30 81       	ld	r19, Z
    3f5c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f5e:	23 2b       	or	r18, r19
    3f60:	20 83       	st	Z, r18
    3f62:	ea 89       	ldd	r30, Y+18	; 0x12
    3f64:	fb 89       	ldd	r31, Y+19	; 0x13
    3f66:	30 81       	ld	r19, Z
    3f68:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f6a:	20 95       	com	r18
    3f6c:	23 23       	and	r18, r19
    3f6e:	20 83       	st	Z, r18
    3f70:	ea 89       	ldd	r30, Y+18	; 0x12
    3f72:	fb 89       	ldd	r31, Y+19	; 0x13
    3f74:	30 81       	ld	r19, Z
    3f76:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f78:	23 2b       	or	r18, r19
    3f7a:	20 83       	st	Z, r18
    3f7c:	ea 89       	ldd	r30, Y+18	; 0x12
    3f7e:	fb 89       	ldd	r31, Y+19	; 0x13
    3f80:	30 81       	ld	r19, Z
    3f82:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f84:	20 95       	com	r18
    3f86:	23 23       	and	r18, r19
    3f88:	20 83       	st	Z, r18
    3f8a:	ea 89       	ldd	r30, Y+18	; 0x12
    3f8c:	fb 89       	ldd	r31, Y+19	; 0x13
    3f8e:	30 81       	ld	r19, Z
    3f90:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f92:	23 2b       	or	r18, r19
    3f94:	20 83       	st	Z, r18
    3f96:	ea 89       	ldd	r30, Y+18	; 0x12
    3f98:	fb 89       	ldd	r31, Y+19	; 0x13
    3f9a:	30 81       	ld	r19, Z
    3f9c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f9e:	20 95       	com	r18
    3fa0:	23 23       	and	r18, r19
    3fa2:	20 83       	st	Z, r18
    3fa4:	ea 89       	ldd	r30, Y+18	; 0x12
    3fa6:	fb 89       	ldd	r31, Y+19	; 0x13
    3fa8:	30 81       	ld	r19, Z
    3faa:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fac:	23 2b       	or	r18, r19
    3fae:	20 83       	st	Z, r18
    3fb0:	ea 89       	ldd	r30, Y+18	; 0x12
    3fb2:	fb 89       	ldd	r31, Y+19	; 0x13
    3fb4:	30 81       	ld	r19, Z
    3fb6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fb8:	20 95       	com	r18
    3fba:	23 23       	and	r18, r19
    3fbc:	20 83       	st	Z, r18
    3fbe:	ea 89       	ldd	r30, Y+18	; 0x12
    3fc0:	fb 89       	ldd	r31, Y+19	; 0x13
    3fc2:	30 81       	ld	r19, Z
    3fc4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fc6:	23 2b       	or	r18, r19
    3fc8:	20 83       	st	Z, r18
    3fca:	ea 89       	ldd	r30, Y+18	; 0x12
    3fcc:	fb 89       	ldd	r31, Y+19	; 0x13
    3fce:	30 81       	ld	r19, Z
    3fd0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fd2:	20 95       	com	r18
    3fd4:	23 23       	and	r18, r19
    3fd6:	20 83       	st	Z, r18
    3fd8:	ea 89       	ldd	r30, Y+18	; 0x12
    3fda:	fb 89       	ldd	r31, Y+19	; 0x13
    3fdc:	30 81       	ld	r19, Z
    3fde:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fe0:	23 2b       	or	r18, r19
    3fe2:	20 83       	st	Z, r18
    3fe4:	ea 89       	ldd	r30, Y+18	; 0x12
    3fe6:	fb 89       	ldd	r31, Y+19	; 0x13
    3fe8:	30 81       	ld	r19, Z
    3fea:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3fec:	20 95       	com	r18
    3fee:	23 23       	and	r18, r19
    3ff0:	20 83       	st	Z, r18
    3ff2:	ea 89       	ldd	r30, Y+18	; 0x12
    3ff4:	fb 89       	ldd	r31, Y+19	; 0x13
    3ff6:	30 81       	ld	r19, Z
    3ff8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ffa:	23 2b       	or	r18, r19
    3ffc:	20 83       	st	Z, r18
    3ffe:	ea 89       	ldd	r30, Y+18	; 0x12
    4000:	fb 89       	ldd	r31, Y+19	; 0x13
    4002:	30 81       	ld	r19, Z
    4004:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4006:	20 95       	com	r18
    4008:	23 23       	and	r18, r19
    400a:	20 83       	st	Z, r18
    400c:	ea 89       	ldd	r30, Y+18	; 0x12
    400e:	fb 89       	ldd	r31, Y+19	; 0x13
    4010:	30 81       	ld	r19, Z
    4012:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4014:	23 2b       	or	r18, r19
    4016:	20 83       	st	Z, r18
    4018:	ea 89       	ldd	r30, Y+18	; 0x12
    401a:	fb 89       	ldd	r31, Y+19	; 0x13
    401c:	30 81       	ld	r19, Z
    401e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4020:	20 95       	com	r18
    4022:	23 23       	and	r18, r19
    4024:	20 83       	st	Z, r18
    4026:	ea 89       	ldd	r30, Y+18	; 0x12
    4028:	fb 89       	ldd	r31, Y+19	; 0x13
    402a:	30 81       	ld	r19, Z
    402c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    402e:	23 2b       	or	r18, r19
    4030:	20 83       	st	Z, r18
    4032:	ea 89       	ldd	r30, Y+18	; 0x12
    4034:	fb 89       	ldd	r31, Y+19	; 0x13
    4036:	30 81       	ld	r19, Z
    4038:	2f 8d       	ldd	r18, Y+31	; 0x1f
    403a:	20 95       	com	r18
    403c:	23 23       	and	r18, r19
    403e:	20 83       	st	Z, r18
    4040:	ea 89       	ldd	r30, Y+18	; 0x12
    4042:	fb 89       	ldd	r31, Y+19	; 0x13
    4044:	30 81       	ld	r19, Z
    4046:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4048:	23 2b       	or	r18, r19
    404a:	20 83       	st	Z, r18
    404c:	ea 89       	ldd	r30, Y+18	; 0x12
    404e:	fb 89       	ldd	r31, Y+19	; 0x13
    4050:	30 81       	ld	r19, Z
    4052:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4054:	20 95       	com	r18
    4056:	23 23       	and	r18, r19
    4058:	20 83       	st	Z, r18
    405a:	ea 89       	ldd	r30, Y+18	; 0x12
    405c:	fb 89       	ldd	r31, Y+19	; 0x13
    405e:	30 81       	ld	r19, Z
    4060:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4062:	23 2b       	or	r18, r19
    4064:	20 83       	st	Z, r18
    4066:	ea 89       	ldd	r30, Y+18	; 0x12
    4068:	fb 89       	ldd	r31, Y+19	; 0x13
    406a:	30 81       	ld	r19, Z
    406c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    406e:	20 95       	com	r18
    4070:	23 23       	and	r18, r19
    4072:	20 83       	st	Z, r18
    4074:	ea 89       	ldd	r30, Y+18	; 0x12
    4076:	fb 89       	ldd	r31, Y+19	; 0x13
    4078:	30 81       	ld	r19, Z
    407a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    407c:	23 2b       	or	r18, r19
    407e:	20 83       	st	Z, r18
    4080:	ea 89       	ldd	r30, Y+18	; 0x12
    4082:	fb 89       	ldd	r31, Y+19	; 0x13
    4084:	40 81       	ld	r20, Z
    4086:	3f 8d       	ldd	r19, Y+31	; 0x1f
    4088:	30 95       	com	r19
    408a:	34 23       	and	r19, r20
    408c:	30 83       	st	Z, r19
    408e:	ea 89       	ldd	r30, Y+18	; 0x12
    4090:	fb 89       	ldd	r31, Y+19	; 0x13
    4092:	20 81       	ld	r18, Z
    4094:	3f 8d       	ldd	r19, Y+31	; 0x1f
    4096:	32 2b       	or	r19, r18
    4098:	30 83       	st	Z, r19
    409a:	01 96       	adiw	r24, 0x01	; 1
    409c:	a1 1d       	adc	r26, r1
    409e:	b1 1d       	adc	r27, r1
    40a0:	56 ce       	rjmp	.-852    	; 0x3d4e <_ZN4UTFT12_fast_fill_8Eil+0x36>
    40a2:	d7 01       	movw	r26, r14
    40a4:	c6 01       	movw	r24, r12
    40a6:	8f 70       	andi	r24, 0x0F	; 15
    40a8:	99 27       	eor	r25, r25
    40aa:	aa 27       	eor	r26, r26
    40ac:	bb 27       	eor	r27, r27
    40ae:	89 2b       	or	r24, r25
    40b0:	8a 2b       	or	r24, r26
    40b2:	8b 2b       	or	r24, r27
    40b4:	81 f1       	breq	.+96     	; 0x4116 <_ZN4UTFT12_fast_fill_8Eil+0x3fe>
    40b6:	c7 01       	movw	r24, r14
    40b8:	b6 01       	movw	r22, r12
    40ba:	20 e1       	ldi	r18, 0x10	; 16
    40bc:	30 e0       	ldi	r19, 0x00	; 0
    40be:	40 e0       	ldi	r20, 0x00	; 0
    40c0:	50 e0       	ldi	r21, 0x00	; 0
    40c2:	0e 94 14 4b 	call	0x9628	; 0x9628 <__divmodsi4>
    40c6:	c1 2c       	mov	r12, r1
    40c8:	d1 2c       	mov	r13, r1
    40ca:	76 01       	movw	r14, r12
    40cc:	6c 15       	cp	r22, r12
    40ce:	7d 05       	cpc	r23, r13
    40d0:	8e 05       	cpc	r24, r14
    40d2:	9f 05       	cpc	r25, r15
    40d4:	04 f1       	brlt	.+64     	; 0x4116 <_ZN4UTFT12_fast_fill_8Eil+0x3fe>
    40d6:	ea 89       	ldd	r30, Y+18	; 0x12
    40d8:	fb 89       	ldd	r31, Y+19	; 0x13
    40da:	30 81       	ld	r19, Z
    40dc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    40de:	20 95       	com	r18
    40e0:	23 23       	and	r18, r19
    40e2:	20 83       	st	Z, r18
    40e4:	ea 89       	ldd	r30, Y+18	; 0x12
    40e6:	fb 89       	ldd	r31, Y+19	; 0x13
    40e8:	30 81       	ld	r19, Z
    40ea:	2f 8d       	ldd	r18, Y+31	; 0x1f
    40ec:	23 2b       	or	r18, r19
    40ee:	20 83       	st	Z, r18
    40f0:	ea 89       	ldd	r30, Y+18	; 0x12
    40f2:	fb 89       	ldd	r31, Y+19	; 0x13
    40f4:	30 81       	ld	r19, Z
    40f6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    40f8:	20 95       	com	r18
    40fa:	23 23       	and	r18, r19
    40fc:	20 83       	st	Z, r18
    40fe:	ea 89       	ldd	r30, Y+18	; 0x12
    4100:	fb 89       	ldd	r31, Y+19	; 0x13
    4102:	30 81       	ld	r19, Z
    4104:	2f 8d       	ldd	r18, Y+31	; 0x1f
    4106:	23 2b       	or	r18, r19
    4108:	20 83       	st	Z, r18
    410a:	2f ef       	ldi	r18, 0xFF	; 255
    410c:	c2 1a       	sub	r12, r18
    410e:	d2 0a       	sbc	r13, r18
    4110:	e2 0a       	sbc	r14, r18
    4112:	f2 0a       	sbc	r15, r18
    4114:	db cf       	rjmp	.-74     	; 0x40cc <_ZN4UTFT12_fast_fill_8Eil+0x3b4>
    4116:	df 91       	pop	r29
    4118:	cf 91       	pop	r28
    411a:	ff 90       	pop	r15
    411c:	ef 90       	pop	r14
    411e:	df 90       	pop	r13
    4120:	cf 90       	pop	r12
    4122:	bf 90       	pop	r11
    4124:	af 90       	pop	r10
    4126:	9f 90       	pop	r9
    4128:	8f 90       	pop	r8
    412a:	08 95       	ret

0000412c <_ZN4UTFTC1Ev>:
    412c:	08 95       	ret

0000412e <_ZN4UTFTC1Ehiiiii>:
    412e:	4f 92       	push	r4
    4130:	5f 92       	push	r5
    4132:	6f 92       	push	r6
    4134:	7f 92       	push	r7
    4136:	8f 92       	push	r8
    4138:	9f 92       	push	r9
    413a:	af 92       	push	r10
    413c:	bf 92       	push	r11
    413e:	cf 92       	push	r12
    4140:	df 92       	push	r13
    4142:	ef 92       	push	r14
    4144:	ff 92       	push	r15
    4146:	0f 93       	push	r16
    4148:	1f 93       	push	r17
    414a:	cf 93       	push	r28
    414c:	df 93       	push	r29
    414e:	cd b7       	in	r28, 0x3d	; 61
    4150:	de b7       	in	r29, 0x3e	; 62
    4152:	c0 5a       	subi	r28, 0xA0	; 160
    4154:	d1 09       	sbc	r29, r1
    4156:	0f b6       	in	r0, 0x3f	; 63
    4158:	f8 94       	cli
    415a:	de bf       	out	0x3e, r29	; 62
    415c:	0f be       	out	0x3f, r0	; 63
    415e:	cd bf       	out	0x3d, r28	; 61
    4160:	70 e4       	ldi	r23, 0x40	; 64
    4162:	e9 e0       	ldi	r30, 0x09	; 9
    4164:	f2 e0       	ldi	r31, 0x02	; 2
    4166:	de 01       	movw	r26, r28
    4168:	af 5b       	subi	r26, 0xBF	; 191
    416a:	bf 4f       	sbci	r27, 0xFF	; 255
    416c:	01 90       	ld	r0, Z+
    416e:	0d 92       	st	X+, r0
    4170:	7a 95       	dec	r23
    4172:	e1 f7       	brne	.-8      	; 0x416c <_ZN4UTFTC1Ehiiiii+0x3e>
    4174:	70 e4       	ldi	r23, 0x40	; 64
    4176:	e9 e4       	ldi	r30, 0x49	; 73
    4178:	f2 e0       	ldi	r31, 0x02	; 2
    417a:	de 01       	movw	r26, r28
    417c:	11 96       	adiw	r26, 0x01	; 1
    417e:	01 90       	ld	r0, Z+
    4180:	0d 92       	st	X+, r0
    4182:	7a 95       	dec	r23
    4184:	e1 f7       	brne	.-8      	; 0x417e <_ZN4UTFTC1Ehiiiii+0x50>
    4186:	70 e2       	ldi	r23, 0x20	; 32
    4188:	e9 e8       	ldi	r30, 0x89	; 137
    418a:	f2 e0       	ldi	r31, 0x02	; 2
    418c:	de 01       	movw	r26, r28
    418e:	af 57       	subi	r26, 0x7F	; 127
    4190:	bf 4f       	sbci	r27, 0xFF	; 255
    4192:	01 90       	ld	r0, Z+
    4194:	0d 92       	st	X+, r0
    4196:	7a 95       	dec	r23
    4198:	e1 f7       	brne	.-8      	; 0x4192 <_ZN4UTFTC1Ehiiiii+0x64>
    419a:	e6 2f       	mov	r30, r22
    419c:	f0 e0       	ldi	r31, 0x00	; 0
    419e:	5f 01       	movw	r10, r30
    41a0:	aa 0c       	add	r10, r10
    41a2:	bb 1c       	adc	r11, r11
    41a4:	a1 e4       	ldi	r26, 0x41	; 65
    41a6:	b0 e0       	ldi	r27, 0x00	; 0
    41a8:	ac 0f       	add	r26, r28
    41aa:	bd 1f       	adc	r27, r29
    41ac:	aa 0d       	add	r26, r10
    41ae:	bb 1d       	adc	r27, r11
    41b0:	0d 90       	ld	r0, X+
    41b2:	bc 91       	ld	r27, X
    41b4:	a0 2d       	mov	r26, r0
    41b6:	2d 01       	movw	r4, r26
    41b8:	61 2c       	mov	r6, r1
    41ba:	71 2c       	mov	r7, r1
    41bc:	dc 01       	movw	r26, r24
    41be:	15 96       	adiw	r26, 0x05	; 5
    41c0:	4d 92       	st	X+, r4
    41c2:	5d 92       	st	X+, r5
    41c4:	6d 92       	st	X+, r6
    41c6:	7c 92       	st	X, r7
    41c8:	18 97       	sbiw	r26, 0x08	; 8
    41ca:	a1 e0       	ldi	r26, 0x01	; 1
    41cc:	b0 e0       	ldi	r27, 0x00	; 0
    41ce:	ac 0f       	add	r26, r28
    41d0:	bd 1f       	adc	r27, r29
    41d2:	aa 0d       	add	r26, r10
    41d4:	bb 1d       	adc	r27, r11
    41d6:	0d 90       	ld	r0, X+
    41d8:	bc 91       	ld	r27, X
    41da:	a0 2d       	mov	r26, r0
    41dc:	4d 01       	movw	r8, r26
    41de:	a1 2c       	mov	r10, r1
    41e0:	b1 2c       	mov	r11, r1
    41e2:	dc 01       	movw	r26, r24
    41e4:	19 96       	adiw	r26, 0x09	; 9
    41e6:	8d 92       	st	X+, r8
    41e8:	9d 92       	st	X+, r9
    41ea:	ad 92       	st	X+, r10
    41ec:	bc 92       	st	X, r11
    41ee:	1c 97       	sbiw	r26, 0x0c	; 12
    41f0:	a1 e8       	ldi	r26, 0x81	; 129
    41f2:	b0 e0       	ldi	r27, 0x00	; 0
    41f4:	ac 0f       	add	r26, r28
    41f6:	bd 1f       	adc	r27, r29
    41f8:	ea 0f       	add	r30, r26
    41fa:	fb 1f       	adc	r31, r27
    41fc:	70 81       	ld	r23, Z
    41fe:	fc 01       	movw	r30, r24
    4200:	76 87       	std	Z+14, r23	; 0x0e
    4202:	65 87       	std	Z+13, r22	; 0x0d
    4204:	45 a3       	std	Z+37, r20	; 0x25
    4206:	26 a3       	std	Z+38, r18	; 0x26
    4208:	07 a3       	std	Z+39, r16	; 0x27
    420a:	e0 a6       	std	Z+40, r14	; 0x28
    420c:	c1 a6       	std	Z+41, r12	; 0x29
    420e:	74 30       	cpi	r23, 0x04	; 4
    4210:	19 f4       	brne	.+6      	; 0x4218 <_ZN4UTFTC1Ehiiiii+0xea>
    4212:	61 e0       	ldi	r22, 0x01	; 1
    4214:	66 87       	std	Z+14, r22	; 0x0e
    4216:	77 87       	std	Z+15, r23	; 0x0f
    4218:	dc 01       	movw	r26, r24
    421a:	1e 96       	adiw	r26, 0x0e	; 14
    421c:	6c 91       	ld	r22, X
    421e:	1e 97       	sbiw	r26, 0x0e	; 14
    4220:	65 30       	cpi	r22, 0x05	; 5
    4222:	31 f4       	brne	.+12     	; 0x4230 <_ZN4UTFTC1Ehiiiii+0x102>
    4224:	71 e0       	ldi	r23, 0x01	; 1
    4226:	1e 96       	adiw	r26, 0x0e	; 14
    4228:	7c 93       	st	X, r23
    422a:	1e 97       	sbiw	r26, 0x0e	; 14
    422c:	1f 96       	adiw	r26, 0x0f	; 15
    422e:	6c 93       	st	X, r22
    4230:	fc 01       	movw	r30, r24
    4232:	66 85       	ldd	r22, Z+14	; 0x0e
    4234:	61 30       	cpi	r22, 0x01	; 1
    4236:	09 f4       	brne	.+2      	; 0x423a <_ZN4UTFTC1Ehiiiii+0x10c>
    4238:	98 c0       	rjmp	.+304    	; 0x436a <_ZN4UTFTC1Ehiiiii+0x23c>
    423a:	49 01       	movw	r8, r18
    423c:	3a 01       	movw	r6, r20
    423e:	5c 01       	movw	r10, r24
    4240:	29 dc       	rcall	.-1966   	; 0x3a94 <_ZN4UTFT24_set_direction_registersEh>
    4242:	f3 01       	movw	r30, r6
    4244:	e0 58       	subi	r30, 0x80	; 128
    4246:	fc 4e       	sbci	r31, 0xEC	; 236
    4248:	e4 91       	lpm	r30, Z
    424a:	f0 e0       	ldi	r31, 0x00	; 0
    424c:	ee 0f       	add	r30, r30
    424e:	ff 1f       	adc	r31, r31
    4250:	e0 52       	subi	r30, 0x20	; 32
    4252:	fc 4e       	sbci	r31, 0xEC	; 236
    4254:	25 91       	lpm	r18, Z+
    4256:	34 91       	lpm	r19, Z
    4258:	d5 01       	movw	r26, r10
    425a:	51 96       	adiw	r26, 0x11	; 17
    425c:	3c 93       	st	X, r19
    425e:	2e 93       	st	-X, r18
    4260:	50 97       	sbiw	r26, 0x10	; 16
    4262:	f3 01       	movw	r30, r6
    4264:	e6 5c       	subi	r30, 0xC6	; 198
    4266:	fc 4e       	sbci	r31, 0xEC	; 236
    4268:	e4 91       	lpm	r30, Z
    426a:	5e 96       	adiw	r26, 0x1e	; 30
    426c:	ec 93       	st	X, r30
    426e:	5e 97       	sbiw	r26, 0x1e	; 30
    4270:	f4 01       	movw	r30, r8
    4272:	e0 58       	subi	r30, 0x80	; 128
    4274:	fc 4e       	sbci	r31, 0xEC	; 236
    4276:	e4 91       	lpm	r30, Z
    4278:	f0 e0       	ldi	r31, 0x00	; 0
    427a:	ee 0f       	add	r30, r30
    427c:	ff 1f       	adc	r31, r31
    427e:	e0 52       	subi	r30, 0x20	; 32
    4280:	fc 4e       	sbci	r31, 0xEC	; 236
    4282:	25 91       	lpm	r18, Z+
    4284:	34 91       	lpm	r19, Z
    4286:	f5 01       	movw	r30, r10
    4288:	33 8b       	std	Z+19, r19	; 0x13
    428a:	22 8b       	std	Z+18, r18	; 0x12
    428c:	f4 01       	movw	r30, r8
    428e:	e6 5c       	subi	r30, 0xC6	; 198
    4290:	fc 4e       	sbci	r31, 0xEC	; 236
    4292:	e4 91       	lpm	r30, Z
    4294:	5f 96       	adiw	r26, 0x1f	; 31
    4296:	ec 93       	st	X, r30
    4298:	5f 97       	sbiw	r26, 0x1f	; 31
    429a:	c8 01       	movw	r24, r16
    429c:	f8 01       	movw	r30, r16
    429e:	e0 58       	subi	r30, 0x80	; 128
    42a0:	fc 4e       	sbci	r31, 0xEC	; 236
    42a2:	e4 91       	lpm	r30, Z
    42a4:	f0 e0       	ldi	r31, 0x00	; 0
    42a6:	ee 0f       	add	r30, r30
    42a8:	ff 1f       	adc	r31, r31
    42aa:	e0 52       	subi	r30, 0x20	; 32
    42ac:	fc 4e       	sbci	r31, 0xEC	; 236
    42ae:	25 91       	lpm	r18, Z+
    42b0:	34 91       	lpm	r19, Z
    42b2:	f5 01       	movw	r30, r10
    42b4:	35 8b       	std	Z+21, r19	; 0x15
    42b6:	24 8b       	std	Z+20, r18	; 0x14
    42b8:	fc 01       	movw	r30, r24
    42ba:	e6 5c       	subi	r30, 0xC6	; 198
    42bc:	fc 4e       	sbci	r31, 0xEC	; 236
    42be:	e4 91       	lpm	r30, Z
    42c0:	90 96       	adiw	r26, 0x20	; 32
    42c2:	ec 93       	st	X, r30
    42c4:	90 97       	sbiw	r26, 0x20	; 32
    42c6:	f7 01       	movw	r30, r14
    42c8:	e0 58       	subi	r30, 0x80	; 128
    42ca:	fc 4e       	sbci	r31, 0xEC	; 236
    42cc:	e4 91       	lpm	r30, Z
    42ce:	f0 e0       	ldi	r31, 0x00	; 0
    42d0:	ee 0f       	add	r30, r30
    42d2:	ff 1f       	adc	r31, r31
    42d4:	e0 52       	subi	r30, 0x20	; 32
    42d6:	fc 4e       	sbci	r31, 0xEC	; 236
    42d8:	85 91       	lpm	r24, Z+
    42da:	94 91       	lpm	r25, Z
    42dc:	f5 01       	movw	r30, r10
    42de:	97 8b       	std	Z+23, r25	; 0x17
    42e0:	86 8b       	std	Z+22, r24	; 0x16
    42e2:	f7 01       	movw	r30, r14
    42e4:	e6 5c       	subi	r30, 0xC6	; 198
    42e6:	fc 4e       	sbci	r31, 0xEC	; 236
    42e8:	e4 90       	lpm	r14, Z
    42ea:	91 96       	adiw	r26, 0x21	; 33
    42ec:	ec 92       	st	X, r14
    42ee:	91 97       	sbiw	r26, 0x21	; 33
    42f0:	1e 96       	adiw	r26, 0x0e	; 14
    42f2:	8c 91       	ld	r24, X
    42f4:	81 31       	cpi	r24, 0x11	; 17
    42f6:	09 f0       	breq	.+2      	; 0x42fa <_ZN4UTFTC1Ehiiiii+0x1cc>
    42f8:	ad c0       	rjmp	.+346    	; 0x4454 <_ZN4UTFTC1Ehiiiii+0x326>
    42fa:	f6 01       	movw	r30, r12
    42fc:	e0 58       	subi	r30, 0x80	; 128
    42fe:	fc 4e       	sbci	r31, 0xEC	; 236
    4300:	e4 91       	lpm	r30, Z
    4302:	f0 e0       	ldi	r31, 0x00	; 0
    4304:	ee 0f       	add	r30, r30
    4306:	ff 1f       	adc	r31, r31
    4308:	e0 52       	subi	r30, 0x20	; 32
    430a:	fc 4e       	sbci	r31, 0xEC	; 236
    430c:	a5 91       	lpm	r26, Z+
    430e:	b4 91       	lpm	r27, Z
    4310:	f5 01       	movw	r30, r10
    4312:	b5 8f       	std	Z+29, r27	; 0x1d
    4314:	a4 8f       	std	Z+28, r26	; 0x1c
    4316:	f6 01       	movw	r30, r12
    4318:	e6 5c       	subi	r30, 0xC6	; 198
    431a:	fc 4e       	sbci	r31, 0xEC	; 236
    431c:	94 91       	lpm	r25, Z
    431e:	f5 01       	movw	r30, r10
    4320:	94 a3       	std	Z+36, r25	; 0x24
    4322:	8c 91       	ld	r24, X
    4324:	e9 2f       	mov	r30, r25
    4326:	e0 95       	com	r30
    4328:	e8 23       	and	r30, r24
    432a:	ec 93       	st	X, r30
    432c:	61 e0       	ldi	r22, 0x01	; 1
    432e:	88 e0       	ldi	r24, 0x08	; 8
    4330:	0e 94 58 48 	call	0x90b0	; 0x90b0 <pinMode>
    4334:	60 e0       	ldi	r22, 0x00	; 0
    4336:	88 e0       	ldi	r24, 0x08	; 8
    4338:	c0 56       	subi	r28, 0x60	; 96
    433a:	df 4f       	sbci	r29, 0xFF	; 255
    433c:	0f b6       	in	r0, 0x3f	; 63
    433e:	f8 94       	cli
    4340:	de bf       	out	0x3e, r29	; 62
    4342:	0f be       	out	0x3f, r0	; 63
    4344:	cd bf       	out	0x3d, r28	; 61
    4346:	df 91       	pop	r29
    4348:	cf 91       	pop	r28
    434a:	1f 91       	pop	r17
    434c:	0f 91       	pop	r16
    434e:	ff 90       	pop	r15
    4350:	ef 90       	pop	r14
    4352:	df 90       	pop	r13
    4354:	cf 90       	pop	r12
    4356:	bf 90       	pop	r11
    4358:	af 90       	pop	r10
    435a:	9f 90       	pop	r9
    435c:	8f 90       	pop	r8
    435e:	7f 90       	pop	r7
    4360:	6f 90       	pop	r6
    4362:	5f 90       	pop	r5
    4364:	4f 90       	pop	r4
    4366:	0c 94 94 48 	jmp	0x9128	; 0x9128 <digitalWrite>
    436a:	ba 01       	movw	r22, r20
    436c:	fa 01       	movw	r30, r20
    436e:	e0 58       	subi	r30, 0x80	; 128
    4370:	fc 4e       	sbci	r31, 0xEC	; 236
    4372:	e4 91       	lpm	r30, Z
    4374:	f0 e0       	ldi	r31, 0x00	; 0
    4376:	ee 0f       	add	r30, r30
    4378:	ff 1f       	adc	r31, r31
    437a:	e0 52       	subi	r30, 0x20	; 32
    437c:	fc 4e       	sbci	r31, 0xEC	; 236
    437e:	45 91       	lpm	r20, Z+
    4380:	54 91       	lpm	r21, Z
    4382:	dc 01       	movw	r26, r24
    4384:	59 96       	adiw	r26, 0x19	; 25
    4386:	5c 93       	st	X, r21
    4388:	4e 93       	st	-X, r20
    438a:	58 97       	sbiw	r26, 0x18	; 24
    438c:	fb 01       	movw	r30, r22
    438e:	e6 5c       	subi	r30, 0xC6	; 198
    4390:	fc 4e       	sbci	r31, 0xEC	; 236
    4392:	e4 91       	lpm	r30, Z
    4394:	92 96       	adiw	r26, 0x22	; 34
    4396:	ec 93       	st	X, r30
    4398:	92 97       	sbiw	r26, 0x22	; 34
    439a:	a9 01       	movw	r20, r18
    439c:	f9 01       	movw	r30, r18
    439e:	e0 58       	subi	r30, 0x80	; 128
    43a0:	fc 4e       	sbci	r31, 0xEC	; 236
    43a2:	e4 91       	lpm	r30, Z
    43a4:	f0 e0       	ldi	r31, 0x00	; 0
    43a6:	ee 0f       	add	r30, r30
    43a8:	ff 1f       	adc	r31, r31
    43aa:	e0 52       	subi	r30, 0x20	; 32
    43ac:	fc 4e       	sbci	r31, 0xEC	; 236
    43ae:	25 91       	lpm	r18, Z+
    43b0:	34 91       	lpm	r19, Z
    43b2:	fc 01       	movw	r30, r24
    43b4:	33 8f       	std	Z+27, r19	; 0x1b
    43b6:	22 8f       	std	Z+26, r18	; 0x1a
    43b8:	fa 01       	movw	r30, r20
    43ba:	e6 5c       	subi	r30, 0xC6	; 198
    43bc:	fc 4e       	sbci	r31, 0xEC	; 236
    43be:	e4 91       	lpm	r30, Z
    43c0:	93 96       	adiw	r26, 0x23	; 35
    43c2:	ec 93       	st	X, r30
    43c4:	93 97       	sbiw	r26, 0x23	; 35
    43c6:	f8 01       	movw	r30, r16
    43c8:	e0 58       	subi	r30, 0x80	; 128
    43ca:	fc 4e       	sbci	r31, 0xEC	; 236
    43cc:	e4 91       	lpm	r30, Z
    43ce:	f0 e0       	ldi	r31, 0x00	; 0
    43d0:	ee 0f       	add	r30, r30
    43d2:	ff 1f       	adc	r31, r31
    43d4:	e0 52       	subi	r30, 0x20	; 32
    43d6:	fc 4e       	sbci	r31, 0xEC	; 236
    43d8:	45 91       	lpm	r20, Z+
    43da:	54 91       	lpm	r21, Z
    43dc:	fc 01       	movw	r30, r24
    43de:	55 8b       	std	Z+21, r21	; 0x15
    43e0:	44 8b       	std	Z+20, r20	; 0x14
    43e2:	f8 01       	movw	r30, r16
    43e4:	e6 5c       	subi	r30, 0xC6	; 198
    43e6:	fc 4e       	sbci	r31, 0xEC	; 236
    43e8:	e4 91       	lpm	r30, Z
    43ea:	90 96       	adiw	r26, 0x20	; 32
    43ec:	ec 93       	st	X, r30
    43ee:	bf ef       	ldi	r27, 0xFF	; 255
    43f0:	eb 16       	cp	r14, r27
    43f2:	f1 04       	cpc	r15, r1
    43f4:	a9 f0       	breq	.+42     	; 0x4420 <_ZN4UTFTC1Ehiiiii+0x2f2>
    43f6:	f7 01       	movw	r30, r14
    43f8:	e0 58       	subi	r30, 0x80	; 128
    43fa:	fc 4e       	sbci	r31, 0xEC	; 236
    43fc:	e4 91       	lpm	r30, Z
    43fe:	f0 e0       	ldi	r31, 0x00	; 0
    4400:	ee 0f       	add	r30, r30
    4402:	ff 1f       	adc	r31, r31
    4404:	e0 52       	subi	r30, 0x20	; 32
    4406:	fc 4e       	sbci	r31, 0xEC	; 236
    4408:	25 91       	lpm	r18, Z+
    440a:	34 91       	lpm	r19, Z
    440c:	fc 01       	movw	r30, r24
    440e:	37 8b       	std	Z+23, r19	; 0x17
    4410:	26 8b       	std	Z+22, r18	; 0x16
    4412:	f7 01       	movw	r30, r14
    4414:	e6 5c       	subi	r30, 0xC6	; 198
    4416:	fc 4e       	sbci	r31, 0xEC	; 236
    4418:	e4 90       	lpm	r14, Z
    441a:	dc 01       	movw	r26, r24
    441c:	91 96       	adiw	r26, 0x21	; 33
    441e:	ec 92       	st	X, r14
    4420:	fc 01       	movw	r30, r24
    4422:	27 85       	ldd	r18, Z+15	; 0x0f
    4424:	24 30       	cpi	r18, 0x04	; 4
    4426:	b1 f0       	breq	.+44     	; 0x4454 <_ZN4UTFTC1Ehiiiii+0x326>
    4428:	f6 01       	movw	r30, r12
    442a:	e0 58       	subi	r30, 0x80	; 128
    442c:	fc 4e       	sbci	r31, 0xEC	; 236
    442e:	e4 91       	lpm	r30, Z
    4430:	f0 e0       	ldi	r31, 0x00	; 0
    4432:	ee 0f       	add	r30, r30
    4434:	ff 1f       	adc	r31, r31
    4436:	e0 52       	subi	r30, 0x20	; 32
    4438:	fc 4e       	sbci	r31, 0xEC	; 236
    443a:	45 91       	lpm	r20, Z+
    443c:	54 91       	lpm	r21, Z
    443e:	dc 01       	movw	r26, r24
    4440:	51 96       	adiw	r26, 0x11	; 17
    4442:	5c 93       	st	X, r21
    4444:	4e 93       	st	-X, r20
    4446:	50 97       	sbiw	r26, 0x10	; 16
    4448:	f6 01       	movw	r30, r12
    444a:	e6 5c       	subi	r30, 0xC6	; 198
    444c:	fc 4e       	sbci	r31, 0xEC	; 236
    444e:	e4 91       	lpm	r30, Z
    4450:	5e 96       	adiw	r26, 0x1e	; 30
    4452:	ec 93       	st	X, r30
    4454:	c0 56       	subi	r28, 0x60	; 96
    4456:	df 4f       	sbci	r29, 0xFF	; 255
    4458:	0f b6       	in	r0, 0x3f	; 63
    445a:	f8 94       	cli
    445c:	de bf       	out	0x3e, r29	; 62
    445e:	0f be       	out	0x3f, r0	; 63
    4460:	cd bf       	out	0x3d, r28	; 61
    4462:	df 91       	pop	r29
    4464:	cf 91       	pop	r28
    4466:	1f 91       	pop	r17
    4468:	0f 91       	pop	r16
    446a:	ff 90       	pop	r15
    446c:	ef 90       	pop	r14
    446e:	df 90       	pop	r13
    4470:	cf 90       	pop	r12
    4472:	bf 90       	pop	r11
    4474:	af 90       	pop	r10
    4476:	9f 90       	pop	r9
    4478:	8f 90       	pop	r8
    447a:	7f 90       	pop	r7
    447c:	6f 90       	pop	r6
    447e:	5f 90       	pop	r5
    4480:	4f 90       	pop	r4
    4482:	08 95       	ret

00004484 <_ZN4UTFT13LCD_Write_COMEc>:
    4484:	46 2f       	mov	r20, r22
    4486:	dc 01       	movw	r26, r24
    4488:	1e 96       	adiw	r26, 0x0e	; 14
    448a:	2c 91       	ld	r18, X
    448c:	1e 97       	sbiw	r26, 0x0e	; 14
    448e:	21 30       	cpi	r18, 0x01	; 1
    4490:	71 f0       	breq	.+28     	; 0x44ae <_ZN4UTFT13LCD_Write_COMEc+0x2a>
    4492:	50 96       	adiw	r26, 0x10	; 16
    4494:	ed 91       	ld	r30, X+
    4496:	fc 91       	ld	r31, X
    4498:	51 97       	sbiw	r26, 0x11	; 17
    449a:	30 81       	ld	r19, Z
    449c:	5e 96       	adiw	r26, 0x1e	; 30
    449e:	2c 91       	ld	r18, X
    44a0:	5e 97       	sbiw	r26, 0x1e	; 30
    44a2:	20 95       	com	r18
    44a4:	23 23       	and	r18, r19
    44a6:	20 83       	st	Z, r18
    44a8:	1e 96       	adiw	r26, 0x0e	; 14
    44aa:	2c 91       	ld	r18, X
    44ac:	01 c0       	rjmp	.+2      	; 0x44b0 <_ZN4UTFT13LCD_Write_COMEc+0x2c>
    44ae:	21 e0       	ldi	r18, 0x01	; 1
    44b0:	60 e0       	ldi	r22, 0x00	; 0
    44b2:	59 c9       	rjmp	.-3406   	; 0x3766 <_ZN4UTFT12LCD_Writ_BusEcch>

000044b4 <_ZN4UTFT14LCD_Write_DATAEcc>:
    44b4:	1f 93       	push	r17
    44b6:	cf 93       	push	r28
    44b8:	df 93       	push	r29
    44ba:	dc 01       	movw	r26, r24
    44bc:	1e 96       	adiw	r26, 0x0e	; 14
    44be:	2c 91       	ld	r18, X
    44c0:	1e 97       	sbiw	r26, 0x0e	; 14
    44c2:	21 30       	cpi	r18, 0x01	; 1
    44c4:	69 f0       	breq	.+26     	; 0x44e0 <_ZN4UTFT14LCD_Write_DATAEcc+0x2c>
    44c6:	50 96       	adiw	r26, 0x10	; 16
    44c8:	ed 91       	ld	r30, X+
    44ca:	fc 91       	ld	r31, X
    44cc:	51 97       	sbiw	r26, 0x11	; 17
    44ce:	30 81       	ld	r19, Z
    44d0:	5e 96       	adiw	r26, 0x1e	; 30
    44d2:	2c 91       	ld	r18, X
    44d4:	5e 97       	sbiw	r26, 0x1e	; 30
    44d6:	23 2b       	or	r18, r19
    44d8:	20 83       	st	Z, r18
    44da:	1e 96       	adiw	r26, 0x0e	; 14
    44dc:	2c 91       	ld	r18, X
    44de:	0a c0       	rjmp	.+20     	; 0x44f4 <_ZN4UTFT14LCD_Write_DATAEcc+0x40>
    44e0:	14 2f       	mov	r17, r20
    44e2:	46 2f       	mov	r20, r22
    44e4:	ec 01       	movw	r28, r24
    44e6:	21 e0       	ldi	r18, 0x01	; 1
    44e8:	61 e0       	ldi	r22, 0x01	; 1
    44ea:	3d d9       	rcall	.-3462   	; 0x3766 <_ZN4UTFT12LCD_Writ_BusEcch>
    44ec:	2e 85       	ldd	r18, Y+14	; 0x0e
    44ee:	41 2f       	mov	r20, r17
    44f0:	61 e0       	ldi	r22, 0x01	; 1
    44f2:	ce 01       	movw	r24, r28
    44f4:	df 91       	pop	r29
    44f6:	cf 91       	pop	r28
    44f8:	1f 91       	pop	r17
    44fa:	35 c9       	rjmp	.-3478   	; 0x3766 <_ZN4UTFT12LCD_Writ_BusEcch>

000044fc <_ZN4UTFT14LCD_Write_DATAEc>:
    44fc:	46 2f       	mov	r20, r22
    44fe:	dc 01       	movw	r26, r24
    4500:	1e 96       	adiw	r26, 0x0e	; 14
    4502:	2c 91       	ld	r18, X
    4504:	1e 97       	sbiw	r26, 0x0e	; 14
    4506:	21 30       	cpi	r18, 0x01	; 1
    4508:	71 f0       	breq	.+28     	; 0x4526 <_ZN4UTFT14LCD_Write_DATAEc+0x2a>
    450a:	50 96       	adiw	r26, 0x10	; 16
    450c:	ed 91       	ld	r30, X+
    450e:	fc 91       	ld	r31, X
    4510:	51 97       	sbiw	r26, 0x11	; 17
    4512:	30 81       	ld	r19, Z
    4514:	5e 96       	adiw	r26, 0x1e	; 30
    4516:	2c 91       	ld	r18, X
    4518:	5e 97       	sbiw	r26, 0x1e	; 30
    451a:	23 2b       	or	r18, r19
    451c:	20 83       	st	Z, r18
    451e:	1e 96       	adiw	r26, 0x0e	; 14
    4520:	2c 91       	ld	r18, X
    4522:	60 e0       	ldi	r22, 0x00	; 0
    4524:	02 c0       	rjmp	.+4      	; 0x452a <_ZN4UTFT14LCD_Write_DATAEc+0x2e>
    4526:	21 e0       	ldi	r18, 0x01	; 1
    4528:	61 e0       	ldi	r22, 0x01	; 1
    452a:	1d c9       	rjmp	.-3526   	; 0x3766 <_ZN4UTFT12LCD_Writ_BusEcch>

0000452c <_ZN4UTFT18LCD_Write_COM_DATAEci>:
    452c:	0f 93       	push	r16
    452e:	1f 93       	push	r17
    4530:	cf 93       	push	r28
    4532:	df 93       	push	r29
    4534:	ec 01       	movw	r28, r24
    4536:	8a 01       	movw	r16, r20
    4538:	a5 df       	rcall	.-182    	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    453a:	40 2f       	mov	r20, r16
    453c:	61 2f       	mov	r22, r17
    453e:	ce 01       	movw	r24, r28
    4540:	df 91       	pop	r29
    4542:	cf 91       	pop	r28
    4544:	1f 91       	pop	r17
    4546:	0f 91       	pop	r16
    4548:	b5 cf       	rjmp	.-150    	; 0x44b4 <_ZN4UTFT14LCD_Write_DATAEcc>

0000454a <_ZN4UTFT5setXYEjjjj>:
    454a:	af 92       	push	r10
    454c:	bf 92       	push	r11
    454e:	cf 92       	push	r12
    4550:	df 92       	push	r13
    4552:	ef 92       	push	r14
    4554:	ff 92       	push	r15
    4556:	0f 93       	push	r16
    4558:	1f 93       	push	r17
    455a:	cf 93       	push	r28
    455c:	df 93       	push	r29
    455e:	ec 01       	movw	r28, r24
    4560:	6b 01       	movw	r12, r22
    4562:	b4 2e       	mov	r11, r20
    4564:	a5 2e       	mov	r10, r21
    4566:	79 01       	movw	r14, r18
    4568:	8c 81       	ldd	r24, Y+4	; 0x04
    456a:	81 30       	cpi	r24, 0x01	; 1
    456c:	69 f4       	brne	.+26     	; 0x4588 <_ZN4UTFT5setXYEjjjj+0x3e>
    456e:	89 85       	ldd	r24, Y+9	; 0x09
    4570:	9a 85       	ldd	r25, Y+10	; 0x0a
    4572:	9c 01       	movw	r18, r24
    4574:	26 1b       	sub	r18, r22
    4576:	37 0b       	sbc	r19, r23
    4578:	8e 19       	sub	r24, r14
    457a:	9f 09       	sbc	r25, r15
    457c:	78 01       	movw	r14, r16
    457e:	89 01       	movw	r16, r18
    4580:	c4 2e       	mov	r12, r20
    4582:	d5 2e       	mov	r13, r21
    4584:	b8 2e       	mov	r11, r24
    4586:	a9 2e       	mov	r10, r25
    4588:	ed 85       	ldd	r30, Y+13	; 0x0d
    458a:	8e 2f       	mov	r24, r30
    458c:	90 e0       	ldi	r25, 0x00	; 0
    458e:	fc 01       	movw	r30, r24
    4590:	32 97       	sbiw	r30, 0x02	; 2
    4592:	ee 31       	cpi	r30, 0x1E	; 30
    4594:	f1 05       	cpc	r31, r1
    4596:	08 f0       	brcs	.+2      	; 0x459a <_ZN4UTFT5setXYEjjjj+0x50>
    4598:	0e c1       	rjmp	.+540    	; 0x47b6 <_ZN4UTFT5setXYEjjjj+0x26c>
    459a:	88 27       	eor	r24, r24
    459c:	ee 58       	subi	r30, 0x8E	; 142
    459e:	ff 4f       	sbci	r31, 0xFF	; 255
    45a0:	8f 4f       	sbci	r24, 0xFF	; 255
    45a2:	0c 94 30 4b 	jmp	0x9660	; 0x9660 <__tablejump2__>
    45a6:	4d 2d       	mov	r20, r13
    45a8:	50 e0       	ldi	r21, 0x00	; 0
    45aa:	62 e0       	ldi	r22, 0x02	; 2
    45ac:	ce 01       	movw	r24, r28
    45ae:	be df       	rcall	.-132    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45b0:	a6 01       	movw	r20, r12
    45b2:	63 e0       	ldi	r22, 0x03	; 3
    45b4:	ce 01       	movw	r24, r28
    45b6:	ba df       	rcall	.-140    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45b8:	4f 2d       	mov	r20, r15
    45ba:	50 e0       	ldi	r21, 0x00	; 0
    45bc:	64 e0       	ldi	r22, 0x04	; 4
    45be:	ce 01       	movw	r24, r28
    45c0:	b5 df       	rcall	.-150    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45c2:	a7 01       	movw	r20, r14
    45c4:	65 e0       	ldi	r22, 0x05	; 5
    45c6:	ce 01       	movw	r24, r28
    45c8:	b1 df       	rcall	.-158    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45ca:	4a 2d       	mov	r20, r10
    45cc:	50 e0       	ldi	r21, 0x00	; 0
    45ce:	66 e0       	ldi	r22, 0x06	; 6
    45d0:	ce 01       	movw	r24, r28
    45d2:	ac df       	rcall	.-168    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45d4:	4b 2d       	mov	r20, r11
    45d6:	5a 2d       	mov	r21, r10
    45d8:	67 e0       	ldi	r22, 0x07	; 7
    45da:	ce 01       	movw	r24, r28
    45dc:	a7 df       	rcall	.-178    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45de:	41 2f       	mov	r20, r17
    45e0:	50 e0       	ldi	r21, 0x00	; 0
    45e2:	52 c0       	rjmp	.+164    	; 0x4688 <_ZN4UTFT5setXYEjjjj+0x13e>
    45e4:	5e 2d       	mov	r21, r14
    45e6:	44 27       	eor	r20, r20
    45e8:	4c 0d       	add	r20, r12
    45ea:	5d 1d       	adc	r21, r13
    45ec:	64 e4       	ldi	r22, 0x44	; 68
    45ee:	ce 01       	movw	r24, r28
    45f0:	9d df       	rcall	.-198    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45f2:	4b 2d       	mov	r20, r11
    45f4:	5a 2d       	mov	r21, r10
    45f6:	65 e4       	ldi	r22, 0x45	; 69
    45f8:	ce 01       	movw	r24, r28
    45fa:	98 df       	rcall	.-208    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45fc:	a8 01       	movw	r20, r16
    45fe:	66 e4       	ldi	r22, 0x46	; 70
    4600:	ce 01       	movw	r24, r28
    4602:	94 df       	rcall	.-216    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4604:	a6 01       	movw	r20, r12
    4606:	6e e4       	ldi	r22, 0x4E	; 78
    4608:	ce 01       	movw	r24, r28
    460a:	90 df       	rcall	.-224    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    460c:	4b 2d       	mov	r20, r11
    460e:	5a 2d       	mov	r21, r10
    4610:	6f e4       	ldi	r22, 0x4F	; 79
    4612:	ce 01       	movw	r24, r28
    4614:	8b df       	rcall	.-234    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4616:	62 e2       	ldi	r22, 0x22	; 34
    4618:	c2 c0       	rjmp	.+388    	; 0x479e <_ZN4UTFT5setXYEjjjj+0x254>
    461a:	a6 01       	movw	r20, r12
    461c:	60 e2       	ldi	r22, 0x20	; 32
    461e:	ce 01       	movw	r24, r28
    4620:	85 df       	rcall	.-246    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4622:	4b 2d       	mov	r20, r11
    4624:	5a 2d       	mov	r21, r10
    4626:	61 e2       	ldi	r22, 0x21	; 33
    4628:	ce 01       	movw	r24, r28
    462a:	80 df       	rcall	.-256    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    462c:	a6 01       	movw	r20, r12
    462e:	60 e5       	ldi	r22, 0x50	; 80
    4630:	ce 01       	movw	r24, r28
    4632:	7c df       	rcall	.-264    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4634:	4b 2d       	mov	r20, r11
    4636:	5a 2d       	mov	r21, r10
    4638:	62 e5       	ldi	r22, 0x52	; 82
    463a:	ce 01       	movw	r24, r28
    463c:	77 df       	rcall	.-274    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    463e:	a7 01       	movw	r20, r14
    4640:	61 e5       	ldi	r22, 0x51	; 81
    4642:	ce 01       	movw	r24, r28
    4644:	73 df       	rcall	.-282    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4646:	a8 01       	movw	r20, r16
    4648:	63 e5       	ldi	r22, 0x53	; 83
    464a:	e3 cf       	rjmp	.-58     	; 0x4612 <_ZN4UTFT5setXYEjjjj+0xc8>
    464c:	40 e0       	ldi	r20, 0x00	; 0
    464e:	50 e0       	ldi	r21, 0x00	; 0
    4650:	62 e0       	ldi	r22, 0x02	; 2
    4652:	ce 01       	movw	r24, r28
    4654:	6b df       	rcall	.-298    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4656:	a6 01       	movw	r20, r12
    4658:	63 e0       	ldi	r22, 0x03	; 3
    465a:	ce 01       	movw	r24, r28
    465c:	67 df       	rcall	.-306    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    465e:	40 e0       	ldi	r20, 0x00	; 0
    4660:	50 e0       	ldi	r21, 0x00	; 0
    4662:	64 e0       	ldi	r22, 0x04	; 4
    4664:	ce 01       	movw	r24, r28
    4666:	62 df       	rcall	.-316    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4668:	a7 01       	movw	r20, r14
    466a:	65 e0       	ldi	r22, 0x05	; 5
    466c:	ce 01       	movw	r24, r28
    466e:	5e df       	rcall	.-324    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4670:	40 e0       	ldi	r20, 0x00	; 0
    4672:	50 e0       	ldi	r21, 0x00	; 0
    4674:	66 e0       	ldi	r22, 0x06	; 6
    4676:	ce 01       	movw	r24, r28
    4678:	59 df       	rcall	.-334    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    467a:	4b 2d       	mov	r20, r11
    467c:	5a 2d       	mov	r21, r10
    467e:	67 e0       	ldi	r22, 0x07	; 7
    4680:	ce 01       	movw	r24, r28
    4682:	54 df       	rcall	.-344    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4684:	40 e0       	ldi	r20, 0x00	; 0
    4686:	50 e0       	ldi	r21, 0x00	; 0
    4688:	68 e0       	ldi	r22, 0x08	; 8
    468a:	ce 01       	movw	r24, r28
    468c:	4f df       	rcall	.-354    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    468e:	a8 01       	movw	r20, r16
    4690:	69 e0       	ldi	r22, 0x09	; 9
    4692:	bf cf       	rjmp	.-130    	; 0x4612 <_ZN4UTFT5setXYEjjjj+0xc8>
    4694:	6a e2       	ldi	r22, 0x2A	; 42
    4696:	ce 01       	movw	r24, r28
    4698:	f5 de       	rcall	.-534    	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    469a:	6c 2d       	mov	r22, r12
    469c:	ce 01       	movw	r24, r28
    469e:	2e df       	rcall	.-420    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46a0:	6e 2d       	mov	r22, r14
    46a2:	ce 01       	movw	r24, r28
    46a4:	2b df       	rcall	.-426    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46a6:	6b e2       	ldi	r22, 0x2B	; 43
    46a8:	ce 01       	movw	r24, r28
    46aa:	ec de       	rcall	.-552    	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    46ac:	6b 2d       	mov	r22, r11
    46ae:	71 c0       	rjmp	.+226    	; 0x4792 <_ZN4UTFT5setXYEjjjj+0x248>
    46b0:	6a e2       	ldi	r22, 0x2A	; 42
    46b2:	ce 01       	movw	r24, r28
    46b4:	e7 de       	rcall	.-562    	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    46b6:	6a 2d       	mov	r22, r10
    46b8:	ce 01       	movw	r24, r28
    46ba:	20 df       	rcall	.-448    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46bc:	6b 2d       	mov	r22, r11
    46be:	ce 01       	movw	r24, r28
    46c0:	1d df       	rcall	.-454    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46c2:	61 2f       	mov	r22, r17
    46c4:	ce 01       	movw	r24, r28
    46c6:	1a df       	rcall	.-460    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46c8:	60 2f       	mov	r22, r16
    46ca:	ce 01       	movw	r24, r28
    46cc:	17 df       	rcall	.-466    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46ce:	6b e2       	ldi	r22, 0x2B	; 43
    46d0:	ce 01       	movw	r24, r28
    46d2:	d8 de       	rcall	.-592    	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    46d4:	6d 2d       	mov	r22, r13
    46d6:	ce 01       	movw	r24, r28
    46d8:	11 df       	rcall	.-478    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46da:	6c 2d       	mov	r22, r12
    46dc:	ce 01       	movw	r24, r28
    46de:	0e df       	rcall	.-484    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46e0:	6f 2d       	mov	r22, r15
    46e2:	ce 01       	movw	r24, r28
    46e4:	0b df       	rcall	.-490    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    46e6:	6e 2d       	mov	r22, r14
    46e8:	57 c0       	rjmp	.+174    	; 0x4798 <_ZN4UTFT5setXYEjjjj+0x24e>
    46ea:	5e 2d       	mov	r21, r14
    46ec:	44 27       	eor	r20, r20
    46ee:	4c 29       	or	r20, r12
    46f0:	5d 29       	or	r21, r13
    46f2:	66 e4       	ldi	r22, 0x46	; 70
    46f4:	ce 01       	movw	r24, r28
    46f6:	1a df       	rcall	.-460    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    46f8:	a8 01       	movw	r20, r16
    46fa:	67 e4       	ldi	r22, 0x47	; 71
    46fc:	ce 01       	movw	r24, r28
    46fe:	16 df       	rcall	.-468    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4700:	4b 2d       	mov	r20, r11
    4702:	5a 2d       	mov	r21, r10
    4704:	68 e4       	ldi	r22, 0x48	; 72
    4706:	0f c0       	rjmp	.+30     	; 0x4726 <_ZN4UTFT5setXYEjjjj+0x1dc>
    4708:	a7 01       	movw	r20, r14
    470a:	66 e3       	ldi	r22, 0x36	; 54
    470c:	ce 01       	movw	r24, r28
    470e:	0e df       	rcall	.-484    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4710:	a6 01       	movw	r20, r12
    4712:	67 e3       	ldi	r22, 0x37	; 55
    4714:	ce 01       	movw	r24, r28
    4716:	0a df       	rcall	.-492    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4718:	a8 01       	movw	r20, r16
    471a:	68 e3       	ldi	r22, 0x38	; 56
    471c:	ce 01       	movw	r24, r28
    471e:	06 df       	rcall	.-500    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4720:	4b 2d       	mov	r20, r11
    4722:	5a 2d       	mov	r21, r10
    4724:	69 e3       	ldi	r22, 0x39	; 57
    4726:	ce 01       	movw	r24, r28
    4728:	01 df       	rcall	.-510    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    472a:	a6 01       	movw	r20, r12
    472c:	60 e2       	ldi	r22, 0x20	; 32
    472e:	ce 01       	movw	r24, r28
    4730:	fd de       	rcall	.-518    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4732:	4b 2d       	mov	r20, r11
    4734:	5a 2d       	mov	r21, r10
    4736:	61 e2       	ldi	r22, 0x21	; 33
    4738:	6c cf       	rjmp	.-296    	; 0x4612 <_ZN4UTFT5setXYEjjjj+0xc8>
    473a:	4b 2d       	mov	r20, r11
    473c:	5a 2d       	mov	r21, r10
    473e:	62 e0       	ldi	r22, 0x02	; 2
    4740:	ce 01       	movw	r24, r28
    4742:	f4 de       	rcall	.-536    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4744:	a6 01       	movw	r20, r12
    4746:	63 e0       	ldi	r22, 0x03	; 3
    4748:	ce 01       	movw	r24, r28
    474a:	f0 de       	rcall	.-544    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    474c:	a8 01       	movw	r20, r16
    474e:	66 e0       	ldi	r22, 0x06	; 6
    4750:	ce 01       	movw	r24, r28
    4752:	ec de       	rcall	.-552    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4754:	a7 01       	movw	r20, r14
    4756:	67 e0       	ldi	r22, 0x07	; 7
    4758:	ce 01       	movw	r24, r28
    475a:	e8 de       	rcall	.-560    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    475c:	6f e0       	ldi	r22, 0x0F	; 15
    475e:	1f c0       	rjmp	.+62     	; 0x479e <_ZN4UTFT5setXYEjjjj+0x254>
    4760:	6a e2       	ldi	r22, 0x2A	; 42
    4762:	ce 01       	movw	r24, r28
    4764:	8f de       	rcall	.-738    	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    4766:	6d 2d       	mov	r22, r13
    4768:	ce 01       	movw	r24, r28
    476a:	c8 de       	rcall	.-624    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    476c:	6c 2d       	mov	r22, r12
    476e:	ce 01       	movw	r24, r28
    4770:	c5 de       	rcall	.-630    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    4772:	6f 2d       	mov	r22, r15
    4774:	ce 01       	movw	r24, r28
    4776:	c2 de       	rcall	.-636    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    4778:	6e 2d       	mov	r22, r14
    477a:	ce 01       	movw	r24, r28
    477c:	bf de       	rcall	.-642    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    477e:	6b e2       	ldi	r22, 0x2B	; 43
    4780:	ce 01       	movw	r24, r28
    4782:	80 de       	rcall	.-768    	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    4784:	6a 2d       	mov	r22, r10
    4786:	ce 01       	movw	r24, r28
    4788:	b9 de       	rcall	.-654    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    478a:	6b 2d       	mov	r22, r11
    478c:	ce 01       	movw	r24, r28
    478e:	b6 de       	rcall	.-660    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    4790:	61 2f       	mov	r22, r17
    4792:	ce 01       	movw	r24, r28
    4794:	b3 de       	rcall	.-666    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    4796:	60 2f       	mov	r22, r16
    4798:	ce 01       	movw	r24, r28
    479a:	b0 de       	rcall	.-672    	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    479c:	6c e2       	ldi	r22, 0x2C	; 44
    479e:	ce 01       	movw	r24, r28
    47a0:	df 91       	pop	r29
    47a2:	cf 91       	pop	r28
    47a4:	1f 91       	pop	r17
    47a6:	0f 91       	pop	r16
    47a8:	ff 90       	pop	r15
    47aa:	ef 90       	pop	r14
    47ac:	df 90       	pop	r13
    47ae:	cf 90       	pop	r12
    47b0:	bf 90       	pop	r11
    47b2:	af 90       	pop	r10
    47b4:	67 ce       	rjmp	.-818    	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    47b6:	df 91       	pop	r29
    47b8:	cf 91       	pop	r28
    47ba:	1f 91       	pop	r17
    47bc:	0f 91       	pop	r16
    47be:	ff 90       	pop	r15
    47c0:	ef 90       	pop	r14
    47c2:	df 90       	pop	r13
    47c4:	cf 90       	pop	r12
    47c6:	bf 90       	pop	r11
    47c8:	af 90       	pop	r10
    47ca:	08 95       	ret

000047cc <_ZN4UTFT7InitLCDEh>:
    47cc:	0f 93       	push	r16
    47ce:	1f 93       	push	r17
    47d0:	cf 93       	push	r28
    47d2:	df 93       	push	r29
    47d4:	ec 01       	movw	r28, r24
    47d6:	6c 83       	std	Y+4, r22	; 0x04
    47d8:	61 e0       	ldi	r22, 0x01	; 1
    47da:	8d a1       	ldd	r24, Y+37	; 0x25
    47dc:	0e 94 58 48 	call	0x90b0	; 0x90b0 <pinMode>
    47e0:	61 e0       	ldi	r22, 0x01	; 1
    47e2:	8e a1       	ldd	r24, Y+38	; 0x26
    47e4:	0e 94 58 48 	call	0x90b0	; 0x90b0 <pinMode>
    47e8:	61 e0       	ldi	r22, 0x01	; 1
    47ea:	8f a1       	ldd	r24, Y+39	; 0x27
    47ec:	0e 94 58 48 	call	0x90b0	; 0x90b0 <pinMode>
    47f0:	88 a5       	ldd	r24, Y+40	; 0x28
    47f2:	8f 3f       	cpi	r24, 0xFF	; 255
    47f4:	19 f0       	breq	.+6      	; 0x47fc <_ZN4UTFT7InitLCDEh+0x30>
    47f6:	61 e0       	ldi	r22, 0x01	; 1
    47f8:	0e 94 58 48 	call	0x90b0	; 0x90b0 <pinMode>
    47fc:	8e 85       	ldd	r24, Y+14	; 0x0e
    47fe:	81 31       	cpi	r24, 0x11	; 17
    4800:	29 f0       	breq	.+10     	; 0x480c <_ZN4UTFT7InitLCDEh+0x40>
    4802:	81 30       	cpi	r24, 0x01	; 1
    4804:	39 f4       	brne	.+14     	; 0x4814 <_ZN4UTFT7InitLCDEh+0x48>
    4806:	8f 85       	ldd	r24, Y+15	; 0x0f
    4808:	85 30       	cpi	r24, 0x05	; 5
    480a:	21 f4       	brne	.+8      	; 0x4814 <_ZN4UTFT7InitLCDEh+0x48>
    480c:	61 e0       	ldi	r22, 0x01	; 1
    480e:	89 a5       	ldd	r24, Y+41	; 0x29
    4810:	0e 94 58 48 	call	0x90b0	; 0x90b0 <pinMode>
    4814:	6e 85       	ldd	r22, Y+14	; 0x0e
    4816:	61 30       	cpi	r22, 0x01	; 1
    4818:	11 f0       	breq	.+4      	; 0x481e <_ZN4UTFT7InitLCDEh+0x52>
    481a:	ce 01       	movw	r24, r28
    481c:	3b d9       	rcall	.-3466   	; 0x3a94 <_ZN4UTFT24_set_direction_registersEh>
    481e:	ee 89       	ldd	r30, Y+22	; 0x16
    4820:	ff 89       	ldd	r31, Y+23	; 0x17
    4822:	90 81       	ld	r25, Z
    4824:	89 a1       	ldd	r24, Y+33	; 0x21
    4826:	89 2b       	or	r24, r25
    4828:	80 83       	st	Z, r24
    482a:	65 e0       	ldi	r22, 0x05	; 5
    482c:	70 e0       	ldi	r23, 0x00	; 0
    482e:	80 e0       	ldi	r24, 0x00	; 0
    4830:	90 e0       	ldi	r25, 0x00	; 0
    4832:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4836:	ee 89       	ldd	r30, Y+22	; 0x16
    4838:	ff 89       	ldd	r31, Y+23	; 0x17
    483a:	90 81       	ld	r25, Z
    483c:	89 a1       	ldd	r24, Y+33	; 0x21
    483e:	80 95       	com	r24
    4840:	89 23       	and	r24, r25
    4842:	80 83       	st	Z, r24
    4844:	6f e0       	ldi	r22, 0x0F	; 15
    4846:	70 e0       	ldi	r23, 0x00	; 0
    4848:	80 e0       	ldi	r24, 0x00	; 0
    484a:	90 e0       	ldi	r25, 0x00	; 0
    484c:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4850:	ee 89       	ldd	r30, Y+22	; 0x16
    4852:	ff 89       	ldd	r31, Y+23	; 0x17
    4854:	90 81       	ld	r25, Z
    4856:	89 a1       	ldd	r24, Y+33	; 0x21
    4858:	89 2b       	or	r24, r25
    485a:	80 83       	st	Z, r24
    485c:	6f e0       	ldi	r22, 0x0F	; 15
    485e:	70 e0       	ldi	r23, 0x00	; 0
    4860:	80 e0       	ldi	r24, 0x00	; 0
    4862:	90 e0       	ldi	r25, 0x00	; 0
    4864:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4868:	ec 89       	ldd	r30, Y+20	; 0x14
    486a:	fd 89       	ldd	r31, Y+21	; 0x15
    486c:	90 81       	ld	r25, Z
    486e:	88 a1       	ldd	r24, Y+32	; 0x20
    4870:	80 95       	com	r24
    4872:	89 23       	and	r24, r25
    4874:	80 83       	st	Z, r24
    4876:	ed 85       	ldd	r30, Y+13	; 0x0d
    4878:	8e 2f       	mov	r24, r30
    487a:	90 e0       	ldi	r25, 0x00	; 0
    487c:	fc 01       	movw	r30, r24
    487e:	32 97       	sbiw	r30, 0x02	; 2
    4880:	ee 31       	cpi	r30, 0x1E	; 30
    4882:	f1 05       	cpc	r31, r1
    4884:	10 f0       	brcs	.+4      	; 0x488a <_ZN4UTFT7InitLCDEh+0xbe>
    4886:	0c 94 b9 36 	jmp	0x6d72	; 0x6d72 <_ZN4UTFT7InitLCDEh+0x25a6>
    488a:	88 27       	eor	r24, r24
    488c:	e0 57       	subi	r30, 0x70	; 112
    488e:	ff 4f       	sbci	r31, 0xFF	; 255
    4890:	8f 4f       	sbci	r24, 0xFF	; 255
    4892:	0c 94 30 4b 	jmp	0x9660	; 0x9660 <__tablejump2__>
    4896:	41 e0       	ldi	r20, 0x01	; 1
    4898:	50 e0       	ldi	r21, 0x00	; 0
    489a:	60 e0       	ldi	r22, 0x00	; 0
    489c:	ce 01       	movw	r24, r28
    489e:	46 de       	rcall	.-884    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48a0:	44 ea       	ldi	r20, 0xA4	; 164
    48a2:	58 ea       	ldi	r21, 0xA8	; 168
    48a4:	63 e0       	ldi	r22, 0x03	; 3
    48a6:	ce 01       	movw	r24, r28
    48a8:	41 de       	rcall	.-894    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48aa:	40 e0       	ldi	r20, 0x00	; 0
    48ac:	50 e0       	ldi	r21, 0x00	; 0
    48ae:	6c e0       	ldi	r22, 0x0C	; 12
    48b0:	ce 01       	movw	r24, r28
    48b2:	3c de       	rcall	.-904    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48b4:	4c e0       	ldi	r20, 0x0C	; 12
    48b6:	58 e0       	ldi	r21, 0x08	; 8
    48b8:	6d e0       	ldi	r22, 0x0D	; 13
    48ba:	ce 01       	movw	r24, r28
    48bc:	37 de       	rcall	.-914    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48be:	40 e0       	ldi	r20, 0x00	; 0
    48c0:	5b e2       	ldi	r21, 0x2B	; 43
    48c2:	6e e0       	ldi	r22, 0x0E	; 14
    48c4:	ce 01       	movw	r24, r28
    48c6:	32 de       	rcall	.-924    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48c8:	47 eb       	ldi	r20, 0xB7	; 183
    48ca:	50 e0       	ldi	r21, 0x00	; 0
    48cc:	6e e1       	ldi	r22, 0x1E	; 30
    48ce:	ce 01       	movw	r24, r28
    48d0:	2d de       	rcall	.-934    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48d2:	4f e3       	ldi	r20, 0x3F	; 63
    48d4:	5b e2       	ldi	r21, 0x2B	; 43
    48d6:	61 e0       	ldi	r22, 0x01	; 1
    48d8:	ce 01       	movw	r24, r28
    48da:	28 de       	rcall	.-944    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48dc:	40 e0       	ldi	r20, 0x00	; 0
    48de:	56 e0       	ldi	r21, 0x06	; 6
    48e0:	62 e0       	ldi	r22, 0x02	; 2
    48e2:	ce 01       	movw	r24, r28
    48e4:	23 de       	rcall	.-954    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48e6:	40 e0       	ldi	r20, 0x00	; 0
    48e8:	50 e0       	ldi	r21, 0x00	; 0
    48ea:	60 e1       	ldi	r22, 0x10	; 16
    48ec:	ce 01       	movw	r24, r28
    48ee:	1e de       	rcall	.-964    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48f0:	40 e7       	ldi	r20, 0x70	; 112
    48f2:	50 e6       	ldi	r21, 0x60	; 96
    48f4:	61 e1       	ldi	r22, 0x11	; 17
    48f6:	ce 01       	movw	r24, r28
    48f8:	19 de       	rcall	.-974    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48fa:	40 e0       	ldi	r20, 0x00	; 0
    48fc:	50 e0       	ldi	r21, 0x00	; 0
    48fe:	65 e0       	ldi	r22, 0x05	; 5
    4900:	ce 01       	movw	r24, r28
    4902:	14 de       	rcall	.-984    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4904:	40 e0       	ldi	r20, 0x00	; 0
    4906:	50 e0       	ldi	r21, 0x00	; 0
    4908:	66 e0       	ldi	r22, 0x06	; 6
    490a:	ce 01       	movw	r24, r28
    490c:	0f de       	rcall	.-994    	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    490e:	4c e1       	ldi	r20, 0x1C	; 28
    4910:	5f ee       	ldi	r21, 0xEF	; 239
    4912:	66 e1       	ldi	r22, 0x16	; 22
    4914:	ce 01       	movw	r24, r28
    4916:	0a de       	rcall	.-1004   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4918:	43 e0       	ldi	r20, 0x03	; 3
    491a:	50 e0       	ldi	r21, 0x00	; 0
    491c:	67 e1       	ldi	r22, 0x17	; 23
    491e:	ce 01       	movw	r24, r28
    4920:	05 de       	rcall	.-1014   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4922:	43 e3       	ldi	r20, 0x33	; 51
    4924:	52 e0       	ldi	r21, 0x02	; 2
    4926:	67 e0       	ldi	r22, 0x07	; 7
    4928:	ce 01       	movw	r24, r28
    492a:	00 de       	rcall	.-1024   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    492c:	40 e0       	ldi	r20, 0x00	; 0
    492e:	50 e0       	ldi	r21, 0x00	; 0
    4930:	6b e0       	ldi	r22, 0x0B	; 11
    4932:	ce 01       	movw	r24, r28
    4934:	fb dd       	rcall	.-1034   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4936:	40 e0       	ldi	r20, 0x00	; 0
    4938:	50 e0       	ldi	r21, 0x00	; 0
    493a:	6f e0       	ldi	r22, 0x0F	; 15
    493c:	ce 01       	movw	r24, r28
    493e:	f6 dd       	rcall	.-1044   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4940:	40 e0       	ldi	r20, 0x00	; 0
    4942:	50 e0       	ldi	r21, 0x00	; 0
    4944:	61 e4       	ldi	r22, 0x41	; 65
    4946:	ce 01       	movw	r24, r28
    4948:	f1 dd       	rcall	.-1054   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    494a:	40 e0       	ldi	r20, 0x00	; 0
    494c:	50 e0       	ldi	r21, 0x00	; 0
    494e:	62 e4       	ldi	r22, 0x42	; 66
    4950:	ce 01       	movw	r24, r28
    4952:	ec dd       	rcall	.-1064   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4954:	40 e0       	ldi	r20, 0x00	; 0
    4956:	50 e0       	ldi	r21, 0x00	; 0
    4958:	68 e4       	ldi	r22, 0x48	; 72
    495a:	ce 01       	movw	r24, r28
    495c:	e7 dd       	rcall	.-1074   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    495e:	4f e3       	ldi	r20, 0x3F	; 63
    4960:	51 e0       	ldi	r21, 0x01	; 1
    4962:	69 e4       	ldi	r22, 0x49	; 73
    4964:	ce 01       	movw	r24, r28
    4966:	e2 dd       	rcall	.-1084   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4968:	40 e0       	ldi	r20, 0x00	; 0
    496a:	50 e0       	ldi	r21, 0x00	; 0
    496c:	6a e4       	ldi	r22, 0x4A	; 74
    496e:	ce 01       	movw	r24, r28
    4970:	dd dd       	rcall	.-1094   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4972:	40 e0       	ldi	r20, 0x00	; 0
    4974:	50 e0       	ldi	r21, 0x00	; 0
    4976:	6b e4       	ldi	r22, 0x4B	; 75
    4978:	ce 01       	movw	r24, r28
    497a:	d8 dd       	rcall	.-1104   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    497c:	40 e0       	ldi	r20, 0x00	; 0
    497e:	5f ee       	ldi	r21, 0xEF	; 239
    4980:	64 e4       	ldi	r22, 0x44	; 68
    4982:	ce 01       	movw	r24, r28
    4984:	d3 dd       	rcall	.-1114   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4986:	40 e0       	ldi	r20, 0x00	; 0
    4988:	50 e0       	ldi	r21, 0x00	; 0
    498a:	65 e4       	ldi	r22, 0x45	; 69
    498c:	ce 01       	movw	r24, r28
    498e:	ce dd       	rcall	.-1124   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4990:	4f e3       	ldi	r20, 0x3F	; 63
    4992:	51 e0       	ldi	r21, 0x01	; 1
    4994:	66 e4       	ldi	r22, 0x46	; 70
    4996:	ce 01       	movw	r24, r28
    4998:	c9 dd       	rcall	.-1134   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    499a:	47 e0       	ldi	r20, 0x07	; 7
    499c:	57 e0       	ldi	r21, 0x07	; 7
    499e:	60 e3       	ldi	r22, 0x30	; 48
    49a0:	ce 01       	movw	r24, r28
    49a2:	c4 dd       	rcall	.-1144   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49a4:	44 e0       	ldi	r20, 0x04	; 4
    49a6:	52 e0       	ldi	r21, 0x02	; 2
    49a8:	61 e3       	ldi	r22, 0x31	; 49
    49aa:	ce 01       	movw	r24, r28
    49ac:	bf dd       	rcall	.-1154   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49ae:	44 e0       	ldi	r20, 0x04	; 4
    49b0:	52 e0       	ldi	r21, 0x02	; 2
    49b2:	62 e3       	ldi	r22, 0x32	; 50
    49b4:	ce 01       	movw	r24, r28
    49b6:	ba dd       	rcall	.-1164   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49b8:	42 e0       	ldi	r20, 0x02	; 2
    49ba:	55 e0       	ldi	r21, 0x05	; 5
    49bc:	63 e3       	ldi	r22, 0x33	; 51
    49be:	ce 01       	movw	r24, r28
    49c0:	b5 dd       	rcall	.-1174   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49c2:	47 e0       	ldi	r20, 0x07	; 7
    49c4:	55 e0       	ldi	r21, 0x05	; 5
    49c6:	64 e3       	ldi	r22, 0x34	; 52
    49c8:	ce 01       	movw	r24, r28
    49ca:	b0 dd       	rcall	.-1184   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49cc:	44 e0       	ldi	r20, 0x04	; 4
    49ce:	52 e0       	ldi	r21, 0x02	; 2
    49d0:	65 e3       	ldi	r22, 0x35	; 53
    49d2:	ce 01       	movw	r24, r28
    49d4:	ab dd       	rcall	.-1194   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49d6:	44 e0       	ldi	r20, 0x04	; 4
    49d8:	52 e0       	ldi	r21, 0x02	; 2
    49da:	66 e3       	ldi	r22, 0x36	; 54
    49dc:	ce 01       	movw	r24, r28
    49de:	a6 dd       	rcall	.-1204   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49e0:	42 e0       	ldi	r20, 0x02	; 2
    49e2:	55 e0       	ldi	r21, 0x05	; 5
    49e4:	67 e3       	ldi	r22, 0x37	; 55
    49e6:	ce 01       	movw	r24, r28
    49e8:	a1 dd       	rcall	.-1214   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49ea:	42 e0       	ldi	r20, 0x02	; 2
    49ec:	53 e0       	ldi	r21, 0x03	; 3
    49ee:	6a e3       	ldi	r22, 0x3A	; 58
    49f0:	ce 01       	movw	r24, r28
    49f2:	9c dd       	rcall	.-1224   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49f4:	42 e0       	ldi	r20, 0x02	; 2
    49f6:	53 e0       	ldi	r21, 0x03	; 3
    49f8:	6b e3       	ldi	r22, 0x3B	; 59
    49fa:	ce 01       	movw	r24, r28
    49fc:	97 dd       	rcall	.-1234   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49fe:	40 e0       	ldi	r20, 0x00	; 0
    4a00:	50 e0       	ldi	r21, 0x00	; 0
    4a02:	63 e2       	ldi	r22, 0x23	; 35
    4a04:	ce 01       	movw	r24, r28
    4a06:	92 dd       	rcall	.-1244   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a08:	40 e0       	ldi	r20, 0x00	; 0
    4a0a:	50 e0       	ldi	r21, 0x00	; 0
    4a0c:	64 e2       	ldi	r22, 0x24	; 36
    4a0e:	ce 01       	movw	r24, r28
    4a10:	8d dd       	rcall	.-1254   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a12:	40 e0       	ldi	r20, 0x00	; 0
    4a14:	50 e8       	ldi	r21, 0x80	; 128
    4a16:	65 e2       	ldi	r22, 0x25	; 37
    4a18:	ce 01       	movw	r24, r28
    4a1a:	88 dd       	rcall	.-1264   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a1c:	40 e0       	ldi	r20, 0x00	; 0
    4a1e:	50 e0       	ldi	r21, 0x00	; 0
    4a20:	6f e4       	ldi	r22, 0x4F	; 79
    4a22:	ce 01       	movw	r24, r28
    4a24:	83 dd       	rcall	.-1274   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a26:	40 e0       	ldi	r20, 0x00	; 0
    4a28:	50 e0       	ldi	r21, 0x00	; 0
    4a2a:	6e e4       	ldi	r22, 0x4E	; 78
    4a2c:	0c 94 51 30 	jmp	0x60a2	; 0x60a2 <_ZN4UTFT7InitLCDEh+0x18d6>
    4a30:	40 ef       	ldi	r20, 0xF0	; 240
    4a32:	58 e7       	ldi	r21, 0x78	; 120
    4a34:	65 ee       	ldi	r22, 0xE5	; 229
    4a36:	ce 01       	movw	r24, r28
    4a38:	79 dd       	rcall	.-1294   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a3a:	40 e0       	ldi	r20, 0x00	; 0
    4a3c:	51 e0       	ldi	r21, 0x01	; 1
    4a3e:	61 e0       	ldi	r22, 0x01	; 1
    4a40:	ce 01       	movw	r24, r28
    4a42:	74 dd       	rcall	.-1304   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a44:	40 e0       	ldi	r20, 0x00	; 0
    4a46:	52 e0       	ldi	r21, 0x02	; 2
    4a48:	62 e0       	ldi	r22, 0x02	; 2
    4a4a:	ce 01       	movw	r24, r28
    4a4c:	6f dd       	rcall	.-1314   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a4e:	40 e3       	ldi	r20, 0x30	; 48
    4a50:	50 e1       	ldi	r21, 0x10	; 16
    4a52:	63 e0       	ldi	r22, 0x03	; 3
    4a54:	ce 01       	movw	r24, r28
    4a56:	6a dd       	rcall	.-1324   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a58:	40 e0       	ldi	r20, 0x00	; 0
    4a5a:	50 e0       	ldi	r21, 0x00	; 0
    4a5c:	64 e0       	ldi	r22, 0x04	; 4
    4a5e:	ce 01       	movw	r24, r28
    4a60:	65 dd       	rcall	.-1334   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a62:	47 e0       	ldi	r20, 0x07	; 7
    4a64:	52 e0       	ldi	r21, 0x02	; 2
    4a66:	68 e0       	ldi	r22, 0x08	; 8
    4a68:	ce 01       	movw	r24, r28
    4a6a:	60 dd       	rcall	.-1344   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a6c:	40 e0       	ldi	r20, 0x00	; 0
    4a6e:	50 e0       	ldi	r21, 0x00	; 0
    4a70:	69 e0       	ldi	r22, 0x09	; 9
    4a72:	ce 01       	movw	r24, r28
    4a74:	5b dd       	rcall	.-1354   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a76:	40 e0       	ldi	r20, 0x00	; 0
    4a78:	50 e0       	ldi	r21, 0x00	; 0
    4a7a:	6a e0       	ldi	r22, 0x0A	; 10
    4a7c:	ce 01       	movw	r24, r28
    4a7e:	56 dd       	rcall	.-1364   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a80:	40 e0       	ldi	r20, 0x00	; 0
    4a82:	50 e0       	ldi	r21, 0x00	; 0
    4a84:	6c e0       	ldi	r22, 0x0C	; 12
    4a86:	ce 01       	movw	r24, r28
    4a88:	51 dd       	rcall	.-1374   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a8a:	40 e0       	ldi	r20, 0x00	; 0
    4a8c:	50 e0       	ldi	r21, 0x00	; 0
    4a8e:	6d e0       	ldi	r22, 0x0D	; 13
    4a90:	ce 01       	movw	r24, r28
    4a92:	4c dd       	rcall	.-1384   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a94:	40 e0       	ldi	r20, 0x00	; 0
    4a96:	50 e0       	ldi	r21, 0x00	; 0
    4a98:	6f e0       	ldi	r22, 0x0F	; 15
    4a9a:	ce 01       	movw	r24, r28
    4a9c:	47 dd       	rcall	.-1394   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a9e:	40 e0       	ldi	r20, 0x00	; 0
    4aa0:	50 e0       	ldi	r21, 0x00	; 0
    4aa2:	60 e1       	ldi	r22, 0x10	; 16
    4aa4:	ce 01       	movw	r24, r28
    4aa6:	42 dd       	rcall	.-1404   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4aa8:	47 e0       	ldi	r20, 0x07	; 7
    4aaa:	50 e0       	ldi	r21, 0x00	; 0
    4aac:	61 e1       	ldi	r22, 0x11	; 17
    4aae:	ce 01       	movw	r24, r28
    4ab0:	3d dd       	rcall	.-1414   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ab2:	40 e0       	ldi	r20, 0x00	; 0
    4ab4:	50 e0       	ldi	r21, 0x00	; 0
    4ab6:	62 e1       	ldi	r22, 0x12	; 18
    4ab8:	ce 01       	movw	r24, r28
    4aba:	38 dd       	rcall	.-1424   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4abc:	40 e0       	ldi	r20, 0x00	; 0
    4abe:	50 e0       	ldi	r21, 0x00	; 0
    4ac0:	63 e1       	ldi	r22, 0x13	; 19
    4ac2:	ce 01       	movw	r24, r28
    4ac4:	33 dd       	rcall	.-1434   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ac6:	41 e0       	ldi	r20, 0x01	; 1
    4ac8:	50 e0       	ldi	r21, 0x00	; 0
    4aca:	67 e0       	ldi	r22, 0x07	; 7
    4acc:	ce 01       	movw	r24, r28
    4ace:	2e dd       	rcall	.-1444   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ad0:	68 ec       	ldi	r22, 0xC8	; 200
    4ad2:	70 e0       	ldi	r23, 0x00	; 0
    4ad4:	80 e0       	ldi	r24, 0x00	; 0
    4ad6:	90 e0       	ldi	r25, 0x00	; 0
    4ad8:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4adc:	40 e9       	ldi	r20, 0x90	; 144
    4ade:	56 e1       	ldi	r21, 0x16	; 22
    4ae0:	60 e1       	ldi	r22, 0x10	; 16
    4ae2:	ce 01       	movw	r24, r28
    4ae4:	23 dd       	rcall	.-1466   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ae6:	47 e2       	ldi	r20, 0x27	; 39
    4ae8:	52 e0       	ldi	r21, 0x02	; 2
    4aea:	61 e1       	ldi	r22, 0x11	; 17
    4aec:	ce 01       	movw	r24, r28
    4aee:	1e dd       	rcall	.-1476   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4af0:	62 e3       	ldi	r22, 0x32	; 50
    4af2:	70 e0       	ldi	r23, 0x00	; 0
    4af4:	80 e0       	ldi	r24, 0x00	; 0
    4af6:	90 e0       	ldi	r25, 0x00	; 0
    4af8:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4afc:	4d e0       	ldi	r20, 0x0D	; 13
    4afe:	50 e0       	ldi	r21, 0x00	; 0
    4b00:	62 e1       	ldi	r22, 0x12	; 18
    4b02:	ce 01       	movw	r24, r28
    4b04:	13 dd       	rcall	.-1498   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b06:	62 e3       	ldi	r22, 0x32	; 50
    4b08:	70 e0       	ldi	r23, 0x00	; 0
    4b0a:	80 e0       	ldi	r24, 0x00	; 0
    4b0c:	90 e0       	ldi	r25, 0x00	; 0
    4b0e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4b12:	40 e0       	ldi	r20, 0x00	; 0
    4b14:	52 e1       	ldi	r21, 0x12	; 18
    4b16:	63 e1       	ldi	r22, 0x13	; 19
    4b18:	ce 01       	movw	r24, r28
    4b1a:	08 dd       	rcall	.-1520   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b1c:	4a e0       	ldi	r20, 0x0A	; 10
    4b1e:	50 e0       	ldi	r21, 0x00	; 0
    4b20:	69 e2       	ldi	r22, 0x29	; 41
    4b22:	ce 01       	movw	r24, r28
    4b24:	03 dd       	rcall	.-1530   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b26:	4d e0       	ldi	r20, 0x0D	; 13
    4b28:	50 e0       	ldi	r21, 0x00	; 0
    4b2a:	7d c0       	rjmp	.+250    	; 0x4c26 <_ZN4UTFT7InitLCDEh+0x45a>
    4b2c:	40 ef       	ldi	r20, 0xF0	; 240
    4b2e:	58 e7       	ldi	r21, 0x78	; 120
    4b30:	65 ee       	ldi	r22, 0xE5	; 229
    4b32:	ce 01       	movw	r24, r28
    4b34:	fb dc       	rcall	.-1546   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b36:	40 e0       	ldi	r20, 0x00	; 0
    4b38:	51 e0       	ldi	r21, 0x01	; 1
    4b3a:	61 e0       	ldi	r22, 0x01	; 1
    4b3c:	ce 01       	movw	r24, r28
    4b3e:	f6 dc       	rcall	.-1556   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b40:	40 e0       	ldi	r20, 0x00	; 0
    4b42:	57 e0       	ldi	r21, 0x07	; 7
    4b44:	62 e0       	ldi	r22, 0x02	; 2
    4b46:	ce 01       	movw	r24, r28
    4b48:	f1 dc       	rcall	.-1566   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b4a:	40 e3       	ldi	r20, 0x30	; 48
    4b4c:	50 e1       	ldi	r21, 0x10	; 16
    4b4e:	63 e0       	ldi	r22, 0x03	; 3
    4b50:	ce 01       	movw	r24, r28
    4b52:	ec dc       	rcall	.-1576   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b54:	40 e0       	ldi	r20, 0x00	; 0
    4b56:	50 e0       	ldi	r21, 0x00	; 0
    4b58:	64 e0       	ldi	r22, 0x04	; 4
    4b5a:	ce 01       	movw	r24, r28
    4b5c:	e7 dc       	rcall	.-1586   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b5e:	47 e0       	ldi	r20, 0x07	; 7
    4b60:	52 e0       	ldi	r21, 0x02	; 2
    4b62:	68 e0       	ldi	r22, 0x08	; 8
    4b64:	ce 01       	movw	r24, r28
    4b66:	e2 dc       	rcall	.-1596   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b68:	40 e0       	ldi	r20, 0x00	; 0
    4b6a:	50 e0       	ldi	r21, 0x00	; 0
    4b6c:	69 e0       	ldi	r22, 0x09	; 9
    4b6e:	ce 01       	movw	r24, r28
    4b70:	dd dc       	rcall	.-1606   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b72:	40 e0       	ldi	r20, 0x00	; 0
    4b74:	50 e0       	ldi	r21, 0x00	; 0
    4b76:	6a e0       	ldi	r22, 0x0A	; 10
    4b78:	ce 01       	movw	r24, r28
    4b7a:	d8 dc       	rcall	.-1616   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b7c:	40 e0       	ldi	r20, 0x00	; 0
    4b7e:	50 e0       	ldi	r21, 0x00	; 0
    4b80:	6c e0       	ldi	r22, 0x0C	; 12
    4b82:	ce 01       	movw	r24, r28
    4b84:	d3 dc       	rcall	.-1626   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b86:	40 e0       	ldi	r20, 0x00	; 0
    4b88:	50 e0       	ldi	r21, 0x00	; 0
    4b8a:	6d e0       	ldi	r22, 0x0D	; 13
    4b8c:	ce 01       	movw	r24, r28
    4b8e:	ce dc       	rcall	.-1636   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b90:	40 e0       	ldi	r20, 0x00	; 0
    4b92:	50 e0       	ldi	r21, 0x00	; 0
    4b94:	6f e0       	ldi	r22, 0x0F	; 15
    4b96:	ce 01       	movw	r24, r28
    4b98:	c9 dc       	rcall	.-1646   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b9a:	40 e0       	ldi	r20, 0x00	; 0
    4b9c:	50 e0       	ldi	r21, 0x00	; 0
    4b9e:	60 e1       	ldi	r22, 0x10	; 16
    4ba0:	ce 01       	movw	r24, r28
    4ba2:	c4 dc       	rcall	.-1656   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ba4:	47 e0       	ldi	r20, 0x07	; 7
    4ba6:	50 e0       	ldi	r21, 0x00	; 0
    4ba8:	61 e1       	ldi	r22, 0x11	; 17
    4baa:	ce 01       	movw	r24, r28
    4bac:	bf dc       	rcall	.-1666   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bae:	40 e0       	ldi	r20, 0x00	; 0
    4bb0:	50 e0       	ldi	r21, 0x00	; 0
    4bb2:	62 e1       	ldi	r22, 0x12	; 18
    4bb4:	ce 01       	movw	r24, r28
    4bb6:	ba dc       	rcall	.-1676   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bb8:	40 e0       	ldi	r20, 0x00	; 0
    4bba:	50 e0       	ldi	r21, 0x00	; 0
    4bbc:	63 e1       	ldi	r22, 0x13	; 19
    4bbe:	ce 01       	movw	r24, r28
    4bc0:	b5 dc       	rcall	.-1686   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bc2:	41 e0       	ldi	r20, 0x01	; 1
    4bc4:	50 e0       	ldi	r21, 0x00	; 0
    4bc6:	67 e0       	ldi	r22, 0x07	; 7
    4bc8:	ce 01       	movw	r24, r28
    4bca:	b0 dc       	rcall	.-1696   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bcc:	68 ec       	ldi	r22, 0xC8	; 200
    4bce:	70 e0       	ldi	r23, 0x00	; 0
    4bd0:	80 e0       	ldi	r24, 0x00	; 0
    4bd2:	90 e0       	ldi	r25, 0x00	; 0
    4bd4:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4bd8:	40 e9       	ldi	r20, 0x90	; 144
    4bda:	55 e1       	ldi	r21, 0x15	; 21
    4bdc:	60 e1       	ldi	r22, 0x10	; 16
    4bde:	ce 01       	movw	r24, r28
    4be0:	a5 dc       	rcall	.-1718   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4be2:	47 e2       	ldi	r20, 0x27	; 39
    4be4:	52 e0       	ldi	r21, 0x02	; 2
    4be6:	61 e1       	ldi	r22, 0x11	; 17
    4be8:	ce 01       	movw	r24, r28
    4bea:	a0 dc       	rcall	.-1728   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bec:	62 e3       	ldi	r22, 0x32	; 50
    4bee:	70 e0       	ldi	r23, 0x00	; 0
    4bf0:	80 e0       	ldi	r24, 0x00	; 0
    4bf2:	90 e0       	ldi	r25, 0x00	; 0
    4bf4:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4bf8:	4c e9       	ldi	r20, 0x9C	; 156
    4bfa:	50 e0       	ldi	r21, 0x00	; 0
    4bfc:	62 e1       	ldi	r22, 0x12	; 18
    4bfe:	ce 01       	movw	r24, r28
    4c00:	95 dc       	rcall	.-1750   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c02:	62 e3       	ldi	r22, 0x32	; 50
    4c04:	70 e0       	ldi	r23, 0x00	; 0
    4c06:	80 e0       	ldi	r24, 0x00	; 0
    4c08:	90 e0       	ldi	r25, 0x00	; 0
    4c0a:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4c0e:	40 e0       	ldi	r20, 0x00	; 0
    4c10:	59 e1       	ldi	r21, 0x19	; 25
    4c12:	63 e1       	ldi	r22, 0x13	; 19
    4c14:	ce 01       	movw	r24, r28
    4c16:	8a dc       	rcall	.-1772   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c18:	43 e2       	ldi	r20, 0x23	; 35
    4c1a:	50 e0       	ldi	r21, 0x00	; 0
    4c1c:	69 e2       	ldi	r22, 0x29	; 41
    4c1e:	ce 01       	movw	r24, r28
    4c20:	85 dc       	rcall	.-1782   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c22:	4e e0       	ldi	r20, 0x0E	; 14
    4c24:	50 e0       	ldi	r21, 0x00	; 0
    4c26:	6b e2       	ldi	r22, 0x2B	; 43
    4c28:	ce 01       	movw	r24, r28
    4c2a:	80 dc       	rcall	.-1792   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c2c:	62 e3       	ldi	r22, 0x32	; 50
    4c2e:	70 e0       	ldi	r23, 0x00	; 0
    4c30:	80 e0       	ldi	r24, 0x00	; 0
    4c32:	90 e0       	ldi	r25, 0x00	; 0
    4c34:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4c38:	40 e0       	ldi	r20, 0x00	; 0
    4c3a:	50 e0       	ldi	r21, 0x00	; 0
    4c3c:	60 e2       	ldi	r22, 0x20	; 32
    4c3e:	ce 01       	movw	r24, r28
    4c40:	75 dc       	rcall	.-1814   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c42:	40 e0       	ldi	r20, 0x00	; 0
    4c44:	50 e0       	ldi	r21, 0x00	; 0
    4c46:	61 e2       	ldi	r22, 0x21	; 33
    4c48:	ce 01       	movw	r24, r28
    4c4a:	70 dc       	rcall	.-1824   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c4c:	40 e0       	ldi	r20, 0x00	; 0
    4c4e:	50 e0       	ldi	r21, 0x00	; 0
    4c50:	60 e3       	ldi	r22, 0x30	; 48
    4c52:	ce 01       	movw	r24, r28
    4c54:	6b dc       	rcall	.-1834   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c56:	44 e0       	ldi	r20, 0x04	; 4
    4c58:	54 e0       	ldi	r21, 0x04	; 4
    4c5a:	61 e3       	ldi	r22, 0x31	; 49
    4c5c:	ce 01       	movw	r24, r28
    4c5e:	66 dc       	rcall	.-1844   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c60:	43 e0       	ldi	r20, 0x03	; 3
    4c62:	50 e0       	ldi	r21, 0x00	; 0
    4c64:	62 e3       	ldi	r22, 0x32	; 50
    4c66:	ce 01       	movw	r24, r28
    4c68:	61 dc       	rcall	.-1854   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c6a:	45 e0       	ldi	r20, 0x05	; 5
    4c6c:	54 e0       	ldi	r21, 0x04	; 4
    4c6e:	65 e3       	ldi	r22, 0x35	; 53
    4c70:	ce 01       	movw	r24, r28
    4c72:	5c dc       	rcall	.-1864   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c74:	48 e0       	ldi	r20, 0x08	; 8
    4c76:	58 e0       	ldi	r21, 0x08	; 8
    4c78:	66 e3       	ldi	r22, 0x36	; 54
    4c7a:	ce 01       	movw	r24, r28
    4c7c:	57 dc       	rcall	.-1874   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c7e:	47 e0       	ldi	r20, 0x07	; 7
    4c80:	54 e0       	ldi	r21, 0x04	; 4
    4c82:	67 e3       	ldi	r22, 0x37	; 55
    4c84:	ce 01       	movw	r24, r28
    4c86:	52 dc       	rcall	.-1884   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c88:	43 e0       	ldi	r20, 0x03	; 3
    4c8a:	53 e0       	ldi	r21, 0x03	; 3
    4c8c:	68 e3       	ldi	r22, 0x38	; 56
    4c8e:	ce 01       	movw	r24, r28
    4c90:	4d dc       	rcall	.-1894   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c92:	47 e0       	ldi	r20, 0x07	; 7
    4c94:	57 e0       	ldi	r21, 0x07	; 7
    4c96:	69 e3       	ldi	r22, 0x39	; 57
    4c98:	ce 01       	movw	r24, r28
    4c9a:	48 dc       	rcall	.-1904   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c9c:	44 e0       	ldi	r20, 0x04	; 4
    4c9e:	55 e0       	ldi	r21, 0x05	; 5
    4ca0:	6c e3       	ldi	r22, 0x3C	; 60
    4ca2:	ce 01       	movw	r24, r28
    4ca4:	43 dc       	rcall	.-1914   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ca6:	48 e0       	ldi	r20, 0x08	; 8
    4ca8:	58 e0       	ldi	r21, 0x08	; 8
    4caa:	6d e3       	ldi	r22, 0x3D	; 61
    4cac:	ce 01       	movw	r24, r28
    4cae:	3e dc       	rcall	.-1924   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cb0:	40 e0       	ldi	r20, 0x00	; 0
    4cb2:	50 e0       	ldi	r21, 0x00	; 0
    4cb4:	60 e5       	ldi	r22, 0x50	; 80
    4cb6:	ce 01       	movw	r24, r28
    4cb8:	39 dc       	rcall	.-1934   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cba:	4f ee       	ldi	r20, 0xEF	; 239
    4cbc:	50 e0       	ldi	r21, 0x00	; 0
    4cbe:	61 e5       	ldi	r22, 0x51	; 81
    4cc0:	ce 01       	movw	r24, r28
    4cc2:	34 dc       	rcall	.-1944   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cc4:	40 e0       	ldi	r20, 0x00	; 0
    4cc6:	50 e0       	ldi	r21, 0x00	; 0
    4cc8:	62 e5       	ldi	r22, 0x52	; 82
    4cca:	ce 01       	movw	r24, r28
    4ccc:	2f dc       	rcall	.-1954   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cce:	4f e3       	ldi	r20, 0x3F	; 63
    4cd0:	51 e0       	ldi	r21, 0x01	; 1
    4cd2:	63 e5       	ldi	r22, 0x53	; 83
    4cd4:	ce 01       	movw	r24, r28
    4cd6:	2a dc       	rcall	.-1964   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cd8:	40 e0       	ldi	r20, 0x00	; 0
    4cda:	57 ea       	ldi	r21, 0xA7	; 167
    4cdc:	60 e6       	ldi	r22, 0x60	; 96
    4cde:	ce 01       	movw	r24, r28
    4ce0:	25 dc       	rcall	.-1974   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ce2:	41 e0       	ldi	r20, 0x01	; 1
    4ce4:	50 e0       	ldi	r21, 0x00	; 0
    4ce6:	61 e6       	ldi	r22, 0x61	; 97
    4ce8:	ce 01       	movw	r24, r28
    4cea:	20 dc       	rcall	.-1984   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cec:	40 e0       	ldi	r20, 0x00	; 0
    4cee:	50 e0       	ldi	r21, 0x00	; 0
    4cf0:	6a e6       	ldi	r22, 0x6A	; 106
    4cf2:	ce 01       	movw	r24, r28
    4cf4:	1b dc       	rcall	.-1994   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cf6:	40 e0       	ldi	r20, 0x00	; 0
    4cf8:	50 e0       	ldi	r21, 0x00	; 0
    4cfa:	60 e8       	ldi	r22, 0x80	; 128
    4cfc:	ce 01       	movw	r24, r28
    4cfe:	16 dc       	rcall	.-2004   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d00:	40 e0       	ldi	r20, 0x00	; 0
    4d02:	50 e0       	ldi	r21, 0x00	; 0
    4d04:	61 e8       	ldi	r22, 0x81	; 129
    4d06:	ce 01       	movw	r24, r28
    4d08:	11 dc       	rcall	.-2014   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d0a:	40 e0       	ldi	r20, 0x00	; 0
    4d0c:	50 e0       	ldi	r21, 0x00	; 0
    4d0e:	62 e8       	ldi	r22, 0x82	; 130
    4d10:	ce 01       	movw	r24, r28
    4d12:	0c dc       	rcall	.-2024   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d14:	40 e0       	ldi	r20, 0x00	; 0
    4d16:	50 e0       	ldi	r21, 0x00	; 0
    4d18:	63 e8       	ldi	r22, 0x83	; 131
    4d1a:	ce 01       	movw	r24, r28
    4d1c:	07 dc       	rcall	.-2034   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d1e:	40 e0       	ldi	r20, 0x00	; 0
    4d20:	50 e0       	ldi	r21, 0x00	; 0
    4d22:	64 e8       	ldi	r22, 0x84	; 132
    4d24:	ce 01       	movw	r24, r28
    4d26:	02 dc       	rcall	.-2044   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d28:	40 e0       	ldi	r20, 0x00	; 0
    4d2a:	50 e0       	ldi	r21, 0x00	; 0
    4d2c:	65 e8       	ldi	r22, 0x85	; 133
    4d2e:	ce 01       	movw	r24, r28
    4d30:	fd db       	rcall	.-2054   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d32:	40 e1       	ldi	r20, 0x10	; 16
    4d34:	50 e0       	ldi	r21, 0x00	; 0
    4d36:	60 e9       	ldi	r22, 0x90	; 144
    4d38:	ce 01       	movw	r24, r28
    4d3a:	f8 db       	rcall	.-2064   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d3c:	40 e0       	ldi	r20, 0x00	; 0
    4d3e:	50 e0       	ldi	r21, 0x00	; 0
    4d40:	62 e9       	ldi	r22, 0x92	; 146
    4d42:	ce 01       	movw	r24, r28
    4d44:	f3 db       	rcall	.-2074   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d46:	43 e3       	ldi	r20, 0x33	; 51
    4d48:	51 e0       	ldi	r21, 0x01	; 1
    4d4a:	67 e0       	ldi	r22, 0x07	; 7
    4d4c:	ce 01       	movw	r24, r28
    4d4e:	ee db       	rcall	.-2084   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d50:	0c 94 b9 36 	jmp	0x6d72	; 0x6d72 <_ZN4UTFT7InitLCDEh+0x25a6>
    4d54:	44 e8       	ldi	r20, 0x84	; 132
    4d56:	50 e0       	ldi	r21, 0x00	; 0
    4d58:	66 e2       	ldi	r22, 0x26	; 38
    4d5a:	ce 01       	movw	r24, r28
    4d5c:	e7 db       	rcall	.-2098   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d5e:	68 e2       	ldi	r22, 0x28	; 40
    4d60:	70 e0       	ldi	r23, 0x00	; 0
    4d62:	80 e0       	ldi	r24, 0x00	; 0
    4d64:	90 e0       	ldi	r25, 0x00	; 0
    4d66:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4d6a:	48 eb       	ldi	r20, 0xB8	; 184
    4d6c:	50 e0       	ldi	r21, 0x00	; 0
    4d6e:	66 e2       	ldi	r22, 0x26	; 38
    4d70:	ce 01       	movw	r24, r28
    4d72:	dc db       	rcall	.-2120   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d74:	68 e2       	ldi	r22, 0x28	; 40
    4d76:	70 e0       	ldi	r23, 0x00	; 0
    4d78:	80 e0       	ldi	r24, 0x00	; 0
    4d7a:	90 e0       	ldi	r25, 0x00	; 0
    4d7c:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4d80:	4c eb       	ldi	r20, 0xBC	; 188
    4d82:	50 e0       	ldi	r21, 0x00	; 0
    4d84:	66 e2       	ldi	r22, 0x26	; 38
    4d86:	ce 01       	movw	r24, r28
    4d88:	d1 db       	rcall	.-2142   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d8a:	64 e1       	ldi	r22, 0x14	; 20
    4d8c:	70 e0       	ldi	r23, 0x00	; 0
    4d8e:	80 e0       	ldi	r24, 0x00	; 0
    4d90:	90 e0       	ldi	r25, 0x00	; 0
    4d92:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4d96:	40 e0       	ldi	r20, 0x00	; 0
    4d98:	50 e0       	ldi	r21, 0x00	; 0
    4d9a:	60 e6       	ldi	r22, 0x60	; 96
    4d9c:	ce 01       	movw	r24, r28
    4d9e:	c6 db       	rcall	.-2164   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4da0:	46 e0       	ldi	r20, 0x06	; 6
    4da2:	50 e0       	ldi	r21, 0x00	; 0
    4da4:	61 e6       	ldi	r22, 0x61	; 97
    4da6:	ce 01       	movw	r24, r28
    4da8:	c1 db       	rcall	.-2174   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4daa:	40 e0       	ldi	r20, 0x00	; 0
    4dac:	50 e0       	ldi	r21, 0x00	; 0
    4dae:	62 e6       	ldi	r22, 0x62	; 98
    4db0:	ce 01       	movw	r24, r28
    4db2:	bc db       	rcall	.-2184   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4db4:	48 ec       	ldi	r20, 0xC8	; 200
    4db6:	50 e0       	ldi	r21, 0x00	; 0
    4db8:	63 e6       	ldi	r22, 0x63	; 99
    4dba:	ce 01       	movw	r24, r28
    4dbc:	b7 db       	rcall	.-2194   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dbe:	64 e1       	ldi	r22, 0x14	; 20
    4dc0:	70 e0       	ldi	r23, 0x00	; 0
    4dc2:	80 e0       	ldi	r24, 0x00	; 0
    4dc4:	90 e0       	ldi	r25, 0x00	; 0
    4dc6:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4dca:	40 e7       	ldi	r20, 0x70	; 112
    4dcc:	50 e0       	ldi	r21, 0x00	; 0
    4dce:	63 e7       	ldi	r22, 0x73	; 115
    4dd0:	ce 01       	movw	r24, r28
    4dd2:	ac db       	rcall	.-2216   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dd4:	40 e0       	ldi	r20, 0x00	; 0
    4dd6:	50 e0       	ldi	r21, 0x00	; 0
    4dd8:	60 e4       	ldi	r22, 0x40	; 64
    4dda:	ce 01       	movw	r24, r28
    4ddc:	a7 db       	rcall	.-2226   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dde:	40 e4       	ldi	r20, 0x40	; 64
    4de0:	50 e0       	ldi	r21, 0x00	; 0
    4de2:	61 e4       	ldi	r22, 0x41	; 65
    4de4:	ce 01       	movw	r24, r28
    4de6:	a2 db       	rcall	.-2236   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4de8:	45 e4       	ldi	r20, 0x45	; 69
    4dea:	50 e0       	ldi	r21, 0x00	; 0
    4dec:	62 e4       	ldi	r22, 0x42	; 66
    4dee:	ce 01       	movw	r24, r28
    4df0:	9d db       	rcall	.-2246   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4df2:	41 e0       	ldi	r20, 0x01	; 1
    4df4:	50 e0       	ldi	r21, 0x00	; 0
    4df6:	63 e4       	ldi	r22, 0x43	; 67
    4df8:	ce 01       	movw	r24, r28
    4dfa:	98 db       	rcall	.-2256   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dfc:	40 e6       	ldi	r20, 0x60	; 96
    4dfe:	50 e0       	ldi	r21, 0x00	; 0
    4e00:	64 e4       	ldi	r22, 0x44	; 68
    4e02:	ce 01       	movw	r24, r28
    4e04:	93 db       	rcall	.-2266   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e06:	45 e0       	ldi	r20, 0x05	; 5
    4e08:	50 e0       	ldi	r21, 0x00	; 0
    4e0a:	65 e4       	ldi	r22, 0x45	; 69
    4e0c:	ce 01       	movw	r24, r28
    4e0e:	8e db       	rcall	.-2276   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e10:	4c e0       	ldi	r20, 0x0C	; 12
    4e12:	50 e0       	ldi	r21, 0x00	; 0
    4e14:	66 e4       	ldi	r22, 0x46	; 70
    4e16:	ce 01       	movw	r24, r28
    4e18:	89 db       	rcall	.-2286   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e1a:	41 ed       	ldi	r20, 0xD1	; 209
    4e1c:	50 e0       	ldi	r21, 0x00	; 0
    4e1e:	67 e4       	ldi	r22, 0x47	; 71
    4e20:	ce 01       	movw	r24, r28
    4e22:	84 db       	rcall	.-2296   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e24:	45 e0       	ldi	r20, 0x05	; 5
    4e26:	50 e0       	ldi	r21, 0x00	; 0
    4e28:	68 e4       	ldi	r22, 0x48	; 72
    4e2a:	ce 01       	movw	r24, r28
    4e2c:	7f db       	rcall	.-2306   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e2e:	45 e7       	ldi	r20, 0x75	; 117
    4e30:	50 e0       	ldi	r21, 0x00	; 0
    4e32:	60 e5       	ldi	r22, 0x50	; 80
    4e34:	ce 01       	movw	r24, r28
    4e36:	7a db       	rcall	.-2316   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e38:	41 e0       	ldi	r20, 0x01	; 1
    4e3a:	50 e0       	ldi	r21, 0x00	; 0
    4e3c:	61 e5       	ldi	r22, 0x51	; 81
    4e3e:	ce 01       	movw	r24, r28
    4e40:	75 db       	rcall	.-2326   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e42:	47 e6       	ldi	r20, 0x67	; 103
    4e44:	50 e0       	ldi	r21, 0x00	; 0
    4e46:	62 e5       	ldi	r22, 0x52	; 82
    4e48:	ce 01       	movw	r24, r28
    4e4a:	70 db       	rcall	.-2336   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e4c:	44 e1       	ldi	r20, 0x14	; 20
    4e4e:	50 e0       	ldi	r21, 0x00	; 0
    4e50:	63 e5       	ldi	r22, 0x53	; 83
    4e52:	ce 01       	movw	r24, r28
    4e54:	6b db       	rcall	.-2346   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e56:	42 ef       	ldi	r20, 0xF2	; 242
    4e58:	50 e0       	ldi	r21, 0x00	; 0
    4e5a:	64 e5       	ldi	r22, 0x54	; 84
    4e5c:	ce 01       	movw	r24, r28
    4e5e:	66 db       	rcall	.-2356   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e60:	47 e0       	ldi	r20, 0x07	; 7
    4e62:	50 e0       	ldi	r21, 0x00	; 0
    4e64:	65 e5       	ldi	r22, 0x55	; 85
    4e66:	ce 01       	movw	r24, r28
    4e68:	61 db       	rcall	.-2366   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e6a:	43 e0       	ldi	r20, 0x03	; 3
    4e6c:	50 e0       	ldi	r21, 0x00	; 0
    4e6e:	66 e5       	ldi	r22, 0x56	; 86
    4e70:	ce 01       	movw	r24, r28
    4e72:	5c db       	rcall	.-2376   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e74:	49 e4       	ldi	r20, 0x49	; 73
    4e76:	50 e0       	ldi	r21, 0x00	; 0
    4e78:	67 e5       	ldi	r22, 0x57	; 87
    4e7a:	ce 01       	movw	r24, r28
    4e7c:	57 db       	rcall	.-2386   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e7e:	64 e1       	ldi	r22, 0x14	; 20
    4e80:	70 e0       	ldi	r23, 0x00	; 0
    4e82:	80 e0       	ldi	r24, 0x00	; 0
    4e84:	90 e0       	ldi	r25, 0x00	; 0
    4e86:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4e8a:	43 e0       	ldi	r20, 0x03	; 3
    4e8c:	50 e0       	ldi	r21, 0x00	; 0
    4e8e:	6f e1       	ldi	r22, 0x1F	; 31
    4e90:	ce 01       	movw	r24, r28
    4e92:	4c db       	rcall	.-2408   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e94:	40 e0       	ldi	r20, 0x00	; 0
    4e96:	50 e0       	ldi	r21, 0x00	; 0
    4e98:	60 e2       	ldi	r22, 0x20	; 32
    4e9a:	ce 01       	movw	r24, r28
    4e9c:	47 db       	rcall	.-2418   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e9e:	44 e2       	ldi	r20, 0x24	; 36
    4ea0:	50 e0       	ldi	r21, 0x00	; 0
    4ea2:	64 e2       	ldi	r22, 0x24	; 36
    4ea4:	ce 01       	movw	r24, r28
    4ea6:	42 db       	rcall	.-2428   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ea8:	44 e3       	ldi	r20, 0x34	; 52
    4eaa:	50 e0       	ldi	r21, 0x00	; 0
    4eac:	65 e2       	ldi	r22, 0x25	; 37
    4eae:	ce 01       	movw	r24, r28
    4eb0:	3d db       	rcall	.-2438   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4eb2:	4f e2       	ldi	r20, 0x2F	; 47
    4eb4:	50 e0       	ldi	r21, 0x00	; 0
    4eb6:	63 e2       	ldi	r22, 0x23	; 35
    4eb8:	ce 01       	movw	r24, r28
    4eba:	38 db       	rcall	.-2448   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ebc:	64 e1       	ldi	r22, 0x14	; 20
    4ebe:	70 e0       	ldi	r23, 0x00	; 0
    4ec0:	80 e0       	ldi	r24, 0x00	; 0
    4ec2:	90 e0       	ldi	r25, 0x00	; 0
    4ec4:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4ec8:	44 e4       	ldi	r20, 0x44	; 68
    4eca:	50 e0       	ldi	r21, 0x00	; 0
    4ecc:	68 e1       	ldi	r22, 0x18	; 24
    4ece:	ce 01       	movw	r24, r28
    4ed0:	2d db       	rcall	.-2470   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ed2:	41 e0       	ldi	r20, 0x01	; 1
    4ed4:	50 e0       	ldi	r21, 0x00	; 0
    4ed6:	61 e2       	ldi	r22, 0x21	; 33
    4ed8:	ce 01       	movw	r24, r28
    4eda:	28 db       	rcall	.-2480   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4edc:	40 e0       	ldi	r20, 0x00	; 0
    4ede:	50 e0       	ldi	r21, 0x00	; 0
    4ee0:	61 e0       	ldi	r22, 0x01	; 1
    4ee2:	ce 01       	movw	r24, r28
    4ee4:	23 db       	rcall	.-2490   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ee6:	43 e0       	ldi	r20, 0x03	; 3
    4ee8:	50 e0       	ldi	r21, 0x00	; 0
    4eea:	6c e1       	ldi	r22, 0x1C	; 28
    4eec:	ce 01       	movw	r24, r28
    4eee:	1e db       	rcall	.-2500   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ef0:	46 e0       	ldi	r20, 0x06	; 6
    4ef2:	50 e0       	ldi	r21, 0x00	; 0
    4ef4:	69 e1       	ldi	r22, 0x19	; 25
    4ef6:	ce 01       	movw	r24, r28
    4ef8:	19 db       	rcall	.-2510   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4efa:	64 e1       	ldi	r22, 0x14	; 20
    4efc:	70 e0       	ldi	r23, 0x00	; 0
    4efe:	80 e0       	ldi	r24, 0x00	; 0
    4f00:	90 e0       	ldi	r25, 0x00	; 0
    4f02:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4f06:	44 e8       	ldi	r20, 0x84	; 132
    4f08:	50 e0       	ldi	r21, 0x00	; 0
    4f0a:	66 e2       	ldi	r22, 0x26	; 38
    4f0c:	ce 01       	movw	r24, r28
    4f0e:	0e db       	rcall	.-2532   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f10:	68 e2       	ldi	r22, 0x28	; 40
    4f12:	70 e0       	ldi	r23, 0x00	; 0
    4f14:	80 e0       	ldi	r24, 0x00	; 0
    4f16:	90 e0       	ldi	r25, 0x00	; 0
    4f18:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4f1c:	48 eb       	ldi	r20, 0xB8	; 184
    4f1e:	50 e0       	ldi	r21, 0x00	; 0
    4f20:	66 e2       	ldi	r22, 0x26	; 38
    4f22:	ce 01       	movw	r24, r28
    4f24:	03 db       	rcall	.-2554   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f26:	68 e2       	ldi	r22, 0x28	; 40
    4f28:	70 e0       	ldi	r23, 0x00	; 0
    4f2a:	80 e0       	ldi	r24, 0x00	; 0
    4f2c:	90 e0       	ldi	r25, 0x00	; 0
    4f2e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4f32:	4c eb       	ldi	r20, 0xBC	; 188
    4f34:	50 e0       	ldi	r21, 0x00	; 0
    4f36:	66 e2       	ldi	r22, 0x26	; 38
    4f38:	ce 01       	movw	r24, r28
    4f3a:	f8 da       	rcall	.-2576   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f3c:	64 e1       	ldi	r22, 0x14	; 20
    4f3e:	70 e0       	ldi	r23, 0x00	; 0
    4f40:	80 e0       	ldi	r24, 0x00	; 0
    4f42:	90 e0       	ldi	r25, 0x00	; 0
    4f44:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4f48:	40 e0       	ldi	r20, 0x00	; 0
    4f4a:	50 e0       	ldi	r21, 0x00	; 0
    4f4c:	62 e0       	ldi	r22, 0x02	; 2
    4f4e:	ce 01       	movw	r24, r28
    4f50:	ed da       	rcall	.-2598   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f52:	40 e0       	ldi	r20, 0x00	; 0
    4f54:	50 e0       	ldi	r21, 0x00	; 0
    4f56:	63 e0       	ldi	r22, 0x03	; 3
    4f58:	ce 01       	movw	r24, r28
    4f5a:	e8 da       	rcall	.-2608   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f5c:	40 e0       	ldi	r20, 0x00	; 0
    4f5e:	50 e0       	ldi	r21, 0x00	; 0
    4f60:	64 e0       	ldi	r22, 0x04	; 4
    4f62:	ce 01       	movw	r24, r28
    4f64:	e3 da       	rcall	.-2618   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f66:	4f ea       	ldi	r20, 0xAF	; 175
    4f68:	50 e0       	ldi	r21, 0x00	; 0
    4f6a:	65 e0       	ldi	r22, 0x05	; 5
    4f6c:	ce 01       	movw	r24, r28
    4f6e:	de da       	rcall	.-2628   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f70:	40 e0       	ldi	r20, 0x00	; 0
    4f72:	50 e0       	ldi	r21, 0x00	; 0
    4f74:	66 e0       	ldi	r22, 0x06	; 6
    4f76:	ce 01       	movw	r24, r28
    4f78:	d9 da       	rcall	.-2638   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f7a:	40 e0       	ldi	r20, 0x00	; 0
    4f7c:	50 e0       	ldi	r21, 0x00	; 0
    4f7e:	67 e0       	ldi	r22, 0x07	; 7
    4f80:	ce 01       	movw	r24, r28
    4f82:	d4 da       	rcall	.-2648   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f84:	40 e0       	ldi	r20, 0x00	; 0
    4f86:	50 e0       	ldi	r21, 0x00	; 0
    4f88:	68 e0       	ldi	r22, 0x08	; 8
    4f8a:	ce 01       	movw	r24, r28
    4f8c:	cf da       	rcall	.-2658   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f8e:	4b ed       	ldi	r20, 0xDB	; 219
    4f90:	50 e0       	ldi	r21, 0x00	; 0
    4f92:	69 e0       	ldi	r22, 0x09	; 9
    4f94:	ce 01       	movw	r24, r28
    4f96:	ca da       	rcall	.-2668   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4f98:	64 e1       	ldi	r22, 0x14	; 20
    4f9a:	70 e0       	ldi	r23, 0x00	; 0
    4f9c:	80 e0       	ldi	r24, 0x00	; 0
    4f9e:	90 e0       	ldi	r25, 0x00	; 0
    4fa0:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4fa4:	48 e0       	ldi	r20, 0x08	; 8
    4fa6:	50 e0       	ldi	r21, 0x00	; 0
    4fa8:	66 e1       	ldi	r22, 0x16	; 22
    4faa:	ce 01       	movw	r24, r28
    4fac:	bf da       	rcall	.-2690   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4fae:	45 e0       	ldi	r20, 0x05	; 5
    4fb0:	50 e0       	ldi	r21, 0x00	; 0
    4fb2:	67 e1       	ldi	r22, 0x17	; 23
    4fb4:	ce 01       	movw	r24, r28
    4fb6:	ba da       	rcall	.-2700   	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4fb8:	61 e2       	ldi	r22, 0x21	; 33
    4fba:	ce 01       	movw	r24, r28
    4fbc:	63 da       	rcall	.-2874   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    4fbe:	62 e2       	ldi	r22, 0x22	; 34
    4fc0:	ce 01       	movw	r24, r28
    4fc2:	60 da       	rcall	.-2880   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    4fc4:	0c 94 b9 36 	jmp	0x6d72	; 0x6d72 <_ZN4UTFT7InitLCDEh+0x25a6>
    4fc8:	61 e1       	ldi	r22, 0x11	; 17
    4fca:	ce 01       	movw	r24, r28
    4fcc:	5b da       	rcall	.-2890   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    4fce:	6c e0       	ldi	r22, 0x0C	; 12
    4fd0:	70 e0       	ldi	r23, 0x00	; 0
    4fd2:	80 e0       	ldi	r24, 0x00	; 0
    4fd4:	90 e0       	ldi	r25, 0x00	; 0
    4fd6:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    4fda:	61 eb       	ldi	r22, 0xB1	; 177
    4fdc:	ce 01       	movw	r24, r28
    4fde:	52 da       	rcall	.-2908   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    4fe0:	61 e0       	ldi	r22, 0x01	; 1
    4fe2:	ce 01       	movw	r24, r28
    4fe4:	8b da       	rcall	.-2794   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    4fe6:	6c e2       	ldi	r22, 0x2C	; 44
    4fe8:	ce 01       	movw	r24, r28
    4fea:	88 da       	rcall	.-2800   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    4fec:	6d e2       	ldi	r22, 0x2D	; 45
    4fee:	ce 01       	movw	r24, r28
    4ff0:	85 da       	rcall	.-2806   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    4ff2:	62 eb       	ldi	r22, 0xB2	; 178
    4ff4:	ce 01       	movw	r24, r28
    4ff6:	46 da       	rcall	.-2932   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    4ff8:	61 e0       	ldi	r22, 0x01	; 1
    4ffa:	ce 01       	movw	r24, r28
    4ffc:	7f da       	rcall	.-2818   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    4ffe:	6c e2       	ldi	r22, 0x2C	; 44
    5000:	ce 01       	movw	r24, r28
    5002:	7c da       	rcall	.-2824   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5004:	6d e2       	ldi	r22, 0x2D	; 45
    5006:	ce 01       	movw	r24, r28
    5008:	79 da       	rcall	.-2830   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    500a:	63 eb       	ldi	r22, 0xB3	; 179
    500c:	ce 01       	movw	r24, r28
    500e:	3a da       	rcall	.-2956   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5010:	61 e0       	ldi	r22, 0x01	; 1
    5012:	ce 01       	movw	r24, r28
    5014:	73 da       	rcall	.-2842   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5016:	6c e2       	ldi	r22, 0x2C	; 44
    5018:	ce 01       	movw	r24, r28
    501a:	70 da       	rcall	.-2848   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    501c:	6d e2       	ldi	r22, 0x2D	; 45
    501e:	ce 01       	movw	r24, r28
    5020:	6d da       	rcall	.-2854   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5022:	61 e0       	ldi	r22, 0x01	; 1
    5024:	ce 01       	movw	r24, r28
    5026:	6a da       	rcall	.-2860   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5028:	6c e2       	ldi	r22, 0x2C	; 44
    502a:	ce 01       	movw	r24, r28
    502c:	67 da       	rcall	.-2866   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    502e:	6d e2       	ldi	r22, 0x2D	; 45
    5030:	ce 01       	movw	r24, r28
    5032:	64 da       	rcall	.-2872   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5034:	64 eb       	ldi	r22, 0xB4	; 180
    5036:	ce 01       	movw	r24, r28
    5038:	25 da       	rcall	.-2998   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    503a:	67 e0       	ldi	r22, 0x07	; 7
    503c:	ce 01       	movw	r24, r28
    503e:	5e da       	rcall	.-2884   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5040:	60 ec       	ldi	r22, 0xC0	; 192
    5042:	ce 01       	movw	r24, r28
    5044:	1f da       	rcall	.-3010   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5046:	62 ea       	ldi	r22, 0xA2	; 162
    5048:	ce 01       	movw	r24, r28
    504a:	58 da       	rcall	.-2896   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    504c:	62 e0       	ldi	r22, 0x02	; 2
    504e:	ce 01       	movw	r24, r28
    5050:	55 da       	rcall	.-2902   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5052:	64 e8       	ldi	r22, 0x84	; 132
    5054:	ce 01       	movw	r24, r28
    5056:	52 da       	rcall	.-2908   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5058:	61 ec       	ldi	r22, 0xC1	; 193
    505a:	ce 01       	movw	r24, r28
    505c:	13 da       	rcall	.-3034   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    505e:	65 ec       	ldi	r22, 0xC5	; 197
    5060:	ce 01       	movw	r24, r28
    5062:	4c da       	rcall	.-2920   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5064:	62 ec       	ldi	r22, 0xC2	; 194
    5066:	ce 01       	movw	r24, r28
    5068:	0d da       	rcall	.-3046   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    506a:	6a e0       	ldi	r22, 0x0A	; 10
    506c:	ce 01       	movw	r24, r28
    506e:	46 da       	rcall	.-2932   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5070:	60 e0       	ldi	r22, 0x00	; 0
    5072:	ce 01       	movw	r24, r28
    5074:	43 da       	rcall	.-2938   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5076:	63 ec       	ldi	r22, 0xC3	; 195
    5078:	ce 01       	movw	r24, r28
    507a:	04 da       	rcall	.-3064   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    507c:	6a e8       	ldi	r22, 0x8A	; 138
    507e:	ce 01       	movw	r24, r28
    5080:	3d da       	rcall	.-2950   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5082:	6a e2       	ldi	r22, 0x2A	; 42
    5084:	ce 01       	movw	r24, r28
    5086:	3a da       	rcall	.-2956   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5088:	64 ec       	ldi	r22, 0xC4	; 196
    508a:	ce 01       	movw	r24, r28
    508c:	fb d9       	rcall	.-3082   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    508e:	6a e8       	ldi	r22, 0x8A	; 138
    5090:	ce 01       	movw	r24, r28
    5092:	34 da       	rcall	.-2968   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5094:	6e ee       	ldi	r22, 0xEE	; 238
    5096:	ce 01       	movw	r24, r28
    5098:	31 da       	rcall	.-2974   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    509a:	65 ec       	ldi	r22, 0xC5	; 197
    509c:	ce 01       	movw	r24, r28
    509e:	f2 d9       	rcall	.-3100   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    50a0:	6e e0       	ldi	r22, 0x0E	; 14
    50a2:	ce 01       	movw	r24, r28
    50a4:	2b da       	rcall	.-2986   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    50a6:	66 e3       	ldi	r22, 0x36	; 54
    50a8:	ce 01       	movw	r24, r28
    50aa:	ec d9       	rcall	.-3112   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    50ac:	68 ec       	ldi	r22, 0xC8	; 200
    50ae:	73 c0       	rjmp	.+230    	; 0x5196 <_ZN4UTFT7InitLCDEh+0x9ca>
    50b0:	61 e1       	ldi	r22, 0x11	; 17
    50b2:	ce 01       	movw	r24, r28
    50b4:	e7 d9       	rcall	.-3122   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    50b6:	6c e0       	ldi	r22, 0x0C	; 12
    50b8:	70 e0       	ldi	r23, 0x00	; 0
    50ba:	80 e0       	ldi	r24, 0x00	; 0
    50bc:	90 e0       	ldi	r25, 0x00	; 0
    50be:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    50c2:	61 eb       	ldi	r22, 0xB1	; 177
    50c4:	ce 01       	movw	r24, r28
    50c6:	de d9       	rcall	.-3140   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    50c8:	61 e0       	ldi	r22, 0x01	; 1
    50ca:	ce 01       	movw	r24, r28
    50cc:	17 da       	rcall	.-3026   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    50ce:	6c e2       	ldi	r22, 0x2C	; 44
    50d0:	ce 01       	movw	r24, r28
    50d2:	14 da       	rcall	.-3032   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    50d4:	6d e2       	ldi	r22, 0x2D	; 45
    50d6:	ce 01       	movw	r24, r28
    50d8:	11 da       	rcall	.-3038   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    50da:	62 eb       	ldi	r22, 0xB2	; 178
    50dc:	ce 01       	movw	r24, r28
    50de:	d2 d9       	rcall	.-3164   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    50e0:	61 e0       	ldi	r22, 0x01	; 1
    50e2:	ce 01       	movw	r24, r28
    50e4:	0b da       	rcall	.-3050   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    50e6:	6c e2       	ldi	r22, 0x2C	; 44
    50e8:	ce 01       	movw	r24, r28
    50ea:	08 da       	rcall	.-3056   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    50ec:	6d e2       	ldi	r22, 0x2D	; 45
    50ee:	ce 01       	movw	r24, r28
    50f0:	05 da       	rcall	.-3062   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    50f2:	63 eb       	ldi	r22, 0xB3	; 179
    50f4:	ce 01       	movw	r24, r28
    50f6:	c6 d9       	rcall	.-3188   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    50f8:	61 e0       	ldi	r22, 0x01	; 1
    50fa:	ce 01       	movw	r24, r28
    50fc:	ff d9       	rcall	.-3074   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    50fe:	6c e2       	ldi	r22, 0x2C	; 44
    5100:	ce 01       	movw	r24, r28
    5102:	fc d9       	rcall	.-3080   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5104:	6d e2       	ldi	r22, 0x2D	; 45
    5106:	ce 01       	movw	r24, r28
    5108:	f9 d9       	rcall	.-3086   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    510a:	61 e0       	ldi	r22, 0x01	; 1
    510c:	ce 01       	movw	r24, r28
    510e:	f6 d9       	rcall	.-3092   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5110:	6c e2       	ldi	r22, 0x2C	; 44
    5112:	ce 01       	movw	r24, r28
    5114:	f3 d9       	rcall	.-3098   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5116:	6d e2       	ldi	r22, 0x2D	; 45
    5118:	ce 01       	movw	r24, r28
    511a:	f0 d9       	rcall	.-3104   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    511c:	64 eb       	ldi	r22, 0xB4	; 180
    511e:	ce 01       	movw	r24, r28
    5120:	b1 d9       	rcall	.-3230   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5122:	67 e0       	ldi	r22, 0x07	; 7
    5124:	ce 01       	movw	r24, r28
    5126:	ea d9       	rcall	.-3116   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5128:	60 ec       	ldi	r22, 0xC0	; 192
    512a:	ce 01       	movw	r24, r28
    512c:	ab d9       	rcall	.-3242   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    512e:	62 ea       	ldi	r22, 0xA2	; 162
    5130:	ce 01       	movw	r24, r28
    5132:	e4 d9       	rcall	.-3128   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5134:	62 e0       	ldi	r22, 0x02	; 2
    5136:	ce 01       	movw	r24, r28
    5138:	e1 d9       	rcall	.-3134   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    513a:	64 e8       	ldi	r22, 0x84	; 132
    513c:	ce 01       	movw	r24, r28
    513e:	de d9       	rcall	.-3140   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5140:	61 ec       	ldi	r22, 0xC1	; 193
    5142:	ce 01       	movw	r24, r28
    5144:	9f d9       	rcall	.-3266   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5146:	65 ec       	ldi	r22, 0xC5	; 197
    5148:	ce 01       	movw	r24, r28
    514a:	d8 d9       	rcall	.-3152   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    514c:	62 ec       	ldi	r22, 0xC2	; 194
    514e:	ce 01       	movw	r24, r28
    5150:	99 d9       	rcall	.-3278   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5152:	6a e0       	ldi	r22, 0x0A	; 10
    5154:	ce 01       	movw	r24, r28
    5156:	d2 d9       	rcall	.-3164   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5158:	60 e0       	ldi	r22, 0x00	; 0
    515a:	ce 01       	movw	r24, r28
    515c:	cf d9       	rcall	.-3170   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    515e:	63 ec       	ldi	r22, 0xC3	; 195
    5160:	ce 01       	movw	r24, r28
    5162:	90 d9       	rcall	.-3296   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5164:	6a e8       	ldi	r22, 0x8A	; 138
    5166:	ce 01       	movw	r24, r28
    5168:	c9 d9       	rcall	.-3182   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    516a:	6a e2       	ldi	r22, 0x2A	; 42
    516c:	ce 01       	movw	r24, r28
    516e:	c6 d9       	rcall	.-3188   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5170:	64 ec       	ldi	r22, 0xC4	; 196
    5172:	ce 01       	movw	r24, r28
    5174:	87 d9       	rcall	.-3314   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5176:	6a e8       	ldi	r22, 0x8A	; 138
    5178:	ce 01       	movw	r24, r28
    517a:	c0 d9       	rcall	.-3200   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    517c:	6e ee       	ldi	r22, 0xEE	; 238
    517e:	ce 01       	movw	r24, r28
    5180:	bd d9       	rcall	.-3206   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5182:	65 ec       	ldi	r22, 0xC5	; 197
    5184:	ce 01       	movw	r24, r28
    5186:	7e d9       	rcall	.-3332   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5188:	6e e0       	ldi	r22, 0x0E	; 14
    518a:	ce 01       	movw	r24, r28
    518c:	b7 d9       	rcall	.-3218   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    518e:	66 e3       	ldi	r22, 0x36	; 54
    5190:	ce 01       	movw	r24, r28
    5192:	78 d9       	rcall	.-3344   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5194:	60 ec       	ldi	r22, 0xC0	; 192
    5196:	ce 01       	movw	r24, r28
    5198:	b1 d9       	rcall	.-3230   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    519a:	60 ee       	ldi	r22, 0xE0	; 224
    519c:	ce 01       	movw	r24, r28
    519e:	72 d9       	rcall	.-3356   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    51a0:	6f e0       	ldi	r22, 0x0F	; 15
    51a2:	ce 01       	movw	r24, r28
    51a4:	ab d9       	rcall	.-3242   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51a6:	6a e1       	ldi	r22, 0x1A	; 26
    51a8:	ce 01       	movw	r24, r28
    51aa:	a8 d9       	rcall	.-3248   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51ac:	6f e0       	ldi	r22, 0x0F	; 15
    51ae:	ce 01       	movw	r24, r28
    51b0:	a5 d9       	rcall	.-3254   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51b2:	68 e1       	ldi	r22, 0x18	; 24
    51b4:	ce 01       	movw	r24, r28
    51b6:	a2 d9       	rcall	.-3260   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51b8:	6f e2       	ldi	r22, 0x2F	; 47
    51ba:	ce 01       	movw	r24, r28
    51bc:	9f d9       	rcall	.-3266   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51be:	68 e2       	ldi	r22, 0x28	; 40
    51c0:	ce 01       	movw	r24, r28
    51c2:	9c d9       	rcall	.-3272   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51c4:	60 e2       	ldi	r22, 0x20	; 32
    51c6:	ce 01       	movw	r24, r28
    51c8:	99 d9       	rcall	.-3278   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51ca:	62 e2       	ldi	r22, 0x22	; 34
    51cc:	ce 01       	movw	r24, r28
    51ce:	96 d9       	rcall	.-3284   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51d0:	6f e1       	ldi	r22, 0x1F	; 31
    51d2:	ce 01       	movw	r24, r28
    51d4:	93 d9       	rcall	.-3290   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51d6:	6b e1       	ldi	r22, 0x1B	; 27
    51d8:	ce 01       	movw	r24, r28
    51da:	90 d9       	rcall	.-3296   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51dc:	63 e2       	ldi	r22, 0x23	; 35
    51de:	ce 01       	movw	r24, r28
    51e0:	8d d9       	rcall	.-3302   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51e2:	67 e3       	ldi	r22, 0x37	; 55
    51e4:	ce 01       	movw	r24, r28
    51e6:	8a d9       	rcall	.-3308   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51e8:	60 e0       	ldi	r22, 0x00	; 0
    51ea:	ce 01       	movw	r24, r28
    51ec:	87 d9       	rcall	.-3314   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51ee:	67 e0       	ldi	r22, 0x07	; 7
    51f0:	ce 01       	movw	r24, r28
    51f2:	84 d9       	rcall	.-3320   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51f4:	62 e0       	ldi	r22, 0x02	; 2
    51f6:	ce 01       	movw	r24, r28
    51f8:	81 d9       	rcall	.-3326   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    51fa:	60 e1       	ldi	r22, 0x10	; 16
    51fc:	ce 01       	movw	r24, r28
    51fe:	7e d9       	rcall	.-3332   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5200:	61 ee       	ldi	r22, 0xE1	; 225
    5202:	ce 01       	movw	r24, r28
    5204:	3f d9       	rcall	.-3458   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5206:	6f e0       	ldi	r22, 0x0F	; 15
    5208:	ce 01       	movw	r24, r28
    520a:	78 d9       	rcall	.-3344   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    520c:	6b e1       	ldi	r22, 0x1B	; 27
    520e:	ce 01       	movw	r24, r28
    5210:	75 d9       	rcall	.-3350   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5212:	6f e0       	ldi	r22, 0x0F	; 15
    5214:	ce 01       	movw	r24, r28
    5216:	72 d9       	rcall	.-3356   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5218:	67 e1       	ldi	r22, 0x17	; 23
    521a:	ce 01       	movw	r24, r28
    521c:	6f d9       	rcall	.-3362   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    521e:	63 e3       	ldi	r22, 0x33	; 51
    5220:	ce 01       	movw	r24, r28
    5222:	6c d9       	rcall	.-3368   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5224:	6c e2       	ldi	r22, 0x2C	; 44
    5226:	ce 01       	movw	r24, r28
    5228:	69 d9       	rcall	.-3374   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    522a:	69 e2       	ldi	r22, 0x29	; 41
    522c:	ce 01       	movw	r24, r28
    522e:	66 d9       	rcall	.-3380   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5230:	6e e2       	ldi	r22, 0x2E	; 46
    5232:	ce 01       	movw	r24, r28
    5234:	63 d9       	rcall	.-3386   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5236:	60 e3       	ldi	r22, 0x30	; 48
    5238:	ce 01       	movw	r24, r28
    523a:	60 d9       	rcall	.-3392   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    523c:	60 e3       	ldi	r22, 0x30	; 48
    523e:	ce 01       	movw	r24, r28
    5240:	5d d9       	rcall	.-3398   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5242:	69 e3       	ldi	r22, 0x39	; 57
    5244:	ce 01       	movw	r24, r28
    5246:	5a d9       	rcall	.-3404   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5248:	6f e3       	ldi	r22, 0x3F	; 63
    524a:	ce 01       	movw	r24, r28
    524c:	57 d9       	rcall	.-3410   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    524e:	60 e0       	ldi	r22, 0x00	; 0
    5250:	ce 01       	movw	r24, r28
    5252:	54 d9       	rcall	.-3416   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5254:	67 e0       	ldi	r22, 0x07	; 7
    5256:	ce 01       	movw	r24, r28
    5258:	51 d9       	rcall	.-3422   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    525a:	63 e0       	ldi	r22, 0x03	; 3
    525c:	ce 01       	movw	r24, r28
    525e:	4e d9       	rcall	.-3428   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5260:	60 e1       	ldi	r22, 0x10	; 16
    5262:	ce 01       	movw	r24, r28
    5264:	4b d9       	rcall	.-3434   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5266:	6a e2       	ldi	r22, 0x2A	; 42
    5268:	ce 01       	movw	r24, r28
    526a:	0c d9       	rcall	.-3560   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    526c:	60 e0       	ldi	r22, 0x00	; 0
    526e:	ce 01       	movw	r24, r28
    5270:	45 d9       	rcall	.-3446   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5272:	60 e0       	ldi	r22, 0x00	; 0
    5274:	ce 01       	movw	r24, r28
    5276:	42 d9       	rcall	.-3452   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5278:	60 e0       	ldi	r22, 0x00	; 0
    527a:	ce 01       	movw	r24, r28
    527c:	3f d9       	rcall	.-3458   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    527e:	6f e7       	ldi	r22, 0x7F	; 127
    5280:	ce 01       	movw	r24, r28
    5282:	3c d9       	rcall	.-3464   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5284:	6b e2       	ldi	r22, 0x2B	; 43
    5286:	ce 01       	movw	r24, r28
    5288:	fd d8       	rcall	.-3590   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    528a:	60 e0       	ldi	r22, 0x00	; 0
    528c:	ce 01       	movw	r24, r28
    528e:	36 d9       	rcall	.-3476   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5290:	60 e0       	ldi	r22, 0x00	; 0
    5292:	ce 01       	movw	r24, r28
    5294:	33 d9       	rcall	.-3482   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5296:	60 e0       	ldi	r22, 0x00	; 0
    5298:	ce 01       	movw	r24, r28
    529a:	30 d9       	rcall	.-3488   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    529c:	6f e9       	ldi	r22, 0x9F	; 159
    529e:	ce 01       	movw	r24, r28
    52a0:	2d d9       	rcall	.-3494   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    52a2:	60 ef       	ldi	r22, 0xF0	; 240
    52a4:	ce 01       	movw	r24, r28
    52a6:	ee d8       	rcall	.-3620   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52a8:	61 e0       	ldi	r22, 0x01	; 1
    52aa:	ce 01       	movw	r24, r28
    52ac:	27 d9       	rcall	.-3506   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    52ae:	66 ef       	ldi	r22, 0xF6	; 246
    52b0:	ce 01       	movw	r24, r28
    52b2:	e8 d8       	rcall	.-3632   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52b4:	60 e0       	ldi	r22, 0x00	; 0
    52b6:	0c 94 75 31 	jmp	0x62ea	; 0x62ea <_ZN4UTFT7InitLCDEh+0x1b1e>
    52ba:	61 e0       	ldi	r22, 0x01	; 1
    52bc:	ce 01       	movw	r24, r28
    52be:	e2 d8       	rcall	.-3644   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52c0:	65 e2       	ldi	r22, 0x25	; 37
    52c2:	ce 01       	movw	r24, r28
    52c4:	df d8       	rcall	.-3650   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52c6:	60 e4       	ldi	r22, 0x40	; 64
    52c8:	ce 01       	movw	r24, r28
    52ca:	18 d9       	rcall	.-3536   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    52cc:	61 e1       	ldi	r22, 0x11	; 17
    52ce:	ce 01       	movw	r24, r28
    52d0:	d9 d8       	rcall	.-3662   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52d2:	6a e0       	ldi	r22, 0x0A	; 10
    52d4:	70 e0       	ldi	r23, 0x00	; 0
    52d6:	80 e0       	ldi	r24, 0x00	; 0
    52d8:	90 e0       	ldi	r25, 0x00	; 0
    52da:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    52de:	60 e2       	ldi	r22, 0x20	; 32
    52e0:	ce 01       	movw	r24, r28
    52e2:	d0 d8       	rcall	.-3680   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52e4:	68 e3       	ldi	r22, 0x38	; 56
    52e6:	ce 01       	movw	r24, r28
    52e8:	cd d8       	rcall	.-3686   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52ea:	69 e2       	ldi	r22, 0x29	; 41
    52ec:	ce 01       	movw	r24, r28
    52ee:	ca d8       	rcall	.-3692   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52f0:	63 e1       	ldi	r22, 0x13	; 19
    52f2:	ce 01       	movw	r24, r28
    52f4:	c7 d8       	rcall	.-3698   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52f6:	66 e3       	ldi	r22, 0x36	; 54
    52f8:	ce 01       	movw	r24, r28
    52fa:	c4 d8       	rcall	.-3704   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    52fc:	60 e6       	ldi	r22, 0x60	; 96
    52fe:	ce 01       	movw	r24, r28
    5300:	fd d8       	rcall	.-3590   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5302:	6a e3       	ldi	r22, 0x3A	; 58
    5304:	ce 01       	movw	r24, r28
    5306:	be d8       	rcall	.-3716   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5308:	65 e0       	ldi	r22, 0x05	; 5
    530a:	ce 01       	movw	r24, r28
    530c:	f7 d8       	rcall	.-3602   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    530e:	6a e2       	ldi	r22, 0x2A	; 42
    5310:	ce 01       	movw	r24, r28
    5312:	b8 d8       	rcall	.-3728   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5314:	60 e0       	ldi	r22, 0x00	; 0
    5316:	ce 01       	movw	r24, r28
    5318:	f1 d8       	rcall	.-3614   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    531a:	6f e7       	ldi	r22, 0x7F	; 127
    531c:	ce 01       	movw	r24, r28
    531e:	ee d8       	rcall	.-3620   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5320:	64 eb       	ldi	r22, 0xB4	; 180
    5322:	ce 01       	movw	r24, r28
    5324:	af d8       	rcall	.-3746   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5326:	63 e0       	ldi	r22, 0x03	; 3
    5328:	ce 01       	movw	r24, r28
    532a:	e8 d8       	rcall	.-3632   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    532c:	68 e0       	ldi	r22, 0x08	; 8
    532e:	ce 01       	movw	r24, r28
    5330:	e5 d8       	rcall	.-3638   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5332:	6b e0       	ldi	r22, 0x0B	; 11
    5334:	ce 01       	movw	r24, r28
    5336:	e2 d8       	rcall	.-3644   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5338:	6e e0       	ldi	r22, 0x0E	; 14
    533a:	ce 01       	movw	r24, r28
    533c:	df d8       	rcall	.-3650   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    533e:	6a eb       	ldi	r22, 0xBA	; 186
    5340:	ce 01       	movw	r24, r28
    5342:	a0 d8       	rcall	.-3776   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5344:	67 e0       	ldi	r22, 0x07	; 7
    5346:	ce 01       	movw	r24, r28
    5348:	d9 d8       	rcall	.-3662   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    534a:	6d e0       	ldi	r22, 0x0D	; 13
    534c:	ce 01       	movw	r24, r28
    534e:	d6 d8       	rcall	.-3668   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5350:	6b e2       	ldi	r22, 0x2B	; 43
    5352:	ce 01       	movw	r24, r28
    5354:	97 d8       	rcall	.-3794   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5356:	60 e0       	ldi	r22, 0x00	; 0
    5358:	ce 01       	movw	r24, r28
    535a:	d0 d8       	rcall	.-3680   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    535c:	6f e7       	ldi	r22, 0x7F	; 127
    535e:	5e c2       	rjmp	.+1212   	; 0x581c <_ZN4UTFT7InitLCDEh+0x1050>
    5360:	63 e8       	ldi	r22, 0x83	; 131
    5362:	ce 01       	movw	r24, r28
    5364:	8f d8       	rcall	.-3810   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5366:	62 e0       	ldi	r22, 0x02	; 2
    5368:	ce 01       	movw	r24, r28
    536a:	c8 d8       	rcall	.-3696   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    536c:	65 e8       	ldi	r22, 0x85	; 133
    536e:	ce 01       	movw	r24, r28
    5370:	89 d8       	rcall	.-3822   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5372:	63 e0       	ldi	r22, 0x03	; 3
    5374:	ce 01       	movw	r24, r28
    5376:	c2 d8       	rcall	.-3708   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5378:	6b e8       	ldi	r22, 0x8B	; 139
    537a:	ce 01       	movw	r24, r28
    537c:	83 d8       	rcall	.-3834   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    537e:	61 e0       	ldi	r22, 0x01	; 1
    5380:	ce 01       	movw	r24, r28
    5382:	bc d8       	rcall	.-3720   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5384:	6c e8       	ldi	r22, 0x8C	; 140
    5386:	ce 01       	movw	r24, r28
    5388:	7d d8       	rcall	.-3846   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    538a:	63 e9       	ldi	r22, 0x93	; 147
    538c:	ce 01       	movw	r24, r28
    538e:	b6 d8       	rcall	.-3732   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5390:	61 e9       	ldi	r22, 0x91	; 145
    5392:	ce 01       	movw	r24, r28
    5394:	77 d8       	rcall	.-3858   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5396:	61 e0       	ldi	r22, 0x01	; 1
    5398:	ce 01       	movw	r24, r28
    539a:	b0 d8       	rcall	.-3744   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    539c:	63 e8       	ldi	r22, 0x83	; 131
    539e:	ce 01       	movw	r24, r28
    53a0:	71 d8       	rcall	.-3870   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    53a2:	60 e0       	ldi	r22, 0x00	; 0
    53a4:	ce 01       	movw	r24, r28
    53a6:	aa d8       	rcall	.-3756   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    53a8:	6e e3       	ldi	r22, 0x3E	; 62
    53aa:	ce 01       	movw	r24, r28
    53ac:	6b d8       	rcall	.-3882   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    53ae:	60 eb       	ldi	r22, 0xB0	; 176
    53b0:	ce 01       	movw	r24, r28
    53b2:	a4 d8       	rcall	.-3768   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    53b4:	6f e3       	ldi	r22, 0x3F	; 63
    53b6:	ce 01       	movw	r24, r28
    53b8:	65 d8       	rcall	.-3894   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    53ba:	63 e0       	ldi	r22, 0x03	; 3
    53bc:	ce 01       	movw	r24, r28
    53be:	9e d8       	rcall	.-3780   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    53c0:	60 e4       	ldi	r22, 0x40	; 64
    53c2:	ce 01       	movw	r24, r28
    53c4:	5f d8       	rcall	.-3906   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    53c6:	60 e1       	ldi	r22, 0x10	; 16
    53c8:	ce 01       	movw	r24, r28
    53ca:	98 d8       	rcall	.-3792   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    53cc:	61 e4       	ldi	r22, 0x41	; 65
    53ce:	ce 01       	movw	r24, r28
    53d0:	59 d8       	rcall	.-3918   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    53d2:	66 e5       	ldi	r22, 0x56	; 86
    53d4:	ce 01       	movw	r24, r28
    53d6:	92 d8       	rcall	.-3804   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    53d8:	62 e4       	ldi	r22, 0x42	; 66
    53da:	ce 01       	movw	r24, r28
    53dc:	53 d8       	rcall	.-3930   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    53de:	63 e1       	ldi	r22, 0x13	; 19
    53e0:	ce 01       	movw	r24, r28
    53e2:	8c d8       	rcall	.-3816   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    53e4:	63 e4       	ldi	r22, 0x43	; 67
    53e6:	ce 01       	movw	r24, r28
    53e8:	4d d8       	rcall	.-3942   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    53ea:	66 e4       	ldi	r22, 0x46	; 70
    53ec:	ce 01       	movw	r24, r28
    53ee:	86 d8       	rcall	.-3828   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    53f0:	64 e4       	ldi	r22, 0x44	; 68
    53f2:	ce 01       	movw	r24, r28
    53f4:	47 d8       	rcall	.-3954   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    53f6:	63 e2       	ldi	r22, 0x23	; 35
    53f8:	ce 01       	movw	r24, r28
    53fa:	80 d8       	rcall	.-3840   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    53fc:	65 e4       	ldi	r22, 0x45	; 69
    53fe:	ce 01       	movw	r24, r28
    5400:	41 d8       	rcall	.-3966   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5402:	66 e7       	ldi	r22, 0x76	; 118
    5404:	ce 01       	movw	r24, r28
    5406:	7a d8       	rcall	.-3852   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5408:	66 e4       	ldi	r22, 0x46	; 70
    540a:	ce 01       	movw	r24, r28
    540c:	3b d8       	rcall	.-3978   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    540e:	60 e0       	ldi	r22, 0x00	; 0
    5410:	ce 01       	movw	r24, r28
    5412:	74 d8       	rcall	.-3864   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5414:	67 e4       	ldi	r22, 0x47	; 71
    5416:	ce 01       	movw	r24, r28
    5418:	35 d8       	rcall	.-3990   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    541a:	6e e5       	ldi	r22, 0x5E	; 94
    541c:	ce 01       	movw	r24, r28
    541e:	6e d8       	rcall	.-3876   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5420:	68 e4       	ldi	r22, 0x48	; 72
    5422:	ce 01       	movw	r24, r28
    5424:	2f d8       	rcall	.-4002   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5426:	6f e4       	ldi	r22, 0x4F	; 79
    5428:	ce 01       	movw	r24, r28
    542a:	68 d8       	rcall	.-3888   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    542c:	69 e4       	ldi	r22, 0x49	; 73
    542e:	ce 01       	movw	r24, r28
    5430:	29 d8       	rcall	.-4014   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5432:	60 e4       	ldi	r22, 0x40	; 64
    5434:	ce 01       	movw	r24, r28
    5436:	62 d8       	rcall	.-3900   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5438:	67 e1       	ldi	r22, 0x17	; 23
    543a:	ce 01       	movw	r24, r28
    543c:	23 d8       	rcall	.-4026   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    543e:	61 e9       	ldi	r22, 0x91	; 145
    5440:	ce 01       	movw	r24, r28
    5442:	5c d8       	rcall	.-3912   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5444:	6b e2       	ldi	r22, 0x2B	; 43
    5446:	ce 01       	movw	r24, r28
    5448:	1d d8       	rcall	.-4038   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    544a:	69 ef       	ldi	r22, 0xF9	; 249
    544c:	ce 01       	movw	r24, r28
    544e:	56 d8       	rcall	.-3924   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5450:	6a e0       	ldi	r22, 0x0A	; 10
    5452:	70 e0       	ldi	r23, 0x00	; 0
    5454:	80 e0       	ldi	r24, 0x00	; 0
    5456:	90 e0       	ldi	r25, 0x00	; 0
    5458:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    545c:	6b e1       	ldi	r22, 0x1B	; 27
    545e:	ce 01       	movw	r24, r28
    5460:	11 d8       	rcall	.-4062   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5462:	64 e1       	ldi	r22, 0x14	; 20
    5464:	ce 01       	movw	r24, r28
    5466:	4a d8       	rcall	.-3948   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5468:	6a e1       	ldi	r22, 0x1A	; 26
    546a:	ce 01       	movw	r24, r28
    546c:	0b d8       	rcall	.-4074   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    546e:	61 e1       	ldi	r22, 0x11	; 17
    5470:	ce 01       	movw	r24, r28
    5472:	44 d8       	rcall	.-3960   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5474:	6c e1       	ldi	r22, 0x1C	; 28
    5476:	ce 01       	movw	r24, r28
    5478:	05 d8       	rcall	.-4086   	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    547a:	66 e0       	ldi	r22, 0x06	; 6
    547c:	ce 01       	movw	r24, r28
    547e:	3e d8       	rcall	.-3972   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5480:	6f e1       	ldi	r22, 0x1F	; 31
    5482:	ce 01       	movw	r24, r28
    5484:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5488:	62 e4       	ldi	r22, 0x42	; 66
    548a:	ce 01       	movw	r24, r28
    548c:	37 d8       	rcall	.-3986   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    548e:	64 e1       	ldi	r22, 0x14	; 20
    5490:	70 e0       	ldi	r23, 0x00	; 0
    5492:	80 e0       	ldi	r24, 0x00	; 0
    5494:	90 e0       	ldi	r25, 0x00	; 0
    5496:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    549a:	69 e1       	ldi	r22, 0x19	; 25
    549c:	ce 01       	movw	r24, r28
    549e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    54a2:	6a e0       	ldi	r22, 0x0A	; 10
    54a4:	ce 01       	movw	r24, r28
    54a6:	2a d8       	rcall	.-4012   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    54a8:	69 e1       	ldi	r22, 0x19	; 25
    54aa:	ce 01       	movw	r24, r28
    54ac:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    54b0:	6a e1       	ldi	r22, 0x1A	; 26
    54b2:	ce 01       	movw	r24, r28
    54b4:	23 d8       	rcall	.-4026   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    54b6:	68 e2       	ldi	r22, 0x28	; 40
    54b8:	70 e0       	ldi	r23, 0x00	; 0
    54ba:	80 e0       	ldi	r24, 0x00	; 0
    54bc:	90 e0       	ldi	r25, 0x00	; 0
    54be:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    54c2:	69 e1       	ldi	r22, 0x19	; 25
    54c4:	ce 01       	movw	r24, r28
    54c6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    54ca:	62 e1       	ldi	r22, 0x12	; 18
    54cc:	ce 01       	movw	r24, r28
    54ce:	16 d8       	rcall	.-4052   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    54d0:	68 e2       	ldi	r22, 0x28	; 40
    54d2:	70 e0       	ldi	r23, 0x00	; 0
    54d4:	80 e0       	ldi	r24, 0x00	; 0
    54d6:	90 e0       	ldi	r25, 0x00	; 0
    54d8:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    54dc:	6e e1       	ldi	r22, 0x1E	; 30
    54de:	ce 01       	movw	r24, r28
    54e0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    54e4:	67 e2       	ldi	r22, 0x27	; 39
    54e6:	ce 01       	movw	r24, r28
    54e8:	09 d8       	rcall	.-4078   	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    54ea:	64 e6       	ldi	r22, 0x64	; 100
    54ec:	70 e0       	ldi	r23, 0x00	; 0
    54ee:	80 e0       	ldi	r24, 0x00	; 0
    54f0:	90 e0       	ldi	r25, 0x00	; 0
    54f2:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    54f6:	64 e2       	ldi	r22, 0x24	; 36
    54f8:	ce 01       	movw	r24, r28
    54fa:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    54fe:	60 e6       	ldi	r22, 0x60	; 96
    5500:	ce 01       	movw	r24, r28
    5502:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5506:	6d e3       	ldi	r22, 0x3D	; 61
    5508:	ce 01       	movw	r24, r28
    550a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    550e:	60 e4       	ldi	r22, 0x40	; 64
    5510:	ce 01       	movw	r24, r28
    5512:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5516:	64 e3       	ldi	r22, 0x34	; 52
    5518:	ce 01       	movw	r24, r28
    551a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    551e:	68 e3       	ldi	r22, 0x38	; 56
    5520:	ce 01       	movw	r24, r28
    5522:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5526:	65 e3       	ldi	r22, 0x35	; 53
    5528:	ce 01       	movw	r24, r28
    552a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    552e:	68 e3       	ldi	r22, 0x38	; 56
    5530:	ce 01       	movw	r24, r28
    5532:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5536:	64 e2       	ldi	r22, 0x24	; 36
    5538:	ce 01       	movw	r24, r28
    553a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    553e:	68 e3       	ldi	r22, 0x38	; 56
    5540:	ce 01       	movw	r24, r28
    5542:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5546:	68 e2       	ldi	r22, 0x28	; 40
    5548:	70 e0       	ldi	r23, 0x00	; 0
    554a:	80 e0       	ldi	r24, 0x00	; 0
    554c:	90 e0       	ldi	r25, 0x00	; 0
    554e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5552:	64 e2       	ldi	r22, 0x24	; 36
    5554:	ce 01       	movw	r24, r28
    5556:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    555a:	6c e3       	ldi	r22, 0x3C	; 60
    555c:	ce 01       	movw	r24, r28
    555e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5562:	66 e1       	ldi	r22, 0x16	; 22
    5564:	ce 01       	movw	r24, r28
    5566:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    556a:	6c e1       	ldi	r22, 0x1C	; 28
    556c:	ce 01       	movw	r24, r28
    556e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5572:	61 e0       	ldi	r22, 0x01	; 1
    5574:	ce 01       	movw	r24, r28
    5576:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    557a:	66 e0       	ldi	r22, 0x06	; 6
    557c:	ce 01       	movw	r24, r28
    557e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5582:	65 e5       	ldi	r22, 0x55	; 85
    5584:	ce 01       	movw	r24, r28
    5586:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    558a:	60 e0       	ldi	r22, 0x00	; 0
    558c:	ce 01       	movw	r24, r28
    558e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5592:	62 e0       	ldi	r22, 0x02	; 2
    5594:	ce 01       	movw	r24, r28
    5596:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    559a:	60 e0       	ldi	r22, 0x00	; 0
    559c:	ce 01       	movw	r24, r28
    559e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    55a2:	63 e0       	ldi	r22, 0x03	; 3
    55a4:	ce 01       	movw	r24, r28
    55a6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    55aa:	60 e0       	ldi	r22, 0x00	; 0
    55ac:	ce 01       	movw	r24, r28
    55ae:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    55b2:	64 e0       	ldi	r22, 0x04	; 4
    55b4:	ce 01       	movw	r24, r28
    55b6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    55ba:	60 e0       	ldi	r22, 0x00	; 0
    55bc:	ce 01       	movw	r24, r28
    55be:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    55c2:	65 e0       	ldi	r22, 0x05	; 5
    55c4:	ce 01       	movw	r24, r28
    55c6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    55ca:	6f ee       	ldi	r22, 0xEF	; 239
    55cc:	ce 01       	movw	r24, r28
    55ce:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    55d2:	66 e0       	ldi	r22, 0x06	; 6
    55d4:	ce 01       	movw	r24, r28
    55d6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    55da:	60 e0       	ldi	r22, 0x00	; 0
    55dc:	ce 01       	movw	r24, r28
    55de:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    55e2:	67 e0       	ldi	r22, 0x07	; 7
    55e4:	ce 01       	movw	r24, r28
    55e6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    55ea:	60 e0       	ldi	r22, 0x00	; 0
    55ec:	ce 01       	movw	r24, r28
    55ee:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    55f2:	68 e0       	ldi	r22, 0x08	; 8
    55f4:	ce 01       	movw	r24, r28
    55f6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    55fa:	61 e0       	ldi	r22, 0x01	; 1
    55fc:	ce 01       	movw	r24, r28
    55fe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5602:	69 e0       	ldi	r22, 0x09	; 9
    5604:	ce 01       	movw	r24, r28
    5606:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    560a:	6f e8       	ldi	r22, 0x8F	; 143
    560c:	ce 01       	movw	r24, r28
    560e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5612:	d5 cc       	rjmp	.-1622   	; 0x4fbe <_ZN4UTFT7InitLCDEh+0x7f2>
    5614:	62 ee       	ldi	r22, 0xE2	; 226
    5616:	ce 01       	movw	r24, r28
    5618:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    561c:	63 e2       	ldi	r22, 0x23	; 35
    561e:	ce 01       	movw	r24, r28
    5620:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5624:	62 e0       	ldi	r22, 0x02	; 2
    5626:	ce 01       	movw	r24, r28
    5628:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    562c:	64 e5       	ldi	r22, 0x54	; 84
    562e:	ce 01       	movw	r24, r28
    5630:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5634:	60 ee       	ldi	r22, 0xE0	; 224
    5636:	ce 01       	movw	r24, r28
    5638:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    563c:	61 e0       	ldi	r22, 0x01	; 1
    563e:	ce 01       	movw	r24, r28
    5640:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5644:	6a e0       	ldi	r22, 0x0A	; 10
    5646:	70 e0       	ldi	r23, 0x00	; 0
    5648:	80 e0       	ldi	r24, 0x00	; 0
    564a:	90 e0       	ldi	r25, 0x00	; 0
    564c:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5650:	60 ee       	ldi	r22, 0xE0	; 224
    5652:	ce 01       	movw	r24, r28
    5654:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5658:	63 e0       	ldi	r22, 0x03	; 3
    565a:	ce 01       	movw	r24, r28
    565c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5660:	6a e0       	ldi	r22, 0x0A	; 10
    5662:	70 e0       	ldi	r23, 0x00	; 0
    5664:	80 e0       	ldi	r24, 0x00	; 0
    5666:	90 e0       	ldi	r25, 0x00	; 0
    5668:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    566c:	61 e0       	ldi	r22, 0x01	; 1
    566e:	ce 01       	movw	r24, r28
    5670:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5674:	64 e6       	ldi	r22, 0x64	; 100
    5676:	70 e0       	ldi	r23, 0x00	; 0
    5678:	80 e0       	ldi	r24, 0x00	; 0
    567a:	90 e0       	ldi	r25, 0x00	; 0
    567c:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5680:	66 ee       	ldi	r22, 0xE6	; 230
    5682:	ce 01       	movw	r24, r28
    5684:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5688:	61 e0       	ldi	r22, 0x01	; 1
    568a:	ce 01       	movw	r24, r28
    568c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5690:	6f e1       	ldi	r22, 0x1F	; 31
    5692:	ce 01       	movw	r24, r28
    5694:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5698:	6f ef       	ldi	r22, 0xFF	; 255
    569a:	ce 01       	movw	r24, r28
    569c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56a0:	60 eb       	ldi	r22, 0xB0	; 176
    56a2:	ce 01       	movw	r24, r28
    56a4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    56a8:	60 e2       	ldi	r22, 0x20	; 32
    56aa:	ce 01       	movw	r24, r28
    56ac:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56b0:	60 e0       	ldi	r22, 0x00	; 0
    56b2:	ce 01       	movw	r24, r28
    56b4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56b8:	61 e0       	ldi	r22, 0x01	; 1
    56ba:	ce 01       	movw	r24, r28
    56bc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56c0:	6f ed       	ldi	r22, 0xDF	; 223
    56c2:	ce 01       	movw	r24, r28
    56c4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56c8:	61 e0       	ldi	r22, 0x01	; 1
    56ca:	ce 01       	movw	r24, r28
    56cc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56d0:	6f e0       	ldi	r22, 0x0F	; 15
    56d2:	ce 01       	movw	r24, r28
    56d4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56d8:	60 e0       	ldi	r22, 0x00	; 0
    56da:	ce 01       	movw	r24, r28
    56dc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56e0:	64 eb       	ldi	r22, 0xB4	; 180
    56e2:	ce 01       	movw	r24, r28
    56e4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    56e8:	62 e0       	ldi	r22, 0x02	; 2
    56ea:	ce 01       	movw	r24, r28
    56ec:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56f0:	63 e1       	ldi	r22, 0x13	; 19
    56f2:	ce 01       	movw	r24, r28
    56f4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    56f8:	60 e0       	ldi	r22, 0x00	; 0
    56fa:	ce 01       	movw	r24, r28
    56fc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5700:	68 e0       	ldi	r22, 0x08	; 8
    5702:	ce 01       	movw	r24, r28
    5704:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5708:	6b e2       	ldi	r22, 0x2B	; 43
    570a:	ce 01       	movw	r24, r28
    570c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5710:	60 e0       	ldi	r22, 0x00	; 0
    5712:	ce 01       	movw	r24, r28
    5714:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5718:	62 e0       	ldi	r22, 0x02	; 2
    571a:	ce 01       	movw	r24, r28
    571c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5720:	60 e0       	ldi	r22, 0x00	; 0
    5722:	ce 01       	movw	r24, r28
    5724:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5728:	66 eb       	ldi	r22, 0xB6	; 182
    572a:	ce 01       	movw	r24, r28
    572c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5730:	61 e0       	ldi	r22, 0x01	; 1
    5732:	ce 01       	movw	r24, r28
    5734:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5738:	60 e2       	ldi	r22, 0x20	; 32
    573a:	ce 01       	movw	r24, r28
    573c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5740:	60 e0       	ldi	r22, 0x00	; 0
    5742:	ce 01       	movw	r24, r28
    5744:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5748:	64 e0       	ldi	r22, 0x04	; 4
    574a:	ce 01       	movw	r24, r28
    574c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5750:	6c e0       	ldi	r22, 0x0C	; 12
    5752:	ce 01       	movw	r24, r28
    5754:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5758:	60 e0       	ldi	r22, 0x00	; 0
    575a:	ce 01       	movw	r24, r28
    575c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5760:	62 e0       	ldi	r22, 0x02	; 2
    5762:	ce 01       	movw	r24, r28
    5764:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5768:	6a eb       	ldi	r22, 0xBA	; 186
    576a:	ce 01       	movw	r24, r28
    576c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5770:	6f e0       	ldi	r22, 0x0F	; 15
    5772:	ce 01       	movw	r24, r28
    5774:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5778:	68 eb       	ldi	r22, 0xB8	; 184
    577a:	ce 01       	movw	r24, r28
    577c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5780:	67 e0       	ldi	r22, 0x07	; 7
    5782:	ce 01       	movw	r24, r28
    5784:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5788:	61 e0       	ldi	r22, 0x01	; 1
    578a:	ce 01       	movw	r24, r28
    578c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5790:	66 e3       	ldi	r22, 0x36	; 54
    5792:	ce 01       	movw	r24, r28
    5794:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5798:	62 e2       	ldi	r22, 0x22	; 34
    579a:	ce 01       	movw	r24, r28
    579c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    57a0:	60 ef       	ldi	r22, 0xF0	; 240
    57a2:	ce 01       	movw	r24, r28
    57a4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    57a8:	63 e0       	ldi	r22, 0x03	; 3
    57aa:	ce 01       	movw	r24, r28
    57ac:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    57b0:	61 e0       	ldi	r22, 0x01	; 1
    57b2:	70 e0       	ldi	r23, 0x00	; 0
    57b4:	80 e0       	ldi	r24, 0x00	; 0
    57b6:	90 e0       	ldi	r25, 0x00	; 0
    57b8:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    57bc:	0f e0       	ldi	r16, 0x0F	; 15
    57be:	11 e0       	ldi	r17, 0x01	; 1
    57c0:	2f ed       	ldi	r18, 0xDF	; 223
    57c2:	31 e0       	ldi	r19, 0x01	; 1
    57c4:	40 e0       	ldi	r20, 0x00	; 0
    57c6:	50 e0       	ldi	r21, 0x00	; 0
    57c8:	60 e0       	ldi	r22, 0x00	; 0
    57ca:	70 e0       	ldi	r23, 0x00	; 0
    57cc:	ce 01       	movw	r24, r28
    57ce:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
    57d2:	69 e2       	ldi	r22, 0x29	; 41
    57d4:	ce 01       	movw	r24, r28
    57d6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    57da:	6e eb       	ldi	r22, 0xBE	; 190
    57dc:	ce 01       	movw	r24, r28
    57de:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    57e2:	66 e0       	ldi	r22, 0x06	; 6
    57e4:	ce 01       	movw	r24, r28
    57e6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    57ea:	60 ef       	ldi	r22, 0xF0	; 240
    57ec:	ce 01       	movw	r24, r28
    57ee:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    57f2:	61 e0       	ldi	r22, 0x01	; 1
    57f4:	ce 01       	movw	r24, r28
    57f6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    57fa:	60 ef       	ldi	r22, 0xF0	; 240
    57fc:	ce 01       	movw	r24, r28
    57fe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5802:	60 e0       	ldi	r22, 0x00	; 0
    5804:	ce 01       	movw	r24, r28
    5806:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    580a:	60 e0       	ldi	r22, 0x00	; 0
    580c:	ce 01       	movw	r24, r28
    580e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5812:	60 ed       	ldi	r22, 0xD0	; 208
    5814:	ce 01       	movw	r24, r28
    5816:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    581a:	6d e0       	ldi	r22, 0x0D	; 13
    581c:	ce 01       	movw	r24, r28
    581e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5822:	0c 94 b8 35 	jmp	0x6b70	; 0x6b70 <_ZN4UTFT7InitLCDEh+0x23a4>
    5826:	62 ee       	ldi	r22, 0xE2	; 226
    5828:	ce 01       	movw	r24, r28
    582a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    582e:	6e e1       	ldi	r22, 0x1E	; 30
    5830:	ce 01       	movw	r24, r28
    5832:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5836:	62 e0       	ldi	r22, 0x02	; 2
    5838:	ce 01       	movw	r24, r28
    583a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    583e:	64 e5       	ldi	r22, 0x54	; 84
    5840:	ce 01       	movw	r24, r28
    5842:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5846:	60 ee       	ldi	r22, 0xE0	; 224
    5848:	ce 01       	movw	r24, r28
    584a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    584e:	61 e0       	ldi	r22, 0x01	; 1
    5850:	ce 01       	movw	r24, r28
    5852:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5856:	6a e0       	ldi	r22, 0x0A	; 10
    5858:	70 e0       	ldi	r23, 0x00	; 0
    585a:	80 e0       	ldi	r24, 0x00	; 0
    585c:	90 e0       	ldi	r25, 0x00	; 0
    585e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5862:	60 ee       	ldi	r22, 0xE0	; 224
    5864:	ce 01       	movw	r24, r28
    5866:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    586a:	63 e0       	ldi	r22, 0x03	; 3
    586c:	ce 01       	movw	r24, r28
    586e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5872:	6a e0       	ldi	r22, 0x0A	; 10
    5874:	70 e0       	ldi	r23, 0x00	; 0
    5876:	80 e0       	ldi	r24, 0x00	; 0
    5878:	90 e0       	ldi	r25, 0x00	; 0
    587a:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    587e:	61 e0       	ldi	r22, 0x01	; 1
    5880:	ce 01       	movw	r24, r28
    5882:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5886:	64 e6       	ldi	r22, 0x64	; 100
    5888:	70 e0       	ldi	r23, 0x00	; 0
    588a:	80 e0       	ldi	r24, 0x00	; 0
    588c:	90 e0       	ldi	r25, 0x00	; 0
    588e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5892:	66 ee       	ldi	r22, 0xE6	; 230
    5894:	ce 01       	movw	r24, r28
    5896:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    589a:	63 e0       	ldi	r22, 0x03	; 3
    589c:	ce 01       	movw	r24, r28
    589e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58a2:	6f ef       	ldi	r22, 0xFF	; 255
    58a4:	ce 01       	movw	r24, r28
    58a6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58aa:	6f ef       	ldi	r22, 0xFF	; 255
    58ac:	ce 01       	movw	r24, r28
    58ae:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58b2:	60 eb       	ldi	r22, 0xB0	; 176
    58b4:	ce 01       	movw	r24, r28
    58b6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    58ba:	64 e2       	ldi	r22, 0x24	; 36
    58bc:	ce 01       	movw	r24, r28
    58be:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58c2:	60 e0       	ldi	r22, 0x00	; 0
    58c4:	ce 01       	movw	r24, r28
    58c6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58ca:	63 e0       	ldi	r22, 0x03	; 3
    58cc:	ce 01       	movw	r24, r28
    58ce:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58d2:	6f e1       	ldi	r22, 0x1F	; 31
    58d4:	ce 01       	movw	r24, r28
    58d6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58da:	61 e0       	ldi	r22, 0x01	; 1
    58dc:	ce 01       	movw	r24, r28
    58de:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58e2:	6f ed       	ldi	r22, 0xDF	; 223
    58e4:	ce 01       	movw	r24, r28
    58e6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58ea:	60 e0       	ldi	r22, 0x00	; 0
    58ec:	ce 01       	movw	r24, r28
    58ee:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    58f2:	64 eb       	ldi	r22, 0xB4	; 180
    58f4:	ce 01       	movw	r24, r28
    58f6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    58fa:	63 e0       	ldi	r22, 0x03	; 3
    58fc:	ce 01       	movw	r24, r28
    58fe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5902:	60 ea       	ldi	r22, 0xA0	; 160
    5904:	ce 01       	movw	r24, r28
    5906:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    590a:	60 e0       	ldi	r22, 0x00	; 0
    590c:	ce 01       	movw	r24, r28
    590e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5912:	6e e2       	ldi	r22, 0x2E	; 46
    5914:	ce 01       	movw	r24, r28
    5916:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    591a:	60 e3       	ldi	r22, 0x30	; 48
    591c:	ce 01       	movw	r24, r28
    591e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5922:	60 e0       	ldi	r22, 0x00	; 0
    5924:	ce 01       	movw	r24, r28
    5926:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    592a:	6f e0       	ldi	r22, 0x0F	; 15
    592c:	ce 01       	movw	r24, r28
    592e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5932:	60 e0       	ldi	r22, 0x00	; 0
    5934:	ce 01       	movw	r24, r28
    5936:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    593a:	66 eb       	ldi	r22, 0xB6	; 182
    593c:	ce 01       	movw	r24, r28
    593e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5942:	62 e0       	ldi	r22, 0x02	; 2
    5944:	ce 01       	movw	r24, r28
    5946:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    594a:	6d e0       	ldi	r22, 0x0D	; 13
    594c:	ce 01       	movw	r24, r28
    594e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5952:	60 e0       	ldi	r22, 0x00	; 0
    5954:	ce 01       	movw	r24, r28
    5956:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    595a:	60 e1       	ldi	r22, 0x10	; 16
    595c:	ce 01       	movw	r24, r28
    595e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5962:	60 e1       	ldi	r22, 0x10	; 16
    5964:	ce 01       	movw	r24, r28
    5966:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    596a:	60 e0       	ldi	r22, 0x00	; 0
    596c:	ce 01       	movw	r24, r28
    596e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5972:	68 e0       	ldi	r22, 0x08	; 8
    5974:	ce 01       	movw	r24, r28
    5976:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    597a:	6a eb       	ldi	r22, 0xBA	; 186
    597c:	ce 01       	movw	r24, r28
    597e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5982:	6f e0       	ldi	r22, 0x0F	; 15
    5984:	ce 01       	movw	r24, r28
    5986:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    598a:	68 eb       	ldi	r22, 0xB8	; 184
    598c:	ce 01       	movw	r24, r28
    598e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5992:	67 e0       	ldi	r22, 0x07	; 7
    5994:	ce 01       	movw	r24, r28
    5996:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    599a:	61 e0       	ldi	r22, 0x01	; 1
    599c:	ce 01       	movw	r24, r28
    599e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    59a2:	66 e3       	ldi	r22, 0x36	; 54
    59a4:	ce 01       	movw	r24, r28
    59a6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    59aa:	62 e2       	ldi	r22, 0x22	; 34
    59ac:	ce 01       	movw	r24, r28
    59ae:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    59b2:	60 ef       	ldi	r22, 0xF0	; 240
    59b4:	ce 01       	movw	r24, r28
    59b6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    59ba:	63 e0       	ldi	r22, 0x03	; 3
    59bc:	ce 01       	movw	r24, r28
    59be:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    59c2:	61 e0       	ldi	r22, 0x01	; 1
    59c4:	70 e0       	ldi	r23, 0x00	; 0
    59c6:	80 e0       	ldi	r24, 0x00	; 0
    59c8:	90 e0       	ldi	r25, 0x00	; 0
    59ca:	d2 c0       	rjmp	.+420    	; 0x5b70 <_ZN4UTFT7InitLCDEh+0x13a4>
    59cc:	62 ee       	ldi	r22, 0xE2	; 226
    59ce:	ce 01       	movw	r24, r28
    59d0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    59d4:	63 e2       	ldi	r22, 0x23	; 35
    59d6:	ce 01       	movw	r24, r28
    59d8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    59dc:	62 e0       	ldi	r22, 0x02	; 2
    59de:	ce 01       	movw	r24, r28
    59e0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    59e4:	64 e0       	ldi	r22, 0x04	; 4
    59e6:	ce 01       	movw	r24, r28
    59e8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    59ec:	60 ee       	ldi	r22, 0xE0	; 224
    59ee:	ce 01       	movw	r24, r28
    59f0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    59f4:	61 e0       	ldi	r22, 0x01	; 1
    59f6:	ce 01       	movw	r24, r28
    59f8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    59fc:	6a e0       	ldi	r22, 0x0A	; 10
    59fe:	70 e0       	ldi	r23, 0x00	; 0
    5a00:	80 e0       	ldi	r24, 0x00	; 0
    5a02:	90 e0       	ldi	r25, 0x00	; 0
    5a04:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5a08:	60 ee       	ldi	r22, 0xE0	; 224
    5a0a:	ce 01       	movw	r24, r28
    5a0c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5a10:	63 e0       	ldi	r22, 0x03	; 3
    5a12:	ce 01       	movw	r24, r28
    5a14:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a18:	6a e0       	ldi	r22, 0x0A	; 10
    5a1a:	70 e0       	ldi	r23, 0x00	; 0
    5a1c:	80 e0       	ldi	r24, 0x00	; 0
    5a1e:	90 e0       	ldi	r25, 0x00	; 0
    5a20:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5a24:	61 e0       	ldi	r22, 0x01	; 1
    5a26:	ce 01       	movw	r24, r28
    5a28:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5a2c:	64 e6       	ldi	r22, 0x64	; 100
    5a2e:	70 e0       	ldi	r23, 0x00	; 0
    5a30:	80 e0       	ldi	r24, 0x00	; 0
    5a32:	90 e0       	ldi	r25, 0x00	; 0
    5a34:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5a38:	66 ee       	ldi	r22, 0xE6	; 230
    5a3a:	ce 01       	movw	r24, r28
    5a3c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5a40:	64 e0       	ldi	r22, 0x04	; 4
    5a42:	ce 01       	movw	r24, r28
    5a44:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a48:	63 e9       	ldi	r22, 0x93	; 147
    5a4a:	ce 01       	movw	r24, r28
    5a4c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a50:	60 ee       	ldi	r22, 0xE0	; 224
    5a52:	ce 01       	movw	r24, r28
    5a54:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a58:	60 eb       	ldi	r22, 0xB0	; 176
    5a5a:	ce 01       	movw	r24, r28
    5a5c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5a60:	60 e0       	ldi	r22, 0x00	; 0
    5a62:	ce 01       	movw	r24, r28
    5a64:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a68:	60 e0       	ldi	r22, 0x00	; 0
    5a6a:	ce 01       	movw	r24, r28
    5a6c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a70:	63 e0       	ldi	r22, 0x03	; 3
    5a72:	ce 01       	movw	r24, r28
    5a74:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a78:	6f e1       	ldi	r22, 0x1F	; 31
    5a7a:	ce 01       	movw	r24, r28
    5a7c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a80:	61 e0       	ldi	r22, 0x01	; 1
    5a82:	ce 01       	movw	r24, r28
    5a84:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a88:	6f ed       	ldi	r22, 0xDF	; 223
    5a8a:	ce 01       	movw	r24, r28
    5a8c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a90:	60 e0       	ldi	r22, 0x00	; 0
    5a92:	ce 01       	movw	r24, r28
    5a94:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5a98:	64 eb       	ldi	r22, 0xB4	; 180
    5a9a:	ce 01       	movw	r24, r28
    5a9c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5aa0:	63 e0       	ldi	r22, 0x03	; 3
    5aa2:	ce 01       	movw	r24, r28
    5aa4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5aa8:	60 ea       	ldi	r22, 0xA0	; 160
    5aaa:	ce 01       	movw	r24, r28
    5aac:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ab0:	60 e0       	ldi	r22, 0x00	; 0
    5ab2:	ce 01       	movw	r24, r28
    5ab4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ab8:	6e e2       	ldi	r22, 0x2E	; 46
    5aba:	ce 01       	movw	r24, r28
    5abc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ac0:	60 e3       	ldi	r22, 0x30	; 48
    5ac2:	ce 01       	movw	r24, r28
    5ac4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ac8:	60 e0       	ldi	r22, 0x00	; 0
    5aca:	ce 01       	movw	r24, r28
    5acc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ad0:	6f e0       	ldi	r22, 0x0F	; 15
    5ad2:	ce 01       	movw	r24, r28
    5ad4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ad8:	60 e0       	ldi	r22, 0x00	; 0
    5ada:	ce 01       	movw	r24, r28
    5adc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ae0:	66 eb       	ldi	r22, 0xB6	; 182
    5ae2:	ce 01       	movw	r24, r28
    5ae4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5ae8:	62 e0       	ldi	r22, 0x02	; 2
    5aea:	ce 01       	movw	r24, r28
    5aec:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5af0:	6d e0       	ldi	r22, 0x0D	; 13
    5af2:	ce 01       	movw	r24, r28
    5af4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5af8:	60 e0       	ldi	r22, 0x00	; 0
    5afa:	ce 01       	movw	r24, r28
    5afc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b00:	60 e1       	ldi	r22, 0x10	; 16
    5b02:	ce 01       	movw	r24, r28
    5b04:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b08:	60 e1       	ldi	r22, 0x10	; 16
    5b0a:	ce 01       	movw	r24, r28
    5b0c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b10:	60 e0       	ldi	r22, 0x00	; 0
    5b12:	ce 01       	movw	r24, r28
    5b14:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b18:	68 e0       	ldi	r22, 0x08	; 8
    5b1a:	ce 01       	movw	r24, r28
    5b1c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b20:	6a eb       	ldi	r22, 0xBA	; 186
    5b22:	ce 01       	movw	r24, r28
    5b24:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5b28:	65 e0       	ldi	r22, 0x05	; 5
    5b2a:	ce 01       	movw	r24, r28
    5b2c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b30:	68 eb       	ldi	r22, 0xB8	; 184
    5b32:	ce 01       	movw	r24, r28
    5b34:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5b38:	67 e0       	ldi	r22, 0x07	; 7
    5b3a:	ce 01       	movw	r24, r28
    5b3c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b40:	61 e0       	ldi	r22, 0x01	; 1
    5b42:	ce 01       	movw	r24, r28
    5b44:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b48:	66 e3       	ldi	r22, 0x36	; 54
    5b4a:	ce 01       	movw	r24, r28
    5b4c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5b50:	62 e2       	ldi	r22, 0x22	; 34
    5b52:	ce 01       	movw	r24, r28
    5b54:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b58:	60 ef       	ldi	r22, 0xF0	; 240
    5b5a:	ce 01       	movw	r24, r28
    5b5c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5b60:	63 e0       	ldi	r22, 0x03	; 3
    5b62:	ce 01       	movw	r24, r28
    5b64:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5b68:	6a e0       	ldi	r22, 0x0A	; 10
    5b6a:	70 e0       	ldi	r23, 0x00	; 0
    5b6c:	80 e0       	ldi	r24, 0x00	; 0
    5b6e:	90 e0       	ldi	r25, 0x00	; 0
    5b70:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5b74:	0f ed       	ldi	r16, 0xDF	; 223
    5b76:	11 e0       	ldi	r17, 0x01	; 1
    5b78:	2f e1       	ldi	r18, 0x1F	; 31
    5b7a:	33 e0       	ldi	r19, 0x03	; 3
    5b7c:	23 ce       	rjmp	.-954    	; 0x57c4 <_ZN4UTFT7InitLCDEh+0xff8>
    5b7e:	44 e0       	ldi	r20, 0x04	; 4
    5b80:	50 e2       	ldi	r21, 0x20	; 32
    5b82:	61 e1       	ldi	r22, 0x11	; 17
    5b84:	ce 01       	movw	r24, r28
    5b86:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b8a:	40 e0       	ldi	r20, 0x00	; 0
    5b8c:	5c ec       	ldi	r21, 0xCC	; 204
    5b8e:	63 e1       	ldi	r22, 0x13	; 19
    5b90:	ce 01       	movw	r24, r28
    5b92:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b96:	40 e0       	ldi	r20, 0x00	; 0
    5b98:	56 e2       	ldi	r21, 0x26	; 38
    5b9a:	65 e1       	ldi	r22, 0x15	; 21
    5b9c:	ce 01       	movw	r24, r28
    5b9e:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ba2:	4a e2       	ldi	r20, 0x2A	; 42
    5ba4:	55 e2       	ldi	r21, 0x25	; 37
    5ba6:	64 e1       	ldi	r22, 0x14	; 20
    5ba8:	ce 01       	movw	r24, r28
    5baa:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bae:	43 e3       	ldi	r20, 0x33	; 51
    5bb0:	50 e0       	ldi	r21, 0x00	; 0
    5bb2:	62 e1       	ldi	r22, 0x12	; 18
    5bb4:	ce 01       	movw	r24, r28
    5bb6:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bba:	44 e0       	ldi	r20, 0x04	; 4
    5bbc:	5c ec       	ldi	r21, 0xCC	; 204
    5bbe:	63 e1       	ldi	r22, 0x13	; 19
    5bc0:	ce 01       	movw	r24, r28
    5bc2:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bc6:	46 e0       	ldi	r20, 0x06	; 6
    5bc8:	5c ec       	ldi	r21, 0xCC	; 204
    5bca:	63 e1       	ldi	r22, 0x13	; 19
    5bcc:	ce 01       	movw	r24, r28
    5bce:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bd2:	4f e4       	ldi	r20, 0x4F	; 79
    5bd4:	5c ec       	ldi	r21, 0xCC	; 204
    5bd6:	63 e1       	ldi	r22, 0x13	; 19
    5bd8:	ce 01       	movw	r24, r28
    5bda:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bde:	4f e4       	ldi	r20, 0x4F	; 79
    5be0:	57 e6       	ldi	r21, 0x67	; 103
    5be2:	63 e1       	ldi	r22, 0x13	; 19
    5be4:	ce 01       	movw	r24, r28
    5be6:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bea:	43 e0       	ldi	r20, 0x03	; 3
    5bec:	50 e2       	ldi	r21, 0x20	; 32
    5bee:	61 e1       	ldi	r22, 0x11	; 17
    5bf0:	ce 01       	movw	r24, r28
    5bf2:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bf6:	49 e0       	ldi	r20, 0x09	; 9
    5bf8:	56 e2       	ldi	r21, 0x26	; 38
    5bfa:	60 e3       	ldi	r22, 0x30	; 48
    5bfc:	ce 01       	movw	r24, r28
    5bfe:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c02:	4c e2       	ldi	r20, 0x2C	; 44
    5c04:	54 e2       	ldi	r21, 0x24	; 36
    5c06:	61 e3       	ldi	r22, 0x31	; 49
    5c08:	ce 01       	movw	r24, r28
    5c0a:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c0e:	43 e2       	ldi	r20, 0x23	; 35
    5c10:	5f e1       	ldi	r21, 0x1F	; 31
    5c12:	62 e3       	ldi	r22, 0x32	; 50
    5c14:	ce 01       	movw	r24, r28
    5c16:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c1a:	45 e2       	ldi	r20, 0x25	; 37
    5c1c:	54 e2       	ldi	r21, 0x24	; 36
    5c1e:	63 e3       	ldi	r22, 0x33	; 51
    5c20:	ce 01       	movw	r24, r28
    5c22:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c26:	46 e2       	ldi	r20, 0x26	; 38
    5c28:	52 e2       	ldi	r21, 0x22	; 34
    5c2a:	64 e3       	ldi	r22, 0x34	; 52
    5c2c:	ce 01       	movw	r24, r28
    5c2e:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c32:	43 e2       	ldi	r20, 0x23	; 35
    5c34:	55 e2       	ldi	r21, 0x25	; 37
    5c36:	65 e3       	ldi	r22, 0x35	; 53
    5c38:	ce 01       	movw	r24, r28
    5c3a:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c3e:	4a e1       	ldi	r20, 0x1A	; 26
    5c40:	5c e1       	ldi	r21, 0x1C	; 28
    5c42:	66 e3       	ldi	r22, 0x36	; 54
    5c44:	ce 01       	movw	r24, r28
    5c46:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c4a:	4d e1       	ldi	r20, 0x1D	; 29
    5c4c:	53 e1       	ldi	r21, 0x13	; 19
    5c4e:	67 e3       	ldi	r22, 0x37	; 55
    5c50:	ce 01       	movw	r24, r28
    5c52:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c56:	41 e1       	ldi	r20, 0x11	; 17
    5c58:	5b e0       	ldi	r21, 0x0B	; 11
    5c5a:	68 e3       	ldi	r22, 0x38	; 56
    5c5c:	ce 01       	movw	r24, r28
    5c5e:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c62:	40 e1       	ldi	r20, 0x10	; 16
    5c64:	52 e1       	ldi	r21, 0x12	; 18
    5c66:	69 e3       	ldi	r22, 0x39	; 57
    5c68:	ce 01       	movw	r24, r28
    5c6a:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c6e:	45 e1       	ldi	r20, 0x15	; 21
    5c70:	53 e1       	ldi	r21, 0x13	; 19
    5c72:	6a e3       	ldi	r22, 0x3A	; 58
    5c74:	ce 01       	movw	r24, r28
    5c76:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c7a:	49 e1       	ldi	r20, 0x19	; 25
    5c7c:	56 e3       	ldi	r21, 0x36	; 54
    5c7e:	6b e3       	ldi	r22, 0x3B	; 59
    5c80:	ce 01       	movw	r24, r28
    5c82:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c86:	40 e0       	ldi	r20, 0x00	; 0
    5c88:	5d e0       	ldi	r21, 0x0D	; 13
    5c8a:	6c e3       	ldi	r22, 0x3C	; 60
    5c8c:	ce 01       	movw	r24, r28
    5c8e:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c92:	4d e0       	ldi	r20, 0x0D	; 13
    5c94:	50 e0       	ldi	r21, 0x00	; 0
    5c96:	6d e3       	ldi	r22, 0x3D	; 61
    5c98:	ce 01       	movw	r24, r28
    5c9a:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5c9e:	47 e0       	ldi	r20, 0x07	; 7
    5ca0:	50 e0       	ldi	r21, 0x00	; 0
    5ca2:	66 e1       	ldi	r22, 0x16	; 22
    5ca4:	ce 01       	movw	r24, r28
    5ca6:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5caa:	43 e1       	ldi	r20, 0x13	; 19
    5cac:	50 e0       	ldi	r21, 0x00	; 0
    5cae:	62 e0       	ldi	r22, 0x02	; 2
    5cb0:	ce 01       	movw	r24, r28
    5cb2:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cb6:	43 e0       	ldi	r20, 0x03	; 3
    5cb8:	50 e0       	ldi	r21, 0x00	; 0
    5cba:	63 e0       	ldi	r22, 0x03	; 3
    5cbc:	ce 01       	movw	r24, r28
    5cbe:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cc2:	47 e2       	ldi	r20, 0x27	; 39
    5cc4:	51 e0       	ldi	r21, 0x01	; 1
    5cc6:	61 e0       	ldi	r22, 0x01	; 1
    5cc8:	ce 01       	movw	r24, r28
    5cca:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cce:	43 e0       	ldi	r20, 0x03	; 3
    5cd0:	53 e0       	ldi	r21, 0x03	; 3
    5cd2:	68 e0       	ldi	r22, 0x08	; 8
    5cd4:	ce 01       	movw	r24, r28
    5cd6:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cda:	4b e0       	ldi	r20, 0x0B	; 11
    5cdc:	50 e0       	ldi	r21, 0x00	; 0
    5cde:	6a e0       	ldi	r22, 0x0A	; 10
    5ce0:	ce 01       	movw	r24, r28
    5ce2:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ce6:	43 e0       	ldi	r20, 0x03	; 3
    5ce8:	50 e0       	ldi	r21, 0x00	; 0
    5cea:	6b e0       	ldi	r22, 0x0B	; 11
    5cec:	ce 01       	movw	r24, r28
    5cee:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cf2:	40 e0       	ldi	r20, 0x00	; 0
    5cf4:	50 e0       	ldi	r21, 0x00	; 0
    5cf6:	6c e0       	ldi	r22, 0x0C	; 12
    5cf8:	ce 01       	movw	r24, r28
    5cfa:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5cfe:	40 e0       	ldi	r20, 0x00	; 0
    5d00:	50 e0       	ldi	r21, 0x00	; 0
    5d02:	61 e4       	ldi	r22, 0x41	; 65
    5d04:	ce 01       	movw	r24, r28
    5d06:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d0a:	40 e0       	ldi	r20, 0x00	; 0
    5d0c:	50 e0       	ldi	r21, 0x00	; 0
    5d0e:	60 e5       	ldi	r22, 0x50	; 80
    5d10:	ce 01       	movw	r24, r28
    5d12:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d16:	45 e0       	ldi	r20, 0x05	; 5
    5d18:	50 e0       	ldi	r21, 0x00	; 0
    5d1a:	60 e6       	ldi	r22, 0x60	; 96
    5d1c:	ce 01       	movw	r24, r28
    5d1e:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d22:	4b e0       	ldi	r20, 0x0B	; 11
    5d24:	50 e0       	ldi	r21, 0x00	; 0
    5d26:	60 e7       	ldi	r22, 0x70	; 112
    5d28:	ce 01       	movw	r24, r28
    5d2a:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d2e:	40 e0       	ldi	r20, 0x00	; 0
    5d30:	50 e0       	ldi	r21, 0x00	; 0
    5d32:	61 e7       	ldi	r22, 0x71	; 113
    5d34:	ce 01       	movw	r24, r28
    5d36:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d3a:	40 e0       	ldi	r20, 0x00	; 0
    5d3c:	50 e0       	ldi	r21, 0x00	; 0
    5d3e:	68 e7       	ldi	r22, 0x78	; 120
    5d40:	ce 01       	movw	r24, r28
    5d42:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d46:	40 e0       	ldi	r20, 0x00	; 0
    5d48:	50 e0       	ldi	r21, 0x00	; 0
    5d4a:	6a e7       	ldi	r22, 0x7A	; 122
    5d4c:	ce 01       	movw	r24, r28
    5d4e:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d52:	47 e0       	ldi	r20, 0x07	; 7
    5d54:	50 e0       	ldi	r21, 0x00	; 0
    5d56:	69 e7       	ldi	r22, 0x79	; 121
    5d58:	ce 01       	movw	r24, r28
    5d5a:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d5e:	41 e5       	ldi	r20, 0x51	; 81
    5d60:	50 e0       	ldi	r21, 0x00	; 0
    5d62:	67 e0       	ldi	r22, 0x07	; 7
    5d64:	ce 01       	movw	r24, r28
    5d66:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d6a:	43 e5       	ldi	r20, 0x53	; 83
    5d6c:	50 e0       	ldi	r21, 0x00	; 0
    5d6e:	67 e0       	ldi	r22, 0x07	; 7
    5d70:	ce 01       	movw	r24, r28
    5d72:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d76:	40 e0       	ldi	r20, 0x00	; 0
    5d78:	50 e0       	ldi	r21, 0x00	; 0
    5d7a:	69 e7       	ldi	r22, 0x79	; 121
    5d7c:	92 c1       	rjmp	.+804    	; 0x60a2 <_ZN4UTFT7InitLCDEh+0x18d6>
    5d7e:	61 e1       	ldi	r22, 0x11	; 17
    5d80:	ce 01       	movw	r24, r28
    5d82:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5d86:	64 e1       	ldi	r22, 0x14	; 20
    5d88:	70 e0       	ldi	r23, 0x00	; 0
    5d8a:	80 e0       	ldi	r24, 0x00	; 0
    5d8c:	90 e0       	ldi	r25, 0x00	; 0
    5d8e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5d92:	60 ed       	ldi	r22, 0xD0	; 208
    5d94:	ce 01       	movw	r24, r28
    5d96:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5d9a:	67 e0       	ldi	r22, 0x07	; 7
    5d9c:	ce 01       	movw	r24, r28
    5d9e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5da2:	62 e4       	ldi	r22, 0x42	; 66
    5da4:	ce 01       	movw	r24, r28
    5da6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5daa:	68 e1       	ldi	r22, 0x18	; 24
    5dac:	ce 01       	movw	r24, r28
    5dae:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5db2:	61 ed       	ldi	r22, 0xD1	; 209
    5db4:	ce 01       	movw	r24, r28
    5db6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5dba:	60 e0       	ldi	r22, 0x00	; 0
    5dbc:	ce 01       	movw	r24, r28
    5dbe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5dc2:	67 e0       	ldi	r22, 0x07	; 7
    5dc4:	ce 01       	movw	r24, r28
    5dc6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5dca:	60 e1       	ldi	r22, 0x10	; 16
    5dcc:	ce 01       	movw	r24, r28
    5dce:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5dd2:	62 ed       	ldi	r22, 0xD2	; 210
    5dd4:	ce 01       	movw	r24, r28
    5dd6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5dda:	61 e0       	ldi	r22, 0x01	; 1
    5ddc:	ce 01       	movw	r24, r28
    5dde:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5de2:	62 e0       	ldi	r22, 0x02	; 2
    5de4:	ce 01       	movw	r24, r28
    5de6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5dea:	60 ec       	ldi	r22, 0xC0	; 192
    5dec:	ce 01       	movw	r24, r28
    5dee:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5df2:	60 e1       	ldi	r22, 0x10	; 16
    5df4:	ce 01       	movw	r24, r28
    5df6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5dfa:	6b e3       	ldi	r22, 0x3B	; 59
    5dfc:	ce 01       	movw	r24, r28
    5dfe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e02:	60 e0       	ldi	r22, 0x00	; 0
    5e04:	ce 01       	movw	r24, r28
    5e06:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e0a:	62 e0       	ldi	r22, 0x02	; 2
    5e0c:	ce 01       	movw	r24, r28
    5e0e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e12:	61 e1       	ldi	r22, 0x11	; 17
    5e14:	ce 01       	movw	r24, r28
    5e16:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e1a:	65 ec       	ldi	r22, 0xC5	; 197
    5e1c:	ce 01       	movw	r24, r28
    5e1e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5e22:	63 e0       	ldi	r22, 0x03	; 3
    5e24:	ce 01       	movw	r24, r28
    5e26:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e2a:	68 ec       	ldi	r22, 0xC8	; 200
    5e2c:	ce 01       	movw	r24, r28
    5e2e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5e32:	60 e0       	ldi	r22, 0x00	; 0
    5e34:	ce 01       	movw	r24, r28
    5e36:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e3a:	62 e3       	ldi	r22, 0x32	; 50
    5e3c:	ce 01       	movw	r24, r28
    5e3e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e42:	66 e3       	ldi	r22, 0x36	; 54
    5e44:	ce 01       	movw	r24, r28
    5e46:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e4a:	65 e4       	ldi	r22, 0x45	; 69
    5e4c:	ce 01       	movw	r24, r28
    5e4e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e52:	66 e0       	ldi	r22, 0x06	; 6
    5e54:	ce 01       	movw	r24, r28
    5e56:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e5a:	66 e1       	ldi	r22, 0x16	; 22
    5e5c:	ce 01       	movw	r24, r28
    5e5e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e62:	67 e3       	ldi	r22, 0x37	; 55
    5e64:	ce 01       	movw	r24, r28
    5e66:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e6a:	65 e7       	ldi	r22, 0x75	; 117
    5e6c:	ce 01       	movw	r24, r28
    5e6e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e72:	67 e7       	ldi	r22, 0x77	; 119
    5e74:	ce 01       	movw	r24, r28
    5e76:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e7a:	64 e5       	ldi	r22, 0x54	; 84
    5e7c:	ce 01       	movw	r24, r28
    5e7e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e82:	6c e0       	ldi	r22, 0x0C	; 12
    5e84:	ce 01       	movw	r24, r28
    5e86:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e8a:	60 e0       	ldi	r22, 0x00	; 0
    5e8c:	ce 01       	movw	r24, r28
    5e8e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5e92:	66 e3       	ldi	r22, 0x36	; 54
    5e94:	ce 01       	movw	r24, r28
    5e96:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5e9a:	6a e0       	ldi	r22, 0x0A	; 10
    5e9c:	ce 01       	movw	r24, r28
    5e9e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ea2:	6a e3       	ldi	r22, 0x3A	; 58
    5ea4:	ce 01       	movw	r24, r28
    5ea6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5eaa:	65 e5       	ldi	r22, 0x55	; 85
    5eac:	ce 01       	movw	r24, r28
    5eae:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5eb2:	6a e2       	ldi	r22, 0x2A	; 42
    5eb4:	ce 01       	movw	r24, r28
    5eb6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5eba:	60 e0       	ldi	r22, 0x00	; 0
    5ebc:	ce 01       	movw	r24, r28
    5ebe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ec2:	60 e0       	ldi	r22, 0x00	; 0
    5ec4:	ce 01       	movw	r24, r28
    5ec6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5eca:	61 e0       	ldi	r22, 0x01	; 1
    5ecc:	ce 01       	movw	r24, r28
    5ece:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ed2:	6f e3       	ldi	r22, 0x3F	; 63
    5ed4:	ce 01       	movw	r24, r28
    5ed6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5eda:	6b e2       	ldi	r22, 0x2B	; 43
    5edc:	ce 01       	movw	r24, r28
    5ede:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    5ee2:	60 e0       	ldi	r22, 0x00	; 0
    5ee4:	ce 01       	movw	r24, r28
    5ee6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5eea:	60 e0       	ldi	r22, 0x00	; 0
    5eec:	ce 01       	movw	r24, r28
    5eee:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5ef2:	61 e0       	ldi	r22, 0x01	; 1
    5ef4:	ce 01       	movw	r24, r28
    5ef6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5efa:	60 ee       	ldi	r22, 0xE0	; 224
    5efc:	ce 01       	movw	r24, r28
    5efe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    5f02:	68 e7       	ldi	r22, 0x78	; 120
    5f04:	70 e0       	ldi	r23, 0x00	; 0
    5f06:	80 e0       	ldi	r24, 0x00	; 0
    5f08:	90 e0       	ldi	r25, 0x00	; 0
    5f0a:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5f0e:	f8 c1       	rjmp	.+1008   	; 0x6300 <_ZN4UTFT7InitLCDEh+0x1b34>
    5f10:	4a e1       	ldi	r20, 0x1A	; 26
    5f12:	50 e0       	ldi	r21, 0x00	; 0
    5f14:	61 e1       	ldi	r22, 0x11	; 17
    5f16:	ce 01       	movw	r24, r28
    5f18:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f1c:	41 e2       	ldi	r20, 0x21	; 33
    5f1e:	51 e3       	ldi	r21, 0x31	; 49
    5f20:	62 e1       	ldi	r22, 0x12	; 18
    5f22:	ce 01       	movw	r24, r28
    5f24:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f28:	4c e6       	ldi	r20, 0x6C	; 108
    5f2a:	50 e0       	ldi	r21, 0x00	; 0
    5f2c:	63 e1       	ldi	r22, 0x13	; 19
    5f2e:	ce 01       	movw	r24, r28
    5f30:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f34:	49 e4       	ldi	r20, 0x49	; 73
    5f36:	52 e4       	ldi	r21, 0x42	; 66
    5f38:	64 e1       	ldi	r22, 0x14	; 20
    5f3a:	ce 01       	movw	r24, r28
    5f3c:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f40:	40 e0       	ldi	r20, 0x00	; 0
    5f42:	58 e0       	ldi	r21, 0x08	; 8
    5f44:	60 e1       	ldi	r22, 0x10	; 16
    5f46:	ce 01       	movw	r24, r28
    5f48:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f4c:	6a e0       	ldi	r22, 0x0A	; 10
    5f4e:	70 e0       	ldi	r23, 0x00	; 0
    5f50:	80 e0       	ldi	r24, 0x00	; 0
    5f52:	90 e0       	ldi	r25, 0x00	; 0
    5f54:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5f58:	4a e1       	ldi	r20, 0x1A	; 26
    5f5a:	51 e0       	ldi	r21, 0x01	; 1
    5f5c:	61 e1       	ldi	r22, 0x11	; 17
    5f5e:	ce 01       	movw	r24, r28
    5f60:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f64:	6a e0       	ldi	r22, 0x0A	; 10
    5f66:	70 e0       	ldi	r23, 0x00	; 0
    5f68:	80 e0       	ldi	r24, 0x00	; 0
    5f6a:	90 e0       	ldi	r25, 0x00	; 0
    5f6c:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5f70:	4a e1       	ldi	r20, 0x1A	; 26
    5f72:	53 e0       	ldi	r21, 0x03	; 3
    5f74:	61 e1       	ldi	r22, 0x11	; 17
    5f76:	ce 01       	movw	r24, r28
    5f78:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f7c:	6a e0       	ldi	r22, 0x0A	; 10
    5f7e:	70 e0       	ldi	r23, 0x00	; 0
    5f80:	80 e0       	ldi	r24, 0x00	; 0
    5f82:	90 e0       	ldi	r25, 0x00	; 0
    5f84:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5f88:	4a e1       	ldi	r20, 0x1A	; 26
    5f8a:	57 e0       	ldi	r21, 0x07	; 7
    5f8c:	61 e1       	ldi	r22, 0x11	; 17
    5f8e:	ce 01       	movw	r24, r28
    5f90:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f94:	6a e0       	ldi	r22, 0x0A	; 10
    5f96:	70 e0       	ldi	r23, 0x00	; 0
    5f98:	80 e0       	ldi	r24, 0x00	; 0
    5f9a:	90 e0       	ldi	r25, 0x00	; 0
    5f9c:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5fa0:	4a e1       	ldi	r20, 0x1A	; 26
    5fa2:	5f e0       	ldi	r21, 0x0F	; 15
    5fa4:	61 e1       	ldi	r22, 0x11	; 17
    5fa6:	ce 01       	movw	r24, r28
    5fa8:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fac:	6a e0       	ldi	r22, 0x0A	; 10
    5fae:	70 e0       	ldi	r23, 0x00	; 0
    5fb0:	80 e0       	ldi	r24, 0x00	; 0
    5fb2:	90 e0       	ldi	r25, 0x00	; 0
    5fb4:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5fb8:	4a e3       	ldi	r20, 0x3A	; 58
    5fba:	5f e0       	ldi	r21, 0x0F	; 15
    5fbc:	61 e1       	ldi	r22, 0x11	; 17
    5fbe:	ce 01       	movw	r24, r28
    5fc0:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fc4:	6e e1       	ldi	r22, 0x1E	; 30
    5fc6:	70 e0       	ldi	r23, 0x00	; 0
    5fc8:	80 e0       	ldi	r24, 0x00	; 0
    5fca:	90 e0       	ldi	r25, 0x00	; 0
    5fcc:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    5fd0:	4c e1       	ldi	r20, 0x1C	; 28
    5fd2:	51 e0       	ldi	r21, 0x01	; 1
    5fd4:	61 e0       	ldi	r22, 0x01	; 1
    5fd6:	ce 01       	movw	r24, r28
    5fd8:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fdc:	40 e0       	ldi	r20, 0x00	; 0
    5fde:	51 e0       	ldi	r21, 0x01	; 1
    5fe0:	62 e0       	ldi	r22, 0x02	; 2
    5fe2:	ce 01       	movw	r24, r28
    5fe4:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5fe8:	40 e3       	ldi	r20, 0x30	; 48
    5fea:	50 e1       	ldi	r21, 0x10	; 16
    5fec:	63 e0       	ldi	r22, 0x03	; 3
    5fee:	ce 01       	movw	r24, r28
    5ff0:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ff4:	40 e0       	ldi	r20, 0x00	; 0
    5ff6:	50 e0       	ldi	r21, 0x00	; 0
    5ff8:	67 e0       	ldi	r22, 0x07	; 7
    5ffa:	ce 01       	movw	r24, r28
    5ffc:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6000:	48 e0       	ldi	r20, 0x08	; 8
    6002:	58 e0       	ldi	r21, 0x08	; 8
    6004:	68 e0       	ldi	r22, 0x08	; 8
    6006:	ce 01       	movw	r24, r28
    6008:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    600c:	40 e0       	ldi	r20, 0x00	; 0
    600e:	51 e1       	ldi	r21, 0x11	; 17
    6010:	6b e0       	ldi	r22, 0x0B	; 11
    6012:	ce 01       	movw	r24, r28
    6014:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6018:	40 e0       	ldi	r20, 0x00	; 0
    601a:	50 e0       	ldi	r21, 0x00	; 0
    601c:	6c e0       	ldi	r22, 0x0C	; 12
    601e:	ce 01       	movw	r24, r28
    6020:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6024:	41 e0       	ldi	r20, 0x01	; 1
    6026:	54 e1       	ldi	r21, 0x14	; 20
    6028:	6f e0       	ldi	r22, 0x0F	; 15
    602a:	ce 01       	movw	r24, r28
    602c:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6030:	40 e0       	ldi	r20, 0x00	; 0
    6032:	50 e0       	ldi	r21, 0x00	; 0
    6034:	65 e1       	ldi	r22, 0x15	; 21
    6036:	ce 01       	movw	r24, r28
    6038:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    603c:	40 e0       	ldi	r20, 0x00	; 0
    603e:	50 e0       	ldi	r21, 0x00	; 0
    6040:	60 e2       	ldi	r22, 0x20	; 32
    6042:	ce 01       	movw	r24, r28
    6044:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6048:	40 e0       	ldi	r20, 0x00	; 0
    604a:	50 e0       	ldi	r21, 0x00	; 0
    604c:	61 e2       	ldi	r22, 0x21	; 33
    604e:	ce 01       	movw	r24, r28
    6050:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6054:	4f ea       	ldi	r20, 0xAF	; 175
    6056:	50 e0       	ldi	r21, 0x00	; 0
    6058:	66 e3       	ldi	r22, 0x36	; 54
    605a:	ce 01       	movw	r24, r28
    605c:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6060:	40 e0       	ldi	r20, 0x00	; 0
    6062:	50 e0       	ldi	r21, 0x00	; 0
    6064:	67 e3       	ldi	r22, 0x37	; 55
    6066:	ce 01       	movw	r24, r28
    6068:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    606c:	4b ed       	ldi	r20, 0xDB	; 219
    606e:	50 e0       	ldi	r21, 0x00	; 0
    6070:	68 e3       	ldi	r22, 0x38	; 56
    6072:	ce 01       	movw	r24, r28
    6074:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6078:	40 e0       	ldi	r20, 0x00	; 0
    607a:	50 e0       	ldi	r21, 0x00	; 0
    607c:	69 e3       	ldi	r22, 0x39	; 57
    607e:	ce 01       	movw	r24, r28
    6080:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6084:	41 e0       	ldi	r20, 0x01	; 1
    6086:	5b e0       	ldi	r21, 0x0B	; 11
    6088:	6f e0       	ldi	r22, 0x0F	; 15
    608a:	ce 01       	movw	r24, r28
    608c:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6090:	46 e1       	ldi	r20, 0x16	; 22
    6092:	50 e0       	ldi	r21, 0x00	; 0
    6094:	67 e0       	ldi	r22, 0x07	; 7
    6096:	ce 01       	movw	r24, r28
    6098:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    609c:	47 e1       	ldi	r20, 0x17	; 23
    609e:	50 e0       	ldi	r21, 0x00	; 0
    60a0:	67 e0       	ldi	r22, 0x07	; 7
    60a2:	ce 01       	movw	r24, r28
    60a4:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    60a8:	0c 94 df 27 	jmp	0x4fbe	; 0x4fbe <_ZN4UTFT7InitLCDEh+0x7f2>
    60ac:	61 e1       	ldi	r22, 0x11	; 17
    60ae:	ce 01       	movw	r24, r28
    60b0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    60b4:	68 e7       	ldi	r22, 0x78	; 120
    60b6:	70 e0       	ldi	r23, 0x00	; 0
    60b8:	80 e0       	ldi	r24, 0x00	; 0
    60ba:	90 e0       	ldi	r25, 0x00	; 0
    60bc:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    60c0:	61 eb       	ldi	r22, 0xB1	; 177
    60c2:	ce 01       	movw	r24, r28
    60c4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    60c8:	65 e0       	ldi	r22, 0x05	; 5
    60ca:	ce 01       	movw	r24, r28
    60cc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    60d0:	6c e3       	ldi	r22, 0x3C	; 60
    60d2:	ce 01       	movw	r24, r28
    60d4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    60d8:	6c e3       	ldi	r22, 0x3C	; 60
    60da:	ce 01       	movw	r24, r28
    60dc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    60e0:	62 eb       	ldi	r22, 0xB2	; 178
    60e2:	ce 01       	movw	r24, r28
    60e4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    60e8:	65 e0       	ldi	r22, 0x05	; 5
    60ea:	ce 01       	movw	r24, r28
    60ec:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    60f0:	6c e3       	ldi	r22, 0x3C	; 60
    60f2:	ce 01       	movw	r24, r28
    60f4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    60f8:	6c e3       	ldi	r22, 0x3C	; 60
    60fa:	ce 01       	movw	r24, r28
    60fc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6100:	63 eb       	ldi	r22, 0xB3	; 179
    6102:	ce 01       	movw	r24, r28
    6104:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6108:	65 e0       	ldi	r22, 0x05	; 5
    610a:	ce 01       	movw	r24, r28
    610c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6110:	6c e3       	ldi	r22, 0x3C	; 60
    6112:	ce 01       	movw	r24, r28
    6114:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6118:	6c e3       	ldi	r22, 0x3C	; 60
    611a:	ce 01       	movw	r24, r28
    611c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6120:	65 e0       	ldi	r22, 0x05	; 5
    6122:	ce 01       	movw	r24, r28
    6124:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6128:	6c e3       	ldi	r22, 0x3C	; 60
    612a:	ce 01       	movw	r24, r28
    612c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6130:	6c e3       	ldi	r22, 0x3C	; 60
    6132:	ce 01       	movw	r24, r28
    6134:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6138:	64 eb       	ldi	r22, 0xB4	; 180
    613a:	ce 01       	movw	r24, r28
    613c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6140:	63 e0       	ldi	r22, 0x03	; 3
    6142:	ce 01       	movw	r24, r28
    6144:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6148:	60 ec       	ldi	r22, 0xC0	; 192
    614a:	ce 01       	movw	r24, r28
    614c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6150:	68 e2       	ldi	r22, 0x28	; 40
    6152:	ce 01       	movw	r24, r28
    6154:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6158:	68 e0       	ldi	r22, 0x08	; 8
    615a:	ce 01       	movw	r24, r28
    615c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6160:	64 e0       	ldi	r22, 0x04	; 4
    6162:	ce 01       	movw	r24, r28
    6164:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6168:	61 ec       	ldi	r22, 0xC1	; 193
    616a:	ce 01       	movw	r24, r28
    616c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6170:	60 ec       	ldi	r22, 0xC0	; 192
    6172:	ce 01       	movw	r24, r28
    6174:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6178:	62 ec       	ldi	r22, 0xC2	; 194
    617a:	ce 01       	movw	r24, r28
    617c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6180:	6d e0       	ldi	r22, 0x0D	; 13
    6182:	ce 01       	movw	r24, r28
    6184:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6188:	60 e0       	ldi	r22, 0x00	; 0
    618a:	ce 01       	movw	r24, r28
    618c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6190:	63 ec       	ldi	r22, 0xC3	; 195
    6192:	ce 01       	movw	r24, r28
    6194:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6198:	6d e8       	ldi	r22, 0x8D	; 141
    619a:	ce 01       	movw	r24, r28
    619c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    61a0:	6a e2       	ldi	r22, 0x2A	; 42
    61a2:	ce 01       	movw	r24, r28
    61a4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    61a8:	64 ec       	ldi	r22, 0xC4	; 196
    61aa:	ce 01       	movw	r24, r28
    61ac:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    61b0:	6d e8       	ldi	r22, 0x8D	; 141
    61b2:	ce 01       	movw	r24, r28
    61b4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    61b8:	6e ee       	ldi	r22, 0xEE	; 238
    61ba:	ce 01       	movw	r24, r28
    61bc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    61c0:	65 ec       	ldi	r22, 0xC5	; 197
    61c2:	ce 01       	movw	r24, r28
    61c4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    61c8:	6a e1       	ldi	r22, 0x1A	; 26
    61ca:	ce 01       	movw	r24, r28
    61cc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    61d0:	66 e3       	ldi	r22, 0x36	; 54
    61d2:	ce 01       	movw	r24, r28
    61d4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    61d8:	60 ec       	ldi	r22, 0xC0	; 192
    61da:	ce 01       	movw	r24, r28
    61dc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    61e0:	60 ee       	ldi	r22, 0xE0	; 224
    61e2:	ce 01       	movw	r24, r28
    61e4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    61e8:	63 e0       	ldi	r22, 0x03	; 3
    61ea:	ce 01       	movw	r24, r28
    61ec:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    61f0:	62 e2       	ldi	r22, 0x22	; 34
    61f2:	ce 01       	movw	r24, r28
    61f4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    61f8:	67 e0       	ldi	r22, 0x07	; 7
    61fa:	ce 01       	movw	r24, r28
    61fc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6200:	6a e0       	ldi	r22, 0x0A	; 10
    6202:	ce 01       	movw	r24, r28
    6204:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6208:	6e e2       	ldi	r22, 0x2E	; 46
    620a:	ce 01       	movw	r24, r28
    620c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6210:	60 e3       	ldi	r22, 0x30	; 48
    6212:	ce 01       	movw	r24, r28
    6214:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6218:	65 e2       	ldi	r22, 0x25	; 37
    621a:	ce 01       	movw	r24, r28
    621c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6220:	6a e2       	ldi	r22, 0x2A	; 42
    6222:	ce 01       	movw	r24, r28
    6224:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6228:	68 e2       	ldi	r22, 0x28	; 40
    622a:	ce 01       	movw	r24, r28
    622c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6230:	66 e2       	ldi	r22, 0x26	; 38
    6232:	ce 01       	movw	r24, r28
    6234:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6238:	6e e2       	ldi	r22, 0x2E	; 46
    623a:	ce 01       	movw	r24, r28
    623c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6240:	6a e3       	ldi	r22, 0x3A	; 58
    6242:	ce 01       	movw	r24, r28
    6244:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6248:	60 e0       	ldi	r22, 0x00	; 0
    624a:	ce 01       	movw	r24, r28
    624c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6250:	61 e0       	ldi	r22, 0x01	; 1
    6252:	ce 01       	movw	r24, r28
    6254:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6258:	63 e0       	ldi	r22, 0x03	; 3
    625a:	ce 01       	movw	r24, r28
    625c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6260:	63 e1       	ldi	r22, 0x13	; 19
    6262:	ce 01       	movw	r24, r28
    6264:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6268:	61 ee       	ldi	r22, 0xE1	; 225
    626a:	ce 01       	movw	r24, r28
    626c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6270:	64 e0       	ldi	r22, 0x04	; 4
    6272:	ce 01       	movw	r24, r28
    6274:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6278:	66 e1       	ldi	r22, 0x16	; 22
    627a:	ce 01       	movw	r24, r28
    627c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6280:	66 e0       	ldi	r22, 0x06	; 6
    6282:	ce 01       	movw	r24, r28
    6284:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6288:	6d e0       	ldi	r22, 0x0D	; 13
    628a:	ce 01       	movw	r24, r28
    628c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6290:	6d e2       	ldi	r22, 0x2D	; 45
    6292:	ce 01       	movw	r24, r28
    6294:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6298:	66 e2       	ldi	r22, 0x26	; 38
    629a:	ce 01       	movw	r24, r28
    629c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62a0:	63 e2       	ldi	r22, 0x23	; 35
    62a2:	ce 01       	movw	r24, r28
    62a4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62a8:	67 e2       	ldi	r22, 0x27	; 39
    62aa:	ce 01       	movw	r24, r28
    62ac:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62b0:	67 e2       	ldi	r22, 0x27	; 39
    62b2:	ce 01       	movw	r24, r28
    62b4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62b8:	65 e2       	ldi	r22, 0x25	; 37
    62ba:	ce 01       	movw	r24, r28
    62bc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62c0:	6d e2       	ldi	r22, 0x2D	; 45
    62c2:	ce 01       	movw	r24, r28
    62c4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62c8:	6b e3       	ldi	r22, 0x3B	; 59
    62ca:	ce 01       	movw	r24, r28
    62cc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62d0:	60 e0       	ldi	r22, 0x00	; 0
    62d2:	ce 01       	movw	r24, r28
    62d4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62d8:	61 e0       	ldi	r22, 0x01	; 1
    62da:	ce 01       	movw	r24, r28
    62dc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62e0:	64 e0       	ldi	r22, 0x04	; 4
    62e2:	ce 01       	movw	r24, r28
    62e4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62e8:	63 e1       	ldi	r22, 0x13	; 19
    62ea:	ce 01       	movw	r24, r28
    62ec:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    62f0:	6a e3       	ldi	r22, 0x3A	; 58
    62f2:	ce 01       	movw	r24, r28
    62f4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    62f8:	65 e0       	ldi	r22, 0x05	; 5
    62fa:	ce 01       	movw	r24, r28
    62fc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6300:	69 e2       	ldi	r22, 0x29	; 41
    6302:	0c 94 e0 27 	jmp	0x4fc0	; 0x4fc0 <_ZN4UTFT7InitLCDEh+0x7f4>
    6306:	61 e1       	ldi	r22, 0x11	; 17
    6308:	ce 01       	movw	r24, r28
    630a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    630e:	64 e1       	ldi	r22, 0x14	; 20
    6310:	70 e0       	ldi	r23, 0x00	; 0
    6312:	80 e0       	ldi	r24, 0x00	; 0
    6314:	90 e0       	ldi	r25, 0x00	; 0
    6316:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    631a:	68 e2       	ldi	r22, 0x28	; 40
    631c:	ce 01       	movw	r24, r28
    631e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6322:	65 e0       	ldi	r22, 0x05	; 5
    6324:	70 e0       	ldi	r23, 0x00	; 0
    6326:	80 e0       	ldi	r24, 0x00	; 0
    6328:	90 e0       	ldi	r25, 0x00	; 0
    632a:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    632e:	6f ec       	ldi	r22, 0xCF	; 207
    6330:	ce 01       	movw	r24, r28
    6332:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6336:	60 e0       	ldi	r22, 0x00	; 0
    6338:	ce 01       	movw	r24, r28
    633a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    633e:	63 e8       	ldi	r22, 0x83	; 131
    6340:	ce 01       	movw	r24, r28
    6342:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6346:	60 e3       	ldi	r22, 0x30	; 48
    6348:	ce 01       	movw	r24, r28
    634a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    634e:	6d ee       	ldi	r22, 0xED	; 237
    6350:	ce 01       	movw	r24, r28
    6352:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6356:	64 e6       	ldi	r22, 0x64	; 100
    6358:	ce 01       	movw	r24, r28
    635a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    635e:	63 e0       	ldi	r22, 0x03	; 3
    6360:	ce 01       	movw	r24, r28
    6362:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6366:	62 e1       	ldi	r22, 0x12	; 18
    6368:	ce 01       	movw	r24, r28
    636a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    636e:	61 e8       	ldi	r22, 0x81	; 129
    6370:	ce 01       	movw	r24, r28
    6372:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6376:	68 ee       	ldi	r22, 0xE8	; 232
    6378:	ce 01       	movw	r24, r28
    637a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    637e:	65 e8       	ldi	r22, 0x85	; 133
    6380:	ce 01       	movw	r24, r28
    6382:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6386:	61 e0       	ldi	r22, 0x01	; 1
    6388:	ce 01       	movw	r24, r28
    638a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    638e:	69 e7       	ldi	r22, 0x79	; 121
    6390:	ce 01       	movw	r24, r28
    6392:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6396:	6b ec       	ldi	r22, 0xCB	; 203
    6398:	ce 01       	movw	r24, r28
    639a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    639e:	69 e3       	ldi	r22, 0x39	; 57
    63a0:	ce 01       	movw	r24, r28
    63a2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63a6:	6c e2       	ldi	r22, 0x2C	; 44
    63a8:	ce 01       	movw	r24, r28
    63aa:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63ae:	60 e0       	ldi	r22, 0x00	; 0
    63b0:	ce 01       	movw	r24, r28
    63b2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63b6:	64 e3       	ldi	r22, 0x34	; 52
    63b8:	ce 01       	movw	r24, r28
    63ba:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63be:	62 e0       	ldi	r22, 0x02	; 2
    63c0:	ce 01       	movw	r24, r28
    63c2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63c6:	67 ef       	ldi	r22, 0xF7	; 247
    63c8:	ce 01       	movw	r24, r28
    63ca:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    63ce:	60 e2       	ldi	r22, 0x20	; 32
    63d0:	ce 01       	movw	r24, r28
    63d2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63d6:	6a ee       	ldi	r22, 0xEA	; 234
    63d8:	ce 01       	movw	r24, r28
    63da:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    63de:	60 e0       	ldi	r22, 0x00	; 0
    63e0:	ce 01       	movw	r24, r28
    63e2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63e6:	60 e0       	ldi	r22, 0x00	; 0
    63e8:	ce 01       	movw	r24, r28
    63ea:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63ee:	60 ec       	ldi	r22, 0xC0	; 192
    63f0:	ce 01       	movw	r24, r28
    63f2:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    63f6:	66 e2       	ldi	r22, 0x26	; 38
    63f8:	ce 01       	movw	r24, r28
    63fa:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    63fe:	61 ec       	ldi	r22, 0xC1	; 193
    6400:	ce 01       	movw	r24, r28
    6402:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6406:	61 e1       	ldi	r22, 0x11	; 17
    6408:	ce 01       	movw	r24, r28
    640a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    640e:	65 ec       	ldi	r22, 0xC5	; 197
    6410:	ce 01       	movw	r24, r28
    6412:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6416:	65 e3       	ldi	r22, 0x35	; 53
    6418:	ce 01       	movw	r24, r28
    641a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    641e:	6e e3       	ldi	r22, 0x3E	; 62
    6420:	ce 01       	movw	r24, r28
    6422:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6426:	67 ec       	ldi	r22, 0xC7	; 199
    6428:	ce 01       	movw	r24, r28
    642a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    642e:	6e eb       	ldi	r22, 0xBE	; 190
    6430:	ce 01       	movw	r24, r28
    6432:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6436:	61 eb       	ldi	r22, 0xB1	; 177
    6438:	ce 01       	movw	r24, r28
    643a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    643e:	60 e0       	ldi	r22, 0x00	; 0
    6440:	ce 01       	movw	r24, r28
    6442:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6446:	6b e1       	ldi	r22, 0x1B	; 27
    6448:	ce 01       	movw	r24, r28
    644a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    644e:	66 eb       	ldi	r22, 0xB6	; 182
    6450:	ce 01       	movw	r24, r28
    6452:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6456:	6a e0       	ldi	r22, 0x0A	; 10
    6458:	ce 01       	movw	r24, r28
    645a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    645e:	62 e8       	ldi	r22, 0x82	; 130
    6460:	ce 01       	movw	r24, r28
    6462:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6466:	67 e2       	ldi	r22, 0x27	; 39
    6468:	ce 01       	movw	r24, r28
    646a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    646e:	60 e0       	ldi	r22, 0x00	; 0
    6470:	ce 01       	movw	r24, r28
    6472:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6476:	67 eb       	ldi	r22, 0xB7	; 183
    6478:	ce 01       	movw	r24, r28
    647a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    647e:	67 e0       	ldi	r22, 0x07	; 7
    6480:	ce 01       	movw	r24, r28
    6482:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6486:	6a e3       	ldi	r22, 0x3A	; 58
    6488:	ce 01       	movw	r24, r28
    648a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    648e:	65 e5       	ldi	r22, 0x55	; 85
    6490:	ce 01       	movw	r24, r28
    6492:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6496:	66 e3       	ldi	r22, 0x36	; 54
    6498:	ce 01       	movw	r24, r28
    649a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    649e:	68 e4       	ldi	r22, 0x48	; 72
    64a0:	ce 01       	movw	r24, r28
    64a2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    64a6:	69 e2       	ldi	r22, 0x29	; 41
    64a8:	ce 01       	movw	r24, r28
    64aa:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    64ae:	65 e0       	ldi	r22, 0x05	; 5
    64b0:	70 e0       	ldi	r23, 0x00	; 0
    64b2:	80 e0       	ldi	r24, 0x00	; 0
    64b4:	90 e0       	ldi	r25, 0x00	; 0
    64b6:	5b c4       	rjmp	.+2230   	; 0x6d6e <_ZN4UTFT7InitLCDEh+0x25a2>
    64b8:	6b ec       	ldi	r22, 0xCB	; 203
    64ba:	ce 01       	movw	r24, r28
    64bc:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    64c0:	69 e3       	ldi	r22, 0x39	; 57
    64c2:	ce 01       	movw	r24, r28
    64c4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    64c8:	6c e2       	ldi	r22, 0x2C	; 44
    64ca:	ce 01       	movw	r24, r28
    64cc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    64d0:	60 e0       	ldi	r22, 0x00	; 0
    64d2:	ce 01       	movw	r24, r28
    64d4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    64d8:	64 e3       	ldi	r22, 0x34	; 52
    64da:	ce 01       	movw	r24, r28
    64dc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    64e0:	62 e0       	ldi	r22, 0x02	; 2
    64e2:	ce 01       	movw	r24, r28
    64e4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    64e8:	6f ec       	ldi	r22, 0xCF	; 207
    64ea:	ce 01       	movw	r24, r28
    64ec:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    64f0:	60 e0       	ldi	r22, 0x00	; 0
    64f2:	ce 01       	movw	r24, r28
    64f4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    64f8:	61 ec       	ldi	r22, 0xC1	; 193
    64fa:	ce 01       	movw	r24, r28
    64fc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6500:	60 e3       	ldi	r22, 0x30	; 48
    6502:	ce 01       	movw	r24, r28
    6504:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6508:	68 ee       	ldi	r22, 0xE8	; 232
    650a:	ce 01       	movw	r24, r28
    650c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6510:	65 e8       	ldi	r22, 0x85	; 133
    6512:	ce 01       	movw	r24, r28
    6514:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6518:	60 e0       	ldi	r22, 0x00	; 0
    651a:	ce 01       	movw	r24, r28
    651c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6520:	68 e7       	ldi	r22, 0x78	; 120
    6522:	ce 01       	movw	r24, r28
    6524:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6528:	6a ee       	ldi	r22, 0xEA	; 234
    652a:	ce 01       	movw	r24, r28
    652c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6530:	60 e0       	ldi	r22, 0x00	; 0
    6532:	ce 01       	movw	r24, r28
    6534:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6538:	60 e0       	ldi	r22, 0x00	; 0
    653a:	ce 01       	movw	r24, r28
    653c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6540:	6d ee       	ldi	r22, 0xED	; 237
    6542:	ce 01       	movw	r24, r28
    6544:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6548:	64 e6       	ldi	r22, 0x64	; 100
    654a:	ce 01       	movw	r24, r28
    654c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6550:	63 e0       	ldi	r22, 0x03	; 3
    6552:	ce 01       	movw	r24, r28
    6554:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6558:	62 e1       	ldi	r22, 0x12	; 18
    655a:	ce 01       	movw	r24, r28
    655c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6560:	61 e8       	ldi	r22, 0x81	; 129
    6562:	ce 01       	movw	r24, r28
    6564:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6568:	67 ef       	ldi	r22, 0xF7	; 247
    656a:	ce 01       	movw	r24, r28
    656c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6570:	60 e2       	ldi	r22, 0x20	; 32
    6572:	ce 01       	movw	r24, r28
    6574:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6578:	60 ec       	ldi	r22, 0xC0	; 192
    657a:	ce 01       	movw	r24, r28
    657c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6580:	63 e2       	ldi	r22, 0x23	; 35
    6582:	ce 01       	movw	r24, r28
    6584:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6588:	61 ec       	ldi	r22, 0xC1	; 193
    658a:	ce 01       	movw	r24, r28
    658c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6590:	60 e1       	ldi	r22, 0x10	; 16
    6592:	ce 01       	movw	r24, r28
    6594:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6598:	65 ec       	ldi	r22, 0xC5	; 197
    659a:	ce 01       	movw	r24, r28
    659c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    65a0:	6e e3       	ldi	r22, 0x3E	; 62
    65a2:	ce 01       	movw	r24, r28
    65a4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    65a8:	68 e2       	ldi	r22, 0x28	; 40
    65aa:	ce 01       	movw	r24, r28
    65ac:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    65b0:	67 ec       	ldi	r22, 0xC7	; 199
    65b2:	ce 01       	movw	r24, r28
    65b4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    65b8:	66 e8       	ldi	r22, 0x86	; 134
    65ba:	ce 01       	movw	r24, r28
    65bc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    65c0:	66 e3       	ldi	r22, 0x36	; 54
    65c2:	ce 01       	movw	r24, r28
    65c4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    65c8:	68 e4       	ldi	r22, 0x48	; 72
    65ca:	ce 01       	movw	r24, r28
    65cc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    65d0:	6a e3       	ldi	r22, 0x3A	; 58
    65d2:	ce 01       	movw	r24, r28
    65d4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    65d8:	65 e5       	ldi	r22, 0x55	; 85
    65da:	ce 01       	movw	r24, r28
    65dc:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    65e0:	61 eb       	ldi	r22, 0xB1	; 177
    65e2:	ce 01       	movw	r24, r28
    65e4:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    65e8:	60 e0       	ldi	r22, 0x00	; 0
    65ea:	ce 01       	movw	r24, r28
    65ec:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    65f0:	68 e1       	ldi	r22, 0x18	; 24
    65f2:	ce 01       	movw	r24, r28
    65f4:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    65f8:	66 eb       	ldi	r22, 0xB6	; 182
    65fa:	ce 01       	movw	r24, r28
    65fc:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6600:	68 e0       	ldi	r22, 0x08	; 8
    6602:	ce 01       	movw	r24, r28
    6604:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6608:	62 e8       	ldi	r22, 0x82	; 130
    660a:	ce 01       	movw	r24, r28
    660c:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6610:	67 e2       	ldi	r22, 0x27	; 39
    6612:	ce 01       	movw	r24, r28
    6614:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6618:	61 e1       	ldi	r22, 0x11	; 17
    661a:	ce 01       	movw	r24, r28
    661c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6620:	68 e7       	ldi	r22, 0x78	; 120
    6622:	70 e0       	ldi	r23, 0x00	; 0
    6624:	80 e0       	ldi	r24, 0x00	; 0
    6626:	90 e0       	ldi	r25, 0x00	; 0
    6628:	9d c2       	rjmp	.+1338   	; 0x6b64 <_ZN4UTFT7InitLCDEh+0x2398>
    662a:	60 eb       	ldi	r22, 0xB0	; 176
    662c:	ce 01       	movw	r24, r28
    662e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6632:	6e e1       	ldi	r22, 0x1E	; 30
    6634:	ce 01       	movw	r24, r28
    6636:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    663a:	60 eb       	ldi	r22, 0xB0	; 176
    663c:	ce 01       	movw	r24, r28
    663e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6642:	60 e0       	ldi	r22, 0x00	; 0
    6644:	ce 01       	movw	r24, r28
    6646:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    664a:	63 eb       	ldi	r22, 0xB3	; 179
    664c:	ce 01       	movw	r24, r28
    664e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6652:	62 e0       	ldi	r22, 0x02	; 2
    6654:	ce 01       	movw	r24, r28
    6656:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    665a:	60 e0       	ldi	r22, 0x00	; 0
    665c:	ce 01       	movw	r24, r28
    665e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6662:	60 e0       	ldi	r22, 0x00	; 0
    6664:	ce 01       	movw	r24, r28
    6666:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    666a:	60 e1       	ldi	r22, 0x10	; 16
    666c:	ce 01       	movw	r24, r28
    666e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6672:	64 eb       	ldi	r22, 0xB4	; 180
    6674:	ce 01       	movw	r24, r28
    6676:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    667a:	60 e0       	ldi	r22, 0x00	; 0
    667c:	ce 01       	movw	r24, r28
    667e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6682:	60 ec       	ldi	r22, 0xC0	; 192
    6684:	ce 01       	movw	r24, r28
    6686:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    668a:	63 e0       	ldi	r22, 0x03	; 3
    668c:	ce 01       	movw	r24, r28
    668e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6692:	6b e3       	ldi	r22, 0x3B	; 59
    6694:	ce 01       	movw	r24, r28
    6696:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    669a:	60 e0       	ldi	r22, 0x00	; 0
    669c:	ce 01       	movw	r24, r28
    669e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66a2:	60 e0       	ldi	r22, 0x00	; 0
    66a4:	ce 01       	movw	r24, r28
    66a6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66aa:	60 e0       	ldi	r22, 0x00	; 0
    66ac:	ce 01       	movw	r24, r28
    66ae:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66b2:	61 e0       	ldi	r22, 0x01	; 1
    66b4:	ce 01       	movw	r24, r28
    66b6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66ba:	60 e0       	ldi	r22, 0x00	; 0
    66bc:	ce 01       	movw	r24, r28
    66be:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66c2:	63 e4       	ldi	r22, 0x43	; 67
    66c4:	ce 01       	movw	r24, r28
    66c6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66ca:	61 ec       	ldi	r22, 0xC1	; 193
    66cc:	ce 01       	movw	r24, r28
    66ce:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    66d2:	68 e0       	ldi	r22, 0x08	; 8
    66d4:	ce 01       	movw	r24, r28
    66d6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66da:	65 e1       	ldi	r22, 0x15	; 21
    66dc:	ce 01       	movw	r24, r28
    66de:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66e2:	68 e0       	ldi	r22, 0x08	; 8
    66e4:	ce 01       	movw	r24, r28
    66e6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66ea:	68 e0       	ldi	r22, 0x08	; 8
    66ec:	ce 01       	movw	r24, r28
    66ee:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    66f2:	64 ec       	ldi	r22, 0xC4	; 196
    66f4:	ce 01       	movw	r24, r28
    66f6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    66fa:	65 e1       	ldi	r22, 0x15	; 21
    66fc:	ce 01       	movw	r24, r28
    66fe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6702:	63 e0       	ldi	r22, 0x03	; 3
    6704:	ce 01       	movw	r24, r28
    6706:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    670a:	63 e0       	ldi	r22, 0x03	; 3
    670c:	ce 01       	movw	r24, r28
    670e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6712:	61 e0       	ldi	r22, 0x01	; 1
    6714:	ce 01       	movw	r24, r28
    6716:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    671a:	66 ec       	ldi	r22, 0xC6	; 198
    671c:	ce 01       	movw	r24, r28
    671e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6722:	62 e0       	ldi	r22, 0x02	; 2
    6724:	ce 01       	movw	r24, r28
    6726:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    672a:	68 ec       	ldi	r22, 0xC8	; 200
    672c:	ce 01       	movw	r24, r28
    672e:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6732:	6c e0       	ldi	r22, 0x0C	; 12
    6734:	ce 01       	movw	r24, r28
    6736:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    673a:	65 e0       	ldi	r22, 0x05	; 5
    673c:	ce 01       	movw	r24, r28
    673e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6742:	6a e0       	ldi	r22, 0x0A	; 10
    6744:	ce 01       	movw	r24, r28
    6746:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    674a:	6b e6       	ldi	r22, 0x6B	; 107
    674c:	ce 01       	movw	r24, r28
    674e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6752:	64 e0       	ldi	r22, 0x04	; 4
    6754:	ce 01       	movw	r24, r28
    6756:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    675a:	66 e0       	ldi	r22, 0x06	; 6
    675c:	ce 01       	movw	r24, r28
    675e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6762:	65 e1       	ldi	r22, 0x15	; 21
    6764:	ce 01       	movw	r24, r28
    6766:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    676a:	60 e1       	ldi	r22, 0x10	; 16
    676c:	ce 01       	movw	r24, r28
    676e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6772:	60 e0       	ldi	r22, 0x00	; 0
    6774:	ce 01       	movw	r24, r28
    6776:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    677a:	60 e6       	ldi	r22, 0x60	; 96
    677c:	ce 01       	movw	r24, r28
    677e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6782:	66 e3       	ldi	r22, 0x36	; 54
    6784:	ce 01       	movw	r24, r28
    6786:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    678a:	6a e0       	ldi	r22, 0x0A	; 10
    678c:	ce 01       	movw	r24, r28
    678e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6792:	6c e0       	ldi	r22, 0x0C	; 12
    6794:	ce 01       	movw	r24, r28
    6796:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    679a:	65 e5       	ldi	r22, 0x55	; 85
    679c:	ce 01       	movw	r24, r28
    679e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    67a2:	6a e3       	ldi	r22, 0x3A	; 58
    67a4:	ce 01       	movw	r24, r28
    67a6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    67aa:	65 e5       	ldi	r22, 0x55	; 85
    67ac:	ce 01       	movw	r24, r28
    67ae:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    67b2:	68 e3       	ldi	r22, 0x38	; 56
    67b4:	ce 01       	movw	r24, r28
    67b6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    67ba:	60 ed       	ldi	r22, 0xD0	; 208
    67bc:	ce 01       	movw	r24, r28
    67be:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    67c2:	67 e0       	ldi	r22, 0x07	; 7
    67c4:	ce 01       	movw	r24, r28
    67c6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    67ca:	67 e0       	ldi	r22, 0x07	; 7
    67cc:	ce 01       	movw	r24, r28
    67ce:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    67d2:	64 e1       	ldi	r22, 0x14	; 20
    67d4:	ce 01       	movw	r24, r28
    67d6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    67da:	62 ea       	ldi	r22, 0xA2	; 162
    67dc:	ce 01       	movw	r24, r28
    67de:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    67e2:	61 ed       	ldi	r22, 0xD1	; 209
    67e4:	ce 01       	movw	r24, r28
    67e6:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    67ea:	63 e0       	ldi	r22, 0x03	; 3
    67ec:	ce 01       	movw	r24, r28
    67ee:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    67f2:	6a e5       	ldi	r22, 0x5A	; 90
    67f4:	ce 01       	movw	r24, r28
    67f6:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    67fa:	60 e1       	ldi	r22, 0x10	; 16
    67fc:	ce 01       	movw	r24, r28
    67fe:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6802:	62 ed       	ldi	r22, 0xD2	; 210
    6804:	ce 01       	movw	r24, r28
    6806:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    680a:	63 e0       	ldi	r22, 0x03	; 3
    680c:	ce 01       	movw	r24, r28
    680e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6812:	64 e0       	ldi	r22, 0x04	; 4
    6814:	ce 01       	movw	r24, r28
    6816:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    681a:	64 e0       	ldi	r22, 0x04	; 4
    681c:	ce 01       	movw	r24, r28
    681e:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6822:	61 e1       	ldi	r22, 0x11	; 17
    6824:	ce 01       	movw	r24, r28
    6826:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    682a:	66 e9       	ldi	r22, 0x96	; 150
    682c:	70 e0       	ldi	r23, 0x00	; 0
    682e:	80 e0       	ldi	r24, 0x00	; 0
    6830:	90 e0       	ldi	r25, 0x00	; 0
    6832:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    6836:	6a e2       	ldi	r22, 0x2A	; 42
    6838:	ce 01       	movw	r24, r28
    683a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    683e:	60 e0       	ldi	r22, 0x00	; 0
    6840:	ce 01       	movw	r24, r28
    6842:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6846:	60 e0       	ldi	r22, 0x00	; 0
    6848:	ce 01       	movw	r24, r28
    684a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    684e:	61 e0       	ldi	r22, 0x01	; 1
    6850:	ce 01       	movw	r24, r28
    6852:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6856:	6f ed       	ldi	r22, 0xDF	; 223
    6858:	ce 01       	movw	r24, r28
    685a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    685e:	6b e2       	ldi	r22, 0x2B	; 43
    6860:	ce 01       	movw	r24, r28
    6862:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6866:	60 e0       	ldi	r22, 0x00	; 0
    6868:	ce 01       	movw	r24, r28
    686a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    686e:	60 e0       	ldi	r22, 0x00	; 0
    6870:	ce 01       	movw	r24, r28
    6872:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6876:	61 e0       	ldi	r22, 0x01	; 1
    6878:	ce 01       	movw	r24, r28
    687a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    687e:	6f e3       	ldi	r22, 0x3F	; 63
    6880:	ce 01       	movw	r24, r28
    6882:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6886:	64 e6       	ldi	r22, 0x64	; 100
    6888:	70 e0       	ldi	r23, 0x00	; 0
    688a:	80 e0       	ldi	r24, 0x00	; 0
    688c:	90 e0       	ldi	r25, 0x00	; 0
    688e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    6892:	69 e2       	ldi	r22, 0x29	; 41
    6894:	ce 01       	movw	r24, r28
    6896:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    689a:	6e e1       	ldi	r22, 0x1E	; 30
    689c:	70 e0       	ldi	r23, 0x00	; 0
    689e:	80 e0       	ldi	r24, 0x00	; 0
    68a0:	90 e0       	ldi	r25, 0x00	; 0
    68a2:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    68a6:	6c e2       	ldi	r22, 0x2C	; 44
    68a8:	ce 01       	movw	r24, r28
    68aa:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    68ae:	6e e1       	ldi	r22, 0x1E	; 30
    68b0:	70 e0       	ldi	r23, 0x00	; 0
    68b2:	80 e0       	ldi	r24, 0x00	; 0
    68b4:	90 e0       	ldi	r25, 0x00	; 0
    68b6:	5b c2       	rjmp	.+1206   	; 0x6d6e <_ZN4UTFT7InitLCDEh+0x25a2>
    68b8:	61 e1       	ldi	r22, 0x11	; 17
    68ba:	ce 01       	movw	r24, r28
    68bc:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    68c0:	62 e3       	ldi	r22, 0x32	; 50
    68c2:	70 e0       	ldi	r23, 0x00	; 0
    68c4:	80 e0       	ldi	r24, 0x00	; 0
    68c6:	90 e0       	ldi	r25, 0x00	; 0
    68c8:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    68cc:	62 ef       	ldi	r22, 0xF2	; 242
    68ce:	ce 01       	movw	r24, r28
    68d0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    68d4:	6c e1       	ldi	r22, 0x1C	; 28
    68d6:	ce 01       	movw	r24, r28
    68d8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    68dc:	63 ea       	ldi	r22, 0xA3	; 163
    68de:	ce 01       	movw	r24, r28
    68e0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    68e4:	62 e3       	ldi	r22, 0x32	; 50
    68e6:	ce 01       	movw	r24, r28
    68e8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    68ec:	62 e0       	ldi	r22, 0x02	; 2
    68ee:	ce 01       	movw	r24, r28
    68f0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    68f4:	62 eb       	ldi	r22, 0xB2	; 178
    68f6:	ce 01       	movw	r24, r28
    68f8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    68fc:	62 e1       	ldi	r22, 0x12	; 18
    68fe:	ce 01       	movw	r24, r28
    6900:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6904:	6f ef       	ldi	r22, 0xFF	; 255
    6906:	ce 01       	movw	r24, r28
    6908:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    690c:	62 e1       	ldi	r22, 0x12	; 18
    690e:	ce 01       	movw	r24, r28
    6910:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6914:	60 e0       	ldi	r22, 0x00	; 0
    6916:	ce 01       	movw	r24, r28
    6918:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    691c:	61 ef       	ldi	r22, 0xF1	; 241
    691e:	ce 01       	movw	r24, r28
    6920:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6924:	66 e3       	ldi	r22, 0x36	; 54
    6926:	ce 01       	movw	r24, r28
    6928:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    692c:	64 ea       	ldi	r22, 0xA4	; 164
    692e:	ce 01       	movw	r24, r28
    6930:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6934:	68 ef       	ldi	r22, 0xF8	; 248
    6936:	ce 01       	movw	r24, r28
    6938:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    693c:	61 e2       	ldi	r22, 0x21	; 33
    693e:	ce 01       	movw	r24, r28
    6940:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6944:	64 e0       	ldi	r22, 0x04	; 4
    6946:	ce 01       	movw	r24, r28
    6948:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    694c:	69 ef       	ldi	r22, 0xF9	; 249
    694e:	ce 01       	movw	r24, r28
    6950:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6954:	60 e0       	ldi	r22, 0x00	; 0
    6956:	ce 01       	movw	r24, r28
    6958:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    695c:	68 e0       	ldi	r22, 0x08	; 8
    695e:	ce 01       	movw	r24, r28
    6960:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6964:	60 ec       	ldi	r22, 0xC0	; 192
    6966:	ce 01       	movw	r24, r28
    6968:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    696c:	6d e0       	ldi	r22, 0x0D	; 13
    696e:	ce 01       	movw	r24, r28
    6970:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6974:	6d e0       	ldi	r22, 0x0D	; 13
    6976:	ce 01       	movw	r24, r28
    6978:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    697c:	61 ec       	ldi	r22, 0xC1	; 193
    697e:	ce 01       	movw	r24, r28
    6980:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6984:	63 e4       	ldi	r22, 0x43	; 67
    6986:	ce 01       	movw	r24, r28
    6988:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    698c:	60 e0       	ldi	r22, 0x00	; 0
    698e:	ce 01       	movw	r24, r28
    6990:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6994:	62 ec       	ldi	r22, 0xC2	; 194
    6996:	ce 01       	movw	r24, r28
    6998:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    699c:	60 e0       	ldi	r22, 0x00	; 0
    699e:	ce 01       	movw	r24, r28
    69a0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69a4:	65 ec       	ldi	r22, 0xC5	; 197
    69a6:	ce 01       	movw	r24, r28
    69a8:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    69ac:	60 e0       	ldi	r22, 0x00	; 0
    69ae:	ce 01       	movw	r24, r28
    69b0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69b4:	68 e4       	ldi	r22, 0x48	; 72
    69b6:	ce 01       	movw	r24, r28
    69b8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69bc:	66 eb       	ldi	r22, 0xB6	; 182
    69be:	ce 01       	movw	r24, r28
    69c0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    69c4:	60 e0       	ldi	r22, 0x00	; 0
    69c6:	ce 01       	movw	r24, r28
    69c8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69cc:	62 e2       	ldi	r22, 0x22	; 34
    69ce:	ce 01       	movw	r24, r28
    69d0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69d4:	6b e3       	ldi	r22, 0x3B	; 59
    69d6:	ce 01       	movw	r24, r28
    69d8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69dc:	60 ee       	ldi	r22, 0xE0	; 224
    69de:	ce 01       	movw	r24, r28
    69e0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    69e4:	6f e0       	ldi	r22, 0x0F	; 15
    69e6:	ce 01       	movw	r24, r28
    69e8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69ec:	64 e2       	ldi	r22, 0x24	; 36
    69ee:	ce 01       	movw	r24, r28
    69f0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69f4:	6c e1       	ldi	r22, 0x1C	; 28
    69f6:	ce 01       	movw	r24, r28
    69f8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    69fc:	6a e0       	ldi	r22, 0x0A	; 10
    69fe:	ce 01       	movw	r24, r28
    6a00:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a04:	6f e0       	ldi	r22, 0x0F	; 15
    6a06:	ce 01       	movw	r24, r28
    6a08:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a0c:	68 e0       	ldi	r22, 0x08	; 8
    6a0e:	ce 01       	movw	r24, r28
    6a10:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a14:	63 e4       	ldi	r22, 0x43	; 67
    6a16:	ce 01       	movw	r24, r28
    6a18:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a1c:	68 e8       	ldi	r22, 0x88	; 136
    6a1e:	ce 01       	movw	r24, r28
    6a20:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a24:	62 e3       	ldi	r22, 0x32	; 50
    6a26:	ce 01       	movw	r24, r28
    6a28:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a2c:	6f e0       	ldi	r22, 0x0F	; 15
    6a2e:	ce 01       	movw	r24, r28
    6a30:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a34:	60 e1       	ldi	r22, 0x10	; 16
    6a36:	ce 01       	movw	r24, r28
    6a38:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a3c:	66 e0       	ldi	r22, 0x06	; 6
    6a3e:	ce 01       	movw	r24, r28
    6a40:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a44:	6f e0       	ldi	r22, 0x0F	; 15
    6a46:	ce 01       	movw	r24, r28
    6a48:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a4c:	67 e0       	ldi	r22, 0x07	; 7
    6a4e:	ce 01       	movw	r24, r28
    6a50:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a54:	60 e0       	ldi	r22, 0x00	; 0
    6a56:	ce 01       	movw	r24, r28
    6a58:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a5c:	61 ee       	ldi	r22, 0xE1	; 225
    6a5e:	ce 01       	movw	r24, r28
    6a60:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6a64:	6f e0       	ldi	r22, 0x0F	; 15
    6a66:	ce 01       	movw	r24, r28
    6a68:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a6c:	68 e3       	ldi	r22, 0x38	; 56
    6a6e:	ce 01       	movw	r24, r28
    6a70:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a74:	60 e3       	ldi	r22, 0x30	; 48
    6a76:	ce 01       	movw	r24, r28
    6a78:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a7c:	69 e0       	ldi	r22, 0x09	; 9
    6a7e:	ce 01       	movw	r24, r28
    6a80:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a84:	6f e0       	ldi	r22, 0x0F	; 15
    6a86:	ce 01       	movw	r24, r28
    6a88:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a8c:	6f e0       	ldi	r22, 0x0F	; 15
    6a8e:	ce 01       	movw	r24, r28
    6a90:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a94:	6e e4       	ldi	r22, 0x4E	; 78
    6a96:	ce 01       	movw	r24, r28
    6a98:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6a9c:	67 e7       	ldi	r22, 0x77	; 119
    6a9e:	ce 01       	movw	r24, r28
    6aa0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6aa4:	6c e3       	ldi	r22, 0x3C	; 60
    6aa6:	ce 01       	movw	r24, r28
    6aa8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6aac:	67 e0       	ldi	r22, 0x07	; 7
    6aae:	ce 01       	movw	r24, r28
    6ab0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6ab4:	60 e1       	ldi	r22, 0x10	; 16
    6ab6:	ce 01       	movw	r24, r28
    6ab8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6abc:	65 e0       	ldi	r22, 0x05	; 5
    6abe:	ce 01       	movw	r24, r28
    6ac0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6ac4:	63 e2       	ldi	r22, 0x23	; 35
    6ac6:	ce 01       	movw	r24, r28
    6ac8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6acc:	6b e1       	ldi	r22, 0x1B	; 27
    6ace:	ce 01       	movw	r24, r28
    6ad0:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6ad4:	60 e0       	ldi	r22, 0x00	; 0
    6ad6:	ce 01       	movw	r24, r28
    6ad8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6adc:	60 e2       	ldi	r22, 0x20	; 32
    6ade:	ce 01       	movw	r24, r28
    6ae0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6ae4:	60 e0       	ldi	r22, 0x00	; 0
    6ae6:	ce 01       	movw	r24, r28
    6ae8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6aec:	66 e3       	ldi	r22, 0x36	; 54
    6aee:	ce 01       	movw	r24, r28
    6af0:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6af4:	6a e0       	ldi	r22, 0x0A	; 10
    6af6:	ce 01       	movw	r24, r28
    6af8:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6afc:	6a e3       	ldi	r22, 0x3A	; 58
    6afe:	ce 01       	movw	r24, r28
    6b00:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6b04:	65 e5       	ldi	r22, 0x55	; 85
    6b06:	ce 01       	movw	r24, r28
    6b08:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b0c:	6a e2       	ldi	r22, 0x2A	; 42
    6b0e:	ce 01       	movw	r24, r28
    6b10:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6b14:	60 e0       	ldi	r22, 0x00	; 0
    6b16:	ce 01       	movw	r24, r28
    6b18:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b1c:	60 e0       	ldi	r22, 0x00	; 0
    6b1e:	ce 01       	movw	r24, r28
    6b20:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b24:	61 e0       	ldi	r22, 0x01	; 1
    6b26:	ce 01       	movw	r24, r28
    6b28:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b2c:	6f ed       	ldi	r22, 0xDF	; 223
    6b2e:	ce 01       	movw	r24, r28
    6b30:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b34:	6b e2       	ldi	r22, 0x2B	; 43
    6b36:	ce 01       	movw	r24, r28
    6b38:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6b3c:	60 e0       	ldi	r22, 0x00	; 0
    6b3e:	ce 01       	movw	r24, r28
    6b40:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b44:	60 e0       	ldi	r22, 0x00	; 0
    6b46:	ce 01       	movw	r24, r28
    6b48:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b4c:	61 e0       	ldi	r22, 0x01	; 1
    6b4e:	ce 01       	movw	r24, r28
    6b50:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b54:	6f e3       	ldi	r22, 0x3F	; 63
    6b56:	ce 01       	movw	r24, r28
    6b58:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6b5c:	62 e3       	ldi	r22, 0x32	; 50
    6b5e:	70 e0       	ldi	r23, 0x00	; 0
    6b60:	80 e0       	ldi	r24, 0x00	; 0
    6b62:	90 e0       	ldi	r25, 0x00	; 0
    6b64:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    6b68:	69 e2       	ldi	r22, 0x29	; 41
    6b6a:	ce 01       	movw	r24, r28
    6b6c:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6b70:	6c e2       	ldi	r22, 0x2C	; 44
    6b72:	0c 94 e0 27 	jmp	0x4fc0	; 0x4fc0 <_ZN4UTFT7InitLCDEh+0x7f4>
    6b76:	8c 81       	ldd	r24, Y+4	; 0x04
    6b78:	81 30       	cpi	r24, 0x01	; 1
    6b7a:	11 f4       	brne	.+4      	; 0x6b80 <_ZN4UTFT7InitLCDEh+0x23b4>
    6b7c:	1c 82       	std	Y+4, r1	; 0x04
    6b7e:	02 c0       	rjmp	.+4      	; 0x6b84 <_ZN4UTFT7InitLCDEh+0x23b8>
    6b80:	81 e0       	ldi	r24, 0x01	; 1
    6b82:	8c 83       	std	Y+4, r24	; 0x04
    6b84:	6f e0       	ldi	r22, 0x0F	; 15
    6b86:	ce 01       	movw	r24, r28
    6b88:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6b8c:	40 e1       	ldi	r20, 0x10	; 16
    6b8e:	50 e0       	ldi	r21, 0x00	; 0
    6b90:	61 e0       	ldi	r22, 0x01	; 1
    6b92:	ce 01       	movw	r24, r28
    6b94:	0e 94 96 22 	call	0x452c	; 0x452c <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6b98:	6f e0       	ldi	r22, 0x0F	; 15
    6b9a:	0c 94 e0 27 	jmp	0x4fc0	; 0x4fc0 <_ZN4UTFT7InitLCDEh+0x7f4>
    6b9e:	69 eb       	ldi	r22, 0xB9	; 185
    6ba0:	ce 01       	movw	r24, r28
    6ba2:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6ba6:	6f ef       	ldi	r22, 0xFF	; 255
    6ba8:	ce 01       	movw	r24, r28
    6baa:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6bae:	63 e8       	ldi	r22, 0x83	; 131
    6bb0:	ce 01       	movw	r24, r28
    6bb2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6bb6:	63 e5       	ldi	r22, 0x53	; 83
    6bb8:	ce 01       	movw	r24, r28
    6bba:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6bbe:	60 eb       	ldi	r22, 0xB0	; 176
    6bc0:	ce 01       	movw	r24, r28
    6bc2:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6bc6:	6c e3       	ldi	r22, 0x3C	; 60
    6bc8:	ce 01       	movw	r24, r28
    6bca:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6bce:	61 e0       	ldi	r22, 0x01	; 1
    6bd0:	ce 01       	movw	r24, r28
    6bd2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6bd6:	66 eb       	ldi	r22, 0xB6	; 182
    6bd8:	ce 01       	movw	r24, r28
    6bda:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6bde:	64 e9       	ldi	r22, 0x94	; 148
    6be0:	ce 01       	movw	r24, r28
    6be2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6be6:	6c e6       	ldi	r22, 0x6C	; 108
    6be8:	ce 01       	movw	r24, r28
    6bea:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6bee:	60 e5       	ldi	r22, 0x50	; 80
    6bf0:	ce 01       	movw	r24, r28
    6bf2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6bf6:	61 eb       	ldi	r22, 0xB1	; 177
    6bf8:	ce 01       	movw	r24, r28
    6bfa:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6bfe:	60 e0       	ldi	r22, 0x00	; 0
    6c00:	ce 01       	movw	r24, r28
    6c02:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c06:	61 e0       	ldi	r22, 0x01	; 1
    6c08:	ce 01       	movw	r24, r28
    6c0a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c0e:	6b e1       	ldi	r22, 0x1B	; 27
    6c10:	ce 01       	movw	r24, r28
    6c12:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c16:	63 e0       	ldi	r22, 0x03	; 3
    6c18:	ce 01       	movw	r24, r28
    6c1a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c1e:	61 e0       	ldi	r22, 0x01	; 1
    6c20:	ce 01       	movw	r24, r28
    6c22:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c26:	68 e0       	ldi	r22, 0x08	; 8
    6c28:	ce 01       	movw	r24, r28
    6c2a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c2e:	67 e7       	ldi	r22, 0x77	; 119
    6c30:	ce 01       	movw	r24, r28
    6c32:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c36:	69 e8       	ldi	r22, 0x89	; 137
    6c38:	ce 01       	movw	r24, r28
    6c3a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c3e:	60 ee       	ldi	r22, 0xE0	; 224
    6c40:	ce 01       	movw	r24, r28
    6c42:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6c46:	60 e5       	ldi	r22, 0x50	; 80
    6c48:	ce 01       	movw	r24, r28
    6c4a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c4e:	67 e7       	ldi	r22, 0x77	; 119
    6c50:	ce 01       	movw	r24, r28
    6c52:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c56:	60 e4       	ldi	r22, 0x40	; 64
    6c58:	ce 01       	movw	r24, r28
    6c5a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c5e:	68 e0       	ldi	r22, 0x08	; 8
    6c60:	ce 01       	movw	r24, r28
    6c62:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c66:	6f eb       	ldi	r22, 0xBF	; 191
    6c68:	ce 01       	movw	r24, r28
    6c6a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c6e:	60 e0       	ldi	r22, 0x00	; 0
    6c70:	ce 01       	movw	r24, r28
    6c72:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c76:	63 e0       	ldi	r22, 0x03	; 3
    6c78:	ce 01       	movw	r24, r28
    6c7a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c7e:	6f e0       	ldi	r22, 0x0F	; 15
    6c80:	ce 01       	movw	r24, r28
    6c82:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c86:	60 e0       	ldi	r22, 0x00	; 0
    6c88:	ce 01       	movw	r24, r28
    6c8a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c8e:	61 e0       	ldi	r22, 0x01	; 1
    6c90:	ce 01       	movw	r24, r28
    6c92:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c96:	63 e7       	ldi	r22, 0x73	; 115
    6c98:	ce 01       	movw	r24, r28
    6c9a:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6c9e:	60 e0       	ldi	r22, 0x00	; 0
    6ca0:	ce 01       	movw	r24, r28
    6ca2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6ca6:	62 e7       	ldi	r22, 0x72	; 114
    6ca8:	ce 01       	movw	r24, r28
    6caa:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cae:	63 e0       	ldi	r22, 0x03	; 3
    6cb0:	ce 01       	movw	r24, r28
    6cb2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cb6:	60 eb       	ldi	r22, 0xB0	; 176
    6cb8:	ce 01       	movw	r24, r28
    6cba:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cbe:	6f e0       	ldi	r22, 0x0F	; 15
    6cc0:	ce 01       	movw	r24, r28
    6cc2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cc6:	68 e0       	ldi	r22, 0x08	; 8
    6cc8:	ce 01       	movw	r24, r28
    6cca:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cce:	60 e0       	ldi	r22, 0x00	; 0
    6cd0:	ce 01       	movw	r24, r28
    6cd2:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cd6:	6f e0       	ldi	r22, 0x0F	; 15
    6cd8:	ce 01       	movw	r24, r28
    6cda:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cde:	6a e3       	ldi	r22, 0x3A	; 58
    6ce0:	ce 01       	movw	r24, r28
    6ce2:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6ce6:	65 e0       	ldi	r22, 0x05	; 5
    6ce8:	ce 01       	movw	r24, r28
    6cea:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cee:	66 e3       	ldi	r22, 0x36	; 54
    6cf0:	ce 01       	movw	r24, r28
    6cf2:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6cf6:	60 ec       	ldi	r22, 0xC0	; 192
    6cf8:	ce 01       	movw	r24, r28
    6cfa:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6cfe:	61 e1       	ldi	r22, 0x11	; 17
    6d00:	ce 01       	movw	r24, r28
    6d02:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6d06:	66 e9       	ldi	r22, 0x96	; 150
    6d08:	70 e0       	ldi	r23, 0x00	; 0
    6d0a:	80 e0       	ldi	r24, 0x00	; 0
    6d0c:	90 e0       	ldi	r25, 0x00	; 0
    6d0e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    6d12:	69 e2       	ldi	r22, 0x29	; 41
    6d14:	ce 01       	movw	r24, r28
    6d16:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6d1a:	66 e9       	ldi	r22, 0x96	; 150
    6d1c:	70 e0       	ldi	r23, 0x00	; 0
    6d1e:	80 e0       	ldi	r24, 0x00	; 0
    6d20:	90 e0       	ldi	r25, 0x00	; 0
    6d22:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    6d26:	6d e2       	ldi	r22, 0x2D	; 45
    6d28:	ce 01       	movw	r24, r28
    6d2a:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6d2e:	10 e0       	ldi	r17, 0x00	; 0
    6d30:	61 2f       	mov	r22, r17
    6d32:	ce 01       	movw	r24, r28
    6d34:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6d38:	1e 5f       	subi	r17, 0xFE	; 254
    6d3a:	10 34       	cpi	r17, 0x40	; 64
    6d3c:	c9 f7       	brne	.-14     	; 0x6d30 <_ZN4UTFT7InitLCDEh+0x2564>
    6d3e:	10 e0       	ldi	r17, 0x00	; 0
    6d40:	61 2f       	mov	r22, r17
    6d42:	ce 01       	movw	r24, r28
    6d44:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6d48:	1f 5f       	subi	r17, 0xFF	; 255
    6d4a:	10 34       	cpi	r17, 0x40	; 64
    6d4c:	c9 f7       	brne	.-14     	; 0x6d40 <_ZN4UTFT7InitLCDEh+0x2574>
    6d4e:	10 e0       	ldi	r17, 0x00	; 0
    6d50:	61 2f       	mov	r22, r17
    6d52:	ce 01       	movw	r24, r28
    6d54:	0e 94 7e 22 	call	0x44fc	; 0x44fc <_ZN4UTFT14LCD_Write_DATAEc>
    6d58:	1e 5f       	subi	r17, 0xFE	; 254
    6d5a:	10 34       	cpi	r17, 0x40	; 64
    6d5c:	c9 f7       	brne	.-14     	; 0x6d50 <_ZN4UTFT7InitLCDEh+0x2584>
    6d5e:	6c e2       	ldi	r22, 0x2C	; 44
    6d60:	ce 01       	movw	r24, r28
    6d62:	0e 94 42 22 	call	0x4484	; 0x4484 <_ZN4UTFT13LCD_Write_COMEc>
    6d66:	66 e9       	ldi	r22, 0x96	; 150
    6d68:	70 e0       	ldi	r23, 0x00	; 0
    6d6a:	80 e0       	ldi	r24, 0x00	; 0
    6d6c:	90 e0       	ldi	r25, 0x00	; 0
    6d6e:	0e 94 68 47 	call	0x8ed0	; 0x8ed0 <delay>
    6d72:	ec 89       	ldd	r30, Y+20	; 0x14
    6d74:	fd 89       	ldd	r31, Y+21	; 0x15
    6d76:	90 81       	ld	r25, Z
    6d78:	88 a1       	ldd	r24, Y+32	; 0x20
    6d7a:	89 2b       	or	r24, r25
    6d7c:	80 83       	st	Z, r24
    6d7e:	8f ef       	ldi	r24, 0xFF	; 255
    6d80:	88 83       	st	Y, r24
    6d82:	89 83       	std	Y+1, r24	; 0x01
    6d84:	1a 82       	std	Y+2, r1	; 0x02
    6d86:	1b 82       	std	Y+3, r1	; 0x03
    6d88:	18 aa       	std	Y+48, r1	; 0x30
    6d8a:	1b a6       	std	Y+43, r1	; 0x2b
    6d8c:	1a a6       	std	Y+42, r1	; 0x2a
    6d8e:	df 91       	pop	r29
    6d90:	cf 91       	pop	r28
    6d92:	1f 91       	pop	r17
    6d94:	0f 91       	pop	r16
    6d96:	08 95       	ret

00006d98 <_ZN4UTFT5clrXYEv>:
    6d98:	0f 93       	push	r16
    6d9a:	1f 93       	push	r17
    6d9c:	fc 01       	movw	r30, r24
    6d9e:	64 81       	ldd	r22, Z+4	; 0x04
    6da0:	21 85       	ldd	r18, Z+9	; 0x09
    6da2:	32 85       	ldd	r19, Z+10	; 0x0a
    6da4:	45 81       	ldd	r20, Z+5	; 0x05
    6da6:	56 81       	ldd	r21, Z+6	; 0x06
    6da8:	61 11       	cpse	r22, r1
    6daa:	03 c0       	rjmp	.+6      	; 0x6db2 <_ZN4UTFT5clrXYEv+0x1a>
    6dac:	89 01       	movw	r16, r18
    6dae:	9a 01       	movw	r18, r20
    6db0:	01 c0       	rjmp	.+2      	; 0x6db4 <_ZN4UTFT5clrXYEv+0x1c>
    6db2:	8a 01       	movw	r16, r20
    6db4:	40 e0       	ldi	r20, 0x00	; 0
    6db6:	50 e0       	ldi	r21, 0x00	; 0
    6db8:	60 e0       	ldi	r22, 0x00	; 0
    6dba:	70 e0       	ldi	r23, 0x00	; 0
    6dbc:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
    6dc0:	1f 91       	pop	r17
    6dc2:	0f 91       	pop	r16
    6dc4:	08 95       	ret

00006dc6 <_ZN4UTFT6clrScrEv>:
    6dc6:	cf 92       	push	r12
    6dc8:	df 92       	push	r13
    6dca:	ef 92       	push	r14
    6dcc:	ff 92       	push	r15
    6dce:	0f 93       	push	r16
    6dd0:	1f 93       	push	r17
    6dd2:	cf 93       	push	r28
    6dd4:	df 93       	push	r29
    6dd6:	ec 01       	movw	r28, r24
    6dd8:	ec 89       	ldd	r30, Y+20	; 0x14
    6dda:	fd 89       	ldd	r31, Y+21	; 0x15
    6ddc:	90 81       	ld	r25, Z
    6dde:	88 a1       	ldd	r24, Y+32	; 0x20
    6de0:	80 95       	com	r24
    6de2:	89 23       	and	r24, r25
    6de4:	80 83       	st	Z, r24
    6de6:	ce 01       	movw	r24, r28
    6de8:	d7 df       	rcall	.-82     	; 0x6d98 <_ZN4UTFT5clrXYEv>
    6dea:	8e 85       	ldd	r24, Y+14	; 0x0e
    6dec:	81 30       	cpi	r24, 0x01	; 1
    6dee:	31 f0       	breq	.+12     	; 0x6dfc <_ZN4UTFT6clrScrEv+0x36>
    6df0:	e8 89       	ldd	r30, Y+16	; 0x10
    6df2:	f9 89       	ldd	r31, Y+17	; 0x11
    6df4:	90 81       	ld	r25, Z
    6df6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6df8:	89 2b       	or	r24, r25
    6dfa:	80 83       	st	Z, r24
    6dfc:	ee 85       	ldd	r30, Y+14	; 0x0e
    6dfe:	4d 81       	ldd	r20, Y+5	; 0x05
    6e00:	5e 81       	ldd	r21, Y+6	; 0x06
    6e02:	6f 81       	ldd	r22, Y+7	; 0x07
    6e04:	78 85       	ldd	r23, Y+8	; 0x08
    6e06:	89 85       	ldd	r24, Y+9	; 0x09
    6e08:	9a 85       	ldd	r25, Y+10	; 0x0a
    6e0a:	ab 85       	ldd	r26, Y+11	; 0x0b
    6e0c:	bc 85       	ldd	r27, Y+12	; 0x0c
    6e0e:	e0 31       	cpi	r30, 0x10	; 16
    6e10:	c1 f4       	brne	.+48     	; 0x6e42 <_ZN4UTFT6clrScrEv+0x7c>
    6e12:	9a 01       	movw	r18, r20
    6e14:	ab 01       	movw	r20, r22
    6e16:	2f 5f       	subi	r18, 0xFF	; 255
    6e18:	3f 4f       	sbci	r19, 0xFF	; 255
    6e1a:	4f 4f       	sbci	r20, 0xFF	; 255
    6e1c:	5f 4f       	sbci	r21, 0xFF	; 255
    6e1e:	bc 01       	movw	r22, r24
    6e20:	cd 01       	movw	r24, r26
    6e22:	6f 5f       	subi	r22, 0xFF	; 255
    6e24:	7f 4f       	sbci	r23, 0xFF	; 255
    6e26:	8f 4f       	sbci	r24, 0xFF	; 255
    6e28:	9f 4f       	sbci	r25, 0xFF	; 255
    6e2a:	0e 94 a3 4a 	call	0x9546	; 0x9546 <__mulsi3>
    6e2e:	8b 01       	movw	r16, r22
    6e30:	9c 01       	movw	r18, r24
    6e32:	40 e0       	ldi	r20, 0x00	; 0
    6e34:	50 e0       	ldi	r21, 0x00	; 0
    6e36:	60 e0       	ldi	r22, 0x00	; 0
    6e38:	70 e0       	ldi	r23, 0x00	; 0
    6e3a:	ce 01       	movw	r24, r28
    6e3c:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <_ZN4UTFT13_fast_fill_16Eiil>
    6e40:	4f c0       	rjmp	.+158    	; 0x6ee0 <_ZN4UTFT6clrScrEv+0x11a>
    6e42:	e8 30       	cpi	r30, 0x08	; 8
    6e44:	21 f0       	breq	.+8      	; 0x6e4e <_ZN4UTFT6clrScrEv+0x88>
    6e46:	c1 2c       	mov	r12, r1
    6e48:	d1 2c       	mov	r13, r1
    6e4a:	76 01       	movw	r14, r12
    6e4c:	23 c0       	rjmp	.+70     	; 0x6e94 <_ZN4UTFT6clrScrEv+0xce>
    6e4e:	9a 01       	movw	r18, r20
    6e50:	ab 01       	movw	r20, r22
    6e52:	2f 5f       	subi	r18, 0xFF	; 255
    6e54:	3f 4f       	sbci	r19, 0xFF	; 255
    6e56:	4f 4f       	sbci	r20, 0xFF	; 255
    6e58:	5f 4f       	sbci	r21, 0xFF	; 255
    6e5a:	bc 01       	movw	r22, r24
    6e5c:	cd 01       	movw	r24, r26
    6e5e:	6f 5f       	subi	r22, 0xFF	; 255
    6e60:	7f 4f       	sbci	r23, 0xFF	; 255
    6e62:	8f 4f       	sbci	r24, 0xFF	; 255
    6e64:	9f 4f       	sbci	r25, 0xFF	; 255
    6e66:	0e 94 a3 4a 	call	0x9546	; 0x9546 <__mulsi3>
    6e6a:	9b 01       	movw	r18, r22
    6e6c:	ac 01       	movw	r20, r24
    6e6e:	60 e0       	ldi	r22, 0x00	; 0
    6e70:	70 e0       	ldi	r23, 0x00	; 0
    6e72:	ce 01       	movw	r24, r28
    6e74:	0e 94 8c 1e 	call	0x3d18	; 0x3d18 <_ZN4UTFT12_fast_fill_8Eil>
    6e78:	33 c0       	rjmp	.+102    	; 0x6ee0 <_ZN4UTFT6clrScrEv+0x11a>
    6e7a:	2e 85       	ldd	r18, Y+14	; 0x0e
    6e7c:	21 30       	cpi	r18, 0x01	; 1
    6e7e:	31 f1       	breq	.+76     	; 0x6ecc <_ZN4UTFT6clrScrEv+0x106>
    6e80:	40 e0       	ldi	r20, 0x00	; 0
    6e82:	60 e0       	ldi	r22, 0x00	; 0
    6e84:	ce 01       	movw	r24, r28
    6e86:	0e 94 b3 1b 	call	0x3766	; 0x3766 <_ZN4UTFT12LCD_Writ_BusEcch>
    6e8a:	8f ef       	ldi	r24, 0xFF	; 255
    6e8c:	c8 1a       	sub	r12, r24
    6e8e:	d8 0a       	sbc	r13, r24
    6e90:	e8 0a       	sbc	r14, r24
    6e92:	f8 0a       	sbc	r15, r24
    6e94:	8d 81       	ldd	r24, Y+5	; 0x05
    6e96:	9e 81       	ldd	r25, Y+6	; 0x06
    6e98:	af 81       	ldd	r26, Y+7	; 0x07
    6e9a:	b8 85       	ldd	r27, Y+8	; 0x08
    6e9c:	9c 01       	movw	r18, r24
    6e9e:	ad 01       	movw	r20, r26
    6ea0:	2f 5f       	subi	r18, 0xFF	; 255
    6ea2:	3f 4f       	sbci	r19, 0xFF	; 255
    6ea4:	4f 4f       	sbci	r20, 0xFF	; 255
    6ea6:	5f 4f       	sbci	r21, 0xFF	; 255
    6ea8:	89 85       	ldd	r24, Y+9	; 0x09
    6eaa:	9a 85       	ldd	r25, Y+10	; 0x0a
    6eac:	ab 85       	ldd	r26, Y+11	; 0x0b
    6eae:	bc 85       	ldd	r27, Y+12	; 0x0c
    6eb0:	bc 01       	movw	r22, r24
    6eb2:	cd 01       	movw	r24, r26
    6eb4:	6f 5f       	subi	r22, 0xFF	; 255
    6eb6:	7f 4f       	sbci	r23, 0xFF	; 255
    6eb8:	8f 4f       	sbci	r24, 0xFF	; 255
    6eba:	9f 4f       	sbci	r25, 0xFF	; 255
    6ebc:	0e 94 a3 4a 	call	0x9546	; 0x9546 <__mulsi3>
    6ec0:	c6 16       	cp	r12, r22
    6ec2:	d7 06       	cpc	r13, r23
    6ec4:	e8 06       	cpc	r14, r24
    6ec6:	f9 06       	cpc	r15, r25
    6ec8:	c4 f2       	brlt	.-80     	; 0x6e7a <_ZN4UTFT6clrScrEv+0xb4>
    6eca:	0a c0       	rjmp	.+20     	; 0x6ee0 <_ZN4UTFT6clrScrEv+0x11a>
    6ecc:	21 e0       	ldi	r18, 0x01	; 1
    6ece:	40 e0       	ldi	r20, 0x00	; 0
    6ed0:	61 e0       	ldi	r22, 0x01	; 1
    6ed2:	ce 01       	movw	r24, r28
    6ed4:	0e 94 b3 1b 	call	0x3766	; 0x3766 <_ZN4UTFT12LCD_Writ_BusEcch>
    6ed8:	2e 85       	ldd	r18, Y+14	; 0x0e
    6eda:	40 e0       	ldi	r20, 0x00	; 0
    6edc:	61 e0       	ldi	r22, 0x01	; 1
    6ede:	d2 cf       	rjmp	.-92     	; 0x6e84 <_ZN4UTFT6clrScrEv+0xbe>
    6ee0:	ec 89       	ldd	r30, Y+20	; 0x14
    6ee2:	fd 89       	ldd	r31, Y+21	; 0x15
    6ee4:	90 81       	ld	r25, Z
    6ee6:	88 a1       	ldd	r24, Y+32	; 0x20
    6ee8:	89 2b       	or	r24, r25
    6eea:	80 83       	st	Z, r24
    6eec:	df 91       	pop	r29
    6eee:	cf 91       	pop	r28
    6ef0:	1f 91       	pop	r17
    6ef2:	0f 91       	pop	r16
    6ef4:	ff 90       	pop	r15
    6ef6:	ef 90       	pop	r14
    6ef8:	df 90       	pop	r13
    6efa:	cf 90       	pop	r12
    6efc:	08 95       	ret

00006efe <_ZN4UTFT8setColorEj>:
    6efe:	fc 01       	movw	r30, r24
    6f00:	70 83       	st	Z, r23
    6f02:	61 83       	std	Z+1, r22	; 0x01
    6f04:	08 95       	ret

00006f06 <_ZN4UTFT12setBackColorEm>:
    6f06:	fc 01       	movw	r30, r24
    6f08:	4f 3f       	cpi	r20, 0xFF	; 255
    6f0a:	8f ef       	ldi	r24, 0xFF	; 255
    6f0c:	58 07       	cpc	r21, r24
    6f0e:	68 07       	cpc	r22, r24
    6f10:	78 07       	cpc	r23, r24
    6f12:	19 f4       	brne	.+6      	; 0x6f1a <_ZN4UTFT12setBackColorEm+0x14>
    6f14:	81 e0       	ldi	r24, 0x01	; 1
    6f16:	80 ab       	std	Z+48, r24	; 0x30
    6f18:	08 95       	ret
    6f1a:	52 83       	std	Z+2, r21	; 0x02
    6f1c:	43 83       	std	Z+3, r20	; 0x03
    6f1e:	10 aa       	std	Z+48, r1	; 0x30
    6f20:	08 95       	ret

00006f22 <_ZN4UTFT8setPixelEj>:
    6f22:	46 2f       	mov	r20, r22
    6f24:	67 2f       	mov	r22, r23
    6f26:	0c 94 5a 22 	jmp	0x44b4	; 0x44b4 <_ZN4UTFT14LCD_Write_DATAEcc>

00006f2a <_ZN4UTFT9drawHLineEiii>:
    6f2a:	ef 92       	push	r14
    6f2c:	ff 92       	push	r15
    6f2e:	0f 93       	push	r16
    6f30:	1f 93       	push	r17
    6f32:	cf 93       	push	r28
    6f34:	df 93       	push	r29
    6f36:	ec 01       	movw	r28, r24
    6f38:	79 01       	movw	r14, r18
    6f3a:	37 ff       	sbrs	r19, 7
    6f3c:	05 c0       	rjmp	.+10     	; 0x6f48 <_ZN4UTFT9drawHLineEiii+0x1e>
    6f3e:	62 0f       	add	r22, r18
    6f40:	73 1f       	adc	r23, r19
    6f42:	f1 94       	neg	r15
    6f44:	e1 94       	neg	r14
    6f46:	f1 08       	sbc	r15, r1
    6f48:	ec 89       	ldd	r30, Y+20	; 0x14
    6f4a:	fd 89       	ldd	r31, Y+21	; 0x15
    6f4c:	90 81       	ld	r25, Z
    6f4e:	88 a1       	ldd	r24, Y+32	; 0x20
    6f50:	80 95       	com	r24
    6f52:	89 23       	and	r24, r25
    6f54:	80 83       	st	Z, r24
    6f56:	9b 01       	movw	r18, r22
    6f58:	2e 0d       	add	r18, r14
    6f5a:	3f 1d       	adc	r19, r15
    6f5c:	8a 01       	movw	r16, r20
    6f5e:	ce 01       	movw	r24, r28
    6f60:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
    6f64:	8e 85       	ldd	r24, Y+14	; 0x0e
    6f66:	80 31       	cpi	r24, 0x10	; 16
    6f68:	91 f4       	brne	.+36     	; 0x6f8e <_ZN4UTFT9drawHLineEiii+0x64>
    6f6a:	e8 89       	ldd	r30, Y+16	; 0x10
    6f6c:	f9 89       	ldd	r31, Y+17	; 0x11
    6f6e:	90 81       	ld	r25, Z
    6f70:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6f72:	89 2b       	or	r24, r25
    6f74:	80 83       	st	Z, r24
    6f76:	87 01       	movw	r16, r14
    6f78:	ff 0c       	add	r15, r15
    6f7a:	22 0b       	sbc	r18, r18
    6f7c:	33 0b       	sbc	r19, r19
    6f7e:	49 81       	ldd	r20, Y+1	; 0x01
    6f80:	50 e0       	ldi	r21, 0x00	; 0
    6f82:	68 81       	ld	r22, Y
    6f84:	70 e0       	ldi	r23, 0x00	; 0
    6f86:	ce 01       	movw	r24, r28
    6f88:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <_ZN4UTFT13_fast_fill_16Eiil>
    6f8c:	22 c0       	rjmp	.+68     	; 0x6fd2 <_ZN4UTFT9drawHLineEiii+0xa8>
    6f8e:	88 30       	cpi	r24, 0x08	; 8
    6f90:	a1 f4       	brne	.+40     	; 0x6fba <_ZN4UTFT9drawHLineEiii+0x90>
    6f92:	98 81       	ld	r25, Y
    6f94:	89 81       	ldd	r24, Y+1	; 0x01
    6f96:	98 13       	cpse	r25, r24
    6f98:	10 c0       	rjmp	.+32     	; 0x6fba <_ZN4UTFT9drawHLineEiii+0x90>
    6f9a:	e8 89       	ldd	r30, Y+16	; 0x10
    6f9c:	f9 89       	ldd	r31, Y+17	; 0x11
    6f9e:	90 81       	ld	r25, Z
    6fa0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6fa2:	89 2b       	or	r24, r25
    6fa4:	80 83       	st	Z, r24
    6fa6:	97 01       	movw	r18, r14
    6fa8:	ff 0c       	add	r15, r15
    6faa:	44 0b       	sbc	r20, r20
    6fac:	55 0b       	sbc	r21, r21
    6fae:	68 81       	ld	r22, Y
    6fb0:	70 e0       	ldi	r23, 0x00	; 0
    6fb2:	ce 01       	movw	r24, r28
    6fb4:	0e 94 8c 1e 	call	0x3d18	; 0x3d18 <_ZN4UTFT12_fast_fill_8Eil>
    6fb8:	0c c0       	rjmp	.+24     	; 0x6fd2 <_ZN4UTFT9drawHLineEiii+0xa8>
    6fba:	00 e0       	ldi	r16, 0x00	; 0
    6fbc:	10 e0       	ldi	r17, 0x00	; 0
    6fbe:	49 81       	ldd	r20, Y+1	; 0x01
    6fc0:	68 81       	ld	r22, Y
    6fc2:	ce 01       	movw	r24, r28
    6fc4:	0e 94 5a 22 	call	0x44b4	; 0x44b4 <_ZN4UTFT14LCD_Write_DATAEcc>
    6fc8:	0f 5f       	subi	r16, 0xFF	; 255
    6fca:	1f 4f       	sbci	r17, 0xFF	; 255
    6fcc:	e0 16       	cp	r14, r16
    6fce:	f1 06       	cpc	r15, r17
    6fd0:	b4 f7       	brge	.-20     	; 0x6fbe <_ZN4UTFT9drawHLineEiii+0x94>
    6fd2:	ec 89       	ldd	r30, Y+20	; 0x14
    6fd4:	fd 89       	ldd	r31, Y+21	; 0x15
    6fd6:	90 81       	ld	r25, Z
    6fd8:	88 a1       	ldd	r24, Y+32	; 0x20
    6fda:	89 2b       	or	r24, r25
    6fdc:	80 83       	st	Z, r24
    6fde:	ce 01       	movw	r24, r28
    6fe0:	df 91       	pop	r29
    6fe2:	cf 91       	pop	r28
    6fe4:	1f 91       	pop	r17
    6fe6:	0f 91       	pop	r16
    6fe8:	ff 90       	pop	r15
    6fea:	ef 90       	pop	r14
    6fec:	d5 ce       	rjmp	.-598    	; 0x6d98 <_ZN4UTFT5clrXYEv>

00006fee <_ZN4UTFT9drawVLineEiii>:
    6fee:	ef 92       	push	r14
    6ff0:	ff 92       	push	r15
    6ff2:	0f 93       	push	r16
    6ff4:	1f 93       	push	r17
    6ff6:	cf 93       	push	r28
    6ff8:	df 93       	push	r29
    6ffa:	ec 01       	movw	r28, r24
    6ffc:	79 01       	movw	r14, r18
    6ffe:	37 ff       	sbrs	r19, 7
    7000:	05 c0       	rjmp	.+10     	; 0x700c <_ZN4UTFT9drawVLineEiii+0x1e>
    7002:	42 0f       	add	r20, r18
    7004:	53 1f       	adc	r21, r19
    7006:	f1 94       	neg	r15
    7008:	e1 94       	neg	r14
    700a:	f1 08       	sbc	r15, r1
    700c:	ec 89       	ldd	r30, Y+20	; 0x14
    700e:	fd 89       	ldd	r31, Y+21	; 0x15
    7010:	90 81       	ld	r25, Z
    7012:	88 a1       	ldd	r24, Y+32	; 0x20
    7014:	80 95       	com	r24
    7016:	89 23       	and	r24, r25
    7018:	80 83       	st	Z, r24
    701a:	8a 01       	movw	r16, r20
    701c:	0e 0d       	add	r16, r14
    701e:	1f 1d       	adc	r17, r15
    7020:	9b 01       	movw	r18, r22
    7022:	ce 01       	movw	r24, r28
    7024:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
    7028:	8e 85       	ldd	r24, Y+14	; 0x0e
    702a:	80 31       	cpi	r24, 0x10	; 16
    702c:	91 f4       	brne	.+36     	; 0x7052 <_ZN4UTFT9drawVLineEiii+0x64>
    702e:	e8 89       	ldd	r30, Y+16	; 0x10
    7030:	f9 89       	ldd	r31, Y+17	; 0x11
    7032:	90 81       	ld	r25, Z
    7034:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7036:	89 2b       	or	r24, r25
    7038:	80 83       	st	Z, r24
    703a:	87 01       	movw	r16, r14
    703c:	ff 0c       	add	r15, r15
    703e:	22 0b       	sbc	r18, r18
    7040:	33 0b       	sbc	r19, r19
    7042:	49 81       	ldd	r20, Y+1	; 0x01
    7044:	50 e0       	ldi	r21, 0x00	; 0
    7046:	68 81       	ld	r22, Y
    7048:	70 e0       	ldi	r23, 0x00	; 0
    704a:	ce 01       	movw	r24, r28
    704c:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <_ZN4UTFT13_fast_fill_16Eiil>
    7050:	22 c0       	rjmp	.+68     	; 0x7096 <_ZN4UTFT9drawVLineEiii+0xa8>
    7052:	88 30       	cpi	r24, 0x08	; 8
    7054:	a1 f4       	brne	.+40     	; 0x707e <_ZN4UTFT9drawVLineEiii+0x90>
    7056:	98 81       	ld	r25, Y
    7058:	89 81       	ldd	r24, Y+1	; 0x01
    705a:	98 13       	cpse	r25, r24
    705c:	10 c0       	rjmp	.+32     	; 0x707e <_ZN4UTFT9drawVLineEiii+0x90>
    705e:	e8 89       	ldd	r30, Y+16	; 0x10
    7060:	f9 89       	ldd	r31, Y+17	; 0x11
    7062:	90 81       	ld	r25, Z
    7064:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7066:	89 2b       	or	r24, r25
    7068:	80 83       	st	Z, r24
    706a:	97 01       	movw	r18, r14
    706c:	ff 0c       	add	r15, r15
    706e:	44 0b       	sbc	r20, r20
    7070:	55 0b       	sbc	r21, r21
    7072:	68 81       	ld	r22, Y
    7074:	70 e0       	ldi	r23, 0x00	; 0
    7076:	ce 01       	movw	r24, r28
    7078:	0e 94 8c 1e 	call	0x3d18	; 0x3d18 <_ZN4UTFT12_fast_fill_8Eil>
    707c:	0c c0       	rjmp	.+24     	; 0x7096 <_ZN4UTFT9drawVLineEiii+0xa8>
    707e:	00 e0       	ldi	r16, 0x00	; 0
    7080:	10 e0       	ldi	r17, 0x00	; 0
    7082:	49 81       	ldd	r20, Y+1	; 0x01
    7084:	68 81       	ld	r22, Y
    7086:	ce 01       	movw	r24, r28
    7088:	0e 94 5a 22 	call	0x44b4	; 0x44b4 <_ZN4UTFT14LCD_Write_DATAEcc>
    708c:	0f 5f       	subi	r16, 0xFF	; 255
    708e:	1f 4f       	sbci	r17, 0xFF	; 255
    7090:	e0 16       	cp	r14, r16
    7092:	f1 06       	cpc	r15, r17
    7094:	b4 f7       	brge	.-20     	; 0x7082 <_ZN4UTFT9drawVLineEiii+0x94>
    7096:	ec 89       	ldd	r30, Y+20	; 0x14
    7098:	fd 89       	ldd	r31, Y+21	; 0x15
    709a:	90 81       	ld	r25, Z
    709c:	88 a1       	ldd	r24, Y+32	; 0x20
    709e:	89 2b       	or	r24, r25
    70a0:	80 83       	st	Z, r24
    70a2:	ce 01       	movw	r24, r28
    70a4:	df 91       	pop	r29
    70a6:	cf 91       	pop	r28
    70a8:	1f 91       	pop	r17
    70aa:	0f 91       	pop	r16
    70ac:	ff 90       	pop	r15
    70ae:	ef 90       	pop	r14
    70b0:	73 ce       	rjmp	.-794    	; 0x6d98 <_ZN4UTFT5clrXYEv>

000070b2 <_ZN4UTFT8fillRectEiiii>:
    70b2:	6f 92       	push	r6
    70b4:	7f 92       	push	r7
    70b6:	8f 92       	push	r8
    70b8:	9f 92       	push	r9
    70ba:	af 92       	push	r10
    70bc:	bf 92       	push	r11
    70be:	cf 92       	push	r12
    70c0:	df 92       	push	r13
    70c2:	ef 92       	push	r14
    70c4:	ff 92       	push	r15
    70c6:	0f 93       	push	r16
    70c8:	1f 93       	push	r17
    70ca:	cf 93       	push	r28
    70cc:	df 93       	push	r29
    70ce:	ec 01       	movw	r28, r24
    70d0:	4b 01       	movw	r8, r22
    70d2:	5a 01       	movw	r10, r20
    70d4:	69 01       	movw	r12, r18
    70d6:	78 01       	movw	r14, r16
    70d8:	26 17       	cp	r18, r22
    70da:	37 07       	cpc	r19, r23
    70dc:	24 f4       	brge	.+8      	; 0x70e6 <_ZN4UTFT8fillRectEiiii+0x34>
    70de:	89 2d       	mov	r24, r9
    70e0:	49 01       	movw	r8, r18
    70e2:	c6 2e       	mov	r12, r22
    70e4:	d8 2e       	mov	r13, r24
    70e6:	ea 14       	cp	r14, r10
    70e8:	fb 04       	cpc	r15, r11
    70ea:	2c f4       	brge	.+10     	; 0x70f6 <_ZN4UTFT8fillRectEiiii+0x44>
    70ec:	9a 2d       	mov	r25, r10
    70ee:	8b 2d       	mov	r24, r11
    70f0:	57 01       	movw	r10, r14
    70f2:	e9 2e       	mov	r14, r25
    70f4:	f8 2e       	mov	r15, r24
    70f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    70f8:	80 31       	cpi	r24, 0x10	; 16
    70fa:	d9 f5       	brne	.+118    	; 0x7172 <_ZN4UTFT8fillRectEiiii+0xc0>
    70fc:	ec 89       	ldd	r30, Y+20	; 0x14
    70fe:	fd 89       	ldd	r31, Y+21	; 0x15
    7100:	90 81       	ld	r25, Z
    7102:	88 a1       	ldd	r24, Y+32	; 0x20
    7104:	80 95       	com	r24
    7106:	89 23       	and	r24, r25
    7108:	80 83       	st	Z, r24
    710a:	87 01       	movw	r16, r14
    710c:	96 01       	movw	r18, r12
    710e:	a5 01       	movw	r20, r10
    7110:	b4 01       	movw	r22, r8
    7112:	ce 01       	movw	r24, r28
    7114:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
    7118:	e8 89       	ldd	r30, Y+16	; 0x10
    711a:	f9 89       	ldd	r31, Y+17	; 0x11
    711c:	90 81       	ld	r25, Z
    711e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    7120:	89 2b       	or	r24, r25
    7122:	80 83       	st	Z, r24
    7124:	96 01       	movw	r18, r12
    7126:	28 19       	sub	r18, r8
    7128:	39 09       	sbc	r19, r9
    712a:	c9 01       	movw	r24, r18
    712c:	33 0f       	add	r19, r19
    712e:	aa 0b       	sbc	r26, r26
    7130:	bb 0b       	sbc	r27, r27
    7132:	9c 01       	movw	r18, r24
    7134:	ad 01       	movw	r20, r26
    7136:	2f 5f       	subi	r18, 0xFF	; 255
    7138:	3f 4f       	sbci	r19, 0xFF	; 255
    713a:	4f 4f       	sbci	r20, 0xFF	; 255
    713c:	5f 4f       	sbci	r21, 0xFF	; 255
    713e:	b7 01       	movw	r22, r14
    7140:	6a 19       	sub	r22, r10
    7142:	7b 09       	sbc	r23, r11
    7144:	cb 01       	movw	r24, r22
    7146:	77 0f       	add	r23, r23
    7148:	aa 0b       	sbc	r26, r26
    714a:	bb 0b       	sbc	r27, r27
    714c:	bc 01       	movw	r22, r24
    714e:	cd 01       	movw	r24, r26
    7150:	6f 5f       	subi	r22, 0xFF	; 255
    7152:	7f 4f       	sbci	r23, 0xFF	; 255
    7154:	8f 4f       	sbci	r24, 0xFF	; 255
    7156:	9f 4f       	sbci	r25, 0xFF	; 255
    7158:	0e 94 a3 4a 	call	0x9546	; 0x9546 <__mulsi3>
    715c:	8b 01       	movw	r16, r22
    715e:	9c 01       	movw	r18, r24
    7160:	49 81       	ldd	r20, Y+1	; 0x01
    7162:	50 e0       	ldi	r21, 0x00	; 0
    7164:	88 81       	ld	r24, Y
    7166:	68 2f       	mov	r22, r24
    7168:	70 e0       	ldi	r23, 0x00	; 0
    716a:	ce 01       	movw	r24, r28
    716c:	0e 94 5a 1d 	call	0x3ab4	; 0x3ab4 <_ZN4UTFT13_fast_fill_16Eiil>
    7170:	3f c0       	rjmp	.+126    	; 0x71f0 <_ZN4UTFT8fillRectEiiii+0x13e>
    7172:	88 30       	cpi	r24, 0x08	; 8
    7174:	09 f0       	breq	.+2      	; 0x7178 <_ZN4UTFT8fillRectEiiii+0xc6>
    7176:	43 c0       	rjmp	.+134    	; 0x71fe <_ZN4UTFT8fillRectEiiii+0x14c>
    7178:	98 81       	ld	r25, Y
    717a:	89 81       	ldd	r24, Y+1	; 0x01
    717c:	98 13       	cpse	r25, r24
    717e:	3f c0       	rjmp	.+126    	; 0x71fe <_ZN4UTFT8fillRectEiiii+0x14c>
    7180:	ec 89       	ldd	r30, Y+20	; 0x14
    7182:	fd 89       	ldd	r31, Y+21	; 0x15
    7184:	90 81       	ld	r25, Z
    7186:	88 a1       	ldd	r24, Y+32	; 0x20
    7188:	80 95       	com	r24
    718a:	89 23       	and	r24, r25
    718c:	80 83       	st	Z, r24
    718e:	87 01       	movw	r16, r14
    7190:	96 01       	movw	r18, r12
    7192:	a5 01       	movw	r20, r10
    7194:	b4 01       	movw	r22, r8
    7196:	ce 01       	movw	r24, r28
    7198:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
    719c:	e8 89       	ldd	r30, Y+16	; 0x10
    719e:	f9 89       	ldd	r31, Y+17	; 0x11
    71a0:	90 81       	ld	r25, Z
    71a2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    71a4:	89 2b       	or	r24, r25
    71a6:	80 83       	st	Z, r24
    71a8:	96 01       	movw	r18, r12
    71aa:	28 19       	sub	r18, r8
    71ac:	39 09       	sbc	r19, r9
    71ae:	c9 01       	movw	r24, r18
    71b0:	33 0f       	add	r19, r19
    71b2:	aa 0b       	sbc	r26, r26
    71b4:	bb 0b       	sbc	r27, r27
    71b6:	9c 01       	movw	r18, r24
    71b8:	ad 01       	movw	r20, r26
    71ba:	2f 5f       	subi	r18, 0xFF	; 255
    71bc:	3f 4f       	sbci	r19, 0xFF	; 255
    71be:	4f 4f       	sbci	r20, 0xFF	; 255
    71c0:	5f 4f       	sbci	r21, 0xFF	; 255
    71c2:	b7 01       	movw	r22, r14
    71c4:	6a 19       	sub	r22, r10
    71c6:	7b 09       	sbc	r23, r11
    71c8:	cb 01       	movw	r24, r22
    71ca:	77 0f       	add	r23, r23
    71cc:	aa 0b       	sbc	r26, r26
    71ce:	bb 0b       	sbc	r27, r27
    71d0:	bc 01       	movw	r22, r24
    71d2:	cd 01       	movw	r24, r26
    71d4:	6f 5f       	subi	r22, 0xFF	; 255
    71d6:	7f 4f       	sbci	r23, 0xFF	; 255
    71d8:	8f 4f       	sbci	r24, 0xFF	; 255
    71da:	9f 4f       	sbci	r25, 0xFF	; 255
    71dc:	0e 94 a3 4a 	call	0x9546	; 0x9546 <__mulsi3>
    71e0:	9b 01       	movw	r18, r22
    71e2:	ac 01       	movw	r20, r24
    71e4:	88 81       	ld	r24, Y
    71e6:	68 2f       	mov	r22, r24
    71e8:	70 e0       	ldi	r23, 0x00	; 0
    71ea:	ce 01       	movw	r24, r28
    71ec:	0e 94 8c 1e 	call	0x3d18	; 0x3d18 <_ZN4UTFT12_fast_fill_8Eil>
    71f0:	ec 89       	ldd	r30, Y+20	; 0x14
    71f2:	fd 89       	ldd	r31, Y+21	; 0x15
    71f4:	90 81       	ld	r25, Z
    71f6:	88 a1       	ldd	r24, Y+32	; 0x20
    71f8:	89 2b       	or	r24, r25
    71fa:	80 83       	st	Z, r24
    71fc:	47 c0       	rjmp	.+142    	; 0x728c <_ZN4UTFT8fillRectEiiii+0x1da>
    71fe:	8c 81       	ldd	r24, Y+4	; 0x04
    7200:	81 11       	cpse	r24, r1
    7202:	22 c0       	rjmp	.+68     	; 0x7248 <_ZN4UTFT8fillRectEiiii+0x196>
    7204:	37 01       	movw	r6, r14
    7206:	6a 18       	sub	r6, r10
    7208:	7b 08       	sbc	r7, r11
    720a:	77 fe       	sbrs	r7, 7
    720c:	03 c0       	rjmp	.+6      	; 0x7214 <_ZN4UTFT8fillRectEiiii+0x162>
    720e:	8f ef       	ldi	r24, 0xFF	; 255
    7210:	68 1a       	sub	r6, r24
    7212:	78 0a       	sbc	r7, r24
    7214:	75 94       	asr	r7
    7216:	67 94       	ror	r6
    7218:	00 e0       	ldi	r16, 0x00	; 0
    721a:	10 e0       	ldi	r17, 0x00	; 0
    721c:	c8 18       	sub	r12, r8
    721e:	d9 08       	sbc	r13, r9
    7220:	60 16       	cp	r6, r16
    7222:	71 06       	cpc	r7, r17
    7224:	9c f1       	brlt	.+102    	; 0x728c <_ZN4UTFT8fillRectEiiii+0x1da>
    7226:	a5 01       	movw	r20, r10
    7228:	40 0f       	add	r20, r16
    722a:	51 1f       	adc	r21, r17
    722c:	96 01       	movw	r18, r12
    722e:	b4 01       	movw	r22, r8
    7230:	ce 01       	movw	r24, r28
    7232:	7b de       	rcall	.-778    	; 0x6f2a <_ZN4UTFT9drawHLineEiii>
    7234:	a7 01       	movw	r20, r14
    7236:	40 1b       	sub	r20, r16
    7238:	51 0b       	sbc	r21, r17
    723a:	96 01       	movw	r18, r12
    723c:	b4 01       	movw	r22, r8
    723e:	ce 01       	movw	r24, r28
    7240:	74 de       	rcall	.-792    	; 0x6f2a <_ZN4UTFT9drawHLineEiii>
    7242:	0f 5f       	subi	r16, 0xFF	; 255
    7244:	1f 4f       	sbci	r17, 0xFF	; 255
    7246:	ec cf       	rjmp	.-40     	; 0x7220 <_ZN4UTFT8fillRectEiiii+0x16e>
    7248:	36 01       	movw	r6, r12
    724a:	68 18       	sub	r6, r8
    724c:	79 08       	sbc	r7, r9
    724e:	77 fe       	sbrs	r7, 7
    7250:	03 c0       	rjmp	.+6      	; 0x7258 <_ZN4UTFT8fillRectEiiii+0x1a6>
    7252:	8f ef       	ldi	r24, 0xFF	; 255
    7254:	68 1a       	sub	r6, r24
    7256:	78 0a       	sbc	r7, r24
    7258:	75 94       	asr	r7
    725a:	67 94       	ror	r6
    725c:	00 e0       	ldi	r16, 0x00	; 0
    725e:	10 e0       	ldi	r17, 0x00	; 0
    7260:	ea 18       	sub	r14, r10
    7262:	fb 08       	sbc	r15, r11
    7264:	60 16       	cp	r6, r16
    7266:	71 06       	cpc	r7, r17
    7268:	8c f0       	brlt	.+34     	; 0x728c <_ZN4UTFT8fillRectEiiii+0x1da>
    726a:	b4 01       	movw	r22, r8
    726c:	60 0f       	add	r22, r16
    726e:	71 1f       	adc	r23, r17
    7270:	97 01       	movw	r18, r14
    7272:	a5 01       	movw	r20, r10
    7274:	ce 01       	movw	r24, r28
    7276:	bb de       	rcall	.-650    	; 0x6fee <_ZN4UTFT9drawVLineEiii>
    7278:	b6 01       	movw	r22, r12
    727a:	60 1b       	sub	r22, r16
    727c:	71 0b       	sbc	r23, r17
    727e:	97 01       	movw	r18, r14
    7280:	a5 01       	movw	r20, r10
    7282:	ce 01       	movw	r24, r28
    7284:	b4 de       	rcall	.-664    	; 0x6fee <_ZN4UTFT9drawVLineEiii>
    7286:	0f 5f       	subi	r16, 0xFF	; 255
    7288:	1f 4f       	sbci	r17, 0xFF	; 255
    728a:	ec cf       	rjmp	.-40     	; 0x7264 <_ZN4UTFT8fillRectEiiii+0x1b2>
    728c:	df 91       	pop	r29
    728e:	cf 91       	pop	r28
    7290:	1f 91       	pop	r17
    7292:	0f 91       	pop	r16
    7294:	ff 90       	pop	r15
    7296:	ef 90       	pop	r14
    7298:	df 90       	pop	r13
    729a:	cf 90       	pop	r12
    729c:	bf 90       	pop	r11
    729e:	af 90       	pop	r10
    72a0:	9f 90       	pop	r9
    72a2:	8f 90       	pop	r8
    72a4:	7f 90       	pop	r7
    72a6:	6f 90       	pop	r6
    72a8:	08 95       	ret

000072aa <_ZN4UTFT9printCharEhii>:
	sbi(P_CS, B_CS);
	clrXY();
}

void UTFT::printChar(byte c, int x, int y)
{
    72aa:	2f 92       	push	r2
    72ac:	3f 92       	push	r3
    72ae:	4f 92       	push	r4
    72b0:	5f 92       	push	r5
    72b2:	6f 92       	push	r6
    72b4:	7f 92       	push	r7
    72b6:	8f 92       	push	r8
    72b8:	9f 92       	push	r9
    72ba:	af 92       	push	r10
    72bc:	bf 92       	push	r11
    72be:	cf 92       	push	r12
    72c0:	df 92       	push	r13
    72c2:	ef 92       	push	r14
    72c4:	ff 92       	push	r15
    72c6:	0f 93       	push	r16
    72c8:	1f 93       	push	r17
    72ca:	cf 93       	push	r28
    72cc:	df 93       	push	r29
    72ce:	cd b7       	in	r28, 0x3d	; 61
    72d0:	de b7       	in	r29, 0x3e	; 62
    72d2:	28 97       	sbiw	r28, 0x08	; 8
    72d4:	0f b6       	in	r0, 0x3f	; 63
    72d6:	f8 94       	cli
    72d8:	de bf       	out	0x3e, r29	; 62
    72da:	0f be       	out	0x3f, r0	; 63
    72dc:	cd bf       	out	0x3d, r28	; 61
    72de:	98 87       	std	Y+8, r25	; 0x08
    72e0:	8f 83       	std	Y+7, r24	; 0x07
    72e2:	3a 01       	movw	r6, r20
    72e4:	29 01       	movw	r4, r18
	byte i,ch;
	word j;
	word temp; 

	cbi(P_CS, B_CS);
    72e6:	dc 01       	movw	r26, r24
    72e8:	54 96       	adiw	r26, 0x14	; 20
    72ea:	ed 91       	ld	r30, X+
    72ec:	fc 91       	ld	r31, X
    72ee:	55 97       	sbiw	r26, 0x15	; 21
    72f0:	90 81       	ld	r25, Z
    72f2:	90 96       	adiw	r26, 0x20	; 32
    72f4:	8c 91       	ld	r24, X
    72f6:	90 97       	sbiw	r26, 0x20	; 32
    72f8:	80 95       	com	r24
    72fa:	89 23       	and	r24, r25
    72fc:	80 83       	st	Z, r24
  
	if (!_transparent)
    72fe:	d0 96       	adiw	r26, 0x30	; 48
    7300:	2c 91       	ld	r18, X
    7302:	d0 97       	sbiw	r26, 0x30	; 48
    7304:	9d 96       	adiw	r26, 0x2d	; 45
    7306:	9c 91       	ld	r25, X
    7308:	9d 97       	sbiw	r26, 0x2d	; 45
    730a:	9c 96       	adiw	r26, 0x2c	; 44
    730c:	8c 91       	ld	r24, X
    730e:	9c 97       	sbiw	r26, 0x2c	; 44
    7310:	e6 2e       	mov	r14, r22
    7312:	f1 2c       	mov	r15, r1
    7314:	21 11       	cpse	r18, r1
    7316:	00 c1       	rjmp	.+512    	; 0x7518 <_ZN4UTFT9printCharEhii+0x26e>
	{
		if (orient==PORTRAIT)
    7318:	14 96       	adiw	r26, 0x04	; 4
    731a:	2c 91       	ld	r18, X
    731c:	14 97       	sbiw	r26, 0x04	; 4
    731e:	21 11       	cpse	r18, r1
    7320:	6f c0       	rjmp	.+222    	; 0x7400 <_ZN4UTFT9printCharEhii+0x156>
		{
			setXY(x,y,x+cfont.x_size-1,y+cfont.y_size-1);
    7322:	82 01       	movw	r16, r4
    7324:	09 0f       	add	r16, r25
    7326:	11 1d       	adc	r17, r1
    7328:	01 50       	subi	r16, 0x01	; 1
    732a:	11 09       	sbc	r17, r1
    732c:	9a 01       	movw	r18, r20
    732e:	28 0f       	add	r18, r24
    7330:	31 1d       	adc	r19, r1
    7332:	21 50       	subi	r18, 0x01	; 1
    7334:	31 09       	sbc	r19, r1
    7336:	a2 01       	movw	r20, r4
    7338:	b3 01       	movw	r22, r6
    733a:	cd 01       	movw	r24, r26
    733c:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
	  
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    7340:	ef 81       	ldd	r30, Y+7	; 0x07
    7342:	f8 85       	ldd	r31, Y+8	; 0x08
    7344:	84 a5       	ldd	r24, Z+44	; 0x2c
    7346:	86 95       	lsr	r24
    7348:	86 95       	lsr	r24
    734a:	86 95       	lsr	r24
    734c:	95 a5       	ldd	r25, Z+45	; 0x2d
    734e:	26 a5       	ldd	r18, Z+46	; 0x2e
    7350:	e2 1a       	sub	r14, r18
    7352:	f1 08       	sbc	r15, r1
    7354:	89 9f       	mul	r24, r25
    7356:	c0 01       	movw	r24, r0
    7358:	11 24       	eor	r1, r1
    735a:	e8 9e       	mul	r14, r24
    735c:	90 01       	movw	r18, r0
    735e:	e9 9e       	mul	r14, r25
    7360:	30 0d       	add	r19, r0
    7362:	f8 9e       	mul	r15, r24
    7364:	30 0d       	add	r19, r0
    7366:	11 24       	eor	r1, r1
    7368:	79 01       	movw	r14, r18
    736a:	f4 e0       	ldi	r31, 0x04	; 4
    736c:	ef 0e       	add	r14, r31
    736e:	f1 1c       	adc	r15, r1
			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j++)
    7370:	c1 2c       	mov	r12, r1
    7372:	d1 2c       	mov	r13, r1
    7374:	af 81       	ldd	r26, Y+7	; 0x07
    7376:	b8 85       	ldd	r27, Y+8	; 0x08
    7378:	9c 96       	adiw	r26, 0x2c	; 44
    737a:	8c 91       	ld	r24, X
    737c:	9c 97       	sbiw	r26, 0x2c	; 44
    737e:	86 95       	lsr	r24
    7380:	86 95       	lsr	r24
    7382:	86 95       	lsr	r24
    7384:	9d 96       	adiw	r26, 0x2d	; 45
    7386:	9c 91       	ld	r25, X
    7388:	9d 97       	sbiw	r26, 0x2d	; 45
    738a:	89 9f       	mul	r24, r25
    738c:	c0 01       	movw	r24, r0
    738e:	11 24       	eor	r1, r1
    7390:	c8 16       	cp	r12, r24
    7392:	d9 06       	cpc	r13, r25
    7394:	08 f0       	brcs	.+2      	; 0x7398 <_ZN4UTFT9printCharEhii+0xee>
    7396:	3d c1       	rjmp	.+634    	; 0x7612 <_ZN4UTFT9printCharEhii+0x368>
			{
				ch=pgm_read_byte(&cfont.font[temp]);
    7398:	9a 96       	adiw	r26, 0x2a	; 42
    739a:	ed 91       	ld	r30, X+
    739c:	fc 91       	ld	r31, X
    739e:	9b 97       	sbiw	r26, 0x2b	; 43
    73a0:	ee 0d       	add	r30, r14
    73a2:	ff 1d       	adc	r31, r15
    73a4:	e4 91       	lpm	r30, Z
    73a6:	97 e0       	ldi	r25, 0x07	; 7
    73a8:	a9 2e       	mov	r10, r25
    73aa:	b1 2c       	mov	r11, r1
				for(i=0;i<8;i++)
				{   
					if((ch&(1<<(7-i)))!=0)   
    73ac:	0e 2f       	mov	r16, r30
    73ae:	10 e0       	ldi	r17, 0x00	; 0
    73b0:	c8 01       	movw	r24, r16
    73b2:	0a 2c       	mov	r0, r10
    73b4:	02 c0       	rjmp	.+4      	; 0x73ba <_ZN4UTFT9printCharEhii+0x110>
    73b6:	95 95       	asr	r25
    73b8:	87 95       	ror	r24
    73ba:	0a 94       	dec	r0
    73bc:	e2 f7       	brpl	.-8      	; 0x73b6 <_ZN4UTFT9printCharEhii+0x10c>
    73be:	80 ff       	sbrs	r24, 0
    73c0:	09 c0       	rjmp	.+18     	; 0x73d4 <_ZN4UTFT9printCharEhii+0x12a>
					{
						setPixel((fch<<8)|fcl);
    73c2:	ef 81       	ldd	r30, Y+7	; 0x07
    73c4:	f8 85       	ldd	r31, Y+8	; 0x08
    73c6:	60 81       	ld	r22, Z
    73c8:	71 81       	ldd	r23, Z+1	; 0x01
    73ca:	76 27       	eor	r23, r22
    73cc:	67 27       	eor	r22, r23
    73ce:	76 27       	eor	r23, r22
    73d0:	cf 01       	movw	r24, r30
    73d2:	0a c0       	rjmp	.+20     	; 0x73e8 <_ZN4UTFT9printCharEhii+0x13e>
					} 
					else
					{
						setPixel((bch<<8)|bcl);
    73d4:	af 81       	ldd	r26, Y+7	; 0x07
    73d6:	b8 85       	ldd	r27, Y+8	; 0x08
    73d8:	12 96       	adiw	r26, 0x02	; 2
    73da:	6d 91       	ld	r22, X+
    73dc:	7c 91       	ld	r23, X
    73de:	13 97       	sbiw	r26, 0x03	; 3
    73e0:	76 27       	eor	r23, r22
    73e2:	67 27       	eor	r22, r23
    73e4:	76 27       	eor	r23, r22
    73e6:	cd 01       	movw	r24, r26
    73e8:	9c dd       	rcall	.-1224   	; 0x6f22 <_ZN4UTFT8setPixelEj>
    73ea:	b1 e0       	ldi	r27, 0x01	; 1
    73ec:	ab 1a       	sub	r10, r27
    73ee:	b1 08       	sbc	r11, r1
    73f0:	f8 f6       	brcc	.-66     	; 0x73b0 <_ZN4UTFT9printCharEhii+0x106>
					}   
				}
				temp++;
    73f2:	ff ef       	ldi	r31, 0xFF	; 255
    73f4:	ef 1a       	sub	r14, r31
    73f6:	ff 0a       	sbc	r15, r31
		if (orient==PORTRAIT)
		{
			setXY(x,y,x+cfont.x_size-1,y+cfont.y_size-1);
	  
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j++)
    73f8:	8f ef       	ldi	r24, 0xFF	; 255
    73fa:	c8 1a       	sub	r12, r24
    73fc:	d8 0a       	sbc	r13, r24
    73fe:	ba cf       	rjmp	.-140    	; 0x7374 <_ZN4UTFT9printCharEhii+0xca>
				temp++;
			}
		}
		else
		{
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    7400:	86 95       	lsr	r24
    7402:	86 95       	lsr	r24
    7404:	86 95       	lsr	r24
    7406:	af 81       	ldd	r26, Y+7	; 0x07
    7408:	b8 85       	ldd	r27, Y+8	; 0x08
    740a:	9e 96       	adiw	r26, 0x2e	; 46
    740c:	2c 91       	ld	r18, X
    740e:	e2 1a       	sub	r14, r18
    7410:	f1 08       	sbc	r15, r1
    7412:	89 9f       	mul	r24, r25
    7414:	c0 01       	movw	r24, r0
    7416:	11 24       	eor	r1, r1
    7418:	e8 9e       	mul	r14, r24
    741a:	90 01       	movw	r18, r0
    741c:	e9 9e       	mul	r14, r25
    741e:	30 0d       	add	r19, r0
    7420:	f8 9e       	mul	r15, r24
    7422:	30 0d       	add	r19, r0
    7424:	11 24       	eor	r1, r1
    7426:	79 01       	movw	r14, r18
    7428:	b4 e0       	ldi	r27, 0x04	; 4
    742a:	eb 0e       	add	r14, r27
    742c:	f1 1c       	adc	r15, r1

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
    742e:	c1 2c       	mov	r12, r1
    7430:	d1 2c       	mov	r13, r1
    7432:	ef 81       	ldd	r30, Y+7	; 0x07
    7434:	f8 85       	ldd	r31, Y+8	; 0x08
    7436:	24 a5       	ldd	r18, Z+44	; 0x2c
    7438:	62 2f       	mov	r22, r18
    743a:	66 95       	lsr	r22
    743c:	66 95       	lsr	r22
    743e:	66 95       	lsr	r22
    7440:	85 a5       	ldd	r24, Z+45	; 0x2d
    7442:	68 9f       	mul	r22, r24
    7444:	c0 01       	movw	r24, r0
    7446:	11 24       	eor	r1, r1
    7448:	c8 16       	cp	r12, r24
    744a:	d9 06       	cpc	r13, r25
    744c:	08 f0       	brcs	.+2      	; 0x7450 <_ZN4UTFT9printCharEhii+0x1a6>
    744e:	e1 c0       	rjmp	.+450    	; 0x7612 <_ZN4UTFT9printCharEhii+0x368>
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
    7450:	70 e0       	ldi	r23, 0x00	; 0
    7452:	c6 01       	movw	r24, r12
    7454:	0e 94 cb 4a 	call	0x9596	; 0x9596 <__udivmodhi4>
    7458:	ab 01       	movw	r20, r22
    745a:	44 0d       	add	r20, r4
    745c:	55 1d       	adc	r21, r5
    745e:	c3 01       	movw	r24, r6
    7460:	82 0f       	add	r24, r18
    7462:	91 1d       	adc	r25, r1
    7464:	9c 01       	movw	r18, r24
    7466:	21 50       	subi	r18, 0x01	; 1
    7468:	31 09       	sbc	r19, r1
    746a:	8a 01       	movw	r16, r20
    746c:	b3 01       	movw	r22, r6
    746e:	cf 01       	movw	r24, r30
    7470:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    7474:	af 81       	ldd	r26, Y+7	; 0x07
    7476:	b8 85       	ldd	r27, Y+8	; 0x08
    7478:	9c 96       	adiw	r26, 0x2c	; 44
    747a:	8c 90       	ld	r8, X
    747c:	86 94       	lsr	r8
    747e:	86 94       	lsr	r8
    7480:	86 94       	lsr	r8
    7482:	91 2c       	mov	r9, r1
    7484:	b1 e0       	ldi	r27, 0x01	; 1
    7486:	8b 1a       	sub	r8, r27
    7488:	91 08       	sbc	r9, r1
						{
							setPixel((bch<<8)|bcl);
						}   
					}
				}
				temp+=(cfont.x_size/8);
    748a:	af 81       	ldd	r26, Y+7	; 0x07
    748c:	b8 85       	ldd	r27, Y+8	; 0x08
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    748e:	ef ef       	ldi	r30, 0xFF	; 255
    7490:	8e 16       	cp	r8, r30
    7492:	9e 06       	cpc	r9, r30
    7494:	b1 f1       	breq	.+108    	; 0x7502 <_ZN4UTFT9printCharEhii+0x258>
				{
					ch=pgm_read_byte(&cfont.font[temp+zz]);
    7496:	9a 96       	adiw	r26, 0x2a	; 42
    7498:	ed 91       	ld	r30, X+
    749a:	fc 91       	ld	r31, X
    749c:	9b 97       	sbiw	r26, 0x2b	; 43
    749e:	c4 01       	movw	r24, r8
    74a0:	8e 0d       	add	r24, r14
    74a2:	9f 1d       	adc	r25, r15
    74a4:	e8 0f       	add	r30, r24
    74a6:	f9 1f       	adc	r31, r25
    74a8:	e4 91       	lpm	r30, Z
    74aa:	a1 2c       	mov	r10, r1
    74ac:	b1 2c       	mov	r11, r1
					for(i=0;i<8;i++)
					{   
						if((ch&(1<<i))!=0)   
    74ae:	0e 2f       	mov	r16, r30
    74b0:	10 e0       	ldi	r17, 0x00	; 0
    74b2:	c8 01       	movw	r24, r16
    74b4:	0a 2c       	mov	r0, r10
    74b6:	02 c0       	rjmp	.+4      	; 0x74bc <_ZN4UTFT9printCharEhii+0x212>
    74b8:	95 95       	asr	r25
    74ba:	87 95       	ror	r24
    74bc:	0a 94       	dec	r0
    74be:	e2 f7       	brpl	.-8      	; 0x74b8 <_ZN4UTFT9printCharEhii+0x20e>
    74c0:	80 ff       	sbrs	r24, 0
    74c2:	09 c0       	rjmp	.+18     	; 0x74d6 <_ZN4UTFT9printCharEhii+0x22c>
						{
							setPixel((fch<<8)|fcl);
    74c4:	ef 81       	ldd	r30, Y+7	; 0x07
    74c6:	f8 85       	ldd	r31, Y+8	; 0x08
    74c8:	60 81       	ld	r22, Z
    74ca:	71 81       	ldd	r23, Z+1	; 0x01
    74cc:	76 27       	eor	r23, r22
    74ce:	67 27       	eor	r22, r23
    74d0:	76 27       	eor	r23, r22
    74d2:	cf 01       	movw	r24, r30
    74d4:	0a c0       	rjmp	.+20     	; 0x74ea <_ZN4UTFT9printCharEhii+0x240>
						} 
						else
						{
							setPixel((bch<<8)|bcl);
    74d6:	af 81       	ldd	r26, Y+7	; 0x07
    74d8:	b8 85       	ldd	r27, Y+8	; 0x08
    74da:	12 96       	adiw	r26, 0x02	; 2
    74dc:	6d 91       	ld	r22, X+
    74de:	7c 91       	ld	r23, X
    74e0:	13 97       	sbiw	r26, 0x03	; 3
    74e2:	76 27       	eor	r23, r22
    74e4:	67 27       	eor	r22, r23
    74e6:	76 27       	eor	r23, r22
    74e8:	cd 01       	movw	r24, r26
    74ea:	1b dd       	rcall	.-1482   	; 0x6f22 <_ZN4UTFT8setPixelEj>
    74ec:	bf ef       	ldi	r27, 0xFF	; 255
    74ee:	ab 1a       	sub	r10, r27
    74f0:	bb 0a       	sbc	r11, r27
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
				{
					ch=pgm_read_byte(&cfont.font[temp+zz]);
					for(i=0;i<8;i++)
    74f2:	e8 e0       	ldi	r30, 0x08	; 8
    74f4:	ae 16       	cp	r10, r30
    74f6:	b1 04       	cpc	r11, r1
    74f8:	e1 f6       	brne	.-72     	; 0x74b2 <_ZN4UTFT9printCharEhii+0x208>
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    74fa:	f1 e0       	ldi	r31, 0x01	; 1
    74fc:	8f 1a       	sub	r8, r31
    74fe:	91 08       	sbc	r9, r1
    7500:	c4 cf       	rjmp	.-120    	; 0x748a <_ZN4UTFT9printCharEhii+0x1e0>
						{
							setPixel((bch<<8)|bcl);
						}   
					}
				}
				temp+=(cfont.x_size/8);
    7502:	9c 96       	adiw	r26, 0x2c	; 44
    7504:	8c 91       	ld	r24, X
    7506:	86 95       	lsr	r24
    7508:	86 95       	lsr	r24
    750a:	86 95       	lsr	r24
    750c:	90 e0       	ldi	r25, 0x00	; 0
    750e:	e8 0e       	add	r14, r24
    7510:	f9 1e       	adc	r15, r25
		}
		else
		{
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
    7512:	c8 0e       	add	r12, r24
    7514:	d9 1e       	adc	r13, r25
    7516:	8d cf       	rjmp	.-230    	; 0x7432 <_ZN4UTFT9printCharEhii+0x188>
			}
		}
	}
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    7518:	86 95       	lsr	r24
    751a:	86 95       	lsr	r24
    751c:	86 95       	lsr	r24
    751e:	ef 81       	ldd	r30, Y+7	; 0x07
    7520:	f8 85       	ldd	r31, Y+8	; 0x08
    7522:	26 a5       	ldd	r18, Z+46	; 0x2e
    7524:	e2 1a       	sub	r14, r18
    7526:	f1 08       	sbc	r15, r1
    7528:	89 9f       	mul	r24, r25
    752a:	c0 01       	movw	r24, r0
    752c:	11 24       	eor	r1, r1
    752e:	e8 9e       	mul	r14, r24
    7530:	10 01       	movw	r2, r0
    7532:	e9 9e       	mul	r14, r25
    7534:	30 0c       	add	r3, r0
    7536:	f8 9e       	mul	r15, r24
    7538:	30 0c       	add	r3, r0
    753a:	11 24       	eor	r1, r1
    753c:	f4 e0       	ldi	r31, 0x04	; 4
    753e:	2f 0e       	add	r2, r31
    7540:	31 1c       	adc	r3, r1
    7542:	72 01       	movw	r14, r4
		for(j=0;j<cfont.y_size;j++) 
    7544:	af 81       	ldd	r26, Y+7	; 0x07
    7546:	b8 85       	ldd	r27, Y+8	; 0x08
    7548:	9d 96       	adiw	r26, 0x2d	; 45
    754a:	8c 91       	ld	r24, X
    754c:	90 e0       	ldi	r25, 0x00	; 0
    754e:	97 01       	movw	r18, r14
    7550:	24 19       	sub	r18, r4
    7552:	35 09       	sbc	r19, r5
    7554:	28 17       	cp	r18, r24
    7556:	39 07       	cpc	r19, r25
    7558:	08 f0       	brcs	.+2      	; 0x755c <_ZN4UTFT9printCharEhii+0x2b2>
    755a:	5b c0       	rjmp	.+182    	; 0x7612 <_ZN4UTFT9printCharEhii+0x368>
    755c:	43 01       	movw	r8, r6
    755e:	c1 2c       	mov	r12, r1
    7560:	d1 2c       	mov	r13, r1
				for(i=0;i<8;i++)
				{   
				
					if((ch&(1<<(7-i)))!=0)   
					{
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
    7562:	f7 01       	movw	r30, r14
    7564:	31 96       	adiw	r30, 0x01	; 1
    7566:	fe 83       	std	Y+6, r31	; 0x06
    7568:	ed 83       	std	Y+5, r30	; 0x05
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
    756a:	af 81       	ldd	r26, Y+7	; 0x07
    756c:	b8 85       	ldd	r27, Y+8	; 0x08
    756e:	9c 96       	adiw	r26, 0x2c	; 44
    7570:	8c 91       	ld	r24, X
    7572:	9c 97       	sbiw	r26, 0x2c	; 44
    7574:	86 95       	lsr	r24
    7576:	86 95       	lsr	r24
    7578:	86 95       	lsr	r24
    757a:	90 e0       	ldi	r25, 0x00	; 0
    757c:	c8 16       	cp	r12, r24
    757e:	d9 06       	cpc	r13, r25
    7580:	0c f0       	brlt	.+2      	; 0x7584 <_ZN4UTFT9printCharEhii+0x2da>
    7582:	41 c0       	rjmp	.+130    	; 0x7606 <_ZN4UTFT9printCharEhii+0x35c>
			{
				ch=pgm_read_byte(&cfont.font[temp+zz]); 
    7584:	9a 96       	adiw	r26, 0x2a	; 42
    7586:	ed 91       	ld	r30, X+
    7588:	fc 91       	ld	r31, X
    758a:	9b 97       	sbiw	r26, 0x2b	; 43
    758c:	c6 01       	movw	r24, r12
    758e:	82 0d       	add	r24, r2
    7590:	93 1d       	adc	r25, r3
    7592:	e8 0f       	add	r30, r24
    7594:	f9 1f       	adc	r31, r25
    7596:	e4 91       	lpm	r30, Z
    7598:	b4 01       	movw	r22, r8
    759a:	87 e0       	ldi	r24, 0x07	; 7
    759c:	a8 2e       	mov	r10, r24
    759e:	b1 2c       	mov	r11, r1
				for(i=0;i<8;i++)
				{   
				
					if((ch&(1<<(7-i)))!=0)   
    75a0:	8e 2f       	mov	r24, r30
    75a2:	90 e0       	ldi	r25, 0x00	; 0
    75a4:	9c 83       	std	Y+4, r25	; 0x04
    75a6:	8b 83       	std	Y+3, r24	; 0x03
    75a8:	db 01       	movw	r26, r22
    75aa:	11 96       	adiw	r26, 0x01	; 1
    75ac:	ba 83       	std	Y+2, r27	; 0x02
    75ae:	a9 83       	std	Y+1, r26	; 0x01
    75b0:	8b 81       	ldd	r24, Y+3	; 0x03
    75b2:	9c 81       	ldd	r25, Y+4	; 0x04
    75b4:	0a 2c       	mov	r0, r10
    75b6:	02 c0       	rjmp	.+4      	; 0x75bc <_ZN4UTFT9printCharEhii+0x312>
    75b8:	95 95       	asr	r25
    75ba:	87 95       	ror	r24
    75bc:	0a 94       	dec	r0
    75be:	e2 f7       	brpl	.-8      	; 0x75b8 <_ZN4UTFT9printCharEhii+0x30e>
    75c0:	80 ff       	sbrs	r24, 0
    75c2:	11 c0       	rjmp	.+34     	; 0x75e6 <_ZN4UTFT9printCharEhii+0x33c>
					{
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
    75c4:	0d 81       	ldd	r16, Y+5	; 0x05
    75c6:	1e 81       	ldd	r17, Y+6	; 0x06
    75c8:	9d 01       	movw	r18, r26
    75ca:	a7 01       	movw	r20, r14
    75cc:	8f 81       	ldd	r24, Y+7	; 0x07
    75ce:	98 85       	ldd	r25, Y+8	; 0x08
    75d0:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
						setPixel((fch<<8)|fcl);
    75d4:	ef 81       	ldd	r30, Y+7	; 0x07
    75d6:	f8 85       	ldd	r31, Y+8	; 0x08
    75d8:	60 81       	ld	r22, Z
    75da:	71 81       	ldd	r23, Z+1	; 0x01
    75dc:	76 27       	eor	r23, r22
    75de:	67 27       	eor	r22, r23
    75e0:	76 27       	eor	r23, r22
    75e2:	cf 01       	movw	r24, r30
    75e4:	9e dc       	rcall	.-1732   	; 0x6f22 <_ZN4UTFT8setPixelEj>
    75e6:	f1 e0       	ldi	r31, 0x01	; 1
    75e8:	af 1a       	sub	r10, r31
    75ea:	b1 08       	sbc	r11, r1
    75ec:	69 81       	ldd	r22, Y+1	; 0x01
    75ee:	7a 81       	ldd	r23, Y+2	; 0x02
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
			{
				ch=pgm_read_byte(&cfont.font[temp+zz]); 
				for(i=0;i<8;i++)
    75f0:	8f ef       	ldi	r24, 0xFF	; 255
    75f2:	a8 16       	cp	r10, r24
    75f4:	b8 06       	cpc	r11, r24
    75f6:	c1 f6       	brne	.-80     	; 0x75a8 <_ZN4UTFT9printCharEhii+0x2fe>
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
    75f8:	9f ef       	ldi	r25, 0xFF	; 255
    75fa:	c9 1a       	sub	r12, r25
    75fc:	d9 0a       	sbc	r13, r25
    75fe:	a8 e0       	ldi	r26, 0x08	; 8
    7600:	8a 0e       	add	r8, r26
    7602:	91 1c       	adc	r9, r1
    7604:	b2 cf       	rjmp	.-156    	; 0x756a <_ZN4UTFT9printCharEhii+0x2c0>
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
						setPixel((fch<<8)|fcl);
					} 
				}
			}
			temp+=(cfont.x_size/8);
    7606:	28 0e       	add	r2, r24
    7608:	39 1e       	adc	r3, r25
    760a:	bf ef       	ldi	r27, 0xFF	; 255
    760c:	eb 1a       	sub	r14, r27
    760e:	fb 0a       	sbc	r15, r27
		}
	}
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
    7610:	99 cf       	rjmp	.-206    	; 0x7544 <_ZN4UTFT9printCharEhii+0x29a>
			}
			temp+=(cfont.x_size/8);
		}
	}

	sbi(P_CS, B_CS);
    7612:	af 81       	ldd	r26, Y+7	; 0x07
    7614:	b8 85       	ldd	r27, Y+8	; 0x08
    7616:	54 96       	adiw	r26, 0x14	; 20
    7618:	ed 91       	ld	r30, X+
    761a:	fc 91       	ld	r31, X
    761c:	55 97       	sbiw	r26, 0x15	; 21
    761e:	90 81       	ld	r25, Z
    7620:	90 96       	adiw	r26, 0x20	; 32
    7622:	8c 91       	ld	r24, X
    7624:	90 97       	sbiw	r26, 0x20	; 32
    7626:	89 2b       	or	r24, r25
    7628:	80 83       	st	Z, r24
	clrXY();
    762a:	cd 01       	movw	r24, r26
}
    762c:	28 96       	adiw	r28, 0x08	; 8
    762e:	0f b6       	in	r0, 0x3f	; 63
    7630:	f8 94       	cli
    7632:	de bf       	out	0x3e, r29	; 62
    7634:	0f be       	out	0x3f, r0	; 63
    7636:	cd bf       	out	0x3d, r28	; 61
    7638:	df 91       	pop	r29
    763a:	cf 91       	pop	r28
    763c:	1f 91       	pop	r17
    763e:	0f 91       	pop	r16
    7640:	ff 90       	pop	r15
    7642:	ef 90       	pop	r14
    7644:	df 90       	pop	r13
    7646:	cf 90       	pop	r12
    7648:	bf 90       	pop	r11
    764a:	af 90       	pop	r10
    764c:	9f 90       	pop	r9
    764e:	8f 90       	pop	r8
    7650:	7f 90       	pop	r7
    7652:	6f 90       	pop	r6
    7654:	5f 90       	pop	r5
    7656:	4f 90       	pop	r4
    7658:	3f 90       	pop	r3
			temp+=(cfont.x_size/8);
		}
	}

	sbi(P_CS, B_CS);
	clrXY();
    765a:	2f 90       	pop	r2
    765c:	9d cb       	rjmp	.-2246   	; 0x6d98 <_ZN4UTFT5clrXYEv>

0000765e <_ZN4UTFT10rotateCharEhiiii>:
}

void UTFT::rotateChar(byte c, int x, int y, int pos, int deg)
{
    765e:	2f 92       	push	r2
    7660:	3f 92       	push	r3
    7662:	4f 92       	push	r4
    7664:	5f 92       	push	r5
    7666:	6f 92       	push	r6
    7668:	7f 92       	push	r7
    766a:	8f 92       	push	r8
    766c:	9f 92       	push	r9
    766e:	af 92       	push	r10
    7670:	bf 92       	push	r11
    7672:	cf 92       	push	r12
    7674:	df 92       	push	r13
    7676:	ef 92       	push	r14
    7678:	ff 92       	push	r15
    767a:	0f 93       	push	r16
    767c:	1f 93       	push	r17
    767e:	cf 93       	push	r28
    7680:	df 93       	push	r29
    7682:	cd b7       	in	r28, 0x3d	; 61
    7684:	de b7       	in	r29, 0x3e	; 62
    7686:	ab 97       	sbiw	r28, 0x2b	; 43
    7688:	0f b6       	in	r0, 0x3f	; 63
    768a:	f8 94       	cli
    768c:	de bf       	out	0x3e, r29	; 62
    768e:	0f be       	out	0x3f, r0	; 63
    7690:	cd bf       	out	0x3d, r28	; 61
    7692:	9b a7       	std	Y+43, r25	; 0x2b
    7694:	8a a7       	std	Y+42, r24	; 0x2a
    7696:	76 2e       	mov	r7, r22
    7698:	4a 01       	movw	r8, r20
    769a:	59 01       	movw	r10, r18
    769c:	1b 8f       	std	Y+27, r17	; 0x1b
    769e:	0a 8f       	std	Y+26, r16	; 0x1a
	byte i,j,ch;
	word temp; 
	int newx,newy;
	double radian;
	radian=deg*0.0175;  
    76a0:	b7 01       	movw	r22, r14
    76a2:	ff 0c       	add	r15, r15
    76a4:	88 0b       	sbc	r24, r24
    76a6:	99 0b       	sbc	r25, r25
    76a8:	0e 94 16 44 	call	0x882c	; 0x882c <__floatsisf>
    76ac:	29 e2       	ldi	r18, 0x29	; 41
    76ae:	3c e5       	ldi	r19, 0x5C	; 92
    76b0:	4f e8       	ldi	r20, 0x8F	; 143
    76b2:	5c e3       	ldi	r21, 0x3C	; 60
    76b4:	0e 94 ff 44 	call	0x89fe	; 0x89fe <__mulsf3>
    76b8:	6b 01       	movw	r12, r22
    76ba:	7c 01       	movw	r14, r24

	cbi(P_CS, B_CS);
    76bc:	aa a5       	ldd	r26, Y+42	; 0x2a
    76be:	bb a5       	ldd	r27, Y+43	; 0x2b
    76c0:	54 96       	adiw	r26, 0x14	; 20
    76c2:	ed 91       	ld	r30, X+
    76c4:	fc 91       	ld	r31, X
    76c6:	55 97       	sbiw	r26, 0x15	; 21
    76c8:	90 81       	ld	r25, Z
    76ca:	90 96       	adiw	r26, 0x20	; 32
    76cc:	8c 91       	ld	r24, X
    76ce:	90 97       	sbiw	r26, 0x20	; 32
    76d0:	80 95       	com	r24
    76d2:	89 23       	and	r24, r25
    76d4:	80 83       	st	Z, r24

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    76d6:	9c 96       	adiw	r26, 0x2c	; 44
    76d8:	8c 91       	ld	r24, X
    76da:	9c 97       	sbiw	r26, 0x2c	; 44
    76dc:	86 95       	lsr	r24
    76de:	86 95       	lsr	r24
    76e0:	86 95       	lsr	r24
    76e2:	9d 96       	adiw	r26, 0x2d	; 45
    76e4:	9c 91       	ld	r25, X
    76e6:	9d 97       	sbiw	r26, 0x2d	; 45
    76e8:	27 2d       	mov	r18, r7
    76ea:	30 e0       	ldi	r19, 0x00	; 0
    76ec:	9e 96       	adiw	r26, 0x2e	; 46
    76ee:	4c 91       	ld	r20, X
    76f0:	24 1b       	sub	r18, r20
    76f2:	31 09       	sbc	r19, r1
    76f4:	89 9f       	mul	r24, r25
    76f6:	c0 01       	movw	r24, r0
    76f8:	11 24       	eor	r1, r1
    76fa:	28 9f       	mul	r18, r24
    76fc:	a0 01       	movw	r20, r0
    76fe:	29 9f       	mul	r18, r25
    7700:	50 0d       	add	r21, r0
    7702:	38 9f       	mul	r19, r24
    7704:	50 0d       	add	r21, r0
    7706:	11 24       	eor	r1, r1
    7708:	fa 01       	movw	r30, r20
    770a:	34 96       	adiw	r30, 0x04	; 4
    770c:	fd 83       	std	Y+5, r31	; 0x05
    770e:	ec 83       	std	Y+4, r30	; 0x04
	for(j=0;j<cfont.y_size;j++) 
    7710:	1b 82       	std	Y+3, r1	; 0x03
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    7712:	c4 01       	movw	r24, r8
    7714:	99 0c       	add	r9, r9
    7716:	aa 0b       	sbc	r26, r26
    7718:	bb 0b       	sbc	r27, r27
    771a:	8a a3       	std	Y+34, r24	; 0x22
    771c:	9b a3       	std	Y+35, r25	; 0x23
    771e:	ac a3       	std	Y+36, r26	; 0x24
    7720:	bd a3       	std	Y+37, r27	; 0x25
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    7722:	c5 01       	movw	r24, r10
    7724:	bb 0c       	add	r11, r11
    7726:	aa 0b       	sbc	r26, r26
    7728:	bb 0b       	sbc	r27, r27
    772a:	8e a3       	std	Y+38, r24	; 0x26
    772c:	9f a3       	std	Y+39, r25	; 0x27
    772e:	a8 a7       	std	Y+40, r26	; 0x28
    7730:	b9 a7       	std	Y+41, r27	; 0x29
	radian=deg*0.0175;  

	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
    7732:	aa a5       	ldd	r26, Y+42	; 0x2a
    7734:	bb a5       	ldd	r27, Y+43	; 0x2b
    7736:	9d 96       	adiw	r26, 0x2d	; 45
    7738:	8c 91       	ld	r24, X
    773a:	bb 81       	ldd	r27, Y+3	; 0x03
    773c:	b8 17       	cp	r27, r24
    773e:	08 f0       	brcs	.+2      	; 0x7742 <_ZN4UTFT10rotateCharEhiiii+0xe4>
    7740:	f5 c0       	rjmp	.+490    	; 0x792c <_ZN4UTFT10rotateCharEhiiii+0x2ce>
    7742:	19 86       	std	Y+9, r1	; 0x09
    7744:	18 86       	std	Y+8, r1	; 0x08
    7746:	21 2c       	mov	r2, r1
    7748:	31 2c       	mov	r3, r1
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    774a:	8b 2f       	mov	r24, r27
    774c:	90 e0       	ldi	r25, 0x00	; 0
    774e:	a0 e0       	ldi	r26, 0x00	; 0
    7750:	b0 e0       	ldi	r27, 0x00	; 0
    7752:	8e 8f       	std	Y+30, r24	; 0x1e
    7754:	9f 8f       	std	Y+31, r25	; 0x1f
    7756:	a8 a3       	std	Y+32, r26	; 0x20
    7758:	b9 a3       	std	Y+33, r27	; 0x21
	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
    775a:	aa a5       	ldd	r26, Y+42	; 0x2a
    775c:	bb a5       	ldd	r27, Y+43	; 0x2b
    775e:	9c 96       	adiw	r26, 0x2c	; 44
    7760:	8c 91       	ld	r24, X
    7762:	9c 97       	sbiw	r26, 0x2c	; 44
    7764:	86 95       	lsr	r24
    7766:	86 95       	lsr	r24
    7768:	86 95       	lsr	r24
    776a:	90 e0       	ldi	r25, 0x00	; 0
    776c:	28 16       	cp	r2, r24
    776e:	39 06       	cpc	r3, r25
    7770:	0c f0       	brlt	.+2      	; 0x7774 <_ZN4UTFT10rotateCharEhiiii+0x116>
    7772:	d2 c0       	rjmp	.+420    	; 0x7918 <_ZN4UTFT10rotateCharEhiiii+0x2ba>
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
    7774:	9a 96       	adiw	r26, 0x2a	; 42
    7776:	ed 91       	ld	r30, X+
    7778:	fc 91       	ld	r31, X
    777a:	9b 97       	sbiw	r26, 0x2b	; 43
    777c:	8c 81       	ldd	r24, Y+4	; 0x04
    777e:	9d 81       	ldd	r25, Y+5	; 0x05
    7780:	82 0d       	add	r24, r2
    7782:	93 1d       	adc	r25, r3
    7784:	e8 0f       	add	r30, r24
    7786:	f9 1f       	adc	r31, r25
    7788:	74 90       	lpm	r7, Z
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    778a:	c7 01       	movw	r24, r14
    778c:	b6 01       	movw	r22, r12
    778e:	b0 d7       	rcall	.+3936   	; 0x86f0 <cos>
    7790:	6a 87       	std	Y+10, r22	; 0x0a
    7792:	7b 87       	std	Y+11, r23	; 0x0b
    7794:	8c 87       	std	Y+12, r24	; 0x0c
    7796:	9d 87       	std	Y+13, r25	; 0x0d
    7798:	6e 8d       	ldd	r22, Y+30	; 0x1e
    779a:	7f 8d       	ldd	r23, Y+31	; 0x1f
    779c:	88 a1       	ldd	r24, Y+32	; 0x20
    779e:	99 a1       	ldd	r25, Y+33	; 0x21
    77a0:	0e 94 16 44 	call	0x882c	; 0x882c <__floatsisf>
    77a4:	4b 01       	movw	r8, r22
    77a6:	5c 01       	movw	r10, r24
    77a8:	c7 01       	movw	r24, r14
    77aa:	b6 01       	movw	r22, r12
    77ac:	0e 94 62 45 	call	0x8ac4	; 0x8ac4 <sin>
    77b0:	6e 87       	std	Y+14, r22	; 0x0e
    77b2:	7f 87       	std	Y+15, r23	; 0x0f
    77b4:	88 8b       	std	Y+16, r24	; 0x10
    77b6:	99 8b       	std	Y+17, r25	; 0x11
    77b8:	9b 01       	movw	r18, r22
    77ba:	ac 01       	movw	r20, r24
    77bc:	c5 01       	movw	r24, r10
    77be:	b4 01       	movw	r22, r8
    77c0:	0e 94 ff 44 	call	0x89fe	; 0x89fe <__mulsf3>
    77c4:	6a 8b       	std	Y+18, r22	; 0x12
    77c6:	7b 8b       	std	Y+19, r23	; 0x13
    77c8:	8c 8b       	std	Y+20, r24	; 0x14
    77ca:	9d 8b       	std	Y+21, r25	; 0x15
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    77cc:	a5 01       	movw	r20, r10
    77ce:	94 01       	movw	r18, r8
    77d0:	6a 85       	ldd	r22, Y+10	; 0x0a
    77d2:	7b 85       	ldd	r23, Y+11	; 0x0b
    77d4:	8c 85       	ldd	r24, Y+12	; 0x0c
    77d6:	9d 85       	ldd	r25, Y+13	; 0x0d
    77d8:	0e 94 ff 44 	call	0x89fe	; 0x89fe <__mulsf3>
    77dc:	6e 8b       	std	Y+22, r22	; 0x16
    77de:	7f 8b       	std	Y+23, r23	; 0x17
    77e0:	88 8f       	std	Y+24, r24	; 0x18
    77e2:	99 8f       	std	Y+25, r25	; 0x19
    77e4:	e8 85       	ldd	r30, Y+8	; 0x08
    77e6:	f9 85       	ldd	r31, Y+9	; 0x09
    77e8:	ff 83       	std	Y+7, r31	; 0x07
    77ea:	ee 83       	std	Y+6, r30	; 0x06
    77ec:	27 e0       	ldi	r18, 0x07	; 7
    77ee:	30 e0       	ldi	r19, 0x00	; 0
    77f0:	3a 83       	std	Y+2, r19	; 0x02
    77f2:	29 83       	std	Y+1, r18	; 0x01

				setXY(newx,newy,newx+1,newy+1);
				
				if((ch&(1<<(7-i)))!=0)   
    77f4:	87 2d       	mov	r24, r7
    77f6:	90 e0       	ldi	r25, 0x00	; 0
    77f8:	9d 8f       	std	Y+29, r25	; 0x1d
    77fa:	8c 8f       	std	Y+28, r24	; 0x1c
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    77fc:	aa a5       	ldd	r26, Y+42	; 0x2a
    77fe:	bb a5       	ldd	r27, Y+43	; 0x2b
    7800:	9c 96       	adiw	r26, 0x2c	; 44
    7802:	8c 91       	ld	r24, X
    7804:	ea 8d       	ldd	r30, Y+26	; 0x1a
    7806:	fb 8d       	ldd	r31, Y+27	; 0x1b
    7808:	8e 9f       	mul	r24, r30
    780a:	b0 01       	movw	r22, r0
    780c:	8f 9f       	mul	r24, r31
    780e:	70 0d       	add	r23, r0
    7810:	11 24       	eor	r1, r1
    7812:	2e 81       	ldd	r18, Y+6	; 0x06
    7814:	3f 81       	ldd	r19, Y+7	; 0x07
    7816:	62 0f       	add	r22, r18
    7818:	73 1f       	adc	r23, r19
    781a:	07 2e       	mov	r0, r23
    781c:	00 0c       	add	r0, r0
    781e:	88 0b       	sbc	r24, r24
    7820:	99 0b       	sbc	r25, r25
    7822:	0e 94 16 44 	call	0x882c	; 0x882c <__floatsisf>
    7826:	2b 01       	movw	r4, r22
    7828:	3c 01       	movw	r6, r24
    782a:	2a 85       	ldd	r18, Y+10	; 0x0a
    782c:	3b 85       	ldd	r19, Y+11	; 0x0b
    782e:	4c 85       	ldd	r20, Y+12	; 0x0c
    7830:	5d 85       	ldd	r21, Y+13	; 0x0d
    7832:	0e 94 ff 44 	call	0x89fe	; 0x89fe <__mulsf3>
    7836:	2a 89       	ldd	r18, Y+18	; 0x12
    7838:	3b 89       	ldd	r19, Y+19	; 0x13
    783a:	4c 89       	ldd	r20, Y+20	; 0x14
    783c:	5d 89       	ldd	r21, Y+21	; 0x15
    783e:	ef d6       	rcall	.+3550   	; 0x861e <__subsf3>
    7840:	4b 01       	movw	r8, r22
    7842:	5c 01       	movw	r10, r24
    7844:	6a a1       	ldd	r22, Y+34	; 0x22
    7846:	7b a1       	ldd	r23, Y+35	; 0x23
    7848:	8c a1       	ldd	r24, Y+36	; 0x24
    784a:	9d a1       	ldd	r25, Y+37	; 0x25
    784c:	ef d7       	rcall	.+4062   	; 0x882c <__floatsisf>
    784e:	9b 01       	movw	r18, r22
    7850:	ac 01       	movw	r20, r24
    7852:	c5 01       	movw	r24, r10
    7854:	b4 01       	movw	r22, r8
    7856:	e4 d6       	rcall	.+3528   	; 0x8620 <__addsf3>
    7858:	b6 d7       	rcall	.+3948   	; 0x87c6 <__fixsfsi>
    785a:	4b 01       	movw	r8, r22
    785c:	5c 01       	movw	r10, r24
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    785e:	2e 85       	ldd	r18, Y+14	; 0x0e
    7860:	3f 85       	ldd	r19, Y+15	; 0x0f
    7862:	48 89       	ldd	r20, Y+16	; 0x10
    7864:	59 89       	ldd	r21, Y+17	; 0x11
    7866:	c3 01       	movw	r24, r6
    7868:	b2 01       	movw	r22, r4
    786a:	0e 94 ff 44 	call	0x89fe	; 0x89fe <__mulsf3>
    786e:	2e 89       	ldd	r18, Y+22	; 0x16
    7870:	3f 89       	ldd	r19, Y+23	; 0x17
    7872:	48 8d       	ldd	r20, Y+24	; 0x18
    7874:	59 8d       	ldd	r21, Y+25	; 0x19
    7876:	d4 d6       	rcall	.+3496   	; 0x8620 <__addsf3>
    7878:	2b 01       	movw	r4, r22
    787a:	3c 01       	movw	r6, r24
    787c:	6e a1       	ldd	r22, Y+38	; 0x26
    787e:	7f a1       	ldd	r23, Y+39	; 0x27
    7880:	88 a5       	ldd	r24, Y+40	; 0x28
    7882:	99 a5       	ldd	r25, Y+41	; 0x29
    7884:	d3 d7       	rcall	.+4006   	; 0x882c <__floatsisf>
    7886:	9b 01       	movw	r18, r22
    7888:	ac 01       	movw	r20, r24
    788a:	c3 01       	movw	r24, r6
    788c:	b2 01       	movw	r22, r4
    788e:	c8 d6       	rcall	.+3472   	; 0x8620 <__addsf3>
    7890:	9a d7       	rcall	.+3892   	; 0x87c6 <__fixsfsi>

				setXY(newx,newy,newx+1,newy+1);
    7892:	8b 01       	movw	r16, r22
    7894:	0f 5f       	subi	r16, 0xFF	; 255
    7896:	1f 4f       	sbci	r17, 0xFF	; 255
    7898:	94 01       	movw	r18, r8
    789a:	2f 5f       	subi	r18, 0xFF	; 255
    789c:	3f 4f       	sbci	r19, 0xFF	; 255
    789e:	ab 01       	movw	r20, r22
    78a0:	b4 01       	movw	r22, r8
    78a2:	8a a5       	ldd	r24, Y+42	; 0x2a
    78a4:	9b a5       	ldd	r25, Y+43	; 0x2b
    78a6:	0e 94 a5 22 	call	0x454a	; 0x454a <_ZN4UTFT5setXYEjjjj>
				
				if((ch&(1<<(7-i)))!=0)   
    78aa:	8c 8d       	ldd	r24, Y+28	; 0x1c
    78ac:	9d 8d       	ldd	r25, Y+29	; 0x1d
    78ae:	09 80       	ldd	r0, Y+1	; 0x01
    78b0:	02 c0       	rjmp	.+4      	; 0x78b6 <_ZN4UTFT10rotateCharEhiiii+0x258>
    78b2:	95 95       	asr	r25
    78b4:	87 95       	ror	r24
    78b6:	0a 94       	dec	r0
    78b8:	e2 f7       	brpl	.-8      	; 0x78b2 <_ZN4UTFT10rotateCharEhiiii+0x254>
    78ba:	80 ff       	sbrs	r24, 0
    78bc:	0a c0       	rjmp	.+20     	; 0x78d2 <_ZN4UTFT10rotateCharEhiiii+0x274>
				{
					setPixel((fch<<8)|fcl);
    78be:	aa a5       	ldd	r26, Y+42	; 0x2a
    78c0:	bb a5       	ldd	r27, Y+43	; 0x2b
    78c2:	6d 91       	ld	r22, X+
    78c4:	7c 91       	ld	r23, X
    78c6:	11 97       	sbiw	r26, 0x01	; 1
    78c8:	76 27       	eor	r23, r22
    78ca:	67 27       	eor	r22, r23
    78cc:	76 27       	eor	r23, r22
    78ce:	cd 01       	movw	r24, r26
    78d0:	0b c0       	rjmp	.+22     	; 0x78e8 <_ZN4UTFT10rotateCharEhiiii+0x28a>
				} 
				else  
				{
					if (!_transparent)
    78d2:	ea a5       	ldd	r30, Y+42	; 0x2a
    78d4:	fb a5       	ldd	r31, Y+43	; 0x2b
    78d6:	80 a9       	ldd	r24, Z+48	; 0x30
    78d8:	81 11       	cpse	r24, r1
						setPixel((bch<<8)|bcl);
    78da:	07 c0       	rjmp	.+14     	; 0x78ea <_ZN4UTFT10rotateCharEhiiii+0x28c>
    78dc:	62 81       	ldd	r22, Z+2	; 0x02
    78de:	73 81       	ldd	r23, Z+3	; 0x03
    78e0:	76 27       	eor	r23, r22
    78e2:	67 27       	eor	r22, r23
    78e4:	76 27       	eor	r23, r22
    78e6:	cf 01       	movw	r24, r30
    78e8:	1c db       	rcall	.-2504   	; 0x6f22 <_ZN4UTFT8setPixelEj>
    78ea:	2e 81       	ldd	r18, Y+6	; 0x06
    78ec:	3f 81       	ldd	r19, Y+7	; 0x07
    78ee:	2f 5f       	subi	r18, 0xFF	; 255
    78f0:	3f 4f       	sbci	r19, 0xFF	; 255
    78f2:	3f 83       	std	Y+7, r19	; 0x07
    78f4:	2e 83       	std	Y+6, r18	; 0x06
    78f6:	89 81       	ldd	r24, Y+1	; 0x01
    78f8:	9a 81       	ldd	r25, Y+2	; 0x02
    78fa:	01 97       	sbiw	r24, 0x01	; 1
    78fc:	9a 83       	std	Y+2, r25	; 0x02
    78fe:	89 83       	std	Y+1, r24	; 0x01
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
    7900:	01 96       	adiw	r24, 0x01	; 1
    7902:	09 f0       	breq	.+2      	; 0x7906 <_ZN4UTFT10rotateCharEhiiii+0x2a8>
    7904:	7b cf       	rjmp	.-266    	; 0x77fc <_ZN4UTFT10rotateCharEhiiii+0x19e>
	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
    7906:	bf ef       	ldi	r27, 0xFF	; 255
    7908:	2b 1a       	sub	r2, r27
    790a:	3b 0a       	sbc	r3, r27
    790c:	e8 85       	ldd	r30, Y+8	; 0x08
    790e:	f9 85       	ldd	r31, Y+9	; 0x09
    7910:	38 96       	adiw	r30, 0x08	; 8
    7912:	f9 87       	std	Y+9, r31	; 0x09
    7914:	e8 87       	std	Y+8, r30	; 0x08
    7916:	21 cf       	rjmp	.-446    	; 0x775a <_ZN4UTFT10rotateCharEhiiii+0xfc>
					if (!_transparent)
						setPixel((bch<<8)|bcl);
				}   
			}
		}
		temp+=(cfont.x_size/8);
    7918:	2c 81       	ldd	r18, Y+4	; 0x04
    791a:	3d 81       	ldd	r19, Y+5	; 0x05
    791c:	28 0f       	add	r18, r24
    791e:	39 1f       	adc	r19, r25
    7920:	3d 83       	std	Y+5, r19	; 0x05
    7922:	2c 83       	std	Y+4, r18	; 0x04
	radian=deg*0.0175;  

	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
    7924:	3b 81       	ldd	r19, Y+3	; 0x03
    7926:	3f 5f       	subi	r19, 0xFF	; 255
    7928:	3b 83       	std	Y+3, r19	; 0x03
    792a:	03 cf       	rjmp	.-506    	; 0x7732 <_ZN4UTFT10rotateCharEhiiii+0xd4>
				}   
			}
		}
		temp+=(cfont.x_size/8);
	}
	sbi(P_CS, B_CS);
    792c:	aa a5       	ldd	r26, Y+42	; 0x2a
    792e:	bb a5       	ldd	r27, Y+43	; 0x2b
    7930:	54 96       	adiw	r26, 0x14	; 20
    7932:	ed 91       	ld	r30, X+
    7934:	fc 91       	ld	r31, X
    7936:	55 97       	sbiw	r26, 0x15	; 21
    7938:	90 81       	ld	r25, Z
    793a:	90 96       	adiw	r26, 0x20	; 32
    793c:	8c 91       	ld	r24, X
    793e:	90 97       	sbiw	r26, 0x20	; 32
    7940:	89 2b       	or	r24, r25
    7942:	80 83       	st	Z, r24
	clrXY();
    7944:	cd 01       	movw	r24, r26
}
    7946:	ab 96       	adiw	r28, 0x2b	; 43
    7948:	0f b6       	in	r0, 0x3f	; 63
    794a:	f8 94       	cli
    794c:	de bf       	out	0x3e, r29	; 62
    794e:	0f be       	out	0x3f, r0	; 63
    7950:	cd bf       	out	0x3d, r28	; 61
    7952:	df 91       	pop	r29
    7954:	cf 91       	pop	r28
    7956:	1f 91       	pop	r17
    7958:	0f 91       	pop	r16
    795a:	ff 90       	pop	r15
    795c:	ef 90       	pop	r14
    795e:	df 90       	pop	r13
    7960:	cf 90       	pop	r12
    7962:	bf 90       	pop	r11
    7964:	af 90       	pop	r10
    7966:	9f 90       	pop	r9
    7968:	8f 90       	pop	r8
    796a:	7f 90       	pop	r7
    796c:	6f 90       	pop	r6
    796e:	5f 90       	pop	r5
    7970:	4f 90       	pop	r4
    7972:	3f 90       	pop	r3
			}
		}
		temp+=(cfont.x_size/8);
	}
	sbi(P_CS, B_CS);
	clrXY();
    7974:	2f 90       	pop	r2
    7976:	10 ca       	rjmp	.-3040   	; 0x6d98 <_ZN4UTFT5clrXYEv>

00007978 <_ZN4UTFT5printEPciii>:
}

void UTFT::print(char *st, int x, int y, int deg)
{
    7978:	2f 92       	push	r2
    797a:	3f 92       	push	r3
    797c:	4f 92       	push	r4
    797e:	5f 92       	push	r5
    7980:	6f 92       	push	r6
    7982:	7f 92       	push	r7
    7984:	8f 92       	push	r8
    7986:	9f 92       	push	r9
    7988:	af 92       	push	r10
    798a:	bf 92       	push	r11
    798c:	cf 92       	push	r12
    798e:	df 92       	push	r13
    7990:	ef 92       	push	r14
    7992:	ff 92       	push	r15
    7994:	0f 93       	push	r16
    7996:	1f 93       	push	r17
    7998:	cf 93       	push	r28
    799a:	df 93       	push	r29
    799c:	6c 01       	movw	r12, r24
    799e:	2b 01       	movw	r4, r22
    79a0:	ea 01       	movw	r28, r20
    79a2:	39 01       	movw	r6, r18
    79a4:	18 01       	movw	r2, r16
	int stl, i;

	stl = strlen(st);
    79a6:	fb 01       	movw	r30, r22
    79a8:	01 90       	ld	r0, Z+
    79aa:	00 20       	and	r0, r0
    79ac:	e9 f7       	brne	.-6      	; 0x79a8 <_ZN4UTFT5printEPciii+0x30>
    79ae:	31 97       	sbiw	r30, 0x01	; 1
    79b0:	5f 01       	movw	r10, r30
    79b2:	a6 1a       	sub	r10, r22
    79b4:	b7 0a       	sbc	r11, r23

	if (orient==PORTRAIT)
    79b6:	fc 01       	movw	r30, r24
    79b8:	84 81       	ldd	r24, Z+4	; 0x04
    79ba:	81 11       	cpse	r24, r1
    79bc:	19 c0       	rjmp	.+50     	; 0x79f0 <_ZN4UTFT5printEPciii+0x78>
	{
	if (x==RIGHT)
    79be:	4f 30       	cpi	r20, 0x0F	; 15
    79c0:	57 42       	sbci	r21, 0x27	; 39
    79c2:	61 f4       	brne	.+24     	; 0x79dc <_ZN4UTFT5printEPciii+0x64>
		x=(disp_x_size+1)-(stl*cfont.x_size);
    79c4:	f6 01       	movw	r30, r12
    79c6:	c5 81       	ldd	r28, Z+5	; 0x05
    79c8:	d6 81       	ldd	r29, Z+6	; 0x06
    79ca:	21 96       	adiw	r28, 0x01	; 1
    79cc:	24 a5       	ldd	r18, Z+44	; 0x2c
    79ce:	2a 9d       	mul	r18, r10
    79d0:	c0 01       	movw	r24, r0
    79d2:	2b 9d       	mul	r18, r11
    79d4:	90 0d       	add	r25, r0
    79d6:	11 24       	eor	r1, r1
    79d8:	c8 1b       	sub	r28, r24
    79da:	d9 0b       	sbc	r29, r25
	if (x==CENTER)
    79dc:	ce 30       	cpi	r28, 0x0E	; 14
    79de:	f7 e2       	ldi	r31, 0x27	; 39
    79e0:	df 07       	cpc	r29, r31
    79e2:	c1 f5       	brne	.+112    	; 0x7a54 <_ZN4UTFT5printEPciii+0xdc>
		x=((disp_x_size+1)-(stl*cfont.x_size))/2;
    79e4:	f6 01       	movw	r30, r12
    79e6:	85 81       	ldd	r24, Z+5	; 0x05
    79e8:	96 81       	ldd	r25, Z+6	; 0x06
    79ea:	a7 81       	ldd	r26, Z+7	; 0x07
    79ec:	b0 85       	ldd	r27, Z+8	; 0x08
    79ee:	18 c0       	rjmp	.+48     	; 0x7a20 <_ZN4UTFT5printEPciii+0xa8>
	}
	else
	{
	if (x==RIGHT)
    79f0:	4f 30       	cpi	r20, 0x0F	; 15
    79f2:	57 42       	sbci	r21, 0x27	; 39
    79f4:	61 f4       	brne	.+24     	; 0x7a0e <_ZN4UTFT5printEPciii+0x96>
		x=(disp_y_size+1)-(stl*cfont.x_size);
    79f6:	f6 01       	movw	r30, r12
    79f8:	c1 85       	ldd	r28, Z+9	; 0x09
    79fa:	d2 85       	ldd	r29, Z+10	; 0x0a
    79fc:	21 96       	adiw	r28, 0x01	; 1
    79fe:	24 a5       	ldd	r18, Z+44	; 0x2c
    7a00:	2a 9d       	mul	r18, r10
    7a02:	c0 01       	movw	r24, r0
    7a04:	2b 9d       	mul	r18, r11
    7a06:	90 0d       	add	r25, r0
    7a08:	11 24       	eor	r1, r1
    7a0a:	c8 1b       	sub	r28, r24
    7a0c:	d9 0b       	sbc	r29, r25
	if (x==CENTER)
    7a0e:	ce 30       	cpi	r28, 0x0E	; 14
    7a10:	f7 e2       	ldi	r31, 0x27	; 39
    7a12:	df 07       	cpc	r29, r31
    7a14:	f9 f4       	brne	.+62     	; 0x7a54 <_ZN4UTFT5printEPciii+0xdc>
		x=((disp_y_size+1)-(stl*cfont.x_size))/2;
    7a16:	f6 01       	movw	r30, r12
    7a18:	81 85       	ldd	r24, Z+9	; 0x09
    7a1a:	92 85       	ldd	r25, Z+10	; 0x0a
    7a1c:	a3 85       	ldd	r26, Z+11	; 0x0b
    7a1e:	b4 85       	ldd	r27, Z+12	; 0x0c
    7a20:	01 96       	adiw	r24, 0x01	; 1
    7a22:	a1 1d       	adc	r26, r1
    7a24:	b1 1d       	adc	r27, r1
    7a26:	24 a5       	ldd	r18, Z+44	; 0x2c
    7a28:	2a 9d       	mul	r18, r10
    7a2a:	80 01       	movw	r16, r0
    7a2c:	2b 9d       	mul	r18, r11
    7a2e:	10 0d       	add	r17, r0
    7a30:	11 24       	eor	r1, r1
    7a32:	01 2e       	mov	r0, r17
    7a34:	00 0c       	add	r0, r0
    7a36:	22 0b       	sbc	r18, r18
    7a38:	33 0b       	sbc	r19, r19
    7a3a:	bc 01       	movw	r22, r24
    7a3c:	cd 01       	movw	r24, r26
    7a3e:	60 1b       	sub	r22, r16
    7a40:	71 0b       	sbc	r23, r17
    7a42:	82 0b       	sbc	r24, r18
    7a44:	93 0b       	sbc	r25, r19
    7a46:	22 e0       	ldi	r18, 0x02	; 2
    7a48:	30 e0       	ldi	r19, 0x00	; 0
    7a4a:	40 e0       	ldi	r20, 0x00	; 0
    7a4c:	50 e0       	ldi	r21, 0x00	; 0
    7a4e:	0e 94 14 4b 	call	0x9628	; 0x9628 <__divmodsi4>
    7a52:	e9 01       	movw	r28, r18
	}

	for (i=0; i<stl; i++)
    7a54:	81 2c       	mov	r8, r1
    7a56:	91 2c       	mov	r9, r1
    7a58:	8a 14       	cp	r8, r10
    7a5a:	9b 04       	cpc	r9, r11
    7a5c:	0c f5       	brge	.+66     	; 0x7aa0 <_ZN4UTFT5printEPciii+0x128>
		if (deg==0)
    7a5e:	21 14       	cp	r2, r1
    7a60:	31 04       	cpc	r3, r1
    7a62:	79 f4       	brne	.+30     	; 0x7a82 <_ZN4UTFT5printEPciii+0x10a>
			printChar(*st++, x + (i*(cfont.x_size)), y);
    7a64:	f6 01       	movw	r30, r12
    7a66:	84 a5       	ldd	r24, Z+44	; 0x2c
    7a68:	88 9d       	mul	r24, r8
    7a6a:	a0 01       	movw	r20, r0
    7a6c:	89 9d       	mul	r24, r9
    7a6e:	50 0d       	add	r21, r0
    7a70:	11 24       	eor	r1, r1
    7a72:	4c 0f       	add	r20, r28
    7a74:	5d 1f       	adc	r21, r29
    7a76:	93 01       	movw	r18, r6
    7a78:	f2 01       	movw	r30, r4
    7a7a:	60 81       	ld	r22, Z
    7a7c:	c6 01       	movw	r24, r12
    7a7e:	15 dc       	rcall	.-2006   	; 0x72aa <_ZN4UTFT9printCharEhii>
    7a80:	08 c0       	rjmp	.+16     	; 0x7a92 <_ZN4UTFT5printEPciii+0x11a>
		else
			rotateChar(*st++, x, y, i, deg);
    7a82:	71 01       	movw	r14, r2
    7a84:	84 01       	movw	r16, r8
    7a86:	93 01       	movw	r18, r6
    7a88:	ae 01       	movw	r20, r28
    7a8a:	f2 01       	movw	r30, r4
    7a8c:	60 81       	ld	r22, Z
    7a8e:	c6 01       	movw	r24, r12
    7a90:	e6 dd       	rcall	.-1076   	; 0x765e <_ZN4UTFT10rotateCharEhiiii>
		x=(disp_y_size+1)-(stl*cfont.x_size);
	if (x==CENTER)
		x=((disp_y_size+1)-(stl*cfont.x_size))/2;
	}

	for (i=0; i<stl; i++)
    7a92:	ff ef       	ldi	r31, 0xFF	; 255
    7a94:	8f 1a       	sub	r8, r31
    7a96:	9f 0a       	sbc	r9, r31
    7a98:	8f ef       	ldi	r24, 0xFF	; 255
    7a9a:	48 1a       	sub	r4, r24
    7a9c:	58 0a       	sbc	r5, r24
    7a9e:	dc cf       	rjmp	.-72     	; 0x7a58 <_ZN4UTFT5printEPciii+0xe0>
		if (deg==0)
			printChar(*st++, x + (i*(cfont.x_size)), y);
		else
			rotateChar(*st++, x, y, i, deg);
}
    7aa0:	df 91       	pop	r29
    7aa2:	cf 91       	pop	r28
    7aa4:	1f 91       	pop	r17
    7aa6:	0f 91       	pop	r16
    7aa8:	ff 90       	pop	r15
    7aaa:	ef 90       	pop	r14
    7aac:	df 90       	pop	r13
    7aae:	cf 90       	pop	r12
    7ab0:	bf 90       	pop	r11
    7ab2:	af 90       	pop	r10
    7ab4:	9f 90       	pop	r9
    7ab6:	8f 90       	pop	r8
    7ab8:	7f 90       	pop	r7
    7aba:	6f 90       	pop	r6
    7abc:	5f 90       	pop	r5
    7abe:	4f 90       	pop	r4
    7ac0:	3f 90       	pop	r3
    7ac2:	2f 90       	pop	r2
    7ac4:	08 95       	ret

00007ac6 <_ZN4UTFT5printE6Stringiii>:

void UTFT::print(String st, int x, int y, int deg)
{
    7ac6:	6f 92       	push	r6
    7ac8:	7f 92       	push	r7
    7aca:	8f 92       	push	r8
    7acc:	9f 92       	push	r9
    7ace:	af 92       	push	r10
    7ad0:	bf 92       	push	r11
    7ad2:	cf 92       	push	r12
    7ad4:	df 92       	push	r13
    7ad6:	ef 92       	push	r14
    7ad8:	ff 92       	push	r15
    7ada:	0f 93       	push	r16
    7adc:	1f 93       	push	r17
    7ade:	cf 93       	push	r28
    7ae0:	df 93       	push	r29
    7ae2:	cd b7       	in	r28, 0x3d	; 61
    7ae4:	de b7       	in	r29, 0x3e	; 62
    7ae6:	5c 01       	movw	r10, r24
    7ae8:	cb 01       	movw	r24, r22
    7aea:	4a 01       	movw	r8, r20
    7aec:	39 01       	movw	r6, r18
	char buf[st.length()+1];

	st.toCharArray(buf, st.length()+1);
	print(buf, x, y, deg);
}
    7aee:	cd b6       	in	r12, 0x3d	; 61
    7af0:	de b6       	in	r13, 0x3e	; 62
			rotateChar(*st++, x, y, i, deg);
}

void UTFT::print(String st, int x, int y, int deg)
{
	char buf[st.length()+1];
    7af2:	fb 01       	movw	r30, r22
    7af4:	44 81       	ldd	r20, Z+4	; 0x04
    7af6:	55 81       	ldd	r21, Z+5	; 0x05
    7af8:	4f 5f       	subi	r20, 0xFF	; 255
    7afa:	5f 4f       	sbci	r21, 0xFF	; 255
    7afc:	2d b7       	in	r18, 0x3d	; 61
    7afe:	3e b7       	in	r19, 0x3e	; 62
    7b00:	24 1b       	sub	r18, r20
    7b02:	35 0b       	sbc	r19, r21
    7b04:	0f b6       	in	r0, 0x3f	; 63
    7b06:	f8 94       	cli
    7b08:	3e bf       	out	0x3e, r19	; 62
    7b0a:	0f be       	out	0x3f, r0	; 63
    7b0c:	2d bf       	out	0x3d, r18	; 61
    7b0e:	ed b7       	in	r30, 0x3d	; 61
    7b10:	fe b7       	in	r31, 0x3e	; 62
    7b12:	31 96       	adiw	r30, 0x01	; 1
    7b14:	7f 01       	movw	r14, r30
	void setCharAt(unsigned int index, char c);
	char operator [] (unsigned int index) const;
	char& operator [] (unsigned int index);
	void getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index=0) const;
	void toCharArray(char *buf, unsigned int bufsize, unsigned int index=0) const
		{ getBytes((unsigned char *)buf, bufsize, index); }
    7b16:	20 e0       	ldi	r18, 0x00	; 0
    7b18:	30 e0       	ldi	r19, 0x00	; 0
    7b1a:	bf 01       	movw	r22, r30
    7b1c:	0e 94 82 49 	call	0x9304	; 0x9304 <_ZNK6String8getBytesEPhjj>

	st.toCharArray(buf, st.length()+1);
	print(buf, x, y, deg);
    7b20:	93 01       	movw	r18, r6
    7b22:	a4 01       	movw	r20, r8
    7b24:	b7 01       	movw	r22, r14
    7b26:	c5 01       	movw	r24, r10
    7b28:	27 df       	rcall	.-434    	; 0x7978 <_ZN4UTFT5printEPciii>
}
    7b2a:	0f b6       	in	r0, 0x3f	; 63
    7b2c:	f8 94       	cli
    7b2e:	de be       	out	0x3e, r13	; 62
    7b30:	0f be       	out	0x3f, r0	; 63
    7b32:	cd be       	out	0x3d, r12	; 61
    7b34:	df 91       	pop	r29
    7b36:	cf 91       	pop	r28
    7b38:	1f 91       	pop	r17
    7b3a:	0f 91       	pop	r16
    7b3c:	ff 90       	pop	r15
    7b3e:	ef 90       	pop	r14
    7b40:	df 90       	pop	r13
    7b42:	cf 90       	pop	r12
    7b44:	bf 90       	pop	r11
    7b46:	af 90       	pop	r10
    7b48:	9f 90       	pop	r9
    7b4a:	8f 90       	pop	r8
    7b4c:	7f 90       	pop	r7
    7b4e:	6f 90       	pop	r6
    7b50:	08 95       	ret

00007b52 <_ZN4UTFT9printNumIEjiiic>:

void UTFT::printNumI(uint16_t num, int x, int y, int length, char filler)
{
    7b52:	2f 92       	push	r2
    7b54:	3f 92       	push	r3
    7b56:	4f 92       	push	r4
    7b58:	5f 92       	push	r5
    7b5a:	6f 92       	push	r6
    7b5c:	7f 92       	push	r7
    7b5e:	8f 92       	push	r8
    7b60:	9f 92       	push	r9
    7b62:	af 92       	push	r10
    7b64:	bf 92       	push	r11
    7b66:	cf 92       	push	r12
    7b68:	df 92       	push	r13
    7b6a:	ef 92       	push	r14
    7b6c:	0f 93       	push	r16
    7b6e:	1f 93       	push	r17
    7b70:	cf 93       	push	r28
    7b72:	df 93       	push	r29
    7b74:	cd b7       	in	r28, 0x3d	; 61
    7b76:	de b7       	in	r29, 0x3e	; 62
    7b78:	e4 97       	sbiw	r28, 0x34	; 52
    7b7a:	0f b6       	in	r0, 0x3f	; 63
    7b7c:	f8 94       	cli
    7b7e:	de bf       	out	0x3e, r29	; 62
    7b80:	0f be       	out	0x3f, r0	; 63
    7b82:	cd bf       	out	0x3d, r28	; 61
    7b84:	1c 01       	movw	r2, r24
    7b86:	5b 01       	movw	r10, r22
    7b88:	2a 01       	movw	r4, r20
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
  
	if (num==0)
    7b8a:	67 2b       	or	r22, r23
    7b8c:	e9 f4       	brne	.+58     	; 0x7bc8 <_ZN4UTFT9printNumIEjiiic+0x76>
	{
		if (length!=0)
    7b8e:	01 15       	cp	r16, r1
    7b90:	11 05       	cpc	r17, r1
    7b92:	b1 f0       	breq	.+44     	; 0x7bc0 <_ZN4UTFT9printNumIEjiiic+0x6e>
    7b94:	de 01       	movw	r26, r28
    7b96:	11 96       	adiw	r26, 0x01	; 1
    7b98:	80 e0       	ldi	r24, 0x00	; 0
    7b9a:	90 e0       	ldi	r25, 0x00	; 0
    7b9c:	fd 01       	movw	r30, r26
		{
			for (c=0; c<(length-1); c++)
    7b9e:	01 50       	subi	r16, 0x01	; 1
    7ba0:	11 09       	sbc	r17, r1
    7ba2:	80 17       	cp	r24, r16
    7ba4:	91 07       	cpc	r25, r17
    7ba6:	1c f4       	brge	.+6      	; 0x7bae <_ZN4UTFT9printNumIEjiiic+0x5c>
				st[c]=filler;
    7ba8:	ed 92       	st	X+, r14
  
	if (num==0)
	{
		if (length!=0)
		{
			for (c=0; c<(length-1); c++)
    7baa:	01 96       	adiw	r24, 0x01	; 1
    7bac:	fa cf       	rjmp	.-12     	; 0x7ba2 <_ZN4UTFT9printNumIEjiiic+0x50>
				st[c]=filler;
			st[c]=48;
    7bae:	e8 0f       	add	r30, r24
    7bb0:	f9 1f       	adc	r31, r25
    7bb2:	40 e3       	ldi	r20, 0x30	; 48
    7bb4:	40 83       	st	Z, r20
			st[c+1]=0;
    7bb6:	fe 01       	movw	r30, r28
    7bb8:	e8 0f       	add	r30, r24
    7bba:	f9 1f       	adc	r31, r25
    7bbc:	12 82       	std	Z+2, r1	; 0x02
    7bbe:	4e c0       	rjmp	.+156    	; 0x7c5c <_ZN4UTFT9printNumIEjiiic+0x10a>
		}
		else
		{
			st[0]=48;
    7bc0:	80 e3       	ldi	r24, 0x30	; 48
    7bc2:	89 83       	std	Y+1, r24	; 0x01
			st[1]=0;
    7bc4:	1a 82       	std	Y+2, r1	; 0x02
    7bc6:	4a c0       	rjmp	.+148    	; 0x7c5c <_ZN4UTFT9printNumIEjiiic+0x10a>
    7bc8:	fe 01       	movw	r30, r28
    7bca:	7c 96       	adiw	r30, 0x1c	; 28
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
  
	if (num==0)
    7bcc:	4f 01       	movw	r8, r30
			num=-num;
		}
	  
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7bce:	8a e0       	ldi	r24, 0x0A	; 10
    7bd0:	68 2e       	mov	r6, r24
    7bd2:	71 2c       	mov	r7, r1
    7bd4:	c5 01       	movw	r24, r10
    7bd6:	b3 01       	movw	r22, r6
    7bd8:	0e 94 cb 4a 	call	0x9596	; 0x9596 <__udivmodhi4>
    7bdc:	40 e3       	ldi	r20, 0x30	; 48
    7bde:	48 0f       	add	r20, r24
    7be0:	d4 01       	movw	r26, r8
    7be2:	4d 93       	st	X+, r20
    7be4:	4d 01       	movw	r8, r26
    7be6:	6d 01       	movw	r12, r26
    7be8:	ce 1a       	sub	r12, r30
    7bea:	df 0a       	sbc	r13, r31
			c++;
			num=(num-(num % 10))/10;
    7bec:	a5 01       	movw	r20, r10
    7bee:	48 1b       	sub	r20, r24
    7bf0:	59 0b       	sbc	r21, r25
    7bf2:	ca 01       	movw	r24, r20
    7bf4:	b3 01       	movw	r22, r6
    7bf6:	0e 94 cb 4a 	call	0x9596	; 0x9596 <__udivmodhi4>
    7bfa:	5b 01       	movw	r10, r22
		{
			neg=true;
			num=-num;
		}
	  
		while (num>0)
    7bfc:	67 2b       	or	r22, r23
    7bfe:	51 f7       	brne	.-44     	; 0x7bd4 <_ZN4UTFT9printNumIEjiiic+0x82>
		{
			buf[c]=48+(num % 10);
			c++;
			num=(num-(num % 10))/10;
		}
		buf[c]=0;
    7c00:	df 01       	movw	r26, r30
    7c02:	ac 0d       	add	r26, r12
    7c04:	bd 1d       	adc	r27, r13
    7c06:	1c 92       	st	X, r1
    7c08:	ce 01       	movw	r24, r28
    7c0a:	01 96       	adiw	r24, 0x01	; 1
		if (neg)
		{
			st[0]=45;
		}
	  
		if (length>(c+neg))
    7c0c:	c0 16       	cp	r12, r16
    7c0e:	d1 06       	cpc	r13, r17
    7c10:	74 f4       	brge	.+28     	; 0x7c2e <_ZN4UTFT9printNumIEjiiic+0xdc>
    7c12:	dc 01       	movw	r26, r24
		{
			for (int i=0; i<(length-c-neg); i++)
    7c14:	0c 19       	sub	r16, r12
    7c16:	1d 09       	sbc	r17, r13
    7c18:	ad 01       	movw	r20, r26
    7c1a:	48 1b       	sub	r20, r24
    7c1c:	59 0b       	sbc	r21, r25
    7c1e:	40 17       	cp	r20, r16
    7c20:	51 07       	cpc	r21, r17
    7c22:	1c f0       	brlt	.+6      	; 0x7c2a <_ZN4UTFT9printNumIEjiiic+0xd8>
    7c24:	17 ff       	sbrs	r17, 7
    7c26:	05 c0       	rjmp	.+10     	; 0x7c32 <_ZN4UTFT9printNumIEjiiic+0xe0>
    7c28:	02 c0       	rjmp	.+4      	; 0x7c2e <_ZN4UTFT9printNumIEjiiic+0xdc>
			{
				st[i+neg]=filler;
    7c2a:	ed 92       	st	X+, r14
			st[0]=45;
		}
	  
		if (length>(c+neg))
		{
			for (int i=0; i<(length-c-neg); i++)
    7c2c:	f5 cf       	rjmp	.-22     	; 0x7c18 <_ZN4UTFT9printNumIEjiiic+0xc6>
void UTFT::printNumI(uint16_t num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
    7c2e:	00 e0       	ldi	r16, 0x00	; 0
    7c30:	10 e0       	ldi	r17, 0x00	; 0
    7c32:	ec 0d       	add	r30, r12
    7c34:	fd 1d       	adc	r31, r13
    7c36:	dc 01       	movw	r26, r24
    7c38:	a0 0f       	add	r26, r16
    7c3a:	b1 1f       	adc	r27, r17
    7c3c:	be 01       	movw	r22, r28
    7c3e:	65 5e       	subi	r22, 0xE5	; 229
    7c40:	7f 4f       	sbci	r23, 0xFF	; 255
    7c42:	31 97       	sbiw	r30, 0x01	; 1
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7c44:	e6 17       	cp	r30, r22
    7c46:	f7 07       	cpc	r31, r23
    7c48:	19 f0       	breq	.+6      	; 0x7c50 <_ZN4UTFT9printNumIEjiiic+0xfe>
		{
			st[i+neg+f]=buf[c-i-1];
    7c4a:	40 81       	ld	r20, Z
    7c4c:	4d 93       	st	X+, r20
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7c4e:	f9 cf       	rjmp	.-14     	; 0x7c42 <_ZN4UTFT9printNumIEjiiic+0xf0>
		{
			st[i+neg+f]=buf[c-i-1];
		}
		st[c+neg+f]=0;
    7c50:	08 0f       	add	r16, r24
    7c52:	19 1f       	adc	r17, r25
    7c54:	f8 01       	movw	r30, r16
    7c56:	ec 0d       	add	r30, r12
    7c58:	fd 1d       	adc	r31, r13
    7c5a:	10 82       	st	Z, r1

	}

	print(st,x,y);
    7c5c:	00 e0       	ldi	r16, 0x00	; 0
    7c5e:	10 e0       	ldi	r17, 0x00	; 0
    7c60:	a2 01       	movw	r20, r4
    7c62:	be 01       	movw	r22, r28
    7c64:	6f 5f       	subi	r22, 0xFF	; 255
    7c66:	7f 4f       	sbci	r23, 0xFF	; 255
    7c68:	c1 01       	movw	r24, r2
    7c6a:	86 de       	rcall	.-756    	; 0x7978 <_ZN4UTFT5printEPciii>
}
    7c6c:	e4 96       	adiw	r28, 0x34	; 52
    7c6e:	0f b6       	in	r0, 0x3f	; 63
    7c70:	f8 94       	cli
    7c72:	de bf       	out	0x3e, r29	; 62
    7c74:	0f be       	out	0x3f, r0	; 63
    7c76:	cd bf       	out	0x3d, r28	; 61
    7c78:	df 91       	pop	r29
    7c7a:	cf 91       	pop	r28
    7c7c:	1f 91       	pop	r17
    7c7e:	0f 91       	pop	r16
    7c80:	ef 90       	pop	r14
    7c82:	df 90       	pop	r13
    7c84:	cf 90       	pop	r12
    7c86:	bf 90       	pop	r11
    7c88:	af 90       	pop	r10
    7c8a:	9f 90       	pop	r9
    7c8c:	8f 90       	pop	r8
    7c8e:	7f 90       	pop	r7
    7c90:	6f 90       	pop	r6
    7c92:	5f 90       	pop	r5
    7c94:	4f 90       	pop	r4
    7c96:	3f 90       	pop	r3
    7c98:	2f 90       	pop	r2
    7c9a:	08 95       	ret

00007c9c <_ZN4UTFT9printNumIEhiiic>:

void UTFT::printNumI(uint8_t num, int x, int y, int length, char filler)
{
    7c9c:	4f 92       	push	r4
    7c9e:	5f 92       	push	r5
    7ca0:	6f 92       	push	r6
    7ca2:	7f 92       	push	r7
    7ca4:	8f 92       	push	r8
    7ca6:	9f 92       	push	r9
    7ca8:	af 92       	push	r10
    7caa:	bf 92       	push	r11
    7cac:	cf 92       	push	r12
    7cae:	df 92       	push	r13
    7cb0:	ef 92       	push	r14
    7cb2:	ff 92       	push	r15
    7cb4:	0f 93       	push	r16
    7cb6:	1f 93       	push	r17
    7cb8:	cf 93       	push	r28
    7cba:	df 93       	push	r29
    7cbc:	cd b7       	in	r28, 0x3d	; 61
    7cbe:	de b7       	in	r29, 0x3e	; 62
    7cc0:	e4 97       	sbiw	r28, 0x34	; 52
    7cc2:	0f b6       	in	r0, 0x3f	; 63
    7cc4:	f8 94       	cli
    7cc6:	de bf       	out	0x3e, r29	; 62
    7cc8:	0f be       	out	0x3f, r0	; 63
    7cca:	cd bf       	out	0x3d, r28	; 61
    7ccc:	5c 01       	movw	r10, r24
    7cce:	f6 2e       	mov	r15, r22
    7cd0:	4a 01       	movw	r8, r20
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
	
	if (num==0)
    7cd2:	61 11       	cpse	r22, r1
    7cd4:	1d c0       	rjmp	.+58     	; 0x7d10 <_ZN4UTFT9printNumIEhiiic+0x74>
	{
		if (length!=0)
    7cd6:	01 15       	cp	r16, r1
    7cd8:	11 05       	cpc	r17, r1
    7cda:	b1 f0       	breq	.+44     	; 0x7d08 <_ZN4UTFT9printNumIEhiiic+0x6c>
    7cdc:	de 01       	movw	r26, r28
    7cde:	11 96       	adiw	r26, 0x01	; 1
    7ce0:	80 e0       	ldi	r24, 0x00	; 0
    7ce2:	90 e0       	ldi	r25, 0x00	; 0
    7ce4:	fd 01       	movw	r30, r26
		{
			for (c=0; c<(length-1); c++)
    7ce6:	01 50       	subi	r16, 0x01	; 1
    7ce8:	11 09       	sbc	r17, r1
    7cea:	80 17       	cp	r24, r16
    7cec:	91 07       	cpc	r25, r17
    7cee:	1c f4       	brge	.+6      	; 0x7cf6 <_ZN4UTFT9printNumIEhiiic+0x5a>
			st[c]=filler;
    7cf0:	ed 92       	st	X+, r14
	
	if (num==0)
	{
		if (length!=0)
		{
			for (c=0; c<(length-1); c++)
    7cf2:	01 96       	adiw	r24, 0x01	; 1
    7cf4:	fa cf       	rjmp	.-12     	; 0x7cea <_ZN4UTFT9printNumIEhiiic+0x4e>
			st[c]=filler;
			st[c]=48;
    7cf6:	e8 0f       	add	r30, r24
    7cf8:	f9 1f       	adc	r31, r25
    7cfa:	40 e3       	ldi	r20, 0x30	; 48
    7cfc:	40 83       	st	Z, r20
			st[c+1]=0;
    7cfe:	fe 01       	movw	r30, r28
    7d00:	e8 0f       	add	r30, r24
    7d02:	f9 1f       	adc	r31, r25
    7d04:	12 82       	std	Z+2, r1	; 0x02
    7d06:	50 c0       	rjmp	.+160    	; 0x7da8 <_ZN4UTFT9printNumIEhiiic+0x10c>
		}
		else
		{
			st[0]=48;
    7d08:	80 e3       	ldi	r24, 0x30	; 48
    7d0a:	89 83       	std	Y+1, r24	; 0x01
			st[1]=0;
    7d0c:	1a 82       	std	Y+2, r1	; 0x02
    7d0e:	4c c0       	rjmp	.+152    	; 0x7da8 <_ZN4UTFT9printNumIEhiiic+0x10c>
    7d10:	fe 01       	movw	r30, r28
    7d12:	7c 96       	adiw	r30, 0x1c	; 28
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
	
	if (num==0)
    7d14:	3f 01       	movw	r6, r30
			num=-num;
		}
		
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7d16:	4a e0       	ldi	r20, 0x0A	; 10
			c++;
			num=(num-(num % 10))/10;
    7d18:	8a e0       	ldi	r24, 0x0A	; 10
    7d1a:	48 2e       	mov	r4, r24
    7d1c:	51 2c       	mov	r5, r1
			num=-num;
		}
		
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7d1e:	8f 2d       	mov	r24, r15
    7d20:	64 2f       	mov	r22, r20
    7d22:	0e 94 b2 4a 	call	0x9564	; 0x9564 <__udivmodqi4>
    7d26:	59 2f       	mov	r21, r25
    7d28:	80 e3       	ldi	r24, 0x30	; 48
    7d2a:	89 0f       	add	r24, r25
    7d2c:	d3 01       	movw	r26, r6
    7d2e:	8d 93       	st	X+, r24
    7d30:	3d 01       	movw	r6, r26
    7d32:	6d 01       	movw	r12, r26
    7d34:	ce 1a       	sub	r12, r30
    7d36:	df 0a       	sbc	r13, r31
			c++;
			num=(num-(num % 10))/10;
    7d38:	8f 2d       	mov	r24, r15
    7d3a:	90 e0       	ldi	r25, 0x00	; 0
    7d3c:	85 1b       	sub	r24, r21
    7d3e:	91 09       	sbc	r25, r1
    7d40:	b2 01       	movw	r22, r4
    7d42:	0e 94 df 4a 	call	0x95be	; 0x95be <__divmodhi4>
    7d46:	f6 2e       	mov	r15, r22
		{
			neg=true;
			num=-num;
		}
		
		while (num>0)
    7d48:	61 11       	cpse	r22, r1
    7d4a:	e9 cf       	rjmp	.-46     	; 0x7d1e <_ZN4UTFT9printNumIEhiiic+0x82>
		{
			buf[c]=48+(num % 10);
			c++;
			num=(num-(num % 10))/10;
		}
		buf[c]=0;
    7d4c:	df 01       	movw	r26, r30
    7d4e:	ac 0d       	add	r26, r12
    7d50:	bd 1d       	adc	r27, r13
    7d52:	1c 92       	st	X, r1
    7d54:	ce 01       	movw	r24, r28
    7d56:	01 96       	adiw	r24, 0x01	; 1
		if (neg)
		{
			st[0]=45;
		}
		
		if (length>(c+neg))
    7d58:	c0 16       	cp	r12, r16
    7d5a:	d1 06       	cpc	r13, r17
    7d5c:	74 f4       	brge	.+28     	; 0x7d7a <_ZN4UTFT9printNumIEhiiic+0xde>
    7d5e:	dc 01       	movw	r26, r24
		{
			for (int i=0; i<(length-c-neg); i++)
    7d60:	0c 19       	sub	r16, r12
    7d62:	1d 09       	sbc	r17, r13
    7d64:	ad 01       	movw	r20, r26
    7d66:	48 1b       	sub	r20, r24
    7d68:	59 0b       	sbc	r21, r25
    7d6a:	40 17       	cp	r20, r16
    7d6c:	51 07       	cpc	r21, r17
    7d6e:	1c f0       	brlt	.+6      	; 0x7d76 <_ZN4UTFT9printNumIEhiiic+0xda>
    7d70:	17 ff       	sbrs	r17, 7
    7d72:	05 c0       	rjmp	.+10     	; 0x7d7e <_ZN4UTFT9printNumIEhiiic+0xe2>
    7d74:	02 c0       	rjmp	.+4      	; 0x7d7a <_ZN4UTFT9printNumIEhiiic+0xde>
			{
				st[i+neg]=filler;
    7d76:	ed 92       	st	X+, r14
			st[0]=45;
		}
		
		if (length>(c+neg))
		{
			for (int i=0; i<(length-c-neg); i++)
    7d78:	f5 cf       	rjmp	.-22     	; 0x7d64 <_ZN4UTFT9printNumIEhiiic+0xc8>
void UTFT::printNumI(uint8_t num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
    7d7a:	00 e0       	ldi	r16, 0x00	; 0
    7d7c:	10 e0       	ldi	r17, 0x00	; 0
    7d7e:	ec 0d       	add	r30, r12
    7d80:	fd 1d       	adc	r31, r13
    7d82:	dc 01       	movw	r26, r24
    7d84:	a0 0f       	add	r26, r16
    7d86:	b1 1f       	adc	r27, r17
    7d88:	be 01       	movw	r22, r28
    7d8a:	65 5e       	subi	r22, 0xE5	; 229
    7d8c:	7f 4f       	sbci	r23, 0xFF	; 255
    7d8e:	31 97       	sbiw	r30, 0x01	; 1
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7d90:	e6 17       	cp	r30, r22
    7d92:	f7 07       	cpc	r31, r23
    7d94:	19 f0       	breq	.+6      	; 0x7d9c <_ZN4UTFT9printNumIEhiiic+0x100>
		{
			st[i+neg+f]=buf[c-i-1];
    7d96:	40 81       	ld	r20, Z
    7d98:	4d 93       	st	X+, r20
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7d9a:	f9 cf       	rjmp	.-14     	; 0x7d8e <_ZN4UTFT9printNumIEhiiic+0xf2>
		{
			st[i+neg+f]=buf[c-i-1];
		}
		st[c+neg+f]=0;
    7d9c:	08 0f       	add	r16, r24
    7d9e:	19 1f       	adc	r17, r25
    7da0:	f8 01       	movw	r30, r16
    7da2:	ec 0d       	add	r30, r12
    7da4:	fd 1d       	adc	r31, r13
    7da6:	10 82       	st	Z, r1

	}

	print(st,x,y);
    7da8:	00 e0       	ldi	r16, 0x00	; 0
    7daa:	10 e0       	ldi	r17, 0x00	; 0
    7dac:	a4 01       	movw	r20, r8
    7dae:	be 01       	movw	r22, r28
    7db0:	6f 5f       	subi	r22, 0xFF	; 255
    7db2:	7f 4f       	sbci	r23, 0xFF	; 255
    7db4:	c5 01       	movw	r24, r10
    7db6:	e0 dd       	rcall	.-1088   	; 0x7978 <_ZN4UTFT5printEPciii>
}
    7db8:	e4 96       	adiw	r28, 0x34	; 52
    7dba:	0f b6       	in	r0, 0x3f	; 63
    7dbc:	f8 94       	cli
    7dbe:	de bf       	out	0x3e, r29	; 62
    7dc0:	0f be       	out	0x3f, r0	; 63
    7dc2:	cd bf       	out	0x3d, r28	; 61
    7dc4:	df 91       	pop	r29
    7dc6:	cf 91       	pop	r28
    7dc8:	1f 91       	pop	r17
    7dca:	0f 91       	pop	r16
    7dcc:	ff 90       	pop	r15
    7dce:	ef 90       	pop	r14
    7dd0:	df 90       	pop	r13
    7dd2:	cf 90       	pop	r12
    7dd4:	bf 90       	pop	r11
    7dd6:	af 90       	pop	r10
    7dd8:	9f 90       	pop	r9
    7dda:	8f 90       	pop	r8
    7ddc:	7f 90       	pop	r7
    7dde:	6f 90       	pop	r6
    7de0:	5f 90       	pop	r5
    7de2:	4f 90       	pop	r4
    7de4:	08 95       	ret

00007de6 <_ZN4UTFT9printNumIEaiiic>:

void UTFT::printNumI(int8_t num, int x, int y, int length, char filler)
{
    7de6:	2f 92       	push	r2
    7de8:	3f 92       	push	r3
    7dea:	5f 92       	push	r5
    7dec:	6f 92       	push	r6
    7dee:	7f 92       	push	r7
    7df0:	8f 92       	push	r8
    7df2:	9f 92       	push	r9
    7df4:	af 92       	push	r10
    7df6:	bf 92       	push	r11
    7df8:	cf 92       	push	r12
    7dfa:	df 92       	push	r13
    7dfc:	ef 92       	push	r14
    7dfe:	ff 92       	push	r15
    7e00:	0f 93       	push	r16
    7e02:	1f 93       	push	r17
    7e04:	cf 93       	push	r28
    7e06:	df 93       	push	r29
    7e08:	cd b7       	in	r28, 0x3d	; 61
    7e0a:	de b7       	in	r29, 0x3e	; 62
    7e0c:	e4 97       	sbiw	r28, 0x34	; 52
    7e0e:	0f b6       	in	r0, 0x3f	; 63
    7e10:	f8 94       	cli
    7e12:	de bf       	out	0x3e, r29	; 62
    7e14:	0f be       	out	0x3f, r0	; 63
    7e16:	cd bf       	out	0x3d, r28	; 61
    7e18:	5c 01       	movw	r10, r24
    7e1a:	a6 2f       	mov	r26, r22
    7e1c:	6a 01       	movw	r12, r20
    7e1e:	7e 2c       	mov	r7, r14
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
	
	if (num==0)
    7e20:	61 11       	cpse	r22, r1
    7e22:	1d c0       	rjmp	.+58     	; 0x7e5e <_ZN4UTFT9printNumIEaiiic+0x78>
	{
		if (length!=0)
    7e24:	01 15       	cp	r16, r1
    7e26:	11 05       	cpc	r17, r1
    7e28:	b1 f0       	breq	.+44     	; 0x7e56 <_ZN4UTFT9printNumIEaiiic+0x70>
    7e2a:	de 01       	movw	r26, r28
    7e2c:	11 96       	adiw	r26, 0x01	; 1
    7e2e:	80 e0       	ldi	r24, 0x00	; 0
    7e30:	90 e0       	ldi	r25, 0x00	; 0
    7e32:	fd 01       	movw	r30, r26
		{
			for (c=0; c<(length-1); c++)
    7e34:	01 50       	subi	r16, 0x01	; 1
    7e36:	11 09       	sbc	r17, r1
    7e38:	80 17       	cp	r24, r16
    7e3a:	91 07       	cpc	r25, r17
    7e3c:	1c f4       	brge	.+6      	; 0x7e44 <_ZN4UTFT9printNumIEaiiic+0x5e>
			st[c]=filler;
    7e3e:	7d 92       	st	X+, r7
	
	if (num==0)
	{
		if (length!=0)
		{
			for (c=0; c<(length-1); c++)
    7e40:	01 96       	adiw	r24, 0x01	; 1
    7e42:	fa cf       	rjmp	.-12     	; 0x7e38 <_ZN4UTFT9printNumIEaiiic+0x52>
			st[c]=filler;
			st[c]=48;
    7e44:	e8 0f       	add	r30, r24
    7e46:	f9 1f       	adc	r31, r25
    7e48:	40 e3       	ldi	r20, 0x30	; 48
    7e4a:	40 83       	st	Z, r20
			st[c+1]=0;
    7e4c:	fe 01       	movw	r30, r28
    7e4e:	e8 0f       	add	r30, r24
    7e50:	f9 1f       	adc	r31, r25
    7e52:	12 82       	std	Z+2, r1	; 0x02
    7e54:	7c c0       	rjmp	.+248    	; 0x7f4e <_ZN4UTFT9printNumIEaiiic+0x168>
		}
		else
		{
			st[0]=48;
    7e56:	80 e3       	ldi	r24, 0x30	; 48
    7e58:	89 83       	std	Y+1, r24	; 0x01
			st[1]=0;
    7e5a:	1a 82       	std	Y+2, r1	; 0x02
    7e5c:	78 c0       	rjmp	.+240    	; 0x7f4e <_ZN4UTFT9printNumIEaiiic+0x168>
		}
	}
	else
	{
		if (num<0)
    7e5e:	67 ff       	sbrs	r22, 7
    7e60:	04 c0       	rjmp	.+8      	; 0x7e6a <_ZN4UTFT9printNumIEaiiic+0x84>
		{
			neg=true;
			num=-num;
    7e62:	a1 95       	neg	r26
	}
	else
	{
		if (num<0)
		{
			neg=true;
    7e64:	66 24       	eor	r6, r6
    7e66:	63 94       	inc	r6
    7e68:	01 c0       	rjmp	.+2      	; 0x7e6c <_ZN4UTFT9printNumIEaiiic+0x86>

void UTFT::printNumI(int8_t num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
    7e6a:	61 2c       	mov	r6, r1
    7e6c:	1e 01       	movw	r2, r28
    7e6e:	8c e1       	ldi	r24, 0x1C	; 28
    7e70:	28 0e       	add	r2, r24
    7e72:	31 1c       	adc	r3, r1
	}
	else
	{
		if (num<0)
		{
			neg=true;
    7e74:	71 01       	movw	r14, r2
			num=-num;
		}
		
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7e76:	8a e0       	ldi	r24, 0x0A	; 10
    7e78:	58 2e       	mov	r5, r24
			c++;
			num=(num-(num % 10))/10;
    7e7a:	9a e0       	ldi	r25, 0x0A	; 10
    7e7c:	89 2e       	mov	r8, r25
    7e7e:	91 2c       	mov	r9, r1
    7e80:	a7 01       	movw	r20, r14
    7e82:	42 19       	sub	r20, r2
    7e84:	53 09       	sbc	r21, r3
		{
			neg=true;
			num=-num;
		}
		
		while (num>0)
    7e86:	1a 16       	cp	r1, r26
    7e88:	b4 f4       	brge	.+44     	; 0x7eb6 <_ZN4UTFT9printNumIEaiiic+0xd0>
		{
			buf[c]=48+(num % 10);
    7e8a:	8a 2f       	mov	r24, r26
    7e8c:	65 2d       	mov	r22, r5
    7e8e:	0e 94 be 4a 	call	0x957c	; 0x957c <__divmodqi4>
    7e92:	49 2f       	mov	r20, r25
    7e94:	80 e3       	ldi	r24, 0x30	; 48
    7e96:	89 0f       	add	r24, r25
    7e98:	f7 01       	movw	r30, r14
    7e9a:	81 93       	st	Z+, r24
    7e9c:	7f 01       	movw	r14, r30
			c++;
			num=(num-(num % 10))/10;
    7e9e:	8a 2f       	mov	r24, r26
    7ea0:	aa 0f       	add	r26, r26
    7ea2:	99 0b       	sbc	r25, r25
    7ea4:	84 1b       	sub	r24, r20
    7ea6:	91 09       	sbc	r25, r1
    7ea8:	47 fd       	sbrc	r20, 7
    7eaa:	93 95       	inc	r25
    7eac:	b4 01       	movw	r22, r8
    7eae:	0e 94 df 4a 	call	0x95be	; 0x95be <__divmodhi4>
    7eb2:	a6 2f       	mov	r26, r22
		{
			neg=true;
			num=-num;
		}
		
		while (num>0)
    7eb4:	e5 cf       	rjmp	.-54     	; 0x7e80 <_ZN4UTFT9printNumIEaiiic+0x9a>
		{
			buf[c]=48+(num % 10);
			c++;
			num=(num-(num % 10))/10;
		}
		buf[c]=0;
    7eb6:	d1 01       	movw	r26, r2
    7eb8:	a4 0f       	add	r26, r20
    7eba:	b5 1f       	adc	r27, r21
    7ebc:	1c 92       	st	X, r1
		
		if (neg)
    7ebe:	66 20       	and	r6, r6
    7ec0:	11 f0       	breq	.+4      	; 0x7ec6 <_ZN4UTFT9printNumIEaiiic+0xe0>
		{
			st[0]=45;
    7ec2:	8d e2       	ldi	r24, 0x2D	; 45
    7ec4:	89 83       	std	Y+1, r24	; 0x01
		}
		
		if (length>(c+neg))
    7ec6:	86 2d       	mov	r24, r6
    7ec8:	90 e0       	ldi	r25, 0x00	; 0
    7eca:	4c 01       	movw	r8, r24
    7ecc:	84 0e       	add	r8, r20
    7ece:	95 1e       	adc	r9, r21
    7ed0:	80 16       	cp	r8, r16
    7ed2:	91 06       	cpc	r9, r17
    7ed4:	b4 f4       	brge	.+44     	; 0x7f02 <_ZN4UTFT9printNumIEaiiic+0x11c>
    7ed6:	a1 e0       	ldi	r26, 0x01	; 1
    7ed8:	b0 e0       	ldi	r27, 0x00	; 0
    7eda:	ac 0f       	add	r26, r28
    7edc:	bd 1f       	adc	r27, r29
    7ede:	a8 0f       	add	r26, r24
    7ee0:	b9 1f       	adc	r27, r25
		{
			for (int i=0; i<(length-c-neg); i++)
    7ee2:	04 1b       	sub	r16, r20
    7ee4:	15 0b       	sbc	r17, r21
    7ee6:	08 1b       	sub	r16, r24
    7ee8:	19 0b       	sbc	r17, r25
    7eea:	bd 01       	movw	r22, r26
    7eec:	7d 01       	movw	r14, r26
    7eee:	e6 1a       	sub	r14, r22
    7ef0:	f7 0a       	sbc	r15, r23
    7ef2:	e0 16       	cp	r14, r16
    7ef4:	f1 06       	cpc	r15, r17
    7ef6:	1c f0       	brlt	.+6      	; 0x7efe <_ZN4UTFT9printNumIEaiiic+0x118>
    7ef8:	17 ff       	sbrs	r17, 7
    7efa:	05 c0       	rjmp	.+10     	; 0x7f06 <_ZN4UTFT9printNumIEaiiic+0x120>
    7efc:	02 c0       	rjmp	.+4      	; 0x7f02 <_ZN4UTFT9printNumIEaiiic+0x11c>
			{
				st[i+neg]=filler;
    7efe:	7d 92       	st	X+, r7
			st[0]=45;
		}
		
		if (length>(c+neg))
		{
			for (int i=0; i<(length-c-neg); i++)
    7f00:	f5 cf       	rjmp	.-22     	; 0x7eec <_ZN4UTFT9printNumIEaiiic+0x106>
void UTFT::printNumI(int8_t num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
    7f02:	00 e0       	ldi	r16, 0x00	; 0
    7f04:	10 e0       	ldi	r17, 0x00	; 0
    7f06:	f1 01       	movw	r30, r2
    7f08:	e4 0f       	add	r30, r20
    7f0a:	f5 1f       	adc	r31, r21
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7f0c:	60 e0       	ldi	r22, 0x00	; 0
    7f0e:	70 e0       	ldi	r23, 0x00	; 0
    7f10:	80 0f       	add	r24, r16
    7f12:	91 1f       	adc	r25, r17
    7f14:	31 97       	sbiw	r30, 0x01	; 1
    7f16:	64 17       	cp	r22, r20
    7f18:	75 07       	cpc	r23, r21
    7f1a:	79 f0       	breq	.+30     	; 0x7f3a <_ZN4UTFT9printNumIEaiiic+0x154>
		{
			st[i+neg+f]=buf[c-i-1];
    7f1c:	db 01       	movw	r26, r22
    7f1e:	a8 0f       	add	r26, r24
    7f20:	b9 1f       	adc	r27, r25
    7f22:	ee 24       	eor	r14, r14
    7f24:	e3 94       	inc	r14
    7f26:	f1 2c       	mov	r15, r1
    7f28:	ec 0e       	add	r14, r28
    7f2a:	fd 1e       	adc	r15, r29
    7f2c:	ae 0d       	add	r26, r14
    7f2e:	bf 1d       	adc	r27, r15
    7f30:	f0 80       	ld	r15, Z
    7f32:	fc 92       	st	X, r15
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7f34:	6f 5f       	subi	r22, 0xFF	; 255
    7f36:	7f 4f       	sbci	r23, 0xFF	; 255
    7f38:	ed cf       	rjmp	.-38     	; 0x7f14 <_ZN4UTFT9printNumIEaiiic+0x12e>
		{
			st[i+neg+f]=buf[c-i-1];
		}
		st[c+neg+f]=0;
    7f3a:	81 e0       	ldi	r24, 0x01	; 1
    7f3c:	90 e0       	ldi	r25, 0x00	; 0
    7f3e:	8c 0f       	add	r24, r28
    7f40:	9d 1f       	adc	r25, r29
    7f42:	08 0f       	add	r16, r24
    7f44:	19 1f       	adc	r17, r25
    7f46:	f8 01       	movw	r30, r16
    7f48:	e8 0d       	add	r30, r8
    7f4a:	f9 1d       	adc	r31, r9
    7f4c:	10 82       	st	Z, r1

	}

	print(st,x,y);
    7f4e:	00 e0       	ldi	r16, 0x00	; 0
    7f50:	10 e0       	ldi	r17, 0x00	; 0
    7f52:	a6 01       	movw	r20, r12
    7f54:	be 01       	movw	r22, r28
    7f56:	6f 5f       	subi	r22, 0xFF	; 255
    7f58:	7f 4f       	sbci	r23, 0xFF	; 255
    7f5a:	c5 01       	movw	r24, r10
    7f5c:	0d dd       	rcall	.-1510   	; 0x7978 <_ZN4UTFT5printEPciii>
}
    7f5e:	e4 96       	adiw	r28, 0x34	; 52
    7f60:	0f b6       	in	r0, 0x3f	; 63
    7f62:	f8 94       	cli
    7f64:	de bf       	out	0x3e, r29	; 62
    7f66:	0f be       	out	0x3f, r0	; 63
    7f68:	cd bf       	out	0x3d, r28	; 61
    7f6a:	df 91       	pop	r29
    7f6c:	cf 91       	pop	r28
    7f6e:	1f 91       	pop	r17
    7f70:	0f 91       	pop	r16
    7f72:	ff 90       	pop	r15
    7f74:	ef 90       	pop	r14
    7f76:	df 90       	pop	r13
    7f78:	cf 90       	pop	r12
    7f7a:	bf 90       	pop	r11
    7f7c:	af 90       	pop	r10
    7f7e:	9f 90       	pop	r9
    7f80:	8f 90       	pop	r8
    7f82:	7f 90       	pop	r7
    7f84:	6f 90       	pop	r6
    7f86:	5f 90       	pop	r5
    7f88:	3f 90       	pop	r3
    7f8a:	2f 90       	pop	r2
    7f8c:	08 95       	ret

00007f8e <_ZN4UTFT9printNumFEdhiicic>:

void UTFT::printNumF(double num, byte dec, int x, int y, char divider, int length, char filler)
{
    7f8e:	2f 92       	push	r2
    7f90:	3f 92       	push	r3
    7f92:	4f 92       	push	r4
    7f94:	5f 92       	push	r5
    7f96:	6f 92       	push	r6
    7f98:	7f 92       	push	r7
    7f9a:	8f 92       	push	r8
    7f9c:	af 92       	push	r10
    7f9e:	cf 92       	push	r12
    7fa0:	ef 92       	push	r14
    7fa2:	ff 92       	push	r15
    7fa4:	0f 93       	push	r16
    7fa6:	1f 93       	push	r17
    7fa8:	cf 93       	push	r28
    7faa:	df 93       	push	r29
    7fac:	cd b7       	in	r28, 0x3d	; 61
    7fae:	de b7       	in	r29, 0x3e	; 62
    7fb0:	6d 97       	sbiw	r28, 0x1d	; 29
    7fb2:	0f b6       	in	r0, 0x3f	; 63
    7fb4:	f8 94       	cli
    7fb6:	de bf       	out	0x3e, r29	; 62
    7fb8:	0f be       	out	0x3f, r0	; 63
    7fba:	cd bf       	out	0x3d, r28	; 61
    7fbc:	3c 01       	movw	r6, r24
    7fbe:	1a 01       	movw	r2, r20
    7fc0:	2b 01       	movw	r4, r22
    7fc2:	1d 8f       	std	Y+29, r17	; 0x1d
    7fc4:	0c 8f       	std	Y+28, r16	; 0x1c
    7fc6:	4a 2d       	mov	r20, r10
	char st[27];
	boolean neg=false;

	if (dec<1)
    7fc8:	22 23       	and	r18, r18
    7fca:	21 f0       	breq	.+8      	; 0x7fd4 <_ZN4UTFT9printNumFEdhiicic+0x46>
    7fcc:	26 30       	cpi	r18, 0x06	; 6
    7fce:	18 f0       	brcs	.+6      	; 0x7fd6 <_ZN4UTFT9printNumFEdhiicic+0x48>
    7fd0:	25 e0       	ldi	r18, 0x05	; 5
    7fd2:	01 c0       	rjmp	.+2      	; 0x7fd6 <_ZN4UTFT9printNumFEdhiicic+0x48>
		dec=1;
    7fd4:	21 e0       	ldi	r18, 0x01	; 1
void UTFT::_convert_float(char *buf, double num, int width, byte prec)
{
	dtostrf(num, width, prec, buf);
    7fd6:	8e 01       	movw	r16, r28
    7fd8:	0f 5f       	subi	r16, 0xFF	; 255
    7fda:	1f 4f       	sbci	r17, 0xFF	; 255
    7fdc:	c2 01       	movw	r24, r4
    7fde:	b1 01       	movw	r22, r2
    7fe0:	0e 94 51 4b 	call	0x96a2	; 0x96a2 <dtostrf>
	if (num<0)
		neg = true;

	_convert_float(st, num, length, dec);

	if (divider != '.')
    7fe4:	8e e2       	ldi	r24, 0x2E	; 46
    7fe6:	c8 16       	cp	r12, r24
    7fe8:	61 f0       	breq	.+24     	; 0x8002 <_ZN4UTFT9printNumFEdhiicic+0x74>
    7fea:	f8 01       	movw	r30, r16
    7fec:	ce 01       	movw	r24, r28
    7fee:	4c 96       	adiw	r24, 0x1c	; 28
	{
		for (int i=0; i<sizeof(st); i++)
    7ff0:	e8 17       	cp	r30, r24
    7ff2:	f9 07       	cpc	r31, r25
    7ff4:	31 f0       	breq	.+12     	; 0x8002 <_ZN4UTFT9printNumFEdhiicic+0x74>
			if (st[i]=='.')
    7ff6:	20 81       	ld	r18, Z
    7ff8:	2e 32       	cpi	r18, 0x2E	; 46
    7ffa:	09 f4       	brne	.+2      	; 0x7ffe <_ZN4UTFT9printNumFEdhiicic+0x70>
				st[i]=divider;
    7ffc:	c0 82       	st	Z, r12
    7ffe:	31 96       	adiw	r30, 0x01	; 1

	_convert_float(st, num, length, dec);

	if (divider != '.')
	{
		for (int i=0; i<sizeof(st); i++)
    8000:	f7 cf       	rjmp	.-18     	; 0x7ff0 <_ZN4UTFT9printNumFEdhiicic+0x62>
			if (st[i]=='.')
				st[i]=divider;
	}

	if (filler != ' ')
    8002:	80 e2       	ldi	r24, 0x20	; 32
    8004:	88 16       	cp	r8, r24
    8006:	39 f1       	breq	.+78     	; 0x8056 <_ZN4UTFT9printNumFEdhiicic+0xc8>
	{
		if (neg)
    8008:	20 e0       	ldi	r18, 0x00	; 0
    800a:	30 e0       	ldi	r19, 0x00	; 0
    800c:	a9 01       	movw	r20, r18
    800e:	c2 01       	movw	r24, r4
    8010:	b1 01       	movw	r22, r2
    8012:	6a d3       	rcall	.+1748   	; 0x86e8 <__cmpsf2>
    8014:	87 ff       	sbrs	r24, 7
    8016:	12 c0       	rjmp	.+36     	; 0x803c <_ZN4UTFT9printNumFEdhiicic+0xae>
		{
			st[0]='-';
    8018:	8d e2       	ldi	r24, 0x2D	; 45
    801a:	89 83       	std	Y+1, r24	; 0x01
    801c:	fe 01       	movw	r30, r28
    801e:	31 96       	adiw	r30, 0x01	; 1
    8020:	9e 01       	movw	r18, r28
    8022:	25 5e       	subi	r18, 0xE5	; 229
    8024:	3f 4f       	sbci	r19, 0xFF	; 255
			for (int i=1; i<sizeof(st); i++)
    8026:	e2 17       	cp	r30, r18
    8028:	f3 07       	cpc	r31, r19
    802a:	a9 f0       	breq	.+42     	; 0x8056 <_ZN4UTFT9printNumFEdhiicic+0xc8>
				if ((st[i]==' ') || (st[i]=='-'))
    802c:	81 81       	ldd	r24, Z+1	; 0x01
    802e:	80 32       	cpi	r24, 0x20	; 32
    8030:	11 f0       	breq	.+4      	; 0x8036 <_ZN4UTFT9printNumFEdhiicic+0xa8>
    8032:	8d 32       	cpi	r24, 0x2D	; 45
    8034:	09 f4       	brne	.+2      	; 0x8038 <_ZN4UTFT9printNumFEdhiicic+0xaa>
					st[i]=filler;
    8036:	81 82       	std	Z+1, r8	; 0x01
    8038:	31 96       	adiw	r30, 0x01	; 1
	if (filler != ' ')
	{
		if (neg)
		{
			st[0]='-';
			for (int i=1; i<sizeof(st); i++)
    803a:	f5 cf       	rjmp	.-22     	; 0x8026 <_ZN4UTFT9printNumFEdhiicic+0x98>
    803c:	fe 01       	movw	r30, r28
    803e:	31 96       	adiw	r30, 0x01	; 1
    8040:	ce 01       	movw	r24, r28
    8042:	4c 96       	adiw	r24, 0x1c	; 28
				if ((st[i]==' ') || (st[i]=='-'))
					st[i]=filler;
		}
		else
		{
			for (int i=0; i<sizeof(st); i++)
    8044:	e8 17       	cp	r30, r24
    8046:	f9 07       	cpc	r31, r25
    8048:	31 f0       	breq	.+12     	; 0x8056 <_ZN4UTFT9printNumFEdhiicic+0xc8>
				if (st[i]==' ')
    804a:	20 81       	ld	r18, Z
    804c:	20 32       	cpi	r18, 0x20	; 32
    804e:	09 f4       	brne	.+2      	; 0x8052 <_ZN4UTFT9printNumFEdhiicic+0xc4>
					st[i]=filler;
    8050:	80 82       	st	Z, r8
    8052:	31 96       	adiw	r30, 0x01	; 1
				if ((st[i]==' ') || (st[i]=='-'))
					st[i]=filler;
		}
		else
		{
			for (int i=0; i<sizeof(st); i++)
    8054:	f7 cf       	rjmp	.-18     	; 0x8044 <_ZN4UTFT9printNumFEdhiicic+0xb6>
				if (st[i]==' ')
					st[i]=filler;
		}
	}

	print(st,x,y);
    8056:	00 e0       	ldi	r16, 0x00	; 0
    8058:	10 e0       	ldi	r17, 0x00	; 0
    805a:	97 01       	movw	r18, r14
    805c:	4c 8d       	ldd	r20, Y+28	; 0x1c
    805e:	5d 8d       	ldd	r21, Y+29	; 0x1d
    8060:	be 01       	movw	r22, r28
    8062:	6f 5f       	subi	r22, 0xFF	; 255
    8064:	7f 4f       	sbci	r23, 0xFF	; 255
    8066:	c3 01       	movw	r24, r6
    8068:	87 dc       	rcall	.-1778   	; 0x7978 <_ZN4UTFT5printEPciii>
}
    806a:	6d 96       	adiw	r28, 0x1d	; 29
    806c:	0f b6       	in	r0, 0x3f	; 63
    806e:	f8 94       	cli
    8070:	de bf       	out	0x3e, r29	; 62
    8072:	0f be       	out	0x3f, r0	; 63
    8074:	cd bf       	out	0x3d, r28	; 61
    8076:	df 91       	pop	r29
    8078:	cf 91       	pop	r28
    807a:	1f 91       	pop	r17
    807c:	0f 91       	pop	r16
    807e:	ff 90       	pop	r15
    8080:	ef 90       	pop	r14
    8082:	cf 90       	pop	r12
    8084:	af 90       	pop	r10
    8086:	8f 90       	pop	r8
    8088:	7f 90       	pop	r7
    808a:	6f 90       	pop	r6
    808c:	5f 90       	pop	r5
    808e:	4f 90       	pop	r4
    8090:	3f 90       	pop	r3
    8092:	2f 90       	pop	r2
    8094:	08 95       	ret

00008096 <_ZN4UTFT7setFontEPh>:

void UTFT::setFont(uint8_t* font)
{
    8096:	dc 01       	movw	r26, r24
	cfont.font=font;
    8098:	9b 96       	adiw	r26, 0x2b	; 43
    809a:	7c 93       	st	X, r23
    809c:	6e 93       	st	-X, r22
    809e:	9a 97       	sbiw	r26, 0x2a	; 42
	cfont.x_size=fontbyte(0);
    80a0:	fb 01       	movw	r30, r22
    80a2:	84 91       	lpm	r24, Z
    80a4:	9c 96       	adiw	r26, 0x2c	; 44
    80a6:	8c 93       	st	X, r24
    80a8:	9c 97       	sbiw	r26, 0x2c	; 44
	cfont.y_size=fontbyte(1);
    80aa:	31 96       	adiw	r30, 0x01	; 1
    80ac:	e4 91       	lpm	r30, Z
    80ae:	9d 96       	adiw	r26, 0x2d	; 45
    80b0:	ec 93       	st	X, r30
    80b2:	9d 97       	sbiw	r26, 0x2d	; 45
	cfont.offset=fontbyte(2);
    80b4:	fb 01       	movw	r30, r22
    80b6:	32 96       	adiw	r30, 0x02	; 2
    80b8:	e4 91       	lpm	r30, Z
    80ba:	9e 96       	adiw	r26, 0x2e	; 46
    80bc:	ec 93       	st	X, r30
    80be:	9e 97       	sbiw	r26, 0x2e	; 46
	cfont.numchars=fontbyte(3);
    80c0:	fb 01       	movw	r30, r22
    80c2:	33 96       	adiw	r30, 0x03	; 3
    80c4:	64 91       	lpm	r22, Z
    80c6:	9f 96       	adiw	r26, 0x2f	; 47
    80c8:	6c 93       	st	X, r22
    80ca:	08 95       	ret

000080cc <twi_init>:
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    80cc:	10 92 2e 09 	sts	0x092E, r1	; 0x80092e <twi_state>
    80d0:	81 e0       	ldi	r24, 0x01	; 1
    80d2:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <twi_sendStop>
    80d6:	10 92 2b 09 	sts	0x092B, r1	; 0x80092b <twi_inRepStart>
    80da:	61 e0       	ldi	r22, 0x01	; 1
    80dc:	84 e1       	ldi	r24, 0x14	; 20
    80de:	0e 94 94 48 	call	0x9128	; 0x9128 <digitalWrite>
    80e2:	61 e0       	ldi	r22, 0x01	; 1
    80e4:	85 e1       	ldi	r24, 0x15	; 21
    80e6:	0e 94 94 48 	call	0x9128	; 0x9128 <digitalWrite>
    80ea:	e9 eb       	ldi	r30, 0xB9	; 185
    80ec:	f0 e0       	ldi	r31, 0x00	; 0
    80ee:	80 81       	ld	r24, Z
    80f0:	8e 7f       	andi	r24, 0xFE	; 254
    80f2:	80 83       	st	Z, r24
    80f4:	80 81       	ld	r24, Z
    80f6:	8d 7f       	andi	r24, 0xFD	; 253
    80f8:	80 83       	st	Z, r24
    80fa:	88 e4       	ldi	r24, 0x48	; 72
    80fc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    8100:	85 e4       	ldi	r24, 0x45	; 69
    8102:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    8106:	08 95       	ret

00008108 <twi_setAddress>:
    8108:	88 0f       	add	r24, r24
    810a:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7000ba>
    810e:	08 95       	ret

00008110 <twi_transmit>:
    8110:	40 91 e3 08 	lds	r20, 0x08E3	; 0x8008e3 <twi_txBufferLength>
    8114:	26 2f       	mov	r18, r22
    8116:	30 e0       	ldi	r19, 0x00	; 0
    8118:	24 0f       	add	r18, r20
    811a:	31 1d       	adc	r19, r1
    811c:	21 32       	cpi	r18, 0x21	; 33
    811e:	31 05       	cpc	r19, r1
    8120:	dc f4       	brge	.+54     	; 0x8158 <twi_transmit+0x48>
    8122:	20 91 2e 09 	lds	r18, 0x092E	; 0x80092e <twi_state>
    8126:	24 30       	cpi	r18, 0x04	; 4
    8128:	c9 f4       	brne	.+50     	; 0x815c <twi_transmit+0x4c>
    812a:	fc 01       	movw	r30, r24
    812c:	80 e0       	ldi	r24, 0x00	; 0
    812e:	90 e0       	ldi	r25, 0x00	; 0
    8130:	86 17       	cp	r24, r22
    8132:	58 f4       	brcc	.+22     	; 0x814a <twi_transmit+0x3a>
    8134:	30 91 e3 08 	lds	r19, 0x08E3	; 0x8008e3 <twi_txBufferLength>
    8138:	21 91       	ld	r18, Z+
    813a:	dc 01       	movw	r26, r24
    813c:	ab 51       	subi	r26, 0x1B	; 27
    813e:	b7 4f       	sbci	r27, 0xF7	; 247
    8140:	a3 0f       	add	r26, r19
    8142:	b1 1d       	adc	r27, r1
    8144:	2c 93       	st	X, r18
    8146:	01 96       	adiw	r24, 0x01	; 1
    8148:	f3 cf       	rjmp	.-26     	; 0x8130 <twi_transmit+0x20>
    814a:	80 91 e3 08 	lds	r24, 0x08E3	; 0x8008e3 <twi_txBufferLength>
    814e:	68 0f       	add	r22, r24
    8150:	60 93 e3 08 	sts	0x08E3, r22	; 0x8008e3 <twi_txBufferLength>
    8154:	80 e0       	ldi	r24, 0x00	; 0
    8156:	08 95       	ret
    8158:	81 e0       	ldi	r24, 0x01	; 1
    815a:	08 95       	ret
    815c:	82 e0       	ldi	r24, 0x02	; 2
    815e:	08 95       	ret

00008160 <twi_attachSlaveRxEvent>:
    8160:	90 93 28 09 	sts	0x0928, r25	; 0x800928 <twi_onSlaveReceive+0x1>
    8164:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <twi_onSlaveReceive>
    8168:	08 95       	ret

0000816a <twi_attachSlaveTxEvent>:
    816a:	90 93 2a 09 	sts	0x092A, r25	; 0x80092a <twi_onSlaveTransmit+0x1>
    816e:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <twi_onSlaveTransmit>
    8172:	08 95       	ret

00008174 <twi_stop>:
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    8174:	85 ed       	ldi	r24, 0xD5	; 213
    8176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    817a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    817e:	84 fd       	sbrc	r24, 4
    8180:	fc cf       	rjmp	.-8      	; 0x817a <twi_stop+0x6>
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    8182:	10 92 2e 09 	sts	0x092E, r1	; 0x80092e <twi_state>
    8186:	08 95       	ret

00008188 <twi_releaseBus>:
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    8188:	85 ec       	ldi	r24, 0xC5	; 197
    818a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

  // update twi state
  twi_state = TWI_READY;
    818e:	10 92 2e 09 	sts	0x092E, r1	; 0x80092e <twi_state>
    8192:	08 95       	ret

00008194 <__vector_39>:
}

ISR(TWI_vect)
{
    8194:	1f 92       	push	r1
    8196:	0f 92       	push	r0
    8198:	0f b6       	in	r0, 0x3f	; 63
    819a:	0f 92       	push	r0
    819c:	11 24       	eor	r1, r1
    819e:	0b b6       	in	r0, 0x3b	; 59
    81a0:	0f 92       	push	r0
    81a2:	2f 93       	push	r18
    81a4:	3f 93       	push	r19
    81a6:	4f 93       	push	r20
    81a8:	5f 93       	push	r21
    81aa:	6f 93       	push	r22
    81ac:	7f 93       	push	r23
    81ae:	8f 93       	push	r24
    81b0:	9f 93       	push	r25
    81b2:	af 93       	push	r26
    81b4:	bf 93       	push	r27
    81b6:	ef 93       	push	r30
    81b8:	ff 93       	push	r31
  switch(TW_STATUS){
    81ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    81be:	88 7f       	andi	r24, 0xF8	; 248
    81c0:	80 36       	cpi	r24, 0x60	; 96
    81c2:	09 f4       	brne	.+2      	; 0x81c6 <__vector_39+0x32>
    81c4:	9d c0       	rjmp	.+314    	; 0x8300 <__vector_39+0x16c>
    81c6:	70 f5       	brcc	.+92     	; 0x8224 <__vector_39+0x90>
    81c8:	88 32       	cpi	r24, 0x28	; 40
    81ca:	09 f4       	brne	.+2      	; 0x81ce <__vector_39+0x3a>
    81cc:	5c c0       	rjmp	.+184    	; 0x8286 <__vector_39+0xf2>
    81ce:	90 f4       	brcc	.+36     	; 0x81f4 <__vector_39+0x60>
    81d0:	80 31       	cpi	r24, 0x10	; 16
    81d2:	09 f4       	brne	.+2      	; 0x81d6 <__vector_39+0x42>
    81d4:	55 c0       	rjmp	.+170    	; 0x8280 <__vector_39+0xec>
    81d6:	38 f4       	brcc	.+14     	; 0x81e6 <__vector_39+0x52>
    81d8:	88 23       	and	r24, r24
    81da:	09 f4       	brne	.+2      	; 0x81de <__vector_39+0x4a>
    81dc:	f3 c0       	rjmp	.+486    	; 0x83c4 <__vector_39+0x230>
    81de:	88 30       	cpi	r24, 0x08	; 8
    81e0:	09 f4       	brne	.+2      	; 0x81e4 <__vector_39+0x50>
    81e2:	4e c0       	rjmp	.+156    	; 0x8280 <__vector_39+0xec>
    81e4:	f2 c0       	rjmp	.+484    	; 0x83ca <__vector_39+0x236>
    81e6:	88 31       	cpi	r24, 0x18	; 24
    81e8:	09 f4       	brne	.+2      	; 0x81ec <__vector_39+0x58>
    81ea:	4d c0       	rjmp	.+154    	; 0x8286 <__vector_39+0xf2>
    81ec:	80 32       	cpi	r24, 0x20	; 32
    81ee:	09 f4       	brne	.+2      	; 0x81f2 <__vector_39+0x5e>
    81f0:	5e c0       	rjmp	.+188    	; 0x82ae <__vector_39+0x11a>
    81f2:	eb c0       	rjmp	.+470    	; 0x83ca <__vector_39+0x236>
    81f4:	80 34       	cpi	r24, 0x40	; 64
    81f6:	09 f4       	brne	.+2      	; 0x81fa <__vector_39+0x66>
    81f8:	69 c0       	rjmp	.+210    	; 0x82cc <__vector_39+0x138>
    81fa:	50 f4       	brcc	.+20     	; 0x8210 <__vector_39+0x7c>
    81fc:	80 33       	cpi	r24, 0x30	; 48
    81fe:	09 f4       	brne	.+2      	; 0x8202 <__vector_39+0x6e>
    8200:	56 c0       	rjmp	.+172    	; 0x82ae <__vector_39+0x11a>
    8202:	88 33       	cpi	r24, 0x38	; 56
    8204:	09 f0       	breq	.+2      	; 0x8208 <__vector_39+0x74>
    8206:	e1 c0       	rjmp	.+450    	; 0x83ca <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    8208:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <twi_error>
      twi_releaseBus();
    820c:	bd df       	rcall	.-134    	; 0x8188 <twi_releaseBus>
      break;
    820e:	dd c0       	rjmp	.+442    	; 0x83ca <__vector_39+0x236>
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    8210:	80 35       	cpi	r24, 0x50	; 80
    8212:	09 f4       	brne	.+2      	; 0x8216 <__vector_39+0x82>
    8214:	4f c0       	rjmp	.+158    	; 0x82b4 <__vector_39+0x120>
    8216:	88 35       	cpi	r24, 0x58	; 88
    8218:	09 f4       	brne	.+2      	; 0x821c <__vector_39+0x88>
    821a:	5d c0       	rjmp	.+186    	; 0x82d6 <__vector_39+0x142>
    821c:	88 34       	cpi	r24, 0x48	; 72
    821e:	09 f0       	breq	.+2      	; 0x8222 <__vector_39+0x8e>
    8220:	d4 c0       	rjmp	.+424    	; 0x83ca <__vector_39+0x236>
    8222:	d2 c0       	rjmp	.+420    	; 0x83c8 <__vector_39+0x234>
    8224:	88 39       	cpi	r24, 0x98	; 152
    8226:	09 f4       	brne	.+2      	; 0x822a <__vector_39+0x96>
    8228:	c3 c0       	rjmp	.+390    	; 0x83b0 <__vector_39+0x21c>
    822a:	a8 f4       	brcc	.+42     	; 0x8256 <__vector_39+0xc2>
    822c:	88 37       	cpi	r24, 0x78	; 120
    822e:	09 f4       	brne	.+2      	; 0x8232 <__vector_39+0x9e>
    8230:	67 c0       	rjmp	.+206    	; 0x8300 <__vector_39+0x16c>
    8232:	38 f4       	brcc	.+14     	; 0x8242 <__vector_39+0xae>
    8234:	88 36       	cpi	r24, 0x68	; 104
    8236:	09 f4       	brne	.+2      	; 0x823a <__vector_39+0xa6>
    8238:	63 c0       	rjmp	.+198    	; 0x8300 <__vector_39+0x16c>
    823a:	80 37       	cpi	r24, 0x70	; 112
    823c:	09 f4       	brne	.+2      	; 0x8240 <__vector_39+0xac>
    823e:	60 c0       	rjmp	.+192    	; 0x8300 <__vector_39+0x16c>
    8240:	c4 c0       	rjmp	.+392    	; 0x83ca <__vector_39+0x236>
    8242:	88 38       	cpi	r24, 0x88	; 136
    8244:	09 f4       	brne	.+2      	; 0x8248 <__vector_39+0xb4>
    8246:	b4 c0       	rjmp	.+360    	; 0x83b0 <__vector_39+0x21c>
    8248:	80 39       	cpi	r24, 0x90	; 144
    824a:	09 f4       	brne	.+2      	; 0x824e <__vector_39+0xba>
    824c:	5f c0       	rjmp	.+190    	; 0x830c <__vector_39+0x178>
    824e:	80 38       	cpi	r24, 0x80	; 128
    8250:	09 f0       	breq	.+2      	; 0x8254 <__vector_39+0xc0>
    8252:	bb c0       	rjmp	.+374    	; 0x83ca <__vector_39+0x236>
    8254:	5b c0       	rjmp	.+182    	; 0x830c <__vector_39+0x178>
    8256:	80 3b       	cpi	r24, 0xB0	; 176
    8258:	09 f4       	brne	.+2      	; 0x825c <__vector_39+0xc8>
    825a:	82 c0       	rjmp	.+260    	; 0x8360 <__vector_39+0x1cc>
    825c:	38 f4       	brcc	.+14     	; 0x826c <__vector_39+0xd8>
    825e:	80 3a       	cpi	r24, 0xA0	; 160
    8260:	09 f4       	brne	.+2      	; 0x8264 <__vector_39+0xd0>
    8262:	66 c0       	rjmp	.+204    	; 0x8330 <__vector_39+0x19c>
    8264:	88 3a       	cpi	r24, 0xA8	; 168
    8266:	09 f4       	brne	.+2      	; 0x826a <__vector_39+0xd6>
    8268:	7b c0       	rjmp	.+246    	; 0x8360 <__vector_39+0x1cc>
    826a:	af c0       	rjmp	.+350    	; 0x83ca <__vector_39+0x236>
    826c:	80 3c       	cpi	r24, 0xC0	; 192
    826e:	09 f4       	brne	.+2      	; 0x8272 <__vector_39+0xde>
    8270:	a3 c0       	rjmp	.+326    	; 0x83b8 <__vector_39+0x224>
    8272:	88 3c       	cpi	r24, 0xC8	; 200
    8274:	09 f4       	brne	.+2      	; 0x8278 <__vector_39+0xe4>
    8276:	a0 c0       	rjmp	.+320    	; 0x83b8 <__vector_39+0x224>
    8278:	88 3b       	cpi	r24, 0xB8	; 184
    827a:	09 f4       	brne	.+2      	; 0x827e <__vector_39+0xea>
    827c:	86 c0       	rjmp	.+268    	; 0x838a <__vector_39+0x1f6>
    827e:	a5 c0       	rjmp	.+330    	; 0x83ca <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    8280:	80 91 2d 09 	lds	r24, 0x092D	; 0x80092d <twi_slarw>
    8284:	10 c0       	rjmp	.+32     	; 0x82a6 <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    8286:	90 91 06 09 	lds	r25, 0x0906	; 0x800906 <twi_masterBufferIndex>
    828a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <twi_masterBufferLength>
    828e:	98 17       	cp	r25, r24
    8290:	70 f5       	brcc	.+92     	; 0x82ee <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    8292:	e0 91 06 09 	lds	r30, 0x0906	; 0x800906 <twi_masterBufferIndex>
    8296:	81 e0       	ldi	r24, 0x01	; 1
    8298:	8e 0f       	add	r24, r30
    829a:	80 93 06 09 	sts	0x0906, r24	; 0x800906 <twi_masterBufferIndex>
    829e:	f0 e0       	ldi	r31, 0x00	; 0
    82a0:	e9 5f       	subi	r30, 0xF9	; 249
    82a2:	f6 4f       	sbci	r31, 0xF6	; 246
    82a4:	80 81       	ld	r24, Z
    82a6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    82aa:	85 ec       	ldi	r24, 0xC5	; 197
    82ac:	82 c0       	rjmp	.+260    	; 0x83b2 <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    82ae:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <twi_error>
    82b2:	8a c0       	rjmp	.+276    	; 0x83c8 <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    82b4:	e0 91 06 09 	lds	r30, 0x0906	; 0x800906 <twi_masterBufferIndex>
    82b8:	81 e0       	ldi	r24, 0x01	; 1
    82ba:	8e 0f       	add	r24, r30
    82bc:	80 93 06 09 	sts	0x0906, r24	; 0x800906 <twi_masterBufferIndex>
    82c0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    82c4:	f0 e0       	ldi	r31, 0x00	; 0
    82c6:	e9 5f       	subi	r30, 0xF9	; 249
    82c8:	f6 4f       	sbci	r31, 0xF6	; 246
    82ca:	80 83       	st	Z, r24
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    82cc:	90 91 06 09 	lds	r25, 0x0906	; 0x800906 <twi_masterBufferIndex>
    82d0:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <twi_masterBufferLength>
    82d4:	6a c0       	rjmp	.+212    	; 0x83aa <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    82d6:	e0 91 06 09 	lds	r30, 0x0906	; 0x800906 <twi_masterBufferIndex>
    82da:	81 e0       	ldi	r24, 0x01	; 1
    82dc:	8e 0f       	add	r24, r30
    82de:	80 93 06 09 	sts	0x0906, r24	; 0x800906 <twi_masterBufferIndex>
    82e2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    82e6:	f0 e0       	ldi	r31, 0x00	; 0
    82e8:	e9 5f       	subi	r30, 0xF9	; 249
    82ea:	f6 4f       	sbci	r31, 0xF6	; 246
    82ec:	80 83       	st	Z, r24
	if (twi_sendStop)
    82ee:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <twi_sendStop>
    82f2:	81 11       	cpse	r24, r1
    82f4:	69 c0       	rjmp	.+210    	; 0x83c8 <__vector_39+0x234>
          twi_stop();
	else {
	  twi_inRepStart = true;	// we're gonna send the START
    82f6:	81 e0       	ldi	r24, 0x01	; 1
    82f8:	80 93 2b 09 	sts	0x092B, r24	; 0x80092b <twi_inRepStart>
	  // don't enable the interrupt. We'll generate the start, but we 
	  // avoid handling the interrupt until we're in the next transaction,
	  // at the point where we would normally issue the start.
	  TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    82fc:	84 ea       	ldi	r24, 0xA4	; 164
    82fe:	5d c0       	rjmp	.+186    	; 0x83ba <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    8300:	83 e0       	ldi	r24, 0x03	; 3
    8302:	80 93 2e 09 	sts	0x092E, r24	; 0x80092e <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    8306:	10 92 c2 08 	sts	0x08C2, r1	; 0x8008c2 <twi_rxBufferIndex>
    830a:	cf cf       	rjmp	.-98     	; 0x82aa <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    830c:	80 91 c2 08 	lds	r24, 0x08C2	; 0x8008c2 <twi_rxBufferIndex>
    8310:	80 32       	cpi	r24, 0x20	; 32
    8312:	08 f0       	brcs	.+2      	; 0x8316 <__vector_39+0x182>
    8314:	4d c0       	rjmp	.+154    	; 0x83b0 <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    8316:	e0 91 c2 08 	lds	r30, 0x08C2	; 0x8008c2 <twi_rxBufferIndex>
    831a:	81 e0       	ldi	r24, 0x01	; 1
    831c:	8e 0f       	add	r24, r30
    831e:	80 93 c2 08 	sts	0x08C2, r24	; 0x8008c2 <twi_rxBufferIndex>
    8322:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    8326:	f0 e0       	ldi	r31, 0x00	; 0
    8328:	ed 53       	subi	r30, 0x3D	; 61
    832a:	f7 4f       	sbci	r31, 0xF7	; 247
    832c:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    832e:	bd cf       	rjmp	.-134    	; 0x82aa <__vector_39+0x116>
    8330:	2b df       	rcall	.-426    	; 0x8188 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    8332:	80 91 c2 08 	lds	r24, 0x08C2	; 0x8008c2 <twi_rxBufferIndex>
    8336:	80 32       	cpi	r24, 0x20	; 32
    8338:	30 f4       	brcc	.+12     	; 0x8346 <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    833a:	e0 91 c2 08 	lds	r30, 0x08C2	; 0x8008c2 <twi_rxBufferIndex>
    833e:	f0 e0       	ldi	r31, 0x00	; 0
    8340:	ed 53       	subi	r30, 0x3D	; 61
    8342:	f7 4f       	sbci	r31, 0xF7	; 247
    8344:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    8346:	60 91 c2 08 	lds	r22, 0x08C2	; 0x8008c2 <twi_rxBufferIndex>
    834a:	70 e0       	ldi	r23, 0x00	; 0
    834c:	e0 91 27 09 	lds	r30, 0x0927	; 0x800927 <twi_onSlaveReceive>
    8350:	f0 91 28 09 	lds	r31, 0x0928	; 0x800928 <twi_onSlaveReceive+0x1>
    8354:	83 ec       	ldi	r24, 0xC3	; 195
    8356:	98 e0       	ldi	r25, 0x08	; 8
    8358:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    835a:	10 92 c2 08 	sts	0x08C2, r1	; 0x8008c2 <twi_rxBufferIndex>
      break;
    835e:	35 c0       	rjmp	.+106    	; 0x83ca <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    8360:	84 e0       	ldi	r24, 0x04	; 4
    8362:	80 93 2e 09 	sts	0x092E, r24	; 0x80092e <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    8366:	10 92 e4 08 	sts	0x08E4, r1	; 0x8008e4 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    836a:	10 92 e3 08 	sts	0x08E3, r1	; 0x8008e3 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    836e:	e0 91 29 09 	lds	r30, 0x0929	; 0x800929 <twi_onSlaveTransmit>
    8372:	f0 91 2a 09 	lds	r31, 0x092A	; 0x80092a <twi_onSlaveTransmit+0x1>
    8376:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    8378:	80 91 e3 08 	lds	r24, 0x08E3	; 0x8008e3 <twi_txBufferLength>
    837c:	81 11       	cpse	r24, r1
    837e:	05 c0       	rjmp	.+10     	; 0x838a <__vector_39+0x1f6>
        twi_txBufferLength = 1;
    8380:	81 e0       	ldi	r24, 0x01	; 1
    8382:	80 93 e3 08 	sts	0x08E3, r24	; 0x8008e3 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    8386:	10 92 e5 08 	sts	0x08E5, r1	; 0x8008e5 <twi_txBuffer>
      }
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    838a:	e0 91 e4 08 	lds	r30, 0x08E4	; 0x8008e4 <twi_txBufferIndex>
    838e:	81 e0       	ldi	r24, 0x01	; 1
    8390:	8e 0f       	add	r24, r30
    8392:	80 93 e4 08 	sts	0x08E4, r24	; 0x8008e4 <twi_txBufferIndex>
    8396:	f0 e0       	ldi	r31, 0x00	; 0
    8398:	eb 51       	subi	r30, 0x1B	; 27
    839a:	f7 4f       	sbci	r31, 0xF7	; 247
    839c:	80 81       	ld	r24, Z
    839e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    83a2:	90 91 e4 08 	lds	r25, 0x08E4	; 0x8008e4 <twi_txBufferIndex>
    83a6:	80 91 e3 08 	lds	r24, 0x08E3	; 0x8008e3 <twi_txBufferLength>
    83aa:	98 17       	cp	r25, r24
    83ac:	08 f4       	brcc	.+2      	; 0x83b0 <__vector_39+0x21c>
    83ae:	7d cf       	rjmp	.-262    	; 0x82aa <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    83b0:	85 e8       	ldi	r24, 0x85	; 133
    83b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    83b6:	09 c0       	rjmp	.+18     	; 0x83ca <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    83b8:	85 ec       	ldi	r24, 0xC5	; 197
    83ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    83be:	10 92 2e 09 	sts	0x092E, r1	; 0x80092e <twi_state>
      break;
    83c2:	03 c0       	rjmp	.+6      	; 0x83ca <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    83c4:	10 92 c1 08 	sts	0x08C1, r1	; 0x8008c1 <twi_error>
      twi_stop();
    83c8:	d5 de       	rcall	.-598    	; 0x8174 <twi_stop>
      break;
  }
}
    83ca:	ff 91       	pop	r31
    83cc:	ef 91       	pop	r30
    83ce:	bf 91       	pop	r27
    83d0:	af 91       	pop	r26
    83d2:	9f 91       	pop	r25
    83d4:	8f 91       	pop	r24
    83d6:	7f 91       	pop	r23
    83d8:	6f 91       	pop	r22
    83da:	5f 91       	pop	r21
    83dc:	4f 91       	pop	r20
    83de:	3f 91       	pop	r19
    83e0:	2f 91       	pop	r18
    83e2:	0f 90       	pop	r0
    83e4:	0b be       	out	0x3b, r0	; 59
    83e6:	0f 90       	pop	r0
    83e8:	0f be       	out	0x3f, r0	; 63
    83ea:	0f 90       	pop	r0
    83ec:	1f 90       	pop	r1
    83ee:	18 95       	reti

000083f0 <_ZN7TwoWire9availableEv>:
}

// sets function called on slave write
void TwoWire::onReceive( void (*function)(int) )
{
  user_onReceive = function;
    83f0:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <_ZN7TwoWire14rxBufferLengthE>
    83f4:	90 e0       	ldi	r25, 0x00	; 0
    83f6:	20 91 63 09 	lds	r18, 0x0963	; 0x800963 <_ZN7TwoWire13rxBufferIndexE>
    83fa:	82 1b       	sub	r24, r18
    83fc:	91 09       	sbc	r25, r1
    83fe:	08 95       	ret

00008400 <_ZN7TwoWire4readEv>:
    8400:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <_ZN7TwoWire13rxBufferIndexE>
    8404:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <_ZN7TwoWire14rxBufferLengthE>
    8408:	98 17       	cp	r25, r24
    840a:	50 f4       	brcc	.+20     	; 0x8420 <_ZN7TwoWire4readEv+0x20>
    840c:	e9 2f       	mov	r30, r25
    840e:	f0 e0       	ldi	r31, 0x00	; 0
    8410:	ec 59       	subi	r30, 0x9C	; 156
    8412:	f6 4f       	sbci	r31, 0xF6	; 246
    8414:	20 81       	ld	r18, Z
    8416:	30 e0       	ldi	r19, 0x00	; 0
    8418:	9f 5f       	subi	r25, 0xFF	; 255
    841a:	90 93 63 09 	sts	0x0963, r25	; 0x800963 <_ZN7TwoWire13rxBufferIndexE>
    841e:	02 c0       	rjmp	.+4      	; 0x8424 <_ZN7TwoWire4readEv+0x24>
    8420:	2f ef       	ldi	r18, 0xFF	; 255
    8422:	3f ef       	ldi	r19, 0xFF	; 255
    8424:	c9 01       	movw	r24, r18
    8426:	08 95       	ret

00008428 <_ZN7TwoWire4peekEv>:
    8428:	e0 91 63 09 	lds	r30, 0x0963	; 0x800963 <_ZN7TwoWire13rxBufferIndexE>
    842c:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <_ZN7TwoWire14rxBufferLengthE>
    8430:	e8 17       	cp	r30, r24
    8432:	30 f4       	brcc	.+12     	; 0x8440 <_ZN7TwoWire4peekEv+0x18>
    8434:	f0 e0       	ldi	r31, 0x00	; 0
    8436:	ec 59       	subi	r30, 0x9C	; 156
    8438:	f6 4f       	sbci	r31, 0xF6	; 246
    843a:	80 81       	ld	r24, Z
    843c:	90 e0       	ldi	r25, 0x00	; 0
    843e:	08 95       	ret
    8440:	8f ef       	ldi	r24, 0xFF	; 255
    8442:	9f ef       	ldi	r25, 0xFF	; 255
    8444:	08 95       	ret

00008446 <_ZN7TwoWire5flushEv>:
    8446:	08 95       	ret

00008448 <_ZN7TwoWire16onReceiveServiceEPhi>:
    8448:	cf 93       	push	r28
    844a:	df 93       	push	r29
    844c:	ec 01       	movw	r28, r24
    844e:	e0 91 3b 09 	lds	r30, 0x093B	; 0x80093b <_ZN7TwoWire14user_onReceiveE>
    8452:	f0 91 3c 09 	lds	r31, 0x093C	; 0x80093c <_ZN7TwoWire14user_onReceiveE+0x1>
    8456:	30 97       	sbiw	r30, 0x00	; 0
    8458:	f1 f0       	breq	.+60     	; 0x8496 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    845a:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <_ZN7TwoWire13rxBufferIndexE>
    845e:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <_ZN7TwoWire14rxBufferLengthE>
    8462:	98 17       	cp	r25, r24
    8464:	c0 f0       	brcs	.+48     	; 0x8496 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    8466:	90 e0       	ldi	r25, 0x00	; 0
    8468:	29 2f       	mov	r18, r25
    846a:	30 e0       	ldi	r19, 0x00	; 0
    846c:	26 17       	cp	r18, r22
    846e:	37 07       	cpc	r19, r23
    8470:	54 f4       	brge	.+20     	; 0x8486 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    8472:	de 01       	movw	r26, r28
    8474:	a2 0f       	add	r26, r18
    8476:	b3 1f       	adc	r27, r19
    8478:	4c 91       	ld	r20, X
    847a:	d9 01       	movw	r26, r18
    847c:	ac 59       	subi	r26, 0x9C	; 156
    847e:	b6 4f       	sbci	r27, 0xF6	; 246
    8480:	4c 93       	st	X, r20
    8482:	9f 5f       	subi	r25, 0xFF	; 255
    8484:	f1 cf       	rjmp	.-30     	; 0x8468 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    8486:	10 92 63 09 	sts	0x0963, r1	; 0x800963 <_ZN7TwoWire13rxBufferIndexE>
    848a:	60 93 62 09 	sts	0x0962, r22	; 0x800962 <_ZN7TwoWire14rxBufferLengthE>
    848e:	cb 01       	movw	r24, r22
    8490:	df 91       	pop	r29
    8492:	cf 91       	pop	r28
    8494:	19 94       	eijmp
    8496:	df 91       	pop	r29
    8498:	cf 91       	pop	r28
    849a:	08 95       	ret

0000849c <_ZN7TwoWire16onRequestServiceEv>:
    849c:	e0 91 3d 09 	lds	r30, 0x093D	; 0x80093d <_ZN7TwoWire14user_onRequestE>
    84a0:	f0 91 3e 09 	lds	r31, 0x093E	; 0x80093e <_ZN7TwoWire14user_onRequestE+0x1>
    84a4:	30 97       	sbiw	r30, 0x00	; 0
    84a6:	29 f0       	breq	.+10     	; 0x84b2 <_ZN7TwoWire16onRequestServiceEv+0x16>
    84a8:	10 92 41 09 	sts	0x0941, r1	; 0x800941 <_ZN7TwoWire13txBufferIndexE>
    84ac:	10 92 40 09 	sts	0x0940, r1	; 0x800940 <_ZN7TwoWire14txBufferLengthE>
    84b0:	19 94       	eijmp
    84b2:	08 95       	ret

000084b4 <_ZN7TwoWire5writeEPKhj>:
    84b4:	cf 92       	push	r12
    84b6:	df 92       	push	r13
    84b8:	ef 92       	push	r14
    84ba:	ff 92       	push	r15
    84bc:	0f 93       	push	r16
    84be:	1f 93       	push	r17
    84c0:	cf 93       	push	r28
    84c2:	df 93       	push	r29
    84c4:	7c 01       	movw	r14, r24
    84c6:	cb 01       	movw	r24, r22
    84c8:	8a 01       	movw	r16, r20
    84ca:	20 91 3f 09 	lds	r18, 0x093F	; 0x80093f <_ZN7TwoWire12transmittingE>
    84ce:	22 23       	and	r18, r18
    84d0:	89 f0       	breq	.+34     	; 0x84f4 <_ZN7TwoWire5writeEPKhj+0x40>
    84d2:	eb 01       	movw	r28, r22
    84d4:	6b 01       	movw	r12, r22
    84d6:	c4 0e       	add	r12, r20
    84d8:	d5 1e       	adc	r13, r21
    84da:	cc 15       	cp	r28, r12
    84dc:	dd 05       	cpc	r29, r13
    84de:	61 f0       	breq	.+24     	; 0x84f8 <_ZN7TwoWire5writeEPKhj+0x44>
    84e0:	69 91       	ld	r22, Y+
    84e2:	d7 01       	movw	r26, r14
    84e4:	ed 91       	ld	r30, X+
    84e6:	fc 91       	ld	r31, X
    84e8:	01 90       	ld	r0, Z+
    84ea:	f0 81       	ld	r31, Z
    84ec:	e0 2d       	mov	r30, r0
    84ee:	c7 01       	movw	r24, r14
    84f0:	19 95       	eicall
    84f2:	f3 cf       	rjmp	.-26     	; 0x84da <_ZN7TwoWire5writeEPKhj+0x26>
    84f4:	64 2f       	mov	r22, r20
    84f6:	0c de       	rcall	.-1000   	; 0x8110 <twi_transmit>
    84f8:	c8 01       	movw	r24, r16
    84fa:	df 91       	pop	r29
    84fc:	cf 91       	pop	r28
    84fe:	1f 91       	pop	r17
    8500:	0f 91       	pop	r16
    8502:	ff 90       	pop	r15
    8504:	ef 90       	pop	r14
    8506:	df 90       	pop	r13
    8508:	cf 90       	pop	r12
    850a:	08 95       	ret

0000850c <_ZN7TwoWire5writeEh>:
    850c:	cf 93       	push	r28
    850e:	df 93       	push	r29
    8510:	1f 92       	push	r1
    8512:	cd b7       	in	r28, 0x3d	; 61
    8514:	de b7       	in	r29, 0x3e	; 62
    8516:	69 83       	std	Y+1, r22	; 0x01
    8518:	20 91 3f 09 	lds	r18, 0x093F	; 0x80093f <_ZN7TwoWire12transmittingE>
    851c:	22 23       	and	r18, r18
    851e:	d1 f0       	breq	.+52     	; 0x8554 <_ZN7TwoWire5writeEh+0x48>
    8520:	20 91 40 09 	lds	r18, 0x0940	; 0x800940 <_ZN7TwoWire14txBufferLengthE>
    8524:	20 32       	cpi	r18, 0x20	; 32
    8526:	40 f0       	brcs	.+16     	; 0x8538 <_ZN7TwoWire5writeEh+0x2c>
    8528:	21 e0       	ldi	r18, 0x01	; 1
    852a:	30 e0       	ldi	r19, 0x00	; 0
    852c:	fc 01       	movw	r30, r24
    852e:	33 83       	std	Z+3, r19	; 0x03
    8530:	22 83       	std	Z+2, r18	; 0x02
    8532:	80 e0       	ldi	r24, 0x00	; 0
    8534:	90 e0       	ldi	r25, 0x00	; 0
    8536:	14 c0       	rjmp	.+40     	; 0x8560 <_ZN7TwoWire5writeEh+0x54>
    8538:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <_ZN7TwoWire13txBufferIndexE>
    853c:	e8 2f       	mov	r30, r24
    853e:	f0 e0       	ldi	r31, 0x00	; 0
    8540:	ee 5b       	subi	r30, 0xBE	; 190
    8542:	f6 4f       	sbci	r31, 0xF6	; 246
    8544:	99 81       	ldd	r25, Y+1	; 0x01
    8546:	90 83       	st	Z, r25
    8548:	8f 5f       	subi	r24, 0xFF	; 255
    854a:	80 93 41 09 	sts	0x0941, r24	; 0x800941 <_ZN7TwoWire13txBufferIndexE>
    854e:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <_ZN7TwoWire14txBufferLengthE>
    8552:	04 c0       	rjmp	.+8      	; 0x855c <_ZN7TwoWire5writeEh+0x50>
    8554:	61 e0       	ldi	r22, 0x01	; 1
    8556:	ce 01       	movw	r24, r28
    8558:	01 96       	adiw	r24, 0x01	; 1
    855a:	da dd       	rcall	.-1100   	; 0x8110 <twi_transmit>
    855c:	81 e0       	ldi	r24, 0x01	; 1
    855e:	90 e0       	ldi	r25, 0x00	; 0
    8560:	0f 90       	pop	r0
    8562:	df 91       	pop	r29
    8564:	cf 91       	pop	r28
    8566:	08 95       	ret

00008568 <_ZN7TwoWireC1Ev>:
    8568:	fc 01       	movw	r30, r24
    856a:	13 82       	std	Z+3, r1	; 0x03
    856c:	12 82       	std	Z+2, r1	; 0x02
    856e:	88 ee       	ldi	r24, 0xE8	; 232
    8570:	93 e0       	ldi	r25, 0x03	; 3
    8572:	a0 e0       	ldi	r26, 0x00	; 0
    8574:	b0 e0       	ldi	r27, 0x00	; 0
    8576:	84 83       	std	Z+4, r24	; 0x04
    8578:	95 83       	std	Z+5, r25	; 0x05
    857a:	a6 83       	std	Z+6, r26	; 0x06
    857c:	b7 83       	std	Z+7, r27	; 0x07
    857e:	85 e7       	ldi	r24, 0x75	; 117
    8580:	93 e0       	ldi	r25, 0x03	; 3
    8582:	91 83       	std	Z+1, r25	; 0x01
    8584:	80 83       	st	Z, r24
    8586:	08 95       	ret

00008588 <_ZN7TwoWire5beginEv>:
    8588:	10 92 63 09 	sts	0x0963, r1	; 0x800963 <_ZN7TwoWire13rxBufferIndexE>
    858c:	10 92 62 09 	sts	0x0962, r1	; 0x800962 <_ZN7TwoWire14rxBufferLengthE>
    8590:	10 92 41 09 	sts	0x0941, r1	; 0x800941 <_ZN7TwoWire13txBufferIndexE>
    8594:	10 92 40 09 	sts	0x0940, r1	; 0x800940 <_ZN7TwoWire14txBufferLengthE>
    8598:	99 cd       	rjmp	.-1230   	; 0x80cc <twi_init>

0000859a <_ZN7TwoWire5beginEh>:
    859a:	cf 93       	push	r28
    859c:	df 93       	push	r29
    859e:	ec 01       	movw	r28, r24
    85a0:	86 2f       	mov	r24, r22
    85a2:	b2 dd       	rcall	.-1180   	; 0x8108 <twi_setAddress>
    85a4:	8e e4       	ldi	r24, 0x4E	; 78
    85a6:	92 e4       	ldi	r25, 0x42	; 66
    85a8:	e0 dd       	rcall	.-1088   	; 0x816a <twi_attachSlaveTxEvent>
    85aa:	84 e2       	ldi	r24, 0x24	; 36
    85ac:	92 e4       	ldi	r25, 0x42	; 66
    85ae:	d8 dd       	rcall	.-1104   	; 0x8160 <twi_attachSlaveRxEvent>
    85b0:	ce 01       	movw	r24, r28
    85b2:	df 91       	pop	r29
    85b4:	cf 91       	pop	r28
    85b6:	e8 cf       	rjmp	.-48     	; 0x8588 <_ZN7TwoWire5beginEv>

000085b8 <_ZN7TwoWire5beginEi>:
    85b8:	f0 cf       	rjmp	.-32     	; 0x859a <_ZN7TwoWire5beginEh>

000085ba <_ZN7TwoWire9onRequestEPFvvE>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    85ba:	70 93 3e 09 	sts	0x093E, r23	; 0x80093e <_ZN7TwoWire14user_onRequestE+0x1>
    85be:	60 93 3d 09 	sts	0x093D, r22	; 0x80093d <_ZN7TwoWire14user_onRequestE>
    85c2:	08 95       	ret

000085c4 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    85c4:	8f e2       	ldi	r24, 0x2F	; 47
    85c6:	99 e0       	ldi	r25, 0x09	; 9
    85c8:	cf cf       	rjmp	.-98     	; 0x8568 <_ZN7TwoWireC1Ev>

000085ca <_ZN6WindowC1Ev>:
 * Window implementation
 * 
 * This class draws the window (middle section of the screen) representing synthesis parameters
 */

Window::Window() {
    85ca:	fc 01       	movw	r30, r24
    85cc:	10 82       	st	Z, r1
    85ce:	11 82       	std	Z+1, r1	; 0x01
    85d0:	8c ed       	ldi	r24, 0xDC	; 220
    85d2:	90 e0       	ldi	r25, 0x00	; 0
    85d4:	93 83       	std	Z+3, r25	; 0x03
    85d6:	82 83       	std	Z+2, r24	; 0x02
    85d8:	14 82       	std	Z+4, r1	; 0x04
    85da:	80 e9       	ldi	r24, 0x90	; 144
    85dc:	91 e0       	ldi	r25, 0x01	; 1
    85de:	96 83       	std	Z+6, r25	; 0x06
    85e0:	85 83       	std	Z+5, r24	; 0x05
    85e2:	17 82       	std	Z+7, r1	; 0x07
    85e4:	80 e4       	ldi	r24, 0x40	; 64
    85e6:	9f e1       	ldi	r25, 0x1F	; 31
    85e8:	91 87       	std	Z+9, r25	; 0x09
    85ea:	80 87       	std	Z+8, r24	; 0x08
    85ec:	88 e2       	ldi	r24, 0x28	; 40
    85ee:	82 87       	std	Z+10, r24	; 0x0a
    85f0:	13 86       	std	Z+11, r1	; 0x0b
    85f2:	15 86       	std	Z+13, r1	; 0x0d
    85f4:	14 86       	std	Z+12, r1	; 0x0c
    85f6:	88 ec       	ldi	r24, 0xC8	; 200
    85f8:	90 e0       	ldi	r25, 0x00	; 0
    85fa:	97 87       	std	Z+15, r25	; 0x0f
    85fc:	86 87       	std	Z+14, r24	; 0x0e
    85fe:	84 eb       	ldi	r24, 0xB4	; 180
    8600:	80 8b       	std	Z+16, r24	; 0x10
    8602:	8a ef       	ldi	r24, 0xFA	; 250
    8604:	90 e0       	ldi	r25, 0x00	; 0
    8606:	92 8b       	std	Z+18, r25	; 0x12
    8608:	81 8b       	std	Z+17, r24	; 0x11
    860a:	13 8a       	std	Z+19, r1	; 0x13
    860c:	14 8a       	std	Z+20, r1	; 0x14
    860e:	15 8a       	std	Z+21, r1	; 0x15
    8610:	16 8a       	std	Z+22, r1	; 0x16
    8612:	8f e7       	ldi	r24, 0x7F	; 127
    8614:	87 8b       	std	Z+23, r24	; 0x17
    8616:	10 8e       	std	Z+24, r1	; 0x18
    8618:	11 8e       	std	Z+25, r1	; 0x19
    861a:	12 8e       	std	Z+26, r1	; 0x1a
    861c:	08 95       	ret

0000861e <__subsf3>:
    861e:	50 58       	subi	r21, 0x80	; 128

00008620 <__addsf3>:
    8620:	bb 27       	eor	r27, r27
    8622:	aa 27       	eor	r26, r26
    8624:	0e d0       	rcall	.+28     	; 0x8642 <__addsf3x>
    8626:	a0 c1       	rjmp	.+832    	; 0x8968 <__fp_round>
    8628:	69 d1       	rcall	.+722    	; 0x88fc <__fp_pscA>
    862a:	30 f0       	brcs	.+12     	; 0x8638 <__addsf3+0x18>
    862c:	6e d1       	rcall	.+732    	; 0x890a <__fp_pscB>
    862e:	20 f0       	brcs	.+8      	; 0x8638 <__addsf3+0x18>
    8630:	31 f4       	brne	.+12     	; 0x863e <__addsf3+0x1e>
    8632:	9f 3f       	cpi	r25, 0xFF	; 255
    8634:	11 f4       	brne	.+4      	; 0x863a <__addsf3+0x1a>
    8636:	1e f4       	brtc	.+6      	; 0x863e <__addsf3+0x1e>
    8638:	5e c1       	rjmp	.+700    	; 0x88f6 <__fp_nan>
    863a:	0e f4       	brtc	.+2      	; 0x863e <__addsf3+0x1e>
    863c:	e0 95       	com	r30
    863e:	e7 fb       	bst	r30, 7
    8640:	54 c1       	rjmp	.+680    	; 0x88ea <__fp_inf>

00008642 <__addsf3x>:
    8642:	e9 2f       	mov	r30, r25
    8644:	b3 d1       	rcall	.+870    	; 0x89ac <__fp_split3>
    8646:	80 f3       	brcs	.-32     	; 0x8628 <__addsf3+0x8>
    8648:	ba 17       	cp	r27, r26
    864a:	62 07       	cpc	r22, r18
    864c:	73 07       	cpc	r23, r19
    864e:	84 07       	cpc	r24, r20
    8650:	95 07       	cpc	r25, r21
    8652:	18 f0       	brcs	.+6      	; 0x865a <__addsf3x+0x18>
    8654:	71 f4       	brne	.+28     	; 0x8672 <__addsf3x+0x30>
    8656:	9e f5       	brtc	.+102    	; 0x86be <__addsf3x+0x7c>
    8658:	cb c1       	rjmp	.+918    	; 0x89f0 <__fp_zero>
    865a:	0e f4       	brtc	.+2      	; 0x865e <__addsf3x+0x1c>
    865c:	e0 95       	com	r30
    865e:	0b 2e       	mov	r0, r27
    8660:	ba 2f       	mov	r27, r26
    8662:	a0 2d       	mov	r26, r0
    8664:	0b 01       	movw	r0, r22
    8666:	b9 01       	movw	r22, r18
    8668:	90 01       	movw	r18, r0
    866a:	0c 01       	movw	r0, r24
    866c:	ca 01       	movw	r24, r20
    866e:	a0 01       	movw	r20, r0
    8670:	11 24       	eor	r1, r1
    8672:	ff 27       	eor	r31, r31
    8674:	59 1b       	sub	r21, r25
    8676:	99 f0       	breq	.+38     	; 0x869e <__addsf3x+0x5c>
    8678:	59 3f       	cpi	r21, 0xF9	; 249
    867a:	50 f4       	brcc	.+20     	; 0x8690 <__addsf3x+0x4e>
    867c:	50 3e       	cpi	r21, 0xE0	; 224
    867e:	68 f1       	brcs	.+90     	; 0x86da <__addsf3x+0x98>
    8680:	1a 16       	cp	r1, r26
    8682:	f0 40       	sbci	r31, 0x00	; 0
    8684:	a2 2f       	mov	r26, r18
    8686:	23 2f       	mov	r18, r19
    8688:	34 2f       	mov	r19, r20
    868a:	44 27       	eor	r20, r20
    868c:	58 5f       	subi	r21, 0xF8	; 248
    868e:	f3 cf       	rjmp	.-26     	; 0x8676 <__addsf3x+0x34>
    8690:	46 95       	lsr	r20
    8692:	37 95       	ror	r19
    8694:	27 95       	ror	r18
    8696:	a7 95       	ror	r26
    8698:	f0 40       	sbci	r31, 0x00	; 0
    869a:	53 95       	inc	r21
    869c:	c9 f7       	brne	.-14     	; 0x8690 <__addsf3x+0x4e>
    869e:	7e f4       	brtc	.+30     	; 0x86be <__addsf3x+0x7c>
    86a0:	1f 16       	cp	r1, r31
    86a2:	ba 0b       	sbc	r27, r26
    86a4:	62 0b       	sbc	r22, r18
    86a6:	73 0b       	sbc	r23, r19
    86a8:	84 0b       	sbc	r24, r20
    86aa:	ba f0       	brmi	.+46     	; 0x86da <__addsf3x+0x98>
    86ac:	91 50       	subi	r25, 0x01	; 1
    86ae:	a1 f0       	breq	.+40     	; 0x86d8 <__addsf3x+0x96>
    86b0:	ff 0f       	add	r31, r31
    86b2:	bb 1f       	adc	r27, r27
    86b4:	66 1f       	adc	r22, r22
    86b6:	77 1f       	adc	r23, r23
    86b8:	88 1f       	adc	r24, r24
    86ba:	c2 f7       	brpl	.-16     	; 0x86ac <__addsf3x+0x6a>
    86bc:	0e c0       	rjmp	.+28     	; 0x86da <__addsf3x+0x98>
    86be:	ba 0f       	add	r27, r26
    86c0:	62 1f       	adc	r22, r18
    86c2:	73 1f       	adc	r23, r19
    86c4:	84 1f       	adc	r24, r20
    86c6:	48 f4       	brcc	.+18     	; 0x86da <__addsf3x+0x98>
    86c8:	87 95       	ror	r24
    86ca:	77 95       	ror	r23
    86cc:	67 95       	ror	r22
    86ce:	b7 95       	ror	r27
    86d0:	f7 95       	ror	r31
    86d2:	9e 3f       	cpi	r25, 0xFE	; 254
    86d4:	08 f0       	brcs	.+2      	; 0x86d8 <__addsf3x+0x96>
    86d6:	b3 cf       	rjmp	.-154    	; 0x863e <__addsf3+0x1e>
    86d8:	93 95       	inc	r25
    86da:	88 0f       	add	r24, r24
    86dc:	08 f0       	brcs	.+2      	; 0x86e0 <__addsf3x+0x9e>
    86de:	99 27       	eor	r25, r25
    86e0:	ee 0f       	add	r30, r30
    86e2:	97 95       	ror	r25
    86e4:	87 95       	ror	r24
    86e6:	08 95       	ret

000086e8 <__cmpsf2>:
    86e8:	dc d0       	rcall	.+440    	; 0x88a2 <__fp_cmp>
    86ea:	08 f4       	brcc	.+2      	; 0x86ee <__cmpsf2+0x6>
    86ec:	81 e0       	ldi	r24, 0x01	; 1
    86ee:	08 95       	ret

000086f0 <cos>:
    86f0:	14 d1       	rcall	.+552    	; 0x891a <__fp_rempio2>
    86f2:	e3 95       	inc	r30
    86f4:	4a c1       	rjmp	.+660    	; 0x898a <__fp_sinus>

000086f6 <__divsf3>:
    86f6:	0c d0       	rcall	.+24     	; 0x8710 <__divsf3x>
    86f8:	37 c1       	rjmp	.+622    	; 0x8968 <__fp_round>
    86fa:	07 d1       	rcall	.+526    	; 0x890a <__fp_pscB>
    86fc:	40 f0       	brcs	.+16     	; 0x870e <__divsf3+0x18>
    86fe:	fe d0       	rcall	.+508    	; 0x88fc <__fp_pscA>
    8700:	30 f0       	brcs	.+12     	; 0x870e <__divsf3+0x18>
    8702:	21 f4       	brne	.+8      	; 0x870c <__divsf3+0x16>
    8704:	5f 3f       	cpi	r21, 0xFF	; 255
    8706:	19 f0       	breq	.+6      	; 0x870e <__divsf3+0x18>
    8708:	f0 c0       	rjmp	.+480    	; 0x88ea <__fp_inf>
    870a:	51 11       	cpse	r21, r1
    870c:	72 c1       	rjmp	.+740    	; 0x89f2 <__fp_szero>
    870e:	f3 c0       	rjmp	.+486    	; 0x88f6 <__fp_nan>

00008710 <__divsf3x>:
    8710:	4d d1       	rcall	.+666    	; 0x89ac <__fp_split3>
    8712:	98 f3       	brcs	.-26     	; 0x86fa <__divsf3+0x4>

00008714 <__divsf3_pse>:
    8714:	99 23       	and	r25, r25
    8716:	c9 f3       	breq	.-14     	; 0x870a <__divsf3+0x14>
    8718:	55 23       	and	r21, r21
    871a:	b1 f3       	breq	.-20     	; 0x8708 <__divsf3+0x12>
    871c:	95 1b       	sub	r25, r21
    871e:	55 0b       	sbc	r21, r21
    8720:	bb 27       	eor	r27, r27
    8722:	aa 27       	eor	r26, r26
    8724:	62 17       	cp	r22, r18
    8726:	73 07       	cpc	r23, r19
    8728:	84 07       	cpc	r24, r20
    872a:	38 f0       	brcs	.+14     	; 0x873a <__divsf3_pse+0x26>
    872c:	9f 5f       	subi	r25, 0xFF	; 255
    872e:	5f 4f       	sbci	r21, 0xFF	; 255
    8730:	22 0f       	add	r18, r18
    8732:	33 1f       	adc	r19, r19
    8734:	44 1f       	adc	r20, r20
    8736:	aa 1f       	adc	r26, r26
    8738:	a9 f3       	breq	.-22     	; 0x8724 <__divsf3_pse+0x10>
    873a:	33 d0       	rcall	.+102    	; 0x87a2 <__divsf3_pse+0x8e>
    873c:	0e 2e       	mov	r0, r30
    873e:	3a f0       	brmi	.+14     	; 0x874e <__divsf3_pse+0x3a>
    8740:	e0 e8       	ldi	r30, 0x80	; 128
    8742:	30 d0       	rcall	.+96     	; 0x87a4 <__divsf3_pse+0x90>
    8744:	91 50       	subi	r25, 0x01	; 1
    8746:	50 40       	sbci	r21, 0x00	; 0
    8748:	e6 95       	lsr	r30
    874a:	00 1c       	adc	r0, r0
    874c:	ca f7       	brpl	.-14     	; 0x8740 <__divsf3_pse+0x2c>
    874e:	29 d0       	rcall	.+82     	; 0x87a2 <__divsf3_pse+0x8e>
    8750:	fe 2f       	mov	r31, r30
    8752:	27 d0       	rcall	.+78     	; 0x87a2 <__divsf3_pse+0x8e>
    8754:	66 0f       	add	r22, r22
    8756:	77 1f       	adc	r23, r23
    8758:	88 1f       	adc	r24, r24
    875a:	bb 1f       	adc	r27, r27
    875c:	26 17       	cp	r18, r22
    875e:	37 07       	cpc	r19, r23
    8760:	48 07       	cpc	r20, r24
    8762:	ab 07       	cpc	r26, r27
    8764:	b0 e8       	ldi	r27, 0x80	; 128
    8766:	09 f0       	breq	.+2      	; 0x876a <__divsf3_pse+0x56>
    8768:	bb 0b       	sbc	r27, r27
    876a:	80 2d       	mov	r24, r0
    876c:	bf 01       	movw	r22, r30
    876e:	ff 27       	eor	r31, r31
    8770:	93 58       	subi	r25, 0x83	; 131
    8772:	5f 4f       	sbci	r21, 0xFF	; 255
    8774:	2a f0       	brmi	.+10     	; 0x8780 <__divsf3_pse+0x6c>
    8776:	9e 3f       	cpi	r25, 0xFE	; 254
    8778:	51 05       	cpc	r21, r1
    877a:	68 f0       	brcs	.+26     	; 0x8796 <__divsf3_pse+0x82>
    877c:	b6 c0       	rjmp	.+364    	; 0x88ea <__fp_inf>
    877e:	39 c1       	rjmp	.+626    	; 0x89f2 <__fp_szero>
    8780:	5f 3f       	cpi	r21, 0xFF	; 255
    8782:	ec f3       	brlt	.-6      	; 0x877e <__divsf3_pse+0x6a>
    8784:	98 3e       	cpi	r25, 0xE8	; 232
    8786:	dc f3       	brlt	.-10     	; 0x877e <__divsf3_pse+0x6a>
    8788:	86 95       	lsr	r24
    878a:	77 95       	ror	r23
    878c:	67 95       	ror	r22
    878e:	b7 95       	ror	r27
    8790:	f7 95       	ror	r31
    8792:	9f 5f       	subi	r25, 0xFF	; 255
    8794:	c9 f7       	brne	.-14     	; 0x8788 <__divsf3_pse+0x74>
    8796:	88 0f       	add	r24, r24
    8798:	91 1d       	adc	r25, r1
    879a:	96 95       	lsr	r25
    879c:	87 95       	ror	r24
    879e:	97 f9       	bld	r25, 7
    87a0:	08 95       	ret
    87a2:	e1 e0       	ldi	r30, 0x01	; 1
    87a4:	66 0f       	add	r22, r22
    87a6:	77 1f       	adc	r23, r23
    87a8:	88 1f       	adc	r24, r24
    87aa:	bb 1f       	adc	r27, r27
    87ac:	62 17       	cp	r22, r18
    87ae:	73 07       	cpc	r23, r19
    87b0:	84 07       	cpc	r24, r20
    87b2:	ba 07       	cpc	r27, r26
    87b4:	20 f0       	brcs	.+8      	; 0x87be <__divsf3_pse+0xaa>
    87b6:	62 1b       	sub	r22, r18
    87b8:	73 0b       	sbc	r23, r19
    87ba:	84 0b       	sbc	r24, r20
    87bc:	ba 0b       	sbc	r27, r26
    87be:	ee 1f       	adc	r30, r30
    87c0:	88 f7       	brcc	.-30     	; 0x87a4 <__divsf3_pse+0x90>
    87c2:	e0 95       	com	r30
    87c4:	08 95       	ret

000087c6 <__fixsfsi>:
    87c6:	04 d0       	rcall	.+8      	; 0x87d0 <__fixunssfsi>
    87c8:	68 94       	set
    87ca:	b1 11       	cpse	r27, r1
    87cc:	12 c1       	rjmp	.+548    	; 0x89f2 <__fp_szero>
    87ce:	08 95       	ret

000087d0 <__fixunssfsi>:
    87d0:	f5 d0       	rcall	.+490    	; 0x89bc <__fp_splitA>
    87d2:	88 f0       	brcs	.+34     	; 0x87f6 <__fixunssfsi+0x26>
    87d4:	9f 57       	subi	r25, 0x7F	; 127
    87d6:	90 f0       	brcs	.+36     	; 0x87fc <__fixunssfsi+0x2c>
    87d8:	b9 2f       	mov	r27, r25
    87da:	99 27       	eor	r25, r25
    87dc:	b7 51       	subi	r27, 0x17	; 23
    87de:	a0 f0       	brcs	.+40     	; 0x8808 <__fixunssfsi+0x38>
    87e0:	d1 f0       	breq	.+52     	; 0x8816 <__fixunssfsi+0x46>
    87e2:	66 0f       	add	r22, r22
    87e4:	77 1f       	adc	r23, r23
    87e6:	88 1f       	adc	r24, r24
    87e8:	99 1f       	adc	r25, r25
    87ea:	1a f0       	brmi	.+6      	; 0x87f2 <__fixunssfsi+0x22>
    87ec:	ba 95       	dec	r27
    87ee:	c9 f7       	brne	.-14     	; 0x87e2 <__fixunssfsi+0x12>
    87f0:	12 c0       	rjmp	.+36     	; 0x8816 <__fixunssfsi+0x46>
    87f2:	b1 30       	cpi	r27, 0x01	; 1
    87f4:	81 f0       	breq	.+32     	; 0x8816 <__fixunssfsi+0x46>
    87f6:	fc d0       	rcall	.+504    	; 0x89f0 <__fp_zero>
    87f8:	b1 e0       	ldi	r27, 0x01	; 1
    87fa:	08 95       	ret
    87fc:	f9 c0       	rjmp	.+498    	; 0x89f0 <__fp_zero>
    87fe:	67 2f       	mov	r22, r23
    8800:	78 2f       	mov	r23, r24
    8802:	88 27       	eor	r24, r24
    8804:	b8 5f       	subi	r27, 0xF8	; 248
    8806:	39 f0       	breq	.+14     	; 0x8816 <__fixunssfsi+0x46>
    8808:	b9 3f       	cpi	r27, 0xF9	; 249
    880a:	cc f3       	brlt	.-14     	; 0x87fe <__fixunssfsi+0x2e>
    880c:	86 95       	lsr	r24
    880e:	77 95       	ror	r23
    8810:	67 95       	ror	r22
    8812:	b3 95       	inc	r27
    8814:	d9 f7       	brne	.-10     	; 0x880c <__fixunssfsi+0x3c>
    8816:	3e f4       	brtc	.+14     	; 0x8826 <__fixunssfsi+0x56>
    8818:	90 95       	com	r25
    881a:	80 95       	com	r24
    881c:	70 95       	com	r23
    881e:	61 95       	neg	r22
    8820:	7f 4f       	sbci	r23, 0xFF	; 255
    8822:	8f 4f       	sbci	r24, 0xFF	; 255
    8824:	9f 4f       	sbci	r25, 0xFF	; 255
    8826:	08 95       	ret

00008828 <__floatunsisf>:
    8828:	e8 94       	clt
    882a:	09 c0       	rjmp	.+18     	; 0x883e <__floatsisf+0x12>

0000882c <__floatsisf>:
    882c:	97 fb       	bst	r25, 7
    882e:	3e f4       	brtc	.+14     	; 0x883e <__floatsisf+0x12>
    8830:	90 95       	com	r25
    8832:	80 95       	com	r24
    8834:	70 95       	com	r23
    8836:	61 95       	neg	r22
    8838:	7f 4f       	sbci	r23, 0xFF	; 255
    883a:	8f 4f       	sbci	r24, 0xFF	; 255
    883c:	9f 4f       	sbci	r25, 0xFF	; 255
    883e:	99 23       	and	r25, r25
    8840:	a9 f0       	breq	.+42     	; 0x886c <__floatsisf+0x40>
    8842:	f9 2f       	mov	r31, r25
    8844:	96 e9       	ldi	r25, 0x96	; 150
    8846:	bb 27       	eor	r27, r27
    8848:	93 95       	inc	r25
    884a:	f6 95       	lsr	r31
    884c:	87 95       	ror	r24
    884e:	77 95       	ror	r23
    8850:	67 95       	ror	r22
    8852:	b7 95       	ror	r27
    8854:	f1 11       	cpse	r31, r1
    8856:	f8 cf       	rjmp	.-16     	; 0x8848 <__floatsisf+0x1c>
    8858:	fa f4       	brpl	.+62     	; 0x8898 <__floatsisf+0x6c>
    885a:	bb 0f       	add	r27, r27
    885c:	11 f4       	brne	.+4      	; 0x8862 <__floatsisf+0x36>
    885e:	60 ff       	sbrs	r22, 0
    8860:	1b c0       	rjmp	.+54     	; 0x8898 <__floatsisf+0x6c>
    8862:	6f 5f       	subi	r22, 0xFF	; 255
    8864:	7f 4f       	sbci	r23, 0xFF	; 255
    8866:	8f 4f       	sbci	r24, 0xFF	; 255
    8868:	9f 4f       	sbci	r25, 0xFF	; 255
    886a:	16 c0       	rjmp	.+44     	; 0x8898 <__floatsisf+0x6c>
    886c:	88 23       	and	r24, r24
    886e:	11 f0       	breq	.+4      	; 0x8874 <__floatsisf+0x48>
    8870:	96 e9       	ldi	r25, 0x96	; 150
    8872:	11 c0       	rjmp	.+34     	; 0x8896 <__floatsisf+0x6a>
    8874:	77 23       	and	r23, r23
    8876:	21 f0       	breq	.+8      	; 0x8880 <__floatsisf+0x54>
    8878:	9e e8       	ldi	r25, 0x8E	; 142
    887a:	87 2f       	mov	r24, r23
    887c:	76 2f       	mov	r23, r22
    887e:	05 c0       	rjmp	.+10     	; 0x888a <__floatsisf+0x5e>
    8880:	66 23       	and	r22, r22
    8882:	71 f0       	breq	.+28     	; 0x88a0 <__floatsisf+0x74>
    8884:	96 e8       	ldi	r25, 0x86	; 134
    8886:	86 2f       	mov	r24, r22
    8888:	70 e0       	ldi	r23, 0x00	; 0
    888a:	60 e0       	ldi	r22, 0x00	; 0
    888c:	2a f0       	brmi	.+10     	; 0x8898 <__floatsisf+0x6c>
    888e:	9a 95       	dec	r25
    8890:	66 0f       	add	r22, r22
    8892:	77 1f       	adc	r23, r23
    8894:	88 1f       	adc	r24, r24
    8896:	da f7       	brpl	.-10     	; 0x888e <__floatsisf+0x62>
    8898:	88 0f       	add	r24, r24
    889a:	96 95       	lsr	r25
    889c:	87 95       	ror	r24
    889e:	97 f9       	bld	r25, 7
    88a0:	08 95       	ret

000088a2 <__fp_cmp>:
    88a2:	99 0f       	add	r25, r25
    88a4:	00 08       	sbc	r0, r0
    88a6:	55 0f       	add	r21, r21
    88a8:	aa 0b       	sbc	r26, r26
    88aa:	e0 e8       	ldi	r30, 0x80	; 128
    88ac:	fe ef       	ldi	r31, 0xFE	; 254
    88ae:	16 16       	cp	r1, r22
    88b0:	17 06       	cpc	r1, r23
    88b2:	e8 07       	cpc	r30, r24
    88b4:	f9 07       	cpc	r31, r25
    88b6:	c0 f0       	brcs	.+48     	; 0x88e8 <__fp_cmp+0x46>
    88b8:	12 16       	cp	r1, r18
    88ba:	13 06       	cpc	r1, r19
    88bc:	e4 07       	cpc	r30, r20
    88be:	f5 07       	cpc	r31, r21
    88c0:	98 f0       	brcs	.+38     	; 0x88e8 <__fp_cmp+0x46>
    88c2:	62 1b       	sub	r22, r18
    88c4:	73 0b       	sbc	r23, r19
    88c6:	84 0b       	sbc	r24, r20
    88c8:	95 0b       	sbc	r25, r21
    88ca:	39 f4       	brne	.+14     	; 0x88da <__fp_cmp+0x38>
    88cc:	0a 26       	eor	r0, r26
    88ce:	61 f0       	breq	.+24     	; 0x88e8 <__fp_cmp+0x46>
    88d0:	23 2b       	or	r18, r19
    88d2:	24 2b       	or	r18, r20
    88d4:	25 2b       	or	r18, r21
    88d6:	21 f4       	brne	.+8      	; 0x88e0 <__fp_cmp+0x3e>
    88d8:	08 95       	ret
    88da:	0a 26       	eor	r0, r26
    88dc:	09 f4       	brne	.+2      	; 0x88e0 <__fp_cmp+0x3e>
    88de:	a1 40       	sbci	r26, 0x01	; 1
    88e0:	a6 95       	lsr	r26
    88e2:	8f ef       	ldi	r24, 0xFF	; 255
    88e4:	81 1d       	adc	r24, r1
    88e6:	81 1d       	adc	r24, r1
    88e8:	08 95       	ret

000088ea <__fp_inf>:
    88ea:	97 f9       	bld	r25, 7
    88ec:	9f 67       	ori	r25, 0x7F	; 127
    88ee:	80 e8       	ldi	r24, 0x80	; 128
    88f0:	70 e0       	ldi	r23, 0x00	; 0
    88f2:	60 e0       	ldi	r22, 0x00	; 0
    88f4:	08 95       	ret

000088f6 <__fp_nan>:
    88f6:	9f ef       	ldi	r25, 0xFF	; 255
    88f8:	80 ec       	ldi	r24, 0xC0	; 192
    88fa:	08 95       	ret

000088fc <__fp_pscA>:
    88fc:	00 24       	eor	r0, r0
    88fe:	0a 94       	dec	r0
    8900:	16 16       	cp	r1, r22
    8902:	17 06       	cpc	r1, r23
    8904:	18 06       	cpc	r1, r24
    8906:	09 06       	cpc	r0, r25
    8908:	08 95       	ret

0000890a <__fp_pscB>:
    890a:	00 24       	eor	r0, r0
    890c:	0a 94       	dec	r0
    890e:	12 16       	cp	r1, r18
    8910:	13 06       	cpc	r1, r19
    8912:	14 06       	cpc	r1, r20
    8914:	05 06       	cpc	r0, r21
    8916:	08 95       	ret
    8918:	ee cf       	rjmp	.-36     	; 0x88f6 <__fp_nan>

0000891a <__fp_rempio2>:
    891a:	50 d0       	rcall	.+160    	; 0x89bc <__fp_splitA>
    891c:	e8 f3       	brcs	.-6      	; 0x8918 <__fp_pscB+0xe>
    891e:	e8 94       	clt
    8920:	e0 e0       	ldi	r30, 0x00	; 0
    8922:	bb 27       	eor	r27, r27
    8924:	9f 57       	subi	r25, 0x7F	; 127
    8926:	f0 f0       	brcs	.+60     	; 0x8964 <__fp_rempio2+0x4a>
    8928:	2a ed       	ldi	r18, 0xDA	; 218
    892a:	3f e0       	ldi	r19, 0x0F	; 15
    892c:	49 ec       	ldi	r20, 0xC9	; 201
    892e:	06 c0       	rjmp	.+12     	; 0x893c <__fp_rempio2+0x22>
    8930:	ee 0f       	add	r30, r30
    8932:	bb 0f       	add	r27, r27
    8934:	66 1f       	adc	r22, r22
    8936:	77 1f       	adc	r23, r23
    8938:	88 1f       	adc	r24, r24
    893a:	28 f0       	brcs	.+10     	; 0x8946 <__fp_rempio2+0x2c>
    893c:	b2 3a       	cpi	r27, 0xA2	; 162
    893e:	62 07       	cpc	r22, r18
    8940:	73 07       	cpc	r23, r19
    8942:	84 07       	cpc	r24, r20
    8944:	28 f0       	brcs	.+10     	; 0x8950 <__fp_rempio2+0x36>
    8946:	b2 5a       	subi	r27, 0xA2	; 162
    8948:	62 0b       	sbc	r22, r18
    894a:	73 0b       	sbc	r23, r19
    894c:	84 0b       	sbc	r24, r20
    894e:	e3 95       	inc	r30
    8950:	9a 95       	dec	r25
    8952:	72 f7       	brpl	.-36     	; 0x8930 <__fp_rempio2+0x16>
    8954:	80 38       	cpi	r24, 0x80	; 128
    8956:	30 f4       	brcc	.+12     	; 0x8964 <__fp_rempio2+0x4a>
    8958:	9a 95       	dec	r25
    895a:	bb 0f       	add	r27, r27
    895c:	66 1f       	adc	r22, r22
    895e:	77 1f       	adc	r23, r23
    8960:	88 1f       	adc	r24, r24
    8962:	d2 f7       	brpl	.-12     	; 0x8958 <__fp_rempio2+0x3e>
    8964:	90 48       	sbci	r25, 0x80	; 128
    8966:	b6 c0       	rjmp	.+364    	; 0x8ad4 <__fp_mpack_finite>

00008968 <__fp_round>:
    8968:	09 2e       	mov	r0, r25
    896a:	03 94       	inc	r0
    896c:	00 0c       	add	r0, r0
    896e:	11 f4       	brne	.+4      	; 0x8974 <__fp_round+0xc>
    8970:	88 23       	and	r24, r24
    8972:	52 f0       	brmi	.+20     	; 0x8988 <__fp_round+0x20>
    8974:	bb 0f       	add	r27, r27
    8976:	40 f4       	brcc	.+16     	; 0x8988 <__fp_round+0x20>
    8978:	bf 2b       	or	r27, r31
    897a:	11 f4       	brne	.+4      	; 0x8980 <__fp_round+0x18>
    897c:	60 ff       	sbrs	r22, 0
    897e:	04 c0       	rjmp	.+8      	; 0x8988 <__fp_round+0x20>
    8980:	6f 5f       	subi	r22, 0xFF	; 255
    8982:	7f 4f       	sbci	r23, 0xFF	; 255
    8984:	8f 4f       	sbci	r24, 0xFF	; 255
    8986:	9f 4f       	sbci	r25, 0xFF	; 255
    8988:	08 95       	ret

0000898a <__fp_sinus>:
    898a:	ef 93       	push	r30
    898c:	e0 ff       	sbrs	r30, 0
    898e:	06 c0       	rjmp	.+12     	; 0x899c <__fp_sinus+0x12>
    8990:	a2 ea       	ldi	r26, 0xA2	; 162
    8992:	2a ed       	ldi	r18, 0xDA	; 218
    8994:	3f e0       	ldi	r19, 0x0F	; 15
    8996:	49 ec       	ldi	r20, 0xC9	; 201
    8998:	5f eb       	ldi	r21, 0xBF	; 191
    899a:	53 de       	rcall	.-858    	; 0x8642 <__addsf3x>
    899c:	e5 df       	rcall	.-54     	; 0x8968 <__fp_round>
    899e:	0f 90       	pop	r0
    89a0:	03 94       	inc	r0
    89a2:	01 fc       	sbrc	r0, 1
    89a4:	90 58       	subi	r25, 0x80	; 128
    89a6:	ec e5       	ldi	r30, 0x5C	; 92
    89a8:	f1 e0       	ldi	r31, 0x01	; 1
    89aa:	a0 c0       	rjmp	.+320    	; 0x8aec <__fp_powsodd>

000089ac <__fp_split3>:
    89ac:	57 fd       	sbrc	r21, 7
    89ae:	90 58       	subi	r25, 0x80	; 128
    89b0:	44 0f       	add	r20, r20
    89b2:	55 1f       	adc	r21, r21
    89b4:	59 f0       	breq	.+22     	; 0x89cc <__fp_splitA+0x10>
    89b6:	5f 3f       	cpi	r21, 0xFF	; 255
    89b8:	71 f0       	breq	.+28     	; 0x89d6 <__fp_splitA+0x1a>
    89ba:	47 95       	ror	r20

000089bc <__fp_splitA>:
    89bc:	88 0f       	add	r24, r24
    89be:	97 fb       	bst	r25, 7
    89c0:	99 1f       	adc	r25, r25
    89c2:	61 f0       	breq	.+24     	; 0x89dc <__fp_splitA+0x20>
    89c4:	9f 3f       	cpi	r25, 0xFF	; 255
    89c6:	79 f0       	breq	.+30     	; 0x89e6 <__fp_splitA+0x2a>
    89c8:	87 95       	ror	r24
    89ca:	08 95       	ret
    89cc:	12 16       	cp	r1, r18
    89ce:	13 06       	cpc	r1, r19
    89d0:	14 06       	cpc	r1, r20
    89d2:	55 1f       	adc	r21, r21
    89d4:	f2 cf       	rjmp	.-28     	; 0x89ba <__fp_split3+0xe>
    89d6:	46 95       	lsr	r20
    89d8:	f1 df       	rcall	.-30     	; 0x89bc <__fp_splitA>
    89da:	08 c0       	rjmp	.+16     	; 0x89ec <__fp_splitA+0x30>
    89dc:	16 16       	cp	r1, r22
    89de:	17 06       	cpc	r1, r23
    89e0:	18 06       	cpc	r1, r24
    89e2:	99 1f       	adc	r25, r25
    89e4:	f1 cf       	rjmp	.-30     	; 0x89c8 <__fp_splitA+0xc>
    89e6:	86 95       	lsr	r24
    89e8:	71 05       	cpc	r23, r1
    89ea:	61 05       	cpc	r22, r1
    89ec:	08 94       	sec
    89ee:	08 95       	ret

000089f0 <__fp_zero>:
    89f0:	e8 94       	clt

000089f2 <__fp_szero>:
    89f2:	bb 27       	eor	r27, r27
    89f4:	66 27       	eor	r22, r22
    89f6:	77 27       	eor	r23, r23
    89f8:	cb 01       	movw	r24, r22
    89fa:	97 f9       	bld	r25, 7
    89fc:	08 95       	ret

000089fe <__mulsf3>:
    89fe:	0b d0       	rcall	.+22     	; 0x8a16 <__mulsf3x>
    8a00:	b3 cf       	rjmp	.-154    	; 0x8968 <__fp_round>
    8a02:	7c df       	rcall	.-264    	; 0x88fc <__fp_pscA>
    8a04:	28 f0       	brcs	.+10     	; 0x8a10 <__mulsf3+0x12>
    8a06:	81 df       	rcall	.-254    	; 0x890a <__fp_pscB>
    8a08:	18 f0       	brcs	.+6      	; 0x8a10 <__mulsf3+0x12>
    8a0a:	95 23       	and	r25, r21
    8a0c:	09 f0       	breq	.+2      	; 0x8a10 <__mulsf3+0x12>
    8a0e:	6d cf       	rjmp	.-294    	; 0x88ea <__fp_inf>
    8a10:	72 cf       	rjmp	.-284    	; 0x88f6 <__fp_nan>
    8a12:	11 24       	eor	r1, r1
    8a14:	ee cf       	rjmp	.-36     	; 0x89f2 <__fp_szero>

00008a16 <__mulsf3x>:
    8a16:	ca df       	rcall	.-108    	; 0x89ac <__fp_split3>
    8a18:	a0 f3       	brcs	.-24     	; 0x8a02 <__mulsf3+0x4>

00008a1a <__mulsf3_pse>:
    8a1a:	95 9f       	mul	r25, r21
    8a1c:	d1 f3       	breq	.-12     	; 0x8a12 <__mulsf3+0x14>
    8a1e:	95 0f       	add	r25, r21
    8a20:	50 e0       	ldi	r21, 0x00	; 0
    8a22:	55 1f       	adc	r21, r21
    8a24:	62 9f       	mul	r22, r18
    8a26:	f0 01       	movw	r30, r0
    8a28:	72 9f       	mul	r23, r18
    8a2a:	bb 27       	eor	r27, r27
    8a2c:	f0 0d       	add	r31, r0
    8a2e:	b1 1d       	adc	r27, r1
    8a30:	63 9f       	mul	r22, r19
    8a32:	aa 27       	eor	r26, r26
    8a34:	f0 0d       	add	r31, r0
    8a36:	b1 1d       	adc	r27, r1
    8a38:	aa 1f       	adc	r26, r26
    8a3a:	64 9f       	mul	r22, r20
    8a3c:	66 27       	eor	r22, r22
    8a3e:	b0 0d       	add	r27, r0
    8a40:	a1 1d       	adc	r26, r1
    8a42:	66 1f       	adc	r22, r22
    8a44:	82 9f       	mul	r24, r18
    8a46:	22 27       	eor	r18, r18
    8a48:	b0 0d       	add	r27, r0
    8a4a:	a1 1d       	adc	r26, r1
    8a4c:	62 1f       	adc	r22, r18
    8a4e:	73 9f       	mul	r23, r19
    8a50:	b0 0d       	add	r27, r0
    8a52:	a1 1d       	adc	r26, r1
    8a54:	62 1f       	adc	r22, r18
    8a56:	83 9f       	mul	r24, r19
    8a58:	a0 0d       	add	r26, r0
    8a5a:	61 1d       	adc	r22, r1
    8a5c:	22 1f       	adc	r18, r18
    8a5e:	74 9f       	mul	r23, r20
    8a60:	33 27       	eor	r19, r19
    8a62:	a0 0d       	add	r26, r0
    8a64:	61 1d       	adc	r22, r1
    8a66:	23 1f       	adc	r18, r19
    8a68:	84 9f       	mul	r24, r20
    8a6a:	60 0d       	add	r22, r0
    8a6c:	21 1d       	adc	r18, r1
    8a6e:	82 2f       	mov	r24, r18
    8a70:	76 2f       	mov	r23, r22
    8a72:	6a 2f       	mov	r22, r26
    8a74:	11 24       	eor	r1, r1
    8a76:	9f 57       	subi	r25, 0x7F	; 127
    8a78:	50 40       	sbci	r21, 0x00	; 0
    8a7a:	8a f0       	brmi	.+34     	; 0x8a9e <__mulsf3_pse+0x84>
    8a7c:	e1 f0       	breq	.+56     	; 0x8ab6 <__mulsf3_pse+0x9c>
    8a7e:	88 23       	and	r24, r24
    8a80:	4a f0       	brmi	.+18     	; 0x8a94 <__mulsf3_pse+0x7a>
    8a82:	ee 0f       	add	r30, r30
    8a84:	ff 1f       	adc	r31, r31
    8a86:	bb 1f       	adc	r27, r27
    8a88:	66 1f       	adc	r22, r22
    8a8a:	77 1f       	adc	r23, r23
    8a8c:	88 1f       	adc	r24, r24
    8a8e:	91 50       	subi	r25, 0x01	; 1
    8a90:	50 40       	sbci	r21, 0x00	; 0
    8a92:	a9 f7       	brne	.-22     	; 0x8a7e <__mulsf3_pse+0x64>
    8a94:	9e 3f       	cpi	r25, 0xFE	; 254
    8a96:	51 05       	cpc	r21, r1
    8a98:	70 f0       	brcs	.+28     	; 0x8ab6 <__mulsf3_pse+0x9c>
    8a9a:	27 cf       	rjmp	.-434    	; 0x88ea <__fp_inf>
    8a9c:	aa cf       	rjmp	.-172    	; 0x89f2 <__fp_szero>
    8a9e:	5f 3f       	cpi	r21, 0xFF	; 255
    8aa0:	ec f3       	brlt	.-6      	; 0x8a9c <__mulsf3_pse+0x82>
    8aa2:	98 3e       	cpi	r25, 0xE8	; 232
    8aa4:	dc f3       	brlt	.-10     	; 0x8a9c <__mulsf3_pse+0x82>
    8aa6:	86 95       	lsr	r24
    8aa8:	77 95       	ror	r23
    8aaa:	67 95       	ror	r22
    8aac:	b7 95       	ror	r27
    8aae:	f7 95       	ror	r31
    8ab0:	e7 95       	ror	r30
    8ab2:	9f 5f       	subi	r25, 0xFF	; 255
    8ab4:	c1 f7       	brne	.-16     	; 0x8aa6 <__mulsf3_pse+0x8c>
    8ab6:	fe 2b       	or	r31, r30
    8ab8:	88 0f       	add	r24, r24
    8aba:	91 1d       	adc	r25, r1
    8abc:	96 95       	lsr	r25
    8abe:	87 95       	ror	r24
    8ac0:	97 f9       	bld	r25, 7
    8ac2:	08 95       	ret

00008ac4 <sin>:
    8ac4:	9f 93       	push	r25
    8ac6:	29 df       	rcall	.-430    	; 0x891a <__fp_rempio2>
    8ac8:	0f 90       	pop	r0
    8aca:	07 fc       	sbrc	r0, 7
    8acc:	ee 5f       	subi	r30, 0xFE	; 254
    8ace:	5d cf       	rjmp	.-326    	; 0x898a <__fp_sinus>

00008ad0 <__fp_mpack>:
    8ad0:	9f 3f       	cpi	r25, 0xFF	; 255
    8ad2:	31 f0       	breq	.+12     	; 0x8ae0 <__fp_mpack_finite+0xc>

00008ad4 <__fp_mpack_finite>:
    8ad4:	91 50       	subi	r25, 0x01	; 1
    8ad6:	20 f4       	brcc	.+8      	; 0x8ae0 <__fp_mpack_finite+0xc>
    8ad8:	87 95       	ror	r24
    8ada:	77 95       	ror	r23
    8adc:	67 95       	ror	r22
    8ade:	b7 95       	ror	r27
    8ae0:	88 0f       	add	r24, r24
    8ae2:	91 1d       	adc	r25, r1
    8ae4:	96 95       	lsr	r25
    8ae6:	87 95       	ror	r24
    8ae8:	97 f9       	bld	r25, 7
    8aea:	08 95       	ret

00008aec <__fp_powsodd>:
    8aec:	9f 93       	push	r25
    8aee:	8f 93       	push	r24
    8af0:	7f 93       	push	r23
    8af2:	6f 93       	push	r22
    8af4:	ff 93       	push	r31
    8af6:	ef 93       	push	r30
    8af8:	9b 01       	movw	r18, r22
    8afa:	ac 01       	movw	r20, r24
    8afc:	80 df       	rcall	.-256    	; 0x89fe <__mulsf3>
    8afe:	ef 91       	pop	r30
    8b00:	ff 91       	pop	r31
    8b02:	05 d0       	rcall	.+10     	; 0x8b0e <__fp_powser>
    8b04:	2f 91       	pop	r18
    8b06:	3f 91       	pop	r19
    8b08:	4f 91       	pop	r20
    8b0a:	5f 91       	pop	r21
    8b0c:	78 cf       	rjmp	.-272    	; 0x89fe <__mulsf3>

00008b0e <__fp_powser>:
    8b0e:	df 93       	push	r29
    8b10:	cf 93       	push	r28
    8b12:	1f 93       	push	r17
    8b14:	0f 93       	push	r16
    8b16:	ff 92       	push	r15
    8b18:	ef 92       	push	r14
    8b1a:	df 92       	push	r13
    8b1c:	7b 01       	movw	r14, r22
    8b1e:	8c 01       	movw	r16, r24
    8b20:	68 94       	set
    8b22:	05 c0       	rjmp	.+10     	; 0x8b2e <__fp_powser+0x20>
    8b24:	da 2e       	mov	r13, r26
    8b26:	ef 01       	movw	r28, r30
    8b28:	76 df       	rcall	.-276    	; 0x8a16 <__mulsf3x>
    8b2a:	fe 01       	movw	r30, r28
    8b2c:	e8 94       	clt
    8b2e:	a5 91       	lpm	r26, Z+
    8b30:	25 91       	lpm	r18, Z+
    8b32:	35 91       	lpm	r19, Z+
    8b34:	45 91       	lpm	r20, Z+
    8b36:	55 91       	lpm	r21, Z+
    8b38:	ae f3       	brts	.-22     	; 0x8b24 <__fp_powser+0x16>
    8b3a:	ef 01       	movw	r28, r30
    8b3c:	82 dd       	rcall	.-1276   	; 0x8642 <__addsf3x>
    8b3e:	fe 01       	movw	r30, r28
    8b40:	97 01       	movw	r18, r14
    8b42:	a8 01       	movw	r20, r16
    8b44:	da 94       	dec	r13
    8b46:	79 f7       	brne	.-34     	; 0x8b26 <__fp_powser+0x18>
    8b48:	df 90       	pop	r13
    8b4a:	ef 90       	pop	r14
    8b4c:	ff 90       	pop	r15
    8b4e:	0f 91       	pop	r16
    8b50:	1f 91       	pop	r17
    8b52:	cf 91       	pop	r28
    8b54:	df 91       	pop	r29
    8b56:	08 95       	ret

00008b58 <__vector_25>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    8b58:	1f 92       	push	r1
    8b5a:	0f 92       	push	r0
    8b5c:	0f b6       	in	r0, 0x3f	; 63
    8b5e:	0f 92       	push	r0
    8b60:	11 24       	eor	r1, r1
    8b62:	0b b6       	in	r0, 0x3b	; 59
    8b64:	0f 92       	push	r0
    8b66:	2f 93       	push	r18
    8b68:	8f 93       	push	r24
    8b6a:	9f 93       	push	r25
    8b6c:	ef 93       	push	r30
    8b6e:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    8b70:	e0 91 94 09 	lds	r30, 0x0994	; 0x800994 <Serial+0x10>
    8b74:	f0 91 95 09 	lds	r31, 0x0995	; 0x800995 <Serial+0x11>
    8b78:	80 81       	ld	r24, Z
    8b7a:	e0 91 9a 09 	lds	r30, 0x099A	; 0x80099a <Serial+0x16>
    8b7e:	f0 91 9b 09 	lds	r31, 0x099B	; 0x80099b <Serial+0x17>
    8b82:	82 fd       	sbrc	r24, 2
    8b84:	12 c0       	rjmp	.+36     	; 0x8baa <__vector_25+0x52>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    8b86:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    8b88:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <Serial+0x19>
    8b8c:	8f 5f       	subi	r24, 0xFF	; 255
    8b8e:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    8b90:	20 91 9e 09 	lds	r18, 0x099E	; 0x80099e <Serial+0x1a>
    8b94:	82 17       	cp	r24, r18
    8b96:	51 f0       	breq	.+20     	; 0x8bac <__vector_25+0x54>
      _rx_buffer[_rx_buffer_head] = c;
    8b98:	e0 91 9d 09 	lds	r30, 0x099D	; 0x80099d <Serial+0x19>
    8b9c:	f0 e0       	ldi	r31, 0x00	; 0
    8b9e:	ec 57       	subi	r30, 0x7C	; 124
    8ba0:	f6 4f       	sbci	r31, 0xF6	; 246
    8ba2:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    8ba4:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <Serial+0x19>
    8ba8:	01 c0       	rjmp	.+2      	; 0x8bac <__vector_25+0x54>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    8baa:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    8bac:	ff 91       	pop	r31
    8bae:	ef 91       	pop	r30
    8bb0:	9f 91       	pop	r25
    8bb2:	8f 91       	pop	r24
    8bb4:	2f 91       	pop	r18
    8bb6:	0f 90       	pop	r0
    8bb8:	0b be       	out	0x3b, r0	; 59
    8bba:	0f 90       	pop	r0
    8bbc:	0f be       	out	0x3f, r0	; 63
    8bbe:	0f 90       	pop	r0
    8bc0:	1f 90       	pop	r1
    8bc2:	18 95       	reti

00008bc4 <__vector_26>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    8bc4:	1f 92       	push	r1
    8bc6:	0f 92       	push	r0
    8bc8:	0f b6       	in	r0, 0x3f	; 63
    8bca:	0f 92       	push	r0
    8bcc:	11 24       	eor	r1, r1
    8bce:	0b b6       	in	r0, 0x3b	; 59
    8bd0:	0f 92       	push	r0
    8bd2:	2f 93       	push	r18
    8bd4:	3f 93       	push	r19
    8bd6:	4f 93       	push	r20
    8bd8:	5f 93       	push	r21
    8bda:	6f 93       	push	r22
    8bdc:	7f 93       	push	r23
    8bde:	8f 93       	push	r24
    8be0:	9f 93       	push	r25
    8be2:	af 93       	push	r26
    8be4:	bf 93       	push	r27
    8be6:	ef 93       	push	r30
    8be8:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    8bea:	84 e8       	ldi	r24, 0x84	; 132
    8bec:	99 e0       	ldi	r25, 0x09	; 9
    8bee:	22 d4       	rcall	.+2116   	; 0x9434 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    8bf0:	ff 91       	pop	r31
    8bf2:	ef 91       	pop	r30
    8bf4:	bf 91       	pop	r27
    8bf6:	af 91       	pop	r26
    8bf8:	9f 91       	pop	r25
    8bfa:	8f 91       	pop	r24
    8bfc:	7f 91       	pop	r23
    8bfe:	6f 91       	pop	r22
    8c00:	5f 91       	pop	r21
    8c02:	4f 91       	pop	r20
    8c04:	3f 91       	pop	r19
    8c06:	2f 91       	pop	r18
    8c08:	0f 90       	pop	r0
    8c0a:	0b be       	out	0x3b, r0	; 59
    8c0c:	0f 90       	pop	r0
    8c0e:	0f be       	out	0x3f, r0	; 63
    8c10:	0f 90       	pop	r0
    8c12:	1f 90       	pop	r1
    8c14:	18 95       	reti

00008c16 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    8c16:	84 e8       	ldi	r24, 0x84	; 132
    8c18:	99 e0       	ldi	r25, 0x09	; 9
    8c1a:	a2 d3       	rcall	.+1860   	; 0x9360 <_ZN14HardwareSerial9availableEv>
    8c1c:	21 e0       	ldi	r18, 0x01	; 1
    8c1e:	89 2b       	or	r24, r25
    8c20:	09 f4       	brne	.+2      	; 0x8c24 <_Z17Serial0_availablev+0xe>
    8c22:	20 e0       	ldi	r18, 0x00	; 0
}
    8c24:	82 2f       	mov	r24, r18
    8c26:	08 95       	ret

00008c28 <_GLOBAL__sub_I___vector_25>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    8c28:	e4 e8       	ldi	r30, 0x84	; 132
    8c2a:	f9 e0       	ldi	r31, 0x09	; 9
    8c2c:	13 82       	std	Z+3, r1	; 0x03
    8c2e:	12 82       	std	Z+2, r1	; 0x02
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
    8c30:	88 ee       	ldi	r24, 0xE8	; 232
    8c32:	93 e0       	ldi	r25, 0x03	; 3
    8c34:	a0 e0       	ldi	r26, 0x00	; 0
    8c36:	b0 e0       	ldi	r27, 0x00	; 0
    8c38:	84 83       	std	Z+4, r24	; 0x04
    8c3a:	95 83       	std	Z+5, r25	; 0x05
    8c3c:	a6 83       	std	Z+6, r26	; 0x06
    8c3e:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    8c40:	84 e9       	ldi	r24, 0x94	; 148
    8c42:	93 e0       	ldi	r25, 0x03	; 3
    8c44:	91 83       	std	Z+1, r25	; 0x01
    8c46:	80 83       	st	Z, r24
    8c48:	85 ec       	ldi	r24, 0xC5	; 197
    8c4a:	90 e0       	ldi	r25, 0x00	; 0
    8c4c:	95 87       	std	Z+13, r25	; 0x0d
    8c4e:	84 87       	std	Z+12, r24	; 0x0c
    8c50:	84 ec       	ldi	r24, 0xC4	; 196
    8c52:	90 e0       	ldi	r25, 0x00	; 0
    8c54:	97 87       	std	Z+15, r25	; 0x0f
    8c56:	86 87       	std	Z+14, r24	; 0x0e
    8c58:	80 ec       	ldi	r24, 0xC0	; 192
    8c5a:	90 e0       	ldi	r25, 0x00	; 0
    8c5c:	91 8b       	std	Z+17, r25	; 0x11
    8c5e:	80 8b       	std	Z+16, r24	; 0x10
    8c60:	81 ec       	ldi	r24, 0xC1	; 193
    8c62:	90 e0       	ldi	r25, 0x00	; 0
    8c64:	93 8b       	std	Z+19, r25	; 0x13
    8c66:	82 8b       	std	Z+18, r24	; 0x12
    8c68:	82 ec       	ldi	r24, 0xC2	; 194
    8c6a:	90 e0       	ldi	r25, 0x00	; 0
    8c6c:	95 8b       	std	Z+21, r25	; 0x15
    8c6e:	84 8b       	std	Z+20, r24	; 0x14
    8c70:	86 ec       	ldi	r24, 0xC6	; 198
    8c72:	90 e0       	ldi	r25, 0x00	; 0
    8c74:	97 8b       	std	Z+23, r25	; 0x17
    8c76:	86 8b       	std	Z+22, r24	; 0x16
    8c78:	11 8e       	std	Z+25, r1	; 0x19
    8c7a:	12 8e       	std	Z+26, r1	; 0x1a
    8c7c:	13 8e       	std	Z+27, r1	; 0x1b
    8c7e:	14 8e       	std	Z+28, r1	; 0x1c
    8c80:	08 95       	ret

00008c82 <initVariant>:
    8c82:	08 95       	ret

00008c84 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    8c84:	5e d1       	rcall	.+700    	; 0x8f42 <init>

	initVariant();
    8c86:	fd df       	rcall	.-6      	; 0x8c82 <initVariant>
    8c88:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <setup>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    8c8c:	ce ed       	ldi	r28, 0xDE	; 222
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    8c8e:	d9 e4       	ldi	r29, 0x49	; 73
    8c90:	0e 94 72 17 	call	0x2ee4	; 0x2ee4 <loop>
#endif
	
	setup();
    
	for (;;) {
		loop();
    8c94:	20 97       	sbiw	r28, 0x00	; 0
		if (serialEventRun) serialEventRun();
    8c96:	e1 f3       	breq	.-8      	; 0x8c90 <main+0xc>
    8c98:	91 d3       	rcall	.+1826   	; 0x93bc <_Z14serialEventRunv>
    8c9a:	fa cf       	rjmp	.-12     	; 0x8c90 <main+0xc>

00008c9c <_Znwj>:
    8c9c:	21 c5       	rjmp	.+2626   	; 0x96e0 <malloc>

00008c9e <_ZN5Print5writeEPKhj>:
size_t Print::println(unsigned char b, int base)
{
  size_t n = print(b, base);
  n += println();
  return n;
}
    8c9e:	cf 92       	push	r12
    8ca0:	df 92       	push	r13
    8ca2:	ef 92       	push	r14
    8ca4:	ff 92       	push	r15
    8ca6:	0f 93       	push	r16
    8ca8:	1f 93       	push	r17
    8caa:	cf 93       	push	r28
    8cac:	df 93       	push	r29
    8cae:	6c 01       	movw	r12, r24
    8cb0:	7a 01       	movw	r14, r20
    8cb2:	8b 01       	movw	r16, r22
    8cb4:	c0 e0       	ldi	r28, 0x00	; 0
    8cb6:	d0 e0       	ldi	r29, 0x00	; 0
    8cb8:	ce 15       	cp	r28, r14
    8cba:	df 05       	cpc	r29, r15
    8cbc:	81 f0       	breq	.+32     	; 0x8cde <_ZN5Print5writeEPKhj+0x40>
    8cbe:	d8 01       	movw	r26, r16
    8cc0:	6d 91       	ld	r22, X+
    8cc2:	8d 01       	movw	r16, r26
    8cc4:	d6 01       	movw	r26, r12
    8cc6:	ed 91       	ld	r30, X+
    8cc8:	fc 91       	ld	r31, X
    8cca:	01 90       	ld	r0, Z+
    8ccc:	f0 81       	ld	r31, Z
    8cce:	e0 2d       	mov	r30, r0
    8cd0:	c6 01       	movw	r24, r12
    8cd2:	19 95       	eicall
    8cd4:	89 2b       	or	r24, r25
    8cd6:	11 f0       	breq	.+4      	; 0x8cdc <_ZN5Print5writeEPKhj+0x3e>
    8cd8:	21 96       	adiw	r28, 0x01	; 1
    8cda:	ee cf       	rjmp	.-36     	; 0x8cb8 <_ZN5Print5writeEPKhj+0x1a>
    8cdc:	7e 01       	movw	r14, r28
    8cde:	c7 01       	movw	r24, r14
    8ce0:	df 91       	pop	r29
    8ce2:	cf 91       	pop	r28
    8ce4:	1f 91       	pop	r17
    8ce6:	0f 91       	pop	r16
    8ce8:	ff 90       	pop	r15
    8cea:	ef 90       	pop	r14
    8cec:	df 90       	pop	r13
    8cee:	cf 90       	pop	r12
    8cf0:	08 95       	ret

00008cf2 <_ZN5Print5writeEPKc>:
    8cf2:	61 15       	cp	r22, r1
    8cf4:	71 05       	cpc	r23, r1
    8cf6:	79 f0       	breq	.+30     	; 0x8d16 <_ZN5Print5writeEPKc+0x24>
    8cf8:	fb 01       	movw	r30, r22
    8cfa:	01 90       	ld	r0, Z+
    8cfc:	00 20       	and	r0, r0
    8cfe:	e9 f7       	brne	.-6      	; 0x8cfa <_ZN5Print5writeEPKc+0x8>
    8d00:	31 97       	sbiw	r30, 0x01	; 1
    8d02:	af 01       	movw	r20, r30
    8d04:	46 1b       	sub	r20, r22
    8d06:	57 0b       	sbc	r21, r23
    8d08:	dc 01       	movw	r26, r24
    8d0a:	ed 91       	ld	r30, X+
    8d0c:	fc 91       	ld	r31, X
    8d0e:	02 80       	ldd	r0, Z+2	; 0x02
    8d10:	f3 81       	ldd	r31, Z+3	; 0x03
    8d12:	e0 2d       	mov	r30, r0
    8d14:	19 94       	eijmp
    8d16:	80 e0       	ldi	r24, 0x00	; 0
    8d18:	90 e0       	ldi	r25, 0x00	; 0
    8d1a:	08 95       	ret

00008d1c <_ZN5Print7printlnEv>:
    8d1c:	61 e8       	ldi	r22, 0x81	; 129
    8d1e:	73 e0       	ldi	r23, 0x03	; 3
    8d20:	e8 cf       	rjmp	.-48     	; 0x8cf2 <_ZN5Print5writeEPKc>

00008d22 <_ZN5Print11printNumberEmh>:
    8d22:	8f 92       	push	r8
    8d24:	9f 92       	push	r9
    8d26:	af 92       	push	r10
    8d28:	bf 92       	push	r11
    8d2a:	ef 92       	push	r14
    8d2c:	ff 92       	push	r15
    8d2e:	0f 93       	push	r16
    8d30:	1f 93       	push	r17
    8d32:	cf 93       	push	r28
    8d34:	df 93       	push	r29
    8d36:	cd b7       	in	r28, 0x3d	; 61
    8d38:	de b7       	in	r29, 0x3e	; 62
    8d3a:	a1 97       	sbiw	r28, 0x21	; 33
    8d3c:	0f b6       	in	r0, 0x3f	; 63
    8d3e:	f8 94       	cli
    8d40:	de bf       	out	0x3e, r29	; 62
    8d42:	0f be       	out	0x3f, r0	; 63
    8d44:	cd bf       	out	0x3d, r28	; 61
    8d46:	7c 01       	movw	r14, r24
    8d48:	fa 01       	movw	r30, r20
    8d4a:	cb 01       	movw	r24, r22
    8d4c:	19 a2       	std	Y+33, r1	; 0x21
    8d4e:	22 30       	cpi	r18, 0x02	; 2
    8d50:	08 f4       	brcc	.+2      	; 0x8d54 <_ZN5Print11printNumberEmh+0x32>
    8d52:	2a e0       	ldi	r18, 0x0A	; 10
    8d54:	8e 01       	movw	r16, r28
    8d56:	0f 5d       	subi	r16, 0xDF	; 223
    8d58:	1f 4f       	sbci	r17, 0xFF	; 255
    8d5a:	82 2e       	mov	r8, r18
    8d5c:	91 2c       	mov	r9, r1
    8d5e:	a1 2c       	mov	r10, r1
    8d60:	b1 2c       	mov	r11, r1
    8d62:	bf 01       	movw	r22, r30
    8d64:	a5 01       	movw	r20, r10
    8d66:	94 01       	movw	r18, r8
    8d68:	3d d4       	rcall	.+2170   	; 0x95e4 <__udivmodsi4>
    8d6a:	f9 01       	movw	r30, r18
    8d6c:	ca 01       	movw	r24, r20
    8d6e:	01 50       	subi	r16, 0x01	; 1
    8d70:	11 09       	sbc	r17, r1
    8d72:	6a 30       	cpi	r22, 0x0A	; 10
    8d74:	10 f4       	brcc	.+4      	; 0x8d7a <_ZN5Print11printNumberEmh+0x58>
    8d76:	60 5d       	subi	r22, 0xD0	; 208
    8d78:	01 c0       	rjmp	.+2      	; 0x8d7c <_ZN5Print11printNumberEmh+0x5a>
    8d7a:	69 5c       	subi	r22, 0xC9	; 201
    8d7c:	d8 01       	movw	r26, r16
    8d7e:	6c 93       	st	X, r22
    8d80:	23 2b       	or	r18, r19
    8d82:	24 2b       	or	r18, r20
    8d84:	25 2b       	or	r18, r21
    8d86:	69 f7       	brne	.-38     	; 0x8d62 <_ZN5Print11printNumberEmh+0x40>
    8d88:	b8 01       	movw	r22, r16
    8d8a:	c7 01       	movw	r24, r14
    8d8c:	b2 df       	rcall	.-156    	; 0x8cf2 <_ZN5Print5writeEPKc>
    8d8e:	a1 96       	adiw	r28, 0x21	; 33
    8d90:	0f b6       	in	r0, 0x3f	; 63
    8d92:	f8 94       	cli
    8d94:	de bf       	out	0x3e, r29	; 62
    8d96:	0f be       	out	0x3f, r0	; 63
    8d98:	cd bf       	out	0x3d, r28	; 61
    8d9a:	df 91       	pop	r29
    8d9c:	cf 91       	pop	r28
    8d9e:	1f 91       	pop	r17
    8da0:	0f 91       	pop	r16
    8da2:	ff 90       	pop	r15
    8da4:	ef 90       	pop	r14
    8da6:	bf 90       	pop	r11
    8da8:	af 90       	pop	r10
    8daa:	9f 90       	pop	r9
    8dac:	8f 90       	pop	r8
    8dae:	08 95       	ret

00008db0 <_ZN5Print5printEmi>:
    8db0:	21 15       	cp	r18, r1
    8db2:	31 05       	cpc	r19, r1
    8db4:	41 f4       	brne	.+16     	; 0x8dc6 <_ZN5Print5printEmi+0x16>
    8db6:	dc 01       	movw	r26, r24
    8db8:	ed 91       	ld	r30, X+
    8dba:	fc 91       	ld	r31, X
    8dbc:	01 90       	ld	r0, Z+
    8dbe:	f0 81       	ld	r31, Z
    8dc0:	e0 2d       	mov	r30, r0
    8dc2:	64 2f       	mov	r22, r20
    8dc4:	19 94       	eijmp
    8dc6:	ad cf       	rjmp	.-166    	; 0x8d22 <_ZN5Print11printNumberEmh>

00008dc8 <_ZN5Print5printEji>:
{
  return print((long) n, base);
}

size_t Print::print(unsigned int n, int base)
{
    8dc8:	9a 01       	movw	r18, r20
  return print((unsigned long) n, base);
    8dca:	ab 01       	movw	r20, r22
    8dcc:	60 e0       	ldi	r22, 0x00	; 0
    8dce:	70 e0       	ldi	r23, 0x00	; 0
    8dd0:	ef cf       	rjmp	.-34     	; 0x8db0 <_ZN5Print5printEmi>

00008dd2 <_ZN5Print7printlnEji>:
  n += println();
  return n;
}

size_t Print::println(unsigned int num, int base)
{
    8dd2:	0f 93       	push	r16
    8dd4:	1f 93       	push	r17
    8dd6:	cf 93       	push	r28
    8dd8:	df 93       	push	r29
    8dda:	ec 01       	movw	r28, r24
  size_t n = print(num, base);
    8ddc:	f5 df       	rcall	.-22     	; 0x8dc8 <_ZN5Print5printEji>
    8dde:	8c 01       	movw	r16, r24
  n += println();
    8de0:	ce 01       	movw	r24, r28
    8de2:	9c df       	rcall	.-200    	; 0x8d1c <_ZN5Print7printlnEv>
  return n;
}
    8de4:	80 0f       	add	r24, r16
    8de6:	91 1f       	adc	r25, r17
    8de8:	df 91       	pop	r29
    8dea:	cf 91       	pop	r28
    8dec:	1f 91       	pop	r17
    8dee:	0f 91       	pop	r16
    8df0:	08 95       	ret

00008df2 <__vector_23>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    8df2:	1f 92       	push	r1
    8df4:	0f 92       	push	r0
    8df6:	0f b6       	in	r0, 0x3f	; 63
    8df8:	0f 92       	push	r0
    8dfa:	11 24       	eor	r1, r1
    8dfc:	2f 93       	push	r18
    8dfe:	3f 93       	push	r19
    8e00:	8f 93       	push	r24
    8e02:	9f 93       	push	r25
    8e04:	af 93       	push	r26
    8e06:	bf 93       	push	r27
    8e08:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <timer0_millis>
    8e0c:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <timer0_millis+0x1>
    8e10:	a0 91 24 0a 	lds	r26, 0x0A24	; 0x800a24 <timer0_millis+0x2>
    8e14:	b0 91 25 0a 	lds	r27, 0x0A25	; 0x800a25 <timer0_millis+0x3>
    8e18:	30 91 21 0a 	lds	r19, 0x0A21	; 0x800a21 <timer0_fract>
    8e1c:	23 e0       	ldi	r18, 0x03	; 3
    8e1e:	23 0f       	add	r18, r19
    8e20:	2d 37       	cpi	r18, 0x7D	; 125
    8e22:	20 f4       	brcc	.+8      	; 0x8e2c <__vector_23+0x3a>
    8e24:	01 96       	adiw	r24, 0x01	; 1
    8e26:	a1 1d       	adc	r26, r1
    8e28:	b1 1d       	adc	r27, r1
    8e2a:	05 c0       	rjmp	.+10     	; 0x8e36 <__vector_23+0x44>
    8e2c:	26 e8       	ldi	r18, 0x86	; 134
    8e2e:	23 0f       	add	r18, r19
    8e30:	02 96       	adiw	r24, 0x02	; 2
    8e32:	a1 1d       	adc	r26, r1
    8e34:	b1 1d       	adc	r27, r1
    8e36:	20 93 21 0a 	sts	0x0A21, r18	; 0x800a21 <timer0_fract>
    8e3a:	80 93 22 0a 	sts	0x0A22, r24	; 0x800a22 <timer0_millis>
    8e3e:	90 93 23 0a 	sts	0x0A23, r25	; 0x800a23 <timer0_millis+0x1>
    8e42:	a0 93 24 0a 	sts	0x0A24, r26	; 0x800a24 <timer0_millis+0x2>
    8e46:	b0 93 25 0a 	sts	0x0A25, r27	; 0x800a25 <timer0_millis+0x3>
    8e4a:	80 91 26 0a 	lds	r24, 0x0A26	; 0x800a26 <timer0_overflow_count>
    8e4e:	90 91 27 0a 	lds	r25, 0x0A27	; 0x800a27 <timer0_overflow_count+0x1>
    8e52:	a0 91 28 0a 	lds	r26, 0x0A28	; 0x800a28 <timer0_overflow_count+0x2>
    8e56:	b0 91 29 0a 	lds	r27, 0x0A29	; 0x800a29 <timer0_overflow_count+0x3>
    8e5a:	01 96       	adiw	r24, 0x01	; 1
    8e5c:	a1 1d       	adc	r26, r1
    8e5e:	b1 1d       	adc	r27, r1
    8e60:	80 93 26 0a 	sts	0x0A26, r24	; 0x800a26 <timer0_overflow_count>
    8e64:	90 93 27 0a 	sts	0x0A27, r25	; 0x800a27 <timer0_overflow_count+0x1>
    8e68:	a0 93 28 0a 	sts	0x0A28, r26	; 0x800a28 <timer0_overflow_count+0x2>
    8e6c:	b0 93 29 0a 	sts	0x0A29, r27	; 0x800a29 <timer0_overflow_count+0x3>
    8e70:	bf 91       	pop	r27
    8e72:	af 91       	pop	r26
    8e74:	9f 91       	pop	r25
    8e76:	8f 91       	pop	r24
    8e78:	3f 91       	pop	r19
    8e7a:	2f 91       	pop	r18
    8e7c:	0f 90       	pop	r0
    8e7e:	0f be       	out	0x3f, r0	; 63
    8e80:	0f 90       	pop	r0
    8e82:	1f 90       	pop	r1
    8e84:	18 95       	reti

00008e86 <micros>:
    8e86:	3f b7       	in	r19, 0x3f	; 63
    8e88:	f8 94       	cli
    8e8a:	80 91 26 0a 	lds	r24, 0x0A26	; 0x800a26 <timer0_overflow_count>
    8e8e:	90 91 27 0a 	lds	r25, 0x0A27	; 0x800a27 <timer0_overflow_count+0x1>
    8e92:	a0 91 28 0a 	lds	r26, 0x0A28	; 0x800a28 <timer0_overflow_count+0x2>
    8e96:	b0 91 29 0a 	lds	r27, 0x0A29	; 0x800a29 <timer0_overflow_count+0x3>
    8e9a:	26 b5       	in	r18, 0x26	; 38
    8e9c:	a8 9b       	sbis	0x15, 0	; 21
    8e9e:	05 c0       	rjmp	.+10     	; 0x8eaa <micros+0x24>
    8ea0:	2f 3f       	cpi	r18, 0xFF	; 255
    8ea2:	19 f0       	breq	.+6      	; 0x8eaa <micros+0x24>
    8ea4:	01 96       	adiw	r24, 0x01	; 1
    8ea6:	a1 1d       	adc	r26, r1
    8ea8:	b1 1d       	adc	r27, r1
    8eaa:	3f bf       	out	0x3f, r19	; 63
    8eac:	ba 2f       	mov	r27, r26
    8eae:	a9 2f       	mov	r26, r25
    8eb0:	98 2f       	mov	r25, r24
    8eb2:	88 27       	eor	r24, r24
    8eb4:	82 0f       	add	r24, r18
    8eb6:	91 1d       	adc	r25, r1
    8eb8:	a1 1d       	adc	r26, r1
    8eba:	b1 1d       	adc	r27, r1
    8ebc:	bc 01       	movw	r22, r24
    8ebe:	cd 01       	movw	r24, r26
    8ec0:	42 e0       	ldi	r20, 0x02	; 2
    8ec2:	66 0f       	add	r22, r22
    8ec4:	77 1f       	adc	r23, r23
    8ec6:	88 1f       	adc	r24, r24
    8ec8:	99 1f       	adc	r25, r25
    8eca:	4a 95       	dec	r20
    8ecc:	d1 f7       	brne	.-12     	; 0x8ec2 <micros+0x3c>
    8ece:	08 95       	ret

00008ed0 <delay>:
    8ed0:	8f 92       	push	r8
    8ed2:	9f 92       	push	r9
    8ed4:	af 92       	push	r10
    8ed6:	bf 92       	push	r11
    8ed8:	cf 92       	push	r12
    8eda:	df 92       	push	r13
    8edc:	ef 92       	push	r14
    8ede:	ff 92       	push	r15
    8ee0:	6b 01       	movw	r12, r22
    8ee2:	7c 01       	movw	r14, r24
    8ee4:	d0 df       	rcall	.-96     	; 0x8e86 <micros>
    8ee6:	4b 01       	movw	r8, r22
    8ee8:	5c 01       	movw	r10, r24
    8eea:	c1 14       	cp	r12, r1
    8eec:	d1 04       	cpc	r13, r1
    8eee:	e1 04       	cpc	r14, r1
    8ef0:	f1 04       	cpc	r15, r1
    8ef2:	f1 f0       	breq	.+60     	; 0x8f30 <delay+0x60>
    8ef4:	27 d3       	rcall	.+1614   	; 0x9544 <yield>
    8ef6:	c7 df       	rcall	.-114    	; 0x8e86 <micros>
    8ef8:	dc 01       	movw	r26, r24
    8efa:	cb 01       	movw	r24, r22
    8efc:	88 19       	sub	r24, r8
    8efe:	99 09       	sbc	r25, r9
    8f00:	aa 09       	sbc	r26, r10
    8f02:	bb 09       	sbc	r27, r11
    8f04:	88 3e       	cpi	r24, 0xE8	; 232
    8f06:	93 40       	sbci	r25, 0x03	; 3
    8f08:	a1 05       	cpc	r26, r1
    8f0a:	b1 05       	cpc	r27, r1
    8f0c:	70 f3       	brcs	.-36     	; 0x8eea <delay+0x1a>
    8f0e:	21 e0       	ldi	r18, 0x01	; 1
    8f10:	c2 1a       	sub	r12, r18
    8f12:	d1 08       	sbc	r13, r1
    8f14:	e1 08       	sbc	r14, r1
    8f16:	f1 08       	sbc	r15, r1
    8f18:	88 ee       	ldi	r24, 0xE8	; 232
    8f1a:	88 0e       	add	r8, r24
    8f1c:	83 e0       	ldi	r24, 0x03	; 3
    8f1e:	98 1e       	adc	r9, r24
    8f20:	a1 1c       	adc	r10, r1
    8f22:	b1 1c       	adc	r11, r1
    8f24:	c1 14       	cp	r12, r1
    8f26:	d1 04       	cpc	r13, r1
    8f28:	e1 04       	cpc	r14, r1
    8f2a:	f1 04       	cpc	r15, r1
    8f2c:	21 f7       	brne	.-56     	; 0x8ef6 <delay+0x26>
    8f2e:	dd cf       	rjmp	.-70     	; 0x8eea <delay+0x1a>
    8f30:	ff 90       	pop	r15
    8f32:	ef 90       	pop	r14
    8f34:	df 90       	pop	r13
    8f36:	cf 90       	pop	r12
    8f38:	bf 90       	pop	r11
    8f3a:	af 90       	pop	r10
    8f3c:	9f 90       	pop	r9
    8f3e:	8f 90       	pop	r8
    8f40:	08 95       	ret

00008f42 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    8f42:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    8f44:	84 b5       	in	r24, 0x24	; 36
    8f46:	82 60       	ori	r24, 0x02	; 2
    8f48:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    8f4a:	84 b5       	in	r24, 0x24	; 36
    8f4c:	81 60       	ori	r24, 0x01	; 1
    8f4e:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    8f50:	85 b5       	in	r24, 0x25	; 37
    8f52:	82 60       	ori	r24, 0x02	; 2
    8f54:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    8f56:	85 b5       	in	r24, 0x25	; 37
    8f58:	81 60       	ori	r24, 0x01	; 1
    8f5a:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    8f5c:	ee e6       	ldi	r30, 0x6E	; 110
    8f5e:	f0 e0       	ldi	r31, 0x00	; 0
    8f60:	80 81       	ld	r24, Z
    8f62:	81 60       	ori	r24, 0x01	; 1
    8f64:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    8f66:	e1 e8       	ldi	r30, 0x81	; 129
    8f68:	f0 e0       	ldi	r31, 0x00	; 0
    8f6a:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    8f6c:	80 81       	ld	r24, Z
    8f6e:	82 60       	ori	r24, 0x02	; 2
    8f70:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    8f72:	80 81       	ld	r24, Z
    8f74:	81 60       	ori	r24, 0x01	; 1
    8f76:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    8f78:	e0 e8       	ldi	r30, 0x80	; 128
    8f7a:	f0 e0       	ldi	r31, 0x00	; 0
    8f7c:	80 81       	ld	r24, Z
    8f7e:	81 60       	ori	r24, 0x01	; 1
    8f80:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    8f82:	e1 eb       	ldi	r30, 0xB1	; 177
    8f84:	f0 e0       	ldi	r31, 0x00	; 0
    8f86:	80 81       	ld	r24, Z
    8f88:	84 60       	ori	r24, 0x04	; 4
    8f8a:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    8f8c:	e0 eb       	ldi	r30, 0xB0	; 176
    8f8e:	f0 e0       	ldi	r31, 0x00	; 0
    8f90:	80 81       	ld	r24, Z
    8f92:	81 60       	ori	r24, 0x01	; 1
    8f94:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
    8f96:	e1 e9       	ldi	r30, 0x91	; 145
    8f98:	f0 e0       	ldi	r31, 0x00	; 0
    8f9a:	80 81       	ld	r24, Z
    8f9c:	82 60       	ori	r24, 0x02	; 2
    8f9e:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
    8fa0:	80 81       	ld	r24, Z
    8fa2:	81 60       	ori	r24, 0x01	; 1
    8fa4:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
    8fa6:	e0 e9       	ldi	r30, 0x90	; 144
    8fa8:	f0 e0       	ldi	r31, 0x00	; 0
    8faa:	80 81       	ld	r24, Z
    8fac:	81 60       	ori	r24, 0x01	; 1
    8fae:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
    8fb0:	e1 ea       	ldi	r30, 0xA1	; 161
    8fb2:	f0 e0       	ldi	r31, 0x00	; 0
    8fb4:	80 81       	ld	r24, Z
    8fb6:	82 60       	ori	r24, 0x02	; 2
    8fb8:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
    8fba:	80 81       	ld	r24, Z
    8fbc:	81 60       	ori	r24, 0x01	; 1
    8fbe:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
    8fc0:	e0 ea       	ldi	r30, 0xA0	; 160
    8fc2:	f0 e0       	ldi	r31, 0x00	; 0
    8fc4:	80 81       	ld	r24, Z
    8fc6:	81 60       	ori	r24, 0x01	; 1
    8fc8:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
    8fca:	e1 e2       	ldi	r30, 0x21	; 33
    8fcc:	f1 e0       	ldi	r31, 0x01	; 1
    8fce:	80 81       	ld	r24, Z
    8fd0:	82 60       	ori	r24, 0x02	; 2
    8fd2:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
    8fd4:	80 81       	ld	r24, Z
    8fd6:	81 60       	ori	r24, 0x01	; 1
    8fd8:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
    8fda:	e0 e2       	ldi	r30, 0x20	; 32
    8fdc:	f1 e0       	ldi	r31, 0x01	; 1
    8fde:	80 81       	ld	r24, Z
    8fe0:	81 60       	ori	r24, 0x01	; 1
    8fe2:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    8fe4:	ea e7       	ldi	r30, 0x7A	; 122
    8fe6:	f0 e0       	ldi	r31, 0x00	; 0
    8fe8:	80 81       	ld	r24, Z
    8fea:	84 60       	ori	r24, 0x04	; 4
    8fec:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    8fee:	80 81       	ld	r24, Z
    8ff0:	82 60       	ori	r24, 0x02	; 2
    8ff2:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    8ff4:	80 81       	ld	r24, Z
    8ff6:	81 60       	ori	r24, 0x01	; 1
    8ff8:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    8ffa:	80 81       	ld	r24, Z
    8ffc:	80 68       	ori	r24, 0x80	; 128
    8ffe:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    9000:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    9004:	08 95       	ret

00009006 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    9006:	90 e0       	ldi	r25, 0x00	; 0
    9008:	fc 01       	movw	r30, r24
    900a:	31 97       	sbiw	r30, 0x01	; 1
    900c:	e2 31       	cpi	r30, 0x12	; 18
    900e:	f1 05       	cpc	r31, r1
    9010:	08 f0       	brcs	.+2      	; 0x9014 <turnOffPWM+0xe>
    9012:	4d c0       	rjmp	.+154    	; 0x90ae <turnOffPWM+0xa8>
    9014:	88 27       	eor	r24, r24
    9016:	e3 54       	subi	r30, 0x43	; 67
    9018:	ff 4f       	sbci	r31, 0xFF	; 255
    901a:	8f 4f       	sbci	r24, 0xFF	; 255
    901c:	21 c3       	rjmp	.+1602   	; 0x9660 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    901e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    9022:	8f 77       	andi	r24, 0x7F	; 127
    9024:	03 c0       	rjmp	.+6      	; 0x902c <turnOffPWM+0x26>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    9026:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    902a:	8f 7d       	andi	r24, 0xDF	; 223
    902c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    9030:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
    9032:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    9036:	87 7f       	andi	r24, 0xF7	; 247
    9038:	f9 cf       	rjmp	.-14     	; 0x902c <turnOffPWM+0x26>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    903a:	84 b5       	in	r24, 0x24	; 36
    903c:	8f 77       	andi	r24, 0x7F	; 127
    903e:	02 c0       	rjmp	.+4      	; 0x9044 <turnOffPWM+0x3e>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    9040:	84 b5       	in	r24, 0x24	; 36
    9042:	8f 7d       	andi	r24, 0xDF	; 223
    9044:	84 bd       	out	0x24, r24	; 36
    9046:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    9048:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    904c:	8f 77       	andi	r24, 0x7F	; 127
    904e:	03 c0       	rjmp	.+6      	; 0x9056 <turnOffPWM+0x50>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    9050:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    9054:	8f 7d       	andi	r24, 0xDF	; 223
    9056:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    905a:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
    905c:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    9060:	8f 77       	andi	r24, 0x7F	; 127
    9062:	07 c0       	rjmp	.+14     	; 0x9072 <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
    9064:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    9068:	8f 7d       	andi	r24, 0xDF	; 223
    906a:	03 c0       	rjmp	.+6      	; 0x9072 <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
    906c:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    9070:	87 7f       	andi	r24, 0xF7	; 247
    9072:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    9076:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
    9078:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    907c:	8f 77       	andi	r24, 0x7F	; 127
    907e:	07 c0       	rjmp	.+14     	; 0x908e <turnOffPWM+0x88>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
    9080:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    9084:	8f 7d       	andi	r24, 0xDF	; 223
    9086:	03 c0       	rjmp	.+6      	; 0x908e <turnOffPWM+0x88>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
    9088:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    908c:	87 7f       	andi	r24, 0xF7	; 247
    908e:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    9092:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
    9094:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    9098:	8f 77       	andi	r24, 0x7F	; 127
    909a:	07 c0       	rjmp	.+14     	; 0x90aa <turnOffPWM+0xa4>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
    909c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    90a0:	8f 7d       	andi	r24, 0xDF	; 223
    90a2:	03 c0       	rjmp	.+6      	; 0x90aa <turnOffPWM+0xa4>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
    90a4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    90a8:	87 7f       	andi	r24, 0xF7	; 247
    90aa:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    90ae:	08 95       	ret

000090b0 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    90b0:	cf 93       	push	r28
    90b2:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    90b4:	90 e0       	ldi	r25, 0x00	; 0
    90b6:	fc 01       	movw	r30, r24
    90b8:	e6 5c       	subi	r30, 0xC6	; 198
    90ba:	fc 4e       	sbci	r31, 0xEC	; 236
    90bc:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    90be:	fc 01       	movw	r30, r24
    90c0:	e0 58       	subi	r30, 0x80	; 128
    90c2:	fc 4e       	sbci	r31, 0xEC	; 236
    90c4:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    90c6:	88 23       	and	r24, r24
    90c8:	61 f1       	breq	.+88     	; 0x9122 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    90ca:	90 e0       	ldi	r25, 0x00	; 0
    90cc:	88 0f       	add	r24, r24
    90ce:	99 1f       	adc	r25, r25
    90d0:	fc 01       	movw	r30, r24
    90d2:	e6 50       	subi	r30, 0x06	; 6
    90d4:	fc 4e       	sbci	r31, 0xEC	; 236
    90d6:	c5 91       	lpm	r28, Z+
    90d8:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    90da:	fc 01       	movw	r30, r24
    90dc:	e0 52       	subi	r30, 0x20	; 32
    90de:	fc 4e       	sbci	r31, 0xEC	; 236
    90e0:	a5 91       	lpm	r26, Z+
    90e2:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    90e4:	61 11       	cpse	r22, r1
    90e6:	09 c0       	rjmp	.+18     	; 0x90fa <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    90e8:	9f b7       	in	r25, 0x3f	; 63
                cli();
    90ea:	f8 94       	cli
		*reg &= ~bit;
    90ec:	88 81       	ld	r24, Y
    90ee:	20 95       	com	r18
    90f0:	82 23       	and	r24, r18
    90f2:	88 83       	st	Y, r24
		*out &= ~bit;
    90f4:	ec 91       	ld	r30, X
    90f6:	2e 23       	and	r18, r30
    90f8:	0b c0       	rjmp	.+22     	; 0x9110 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    90fa:	62 30       	cpi	r22, 0x02	; 2
    90fc:	61 f4       	brne	.+24     	; 0x9116 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    90fe:	9f b7       	in	r25, 0x3f	; 63
                cli();
    9100:	f8 94       	cli
		*reg &= ~bit;
    9102:	88 81       	ld	r24, Y
    9104:	32 2f       	mov	r19, r18
    9106:	30 95       	com	r19
    9108:	83 23       	and	r24, r19
    910a:	88 83       	st	Y, r24
		*out |= bit;
    910c:	ec 91       	ld	r30, X
    910e:	2e 2b       	or	r18, r30
    9110:	2c 93       	st	X, r18
		SREG = oldSREG;
    9112:	9f bf       	out	0x3f, r25	; 63
    9114:	06 c0       	rjmp	.+12     	; 0x9122 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    9116:	8f b7       	in	r24, 0x3f	; 63
                cli();
    9118:	f8 94       	cli
		*reg |= bit;
    911a:	e8 81       	ld	r30, Y
    911c:	2e 2b       	or	r18, r30
    911e:	28 83       	st	Y, r18
		SREG = oldSREG;
    9120:	8f bf       	out	0x3f, r24	; 63
	}
}
    9122:	df 91       	pop	r29
    9124:	cf 91       	pop	r28
    9126:	08 95       	ret

00009128 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    9128:	1f 93       	push	r17
    912a:	cf 93       	push	r28
    912c:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    912e:	28 2f       	mov	r18, r24
    9130:	30 e0       	ldi	r19, 0x00	; 0
    9132:	f9 01       	movw	r30, r18
    9134:	ec 50       	subi	r30, 0x0C	; 12
    9136:	fd 4e       	sbci	r31, 0xED	; 237
    9138:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    913a:	f9 01       	movw	r30, r18
    913c:	e6 5c       	subi	r30, 0xC6	; 198
    913e:	fc 4e       	sbci	r31, 0xEC	; 236
    9140:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    9142:	f9 01       	movw	r30, r18
    9144:	e0 58       	subi	r30, 0x80	; 128
    9146:	fc 4e       	sbci	r31, 0xEC	; 236
    9148:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    914a:	cc 23       	and	r28, r28
    914c:	b9 f0       	breq	.+46     	; 0x917c <digitalWrite+0x54>
    914e:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    9150:	81 11       	cpse	r24, r1
    9152:	59 df       	rcall	.-334    	; 0x9006 <turnOffPWM>

	out = portOutputRegister(port);
    9154:	ec 2f       	mov	r30, r28
    9156:	f0 e0       	ldi	r31, 0x00	; 0
    9158:	ee 0f       	add	r30, r30
    915a:	ff 1f       	adc	r31, r31
    915c:	e0 52       	subi	r30, 0x20	; 32
    915e:	fc 4e       	sbci	r31, 0xEC	; 236
    9160:	a5 91       	lpm	r26, Z+
    9162:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    9164:	9f b7       	in	r25, 0x3f	; 63
	cli();
    9166:	f8 94       	cli

	if (val == LOW) {
    9168:	11 11       	cpse	r17, r1
    916a:	04 c0       	rjmp	.+8      	; 0x9174 <digitalWrite+0x4c>
		*out &= ~bit;
    916c:	8c 91       	ld	r24, X
    916e:	d0 95       	com	r29
    9170:	d8 23       	and	r29, r24
    9172:	02 c0       	rjmp	.+4      	; 0x9178 <digitalWrite+0x50>
	} else {
		*out |= bit;
    9174:	ec 91       	ld	r30, X
    9176:	de 2b       	or	r29, r30
    9178:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    917a:	9f bf       	out	0x3f, r25	; 63
}
    917c:	df 91       	pop	r29
    917e:	cf 91       	pop	r28
    9180:	1f 91       	pop	r17
    9182:	08 95       	ret

00009184 <digitalRead>:

int digitalRead(uint8_t pin)
{
    9184:	cf 93       	push	r28
    9186:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    9188:	28 2f       	mov	r18, r24
    918a:	30 e0       	ldi	r19, 0x00	; 0
    918c:	f9 01       	movw	r30, r18
    918e:	ec 50       	subi	r30, 0x0C	; 12
    9190:	fd 4e       	sbci	r31, 0xED	; 237
    9192:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    9194:	f9 01       	movw	r30, r18
    9196:	e6 5c       	subi	r30, 0xC6	; 198
    9198:	fc 4e       	sbci	r31, 0xEC	; 236
    919a:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    919c:	f9 01       	movw	r30, r18
    919e:	e0 58       	subi	r30, 0x80	; 128
    91a0:	fc 4e       	sbci	r31, 0xEC	; 236
    91a2:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
    91a4:	cc 23       	and	r28, r28
    91a6:	89 f0       	breq	.+34     	; 0x91ca <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    91a8:	81 11       	cpse	r24, r1
    91aa:	2d df       	rcall	.-422    	; 0x9006 <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
    91ac:	ec 2f       	mov	r30, r28
    91ae:	f0 e0       	ldi	r31, 0x00	; 0
    91b0:	ee 0f       	add	r30, r30
    91b2:	ff 1f       	adc	r31, r31
    91b4:	ea 53       	subi	r30, 0x3A	; 58
    91b6:	fc 4e       	sbci	r31, 0xEC	; 236
    91b8:	a5 91       	lpm	r26, Z+
    91ba:	b4 91       	lpm	r27, Z
    91bc:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
    91be:	ed 23       	and	r30, r29
    91c0:	81 e0       	ldi	r24, 0x01	; 1
    91c2:	90 e0       	ldi	r25, 0x00	; 0
    91c4:	21 f4       	brne	.+8      	; 0x91ce <digitalRead+0x4a>
    91c6:	80 e0       	ldi	r24, 0x00	; 0
    91c8:	02 c0       	rjmp	.+4      	; 0x91ce <digitalRead+0x4a>
    91ca:	80 e0       	ldi	r24, 0x00	; 0
    91cc:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
    91ce:	df 91       	pop	r29
    91d0:	cf 91       	pop	r28
    91d2:	08 95       	ret

000091d4 <_ZN6StringD1Ev>:
/*  Character Access                         */
/*********************************************/

char String::charAt(unsigned int loc) const
{
	return operator[](loc);
    91d4:	fc 01       	movw	r30, r24
    91d6:	80 81       	ld	r24, Z
    91d8:	91 81       	ldd	r25, Z+1	; 0x01
    91da:	1a c3       	rjmp	.+1588   	; 0x9810 <free>

000091dc <_ZN6String10invalidateEv>:
    91dc:	cf 93       	push	r28
    91de:	df 93       	push	r29
    91e0:	ec 01       	movw	r28, r24
    91e2:	88 81       	ld	r24, Y
    91e4:	99 81       	ldd	r25, Y+1	; 0x01
    91e6:	00 97       	sbiw	r24, 0x00	; 0
    91e8:	09 f0       	breq	.+2      	; 0x91ec <_ZN6String10invalidateEv+0x10>
    91ea:	12 d3       	rcall	.+1572   	; 0x9810 <free>
    91ec:	19 82       	std	Y+1, r1	; 0x01
    91ee:	18 82       	st	Y, r1
    91f0:	1d 82       	std	Y+5, r1	; 0x05
    91f2:	1c 82       	std	Y+4, r1	; 0x04
    91f4:	1b 82       	std	Y+3, r1	; 0x03
    91f6:	1a 82       	std	Y+2, r1	; 0x02
    91f8:	df 91       	pop	r29
    91fa:	cf 91       	pop	r28
    91fc:	08 95       	ret

000091fe <_ZN6String12changeBufferEj>:
    91fe:	0f 93       	push	r16
    9200:	1f 93       	push	r17
    9202:	cf 93       	push	r28
    9204:	df 93       	push	r29
    9206:	ec 01       	movw	r28, r24
    9208:	8b 01       	movw	r16, r22
    920a:	6f 5f       	subi	r22, 0xFF	; 255
    920c:	7f 4f       	sbci	r23, 0xFF	; 255
    920e:	88 81       	ld	r24, Y
    9210:	99 81       	ldd	r25, Y+1	; 0x01
    9212:	87 d3       	rcall	.+1806   	; 0x9922 <realloc>
    9214:	00 97       	sbiw	r24, 0x00	; 0
    9216:	31 f0       	breq	.+12     	; 0x9224 <_ZN6String12changeBufferEj+0x26>
    9218:	99 83       	std	Y+1, r25	; 0x01
    921a:	88 83       	st	Y, r24
    921c:	1b 83       	std	Y+3, r17	; 0x03
    921e:	0a 83       	std	Y+2, r16	; 0x02
    9220:	81 e0       	ldi	r24, 0x01	; 1
    9222:	01 c0       	rjmp	.+2      	; 0x9226 <_ZN6String12changeBufferEj+0x28>
    9224:	80 e0       	ldi	r24, 0x00	; 0
    9226:	df 91       	pop	r29
    9228:	cf 91       	pop	r28
    922a:	1f 91       	pop	r17
    922c:	0f 91       	pop	r16
    922e:	08 95       	ret

00009230 <_ZN6String7reserveEj>:
    9230:	cf 93       	push	r28
    9232:	df 93       	push	r29
    9234:	ec 01       	movw	r28, r24
    9236:	88 81       	ld	r24, Y
    9238:	99 81       	ldd	r25, Y+1	; 0x01
    923a:	89 2b       	or	r24, r25
    923c:	29 f0       	breq	.+10     	; 0x9248 <_ZN6String7reserveEj+0x18>
    923e:	8a 81       	ldd	r24, Y+2	; 0x02
    9240:	9b 81       	ldd	r25, Y+3	; 0x03
    9242:	86 17       	cp	r24, r22
    9244:	97 07       	cpc	r25, r23
    9246:	58 f4       	brcc	.+22     	; 0x925e <_ZN6String7reserveEj+0x2e>
    9248:	ce 01       	movw	r24, r28
    924a:	d9 df       	rcall	.-78     	; 0x91fe <_ZN6String12changeBufferEj>
    924c:	88 23       	and	r24, r24
    924e:	41 f0       	breq	.+16     	; 0x9260 <_ZN6String7reserveEj+0x30>
    9250:	8c 81       	ldd	r24, Y+4	; 0x04
    9252:	9d 81       	ldd	r25, Y+5	; 0x05
    9254:	89 2b       	or	r24, r25
    9256:	19 f4       	brne	.+6      	; 0x925e <_ZN6String7reserveEj+0x2e>
    9258:	e8 81       	ld	r30, Y
    925a:	f9 81       	ldd	r31, Y+1	; 0x01
    925c:	10 82       	st	Z, r1
    925e:	81 e0       	ldi	r24, 0x01	; 1
    9260:	df 91       	pop	r29
    9262:	cf 91       	pop	r28
    9264:	08 95       	ret

00009266 <_ZN6String4copyEPKcj>:
    9266:	ef 92       	push	r14
    9268:	ff 92       	push	r15
    926a:	0f 93       	push	r16
    926c:	1f 93       	push	r17
    926e:	cf 93       	push	r28
    9270:	df 93       	push	r29
    9272:	ec 01       	movw	r28, r24
    9274:	7b 01       	movw	r14, r22
    9276:	8a 01       	movw	r16, r20
    9278:	ba 01       	movw	r22, r20
    927a:	da df       	rcall	.-76     	; 0x9230 <_ZN6String7reserveEj>
    927c:	81 11       	cpse	r24, r1
    927e:	03 c0       	rjmp	.+6      	; 0x9286 <_ZN6String4copyEPKcj+0x20>
    9280:	ce 01       	movw	r24, r28
    9282:	ac df       	rcall	.-168    	; 0x91dc <_ZN6String10invalidateEv>
    9284:	06 c0       	rjmp	.+12     	; 0x9292 <_ZN6String4copyEPKcj+0x2c>
    9286:	1d 83       	std	Y+5, r17	; 0x05
    9288:	0c 83       	std	Y+4, r16	; 0x04
    928a:	b7 01       	movw	r22, r14
    928c:	88 81       	ld	r24, Y
    928e:	99 81       	ldd	r25, Y+1	; 0x01
    9290:	31 d4       	rcall	.+2146   	; 0x9af4 <strcpy>
    9292:	ce 01       	movw	r24, r28
    9294:	df 91       	pop	r29
    9296:	cf 91       	pop	r28
    9298:	1f 91       	pop	r17
    929a:	0f 91       	pop	r16
    929c:	ff 90       	pop	r15
    929e:	ef 90       	pop	r14
    92a0:	08 95       	ret

000092a2 <_ZN6StringC1EPKc>:
    92a2:	fc 01       	movw	r30, r24
    92a4:	11 82       	std	Z+1, r1	; 0x01
    92a6:	10 82       	st	Z, r1
    92a8:	13 82       	std	Z+3, r1	; 0x03
    92aa:	12 82       	std	Z+2, r1	; 0x02
    92ac:	15 82       	std	Z+5, r1	; 0x05
    92ae:	14 82       	std	Z+4, r1	; 0x04
    92b0:	61 15       	cp	r22, r1
    92b2:	71 05       	cpc	r23, r1
    92b4:	49 f0       	breq	.+18     	; 0x92c8 <_ZN6StringC1EPKc+0x26>
    92b6:	fb 01       	movw	r30, r22
    92b8:	01 90       	ld	r0, Z+
    92ba:	00 20       	and	r0, r0
    92bc:	e9 f7       	brne	.-6      	; 0x92b8 <_ZN6StringC1EPKc+0x16>
    92be:	31 97       	sbiw	r30, 0x01	; 1
    92c0:	af 01       	movw	r20, r30
    92c2:	46 1b       	sub	r20, r22
    92c4:	57 0b       	sbc	r21, r23
    92c6:	cf cf       	rjmp	.-98     	; 0x9266 <_ZN6String4copyEPKcj>
    92c8:	08 95       	ret

000092ca <_ZN6StringaSERKS_>:
    92ca:	cf 93       	push	r28
    92cc:	df 93       	push	r29
    92ce:	ec 01       	movw	r28, r24
    92d0:	fb 01       	movw	r30, r22
    92d2:	86 17       	cp	r24, r22
    92d4:	97 07       	cpc	r25, r23
    92d6:	51 f0       	breq	.+20     	; 0x92ec <_ZN6StringaSERKS_+0x22>
    92d8:	60 81       	ld	r22, Z
    92da:	71 81       	ldd	r23, Z+1	; 0x01
    92dc:	61 15       	cp	r22, r1
    92de:	71 05       	cpc	r23, r1
    92e0:	21 f0       	breq	.+8      	; 0x92ea <_ZN6StringaSERKS_+0x20>
    92e2:	44 81       	ldd	r20, Z+4	; 0x04
    92e4:	55 81       	ldd	r21, Z+5	; 0x05
    92e6:	bf df       	rcall	.-130    	; 0x9266 <_ZN6String4copyEPKcj>
    92e8:	01 c0       	rjmp	.+2      	; 0x92ec <_ZN6StringaSERKS_+0x22>
    92ea:	78 df       	rcall	.-272    	; 0x91dc <_ZN6String10invalidateEv>
    92ec:	ce 01       	movw	r24, r28
    92ee:	df 91       	pop	r29
    92f0:	cf 91       	pop	r28
    92f2:	08 95       	ret

000092f4 <_ZN6StringC1ERKS_>:
    92f4:	fc 01       	movw	r30, r24
    92f6:	11 82       	std	Z+1, r1	; 0x01
    92f8:	10 82       	st	Z, r1
    92fa:	13 82       	std	Z+3, r1	; 0x03
    92fc:	12 82       	std	Z+2, r1	; 0x02
    92fe:	15 82       	std	Z+5, r1	; 0x05
    9300:	14 82       	std	Z+4, r1	; 0x04
    9302:	e3 cf       	rjmp	.-58     	; 0x92ca <_ZN6StringaSERKS_>

00009304 <_ZNK6String8getBytesEPhjj>:
	if (index >= len || !buffer) return 0;
	return buffer[index];
}

void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index) const
{
    9304:	0f 93       	push	r16
    9306:	1f 93       	push	r17
    9308:	cf 93       	push	r28
    930a:	df 93       	push	r29
	if (!bufsize || !buf) return;
    930c:	41 15       	cp	r20, r1
    930e:	51 05       	cpc	r21, r1
    9310:	11 f1       	breq	.+68     	; 0x9356 <_ZNK6String8getBytesEPhjj+0x52>
    9312:	61 15       	cp	r22, r1
    9314:	71 05       	cpc	r23, r1
    9316:	f9 f0       	breq	.+62     	; 0x9356 <_ZNK6String8getBytesEPhjj+0x52>
	if (index >= len) {
    9318:	dc 01       	movw	r26, r24
    931a:	14 96       	adiw	r26, 0x04	; 4
    931c:	ed 91       	ld	r30, X+
    931e:	fc 91       	ld	r31, X
    9320:	15 97       	sbiw	r26, 0x05	; 5
    9322:	2e 17       	cp	r18, r30
    9324:	3f 07       	cpc	r19, r31
    9326:	18 f0       	brcs	.+6      	; 0x932e <_ZNK6String8getBytesEPhjj+0x2a>
		buf[0] = 0;
    9328:	fb 01       	movw	r30, r22
    932a:	10 82       	st	Z, r1
		return;
    932c:	14 c0       	rjmp	.+40     	; 0x9356 <_ZNK6String8getBytesEPhjj+0x52>
	}
	unsigned int n = bufsize - 1;
	if (n > len - index) n = len - index;
    932e:	e2 1b       	sub	r30, r18
    9330:	f3 0b       	sbc	r31, r19
    9332:	ea 01       	movw	r28, r20
    9334:	21 97       	sbiw	r28, 0x01	; 1
    9336:	ec 17       	cp	r30, r28
    9338:	fd 07       	cpc	r31, r29
    933a:	08 f4       	brcc	.+2      	; 0x933e <_ZNK6String8getBytesEPhjj+0x3a>
    933c:	ef 01       	movw	r28, r30
    933e:	8b 01       	movw	r16, r22
    9340:	fc 01       	movw	r30, r24
	strncpy((char *)buf, buffer + index, n);
    9342:	60 81       	ld	r22, Z
    9344:	71 81       	ldd	r23, Z+1	; 0x01
    9346:	62 0f       	add	r22, r18
    9348:	73 1f       	adc	r23, r19
    934a:	ae 01       	movw	r20, r28
    934c:	c8 01       	movw	r24, r16
    934e:	d9 d3       	rcall	.+1970   	; 0x9b02 <strncpy>
	buf[n] = 0;
    9350:	c0 0f       	add	r28, r16
    9352:	d1 1f       	adc	r29, r17
    9354:	18 82       	st	Y, r1
}
    9356:	df 91       	pop	r29
    9358:	cf 91       	pop	r28
    935a:	1f 91       	pop	r17
    935c:	0f 91       	pop	r16
    935e:	08 95       	ret

00009360 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    9360:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    9362:	91 8d       	ldd	r25, Z+25	; 0x19
    9364:	22 8d       	ldd	r18, Z+26	; 0x1a
    9366:	89 2f       	mov	r24, r25
    9368:	90 e0       	ldi	r25, 0x00	; 0
    936a:	80 5c       	subi	r24, 0xC0	; 192
    936c:	9f 4f       	sbci	r25, 0xFF	; 255
    936e:	82 1b       	sub	r24, r18
    9370:	91 09       	sbc	r25, r1
}
    9372:	8f 73       	andi	r24, 0x3F	; 63
    9374:	99 27       	eor	r25, r25
    9376:	08 95       	ret

00009378 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    9378:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    937a:	91 8d       	ldd	r25, Z+25	; 0x19
    937c:	82 8d       	ldd	r24, Z+26	; 0x1a
    937e:	98 17       	cp	r25, r24
    9380:	31 f0       	breq	.+12     	; 0x938e <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    9382:	82 8d       	ldd	r24, Z+26	; 0x1a
    9384:	e8 0f       	add	r30, r24
    9386:	f1 1d       	adc	r31, r1
    9388:	85 8d       	ldd	r24, Z+29	; 0x1d
    938a:	90 e0       	ldi	r25, 0x00	; 0
    938c:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    938e:	8f ef       	ldi	r24, 0xFF	; 255
    9390:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    9392:	08 95       	ret

00009394 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    9394:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    9396:	91 8d       	ldd	r25, Z+25	; 0x19
    9398:	82 8d       	ldd	r24, Z+26	; 0x1a
    939a:	98 17       	cp	r25, r24
    939c:	61 f0       	breq	.+24     	; 0x93b6 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    939e:	82 8d       	ldd	r24, Z+26	; 0x1a
    93a0:	df 01       	movw	r26, r30
    93a2:	a8 0f       	add	r26, r24
    93a4:	b1 1d       	adc	r27, r1
    93a6:	5d 96       	adiw	r26, 0x1d	; 29
    93a8:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    93aa:	92 8d       	ldd	r25, Z+26	; 0x1a
    93ac:	9f 5f       	subi	r25, 0xFF	; 255
    93ae:	9f 73       	andi	r25, 0x3F	; 63
    93b0:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    93b2:	90 e0       	ldi	r25, 0x00	; 0
    93b4:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    93b6:	8f ef       	ldi	r24, 0xFF	; 255
    93b8:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    93ba:	08 95       	ret

000093bc <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    93bc:	8b e0       	ldi	r24, 0x0B	; 11
    93be:	96 e4       	ldi	r25, 0x46	; 70
    93c0:	89 2b       	or	r24, r25
    93c2:	39 f0       	breq	.+14     	; 0x93d2 <_Z14serialEventRunv+0x16>
    93c4:	80 e0       	ldi	r24, 0x00	; 0
    93c6:	90 e0       	ldi	r25, 0x00	; 0
    93c8:	89 2b       	or	r24, r25
    93ca:	19 f0       	breq	.+6      	; 0x93d2 <_Z14serialEventRunv+0x16>
    93cc:	24 dc       	rcall	.-1976   	; 0x8c16 <_Z17Serial0_availablev>
    93ce:	81 11       	cpse	r24, r1
    93d0:	25 c0       	rjmp	.+74     	; 0x941c <_Z14serialEventRunv+0x60>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    93d2:	80 e0       	ldi	r24, 0x00	; 0
    93d4:	90 e0       	ldi	r25, 0x00	; 0
    93d6:	89 2b       	or	r24, r25
    93d8:	41 f0       	breq	.+16     	; 0x93ea <_Z14serialEventRunv+0x2e>
    93da:	80 e0       	ldi	r24, 0x00	; 0
    93dc:	90 e0       	ldi	r25, 0x00	; 0
    93de:	89 2b       	or	r24, r25
    93e0:	21 f0       	breq	.+8      	; 0x93ea <_Z14serialEventRunv+0x2e>
    93e2:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    93e6:	81 11       	cpse	r24, r1
    93e8:	1c c0       	rjmp	.+56     	; 0x9422 <_Z14serialEventRunv+0x66>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    93ea:	80 e0       	ldi	r24, 0x00	; 0
    93ec:	90 e0       	ldi	r25, 0x00	; 0
    93ee:	89 2b       	or	r24, r25
    93f0:	41 f0       	breq	.+16     	; 0x9402 <_Z14serialEventRunv+0x46>
    93f2:	80 e0       	ldi	r24, 0x00	; 0
    93f4:	90 e0       	ldi	r25, 0x00	; 0
    93f6:	89 2b       	or	r24, r25
    93f8:	21 f0       	breq	.+8      	; 0x9402 <_Z14serialEventRunv+0x46>
    93fa:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    93fe:	81 11       	cpse	r24, r1
    9400:	13 c0       	rjmp	.+38     	; 0x9428 <_Z14serialEventRunv+0x6c>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    9402:	80 e0       	ldi	r24, 0x00	; 0
    9404:	90 e0       	ldi	r25, 0x00	; 0
    9406:	89 2b       	or	r24, r25
    9408:	a1 f0       	breq	.+40     	; 0x9432 <_Z14serialEventRunv+0x76>
    940a:	80 e0       	ldi	r24, 0x00	; 0
    940c:	90 e0       	ldi	r25, 0x00	; 0
    940e:	89 2b       	or	r24, r25
    9410:	81 f0       	breq	.+32     	; 0x9432 <_Z14serialEventRunv+0x76>
    9412:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    9416:	81 11       	cpse	r24, r1
    9418:	0a c0       	rjmp	.+20     	; 0x942e <_Z14serialEventRunv+0x72>
    941a:	08 95       	ret
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    941c:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    9420:	d8 cf       	rjmp	.-80     	; 0x93d2 <_Z14serialEventRunv+0x16>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    9422:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    9426:	e1 cf       	rjmp	.-62     	; 0x93ea <_Z14serialEventRunv+0x2e>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    9428:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    942c:	ea cf       	rjmp	.-44     	; 0x9402 <_Z14serialEventRunv+0x46>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    942e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    9432:	08 95       	ret

00009434 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
}

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    9434:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    9436:	84 8d       	ldd	r24, Z+28	; 0x1c
    9438:	df 01       	movw	r26, r30
    943a:	a8 0f       	add	r26, r24
    943c:	b1 1d       	adc	r27, r1
    943e:	a3 5a       	subi	r26, 0xA3	; 163
    9440:	bf 4f       	sbci	r27, 0xFF	; 255
    9442:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    9444:	84 8d       	ldd	r24, Z+28	; 0x1c
    9446:	90 e0       	ldi	r25, 0x00	; 0
    9448:	01 96       	adiw	r24, 0x01	; 1
    944a:	8f 73       	andi	r24, 0x3F	; 63
    944c:	99 27       	eor	r25, r25
    944e:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    9450:	a6 89       	ldd	r26, Z+22	; 0x16
    9452:	b7 89       	ldd	r27, Z+23	; 0x17
    9454:	2c 93       	st	X, r18

  // clear the TXC bit -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  sbi(*_ucsra, TXC0);
    9456:	a0 89       	ldd	r26, Z+16	; 0x10
    9458:	b1 89       	ldd	r27, Z+17	; 0x11
    945a:	8c 91       	ld	r24, X
    945c:	80 64       	ori	r24, 0x40	; 64
    945e:	8c 93       	st	X, r24

  if (_tx_buffer_head == _tx_buffer_tail) {
    9460:	93 8d       	ldd	r25, Z+27	; 0x1b
    9462:	84 8d       	ldd	r24, Z+28	; 0x1c
    9464:	98 13       	cpse	r25, r24
    9466:	06 c0       	rjmp	.+12     	; 0x9474 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    9468:	02 88       	ldd	r0, Z+18	; 0x12
    946a:	f3 89       	ldd	r31, Z+19	; 0x13
    946c:	e0 2d       	mov	r30, r0
    946e:	80 81       	ld	r24, Z
    9470:	8f 7d       	andi	r24, 0xDF	; 223
    9472:	80 83       	st	Z, r24
    9474:	08 95       	ret

00009476 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    9476:	ef 92       	push	r14
    9478:	ff 92       	push	r15
    947a:	0f 93       	push	r16
    947c:	1f 93       	push	r17
    947e:	cf 93       	push	r28
    9480:	df 93       	push	r29
    9482:	ec 01       	movw	r28, r24
  _written = true;
    9484:	81 e0       	ldi	r24, 0x01	; 1
    9486:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    9488:	9b 8d       	ldd	r25, Y+27	; 0x1b
    948a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    948c:	98 13       	cpse	r25, r24
    948e:	05 c0       	rjmp	.+10     	; 0x949a <_ZN14HardwareSerial5writeEh+0x24>
    9490:	e8 89       	ldd	r30, Y+16	; 0x10
    9492:	f9 89       	ldd	r31, Y+17	; 0x11
    9494:	80 81       	ld	r24, Z
    9496:	85 fd       	sbrc	r24, 5
    9498:	23 c0       	rjmp	.+70     	; 0x94e0 <_ZN14HardwareSerial5writeEh+0x6a>
    949a:	f6 2e       	mov	r15, r22
    *_udr = c;
    sbi(*_ucsra, TXC0);
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    949c:	0b 8d       	ldd	r16, Y+27	; 0x1b
    949e:	10 e0       	ldi	r17, 0x00	; 0
    94a0:	0f 5f       	subi	r16, 0xFF	; 255
    94a2:	1f 4f       	sbci	r17, 0xFF	; 255
    94a4:	0f 73       	andi	r16, 0x3F	; 63
    94a6:	11 27       	eor	r17, r17
    94a8:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    94aa:	8c 8d       	ldd	r24, Y+28	; 0x1c
    94ac:	e8 12       	cpse	r14, r24
    94ae:	0b c0       	rjmp	.+22     	; 0x94c6 <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
    94b0:	0f b6       	in	r0, 0x3f	; 63
    94b2:	07 fc       	sbrc	r0, 7
    94b4:	fa cf       	rjmp	.-12     	; 0x94aa <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    94b6:	e8 89       	ldd	r30, Y+16	; 0x10
    94b8:	f9 89       	ldd	r31, Y+17	; 0x11
    94ba:	80 81       	ld	r24, Z
    94bc:	85 ff       	sbrs	r24, 5
    94be:	f5 cf       	rjmp	.-22     	; 0x94aa <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    94c0:	ce 01       	movw	r24, r28
    94c2:	b8 df       	rcall	.-144    	; 0x9434 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    94c4:	f2 cf       	rjmp	.-28     	; 0x94aa <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    94c6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    94c8:	fe 01       	movw	r30, r28
    94ca:	e8 0f       	add	r30, r24
    94cc:	f1 1d       	adc	r31, r1
    94ce:	e3 5a       	subi	r30, 0xA3	; 163
    94d0:	ff 4f       	sbci	r31, 0xFF	; 255
    94d2:	f0 82       	st	Z, r15
  _tx_buffer_head = i;
    94d4:	0b 8f       	std	Y+27, r16	; 0x1b
	
  sbi(*_ucsrb, UDRIE0);
    94d6:	ea 89       	ldd	r30, Y+18	; 0x12
    94d8:	fb 89       	ldd	r31, Y+19	; 0x13
    94da:	80 81       	ld	r24, Z
    94dc:	80 62       	ori	r24, 0x20	; 32
    94de:	07 c0       	rjmp	.+14     	; 0x94ee <_ZN14HardwareSerial5writeEh+0x78>
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    *_udr = c;
    94e0:	ee 89       	ldd	r30, Y+22	; 0x16
    94e2:	ff 89       	ldd	r31, Y+23	; 0x17
    94e4:	60 83       	st	Z, r22
    sbi(*_ucsra, TXC0);
    94e6:	e8 89       	ldd	r30, Y+16	; 0x10
    94e8:	f9 89       	ldd	r31, Y+17	; 0x11
    94ea:	80 81       	ld	r24, Z
    94ec:	80 64       	ori	r24, 0x40	; 64
    94ee:	80 83       	st	Z, r24
  _tx_buffer_head = i;
	
  sbi(*_ucsrb, UDRIE0);
  
  return 1;
}
    94f0:	81 e0       	ldi	r24, 0x01	; 1
    94f2:	90 e0       	ldi	r25, 0x00	; 0
    94f4:	df 91       	pop	r29
    94f6:	cf 91       	pop	r28
    94f8:	1f 91       	pop	r17
    94fa:	0f 91       	pop	r16
    94fc:	ff 90       	pop	r15
    94fe:	ef 90       	pop	r14
    9500:	08 95       	ret

00009502 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    9502:	cf 93       	push	r28
    9504:	df 93       	push	r29
    9506:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    9508:	88 8d       	ldd	r24, Y+24	; 0x18
    950a:	88 23       	and	r24, r24
    950c:	c1 f0       	breq	.+48     	; 0x953e <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    950e:	ea 89       	ldd	r30, Y+18	; 0x12
    9510:	fb 89       	ldd	r31, Y+19	; 0x13
    9512:	80 81       	ld	r24, Z
    9514:	85 fd       	sbrc	r24, 5
    9516:	05 c0       	rjmp	.+10     	; 0x9522 <_ZN14HardwareSerial5flushEv+0x20>
    9518:	a8 89       	ldd	r26, Y+16	; 0x10
    951a:	b9 89       	ldd	r27, Y+17	; 0x11
    951c:	8c 91       	ld	r24, X
    951e:	86 fd       	sbrc	r24, 6
    9520:	0e c0       	rjmp	.+28     	; 0x953e <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    9522:	0f b6       	in	r0, 0x3f	; 63
    9524:	07 fc       	sbrc	r0, 7
    9526:	f5 cf       	rjmp	.-22     	; 0x9512 <_ZN14HardwareSerial5flushEv+0x10>
    9528:	80 81       	ld	r24, Z
    952a:	85 ff       	sbrs	r24, 5
    952c:	f2 cf       	rjmp	.-28     	; 0x9512 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    952e:	a8 89       	ldd	r26, Y+16	; 0x10
    9530:	b9 89       	ldd	r27, Y+17	; 0x11
    9532:	8c 91       	ld	r24, X
    9534:	85 ff       	sbrs	r24, 5
    9536:	ed cf       	rjmp	.-38     	; 0x9512 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    9538:	ce 01       	movw	r24, r28
    953a:	7c df       	rcall	.-264    	; 0x9434 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    953c:	e8 cf       	rjmp	.-48     	; 0x950e <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    953e:	df 91       	pop	r29
    9540:	cf 91       	pop	r28
    9542:	08 95       	ret

00009544 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    9544:	08 95       	ret

00009546 <__mulsi3>:
    9546:	db 01       	movw	r26, r22
    9548:	8f 93       	push	r24
    954a:	9f 93       	push	r25
    954c:	91 d0       	rcall	.+290    	; 0x9670 <__muluhisi3>
    954e:	bf 91       	pop	r27
    9550:	af 91       	pop	r26
    9552:	a2 9f       	mul	r26, r18
    9554:	80 0d       	add	r24, r0
    9556:	91 1d       	adc	r25, r1
    9558:	a3 9f       	mul	r26, r19
    955a:	90 0d       	add	r25, r0
    955c:	b2 9f       	mul	r27, r18
    955e:	90 0d       	add	r25, r0
    9560:	11 24       	eor	r1, r1
    9562:	08 95       	ret

00009564 <__udivmodqi4>:
    9564:	99 1b       	sub	r25, r25
    9566:	79 e0       	ldi	r23, 0x09	; 9
    9568:	04 c0       	rjmp	.+8      	; 0x9572 <__udivmodqi4_ep>

0000956a <__udivmodqi4_loop>:
    956a:	99 1f       	adc	r25, r25
    956c:	96 17       	cp	r25, r22
    956e:	08 f0       	brcs	.+2      	; 0x9572 <__udivmodqi4_ep>
    9570:	96 1b       	sub	r25, r22

00009572 <__udivmodqi4_ep>:
    9572:	88 1f       	adc	r24, r24
    9574:	7a 95       	dec	r23
    9576:	c9 f7       	brne	.-14     	; 0x956a <__udivmodqi4_loop>
    9578:	80 95       	com	r24
    957a:	08 95       	ret

0000957c <__divmodqi4>:
    957c:	87 fb       	bst	r24, 7
    957e:	08 2e       	mov	r0, r24
    9580:	06 26       	eor	r0, r22
    9582:	87 fd       	sbrc	r24, 7
    9584:	81 95       	neg	r24
    9586:	67 fd       	sbrc	r22, 7
    9588:	61 95       	neg	r22
    958a:	ec df       	rcall	.-40     	; 0x9564 <__udivmodqi4>
    958c:	0e f4       	brtc	.+2      	; 0x9590 <__divmodqi4_1>
    958e:	91 95       	neg	r25

00009590 <__divmodqi4_1>:
    9590:	07 fc       	sbrc	r0, 7
    9592:	81 95       	neg	r24

00009594 <__divmodqi4_exit>:
    9594:	08 95       	ret

00009596 <__udivmodhi4>:
    9596:	aa 1b       	sub	r26, r26
    9598:	bb 1b       	sub	r27, r27
    959a:	51 e1       	ldi	r21, 0x11	; 17
    959c:	07 c0       	rjmp	.+14     	; 0x95ac <__udivmodhi4_ep>

0000959e <__udivmodhi4_loop>:
    959e:	aa 1f       	adc	r26, r26
    95a0:	bb 1f       	adc	r27, r27
    95a2:	a6 17       	cp	r26, r22
    95a4:	b7 07       	cpc	r27, r23
    95a6:	10 f0       	brcs	.+4      	; 0x95ac <__udivmodhi4_ep>
    95a8:	a6 1b       	sub	r26, r22
    95aa:	b7 0b       	sbc	r27, r23

000095ac <__udivmodhi4_ep>:
    95ac:	88 1f       	adc	r24, r24
    95ae:	99 1f       	adc	r25, r25
    95b0:	5a 95       	dec	r21
    95b2:	a9 f7       	brne	.-22     	; 0x959e <__udivmodhi4_loop>
    95b4:	80 95       	com	r24
    95b6:	90 95       	com	r25
    95b8:	bc 01       	movw	r22, r24
    95ba:	cd 01       	movw	r24, r26
    95bc:	08 95       	ret

000095be <__divmodhi4>:
    95be:	97 fb       	bst	r25, 7
    95c0:	07 2e       	mov	r0, r23
    95c2:	16 f4       	brtc	.+4      	; 0x95c8 <__divmodhi4+0xa>
    95c4:	00 94       	com	r0
    95c6:	06 d0       	rcall	.+12     	; 0x95d4 <__divmodhi4_neg1>
    95c8:	77 fd       	sbrc	r23, 7
    95ca:	08 d0       	rcall	.+16     	; 0x95dc <__divmodhi4_neg2>
    95cc:	e4 df       	rcall	.-56     	; 0x9596 <__udivmodhi4>
    95ce:	07 fc       	sbrc	r0, 7
    95d0:	05 d0       	rcall	.+10     	; 0x95dc <__divmodhi4_neg2>
    95d2:	3e f4       	brtc	.+14     	; 0x95e2 <__divmodhi4_exit>

000095d4 <__divmodhi4_neg1>:
    95d4:	90 95       	com	r25
    95d6:	81 95       	neg	r24
    95d8:	9f 4f       	sbci	r25, 0xFF	; 255
    95da:	08 95       	ret

000095dc <__divmodhi4_neg2>:
    95dc:	70 95       	com	r23
    95de:	61 95       	neg	r22
    95e0:	7f 4f       	sbci	r23, 0xFF	; 255

000095e2 <__divmodhi4_exit>:
    95e2:	08 95       	ret

000095e4 <__udivmodsi4>:
    95e4:	a1 e2       	ldi	r26, 0x21	; 33
    95e6:	1a 2e       	mov	r1, r26
    95e8:	aa 1b       	sub	r26, r26
    95ea:	bb 1b       	sub	r27, r27
    95ec:	fd 01       	movw	r30, r26
    95ee:	0d c0       	rjmp	.+26     	; 0x960a <__udivmodsi4_ep>

000095f0 <__udivmodsi4_loop>:
    95f0:	aa 1f       	adc	r26, r26
    95f2:	bb 1f       	adc	r27, r27
    95f4:	ee 1f       	adc	r30, r30
    95f6:	ff 1f       	adc	r31, r31
    95f8:	a2 17       	cp	r26, r18
    95fa:	b3 07       	cpc	r27, r19
    95fc:	e4 07       	cpc	r30, r20
    95fe:	f5 07       	cpc	r31, r21
    9600:	20 f0       	brcs	.+8      	; 0x960a <__udivmodsi4_ep>
    9602:	a2 1b       	sub	r26, r18
    9604:	b3 0b       	sbc	r27, r19
    9606:	e4 0b       	sbc	r30, r20
    9608:	f5 0b       	sbc	r31, r21

0000960a <__udivmodsi4_ep>:
    960a:	66 1f       	adc	r22, r22
    960c:	77 1f       	adc	r23, r23
    960e:	88 1f       	adc	r24, r24
    9610:	99 1f       	adc	r25, r25
    9612:	1a 94       	dec	r1
    9614:	69 f7       	brne	.-38     	; 0x95f0 <__udivmodsi4_loop>
    9616:	60 95       	com	r22
    9618:	70 95       	com	r23
    961a:	80 95       	com	r24
    961c:	90 95       	com	r25
    961e:	9b 01       	movw	r18, r22
    9620:	ac 01       	movw	r20, r24
    9622:	bd 01       	movw	r22, r26
    9624:	cf 01       	movw	r24, r30
    9626:	08 95       	ret

00009628 <__divmodsi4>:
    9628:	05 2e       	mov	r0, r21
    962a:	97 fb       	bst	r25, 7
    962c:	16 f4       	brtc	.+4      	; 0x9632 <__divmodsi4+0xa>
    962e:	00 94       	com	r0
    9630:	0f d0       	rcall	.+30     	; 0x9650 <__negsi2>
    9632:	57 fd       	sbrc	r21, 7
    9634:	05 d0       	rcall	.+10     	; 0x9640 <__divmodsi4_neg2>
    9636:	d6 df       	rcall	.-84     	; 0x95e4 <__udivmodsi4>
    9638:	07 fc       	sbrc	r0, 7
    963a:	02 d0       	rcall	.+4      	; 0x9640 <__divmodsi4_neg2>
    963c:	46 f4       	brtc	.+16     	; 0x964e <__divmodsi4_exit>
    963e:	08 c0       	rjmp	.+16     	; 0x9650 <__negsi2>

00009640 <__divmodsi4_neg2>:
    9640:	50 95       	com	r21
    9642:	40 95       	com	r20
    9644:	30 95       	com	r19
    9646:	21 95       	neg	r18
    9648:	3f 4f       	sbci	r19, 0xFF	; 255
    964a:	4f 4f       	sbci	r20, 0xFF	; 255
    964c:	5f 4f       	sbci	r21, 0xFF	; 255

0000964e <__divmodsi4_exit>:
    964e:	08 95       	ret

00009650 <__negsi2>:
    9650:	90 95       	com	r25
    9652:	80 95       	com	r24
    9654:	70 95       	com	r23
    9656:	61 95       	neg	r22
    9658:	7f 4f       	sbci	r23, 0xFF	; 255
    965a:	8f 4f       	sbci	r24, 0xFF	; 255
    965c:	9f 4f       	sbci	r25, 0xFF	; 255
    965e:	08 95       	ret

00009660 <__tablejump2__>:
    9660:	ee 0f       	add	r30, r30
    9662:	ff 1f       	adc	r31, r31
    9664:	88 1f       	adc	r24, r24
    9666:	8b bf       	out	0x3b, r24	; 59
    9668:	07 90       	elpm	r0, Z+
    966a:	f6 91       	elpm	r31, Z
    966c:	e0 2d       	mov	r30, r0
    966e:	19 94       	eijmp

00009670 <__muluhisi3>:
    9670:	09 d0       	rcall	.+18     	; 0x9684 <__umulhisi3>
    9672:	a5 9f       	mul	r26, r21
    9674:	90 0d       	add	r25, r0
    9676:	b4 9f       	mul	r27, r20
    9678:	90 0d       	add	r25, r0
    967a:	a4 9f       	mul	r26, r20
    967c:	80 0d       	add	r24, r0
    967e:	91 1d       	adc	r25, r1
    9680:	11 24       	eor	r1, r1
    9682:	08 95       	ret

00009684 <__umulhisi3>:
    9684:	a2 9f       	mul	r26, r18
    9686:	b0 01       	movw	r22, r0
    9688:	b3 9f       	mul	r27, r19
    968a:	c0 01       	movw	r24, r0
    968c:	a3 9f       	mul	r26, r19
    968e:	70 0d       	add	r23, r0
    9690:	81 1d       	adc	r24, r1
    9692:	11 24       	eor	r1, r1
    9694:	91 1d       	adc	r25, r1
    9696:	b2 9f       	mul	r27, r18
    9698:	70 0d       	add	r23, r0
    969a:	81 1d       	adc	r24, r1
    969c:	11 24       	eor	r1, r1
    969e:	91 1d       	adc	r25, r1
    96a0:	08 95       	ret

000096a2 <dtostrf>:
    96a2:	ef 92       	push	r14
    96a4:	0f 93       	push	r16
    96a6:	1f 93       	push	r17
    96a8:	cf 93       	push	r28
    96aa:	df 93       	push	r29
    96ac:	e8 01       	movw	r28, r16
    96ae:	47 fd       	sbrc	r20, 7
    96b0:	02 c0       	rjmp	.+4      	; 0x96b6 <dtostrf+0x14>
    96b2:	34 e0       	ldi	r19, 0x04	; 4
    96b4:	01 c0       	rjmp	.+2      	; 0x96b8 <dtostrf+0x16>
    96b6:	34 e1       	ldi	r19, 0x14	; 20
    96b8:	04 2e       	mov	r0, r20
    96ba:	00 0c       	add	r0, r0
    96bc:	55 0b       	sbc	r21, r21
    96be:	57 ff       	sbrs	r21, 7
    96c0:	03 c0       	rjmp	.+6      	; 0x96c8 <dtostrf+0x26>
    96c2:	51 95       	neg	r21
    96c4:	41 95       	neg	r20
    96c6:	51 09       	sbc	r21, r1
    96c8:	e3 2e       	mov	r14, r19
    96ca:	02 2f       	mov	r16, r18
    96cc:	24 2f       	mov	r18, r20
    96ce:	ae 01       	movw	r20, r28
    96d0:	27 d2       	rcall	.+1102   	; 0x9b20 <dtoa_prf>
    96d2:	ce 01       	movw	r24, r28
    96d4:	df 91       	pop	r29
    96d6:	cf 91       	pop	r28
    96d8:	1f 91       	pop	r17
    96da:	0f 91       	pop	r16
    96dc:	ef 90       	pop	r14
    96de:	08 95       	ret

000096e0 <malloc>:
    96e0:	0f 93       	push	r16
    96e2:	1f 93       	push	r17
    96e4:	cf 93       	push	r28
    96e6:	df 93       	push	r29
    96e8:	82 30       	cpi	r24, 0x02	; 2
    96ea:	91 05       	cpc	r25, r1
    96ec:	10 f4       	brcc	.+4      	; 0x96f2 <malloc+0x12>
    96ee:	82 e0       	ldi	r24, 0x02	; 2
    96f0:	90 e0       	ldi	r25, 0x00	; 0
    96f2:	e0 91 2c 0a 	lds	r30, 0x0A2C	; 0x800a2c <__flp>
    96f6:	f0 91 2d 0a 	lds	r31, 0x0A2D	; 0x800a2d <__flp+0x1>
    96fa:	20 e0       	ldi	r18, 0x00	; 0
    96fc:	30 e0       	ldi	r19, 0x00	; 0
    96fe:	a0 e0       	ldi	r26, 0x00	; 0
    9700:	b0 e0       	ldi	r27, 0x00	; 0
    9702:	30 97       	sbiw	r30, 0x00	; 0
    9704:	19 f1       	breq	.+70     	; 0x974c <malloc+0x6c>
    9706:	40 81       	ld	r20, Z
    9708:	51 81       	ldd	r21, Z+1	; 0x01
    970a:	02 81       	ldd	r16, Z+2	; 0x02
    970c:	13 81       	ldd	r17, Z+3	; 0x03
    970e:	48 17       	cp	r20, r24
    9710:	59 07       	cpc	r21, r25
    9712:	c8 f0       	brcs	.+50     	; 0x9746 <malloc+0x66>
    9714:	84 17       	cp	r24, r20
    9716:	95 07       	cpc	r25, r21
    9718:	69 f4       	brne	.+26     	; 0x9734 <malloc+0x54>
    971a:	10 97       	sbiw	r26, 0x00	; 0
    971c:	31 f0       	breq	.+12     	; 0x972a <malloc+0x4a>
    971e:	12 96       	adiw	r26, 0x02	; 2
    9720:	0c 93       	st	X, r16
    9722:	12 97       	sbiw	r26, 0x02	; 2
    9724:	13 96       	adiw	r26, 0x03	; 3
    9726:	1c 93       	st	X, r17
    9728:	27 c0       	rjmp	.+78     	; 0x9778 <malloc+0x98>
    972a:	00 93 2c 0a 	sts	0x0A2C, r16	; 0x800a2c <__flp>
    972e:	10 93 2d 0a 	sts	0x0A2D, r17	; 0x800a2d <__flp+0x1>
    9732:	22 c0       	rjmp	.+68     	; 0x9778 <malloc+0x98>
    9734:	21 15       	cp	r18, r1
    9736:	31 05       	cpc	r19, r1
    9738:	19 f0       	breq	.+6      	; 0x9740 <malloc+0x60>
    973a:	42 17       	cp	r20, r18
    973c:	53 07       	cpc	r21, r19
    973e:	18 f4       	brcc	.+6      	; 0x9746 <malloc+0x66>
    9740:	9a 01       	movw	r18, r20
    9742:	bd 01       	movw	r22, r26
    9744:	ef 01       	movw	r28, r30
    9746:	df 01       	movw	r26, r30
    9748:	f8 01       	movw	r30, r16
    974a:	db cf       	rjmp	.-74     	; 0x9702 <malloc+0x22>
    974c:	21 15       	cp	r18, r1
    974e:	31 05       	cpc	r19, r1
    9750:	f9 f0       	breq	.+62     	; 0x9790 <malloc+0xb0>
    9752:	28 1b       	sub	r18, r24
    9754:	39 0b       	sbc	r19, r25
    9756:	24 30       	cpi	r18, 0x04	; 4
    9758:	31 05       	cpc	r19, r1
    975a:	80 f4       	brcc	.+32     	; 0x977c <malloc+0x9c>
    975c:	8a 81       	ldd	r24, Y+2	; 0x02
    975e:	9b 81       	ldd	r25, Y+3	; 0x03
    9760:	61 15       	cp	r22, r1
    9762:	71 05       	cpc	r23, r1
    9764:	21 f0       	breq	.+8      	; 0x976e <malloc+0x8e>
    9766:	fb 01       	movw	r30, r22
    9768:	93 83       	std	Z+3, r25	; 0x03
    976a:	82 83       	std	Z+2, r24	; 0x02
    976c:	04 c0       	rjmp	.+8      	; 0x9776 <malloc+0x96>
    976e:	90 93 2d 0a 	sts	0x0A2D, r25	; 0x800a2d <__flp+0x1>
    9772:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__flp>
    9776:	fe 01       	movw	r30, r28
    9778:	32 96       	adiw	r30, 0x02	; 2
    977a:	44 c0       	rjmp	.+136    	; 0x9804 <malloc+0x124>
    977c:	fe 01       	movw	r30, r28
    977e:	e2 0f       	add	r30, r18
    9780:	f3 1f       	adc	r31, r19
    9782:	81 93       	st	Z+, r24
    9784:	91 93       	st	Z+, r25
    9786:	22 50       	subi	r18, 0x02	; 2
    9788:	31 09       	sbc	r19, r1
    978a:	39 83       	std	Y+1, r19	; 0x01
    978c:	28 83       	st	Y, r18
    978e:	3a c0       	rjmp	.+116    	; 0x9804 <malloc+0x124>
    9790:	20 91 2a 0a 	lds	r18, 0x0A2A	; 0x800a2a <__brkval>
    9794:	30 91 2b 0a 	lds	r19, 0x0A2B	; 0x800a2b <__brkval+0x1>
    9798:	23 2b       	or	r18, r19
    979a:	41 f4       	brne	.+16     	; 0x97ac <malloc+0xcc>
    979c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    97a0:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    97a4:	30 93 2b 0a 	sts	0x0A2B, r19	; 0x800a2b <__brkval+0x1>
    97a8:	20 93 2a 0a 	sts	0x0A2A, r18	; 0x800a2a <__brkval>
    97ac:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    97b0:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    97b4:	21 15       	cp	r18, r1
    97b6:	31 05       	cpc	r19, r1
    97b8:	41 f4       	brne	.+16     	; 0x97ca <malloc+0xea>
    97ba:	2d b7       	in	r18, 0x3d	; 61
    97bc:	3e b7       	in	r19, 0x3e	; 62
    97be:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    97c2:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    97c6:	24 1b       	sub	r18, r20
    97c8:	35 0b       	sbc	r19, r21
    97ca:	e0 91 2a 0a 	lds	r30, 0x0A2A	; 0x800a2a <__brkval>
    97ce:	f0 91 2b 0a 	lds	r31, 0x0A2B	; 0x800a2b <__brkval+0x1>
    97d2:	e2 17       	cp	r30, r18
    97d4:	f3 07       	cpc	r31, r19
    97d6:	a0 f4       	brcc	.+40     	; 0x9800 <malloc+0x120>
    97d8:	2e 1b       	sub	r18, r30
    97da:	3f 0b       	sbc	r19, r31
    97dc:	28 17       	cp	r18, r24
    97de:	39 07       	cpc	r19, r25
    97e0:	78 f0       	brcs	.+30     	; 0x9800 <malloc+0x120>
    97e2:	ac 01       	movw	r20, r24
    97e4:	4e 5f       	subi	r20, 0xFE	; 254
    97e6:	5f 4f       	sbci	r21, 0xFF	; 255
    97e8:	24 17       	cp	r18, r20
    97ea:	35 07       	cpc	r19, r21
    97ec:	48 f0       	brcs	.+18     	; 0x9800 <malloc+0x120>
    97ee:	4e 0f       	add	r20, r30
    97f0:	5f 1f       	adc	r21, r31
    97f2:	50 93 2b 0a 	sts	0x0A2B, r21	; 0x800a2b <__brkval+0x1>
    97f6:	40 93 2a 0a 	sts	0x0A2A, r20	; 0x800a2a <__brkval>
    97fa:	81 93       	st	Z+, r24
    97fc:	91 93       	st	Z+, r25
    97fe:	02 c0       	rjmp	.+4      	; 0x9804 <malloc+0x124>
    9800:	e0 e0       	ldi	r30, 0x00	; 0
    9802:	f0 e0       	ldi	r31, 0x00	; 0
    9804:	cf 01       	movw	r24, r30
    9806:	df 91       	pop	r29
    9808:	cf 91       	pop	r28
    980a:	1f 91       	pop	r17
    980c:	0f 91       	pop	r16
    980e:	08 95       	ret

00009810 <free>:
    9810:	cf 93       	push	r28
    9812:	df 93       	push	r29
    9814:	00 97       	sbiw	r24, 0x00	; 0
    9816:	09 f4       	brne	.+2      	; 0x981a <free+0xa>
    9818:	81 c0       	rjmp	.+258    	; 0x991c <free+0x10c>
    981a:	fc 01       	movw	r30, r24
    981c:	32 97       	sbiw	r30, 0x02	; 2
    981e:	13 82       	std	Z+3, r1	; 0x03
    9820:	12 82       	std	Z+2, r1	; 0x02
    9822:	a0 91 2c 0a 	lds	r26, 0x0A2C	; 0x800a2c <__flp>
    9826:	b0 91 2d 0a 	lds	r27, 0x0A2D	; 0x800a2d <__flp+0x1>
    982a:	10 97       	sbiw	r26, 0x00	; 0
    982c:	81 f4       	brne	.+32     	; 0x984e <free+0x3e>
    982e:	20 81       	ld	r18, Z
    9830:	31 81       	ldd	r19, Z+1	; 0x01
    9832:	82 0f       	add	r24, r18
    9834:	93 1f       	adc	r25, r19
    9836:	20 91 2a 0a 	lds	r18, 0x0A2A	; 0x800a2a <__brkval>
    983a:	30 91 2b 0a 	lds	r19, 0x0A2B	; 0x800a2b <__brkval+0x1>
    983e:	28 17       	cp	r18, r24
    9840:	39 07       	cpc	r19, r25
    9842:	51 f5       	brne	.+84     	; 0x9898 <free+0x88>
    9844:	f0 93 2b 0a 	sts	0x0A2B, r31	; 0x800a2b <__brkval+0x1>
    9848:	e0 93 2a 0a 	sts	0x0A2A, r30	; 0x800a2a <__brkval>
    984c:	67 c0       	rjmp	.+206    	; 0x991c <free+0x10c>
    984e:	ed 01       	movw	r28, r26
    9850:	20 e0       	ldi	r18, 0x00	; 0
    9852:	30 e0       	ldi	r19, 0x00	; 0
    9854:	ce 17       	cp	r28, r30
    9856:	df 07       	cpc	r29, r31
    9858:	40 f4       	brcc	.+16     	; 0x986a <free+0x5a>
    985a:	4a 81       	ldd	r20, Y+2	; 0x02
    985c:	5b 81       	ldd	r21, Y+3	; 0x03
    985e:	9e 01       	movw	r18, r28
    9860:	41 15       	cp	r20, r1
    9862:	51 05       	cpc	r21, r1
    9864:	f1 f0       	breq	.+60     	; 0x98a2 <free+0x92>
    9866:	ea 01       	movw	r28, r20
    9868:	f5 cf       	rjmp	.-22     	; 0x9854 <free+0x44>
    986a:	d3 83       	std	Z+3, r29	; 0x03
    986c:	c2 83       	std	Z+2, r28	; 0x02
    986e:	40 81       	ld	r20, Z
    9870:	51 81       	ldd	r21, Z+1	; 0x01
    9872:	84 0f       	add	r24, r20
    9874:	95 1f       	adc	r25, r21
    9876:	c8 17       	cp	r28, r24
    9878:	d9 07       	cpc	r29, r25
    987a:	59 f4       	brne	.+22     	; 0x9892 <free+0x82>
    987c:	88 81       	ld	r24, Y
    987e:	99 81       	ldd	r25, Y+1	; 0x01
    9880:	84 0f       	add	r24, r20
    9882:	95 1f       	adc	r25, r21
    9884:	02 96       	adiw	r24, 0x02	; 2
    9886:	91 83       	std	Z+1, r25	; 0x01
    9888:	80 83       	st	Z, r24
    988a:	8a 81       	ldd	r24, Y+2	; 0x02
    988c:	9b 81       	ldd	r25, Y+3	; 0x03
    988e:	93 83       	std	Z+3, r25	; 0x03
    9890:	82 83       	std	Z+2, r24	; 0x02
    9892:	21 15       	cp	r18, r1
    9894:	31 05       	cpc	r19, r1
    9896:	29 f4       	brne	.+10     	; 0x98a2 <free+0x92>
    9898:	f0 93 2d 0a 	sts	0x0A2D, r31	; 0x800a2d <__flp+0x1>
    989c:	e0 93 2c 0a 	sts	0x0A2C, r30	; 0x800a2c <__flp>
    98a0:	3d c0       	rjmp	.+122    	; 0x991c <free+0x10c>
    98a2:	e9 01       	movw	r28, r18
    98a4:	fb 83       	std	Y+3, r31	; 0x03
    98a6:	ea 83       	std	Y+2, r30	; 0x02
    98a8:	49 91       	ld	r20, Y+
    98aa:	59 91       	ld	r21, Y+
    98ac:	c4 0f       	add	r28, r20
    98ae:	d5 1f       	adc	r29, r21
    98b0:	ec 17       	cp	r30, r28
    98b2:	fd 07       	cpc	r31, r29
    98b4:	61 f4       	brne	.+24     	; 0x98ce <free+0xbe>
    98b6:	80 81       	ld	r24, Z
    98b8:	91 81       	ldd	r25, Z+1	; 0x01
    98ba:	84 0f       	add	r24, r20
    98bc:	95 1f       	adc	r25, r21
    98be:	02 96       	adiw	r24, 0x02	; 2
    98c0:	e9 01       	movw	r28, r18
    98c2:	99 83       	std	Y+1, r25	; 0x01
    98c4:	88 83       	st	Y, r24
    98c6:	82 81       	ldd	r24, Z+2	; 0x02
    98c8:	93 81       	ldd	r25, Z+3	; 0x03
    98ca:	9b 83       	std	Y+3, r25	; 0x03
    98cc:	8a 83       	std	Y+2, r24	; 0x02
    98ce:	e0 e0       	ldi	r30, 0x00	; 0
    98d0:	f0 e0       	ldi	r31, 0x00	; 0
    98d2:	12 96       	adiw	r26, 0x02	; 2
    98d4:	8d 91       	ld	r24, X+
    98d6:	9c 91       	ld	r25, X
    98d8:	13 97       	sbiw	r26, 0x03	; 3
    98da:	00 97       	sbiw	r24, 0x00	; 0
    98dc:	19 f0       	breq	.+6      	; 0x98e4 <free+0xd4>
    98de:	fd 01       	movw	r30, r26
    98e0:	dc 01       	movw	r26, r24
    98e2:	f7 cf       	rjmp	.-18     	; 0x98d2 <free+0xc2>
    98e4:	8d 91       	ld	r24, X+
    98e6:	9c 91       	ld	r25, X
    98e8:	11 97       	sbiw	r26, 0x01	; 1
    98ea:	9d 01       	movw	r18, r26
    98ec:	2e 5f       	subi	r18, 0xFE	; 254
    98ee:	3f 4f       	sbci	r19, 0xFF	; 255
    98f0:	82 0f       	add	r24, r18
    98f2:	93 1f       	adc	r25, r19
    98f4:	20 91 2a 0a 	lds	r18, 0x0A2A	; 0x800a2a <__brkval>
    98f8:	30 91 2b 0a 	lds	r19, 0x0A2B	; 0x800a2b <__brkval+0x1>
    98fc:	28 17       	cp	r18, r24
    98fe:	39 07       	cpc	r19, r25
    9900:	69 f4       	brne	.+26     	; 0x991c <free+0x10c>
    9902:	30 97       	sbiw	r30, 0x00	; 0
    9904:	29 f4       	brne	.+10     	; 0x9910 <free+0x100>
    9906:	10 92 2d 0a 	sts	0x0A2D, r1	; 0x800a2d <__flp+0x1>
    990a:	10 92 2c 0a 	sts	0x0A2C, r1	; 0x800a2c <__flp>
    990e:	02 c0       	rjmp	.+4      	; 0x9914 <free+0x104>
    9910:	13 82       	std	Z+3, r1	; 0x03
    9912:	12 82       	std	Z+2, r1	; 0x02
    9914:	b0 93 2b 0a 	sts	0x0A2B, r27	; 0x800a2b <__brkval+0x1>
    9918:	a0 93 2a 0a 	sts	0x0A2A, r26	; 0x800a2a <__brkval>
    991c:	df 91       	pop	r29
    991e:	cf 91       	pop	r28
    9920:	08 95       	ret

00009922 <realloc>:
    9922:	6f 92       	push	r6
    9924:	7f 92       	push	r7
    9926:	8f 92       	push	r8
    9928:	9f 92       	push	r9
    992a:	af 92       	push	r10
    992c:	bf 92       	push	r11
    992e:	cf 92       	push	r12
    9930:	df 92       	push	r13
    9932:	ef 92       	push	r14
    9934:	ff 92       	push	r15
    9936:	0f 93       	push	r16
    9938:	1f 93       	push	r17
    993a:	cf 93       	push	r28
    993c:	df 93       	push	r29
    993e:	00 97       	sbiw	r24, 0x00	; 0
    9940:	81 f4       	brne	.+32     	; 0x9962 <realloc+0x40>
    9942:	cb 01       	movw	r24, r22
    9944:	df 91       	pop	r29
    9946:	cf 91       	pop	r28
    9948:	1f 91       	pop	r17
    994a:	0f 91       	pop	r16
    994c:	ff 90       	pop	r15
    994e:	ef 90       	pop	r14
    9950:	df 90       	pop	r13
    9952:	cf 90       	pop	r12
    9954:	bf 90       	pop	r11
    9956:	af 90       	pop	r10
    9958:	9f 90       	pop	r9
    995a:	8f 90       	pop	r8
    995c:	7f 90       	pop	r7
    995e:	6f 90       	pop	r6
    9960:	bf ce       	rjmp	.-642    	; 0x96e0 <malloc>
    9962:	fc 01       	movw	r30, r24
    9964:	e6 0f       	add	r30, r22
    9966:	f7 1f       	adc	r31, r23
    9968:	9c 01       	movw	r18, r24
    996a:	22 50       	subi	r18, 0x02	; 2
    996c:	31 09       	sbc	r19, r1
    996e:	e2 17       	cp	r30, r18
    9970:	f3 07       	cpc	r31, r19
    9972:	08 f4       	brcc	.+2      	; 0x9976 <realloc+0x54>
    9974:	a5 c0       	rjmp	.+330    	; 0x9ac0 <realloc+0x19e>
    9976:	ec 01       	movw	r28, r24
    9978:	d9 01       	movw	r26, r18
    997a:	0d 91       	ld	r16, X+
    997c:	1c 91       	ld	r17, X
    997e:	11 97       	sbiw	r26, 0x01	; 1
    9980:	06 17       	cp	r16, r22
    9982:	17 07       	cpc	r17, r23
    9984:	a8 f0       	brcs	.+42     	; 0x99b0 <realloc+0x8e>
    9986:	05 30       	cpi	r16, 0x05	; 5
    9988:	11 05       	cpc	r17, r1
    998a:	08 f4       	brcc	.+2      	; 0x998e <realloc+0x6c>
    998c:	97 c0       	rjmp	.+302    	; 0x9abc <realloc+0x19a>
    998e:	c8 01       	movw	r24, r16
    9990:	04 97       	sbiw	r24, 0x04	; 4
    9992:	86 17       	cp	r24, r22
    9994:	97 07       	cpc	r25, r23
    9996:	08 f4       	brcc	.+2      	; 0x999a <realloc+0x78>
    9998:	91 c0       	rjmp	.+290    	; 0x9abc <realloc+0x19a>
    999a:	02 50       	subi	r16, 0x02	; 2
    999c:	11 09       	sbc	r17, r1
    999e:	06 1b       	sub	r16, r22
    99a0:	17 0b       	sbc	r17, r23
    99a2:	01 93       	st	Z+, r16
    99a4:	11 93       	st	Z+, r17
    99a6:	6d 93       	st	X+, r22
    99a8:	7c 93       	st	X, r23
    99aa:	cf 01       	movw	r24, r30
    99ac:	31 df       	rcall	.-414    	; 0x9810 <free>
    99ae:	86 c0       	rjmp	.+268    	; 0x9abc <realloc+0x19a>
    99b0:	5b 01       	movw	r10, r22
    99b2:	a0 1a       	sub	r10, r16
    99b4:	b1 0a       	sbc	r11, r17
    99b6:	4c 01       	movw	r8, r24
    99b8:	80 0e       	add	r8, r16
    99ba:	91 1e       	adc	r9, r17
    99bc:	a0 91 2c 0a 	lds	r26, 0x0A2C	; 0x800a2c <__flp>
    99c0:	b0 91 2d 0a 	lds	r27, 0x0A2D	; 0x800a2d <__flp+0x1>
    99c4:	61 2c       	mov	r6, r1
    99c6:	71 2c       	mov	r7, r1
    99c8:	e1 2c       	mov	r14, r1
    99ca:	f1 2c       	mov	r15, r1
    99cc:	10 97       	sbiw	r26, 0x00	; 0
    99ce:	09 f4       	brne	.+2      	; 0x99d2 <realloc+0xb0>
    99d0:	46 c0       	rjmp	.+140    	; 0x9a5e <realloc+0x13c>
    99d2:	8d 91       	ld	r24, X+
    99d4:	9c 91       	ld	r25, X
    99d6:	11 97       	sbiw	r26, 0x01	; 1
    99d8:	a8 15       	cp	r26, r8
    99da:	b9 05       	cpc	r27, r9
    99dc:	b1 f5       	brne	.+108    	; 0x9a4a <realloc+0x128>
    99de:	6c 01       	movw	r12, r24
    99e0:	42 e0       	ldi	r20, 0x02	; 2
    99e2:	c4 0e       	add	r12, r20
    99e4:	d1 1c       	adc	r13, r1
    99e6:	ca 14       	cp	r12, r10
    99e8:	db 04       	cpc	r13, r11
    99ea:	78 f1       	brcs	.+94     	; 0x9a4a <realloc+0x128>
    99ec:	4c 01       	movw	r8, r24
    99ee:	8a 18       	sub	r8, r10
    99f0:	9b 08       	sbc	r9, r11
    99f2:	64 01       	movw	r12, r8
    99f4:	42 e0       	ldi	r20, 0x02	; 2
    99f6:	c4 0e       	add	r12, r20
    99f8:	d1 1c       	adc	r13, r1
    99fa:	12 96       	adiw	r26, 0x02	; 2
    99fc:	bc 90       	ld	r11, X
    99fe:	12 97       	sbiw	r26, 0x02	; 2
    9a00:	13 96       	adiw	r26, 0x03	; 3
    9a02:	ac 91       	ld	r26, X
    9a04:	b5 e0       	ldi	r27, 0x05	; 5
    9a06:	cb 16       	cp	r12, r27
    9a08:	d1 04       	cpc	r13, r1
    9a0a:	40 f0       	brcs	.+16     	; 0x9a1c <realloc+0xfa>
    9a0c:	b2 82       	std	Z+2, r11	; 0x02
    9a0e:	a3 83       	std	Z+3, r26	; 0x03
    9a10:	91 82       	std	Z+1, r9	; 0x01
    9a12:	80 82       	st	Z, r8
    9a14:	d9 01       	movw	r26, r18
    9a16:	6d 93       	st	X+, r22
    9a18:	7c 93       	st	X, r23
    9a1a:	09 c0       	rjmp	.+18     	; 0x9a2e <realloc+0x10c>
    9a1c:	0e 5f       	subi	r16, 0xFE	; 254
    9a1e:	1f 4f       	sbci	r17, 0xFF	; 255
    9a20:	80 0f       	add	r24, r16
    9a22:	91 1f       	adc	r25, r17
    9a24:	f9 01       	movw	r30, r18
    9a26:	91 83       	std	Z+1, r25	; 0x01
    9a28:	80 83       	st	Z, r24
    9a2a:	eb 2d       	mov	r30, r11
    9a2c:	fa 2f       	mov	r31, r26
    9a2e:	e1 14       	cp	r14, r1
    9a30:	f1 04       	cpc	r15, r1
    9a32:	31 f0       	breq	.+12     	; 0x9a40 <realloc+0x11e>
    9a34:	d7 01       	movw	r26, r14
    9a36:	13 96       	adiw	r26, 0x03	; 3
    9a38:	fc 93       	st	X, r31
    9a3a:	ee 93       	st	-X, r30
    9a3c:	12 97       	sbiw	r26, 0x02	; 2
    9a3e:	3e c0       	rjmp	.+124    	; 0x9abc <realloc+0x19a>
    9a40:	f0 93 2d 0a 	sts	0x0A2D, r31	; 0x800a2d <__flp+0x1>
    9a44:	e0 93 2c 0a 	sts	0x0A2C, r30	; 0x800a2c <__flp>
    9a48:	39 c0       	rjmp	.+114    	; 0x9abc <realloc+0x19a>
    9a4a:	68 16       	cp	r6, r24
    9a4c:	79 06       	cpc	r7, r25
    9a4e:	08 f4       	brcc	.+2      	; 0x9a52 <realloc+0x130>
    9a50:	3c 01       	movw	r6, r24
    9a52:	7d 01       	movw	r14, r26
    9a54:	12 96       	adiw	r26, 0x02	; 2
    9a56:	0d 90       	ld	r0, X+
    9a58:	bc 91       	ld	r27, X
    9a5a:	a0 2d       	mov	r26, r0
    9a5c:	b7 cf       	rjmp	.-146    	; 0x99cc <realloc+0xaa>
    9a5e:	80 91 2a 0a 	lds	r24, 0x0A2A	; 0x800a2a <__brkval>
    9a62:	90 91 2b 0a 	lds	r25, 0x0A2B	; 0x800a2b <__brkval+0x1>
    9a66:	88 16       	cp	r8, r24
    9a68:	99 06       	cpc	r9, r25
    9a6a:	e1 f4       	brne	.+56     	; 0x9aa4 <realloc+0x182>
    9a6c:	66 16       	cp	r6, r22
    9a6e:	77 06       	cpc	r7, r23
    9a70:	c8 f4       	brcc	.+50     	; 0x9aa4 <realloc+0x182>
    9a72:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
    9a76:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__data_start+0x1>
    9a7a:	00 97       	sbiw	r24, 0x00	; 0
    9a7c:	41 f4       	brne	.+16     	; 0x9a8e <realloc+0x16c>
    9a7e:	8d b7       	in	r24, 0x3d	; 61
    9a80:	9e b7       	in	r25, 0x3e	; 62
    9a82:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    9a86:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    9a8a:	84 1b       	sub	r24, r20
    9a8c:	95 0b       	sbc	r25, r21
    9a8e:	e8 17       	cp	r30, r24
    9a90:	f9 07       	cpc	r31, r25
    9a92:	b0 f4       	brcc	.+44     	; 0x9ac0 <realloc+0x19e>
    9a94:	f0 93 2b 0a 	sts	0x0A2B, r31	; 0x800a2b <__brkval+0x1>
    9a98:	e0 93 2a 0a 	sts	0x0A2A, r30	; 0x800a2a <__brkval>
    9a9c:	f9 01       	movw	r30, r18
    9a9e:	71 83       	std	Z+1, r23	; 0x01
    9aa0:	60 83       	st	Z, r22
    9aa2:	0c c0       	rjmp	.+24     	; 0x9abc <realloc+0x19a>
    9aa4:	cb 01       	movw	r24, r22
    9aa6:	1c de       	rcall	.-968    	; 0x96e0 <malloc>
    9aa8:	7c 01       	movw	r14, r24
    9aaa:	00 97       	sbiw	r24, 0x00	; 0
    9aac:	49 f0       	breq	.+18     	; 0x9ac0 <realloc+0x19e>
    9aae:	a8 01       	movw	r20, r16
    9ab0:	be 01       	movw	r22, r28
    9ab2:	17 d0       	rcall	.+46     	; 0x9ae2 <memcpy>
    9ab4:	ce 01       	movw	r24, r28
    9ab6:	ac de       	rcall	.-680    	; 0x9810 <free>
    9ab8:	c7 01       	movw	r24, r14
    9aba:	04 c0       	rjmp	.+8      	; 0x9ac4 <realloc+0x1a2>
    9abc:	ce 01       	movw	r24, r28
    9abe:	02 c0       	rjmp	.+4      	; 0x9ac4 <realloc+0x1a2>
    9ac0:	80 e0       	ldi	r24, 0x00	; 0
    9ac2:	90 e0       	ldi	r25, 0x00	; 0
    9ac4:	df 91       	pop	r29
    9ac6:	cf 91       	pop	r28
    9ac8:	1f 91       	pop	r17
    9aca:	0f 91       	pop	r16
    9acc:	ff 90       	pop	r15
    9ace:	ef 90       	pop	r14
    9ad0:	df 90       	pop	r13
    9ad2:	cf 90       	pop	r12
    9ad4:	bf 90       	pop	r11
    9ad6:	af 90       	pop	r10
    9ad8:	9f 90       	pop	r9
    9ada:	8f 90       	pop	r8
    9adc:	7f 90       	pop	r7
    9ade:	6f 90       	pop	r6
    9ae0:	08 95       	ret

00009ae2 <memcpy>:
    9ae2:	fb 01       	movw	r30, r22
    9ae4:	dc 01       	movw	r26, r24
    9ae6:	02 c0       	rjmp	.+4      	; 0x9aec <memcpy+0xa>
    9ae8:	01 90       	ld	r0, Z+
    9aea:	0d 92       	st	X+, r0
    9aec:	41 50       	subi	r20, 0x01	; 1
    9aee:	50 40       	sbci	r21, 0x00	; 0
    9af0:	d8 f7       	brcc	.-10     	; 0x9ae8 <memcpy+0x6>
    9af2:	08 95       	ret

00009af4 <strcpy>:
    9af4:	fb 01       	movw	r30, r22
    9af6:	dc 01       	movw	r26, r24
    9af8:	01 90       	ld	r0, Z+
    9afa:	0d 92       	st	X+, r0
    9afc:	00 20       	and	r0, r0
    9afe:	e1 f7       	brne	.-8      	; 0x9af8 <strcpy+0x4>
    9b00:	08 95       	ret

00009b02 <strncpy>:
    9b02:	fb 01       	movw	r30, r22
    9b04:	dc 01       	movw	r26, r24
    9b06:	41 50       	subi	r20, 0x01	; 1
    9b08:	50 40       	sbci	r21, 0x00	; 0
    9b0a:	48 f0       	brcs	.+18     	; 0x9b1e <strncpy+0x1c>
    9b0c:	01 90       	ld	r0, Z+
    9b0e:	0d 92       	st	X+, r0
    9b10:	00 20       	and	r0, r0
    9b12:	c9 f7       	brne	.-14     	; 0x9b06 <strncpy+0x4>
    9b14:	01 c0       	rjmp	.+2      	; 0x9b18 <strncpy+0x16>
    9b16:	1d 92       	st	X+, r1
    9b18:	41 50       	subi	r20, 0x01	; 1
    9b1a:	50 40       	sbci	r21, 0x00	; 0
    9b1c:	e0 f7       	brcc	.-8      	; 0x9b16 <strncpy+0x14>
    9b1e:	08 95       	ret

00009b20 <dtoa_prf>:
    9b20:	8f 92       	push	r8
    9b22:	9f 92       	push	r9
    9b24:	af 92       	push	r10
    9b26:	bf 92       	push	r11
    9b28:	cf 92       	push	r12
    9b2a:	df 92       	push	r13
    9b2c:	ef 92       	push	r14
    9b2e:	ff 92       	push	r15
    9b30:	0f 93       	push	r16
    9b32:	1f 93       	push	r17
    9b34:	cf 93       	push	r28
    9b36:	df 93       	push	r29
    9b38:	cd b7       	in	r28, 0x3d	; 61
    9b3a:	de b7       	in	r29, 0x3e	; 62
    9b3c:	29 97       	sbiw	r28, 0x09	; 9
    9b3e:	0f b6       	in	r0, 0x3f	; 63
    9b40:	f8 94       	cli
    9b42:	de bf       	out	0x3e, r29	; 62
    9b44:	0f be       	out	0x3f, r0	; 63
    9b46:	cd bf       	out	0x3d, r28	; 61
    9b48:	6a 01       	movw	r12, r20
    9b4a:	12 2f       	mov	r17, r18
    9b4c:	b0 2e       	mov	r11, r16
    9b4e:	2b e3       	ldi	r18, 0x3B	; 59
    9b50:	20 17       	cp	r18, r16
    9b52:	20 f0       	brcs	.+8      	; 0x9b5c <dtoa_prf+0x3c>
    9b54:	ff 24       	eor	r15, r15
    9b56:	f3 94       	inc	r15
    9b58:	f0 0e       	add	r15, r16
    9b5a:	02 c0       	rjmp	.+4      	; 0x9b60 <dtoa_prf+0x40>
    9b5c:	2c e3       	ldi	r18, 0x3C	; 60
    9b5e:	f2 2e       	mov	r15, r18
    9b60:	0f 2d       	mov	r16, r15
    9b62:	27 e0       	ldi	r18, 0x07	; 7
    9b64:	ae 01       	movw	r20, r28
    9b66:	4f 5f       	subi	r20, 0xFF	; 255
    9b68:	5f 4f       	sbci	r21, 0xFF	; 255
    9b6a:	50 d1       	rcall	.+672    	; 0x9e0c <__ftoa_engine>
    9b6c:	bc 01       	movw	r22, r24
    9b6e:	49 81       	ldd	r20, Y+1	; 0x01
    9b70:	84 2f       	mov	r24, r20
    9b72:	89 70       	andi	r24, 0x09	; 9
    9b74:	81 30       	cpi	r24, 0x01	; 1
    9b76:	31 f0       	breq	.+12     	; 0x9b84 <dtoa_prf+0x64>
    9b78:	e1 fc       	sbrc	r14, 1
    9b7a:	06 c0       	rjmp	.+12     	; 0x9b88 <dtoa_prf+0x68>
    9b7c:	e0 fe       	sbrs	r14, 0
    9b7e:	06 c0       	rjmp	.+12     	; 0x9b8c <dtoa_prf+0x6c>
    9b80:	90 e2       	ldi	r25, 0x20	; 32
    9b82:	05 c0       	rjmp	.+10     	; 0x9b8e <dtoa_prf+0x6e>
    9b84:	9d e2       	ldi	r25, 0x2D	; 45
    9b86:	03 c0       	rjmp	.+6      	; 0x9b8e <dtoa_prf+0x6e>
    9b88:	9b e2       	ldi	r25, 0x2B	; 43
    9b8a:	01 c0       	rjmp	.+2      	; 0x9b8e <dtoa_prf+0x6e>
    9b8c:	90 e0       	ldi	r25, 0x00	; 0
    9b8e:	5e 2d       	mov	r21, r14
    9b90:	50 71       	andi	r21, 0x10	; 16
    9b92:	43 ff       	sbrs	r20, 3
    9b94:	3c c0       	rjmp	.+120    	; 0x9c0e <dtoa_prf+0xee>
    9b96:	91 11       	cpse	r25, r1
    9b98:	02 c0       	rjmp	.+4      	; 0x9b9e <dtoa_prf+0x7e>
    9b9a:	83 e0       	ldi	r24, 0x03	; 3
    9b9c:	01 c0       	rjmp	.+2      	; 0x9ba0 <dtoa_prf+0x80>
    9b9e:	84 e0       	ldi	r24, 0x04	; 4
    9ba0:	81 17       	cp	r24, r17
    9ba2:	18 f4       	brcc	.+6      	; 0x9baa <dtoa_prf+0x8a>
    9ba4:	21 2f       	mov	r18, r17
    9ba6:	28 1b       	sub	r18, r24
    9ba8:	01 c0       	rjmp	.+2      	; 0x9bac <dtoa_prf+0x8c>
    9baa:	20 e0       	ldi	r18, 0x00	; 0
    9bac:	51 11       	cpse	r21, r1
    9bae:	0b c0       	rjmp	.+22     	; 0x9bc6 <dtoa_prf+0xa6>
    9bb0:	f6 01       	movw	r30, r12
    9bb2:	82 2f       	mov	r24, r18
    9bb4:	30 e2       	ldi	r19, 0x20	; 32
    9bb6:	88 23       	and	r24, r24
    9bb8:	19 f0       	breq	.+6      	; 0x9bc0 <dtoa_prf+0xa0>
    9bba:	31 93       	st	Z+, r19
    9bbc:	81 50       	subi	r24, 0x01	; 1
    9bbe:	fb cf       	rjmp	.-10     	; 0x9bb6 <dtoa_prf+0x96>
    9bc0:	c2 0e       	add	r12, r18
    9bc2:	d1 1c       	adc	r13, r1
    9bc4:	20 e0       	ldi	r18, 0x00	; 0
    9bc6:	99 23       	and	r25, r25
    9bc8:	29 f0       	breq	.+10     	; 0x9bd4 <dtoa_prf+0xb4>
    9bca:	d6 01       	movw	r26, r12
    9bcc:	9c 93       	st	X, r25
    9bce:	f6 01       	movw	r30, r12
    9bd0:	31 96       	adiw	r30, 0x01	; 1
    9bd2:	6f 01       	movw	r12, r30
    9bd4:	c6 01       	movw	r24, r12
    9bd6:	03 96       	adiw	r24, 0x03	; 3
    9bd8:	e2 fe       	sbrs	r14, 2
    9bda:	0a c0       	rjmp	.+20     	; 0x9bf0 <dtoa_prf+0xd0>
    9bdc:	3e e4       	ldi	r19, 0x4E	; 78
    9bde:	d6 01       	movw	r26, r12
    9be0:	3c 93       	st	X, r19
    9be2:	41 e4       	ldi	r20, 0x41	; 65
    9be4:	11 96       	adiw	r26, 0x01	; 1
    9be6:	4c 93       	st	X, r20
    9be8:	11 97       	sbiw	r26, 0x01	; 1
    9bea:	12 96       	adiw	r26, 0x02	; 2
    9bec:	3c 93       	st	X, r19
    9bee:	06 c0       	rjmp	.+12     	; 0x9bfc <dtoa_prf+0xdc>
    9bf0:	3e e6       	ldi	r19, 0x6E	; 110
    9bf2:	f6 01       	movw	r30, r12
    9bf4:	30 83       	st	Z, r19
    9bf6:	41 e6       	ldi	r20, 0x61	; 97
    9bf8:	41 83       	std	Z+1, r20	; 0x01
    9bfa:	32 83       	std	Z+2, r19	; 0x02
    9bfc:	fc 01       	movw	r30, r24
    9bfe:	32 2f       	mov	r19, r18
    9c00:	40 e2       	ldi	r20, 0x20	; 32
    9c02:	33 23       	and	r19, r19
    9c04:	09 f4       	brne	.+2      	; 0x9c08 <dtoa_prf+0xe8>
    9c06:	42 c0       	rjmp	.+132    	; 0x9c8c <dtoa_prf+0x16c>
    9c08:	41 93       	st	Z+, r20
    9c0a:	31 50       	subi	r19, 0x01	; 1
    9c0c:	fa cf       	rjmp	.-12     	; 0x9c02 <dtoa_prf+0xe2>
    9c0e:	42 ff       	sbrs	r20, 2
    9c10:	44 c0       	rjmp	.+136    	; 0x9c9a <dtoa_prf+0x17a>
    9c12:	91 11       	cpse	r25, r1
    9c14:	02 c0       	rjmp	.+4      	; 0x9c1a <dtoa_prf+0xfa>
    9c16:	83 e0       	ldi	r24, 0x03	; 3
    9c18:	01 c0       	rjmp	.+2      	; 0x9c1c <dtoa_prf+0xfc>
    9c1a:	84 e0       	ldi	r24, 0x04	; 4
    9c1c:	81 17       	cp	r24, r17
    9c1e:	18 f4       	brcc	.+6      	; 0x9c26 <dtoa_prf+0x106>
    9c20:	21 2f       	mov	r18, r17
    9c22:	28 1b       	sub	r18, r24
    9c24:	01 c0       	rjmp	.+2      	; 0x9c28 <dtoa_prf+0x108>
    9c26:	20 e0       	ldi	r18, 0x00	; 0
    9c28:	51 11       	cpse	r21, r1
    9c2a:	0b c0       	rjmp	.+22     	; 0x9c42 <dtoa_prf+0x122>
    9c2c:	f6 01       	movw	r30, r12
    9c2e:	82 2f       	mov	r24, r18
    9c30:	30 e2       	ldi	r19, 0x20	; 32
    9c32:	88 23       	and	r24, r24
    9c34:	19 f0       	breq	.+6      	; 0x9c3c <dtoa_prf+0x11c>
    9c36:	31 93       	st	Z+, r19
    9c38:	81 50       	subi	r24, 0x01	; 1
    9c3a:	fb cf       	rjmp	.-10     	; 0x9c32 <dtoa_prf+0x112>
    9c3c:	c2 0e       	add	r12, r18
    9c3e:	d1 1c       	adc	r13, r1
    9c40:	20 e0       	ldi	r18, 0x00	; 0
    9c42:	99 23       	and	r25, r25
    9c44:	29 f0       	breq	.+10     	; 0x9c50 <dtoa_prf+0x130>
    9c46:	d6 01       	movw	r26, r12
    9c48:	9c 93       	st	X, r25
    9c4a:	f6 01       	movw	r30, r12
    9c4c:	31 96       	adiw	r30, 0x01	; 1
    9c4e:	6f 01       	movw	r12, r30
    9c50:	c6 01       	movw	r24, r12
    9c52:	03 96       	adiw	r24, 0x03	; 3
    9c54:	e2 fe       	sbrs	r14, 2
    9c56:	0b c0       	rjmp	.+22     	; 0x9c6e <dtoa_prf+0x14e>
    9c58:	39 e4       	ldi	r19, 0x49	; 73
    9c5a:	d6 01       	movw	r26, r12
    9c5c:	3c 93       	st	X, r19
    9c5e:	3e e4       	ldi	r19, 0x4E	; 78
    9c60:	11 96       	adiw	r26, 0x01	; 1
    9c62:	3c 93       	st	X, r19
    9c64:	11 97       	sbiw	r26, 0x01	; 1
    9c66:	36 e4       	ldi	r19, 0x46	; 70
    9c68:	12 96       	adiw	r26, 0x02	; 2
    9c6a:	3c 93       	st	X, r19
    9c6c:	07 c0       	rjmp	.+14     	; 0x9c7c <dtoa_prf+0x15c>
    9c6e:	39 e6       	ldi	r19, 0x69	; 105
    9c70:	f6 01       	movw	r30, r12
    9c72:	30 83       	st	Z, r19
    9c74:	3e e6       	ldi	r19, 0x6E	; 110
    9c76:	31 83       	std	Z+1, r19	; 0x01
    9c78:	36 e6       	ldi	r19, 0x66	; 102
    9c7a:	32 83       	std	Z+2, r19	; 0x02
    9c7c:	fc 01       	movw	r30, r24
    9c7e:	32 2f       	mov	r19, r18
    9c80:	40 e2       	ldi	r20, 0x20	; 32
    9c82:	33 23       	and	r19, r19
    9c84:	19 f0       	breq	.+6      	; 0x9c8c <dtoa_prf+0x16c>
    9c86:	41 93       	st	Z+, r20
    9c88:	31 50       	subi	r19, 0x01	; 1
    9c8a:	fb cf       	rjmp	.-10     	; 0x9c82 <dtoa_prf+0x162>
    9c8c:	fc 01       	movw	r30, r24
    9c8e:	e2 0f       	add	r30, r18
    9c90:	f1 1d       	adc	r31, r1
    9c92:	10 82       	st	Z, r1
    9c94:	8e ef       	ldi	r24, 0xFE	; 254
    9c96:	9f ef       	ldi	r25, 0xFF	; 255
    9c98:	a6 c0       	rjmp	.+332    	; 0x9de6 <dtoa_prf+0x2c6>
    9c9a:	21 e0       	ldi	r18, 0x01	; 1
    9c9c:	30 e0       	ldi	r19, 0x00	; 0
    9c9e:	91 11       	cpse	r25, r1
    9ca0:	02 c0       	rjmp	.+4      	; 0x9ca6 <dtoa_prf+0x186>
    9ca2:	20 e0       	ldi	r18, 0x00	; 0
    9ca4:	30 e0       	ldi	r19, 0x00	; 0
    9ca6:	16 16       	cp	r1, r22
    9ca8:	17 06       	cpc	r1, r23
    9caa:	1c f4       	brge	.+6      	; 0x9cb2 <dtoa_prf+0x192>
    9cac:	fb 01       	movw	r30, r22
    9cae:	31 96       	adiw	r30, 0x01	; 1
    9cb0:	02 c0       	rjmp	.+4      	; 0x9cb6 <dtoa_prf+0x196>
    9cb2:	e1 e0       	ldi	r30, 0x01	; 1
    9cb4:	f0 e0       	ldi	r31, 0x00	; 0
    9cb6:	2e 0f       	add	r18, r30
    9cb8:	3f 1f       	adc	r19, r31
    9cba:	bb 20       	and	r11, r11
    9cbc:	21 f0       	breq	.+8      	; 0x9cc6 <dtoa_prf+0x1a6>
    9cbe:	eb 2d       	mov	r30, r11
    9cc0:	f0 e0       	ldi	r31, 0x00	; 0
    9cc2:	31 96       	adiw	r30, 0x01	; 1
    9cc4:	02 c0       	rjmp	.+4      	; 0x9cca <dtoa_prf+0x1aa>
    9cc6:	e0 e0       	ldi	r30, 0x00	; 0
    9cc8:	f0 e0       	ldi	r31, 0x00	; 0
    9cca:	2e 0f       	add	r18, r30
    9ccc:	3f 1f       	adc	r19, r31
    9cce:	e1 2f       	mov	r30, r17
    9cd0:	f0 e0       	ldi	r31, 0x00	; 0
    9cd2:	2e 17       	cp	r18, r30
    9cd4:	3f 07       	cpc	r19, r31
    9cd6:	1c f4       	brge	.+6      	; 0x9cde <dtoa_prf+0x1be>
    9cd8:	12 1b       	sub	r17, r18
    9cda:	21 2f       	mov	r18, r17
    9cdc:	01 c0       	rjmp	.+2      	; 0x9ce0 <dtoa_prf+0x1c0>
    9cde:	20 e0       	ldi	r18, 0x00	; 0
    9ce0:	8e 2d       	mov	r24, r14
    9ce2:	88 71       	andi	r24, 0x18	; 24
    9ce4:	59 f4       	brne	.+22     	; 0x9cfc <dtoa_prf+0x1dc>
    9ce6:	f6 01       	movw	r30, r12
    9ce8:	82 2f       	mov	r24, r18
    9cea:	30 e2       	ldi	r19, 0x20	; 32
    9cec:	88 23       	and	r24, r24
    9cee:	19 f0       	breq	.+6      	; 0x9cf6 <dtoa_prf+0x1d6>
    9cf0:	31 93       	st	Z+, r19
    9cf2:	81 50       	subi	r24, 0x01	; 1
    9cf4:	fb cf       	rjmp	.-10     	; 0x9cec <dtoa_prf+0x1cc>
    9cf6:	c2 0e       	add	r12, r18
    9cf8:	d1 1c       	adc	r13, r1
    9cfa:	20 e0       	ldi	r18, 0x00	; 0
    9cfc:	99 23       	and	r25, r25
    9cfe:	29 f0       	breq	.+10     	; 0x9d0a <dtoa_prf+0x1ea>
    9d00:	d6 01       	movw	r26, r12
    9d02:	9c 93       	st	X, r25
    9d04:	f6 01       	movw	r30, r12
    9d06:	31 96       	adiw	r30, 0x01	; 1
    9d08:	6f 01       	movw	r12, r30
    9d0a:	51 11       	cpse	r21, r1
    9d0c:	0b c0       	rjmp	.+22     	; 0x9d24 <dtoa_prf+0x204>
    9d0e:	f6 01       	movw	r30, r12
    9d10:	82 2f       	mov	r24, r18
    9d12:	90 e3       	ldi	r25, 0x30	; 48
    9d14:	88 23       	and	r24, r24
    9d16:	19 f0       	breq	.+6      	; 0x9d1e <dtoa_prf+0x1fe>
    9d18:	91 93       	st	Z+, r25
    9d1a:	81 50       	subi	r24, 0x01	; 1
    9d1c:	fb cf       	rjmp	.-10     	; 0x9d14 <dtoa_prf+0x1f4>
    9d1e:	c2 0e       	add	r12, r18
    9d20:	d1 1c       	adc	r13, r1
    9d22:	20 e0       	ldi	r18, 0x00	; 0
    9d24:	0f 2d       	mov	r16, r15
    9d26:	06 0f       	add	r16, r22
    9d28:	9a 81       	ldd	r25, Y+2	; 0x02
    9d2a:	34 2f       	mov	r19, r20
    9d2c:	30 71       	andi	r19, 0x10	; 16
    9d2e:	44 ff       	sbrs	r20, 4
    9d30:	03 c0       	rjmp	.+6      	; 0x9d38 <dtoa_prf+0x218>
    9d32:	91 33       	cpi	r25, 0x31	; 49
    9d34:	09 f4       	brne	.+2      	; 0x9d38 <dtoa_prf+0x218>
    9d36:	01 50       	subi	r16, 0x01	; 1
    9d38:	10 16       	cp	r1, r16
    9d3a:	24 f4       	brge	.+8      	; 0x9d44 <dtoa_prf+0x224>
    9d3c:	09 30       	cpi	r16, 0x09	; 9
    9d3e:	18 f0       	brcs	.+6      	; 0x9d46 <dtoa_prf+0x226>
    9d40:	08 e0       	ldi	r16, 0x08	; 8
    9d42:	01 c0       	rjmp	.+2      	; 0x9d46 <dtoa_prf+0x226>
    9d44:	01 e0       	ldi	r16, 0x01	; 1
    9d46:	ab 01       	movw	r20, r22
    9d48:	77 ff       	sbrs	r23, 7
    9d4a:	02 c0       	rjmp	.+4      	; 0x9d50 <dtoa_prf+0x230>
    9d4c:	40 e0       	ldi	r20, 0x00	; 0
    9d4e:	50 e0       	ldi	r21, 0x00	; 0
    9d50:	fb 01       	movw	r30, r22
    9d52:	e4 1b       	sub	r30, r20
    9d54:	f5 0b       	sbc	r31, r21
    9d56:	a1 e0       	ldi	r26, 0x01	; 1
    9d58:	b0 e0       	ldi	r27, 0x00	; 0
    9d5a:	ac 0f       	add	r26, r28
    9d5c:	bd 1f       	adc	r27, r29
    9d5e:	ea 0f       	add	r30, r26
    9d60:	fb 1f       	adc	r31, r27
    9d62:	8e e2       	ldi	r24, 0x2E	; 46
    9d64:	a8 2e       	mov	r10, r24
    9d66:	4b 01       	movw	r8, r22
    9d68:	80 1a       	sub	r8, r16
    9d6a:	91 08       	sbc	r9, r1
    9d6c:	0b 2d       	mov	r16, r11
    9d6e:	10 e0       	ldi	r17, 0x00	; 0
    9d70:	11 95       	neg	r17
    9d72:	01 95       	neg	r16
    9d74:	11 09       	sbc	r17, r1
    9d76:	4f 3f       	cpi	r20, 0xFF	; 255
    9d78:	bf ef       	ldi	r27, 0xFF	; 255
    9d7a:	5b 07       	cpc	r21, r27
    9d7c:	21 f4       	brne	.+8      	; 0x9d86 <dtoa_prf+0x266>
    9d7e:	d6 01       	movw	r26, r12
    9d80:	ac 92       	st	X, r10
    9d82:	11 96       	adiw	r26, 0x01	; 1
    9d84:	6d 01       	movw	r12, r26
    9d86:	64 17       	cp	r22, r20
    9d88:	75 07       	cpc	r23, r21
    9d8a:	2c f0       	brlt	.+10     	; 0x9d96 <dtoa_prf+0x276>
    9d8c:	84 16       	cp	r8, r20
    9d8e:	95 06       	cpc	r9, r21
    9d90:	14 f4       	brge	.+4      	; 0x9d96 <dtoa_prf+0x276>
    9d92:	81 81       	ldd	r24, Z+1	; 0x01
    9d94:	01 c0       	rjmp	.+2      	; 0x9d98 <dtoa_prf+0x278>
    9d96:	80 e3       	ldi	r24, 0x30	; 48
    9d98:	41 50       	subi	r20, 0x01	; 1
    9d9a:	51 09       	sbc	r21, r1
    9d9c:	31 96       	adiw	r30, 0x01	; 1
    9d9e:	d6 01       	movw	r26, r12
    9da0:	11 96       	adiw	r26, 0x01	; 1
    9da2:	7d 01       	movw	r14, r26
    9da4:	40 17       	cp	r20, r16
    9da6:	51 07       	cpc	r21, r17
    9da8:	24 f0       	brlt	.+8      	; 0x9db2 <dtoa_prf+0x292>
    9daa:	d6 01       	movw	r26, r12
    9dac:	8c 93       	st	X, r24
    9dae:	67 01       	movw	r12, r14
    9db0:	e2 cf       	rjmp	.-60     	; 0x9d76 <dtoa_prf+0x256>
    9db2:	64 17       	cp	r22, r20
    9db4:	75 07       	cpc	r23, r21
    9db6:	39 f4       	brne	.+14     	; 0x9dc6 <dtoa_prf+0x2a6>
    9db8:	96 33       	cpi	r25, 0x36	; 54
    9dba:	20 f4       	brcc	.+8      	; 0x9dc4 <dtoa_prf+0x2a4>
    9dbc:	95 33       	cpi	r25, 0x35	; 53
    9dbe:	19 f4       	brne	.+6      	; 0x9dc6 <dtoa_prf+0x2a6>
    9dc0:	31 11       	cpse	r19, r1
    9dc2:	01 c0       	rjmp	.+2      	; 0x9dc6 <dtoa_prf+0x2a6>
    9dc4:	81 e3       	ldi	r24, 0x31	; 49
    9dc6:	f6 01       	movw	r30, r12
    9dc8:	80 83       	st	Z, r24
    9dca:	f7 01       	movw	r30, r14
    9dcc:	82 2f       	mov	r24, r18
    9dce:	90 e2       	ldi	r25, 0x20	; 32
    9dd0:	88 23       	and	r24, r24
    9dd2:	19 f0       	breq	.+6      	; 0x9dda <dtoa_prf+0x2ba>
    9dd4:	91 93       	st	Z+, r25
    9dd6:	81 50       	subi	r24, 0x01	; 1
    9dd8:	fb cf       	rjmp	.-10     	; 0x9dd0 <dtoa_prf+0x2b0>
    9dda:	f7 01       	movw	r30, r14
    9ddc:	e2 0f       	add	r30, r18
    9dde:	f1 1d       	adc	r31, r1
    9de0:	10 82       	st	Z, r1
    9de2:	80 e0       	ldi	r24, 0x00	; 0
    9de4:	90 e0       	ldi	r25, 0x00	; 0
    9de6:	29 96       	adiw	r28, 0x09	; 9
    9de8:	0f b6       	in	r0, 0x3f	; 63
    9dea:	f8 94       	cli
    9dec:	de bf       	out	0x3e, r29	; 62
    9dee:	0f be       	out	0x3f, r0	; 63
    9df0:	cd bf       	out	0x3d, r28	; 61
    9df2:	df 91       	pop	r29
    9df4:	cf 91       	pop	r28
    9df6:	1f 91       	pop	r17
    9df8:	0f 91       	pop	r16
    9dfa:	ff 90       	pop	r15
    9dfc:	ef 90       	pop	r14
    9dfe:	df 90       	pop	r13
    9e00:	cf 90       	pop	r12
    9e02:	bf 90       	pop	r11
    9e04:	af 90       	pop	r10
    9e06:	9f 90       	pop	r9
    9e08:	8f 90       	pop	r8
    9e0a:	08 95       	ret

00009e0c <__ftoa_engine>:
    9e0c:	28 30       	cpi	r18, 0x08	; 8
    9e0e:	08 f0       	brcs	.+2      	; 0x9e12 <__ftoa_engine+0x6>
    9e10:	27 e0       	ldi	r18, 0x07	; 7
    9e12:	33 27       	eor	r19, r19
    9e14:	da 01       	movw	r26, r20
    9e16:	99 0f       	add	r25, r25
    9e18:	31 1d       	adc	r19, r1
    9e1a:	87 fd       	sbrc	r24, 7
    9e1c:	91 60       	ori	r25, 0x01	; 1
    9e1e:	00 96       	adiw	r24, 0x00	; 0
    9e20:	61 05       	cpc	r22, r1
    9e22:	71 05       	cpc	r23, r1
    9e24:	39 f4       	brne	.+14     	; 0x9e34 <__ftoa_engine+0x28>
    9e26:	32 60       	ori	r19, 0x02	; 2
    9e28:	2e 5f       	subi	r18, 0xFE	; 254
    9e2a:	3d 93       	st	X+, r19
    9e2c:	30 e3       	ldi	r19, 0x30	; 48
    9e2e:	2a 95       	dec	r18
    9e30:	e1 f7       	brne	.-8      	; 0x9e2a <__ftoa_engine+0x1e>
    9e32:	08 95       	ret
    9e34:	9f 3f       	cpi	r25, 0xFF	; 255
    9e36:	30 f0       	brcs	.+12     	; 0x9e44 <__ftoa_engine+0x38>
    9e38:	80 38       	cpi	r24, 0x80	; 128
    9e3a:	71 05       	cpc	r23, r1
    9e3c:	61 05       	cpc	r22, r1
    9e3e:	09 f0       	breq	.+2      	; 0x9e42 <__ftoa_engine+0x36>
    9e40:	3c 5f       	subi	r19, 0xFC	; 252
    9e42:	3c 5f       	subi	r19, 0xFC	; 252
    9e44:	3d 93       	st	X+, r19
    9e46:	91 30       	cpi	r25, 0x01	; 1
    9e48:	08 f0       	brcs	.+2      	; 0x9e4c <__ftoa_engine+0x40>
    9e4a:	80 68       	ori	r24, 0x80	; 128
    9e4c:	91 1d       	adc	r25, r1
    9e4e:	df 93       	push	r29
    9e50:	cf 93       	push	r28
    9e52:	1f 93       	push	r17
    9e54:	0f 93       	push	r16
    9e56:	ff 92       	push	r15
    9e58:	ef 92       	push	r14
    9e5a:	19 2f       	mov	r17, r25
    9e5c:	98 7f       	andi	r25, 0xF8	; 248
    9e5e:	96 95       	lsr	r25
    9e60:	e9 2f       	mov	r30, r25
    9e62:	96 95       	lsr	r25
    9e64:	96 95       	lsr	r25
    9e66:	e9 0f       	add	r30, r25
    9e68:	ff 27       	eor	r31, r31
    9e6a:	e8 50       	subi	r30, 0x08	; 8
    9e6c:	fe 4f       	sbci	r31, 0xFE	; 254
    9e6e:	99 27       	eor	r25, r25
    9e70:	33 27       	eor	r19, r19
    9e72:	ee 24       	eor	r14, r14
    9e74:	ff 24       	eor	r15, r15
    9e76:	a7 01       	movw	r20, r14
    9e78:	e7 01       	movw	r28, r14
    9e7a:	05 90       	lpm	r0, Z+
    9e7c:	08 94       	sec
    9e7e:	07 94       	ror	r0
    9e80:	28 f4       	brcc	.+10     	; 0x9e8c <__ftoa_engine+0x80>
    9e82:	36 0f       	add	r19, r22
    9e84:	e7 1e       	adc	r14, r23
    9e86:	f8 1e       	adc	r15, r24
    9e88:	49 1f       	adc	r20, r25
    9e8a:	51 1d       	adc	r21, r1
    9e8c:	66 0f       	add	r22, r22
    9e8e:	77 1f       	adc	r23, r23
    9e90:	88 1f       	adc	r24, r24
    9e92:	99 1f       	adc	r25, r25
    9e94:	06 94       	lsr	r0
    9e96:	a1 f7       	brne	.-24     	; 0x9e80 <__ftoa_engine+0x74>
    9e98:	05 90       	lpm	r0, Z+
    9e9a:	07 94       	ror	r0
    9e9c:	28 f4       	brcc	.+10     	; 0x9ea8 <__ftoa_engine+0x9c>
    9e9e:	e7 0e       	add	r14, r23
    9ea0:	f8 1e       	adc	r15, r24
    9ea2:	49 1f       	adc	r20, r25
    9ea4:	56 1f       	adc	r21, r22
    9ea6:	c1 1d       	adc	r28, r1
    9ea8:	77 0f       	add	r23, r23
    9eaa:	88 1f       	adc	r24, r24
    9eac:	99 1f       	adc	r25, r25
    9eae:	66 1f       	adc	r22, r22
    9eb0:	06 94       	lsr	r0
    9eb2:	a1 f7       	brne	.-24     	; 0x9e9c <__ftoa_engine+0x90>
    9eb4:	05 90       	lpm	r0, Z+
    9eb6:	07 94       	ror	r0
    9eb8:	28 f4       	brcc	.+10     	; 0x9ec4 <__ftoa_engine+0xb8>
    9eba:	f8 0e       	add	r15, r24
    9ebc:	49 1f       	adc	r20, r25
    9ebe:	56 1f       	adc	r21, r22
    9ec0:	c7 1f       	adc	r28, r23
    9ec2:	d1 1d       	adc	r29, r1
    9ec4:	88 0f       	add	r24, r24
    9ec6:	99 1f       	adc	r25, r25
    9ec8:	66 1f       	adc	r22, r22
    9eca:	77 1f       	adc	r23, r23
    9ecc:	06 94       	lsr	r0
    9ece:	a1 f7       	brne	.-24     	; 0x9eb8 <__ftoa_engine+0xac>
    9ed0:	05 90       	lpm	r0, Z+
    9ed2:	07 94       	ror	r0
    9ed4:	20 f4       	brcc	.+8      	; 0x9ede <__ftoa_engine+0xd2>
    9ed6:	49 0f       	add	r20, r25
    9ed8:	56 1f       	adc	r21, r22
    9eda:	c7 1f       	adc	r28, r23
    9edc:	d8 1f       	adc	r29, r24
    9ede:	99 0f       	add	r25, r25
    9ee0:	66 1f       	adc	r22, r22
    9ee2:	77 1f       	adc	r23, r23
    9ee4:	88 1f       	adc	r24, r24
    9ee6:	06 94       	lsr	r0
    9ee8:	a9 f7       	brne	.-22     	; 0x9ed4 <__ftoa_engine+0xc8>
    9eea:	84 91       	lpm	r24, Z
    9eec:	10 95       	com	r17
    9eee:	17 70       	andi	r17, 0x07	; 7
    9ef0:	41 f0       	breq	.+16     	; 0x9f02 <__ftoa_engine+0xf6>
    9ef2:	d6 95       	lsr	r29
    9ef4:	c7 95       	ror	r28
    9ef6:	57 95       	ror	r21
    9ef8:	47 95       	ror	r20
    9efa:	f7 94       	ror	r15
    9efc:	e7 94       	ror	r14
    9efe:	1a 95       	dec	r17
    9f00:	c1 f7       	brne	.-16     	; 0x9ef2 <__ftoa_engine+0xe6>
    9f02:	ee e9       	ldi	r30, 0x9E	; 158
    9f04:	f1 e0       	ldi	r31, 0x01	; 1
    9f06:	68 94       	set
    9f08:	15 90       	lpm	r1, Z+
    9f0a:	15 91       	lpm	r17, Z+
    9f0c:	35 91       	lpm	r19, Z+
    9f0e:	65 91       	lpm	r22, Z+
    9f10:	95 91       	lpm	r25, Z+
    9f12:	05 90       	lpm	r0, Z+
    9f14:	7f e2       	ldi	r23, 0x2F	; 47
    9f16:	73 95       	inc	r23
    9f18:	e1 18       	sub	r14, r1
    9f1a:	f1 0a       	sbc	r15, r17
    9f1c:	43 0b       	sbc	r20, r19
    9f1e:	56 0b       	sbc	r21, r22
    9f20:	c9 0b       	sbc	r28, r25
    9f22:	d0 09       	sbc	r29, r0
    9f24:	c0 f7       	brcc	.-16     	; 0x9f16 <__ftoa_engine+0x10a>
    9f26:	e1 0c       	add	r14, r1
    9f28:	f1 1e       	adc	r15, r17
    9f2a:	43 1f       	adc	r20, r19
    9f2c:	56 1f       	adc	r21, r22
    9f2e:	c9 1f       	adc	r28, r25
    9f30:	d0 1d       	adc	r29, r0
    9f32:	7e f4       	brtc	.+30     	; 0x9f52 <__ftoa_engine+0x146>
    9f34:	70 33       	cpi	r23, 0x30	; 48
    9f36:	11 f4       	brne	.+4      	; 0x9f3c <__ftoa_engine+0x130>
    9f38:	8a 95       	dec	r24
    9f3a:	e6 cf       	rjmp	.-52     	; 0x9f08 <__ftoa_engine+0xfc>
    9f3c:	e8 94       	clt
    9f3e:	01 50       	subi	r16, 0x01	; 1
    9f40:	30 f0       	brcs	.+12     	; 0x9f4e <__ftoa_engine+0x142>
    9f42:	08 0f       	add	r16, r24
    9f44:	0a f4       	brpl	.+2      	; 0x9f48 <__ftoa_engine+0x13c>
    9f46:	00 27       	eor	r16, r16
    9f48:	02 17       	cp	r16, r18
    9f4a:	08 f4       	brcc	.+2      	; 0x9f4e <__ftoa_engine+0x142>
    9f4c:	20 2f       	mov	r18, r16
    9f4e:	23 95       	inc	r18
    9f50:	02 2f       	mov	r16, r18
    9f52:	7a 33       	cpi	r23, 0x3A	; 58
    9f54:	28 f0       	brcs	.+10     	; 0x9f60 <__ftoa_engine+0x154>
    9f56:	79 e3       	ldi	r23, 0x39	; 57
    9f58:	7d 93       	st	X+, r23
    9f5a:	2a 95       	dec	r18
    9f5c:	e9 f7       	brne	.-6      	; 0x9f58 <__ftoa_engine+0x14c>
    9f5e:	10 c0       	rjmp	.+32     	; 0x9f80 <__ftoa_engine+0x174>
    9f60:	7d 93       	st	X+, r23
    9f62:	2a 95       	dec	r18
    9f64:	89 f6       	brne	.-94     	; 0x9f08 <__ftoa_engine+0xfc>
    9f66:	06 94       	lsr	r0
    9f68:	97 95       	ror	r25
    9f6a:	67 95       	ror	r22
    9f6c:	37 95       	ror	r19
    9f6e:	17 95       	ror	r17
    9f70:	17 94       	ror	r1
    9f72:	e1 18       	sub	r14, r1
    9f74:	f1 0a       	sbc	r15, r17
    9f76:	43 0b       	sbc	r20, r19
    9f78:	56 0b       	sbc	r21, r22
    9f7a:	c9 0b       	sbc	r28, r25
    9f7c:	d0 09       	sbc	r29, r0
    9f7e:	98 f0       	brcs	.+38     	; 0x9fa6 <__ftoa_engine+0x19a>
    9f80:	23 95       	inc	r18
    9f82:	7e 91       	ld	r23, -X
    9f84:	73 95       	inc	r23
    9f86:	7a 33       	cpi	r23, 0x3A	; 58
    9f88:	08 f0       	brcs	.+2      	; 0x9f8c <__ftoa_engine+0x180>
    9f8a:	70 e3       	ldi	r23, 0x30	; 48
    9f8c:	7c 93       	st	X, r23
    9f8e:	20 13       	cpse	r18, r16
    9f90:	b8 f7       	brcc	.-18     	; 0x9f80 <__ftoa_engine+0x174>
    9f92:	7e 91       	ld	r23, -X
    9f94:	70 61       	ori	r23, 0x10	; 16
    9f96:	7d 93       	st	X+, r23
    9f98:	30 f0       	brcs	.+12     	; 0x9fa6 <__ftoa_engine+0x19a>
    9f9a:	83 95       	inc	r24
    9f9c:	71 e3       	ldi	r23, 0x31	; 49
    9f9e:	7d 93       	st	X+, r23
    9fa0:	70 e3       	ldi	r23, 0x30	; 48
    9fa2:	2a 95       	dec	r18
    9fa4:	e1 f7       	brne	.-8      	; 0x9f9e <__ftoa_engine+0x192>
    9fa6:	11 24       	eor	r1, r1
    9fa8:	ef 90       	pop	r14
    9faa:	ff 90       	pop	r15
    9fac:	0f 91       	pop	r16
    9fae:	1f 91       	pop	r17
    9fb0:	cf 91       	pop	r28
    9fb2:	df 91       	pop	r29
    9fb4:	99 27       	eor	r25, r25
    9fb6:	87 fd       	sbrc	r24, 7
    9fb8:	90 95       	com	r25
    9fba:	08 95       	ret

00009fbc <__do_global_dtors>:
    9fbc:	1a e0       	ldi	r17, 0x0A	; 10
    9fbe:	c0 e1       	ldi	r28, 0x10	; 16
    9fc0:	da e0       	ldi	r29, 0x0A	; 10
    9fc2:	00 e0       	ldi	r16, 0x00	; 0
    9fc4:	05 c0       	rjmp	.+10     	; 0x9fd0 <__do_global_dtors+0x14>
    9fc6:	80 2f       	mov	r24, r16
    9fc8:	fe 01       	movw	r30, r28
    9fca:	4a db       	rcall	.-2412   	; 0x9660 <__tablejump2__>
    9fcc:	21 96       	adiw	r28, 0x01	; 1
    9fce:	01 1d       	adc	r16, r1
    9fd0:	c4 31       	cpi	r28, 0x14	; 20
    9fd2:	d1 07       	cpc	r29, r17
    9fd4:	80 e0       	ldi	r24, 0x00	; 0
    9fd6:	08 07       	cpc	r16, r24
    9fd8:	b1 f7       	brne	.-20     	; 0x9fc6 <__do_global_dtors+0xa>
    9fda:	f8 94       	cli

00009fdc <__stop_program>:
    9fdc:	ff cf       	rjmp	.-2      	; 0x9fdc <__stop_program>
