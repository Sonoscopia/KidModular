
OscillatorController.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000019e  00800200  00009f1a  00009fae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00009f1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000068e  0080039e  0080039e  0000a14c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000a14c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000a17c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000b58  00000000  00000000  0000a1bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0002ef31  00000000  00000000  0000ad14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004808  00000000  00000000  00039c45  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000092c6  00000000  00000000  0003e44d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000029a4  00000000  00000000  00047714  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000460f  00000000  00000000  0004a0b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00010382  00000000  00000000  0004e6c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000b10  00000000  00000000  0005ea49  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__dtors_end>
       4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
       8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
       c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      10:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      14:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      18:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      1c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      20:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      24:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      28:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      2c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      30:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      34:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      38:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      3c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      40:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      44:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      48:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      4c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      50:	0c 94 2d 1a 	jmp	0x345a	; 0x345a <__vector_20>
      54:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      58:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      5c:	0c 94 89 47 	jmp	0x8f12	; 0x8f12 <__vector_23>
      60:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      64:	0c 94 3c 46 	jmp	0x8c78	; 0x8c78 <__vector_25>
      68:	0c 94 72 46 	jmp	0x8ce4	; 0x8ce4 <__vector_26>
      6c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      70:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      74:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      78:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      7c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      80:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      84:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      88:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      8c:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      90:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      94:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      98:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      9c:	0c 94 05 40 	jmp	0x800a	; 0x800a <__vector_39>
      a0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      a4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      a8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      ac:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      b0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      b4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      b8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      bc:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      c0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      c4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      c8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      cc:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      d0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      d4:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      d8:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      dc:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      e0:	0c 94 45 0a 	jmp	0x148a	; 0x148a <__bad_interrupt>
      e4:	2d 22       	and	r2, r29
      e6:	16 23       	and	r17, r22
      e8:	48 22       	and	r4, r24
      ea:	48 22       	and	r4, r24
      ec:	61 22       	and	r6, r17
      ee:	16 23       	and	r17, r22
      f0:	0e 22       	and	r0, r30
      f2:	eb 22       	and	r14, r27
      f4:	85 22       	and	r8, r21
      f6:	16 23       	and	r17, r22
      f8:	93 22       	and	r9, r19
      fa:	93 22       	and	r9, r19
      fc:	b0 22       	and	r11, r16
      fe:	b0 22       	and	r11, r16
     100:	2d 22       	and	r2, r29
     102:	eb 22       	and	r14, r27
     104:	16 23       	and	r17, r22
     106:	2d 22       	and	r2, r29
     108:	93 22       	and	r9, r19
     10a:	eb 22       	and	r14, r27
     10c:	48 22       	and	r4, r24
     10e:	bf 22       	and	r11, r31
     110:	eb 22       	and	r14, r27
     112:	eb 22       	and	r14, r27
     114:	eb 22       	and	r14, r27
     116:	eb 22       	and	r14, r27
     118:	eb 22       	and	r14, r27
     11a:	d8 22       	and	r13, r24
     11c:	eb 22       	and	r14, r27
     11e:	eb 22       	and	r14, r27
     120:	86 23       	and	r24, r22
     122:	f4 35       	cpi	r31, 0x54	; 84
     124:	53 24       	eor	r5, r3
     126:	53 24       	eor	r5, r3
     128:	e5 25       	eor	r30, r5
     12a:	f4 35       	cpi	r31, 0x54	; 84
     12c:	eb 28       	or	r14, r11
     12e:	1f 27       	eor	r17, r31
     130:	98 28       	or	r9, r8
     132:	f4 35       	cpi	r31, 0x54	; 84
     134:	45 2a       	or	r4, r21
     136:	4e 2b       	or	r20, r30
     138:	fa 2c       	mov	r15, r10
     13a:	fa 2c       	mov	r15, r10
     13c:	86 23       	and	r24, r22
     13e:	97 31       	cpi	r25, 0x17	; 23
     140:	f4 35       	cpi	r31, 0x54	; 84
     142:	86 23       	and	r24, r22
     144:	21 2c       	mov	r2, r1
     146:	fa 2d       	mov	r31, r10
     148:	d1 24       	eor	r13, r1
     14a:	c3 2e       	mov	r12, r19
     14c:	91 2f       	mov	r25, r17
     14e:	97 31       	cpi	r25, 0x17	; 23
     150:	be 30       	cpi	r27, 0x0E	; 14
     152:	50 32       	cpi	r21, 0x20	; 32
     154:	97 33       	cpi	r25, 0x37	; 55
     156:	f6 34       	cpi	r31, 0x46	; 70
     158:	0a 35       	cpi	r16, 0x5A	; 90
     15a:	93 27       	eor	r25, r19
     15c:	05 a8       	ldd	r0, Z+53	; 0x35
     15e:	4c cd       	rjmp	.-1384   	; 0xfffffbf8 <__eeprom_end+0xff7efbf8>
     160:	b2 d4       	rcall	.+2404   	; 0xac6 <__LOCK_REGION_LENGTH__+0x6c6>
     162:	4e b9       	out	0x0e, r20	; 14
     164:	38 36       	cpi	r19, 0x68	; 104
     166:	a9 02       	muls	r26, r25
     168:	0c 50       	subi	r16, 0x0C	; 12
     16a:	b9 91       	ld	r27, Y+
     16c:	86 88       	ldd	r8, Z+22	; 0x16
     16e:	08 3c       	cpi	r16, 0xC8	; 200
     170:	a6 aa       	std	Z+54, r10	; 0x36
     172:	aa 2a       	or	r10, r26
     174:	be 00       	.word	0x00be	; ????
     176:	00 00       	nop
     178:	80 3f       	cpi	r24, 0xF0	; 240
     17a:	ad 48       	sbci	r26, 0x8D	; 141
     17c:	b0 48       	sbci	r27, 0x80	; 128
     17e:	9f 48       	sbci	r25, 0x8F	; 143
     180:	a3 48       	sbci	r26, 0x83	; 131
     182:	a9 48       	sbci	r26, 0x89	; 137
     184:	e7 48       	sbci	r30, 0x87	; 135
     186:	b4 48       	sbci	r27, 0x84	; 132
     188:	b8 48       	sbci	r27, 0x88	; 136
     18a:	be 48       	sbci	r27, 0x8E	; 142
     18c:	c2 48       	sbci	r28, 0x82	; 130
     18e:	c6 48       	sbci	r28, 0x86	; 134
     190:	cc 48       	sbci	r28, 0x8C	; 140
     192:	d0 48       	sbci	r29, 0x80	; 128
     194:	d4 48       	sbci	r29, 0x84	; 132
     196:	e7 48       	sbci	r30, 0x87	; 135
     198:	da 48       	sbci	r29, 0x8A	; 138
     19a:	de 48       	sbci	r29, 0x8E	; 142
     19c:	e2 48       	sbci	r30, 0x82	; 130

0000019e <__trampolines_end>:
     19e:	00 40       	sbci	r16, 0x00	; 0
     1a0:	7a 10       	cpse	r7, r10
     1a2:	f3 5a       	subi	r31, 0xA3	; 163
     1a4:	00 a0       	ldd	r0, Z+32	; 0x20
     1a6:	72 4e       	sbci	r23, 0xE2	; 226
     1a8:	18 09       	sbc	r17, r8
     1aa:	00 10       	cpse	r0, r0
     1ac:	a5 d4       	rcall	.+2378   	; 0xaf8 <__LOCK_REGION_LENGTH__+0x6f8>
     1ae:	e8 00       	.word	0x00e8	; ????
     1b0:	00 e8       	ldi	r16, 0x80	; 128
     1b2:	76 48       	sbci	r23, 0x86	; 134
     1b4:	17 00       	.word	0x0017	; ????
     1b6:	00 e4       	ldi	r16, 0x40	; 64
     1b8:	0b 54       	subi	r16, 0x4B	; 75
     1ba:	02 00       	.word	0x0002	; ????
     1bc:	00 ca       	rjmp	.-3072   	; 0xfffff5be <__eeprom_end+0xff7ef5be>
     1be:	9a 3b       	cpi	r25, 0xBA	; 186
     1c0:	00 00       	nop
     1c2:	00 e1       	ldi	r16, 0x10	; 16
     1c4:	f5 05       	cpc	r31, r5
     1c6:	00 00       	nop
     1c8:	80 96       	adiw	r24, 0x20	; 32
     1ca:	98 00       	.word	0x0098	; ????
     1cc:	00 00       	nop
     1ce:	40 42       	sbci	r20, 0x20	; 32
     1d0:	0f 00       	.word	0x000f	; ????
     1d2:	00 00       	nop
     1d4:	a0 86       	std	Z+8, r10	; 0x08
     1d6:	01 00       	.word	0x0001	; ????
     1d8:	00 00       	nop
     1da:	10 27       	eor	r17, r16
     1dc:	00 00       	nop
     1de:	00 00       	nop
     1e0:	e8 03       	fmulsu	r22, r16
     1e2:	00 00       	nop
     1e4:	00 00       	nop
     1e6:	64 00       	.word	0x0064	; ????
     1e8:	00 00       	nop
     1ea:	00 00       	nop
     1ec:	0a 00       	.word	0x000a	; ????
     1ee:	00 00       	nop
     1f0:	00 00       	nop
     1f2:	01 00       	.word	0x0001	; ????
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	2c 76       	andi	r18, 0x6C	; 108
     1fa:	d8 88       	ldd	r13, Y+16	; 0x10
     1fc:	dc 67       	ori	r29, 0x7C	; 124
     1fe:	4f 08       	sbc	r4, r15
     200:	23 df       	rcall	.-442    	; 0x48 <__SREG__+0x9>
     202:	c1 df       	rcall	.-126    	; 0x186 <__SREG__+0x147>
     204:	ae 59       	subi	r26, 0x9E	; 158
     206:	e1 b1       	in	r30, 0x01	; 1
     208:	b7 96       	adiw	r30, 0x27	; 39
     20a:	e5 e3       	ldi	r30, 0x35	; 53
     20c:	e4 53       	subi	r30, 0x34	; 52
     20e:	c6 3a       	cpi	r28, 0xA6	; 166
     210:	e6 51       	subi	r30, 0x16	; 22
     212:	99 76       	andi	r25, 0x69	; 105
     214:	96 e8       	ldi	r25, 0x86	; 134
     216:	e6 c2       	rjmp	.+1484   	; 0x7e4 <__LOCK_REGION_LENGTH__+0x3e4>
     218:	84 26       	eor	r8, r20
     21a:	eb 89       	ldd	r30, Y+19	; 0x13
     21c:	8c 9b       	sbis	0x11, 4	; 17
     21e:	62 ed       	ldi	r22, 0xD2	; 210
     220:	40 7c       	andi	r20, 0xC0	; 192
     222:	6f fc       	.word	0xfc6f	; ????
     224:	ef bc       	out	0x2f, r14	; 47
     226:	9c 9f       	mul	r25, r28
     228:	40 f2       	brcs	.-112    	; 0x1ba <__trampolines_end+0x1c>
     22a:	ba a5       	ldd	r27, Y+42	; 0x2a
     22c:	6f a5       	ldd	r22, Y+47	; 0x2f
     22e:	f4 90       	lpm	r15, Z
     230:	05 5a       	subi	r16, 0xA5	; 165
     232:	2a f7       	brpl	.-54     	; 0x1fe <__trampolines_end+0x60>
     234:	5c 93       	st	X, r21
     236:	6b 6c       	ori	r22, 0xCB	; 203
     238:	f9 67       	ori	r31, 0x79	; 121
     23a:	6d c1       	rjmp	.+730    	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
     23c:	1b fc       	.word	0xfc1b	; ????
     23e:	e0 e4       	ldi	r30, 0x40	; 64
     240:	0d 47       	sbci	r16, 0x7D	; 125
     242:	fe f5       	brtc	.+126    	; 0x2c2 <BigFont+0x2a>
     244:	20 e6       	ldi	r18, 0x60	; 96
     246:	b5 00       	.word	0x00b5	; ????
     248:	d0 ed       	ldi	r29, 0xD0	; 208
     24a:	90 2e       	mov	r9, r16
     24c:	03 00       	.word	0x0003	; ????
     24e:	94 35       	cpi	r25, 0x54	; 84
     250:	77 05       	cpc	r23, r7
     252:	00 80       	ld	r0, Z
     254:	84 1e       	adc	r8, r20
     256:	08 00       	.word	0x0008	; ????
     258:	00 20       	and	r0, r0
     25a:	4e 0a       	sbc	r4, r30
     25c:	00 00       	nop
     25e:	00 c8       	rjmp	.-4096   	; 0xfffff260 <__eeprom_end+0xff7ef260>
     260:	0c 33       	cpi	r16, 0x3C	; 60
     262:	33 33       	cpi	r19, 0x33	; 51
     264:	33 0f       	add	r19, r19
     266:	98 6e       	ori	r25, 0xE8	; 232
     268:	12 83       	std	Z+2, r17	; 0x02
     26a:	11 41       	sbci	r17, 0x11	; 17
     26c:	ef 8d       	ldd	r30, Y+31	; 0x1f
     26e:	21 14       	cp	r2, r1
     270:	89 3b       	cpi	r24, 0xB9	; 185
     272:	e6 55       	subi	r30, 0x56	; 86
     274:	16 cf       	rjmp	.-468    	; 0xa2 <__SREG__+0x63>
     276:	fe e6       	ldi	r31, 0x6E	; 110
     278:	db 18       	sub	r13, r11
     27a:	d1 84       	ldd	r13, Z+9	; 0x09
     27c:	4b 38       	cpi	r20, 0x8B	; 139
     27e:	1b f7       	brvc	.-58     	; 0x246 <__trampolines_end+0xa8>
     280:	7c 1d       	adc	r23, r12
     282:	90 1d       	adc	r25, r0
     284:	a4 bb       	out	0x14, r26	; 20
     286:	e4 24       	eor	r14, r4
     288:	20 32       	cpi	r18, 0x20	; 32
     28a:	84 72       	andi	r24, 0x24	; 36
     28c:	5e 22       	and	r5, r30
     28e:	81 00       	.word	0x0081	; ????
     290:	c9 f1       	breq	.+114    	; 0x304 <BigFont+0x6c>
     292:	24 ec       	ldi	r18, 0xC4	; 196
     294:	a1 e5       	ldi	r26, 0x51	; 81
     296:	3d 27       	eor	r19, r29

00000298 <BigFont>:
     298:	10 10 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
	...
     2c0:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
     2d0:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
     2e0:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
     2fc:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
     30c:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
     31c:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
     32c:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
     33c:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     34c:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     35c:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     36c:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     37c:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     3a0:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     3b0:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     3c0:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     3d0:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     3e0:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     3f0:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     400:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     410:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     430:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     448:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     470:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     480:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     490:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     4a0:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     4b0:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4c0:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     4d0:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     4e0:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     4f0:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     500:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     510:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     520:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     530:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     540:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     550:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     560:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     570:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     580:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     590:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     5a0:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     5b0:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     5c0:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     5d0:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     5e0:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     5f0:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     600:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     610:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     620:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     630:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     640:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     650:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     660:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     670:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     680:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     690:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     6a0:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     6b0:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     6c0:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     6d0:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6e0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     6f0:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     700:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     710:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     720:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     730:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     740:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     750:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     760:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     770:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     780:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     790:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     7a0:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     7b0:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     7c0:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     7d0:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     7e0:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     7f0:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     800:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     810:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     820:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     830:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     840:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     850:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     860:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     870:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     880:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     890:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     8a0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     8b0:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     8c0:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     8d0:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     8e0:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     8f0:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     900:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     910:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     920:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     930:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     940:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     950:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     960:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     970:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     980:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     990:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     9a0:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     9b0:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     9c0:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     9d0:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     9e0:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     9f0:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     a00:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     a10:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     a20:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     a30:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     a40:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     a50:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     a60:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     a98:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     ac8:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     ae0:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     af0:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     b08:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     b20:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     b30:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     b48:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     b60:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     b70:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     b88:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     b98:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     ba8:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     bc0:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     bd0:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     be0:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     bf0:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     c00:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     c10:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     c20:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     c30:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     c48:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     c68:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     c88:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     ca8:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     cb8:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     cc8:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     cd8:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce8:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     d08:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     d20:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     d30:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     d48:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     d68:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     d88:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     da8:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     dc8:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     dd8:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     de8:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     e00:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     e10:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     e20:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     e30:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     e40:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     e50:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     e60:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000e7c <SmallFont>:
     e7c:	08 0c 20 5f 00 00 00 00 00 00 00 00 00 00 00 00     .. _............
     e8c:	00 00 20 20 20 20 20 20 00 20 00 00 00 28 50 50     ..      . ...(PP
	...
     ea4:	00 00 28 28 fc 28 50 fc 50 50 00 00 00 20 78 a8     ..((.(P.PP... x.
     eb4:	a0 60 30 28 a8 f0 20 00 00 00 48 a8 b0 50 28 34     .`0(.. ...H..P(4
     ec4:	54 48 00 00 00 00 20 50 50 78 a8 a8 90 6c 00 00     TH.... PPx...l..
     ed4:	00 40 40 80 00 00 00 00 00 00 00 00 00 04 08 10     .@@.............
     ee4:	10 10 10 10 10 08 04 00 00 40 20 10 10 10 10 10     .........@ .....
     ef4:	10 20 40 00 00 00 00 20 a8 70 70 a8 20 00 00 00     . @.... .pp. ...
     f04:	00 00 20 20 20 f8 20 20 20 00 00 00 00 00 00 00     ..   .   .......
     f14:	00 00 00 00 00 40 40 80 00 00 00 00 00 f8 00 00     .....@@.........
	...
     f30:	00 40 00 00 00 08 10 10 10 20 20 40 40 40 80 00     .@.......  @@@..
     f40:	00 00 70 88 88 88 88 88 88 70 00 00 00 00 20 60     ..p......p.... `
     f50:	20 20 20 20 20 70 00 00 00 00 70 88 88 10 20 40          p....p... @
     f60:	80 f8 00 00 00 00 70 88 08 30 08 08 88 70 00 00     ......p..0...p..
     f70:	00 00 10 30 50 50 90 78 10 18 00 00 00 00 f8 80     ...0PP.x........
     f80:	80 f0 08 08 88 70 00 00 00 00 70 90 80 f0 88 88     .....p....p.....
     f90:	88 70 00 00 00 00 f8 90 10 20 20 20 20 20 00 00     .p.......     ..
     fa0:	00 00 70 88 88 70 88 88 88 70 00 00 00 00 70 88     ..p..p...p....p.
     fb0:	88 88 78 08 48 70 00 00 00 00 00 00 20 00 00 00     ..x.Hp...... ...
     fc0:	00 20 00 00 00 00 00 00 00 20 00 00 00 20 20 00     . ....... ...  .
     fd0:	00 04 08 10 20 40 20 10 08 04 00 00 00 00 00 00     .... @ .........
     fe0:	f8 00 00 f8 00 00 00 00 00 40 20 10 08 04 08 10     .........@ .....
     ff0:	20 40 00 00 00 00 70 88 88 10 20 20 00 20 00 00      @....p...  . ..
    1000:	00 00 70 88 98 a8 a8 b8 80 78 00 00 00 00 20 20     ..p......x....  
    1010:	30 50 50 78 48 cc 00 00 00 00 f0 48 48 70 48 48     0PPxH......HHpHH
    1020:	48 f0 00 00 00 00 78 88 80 80 80 80 88 70 00 00     H.....x......p..
    1030:	00 00 f0 48 48 48 48 48 48 f0 00 00 00 00 f8 48     ...HHHHHH......H
    1040:	50 70 50 40 48 f8 00 00 00 00 f8 48 50 70 50 40     PpP@H......HPpP@
    1050:	40 e0 00 00 00 00 38 48 80 80 9c 88 48 30 00 00     @.....8H....H0..
    1060:	00 00 cc 48 48 78 48 48 48 cc 00 00 00 00 f8 20     ...HHxHHH...... 
    1070:	20 20 20 20 20 f8 00 00 00 00 7c 10 10 10 10 10          .....|.....
    1080:	10 90 e0 00 00 00 ec 48 50 60 50 50 48 ec 00 00     .......HP`PPH...
    1090:	00 00 e0 40 40 40 40 40 44 fc 00 00 00 00 d8 d8     ...@@@@@D.......
    10a0:	d8 d8 a8 a8 a8 a8 00 00 00 00 dc 48 68 68 58 58     ...........HhhXX
    10b0:	48 e8 00 00 00 00 70 88 88 88 88 88 88 70 00 00     H.....p......p..
    10c0:	00 00 f0 48 48 70 40 40 40 e0 00 00 00 00 70 88     ...HHp@@@.....p.
    10d0:	88 88 88 e8 98 70 18 00 00 00 f0 48 48 70 50 48     .....p.....HHpPH
    10e0:	48 ec 00 00 00 00 78 88 80 60 10 08 88 f0 00 00     H.....x..`......
    10f0:	00 00 f8 a8 20 20 20 20 20 70 00 00 00 00 cc 48     ....     p.....H
    1100:	48 48 48 48 48 30 00 00 00 00 cc 48 48 50 50 30     HHHHH0.....HHPP0
    1110:	20 20 00 00 00 00 a8 a8 a8 70 50 50 50 50 00 00       .......pPPPP..
    1120:	00 00 d8 50 50 20 20 50 50 d8 00 00 00 00 d8 50     ...PP  PP......P
    1130:	50 20 20 20 20 70 00 00 00 00 f8 90 10 20 20 40     P    p.......  @
    1140:	48 f8 00 00 00 38 20 20 20 20 20 20 20 20 38 00     H....8        8.
    1150:	00 40 40 40 20 20 10 10 10 08 00 00 00 70 10 10     .@@@  .......p..
    1160:	10 10 10 10 10 10 70 00 00 20 50 00 00 00 00 00     ......p.. P.....
	...
    117c:	00 00 00 fc 00 20 00 00 00 00 00 00 00 00 00 00     ..... ..........
    118c:	00 00 00 00 00 30 48 38 48 3c 00 00 00 00 c0 40     .....0H8H<.....@
    119c:	40 70 48 48 48 70 00 00 00 00 00 00 00 38 48 40     @pHHHp.......8H@
    11ac:	40 38 00 00 00 00 18 08 08 38 48 48 48 3c 00 00     @8.......8HHH<..
    11bc:	00 00 00 00 00 30 48 78 40 38 00 00 00 00 1c 20     .....0Hx@8..... 
    11cc:	20 78 20 20 20 78 00 00 00 00 00 00 00 3c 48 30      x   x.......<H0
    11dc:	40 78 44 38 00 00 c0 40 40 70 48 48 48 ec 00 00     @xD8...@@pHHH...
    11ec:	00 00 20 00 00 60 20 20 20 70 00 00 00 00 10 00     .. ..`   p......
    11fc:	00 30 10 10 10 10 10 e0 00 00 c0 40 40 5c 50 70     .0.........@@\Pp
    120c:	48 ec 00 00 00 00 e0 20 20 20 20 20 20 f8 00 00     H......      ...
    121c:	00 00 00 00 00 f0 a8 a8 a8 a8 00 00 00 00 00 00     ................
    122c:	00 f0 48 48 48 ec 00 00 00 00 00 00 00 30 48 48     ..HHH........0HH
    123c:	48 30 00 00 00 00 00 00 00 f0 48 48 48 70 40 e0     H0........HHHp@.
    124c:	00 00 00 00 00 38 48 48 48 38 08 1c 00 00 00 00     .....8HHH8......
    125c:	00 d8 60 40 40 e0 00 00 00 00 00 00 00 78 40 30     ..`@@........x@0
    126c:	08 78 00 00 00 00 00 20 20 70 20 20 20 18 00 00     .x.....  p   ...
    127c:	00 00 00 00 00 d8 48 48 48 3c 00 00 00 00 00 00     ......HHH<......
    128c:	00 ec 48 50 30 20 00 00 00 00 00 00 00 a8 a8 70     ..HP0 .........p
    129c:	50 50 00 00 00 00 00 00 00 d8 50 20 50 d8 00 00     PP........P P...
    12ac:	00 00 00 00 00 ec 48 50 30 20 20 c0 00 00 00 00     ......HP0  .....
    12bc:	00 78 10 20 20 78 00 00 00 18 10 10 10 20 10 10     .x.  x....... ..
    12cc:	10 10 18 00 10 10 10 10 10 10 10 10 10 10 10 10     ................
    12dc:	00 60 20 20 20 10 20 20 20 20 60 00 40 a4 18 00     .`   .    `.@...
	...

000012f4 <digital_pin_to_timer_PGM>:
    12f4:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    1320:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000133a <digital_pin_to_bit_mask_PGM>:
    133a:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    134a:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    135a:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    136a:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    137a:	04 08 10 20 40 80                                   ... @.

00001380 <digital_pin_to_port_PGM>:
    1380:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    1390:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    13a0:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    13b0:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    13c0:	0b 0b 0b 0b 0b 0b                                   ......

000013c6 <port_to_input_PGM>:
    13c6:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    13d6:	00 01 00 00 03 01 06 01 09 01                       ..........

000013e0 <port_to_output_PGM>:
    13e0:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    13f0:	02 01 00 00 05 01 08 01 0b 01                       ..........

000013fa <port_to_mode_PGM>:
    13fa:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    140a:	01 01 00 00 04 01 07 01 0a 01                       ..........

00001414 <__ctors_start>:
    1414:	e3 0c       	add	r14, r3
    1416:	10 14       	cp	r1, r0
    1418:	0f 16       	cp	r0, r31
    141a:	93 17       	cp	r25, r19
    141c:	1d 42       	sbci	r17, 0x2D	; 45
    141e:	a4 46       	sbci	r26, 0x64	; 100

00001420 <__ctors_end>:
    1420:	a9 0d       	add	r26, r9
    1422:	d6 14       	cp	r13, r6
    1424:	d5 16       	cp	r13, r21
    1426:	a2 18       	sub	r10, r2

00001428 <__dtors_end>:
    1428:	11 24       	eor	r1, r1
    142a:	1f be       	out	0x3f, r1	; 63
    142c:	cf ef       	ldi	r28, 0xFF	; 255
    142e:	d1 e2       	ldi	r29, 0x21	; 33
    1430:	de bf       	out	0x3e, r29	; 62
    1432:	cd bf       	out	0x3d, r28	; 61
    1434:	00 e0       	ldi	r16, 0x00	; 0
    1436:	0c bf       	out	0x3c, r16	; 60

00001438 <__do_copy_data>:
    1438:	13 e0       	ldi	r17, 0x03	; 3
    143a:	a0 e0       	ldi	r26, 0x00	; 0
    143c:	b2 e0       	ldi	r27, 0x02	; 2
    143e:	ea e1       	ldi	r30, 0x1A	; 26
    1440:	ff e9       	ldi	r31, 0x9F	; 159
    1442:	00 e0       	ldi	r16, 0x00	; 0
    1444:	0b bf       	out	0x3b, r16	; 59
    1446:	02 c0       	rjmp	.+4      	; 0x144c <__do_copy_data+0x14>
    1448:	07 90       	elpm	r0, Z+
    144a:	0d 92       	st	X+, r0
    144c:	ae 39       	cpi	r26, 0x9E	; 158
    144e:	b1 07       	cpc	r27, r17
    1450:	d9 f7       	brne	.-10     	; 0x1448 <__do_copy_data+0x10>

00001452 <__do_clear_bss>:
    1452:	2a e0       	ldi	r18, 0x0A	; 10
    1454:	ae e9       	ldi	r26, 0x9E	; 158
    1456:	b3 e0       	ldi	r27, 0x03	; 3
    1458:	01 c0       	rjmp	.+2      	; 0x145c <.do_clear_bss_start>

0000145a <.do_clear_bss_loop>:
    145a:	1d 92       	st	X+, r1

0000145c <.do_clear_bss_start>:
    145c:	ac 32       	cpi	r26, 0x2C	; 44
    145e:	b2 07       	cpc	r27, r18
    1460:	e1 f7       	brne	.-8      	; 0x145a <.do_clear_bss_loop>

00001462 <__do_global_ctors>:
    1462:	1a e0       	ldi	r17, 0x0A	; 10
    1464:	c0 e1       	ldi	r28, 0x10	; 16
    1466:	da e0       	ldi	r29, 0x0A	; 10
    1468:	00 e0       	ldi	r16, 0x00	; 0
    146a:	06 c0       	rjmp	.+12     	; 0x1478 <__do_global_ctors+0x16>
    146c:	21 97       	sbiw	r28, 0x01	; 1
    146e:	01 09       	sbc	r16, r1
    1470:	80 2f       	mov	r24, r16
    1472:	fe 01       	movw	r30, r28
    1474:	0e 94 ce 4a 	call	0x959c	; 0x959c <__tablejump2__>
    1478:	ca 30       	cpi	r28, 0x0A	; 10
    147a:	d1 07       	cpc	r29, r17
    147c:	80 e0       	ldi	r24, 0x00	; 0
    147e:	08 07       	cpc	r16, r24
    1480:	a9 f7       	brne	.-22     	; 0x146c <__do_global_ctors+0xa>
    1482:	0e 94 d2 46 	call	0x8da4	; 0x8da4 <main>
    1486:	0c 94 7c 4f 	jmp	0x9ef8	; 0x9ef8 <__do_global_dtors>

0000148a <__bad_interrupt>:
    148a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000148e <_ZN7ControlC1Ev>:

void Control::storePreset() {

}

void Control::loadPreset() {
    148e:	cf 93       	push	r28
    1490:	df 93       	push	r29
    1492:	ec 01       	movw	r28, r24
    1494:	d7 d3       	rcall	.+1966   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    1496:	1d 8a       	std	Y+21, r1	; 0x15
    1498:	1e 8a       	std	Y+22, r1	; 0x16
    149a:	8c ed       	ldi	r24, 0xDC	; 220
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	98 8f       	std	Y+24, r25	; 0x18
    14a0:	8f 8b       	std	Y+23, r24	; 0x17
    14a2:	19 8e       	std	Y+25, r1	; 0x19
    14a4:	80 e9       	ldi	r24, 0x90	; 144
    14a6:	91 e0       	ldi	r25, 0x01	; 1
    14a8:	9b 8f       	std	Y+27, r25	; 0x1b
    14aa:	8a 8f       	std	Y+26, r24	; 0x1a
    14ac:	1c 8e       	std	Y+28, r1	; 0x1c
    14ae:	80 e4       	ldi	r24, 0x40	; 64
    14b0:	9f e1       	ldi	r25, 0x1F	; 31
    14b2:	9e 8f       	std	Y+30, r25	; 0x1e
    14b4:	8d 8f       	std	Y+29, r24	; 0x1d
    14b6:	88 e2       	ldi	r24, 0x28	; 40
    14b8:	8f 8f       	std	Y+31, r24	; 0x1f
    14ba:	18 a2       	std	Y+32, r1	; 0x20
    14bc:	1a a2       	std	Y+34, r1	; 0x22
    14be:	19 a2       	std	Y+33, r1	; 0x21
    14c0:	88 ec       	ldi	r24, 0xC8	; 200
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	9c a3       	std	Y+36, r25	; 0x24
    14c6:	8b a3       	std	Y+35, r24	; 0x23
    14c8:	84 eb       	ldi	r24, 0xB4	; 180
    14ca:	8d a3       	std	Y+37, r24	; 0x25
    14cc:	8a ef       	ldi	r24, 0xFA	; 250
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	9f a3       	std	Y+39, r25	; 0x27
    14d2:	8e a3       	std	Y+38, r24	; 0x26
    14d4:	18 a6       	std	Y+40, r1	; 0x28
    14d6:	19 a6       	std	Y+41, r1	; 0x29
    14d8:	1a a6       	std	Y+42, r1	; 0x2a
    14da:	1b a6       	std	Y+43, r1	; 0x2b
    14dc:	8f e7       	ldi	r24, 0x7F	; 127
    14de:	8c a7       	std	Y+44, r24	; 0x2c
    14e0:	1d a6       	std	Y+45, r1	; 0x2d
    14e2:	1e a6       	std	Y+46, r1	; 0x2e
    14e4:	1f a6       	std	Y+47, r1	; 0x2f
    14e6:	ce 01       	movw	r24, r28
    14e8:	c0 96       	adiw	r24, 0x30	; 48
    14ea:	ac d3       	rcall	.+1880   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    14ec:	ce 01       	movw	r24, r28
    14ee:	8b 5b       	subi	r24, 0xBB	; 187
    14f0:	9f 4f       	sbci	r25, 0xFF	; 255
    14f2:	a8 d3       	rcall	.+1872   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    14f4:	ce 01       	movw	r24, r28
    14f6:	86 5a       	subi	r24, 0xA6	; 166
    14f8:	9f 4f       	sbci	r25, 0xFF	; 255
    14fa:	a4 d3       	rcall	.+1864   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    14fc:	ce 01       	movw	r24, r28
    14fe:	81 59       	subi	r24, 0x91	; 145
    1500:	9f 4f       	sbci	r25, 0xFF	; 255
    1502:	a0 d3       	rcall	.+1856   	; 0x1c44 <_ZN14EncoderHandlerC1Ev>
    1504:	fe 01       	movw	r30, r28
    1506:	e0 57       	subi	r30, 0x70	; 112
    1508:	ff 4f       	sbci	r31, 0xFF	; 255
    150a:	81 e0       	ldi	r24, 0x01	; 1
    150c:	80 83       	st	Z, r24
    150e:	31 96       	adiw	r30, 0x01	; 1
    1510:	80 83       	st	Z, r24
    1512:	cc 57       	subi	r28, 0x7C	; 124
    1514:	df 4f       	sbci	r29, 0xFF	; 255
    1516:	18 82       	st	Y, r1
    1518:	62 e0       	ldi	r22, 0x02	; 2
    151a:	8e e0       	ldi	r24, 0x0E	; 14
    151c:	df 91       	pop	r29
    151e:	cf 91       	pop	r28
    1520:	0c 94 e8 48 	jmp	0x91d0	; 0x91d0 <pinMode>

00001524 <_ZN7Control7incMenuEv>:
    1524:	fc 01       	movw	r30, r24
    1526:	ea 57       	subi	r30, 0x7A	; 122
    1528:	ff 4f       	sbci	r31, 0xFF	; 255
    152a:	a0 81       	ld	r26, Z
    152c:	b1 81       	ldd	r27, Z+1	; 0x01
    152e:	9c 91       	ld	r25, X
    1530:	9f 5f       	subi	r25, 0xFF	; 255
    1532:	9c 93       	st	X, r25
    1534:	01 90       	ld	r0, Z+
    1536:	f0 81       	ld	r31, Z
    1538:	e0 2d       	mov	r30, r0
    153a:	80 81       	ld	r24, Z
    153c:	85 30       	cpi	r24, 0x05	; 5
    153e:	08 f0       	brcs	.+2      	; 0x1542 <_ZN7Control7incMenuEv+0x1e>
    1540:	10 82       	st	Z, r1
    1542:	08 95       	ret

00001544 <_ZN7Control11setEncodersEv>:
    1544:	cf 93       	push	r28
    1546:	df 93       	push	r29
    1548:	ec 01       	movw	r28, r24
    154a:	fc 01       	movw	r30, r24
    154c:	ea 57       	subi	r30, 0x7A	; 122
    154e:	ff 4f       	sbci	r31, 0xFF	; 255
    1550:	01 90       	ld	r0, Z+
    1552:	f0 81       	ld	r31, Z
    1554:	e0 2d       	mov	r30, r0
    1556:	80 81       	ld	r24, Z
    1558:	82 30       	cpi	r24, 0x02	; 2
    155a:	09 f4       	brne	.+2      	; 0x155e <_ZN7Control11setEncodersEv+0x1a>
    155c:	50 c0       	rjmp	.+160    	; 0x15fe <_ZN7Control11setEncodersEv+0xba>
    155e:	d0 f4       	brcc	.+52     	; 0x1594 <_ZN7Control11setEncodersEv+0x50>
    1560:	88 23       	and	r24, r24
    1562:	b9 f1       	breq	.+110    	; 0x15d2 <_ZN7Control11setEncodersEv+0x8e>
    1564:	81 30       	cpi	r24, 0x01	; 1
    1566:	09 f0       	breq	.+2      	; 0x156a <_ZN7Control11setEncodersEv+0x26>
    1568:	82 c0       	rjmp	.+260    	; 0x166e <_ZN7Control11setEncodersEv+0x12a>
    156a:	45 e0       	ldi	r20, 0x05	; 5
    156c:	61 e0       	ldi	r22, 0x01	; 1
    156e:	ce 01       	movw	r24, r28
    1570:	c0 96       	adiw	r24, 0x30	; 48
    1572:	8b d3       	rcall	.+1814   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1574:	44 e1       	ldi	r20, 0x14	; 20
    1576:	50 e0       	ldi	r21, 0x00	; 0
    1578:	61 e0       	ldi	r22, 0x01	; 1
    157a:	70 e0       	ldi	r23, 0x00	; 0
    157c:	ce 01       	movw	r24, r28
    157e:	8b 5b       	subi	r24, 0xBB	; 187
    1580:	9f 4f       	sbci	r25, 0xFF	; 255
    1582:	7d d3       	rcall	.+1786   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    1584:	45 e0       	ldi	r20, 0x05	; 5
    1586:	61 e0       	ldi	r22, 0x01	; 1
    1588:	ce 01       	movw	r24, r28
    158a:	86 5a       	subi	r24, 0xA6	; 166
    158c:	9f 4f       	sbci	r25, 0xFF	; 255
    158e:	7d d3       	rcall	.+1786   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1590:	45 e0       	ldi	r20, 0x05	; 5
    1592:	66 c0       	rjmp	.+204    	; 0x1660 <_ZN7Control11setEncodersEv+0x11c>
    1594:	83 30       	cpi	r24, 0x03	; 3
    1596:	09 f4       	brne	.+2      	; 0x159a <_ZN7Control11setEncodersEv+0x56>
    1598:	51 c0       	rjmp	.+162    	; 0x163c <_ZN7Control11setEncodersEv+0xf8>
    159a:	84 30       	cpi	r24, 0x04	; 4
    159c:	09 f0       	breq	.+2      	; 0x15a0 <_ZN7Control11setEncodersEv+0x5c>
    159e:	67 c0       	rjmp	.+206    	; 0x166e <_ZN7Control11setEncodersEv+0x12a>
    15a0:	45 e0       	ldi	r20, 0x05	; 5
    15a2:	61 e0       	ldi	r22, 0x01	; 1
    15a4:	ce 01       	movw	r24, r28
    15a6:	c0 96       	adiw	r24, 0x30	; 48
    15a8:	74 d3       	rcall	.+1768   	; 0x1c92 <_ZN14EncoderHandler11setMulN_s8tEaa>
    15aa:	45 e0       	ldi	r20, 0x05	; 5
    15ac:	61 e0       	ldi	r22, 0x01	; 1
    15ae:	ce 01       	movw	r24, r28
    15b0:	8b 5b       	subi	r24, 0xBB	; 187
    15b2:	9f 4f       	sbci	r25, 0xFF	; 255
    15b4:	6a d3       	rcall	.+1748   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    15b6:	45 e0       	ldi	r20, 0x05	; 5
    15b8:	61 e0       	ldi	r22, 0x01	; 1
    15ba:	ce 01       	movw	r24, r28
    15bc:	86 5a       	subi	r24, 0xA6	; 166
    15be:	9f 4f       	sbci	r25, 0xFF	; 255
    15c0:	68 d3       	rcall	.+1744   	; 0x1c92 <_ZN14EncoderHandler11setMulN_s8tEaa>
    15c2:	45 e0       	ldi	r20, 0x05	; 5
    15c4:	61 e0       	ldi	r22, 0x01	; 1
    15c6:	ce 01       	movw	r24, r28
    15c8:	81 59       	subi	r24, 0x91	; 145
    15ca:	9f 4f       	sbci	r25, 0xFF	; 255
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	5c c3       	rjmp	.+1720   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    15d2:	41 e0       	ldi	r20, 0x01	; 1
    15d4:	61 e0       	ldi	r22, 0x01	; 1
    15d6:	ce 01       	movw	r24, r28
    15d8:	c0 96       	adiw	r24, 0x30	; 48
    15da:	57 d3       	rcall	.+1710   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    15dc:	44 e1       	ldi	r20, 0x14	; 20
    15de:	50 e0       	ldi	r21, 0x00	; 0
    15e0:	61 e0       	ldi	r22, 0x01	; 1
    15e2:	70 e0       	ldi	r23, 0x00	; 0
    15e4:	ce 01       	movw	r24, r28
    15e6:	8b 5b       	subi	r24, 0xBB	; 187
    15e8:	9f 4f       	sbci	r25, 0xFF	; 255
    15ea:	49 d3       	rcall	.+1682   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    15ec:	41 e0       	ldi	r20, 0x01	; 1
    15ee:	61 e0       	ldi	r22, 0x01	; 1
    15f0:	ce 01       	movw	r24, r28
    15f2:	86 5a       	subi	r24, 0xA6	; 166
    15f4:	9f 4f       	sbci	r25, 0xFF	; 255
    15f6:	49 d3       	rcall	.+1682   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    15f8:	44 e6       	ldi	r20, 0x64	; 100
    15fa:	50 e0       	ldi	r21, 0x00	; 0
    15fc:	17 c0       	rjmp	.+46     	; 0x162c <_ZN7Control11setEncodersEv+0xe8>
    15fe:	44 e1       	ldi	r20, 0x14	; 20
    1600:	50 e0       	ldi	r21, 0x00	; 0
    1602:	61 e0       	ldi	r22, 0x01	; 1
    1604:	70 e0       	ldi	r23, 0x00	; 0
    1606:	ce 01       	movw	r24, r28
    1608:	c0 96       	adiw	r24, 0x30	; 48
    160a:	39 d3       	rcall	.+1650   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    160c:	44 e1       	ldi	r20, 0x14	; 20
    160e:	50 e0       	ldi	r21, 0x00	; 0
    1610:	61 e0       	ldi	r22, 0x01	; 1
    1612:	70 e0       	ldi	r23, 0x00	; 0
    1614:	ce 01       	movw	r24, r28
    1616:	8b 5b       	subi	r24, 0xBB	; 187
    1618:	9f 4f       	sbci	r25, 0xFF	; 255
    161a:	31 d3       	rcall	.+1634   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    161c:	44 e1       	ldi	r20, 0x14	; 20
    161e:	61 e0       	ldi	r22, 0x01	; 1
    1620:	ce 01       	movw	r24, r28
    1622:	86 5a       	subi	r24, 0xA6	; 166
    1624:	9f 4f       	sbci	r25, 0xFF	; 255
    1626:	31 d3       	rcall	.+1634   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1628:	44 e1       	ldi	r20, 0x14	; 20
    162a:	50 e0       	ldi	r21, 0x00	; 0
    162c:	61 e0       	ldi	r22, 0x01	; 1
    162e:	70 e0       	ldi	r23, 0x00	; 0
    1630:	ce 01       	movw	r24, r28
    1632:	81 59       	subi	r24, 0x91	; 145
    1634:	9f 4f       	sbci	r25, 0xFF	; 255
    1636:	df 91       	pop	r29
    1638:	cf 91       	pop	r28
    163a:	21 c3       	rjmp	.+1602   	; 0x1c7e <_ZN14EncoderHandler11setMul_u16tEjj>
    163c:	45 e0       	ldi	r20, 0x05	; 5
    163e:	61 e0       	ldi	r22, 0x01	; 1
    1640:	ce 01       	movw	r24, r28
    1642:	c0 96       	adiw	r24, 0x30	; 48
    1644:	22 d3       	rcall	.+1604   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1646:	45 e0       	ldi	r20, 0x05	; 5
    1648:	61 e0       	ldi	r22, 0x01	; 1
    164a:	ce 01       	movw	r24, r28
    164c:	8b 5b       	subi	r24, 0xBB	; 187
    164e:	9f 4f       	sbci	r25, 0xFF	; 255
    1650:	1c d3       	rcall	.+1592   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    1652:	45 e0       	ldi	r20, 0x05	; 5
    1654:	61 e0       	ldi	r22, 0x01	; 1
    1656:	ce 01       	movw	r24, r28
    1658:	86 5a       	subi	r24, 0xA6	; 166
    165a:	9f 4f       	sbci	r25, 0xFF	; 255
    165c:	16 d3       	rcall	.+1580   	; 0x1c8a <_ZN14EncoderHandler11setMulN_u8tEhh>
    165e:	41 e0       	ldi	r20, 0x01	; 1
    1660:	61 e0       	ldi	r22, 0x01	; 1
    1662:	ce 01       	movw	r24, r28
    1664:	81 59       	subi	r24, 0x91	; 145
    1666:	9f 4f       	sbci	r25, 0xFF	; 255
    1668:	df 91       	pop	r29
    166a:	cf 91       	pop	r28
    166c:	12 c3       	rjmp	.+1572   	; 0x1c92 <_ZN14EncoderHandler11setMulN_s8tEaa>
    166e:	df 91       	pop	r29
    1670:	cf 91       	pop	r28
    1672:	08 95       	ret

00001674 <_ZN7Control4initEPN10Parameters8params_tE>:
    1674:	0f 93       	push	r16
    1676:	1f 93       	push	r17
    1678:	cf 93       	push	r28
    167a:	df 93       	push	r29
    167c:	ec 01       	movw	r28, r24
    167e:	fc 01       	movw	r30, r24
    1680:	ea 57       	subi	r30, 0x7A	; 122
    1682:	ff 4f       	sbci	r31, 0xFF	; 255
    1684:	71 83       	std	Z+1, r23	; 0x01
    1686:	60 83       	st	Z, r22
    1688:	83 e0       	ldi	r24, 0x03	; 3
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	0e 94 de 46 	call	0x8dbc	; 0x8dbc <_Znwj>
    1690:	8c 01       	movw	r16, r24
    1692:	43 e0       	ldi	r20, 0x03	; 3
    1694:	62 e0       	ldi	r22, 0x02	; 2
    1696:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <_ZN6RotaryC1Ecc>
    169a:	fe 01       	movw	r30, r28
    169c:	e8 57       	subi	r30, 0x78	; 120
    169e:	ff 4f       	sbci	r31, 0xFF	; 255
    16a0:	11 83       	std	Z+1, r17	; 0x01
    16a2:	00 83       	st	Z, r16
    16a4:	42 e1       	ldi	r20, 0x12	; 18
    16a6:	b8 01       	movw	r22, r16
    16a8:	ce 01       	movw	r24, r28
    16aa:	c0 96       	adiw	r24, 0x30	; 48
    16ac:	e0 d2       	rcall	.+1472   	; 0x1c6e <_ZN14EncoderHandler4initEP6Rotaryh>
    16ae:	83 e0       	ldi	r24, 0x03	; 3
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	0e 94 de 46 	call	0x8dbc	; 0x8dbc <_Znwj>
    16b6:	8c 01       	movw	r16, r24
    16b8:	45 e0       	ldi	r20, 0x05	; 5
    16ba:	64 e0       	ldi	r22, 0x04	; 4
    16bc:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <_ZN6RotaryC1Ecc>
    16c0:	fe 01       	movw	r30, r28
    16c2:	e6 57       	subi	r30, 0x76	; 118
    16c4:	ff 4f       	sbci	r31, 0xFF	; 255
    16c6:	11 83       	std	Z+1, r17	; 0x01
    16c8:	00 83       	st	Z, r16
    16ca:	41 e1       	ldi	r20, 0x11	; 17
    16cc:	b8 01       	movw	r22, r16
    16ce:	ce 01       	movw	r24, r28
    16d0:	8b 5b       	subi	r24, 0xBB	; 187
    16d2:	9f 4f       	sbci	r25, 0xFF	; 255
    16d4:	cc d2       	rcall	.+1432   	; 0x1c6e <_ZN14EncoderHandler4initEP6Rotaryh>
    16d6:	83 e0       	ldi	r24, 0x03	; 3
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	0e 94 de 46 	call	0x8dbc	; 0x8dbc <_Znwj>
    16de:	8c 01       	movw	r16, r24
    16e0:	47 e0       	ldi	r20, 0x07	; 7
    16e2:	66 e0       	ldi	r22, 0x06	; 6
    16e4:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <_ZN6RotaryC1Ecc>
    16e8:	fe 01       	movw	r30, r28
    16ea:	e4 57       	subi	r30, 0x74	; 116
    16ec:	ff 4f       	sbci	r31, 0xFF	; 255
    16ee:	11 83       	std	Z+1, r17	; 0x01
    16f0:	00 83       	st	Z, r16
    16f2:	40 e1       	ldi	r20, 0x10	; 16
    16f4:	b8 01       	movw	r22, r16
    16f6:	ce 01       	movw	r24, r28
    16f8:	86 5a       	subi	r24, 0xA6	; 166
    16fa:	9f 4f       	sbci	r25, 0xFF	; 255
    16fc:	b8 d2       	rcall	.+1392   	; 0x1c6e <_ZN14EncoderHandler4initEP6Rotaryh>
    16fe:	83 e0       	ldi	r24, 0x03	; 3
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	0e 94 de 46 	call	0x8dbc	; 0x8dbc <_Znwj>
    1706:	8c 01       	movw	r16, r24
    1708:	49 e0       	ldi	r20, 0x09	; 9
    170a:	68 e0       	ldi	r22, 0x08	; 8
    170c:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <_ZN6RotaryC1Ecc>
    1710:	fe 01       	movw	r30, r28
    1712:	e2 57       	subi	r30, 0x72	; 114
    1714:	ff 4f       	sbci	r31, 0xFF	; 255
    1716:	11 83       	std	Z+1, r17	; 0x01
    1718:	00 83       	st	Z, r16
    171a:	4f e0       	ldi	r20, 0x0F	; 15
    171c:	b8 01       	movw	r22, r16
    171e:	ce 01       	movw	r24, r28
    1720:	81 59       	subi	r24, 0x91	; 145
    1722:	9f 4f       	sbci	r25, 0xFF	; 255
    1724:	a4 d2       	rcall	.+1352   	; 0x1c6e <_ZN14EncoderHandler4initEP6Rotaryh>
    1726:	ce 01       	movw	r24, r28
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	1f 91       	pop	r17
    172e:	0f 91       	pop	r16
    1730:	09 cf       	rjmp	.-494    	; 0x1544 <_ZN7Control11setEncodersEv>

00001732 <_ZN7Control10readButtonEv>:
    1732:	ef 92       	push	r14
    1734:	ff 92       	push	r15
    1736:	0f 93       	push	r16
    1738:	1f 93       	push	r17
    173a:	cf 93       	push	r28
    173c:	df 93       	push	r29
    173e:	ec 01       	movw	r28, r24
    1740:	8e e0       	ldi	r24, 0x0E	; 14
    1742:	0e 94 52 49 	call	0x92a4	; 0x92a4 <digitalRead>
    1746:	8e 01       	movw	r16, r28
    1748:	00 57       	subi	r16, 0x70	; 112
    174a:	1f 4f       	sbci	r17, 0xFF	; 255
    174c:	21 e0       	ldi	r18, 0x01	; 1
    174e:	89 2b       	or	r24, r25
    1750:	09 f4       	brne	.+2      	; 0x1754 <_ZN7Control10readButtonEv+0x22>
    1752:	20 e0       	ldi	r18, 0x00	; 0
    1754:	f8 01       	movw	r30, r16
    1756:	20 83       	st	Z, r18
    1758:	6a e0       	ldi	r22, 0x0A	; 10
    175a:	70 e0       	ldi	r23, 0x00	; 0
    175c:	80 e0       	ldi	r24, 0x00	; 0
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    1764:	f8 01       	movw	r30, r16
    1766:	80 81       	ld	r24, Z
    1768:	9e 01       	movw	r18, r28
    176a:	2f 56       	subi	r18, 0x6F	; 111
    176c:	3f 4f       	sbci	r19, 0xFF	; 255
    176e:	79 01       	movw	r14, r18
    1770:	81 11       	cpse	r24, r1
    1772:	0d c0       	rjmp	.+26     	; 0x178e <_ZN7Control10readButtonEv+0x5c>
    1774:	f9 01       	movw	r30, r18
    1776:	80 81       	ld	r24, Z
    1778:	88 23       	and	r24, r24
    177a:	49 f0       	breq	.+18     	; 0x178e <_ZN7Control10readButtonEv+0x5c>
    177c:	ce 01       	movw	r24, r28
    177e:	d2 de       	rcall	.-604    	; 0x1524 <_ZN7Control7incMenuEv>
    1780:	fe 01       	movw	r30, r28
    1782:	ec 57       	subi	r30, 0x7C	; 124
    1784:	ff 4f       	sbci	r31, 0xFF	; 255
    1786:	81 e0       	ldi	r24, 0x01	; 1
    1788:	80 83       	st	Z, r24
    178a:	ce 01       	movw	r24, r28
    178c:	db de       	rcall	.-586    	; 0x1544 <_ZN7Control11setEncodersEv>
    178e:	f8 01       	movw	r30, r16
    1790:	80 81       	ld	r24, Z
    1792:	f7 01       	movw	r30, r14
    1794:	80 83       	st	Z, r24
    1796:	df 91       	pop	r29
    1798:	cf 91       	pop	r28
    179a:	1f 91       	pop	r17
    179c:	0f 91       	pop	r16
    179e:	ff 90       	pop	r15
    17a0:	ef 90       	pop	r14
    17a2:	08 95       	ret

000017a4 <_ZN7Control4readEv>:
    17a4:	c6 cf       	rjmp	.-116    	; 0x1732 <_ZN7Control10readButtonEv>

000017a6 <_ZN7Control16updateParametersEv>:
    17a6:	0f 93       	push	r16
    17a8:	1f 93       	push	r17
    17aa:	cf 93       	push	r28
    17ac:	df 93       	push	r29
    17ae:	ec 01       	movw	r28, r24
    17b0:	8c 01       	movw	r16, r24
    17b2:	0a 57       	subi	r16, 0x7A	; 122
    17b4:	1f 4f       	sbci	r17, 0xFF	; 255
    17b6:	d8 01       	movw	r26, r16
    17b8:	ed 91       	ld	r30, X+
    17ba:	fc 91       	ld	r31, X
    17bc:	80 81       	ld	r24, Z
    17be:	82 30       	cpi	r24, 0x02	; 2
    17c0:	09 f4       	brne	.+2      	; 0x17c4 <_ZN7Control16updateParametersEv+0x1e>
    17c2:	9c c0       	rjmp	.+312    	; 0x18fc <_ZN7Control16updateParametersEv+0x156>
    17c4:	60 f5       	brcc	.+88     	; 0x181e <_ZN7Control16updateParametersEv+0x78>
    17c6:	88 23       	and	r24, r24
    17c8:	09 f4       	brne	.+2      	; 0x17cc <_ZN7Control16updateParametersEv+0x26>
    17ca:	5c c0       	rjmp	.+184    	; 0x1884 <_ZN7Control16updateParametersEv+0xde>
    17cc:	81 30       	cpi	r24, 0x01	; 1
    17ce:	09 f0       	breq	.+2      	; 0x17d2 <_ZN7Control16updateParametersEv+0x2c>
    17d0:	f5 c0       	rjmp	.+490    	; 0x19bc <_ZN7Control16updateParametersEv+0x216>
    17d2:	bf 01       	movw	r22, r30
    17d4:	69 5f       	subi	r22, 0xF9	; 249
    17d6:	7f 4f       	sbci	r23, 0xFF	; 255
    17d8:	2f ef       	ldi	r18, 0xFF	; 255
    17da:	40 e0       	ldi	r20, 0x00	; 0
    17dc:	ce 01       	movw	r24, r28
    17de:	c0 96       	adiw	r24, 0x30	; 48
    17e0:	02 d3       	rcall	.+1540   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    17e2:	f8 01       	movw	r30, r16
    17e4:	60 81       	ld	r22, Z
    17e6:	71 81       	ldd	r23, Z+1	; 0x01
    17e8:	68 5f       	subi	r22, 0xF8	; 248
    17ea:	7f 4f       	sbci	r23, 0xFF	; 255
    17ec:	20 ee       	ldi	r18, 0xE0	; 224
    17ee:	3e e2       	ldi	r19, 0x2E	; 46
    17f0:	4e e1       	ldi	r20, 0x1E	; 30
    17f2:	50 e0       	ldi	r21, 0x00	; 0
    17f4:	ce 01       	movw	r24, r28
    17f6:	8b 5b       	subi	r24, 0xBB	; 187
    17f8:	9f 4f       	sbci	r25, 0xFF	; 255
    17fa:	4f d2       	rcall	.+1182   	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    17fc:	d8 01       	movw	r26, r16
    17fe:	6d 91       	ld	r22, X+
    1800:	7c 91       	ld	r23, X
    1802:	66 5f       	subi	r22, 0xF6	; 246
    1804:	7f 4f       	sbci	r23, 0xFF	; 255
    1806:	2f ef       	ldi	r18, 0xFF	; 255
    1808:	40 e0       	ldi	r20, 0x00	; 0
    180a:	ce 01       	movw	r24, r28
    180c:	86 5a       	subi	r24, 0xA6	; 166
    180e:	9f 4f       	sbci	r25, 0xFF	; 255
    1810:	ea d2       	rcall	.+1492   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1812:	f8 01       	movw	r30, r16
    1814:	60 81       	ld	r22, Z
    1816:	71 81       	ldd	r23, Z+1	; 0x01
    1818:	65 5f       	subi	r22, 0xF5	; 245
    181a:	7f 4f       	sbci	r23, 0xFF	; 255
    181c:	c5 c0       	rjmp	.+394    	; 0x19a8 <_ZN7Control16updateParametersEv+0x202>
    181e:	83 30       	cpi	r24, 0x03	; 3
    1820:	09 f4       	brne	.+2      	; 0x1824 <_ZN7Control16updateParametersEv+0x7e>
    1822:	9f c0       	rjmp	.+318    	; 0x1962 <_ZN7Control16updateParametersEv+0x1bc>
    1824:	84 30       	cpi	r24, 0x04	; 4
    1826:	09 f0       	breq	.+2      	; 0x182a <_ZN7Control16updateParametersEv+0x84>
    1828:	c9 c0       	rjmp	.+402    	; 0x19bc <_ZN7Control16updateParametersEv+0x216>
    182a:	bf 01       	movw	r22, r30
    182c:	69 5e       	subi	r22, 0xE9	; 233
    182e:	7f 4f       	sbci	r23, 0xFF	; 255
    1830:	2f e7       	ldi	r18, 0x7F	; 127
    1832:	41 e8       	ldi	r20, 0x81	; 129
    1834:	ce 01       	movw	r24, r28
    1836:	c0 96       	adiw	r24, 0x30	; 48
    1838:	8c d2       	rcall	.+1304   	; 0x1d52 <_ZN14EncoderHandler12setValue_s8tEPaaa>
    183a:	d8 01       	movw	r26, r16
    183c:	6d 91       	ld	r22, X+
    183e:	7c 91       	ld	r23, X
    1840:	68 5e       	subi	r22, 0xE8	; 232
    1842:	7f 4f       	sbci	r23, 0xFF	; 255
    1844:	2f ef       	ldi	r18, 0xFF	; 255
    1846:	40 e0       	ldi	r20, 0x00	; 0
    1848:	ce 01       	movw	r24, r28
    184a:	8b 5b       	subi	r24, 0xBB	; 187
    184c:	9f 4f       	sbci	r25, 0xFF	; 255
    184e:	cb d2       	rcall	.+1430   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1850:	f8 01       	movw	r30, r16
    1852:	60 81       	ld	r22, Z
    1854:	71 81       	ldd	r23, Z+1	; 0x01
    1856:	67 5e       	subi	r22, 0xE7	; 231
    1858:	7f 4f       	sbci	r23, 0xFF	; 255
    185a:	2f e7       	ldi	r18, 0x7F	; 127
    185c:	41 e8       	ldi	r20, 0x81	; 129
    185e:	ce 01       	movw	r24, r28
    1860:	86 5a       	subi	r24, 0xA6	; 166
    1862:	9f 4f       	sbci	r25, 0xFF	; 255
    1864:	76 d2       	rcall	.+1260   	; 0x1d52 <_ZN14EncoderHandler12setValue_s8tEPaaa>
    1866:	d8 01       	movw	r26, r16
    1868:	6d 91       	ld	r22, X+
    186a:	7c 91       	ld	r23, X
    186c:	66 5e       	subi	r22, 0xE6	; 230
    186e:	7f 4f       	sbci	r23, 0xFF	; 255
    1870:	2f e0       	ldi	r18, 0x0F	; 15
    1872:	40 e0       	ldi	r20, 0x00	; 0
    1874:	ce 01       	movw	r24, r28
    1876:	81 59       	subi	r24, 0x91	; 145
    1878:	9f 4f       	sbci	r25, 0xFF	; 255
    187a:	df 91       	pop	r29
    187c:	cf 91       	pop	r28
    187e:	1f 91       	pop	r17
    1880:	0f 91       	pop	r16
    1882:	b1 c2       	rjmp	.+1378   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1884:	bf 01       	movw	r22, r30
    1886:	6f 5f       	subi	r22, 0xFF	; 255
    1888:	7f 4f       	sbci	r23, 0xFF	; 255
    188a:	23 e0       	ldi	r18, 0x03	; 3
    188c:	40 e0       	ldi	r20, 0x00	; 0
    188e:	ce 01       	movw	r24, r28
    1890:	c0 96       	adiw	r24, 0x30	; 48
    1892:	a9 d2       	rcall	.+1362   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1894:	f8 01       	movw	r30, r16
    1896:	60 81       	ld	r22, Z
    1898:	71 81       	ldd	r23, Z+1	; 0x01
    189a:	6e 5f       	subi	r22, 0xFE	; 254
    189c:	7f 4f       	sbci	r23, 0xFF	; 255
    189e:	20 e4       	ldi	r18, 0x40	; 64
    18a0:	3f e1       	ldi	r19, 0x1F	; 31
    18a2:	4e e1       	ldi	r20, 0x1E	; 30
    18a4:	50 e0       	ldi	r21, 0x00	; 0
    18a6:	ce 01       	movw	r24, r28
    18a8:	8b 5b       	subi	r24, 0xBB	; 187
    18aa:	9f 4f       	sbci	r25, 0xFF	; 255
    18ac:	f6 d1       	rcall	.+1004   	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    18ae:	d8 01       	movw	r26, r16
    18b0:	6d 91       	ld	r22, X+
    18b2:	7c 91       	ld	r23, X
    18b4:	6c 5f       	subi	r22, 0xFC	; 252
    18b6:	7f 4f       	sbci	r23, 0xFF	; 255
    18b8:	23 e0       	ldi	r18, 0x03	; 3
    18ba:	40 e0       	ldi	r20, 0x00	; 0
    18bc:	ce 01       	movw	r24, r28
    18be:	86 5a       	subi	r24, 0xA6	; 166
    18c0:	9f 4f       	sbci	r25, 0xFF	; 255
    18c2:	91 d2       	rcall	.+1314   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    18c4:	f8 01       	movw	r30, r16
    18c6:	60 81       	ld	r22, Z
    18c8:	71 81       	ldd	r23, Z+1	; 0x01
    18ca:	6b 5f       	subi	r22, 0xFB	; 251
    18cc:	7f 4f       	sbci	r23, 0xFF	; 255
    18ce:	20 ec       	ldi	r18, 0xC0	; 192
    18d0:	32 e1       	ldi	r19, 0x12	; 18
    18d2:	41 e0       	ldi	r20, 0x01	; 1
    18d4:	50 e0       	ldi	r21, 0x00	; 0
    18d6:	ce 01       	movw	r24, r28
    18d8:	81 59       	subi	r24, 0x91	; 145
    18da:	9f 4f       	sbci	r25, 0xFF	; 255
    18dc:	de d1       	rcall	.+956    	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    18de:	d8 01       	movw	r26, r16
    18e0:	ed 91       	ld	r30, X+
    18e2:	fc 91       	ld	r31, X
    18e4:	65 81       	ldd	r22, Z+5	; 0x05
    18e6:	76 81       	ldd	r23, Z+6	; 0x06
    18e8:	4a e0       	ldi	r20, 0x0A	; 10
    18ea:	50 e0       	ldi	r21, 0x00	; 0
    18ec:	82 e8       	ldi	r24, 0x82	; 130
    18ee:	99 e0       	ldi	r25, 0x09	; 9
    18f0:	df 91       	pop	r29
    18f2:	cf 91       	pop	r28
    18f4:	1f 91       	pop	r17
    18f6:	0f 91       	pop	r16
    18f8:	0c 94 79 47 	jmp	0x8ef2	; 0x8ef2 <_ZN5Print7printlnEji>
    18fc:	bf 01       	movw	r22, r30
    18fe:	64 5f       	subi	r22, 0xF4	; 244
    1900:	7f 4f       	sbci	r23, 0xFF	; 255
    1902:	20 e7       	ldi	r18, 0x70	; 112
    1904:	37 e1       	ldi	r19, 0x17	; 23
    1906:	40 e0       	ldi	r20, 0x00	; 0
    1908:	50 e0       	ldi	r21, 0x00	; 0
    190a:	ce 01       	movw	r24, r28
    190c:	c0 96       	adiw	r24, 0x30	; 48
    190e:	c5 d1       	rcall	.+906    	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    1910:	d8 01       	movw	r26, r16
    1912:	6d 91       	ld	r22, X+
    1914:	7c 91       	ld	r23, X
    1916:	62 5f       	subi	r22, 0xF2	; 242
    1918:	7f 4f       	sbci	r23, 0xFF	; 255
    191a:	20 e7       	ldi	r18, 0x70	; 112
    191c:	37 e1       	ldi	r19, 0x17	; 23
    191e:	40 e0       	ldi	r20, 0x00	; 0
    1920:	50 e0       	ldi	r21, 0x00	; 0
    1922:	ce 01       	movw	r24, r28
    1924:	8b 5b       	subi	r24, 0xBB	; 187
    1926:	9f 4f       	sbci	r25, 0xFF	; 255
    1928:	b8 d1       	rcall	.+880    	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    192a:	f8 01       	movw	r30, r16
    192c:	60 81       	ld	r22, Z
    192e:	71 81       	ldd	r23, Z+1	; 0x01
    1930:	60 5f       	subi	r22, 0xF0	; 240
    1932:	7f 4f       	sbci	r23, 0xFF	; 255
    1934:	2f ef       	ldi	r18, 0xFF	; 255
    1936:	40 e0       	ldi	r20, 0x00	; 0
    1938:	ce 01       	movw	r24, r28
    193a:	86 5a       	subi	r24, 0xA6	; 166
    193c:	9f 4f       	sbci	r25, 0xFF	; 255
    193e:	53 d2       	rcall	.+1190   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1940:	d8 01       	movw	r26, r16
    1942:	6d 91       	ld	r22, X+
    1944:	7c 91       	ld	r23, X
    1946:	6f 5e       	subi	r22, 0xEF	; 239
    1948:	7f 4f       	sbci	r23, 0xFF	; 255
    194a:	20 e7       	ldi	r18, 0x70	; 112
    194c:	37 e1       	ldi	r19, 0x17	; 23
    194e:	40 e0       	ldi	r20, 0x00	; 0
    1950:	50 e0       	ldi	r21, 0x00	; 0
    1952:	ce 01       	movw	r24, r28
    1954:	81 59       	subi	r24, 0x91	; 145
    1956:	9f 4f       	sbci	r25, 0xFF	; 255
    1958:	df 91       	pop	r29
    195a:	cf 91       	pop	r28
    195c:	1f 91       	pop	r17
    195e:	0f 91       	pop	r16
    1960:	9c c1       	rjmp	.+824    	; 0x1c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>
    1962:	bf 01       	movw	r22, r30
    1964:	6d 5e       	subi	r22, 0xED	; 237
    1966:	7f 4f       	sbci	r23, 0xFF	; 255
    1968:	27 e0       	ldi	r18, 0x07	; 7
    196a:	40 e0       	ldi	r20, 0x00	; 0
    196c:	ce 01       	movw	r24, r28
    196e:	c0 96       	adiw	r24, 0x30	; 48
    1970:	3a d2       	rcall	.+1140   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1972:	f8 01       	movw	r30, r16
    1974:	60 81       	ld	r22, Z
    1976:	71 81       	ldd	r23, Z+1	; 0x01
    1978:	6c 5e       	subi	r22, 0xEC	; 236
    197a:	7f 4f       	sbci	r23, 0xFF	; 255
    197c:	2f ef       	ldi	r18, 0xFF	; 255
    197e:	40 e0       	ldi	r20, 0x00	; 0
    1980:	ce 01       	movw	r24, r28
    1982:	8b 5b       	subi	r24, 0xBB	; 187
    1984:	9f 4f       	sbci	r25, 0xFF	; 255
    1986:	2f d2       	rcall	.+1118   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    1988:	d8 01       	movw	r26, r16
    198a:	6d 91       	ld	r22, X+
    198c:	7c 91       	ld	r23, X
    198e:	6b 5e       	subi	r22, 0xEB	; 235
    1990:	7f 4f       	sbci	r23, 0xFF	; 255
    1992:	2f ef       	ldi	r18, 0xFF	; 255
    1994:	40 e0       	ldi	r20, 0x00	; 0
    1996:	ce 01       	movw	r24, r28
    1998:	86 5a       	subi	r24, 0xA6	; 166
    199a:	9f 4f       	sbci	r25, 0xFF	; 255
    199c:	24 d2       	rcall	.+1096   	; 0x1de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>
    199e:	f8 01       	movw	r30, r16
    19a0:	60 81       	ld	r22, Z
    19a2:	71 81       	ldd	r23, Z+1	; 0x01
    19a4:	6a 5e       	subi	r22, 0xEA	; 234
    19a6:	7f 4f       	sbci	r23, 0xFF	; 255
    19a8:	2f e7       	ldi	r18, 0x7F	; 127
    19aa:	41 e8       	ldi	r20, 0x81	; 129
    19ac:	ce 01       	movw	r24, r28
    19ae:	81 59       	subi	r24, 0x91	; 145
    19b0:	9f 4f       	sbci	r25, 0xFF	; 255
    19b2:	df 91       	pop	r29
    19b4:	cf 91       	pop	r28
    19b6:	1f 91       	pop	r17
    19b8:	0f 91       	pop	r16
    19ba:	cb c1       	rjmp	.+918    	; 0x1d52 <_ZN14EncoderHandler12setValue_s8tEPaaa>
    19bc:	df 91       	pop	r29
    19be:	cf 91       	pop	r28
    19c0:	1f 91       	pop	r17
    19c2:	0f 91       	pop	r16
    19c4:	08 95       	ret

000019c6 <_GLOBAL__sub_I__ZN7ControlC2Ev>:

    19c6:	cf 93       	push	r28
    19c8:	df 93       	push	r29
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    19ca:	66 ea       	ldi	r22, 0xA6	; 166
    19cc:	72 e0       	ldi	r23, 0x02	; 2
    19ce:	8e e5       	ldi	r24, 0x5E	; 94
    19d0:	94 e0       	ldi	r25, 0x04	; 4
    19d2:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    19d6:	6b ea       	ldi	r22, 0xAB	; 171
    19d8:	72 e0       	ldi	r23, 0x02	; 2
    19da:	84 e6       	ldi	r24, 0x64	; 100
    19dc:	94 e0       	ldi	r25, 0x04	; 4
    19de:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    19e2:	60 eb       	ldi	r22, 0xB0	; 176
    19e4:	72 e0       	ldi	r23, 0x02	; 2
    19e6:	8a e6       	ldi	r24, 0x6A	; 106
    19e8:	94 e0       	ldi	r25, 0x04	; 4
    19ea:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    19ee:	65 eb       	ldi	r22, 0xB5	; 181
    19f0:	72 e0       	ldi	r23, 0x02	; 2
    19f2:	80 e7       	ldi	r24, 0x70	; 112
    19f4:	94 e0       	ldi	r25, 0x04	; 4
    19f6:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    19fa:	68 eb       	ldi	r22, 0xB8	; 184
    19fc:	72 e0       	ldi	r23, 0x02	; 2
    19fe:	86 e7       	ldi	r24, 0x76	; 118
    1a00:	94 e0       	ldi	r25, 0x04	; 4
    1a02:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    1a06:	6e eb       	ldi	r22, 0xBE	; 190
    1a08:	72 e0       	ldi	r23, 0x02	; 2
    1a0a:	86 e4       	ldi	r24, 0x46	; 70
    1a0c:	94 e0       	ldi	r25, 0x04	; 4
    1a0e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a12:	64 ec       	ldi	r22, 0xC4	; 196
    1a14:	72 e0       	ldi	r23, 0x02	; 2
    1a16:	8c e4       	ldi	r24, 0x4C	; 76
    1a18:	94 e0       	ldi	r25, 0x04	; 4
    1a1a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a1e:	6a ec       	ldi	r22, 0xCA	; 202
    1a20:	72 e0       	ldi	r23, 0x02	; 2
    1a22:	82 e5       	ldi	r24, 0x52	; 82
    1a24:	94 e0       	ldi	r25, 0x04	; 4
    1a26:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a2a:	64 ec       	ldi	r22, 0xC4	; 196
    1a2c:	72 e0       	ldi	r23, 0x02	; 2
    1a2e:	88 e5       	ldi	r24, 0x58	; 88
    1a30:	94 e0       	ldi	r25, 0x04	; 4
    1a32:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    1a36:	6f ec       	ldi	r22, 0xCF	; 207
    1a38:	72 e0       	ldi	r23, 0x02	; 2
    1a3a:	8e e2       	ldi	r24, 0x2E	; 46
    1a3c:	94 e0       	ldi	r25, 0x04	; 4
    1a3e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a42:	64 ec       	ldi	r22, 0xC4	; 196
    1a44:	72 e0       	ldi	r23, 0x02	; 2
    1a46:	84 e3       	ldi	r24, 0x34	; 52
    1a48:	94 e0       	ldi	r25, 0x04	; 4
    1a4a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a4e:	65 ed       	ldi	r22, 0xD5	; 213
    1a50:	72 e0       	ldi	r23, 0x02	; 2
    1a52:	8a e3       	ldi	r24, 0x3A	; 58
    1a54:	94 e0       	ldi	r25, 0x04	; 4
    1a56:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a5a:	6a ec       	ldi	r22, 0xCA	; 202
    1a5c:	72 e0       	ldi	r23, 0x02	; 2
    1a5e:	80 e4       	ldi	r24, 0x40	; 64
    1a60:	94 e0       	ldi	r25, 0x04	; 4
    1a62:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    1a66:	6a ed       	ldi	r22, 0xDA	; 218
    1a68:	72 e0       	ldi	r23, 0x02	; 2
    1a6a:	86 e1       	ldi	r24, 0x16	; 22
    1a6c:	94 e0       	ldi	r25, 0x04	; 4
    1a6e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a72:	6f ed       	ldi	r22, 0xDF	; 223
    1a74:	72 e0       	ldi	r23, 0x02	; 2
    1a76:	8c e1       	ldi	r24, 0x1C	; 28
    1a78:	94 e0       	ldi	r25, 0x04	; 4
    1a7a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a7e:	64 ee       	ldi	r22, 0xE4	; 228
    1a80:	72 e0       	ldi	r23, 0x02	; 2
    1a82:	82 e2       	ldi	r24, 0x22	; 34
    1a84:	94 e0       	ldi	r25, 0x04	; 4
    1a86:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1a8a:	69 ee       	ldi	r22, 0xE9	; 233
    1a8c:	72 e0       	ldi	r23, 0x02	; 2
    1a8e:	88 e2       	ldi	r24, 0x28	; 40
    1a90:	94 e0       	ldi	r25, 0x04	; 4
    1a92:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    1a96:	6f ec       	ldi	r22, 0xCF	; 207
    1a98:	72 e0       	ldi	r23, 0x02	; 2
    1a9a:	8e ef       	ldi	r24, 0xFE	; 254
    1a9c:	93 e0       	ldi	r25, 0x03	; 3
    1a9e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1aa2:	6e ee       	ldi	r22, 0xEE	; 238
    1aa4:	72 e0       	ldi	r23, 0x02	; 2
    1aa6:	84 e0       	ldi	r24, 0x04	; 4
    1aa8:	94 e0       	ldi	r25, 0x04	; 4
    1aaa:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1aae:	63 ef       	ldi	r22, 0xF3	; 243
    1ab0:	72 e0       	ldi	r23, 0x02	; 2
    1ab2:	8a e0       	ldi	r24, 0x0A	; 10
    1ab4:	94 e0       	ldi	r25, 0x04	; 4
    1ab6:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1aba:	6a ec       	ldi	r22, 0xCA	; 202
    1abc:	72 e0       	ldi	r23, 0x02	; 2
    1abe:	80 e1       	ldi	r24, 0x10	; 16
    1ac0:	94 e0       	ldi	r25, 0x04	; 4
    1ac2:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    1ac6:	6a ef       	ldi	r22, 0xFA	; 250
    1ac8:	72 e0       	ldi	r23, 0x02	; 2
    1aca:	86 ee       	ldi	r24, 0xE6	; 230
    1acc:	93 e0       	ldi	r25, 0x03	; 3
    1ace:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1ad2:	64 e0       	ldi	r22, 0x04	; 4
    1ad4:	73 e0       	ldi	r23, 0x03	; 3
    1ad6:	8c ee       	ldi	r24, 0xEC	; 236
    1ad8:	93 e0       	ldi	r25, 0x03	; 3
    1ada:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1ade:	6c e0       	ldi	r22, 0x0C	; 12
    1ae0:	73 e0       	ldi	r23, 0x03	; 3
    1ae2:	82 ef       	ldi	r24, 0xF2	; 242
    1ae4:	93 e0       	ldi	r25, 0x03	; 3
    1ae6:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1aea:	65 e1       	ldi	r22, 0x15	; 21
    1aec:	73 e0       	ldi	r23, 0x03	; 3
    1aee:	88 ef       	ldi	r24, 0xF8	; 248
    1af0:	93 e0       	ldi	r25, 0x03	; 3
    1af2:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    1af6:	6d e1       	ldi	r22, 0x1D	; 29
    1af8:	73 e0       	ldi	r23, 0x03	; 3
    1afa:	8e ec       	ldi	r24, 0xCE	; 206
    1afc:	93 e0       	ldi	r25, 0x03	; 3
    1afe:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1b02:	61 e2       	ldi	r22, 0x21	; 33
    1b04:	73 e0       	ldi	r23, 0x03	; 3
    1b06:	84 ed       	ldi	r24, 0xD4	; 212
    1b08:	93 e0       	ldi	r25, 0x03	; 3
    1b0a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1b0e:	65 e2       	ldi	r22, 0x25	; 37
    1b10:	73 e0       	ldi	r23, 0x03	; 3
    1b12:	8a ed       	ldi	r24, 0xDA	; 218
    1b14:	93 e0       	ldi	r25, 0x03	; 3
    1b16:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1b1a:	69 e2       	ldi	r22, 0x29	; 41
    1b1c:	73 e0       	ldi	r23, 0x03	; 3
    1b1e:	80 ee       	ldi	r24, 0xE0	; 224
    1b20:	93 e0       	ldi	r25, 0x03	; 3
    1b22:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    1b26:	6d e2       	ldi	r22, 0x2D	; 45
    1b28:	73 e0       	ldi	r23, 0x03	; 3
    1b2a:	8e e9       	ldi	r24, 0x9E	; 158
    1b2c:	93 e0       	ldi	r25, 0x03	; 3
    1b2e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1b32:	c0 e0       	ldi	r28, 0x00	; 0
    1b34:	d0 e0       	ldi	r29, 0x00	; 0
    1b36:	26 96       	adiw	r28, 0x06	; 6
    1b38:	60 e9       	ldi	r22, 0x90	; 144
    1b3a:	73 e0       	ldi	r23, 0x03	; 3
    1b3c:	ce 01       	movw	r24, r28
    1b3e:	82 56       	subi	r24, 0x62	; 98
    1b40:	9c 4f       	sbci	r25, 0xFC	; 252
    1b42:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    1b46:	ca 32       	cpi	r28, 0x2A	; 42
    1b48:	d1 05       	cpc	r29, r1
    1b4a:	a9 f7       	brne	.-22     	; 0x1b36 <_GLOBAL__sub_I__ZN7ControlC2Ev+0x170>
    1b4c:	df 91       	pop	r29
    1b4e:	cf 91       	pop	r28
    1b50:	08 95       	ret

00001b52 <_GLOBAL__sub_D__ZN7ControlC2Ev>:
    1b52:	cf 93       	push	r28
    1b54:	df 93       	push	r29
    1b56:	ce ec       	ldi	r28, 0xCE	; 206
    1b58:	d3 e0       	ldi	r29, 0x03	; 3
    1b5a:	26 97       	sbiw	r28, 0x06	; 6
    1b5c:	ce 01       	movw	r24, r28
    1b5e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1b62:	83 e0       	ldi	r24, 0x03	; 3
    1b64:	ce 39       	cpi	r28, 0x9E	; 158
    1b66:	d8 07       	cpc	r29, r24
    1b68:	c1 f7       	brne	.-16     	; 0x1b5a <_GLOBAL__sub_D__ZN7ControlC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    1b6a:	80 ee       	ldi	r24, 0xE0	; 224
    1b6c:	93 e0       	ldi	r25, 0x03	; 3
    1b6e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1b72:	8a ed       	ldi	r24, 0xDA	; 218
    1b74:	93 e0       	ldi	r25, 0x03	; 3
    1b76:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1b7a:	84 ed       	ldi	r24, 0xD4	; 212
    1b7c:	93 e0       	ldi	r25, 0x03	; 3
    1b7e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1b82:	8e ec       	ldi	r24, 0xCE	; 206
    1b84:	93 e0       	ldi	r25, 0x03	; 3
    1b86:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    1b8a:	88 ef       	ldi	r24, 0xF8	; 248
    1b8c:	93 e0       	ldi	r25, 0x03	; 3
    1b8e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1b92:	82 ef       	ldi	r24, 0xF2	; 242
    1b94:	93 e0       	ldi	r25, 0x03	; 3
    1b96:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1b9a:	8c ee       	ldi	r24, 0xEC	; 236
    1b9c:	93 e0       	ldi	r25, 0x03	; 3
    1b9e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1ba2:	86 ee       	ldi	r24, 0xE6	; 230
    1ba4:	93 e0       	ldi	r25, 0x03	; 3
    1ba6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    1baa:	80 e1       	ldi	r24, 0x10	; 16
    1bac:	94 e0       	ldi	r25, 0x04	; 4
    1bae:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1bb2:	8a e0       	ldi	r24, 0x0A	; 10
    1bb4:	94 e0       	ldi	r25, 0x04	; 4
    1bb6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1bba:	84 e0       	ldi	r24, 0x04	; 4
    1bbc:	94 e0       	ldi	r25, 0x04	; 4
    1bbe:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1bc2:	8e ef       	ldi	r24, 0xFE	; 254
    1bc4:	93 e0       	ldi	r25, 0x03	; 3
    1bc6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    1bca:	88 e2       	ldi	r24, 0x28	; 40
    1bcc:	94 e0       	ldi	r25, 0x04	; 4
    1bce:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1bd2:	82 e2       	ldi	r24, 0x22	; 34
    1bd4:	94 e0       	ldi	r25, 0x04	; 4
    1bd6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1bda:	8c e1       	ldi	r24, 0x1C	; 28
    1bdc:	94 e0       	ldi	r25, 0x04	; 4
    1bde:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1be2:	86 e1       	ldi	r24, 0x16	; 22
    1be4:	94 e0       	ldi	r25, 0x04	; 4
    1be6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    1bea:	80 e4       	ldi	r24, 0x40	; 64
    1bec:	94 e0       	ldi	r25, 0x04	; 4
    1bee:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1bf2:	8a e3       	ldi	r24, 0x3A	; 58
    1bf4:	94 e0       	ldi	r25, 0x04	; 4
    1bf6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1bfa:	84 e3       	ldi	r24, 0x34	; 52
    1bfc:	94 e0       	ldi	r25, 0x04	; 4
    1bfe:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1c02:	8e e2       	ldi	r24, 0x2E	; 46
    1c04:	94 e0       	ldi	r25, 0x04	; 4
    1c06:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    1c0a:	88 e5       	ldi	r24, 0x58	; 88
    1c0c:	94 e0       	ldi	r25, 0x04	; 4
    1c0e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1c12:	82 e5       	ldi	r24, 0x52	; 82
    1c14:	94 e0       	ldi	r25, 0x04	; 4
    1c16:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1c1a:	8c e4       	ldi	r24, 0x4C	; 76
    1c1c:	94 e0       	ldi	r25, 0x04	; 4
    1c1e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1c22:	86 e4       	ldi	r24, 0x46	; 70
    1c24:	94 e0       	ldi	r25, 0x04	; 4
    1c26:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1c2a:	cc e7       	ldi	r28, 0x7C	; 124
    1c2c:	d4 e0       	ldi	r29, 0x04	; 4
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    1c2e:	26 97       	sbiw	r28, 0x06	; 6
    1c30:	ce 01       	movw	r24, r28
    1c32:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    1c36:	84 e0       	ldi	r24, 0x04	; 4
    1c38:	ce 35       	cpi	r28, 0x5E	; 94
    1c3a:	d8 07       	cpc	r29, r24
    1c3c:	c1 f7       	brne	.-16     	; 0x1c2e <_GLOBAL__sub_D__ZN7ControlC2Ev+0xdc>
    1c3e:	df 91       	pop	r29
    1c40:	cf 91       	pop	r28
    1c42:	08 95       	ret

00001c44 <_ZN14EncoderHandlerC1Ev>:
 * EncoderHandler implementation
 * 
 * This class provides additional functionality to the Encoder library
 */

EncoderHandler::EncoderHandler(){
    1c44:	cf 93       	push	r28
    1c46:	df 93       	push	r29
    1c48:	ec 01       	movw	r28, r24
    1c4a:	0e 94 f2 19 	call	0x33e4	; 0x33e4 <_ZN6RotaryC1Ev>
	bMul_u16t = 1;
    1c4e:	81 e0       	ldi	r24, 0x01	; 1
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	98 87       	std	Y+8, r25	; 0x08
    1c54:	8f 83       	std	Y+7, r24	; 0x07
	nMul_u16t = 10;
    1c56:	8a e0       	ldi	r24, 0x0A	; 10
    1c58:	90 e0       	ldi	r25, 0x00	; 0
    1c5a:	9a 87       	std	Y+10, r25	; 0x0a
    1c5c:	89 87       	std	Y+9, r24	; 0x09
	bMul_u8t = 1;
    1c5e:	91 e0       	ldi	r25, 0x01	; 1
    1c60:	9b 87       	std	Y+11, r25	; 0x0b
	nMul_u8t = 10;
    1c62:	8c 87       	std	Y+12, r24	; 0x0c
	bMul_s8t = 1;
    1c64:	9d 87       	std	Y+13, r25	; 0x0d
	nMul_s8t = 10; 
    1c66:	8e 87       	std	Y+14, r24	; 0x0e
}
    1c68:	df 91       	pop	r29
    1c6a:	cf 91       	pop	r28
    1c6c:	08 95       	ret

00001c6e <_ZN14EncoderHandler4initEP6Rotaryh>:

void EncoderHandler::init(Rotary* r, byte bP) {
	enc = r; 
    1c6e:	fc 01       	movw	r30, r24
    1c70:	75 83       	std	Z+5, r23	; 0x05
    1c72:	64 83       	std	Z+4, r22	; 0x04
	bPin = bP;
    1c74:	46 83       	std	Z+6, r20	; 0x06
	pinMode(bPin, INPUT_PULLUP);
    1c76:	62 e0       	ldi	r22, 0x02	; 2
    1c78:	84 2f       	mov	r24, r20
    1c7a:	0c 94 e8 48 	jmp	0x91d0	; 0x91d0 <pinMode>

00001c7e <_ZN14EncoderHandler11setMul_u16tEjj>:
	bMulF = bM;
	nMulF = nM;
}*/

void EncoderHandler::setMul_u16t(uint16_t bM, uint16_t nM) {
	bMul_u16t = bM;
    1c7e:	fc 01       	movw	r30, r24
    1c80:	70 87       	std	Z+8, r23	; 0x08
    1c82:	67 83       	std	Z+7, r22	; 0x07
	nMul_u16t = nM;
    1c84:	52 87       	std	Z+10, r21	; 0x0a
    1c86:	41 87       	std	Z+9, r20	; 0x09
    1c88:	08 95       	ret

00001c8a <_ZN14EncoderHandler11setMulN_u8tEhh>:
}

void EncoderHandler::setMulN_u8t(uint8_t bM, uint8_t nM) {
	bMul_u8t = bM;
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	63 87       	std	Z+11, r22	; 0x0b
	nMul_u8t = nM;
    1c8e:	44 87       	std	Z+12, r20	; 0x0c
    1c90:	08 95       	ret

00001c92 <_ZN14EncoderHandler11setMulN_s8tEaa>:
}

void EncoderHandler::setMulN_s8t(int8_t bM, int8_t nM) {
	bMul_s8t = bM;
    1c92:	fc 01       	movw	r30, r24
    1c94:	65 87       	std	Z+13, r22	; 0x0d
	nMul_s8t = nM;
    1c96:	46 87       	std	Z+14, r20	; 0x0e
    1c98:	08 95       	ret

00001c9a <_ZN14EncoderHandler13setValue_u16tEPjjj>:
		changed = true;
	}
	//changed = false; // --> set from outside (where?)
}*/

void EncoderHandler::setValue_u16t(uint16_t* v, uint16_t min, uint16_t max) {
    1c9a:	cf 92       	push	r12
    1c9c:	df 92       	push	r13
    1c9e:	ef 92       	push	r14
    1ca0:	ff 92       	push	r15
    1ca2:	0f 93       	push	r16
    1ca4:	1f 93       	push	r17
    1ca6:	cf 93       	push	r28
    1ca8:	df 93       	push	r29
    1caa:	ec 01       	movw	r28, r24
    1cac:	7b 01       	movw	r14, r22
    1cae:	8a 01       	movw	r16, r20
    1cb0:	69 01       	movw	r12, r18
	button = digitalRead(bPin);
    1cb2:	8e 81       	ldd	r24, Y+6	; 0x06
    1cb4:	0e 94 52 49 	call	0x92a4	; 0x92a4 <digitalRead>
    1cb8:	21 e0       	ldi	r18, 0x01	; 1
    1cba:	89 2b       	or	r24, r25
    1cbc:	09 f4       	brne	.+2      	; 0x1cc0 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x26>
    1cbe:	20 e0       	ldi	r18, 0x00	; 0
    1cc0:	2c 8b       	std	Y+20, r18	; 0x14
	
	result = enc->process();
    1cc2:	8c 81       	ldd	r24, Y+4	; 0x04
    1cc4:	9d 81       	ldd	r25, Y+5	; 0x05
    1cc6:	0e 94 0c 1a 	call	0x3418	; 0x3418 <_ZN6Rotary7processEv>
    1cca:	8b 8b       	std	Y+19, r24	; 0x13
	if(result == DIR_CW){
    1ccc:	80 31       	cpi	r24, 0x10	; 16
    1cce:	d9 f4       	brne	.+54     	; 0x1d06 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x6c>
	if(m) return nMulF;
	else return bMulF;
}*/

uint16_t EncoderHandler::returnMul_u16t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_u16t;
    1cd0:	8c 89       	ldd	r24, Y+20	; 0x14
    1cd2:	88 23       	and	r24, r24
    1cd4:	19 f0       	breq	.+6      	; 0x1cdc <_ZN14EncoderHandler13setValue_u16tEPjjj+0x42>
    1cd6:	29 85       	ldd	r18, Y+9	; 0x09
    1cd8:	3a 85       	ldd	r19, Y+10	; 0x0a
    1cda:	02 c0       	rjmp	.+4      	; 0x1ce0 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x46>
	else return bMul_u16t;
    1cdc:	2f 81       	ldd	r18, Y+7	; 0x07
    1cde:	38 85       	ldd	r19, Y+8	; 0x08
void EncoderHandler::setValue_u16t(uint16_t* v, uint16_t min, uint16_t max) {
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_u16t(button);
    1ce0:	f7 01       	movw	r30, r14
    1ce2:	80 81       	ld	r24, Z
    1ce4:	91 81       	ldd	r25, Z+1	; 0x01
    1ce6:	82 0f       	add	r24, r18
    1ce8:	93 1f       	adc	r25, r19
		else return f;
	}
}*/

uint16_t EncoderHandler::clip_u16t(uint16_t v, uint16_t mn, uint16_t mx){
	if(v < mn){
    1cea:	80 17       	cp	r24, r16
    1cec:	91 07       	cpc	r25, r17
    1cee:	28 f0       	brcs	.+10     	; 0x1cfa <_ZN14EncoderHandler13setValue_u16tEPjjj+0x60>
    1cf0:	c8 16       	cp	r12, r24
    1cf2:	d9 06       	cpc	r13, r25
    1cf4:	18 f4       	brcc	.+6      	; 0x1cfc <_ZN14EncoderHandler13setValue_u16tEPjjj+0x62>
    1cf6:	c6 01       	movw	r24, r12
    1cf8:	01 c0       	rjmp	.+2      	; 0x1cfc <_ZN14EncoderHandler13setValue_u16tEPjjj+0x62>
    1cfa:	c8 01       	movw	r24, r16
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_u16t(button);
		*v = clip_u16t(*v, min, max);
    1cfc:	f7 01       	movw	r30, r14
    1cfe:	91 83       	std	Z+1, r25	; 0x01
    1d00:	80 83       	st	Z, r24
		changed = true;
    1d02:	81 e0       	ldi	r24, 0x01	; 1
    1d04:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1d06:	8b 89       	ldd	r24, Y+19	; 0x13
    1d08:	80 32       	cpi	r24, 0x20	; 32
    1d0a:	d1 f4       	brne	.+52     	; 0x1d40 <_ZN14EncoderHandler13setValue_u16tEPjjj+0xa6>
	if(m) return nMulF;
	else return bMulF;
}*/

uint16_t EncoderHandler::returnMul_u16t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_u16t;
    1d0c:	8c 89       	ldd	r24, Y+20	; 0x14
    1d0e:	88 23       	and	r24, r24
    1d10:	19 f0       	breq	.+6      	; 0x1d18 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x7e>
    1d12:	29 85       	ldd	r18, Y+9	; 0x09
    1d14:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d16:	02 c0       	rjmp	.+4      	; 0x1d1c <_ZN14EncoderHandler13setValue_u16tEPjjj+0x82>
	else return bMul_u16t;
    1d18:	2f 81       	ldd	r18, Y+7	; 0x07
    1d1a:	38 85       	ldd	r19, Y+8	; 0x08
		*v += returnMul_u16t(button);
		*v = clip_u16t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_u16t(button);
    1d1c:	f7 01       	movw	r30, r14
    1d1e:	80 81       	ld	r24, Z
    1d20:	91 81       	ldd	r25, Z+1	; 0x01
    1d22:	82 1b       	sub	r24, r18
    1d24:	93 0b       	sbc	r25, r19
		else return f;
	}
}*/

uint16_t EncoderHandler::clip_u16t(uint16_t v, uint16_t mn, uint16_t mx){
	if(v < mn){
    1d26:	80 17       	cp	r24, r16
    1d28:	91 07       	cpc	r25, r17
    1d2a:	28 f0       	brcs	.+10     	; 0x1d36 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x9c>
    1d2c:	86 01       	movw	r16, r12
    1d2e:	8c 15       	cp	r24, r12
    1d30:	9d 05       	cpc	r25, r13
    1d32:	08 f4       	brcc	.+2      	; 0x1d36 <_ZN14EncoderHandler13setValue_u16tEPjjj+0x9c>
    1d34:	8c 01       	movw	r16, r24
		*v = clip_u16t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_u16t(button);
		*v = clip_u16t(*v, min, max);
    1d36:	f7 01       	movw	r30, r14
    1d38:	11 83       	std	Z+1, r17	; 0x01
    1d3a:	00 83       	st	Z, r16
		changed = true;
    1d3c:	81 e0       	ldi	r24, 0x01	; 1
    1d3e:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1d40:	df 91       	pop	r29
    1d42:	cf 91       	pop	r28
    1d44:	1f 91       	pop	r17
    1d46:	0f 91       	pop	r16
    1d48:	ff 90       	pop	r15
    1d4a:	ef 90       	pop	r14
    1d4c:	df 90       	pop	r13
    1d4e:	cf 90       	pop	r12
    1d50:	08 95       	ret

00001d52 <_ZN14EncoderHandler12setValue_s8tEPaaa>:

void EncoderHandler::setValue_s8t(int8_t* v, int8_t min, int8_t max) {
    1d52:	ef 92       	push	r14
    1d54:	ff 92       	push	r15
    1d56:	0f 93       	push	r16
    1d58:	1f 93       	push	r17
    1d5a:	cf 93       	push	r28
    1d5c:	df 93       	push	r29
    1d5e:	ec 01       	movw	r28, r24
    1d60:	7b 01       	movw	r14, r22
    1d62:	14 2f       	mov	r17, r20
    1d64:	02 2f       	mov	r16, r18
	button = digitalRead(bPin);
    1d66:	8e 81       	ldd	r24, Y+6	; 0x06
    1d68:	0e 94 52 49 	call	0x92a4	; 0x92a4 <digitalRead>
    1d6c:	21 e0       	ldi	r18, 0x01	; 1
    1d6e:	89 2b       	or	r24, r25
    1d70:	09 f4       	brne	.+2      	; 0x1d74 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x22>
    1d72:	20 e0       	ldi	r18, 0x00	; 0
    1d74:	2c 8b       	std	Y+20, r18	; 0x14
	
	result = enc->process();
    1d76:	8c 81       	ldd	r24, Y+4	; 0x04
    1d78:	9d 81       	ldd	r25, Y+5	; 0x05
    1d7a:	0e 94 0c 1a 	call	0x3418	; 0x3418 <_ZN6Rotary7processEv>
    1d7e:	8b 8b       	std	Y+19, r24	; 0x13
	if(result == DIR_CW){
    1d80:	80 31       	cpi	r24, 0x10	; 16
    1d82:	a1 f4       	brne	.+40     	; 0x1dac <_ZN14EncoderHandler12setValue_s8tEPaaa+0x5a>
	if(m) return nMul_u8t;
	else return bMul_u8t;
}

int8_t EncoderHandler::returnMul_s8t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_s8t;
    1d84:	8c 89       	ldd	r24, Y+20	; 0x14
    1d86:	88 23       	and	r24, r24
    1d88:	11 f0       	breq	.+4      	; 0x1d8e <_ZN14EncoderHandler12setValue_s8tEPaaa+0x3c>
    1d8a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d8c:	01 c0       	rjmp	.+2      	; 0x1d90 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x3e>
	else return bMul_s8t;
    1d8e:	9d 85       	ldd	r25, Y+13	; 0x0d
void EncoderHandler::setValue_s8t(int8_t* v, int8_t min, int8_t max) {
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_s8t(button);
    1d90:	f7 01       	movw	r30, r14
    1d92:	80 81       	ld	r24, Z
    1d94:	89 0f       	add	r24, r25
		else return v;
	}
}

int8_t EncoderHandler::clip_s8t(int8_t v, int8_t mn, int8_t mx){
	if(v < mn){
    1d96:	81 17       	cp	r24, r17
    1d98:	24 f0       	brlt	.+8      	; 0x1da2 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x50>
    1d9a:	08 17       	cp	r16, r24
    1d9c:	1c f4       	brge	.+6      	; 0x1da4 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x52>
    1d9e:	80 2f       	mov	r24, r16
    1da0:	01 c0       	rjmp	.+2      	; 0x1da4 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x52>
    1da2:	81 2f       	mov	r24, r17
	button = digitalRead(bPin);
	
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_s8t(button);
		*v = clip_s8t(*v, min, max);
    1da4:	f7 01       	movw	r30, r14
    1da6:	80 83       	st	Z, r24
		changed = true;
    1da8:	81 e0       	ldi	r24, 0x01	; 1
    1daa:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1dac:	8b 89       	ldd	r24, Y+19	; 0x13
    1dae:	80 32       	cpi	r24, 0x20	; 32
    1db0:	99 f4       	brne	.+38     	; 0x1dd8 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x86>
	if(m) return nMul_u8t;
	else return bMul_u8t;
}

int8_t EncoderHandler::returnMul_s8t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_s8t;
    1db2:	8c 89       	ldd	r24, Y+20	; 0x14
    1db4:	88 23       	and	r24, r24
    1db6:	11 f0       	breq	.+4      	; 0x1dbc <_ZN14EncoderHandler12setValue_s8tEPaaa+0x6a>
    1db8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1dba:	01 c0       	rjmp	.+2      	; 0x1dbe <_ZN14EncoderHandler12setValue_s8tEPaaa+0x6c>
	else return bMul_s8t;
    1dbc:	9d 85       	ldd	r25, Y+13	; 0x0d
		*v += returnMul_s8t(button);
		*v = clip_s8t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_s8t(button);
    1dbe:	f7 01       	movw	r30, r14
    1dc0:	80 81       	ld	r24, Z
    1dc2:	89 1b       	sub	r24, r25
		else return v;
	}
}

int8_t EncoderHandler::clip_s8t(int8_t v, int8_t mn, int8_t mx){
	if(v < mn){
    1dc4:	81 17       	cp	r24, r17
    1dc6:	24 f0       	brlt	.+8      	; 0x1dd0 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x7e>
    1dc8:	10 2f       	mov	r17, r16
    1dca:	80 17       	cp	r24, r16
    1dcc:	0c f4       	brge	.+2      	; 0x1dd0 <_ZN14EncoderHandler12setValue_s8tEPaaa+0x7e>
    1dce:	18 2f       	mov	r17, r24
		*v = clip_s8t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_s8t(button);
		*v = clip_s8t(*v, min, max);
    1dd0:	f7 01       	movw	r30, r14
    1dd2:	10 83       	st	Z, r17
		changed = true;
    1dd4:	81 e0       	ldi	r24, 0x01	; 1
    1dd6:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1dd8:	df 91       	pop	r29
    1dda:	cf 91       	pop	r28
    1ddc:	1f 91       	pop	r17
    1dde:	0f 91       	pop	r16
    1de0:	ff 90       	pop	r15
    1de2:	ef 90       	pop	r14
    1de4:	08 95       	ret

00001de6 <_ZN14EncoderHandler12setValue_u8tEPhhh>:

void EncoderHandler::setValue_u8t(uint8_t* v, uint8_t min, uint8_t max) {
    1de6:	ef 92       	push	r14
    1de8:	ff 92       	push	r15
    1dea:	0f 93       	push	r16
    1dec:	1f 93       	push	r17
    1dee:	cf 93       	push	r28
    1df0:	df 93       	push	r29
    1df2:	ec 01       	movw	r28, r24
    1df4:	7b 01       	movw	r14, r22
    1df6:	14 2f       	mov	r17, r20
    1df8:	02 2f       	mov	r16, r18
	button = digitalRead(bPin);
    1dfa:	8e 81       	ldd	r24, Y+6	; 0x06
    1dfc:	0e 94 52 49 	call	0x92a4	; 0x92a4 <digitalRead>
    1e00:	21 e0       	ldi	r18, 0x01	; 1
    1e02:	89 2b       	or	r24, r25
    1e04:	09 f4       	brne	.+2      	; 0x1e08 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x22>
    1e06:	20 e0       	ldi	r18, 0x00	; 0
    1e08:	2c 8b       	std	Y+20, r18	; 0x14
	result = enc->process();
    1e0a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e0c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e0e:	0e 94 0c 1a 	call	0x3418	; 0x3418 <_ZN6Rotary7processEv>
    1e12:	8b 8b       	std	Y+19, r24	; 0x13
	if(result == DIR_CW){
    1e14:	80 31       	cpi	r24, 0x10	; 16
    1e16:	a1 f4       	brne	.+40     	; 0x1e40 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x5a>
	if(m) return nMul_u16t;
	else return bMul_u16t;
}

uint8_t EncoderHandler::returnMul_u8t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_u8t;
    1e18:	8c 89       	ldd	r24, Y+20	; 0x14
    1e1a:	88 23       	and	r24, r24
    1e1c:	11 f0       	breq	.+4      	; 0x1e22 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x3c>
    1e1e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e20:	01 c0       	rjmp	.+2      	; 0x1e24 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x3e>
	else return bMul_u8t;
    1e22:	9b 85       	ldd	r25, Y+11	; 0x0b

void EncoderHandler::setValue_u8t(uint8_t* v, uint8_t min, uint8_t max) {
	button = digitalRead(bPin);
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_u8t(button);
    1e24:	f7 01       	movw	r30, r14
    1e26:	80 81       	ld	r24, Z
    1e28:	89 0f       	add	r24, r25
		else return v;
	}
}

uint8_t EncoderHandler::clip_u8t(uint8_t v, uint8_t mn, uint8_t mx){
	if(v < mn){
    1e2a:	81 17       	cp	r24, r17
    1e2c:	20 f0       	brcs	.+8      	; 0x1e36 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x50>
    1e2e:	08 17       	cp	r16, r24
    1e30:	18 f4       	brcc	.+6      	; 0x1e38 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x52>
    1e32:	80 2f       	mov	r24, r16
    1e34:	01 c0       	rjmp	.+2      	; 0x1e38 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x52>
    1e36:	81 2f       	mov	r24, r17
void EncoderHandler::setValue_u8t(uint8_t* v, uint8_t min, uint8_t max) {
	button = digitalRead(bPin);
	result = enc->process();
	if(result == DIR_CW){
		*v += returnMul_u8t(button);
		*v = clip_u8t(*v, min, max);
    1e38:	f7 01       	movw	r30, r14
    1e3a:	80 83       	st	Z, r24
		changed = true;
    1e3c:	81 e0       	ldi	r24, 0x01	; 1
    1e3e:	8b 83       	std	Y+3, r24	; 0x03
	}
	if(result == DIR_CCW){
    1e40:	8b 89       	ldd	r24, Y+19	; 0x13
    1e42:	80 32       	cpi	r24, 0x20	; 32
    1e44:	99 f4       	brne	.+38     	; 0x1e6c <_ZN14EncoderHandler12setValue_u8tEPhhh+0x86>
	if(m) return nMul_u16t;
	else return bMul_u16t;
}

uint8_t EncoderHandler::returnMul_u8t(boolean m){ // mode, bMul, nMul
	if(m) return nMul_u8t;
    1e46:	8c 89       	ldd	r24, Y+20	; 0x14
    1e48:	88 23       	and	r24, r24
    1e4a:	11 f0       	breq	.+4      	; 0x1e50 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x6a>
    1e4c:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e4e:	01 c0       	rjmp	.+2      	; 0x1e52 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x6c>
	else return bMul_u8t;
    1e50:	9b 85       	ldd	r25, Y+11	; 0x0b
		*v += returnMul_u8t(button);
		*v = clip_u8t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_u8t(button);
    1e52:	f7 01       	movw	r30, r14
    1e54:	80 81       	ld	r24, Z
    1e56:	89 1b       	sub	r24, r25
		else return v;
	}
}

uint8_t EncoderHandler::clip_u8t(uint8_t v, uint8_t mn, uint8_t mx){
	if(v < mn){
    1e58:	81 17       	cp	r24, r17
    1e5a:	20 f0       	brcs	.+8      	; 0x1e64 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x7e>
    1e5c:	10 2f       	mov	r17, r16
    1e5e:	80 17       	cp	r24, r16
    1e60:	08 f4       	brcc	.+2      	; 0x1e64 <_ZN14EncoderHandler12setValue_u8tEPhhh+0x7e>
    1e62:	18 2f       	mov	r17, r24
		*v = clip_u8t(*v, min, max);
		changed = true;
	}
	if(result == DIR_CCW){
		*v -= returnMul_u8t(button);
		*v = clip_u8t(*v, min, max);
    1e64:	f7 01       	movw	r30, r14
    1e66:	10 83       	st	Z, r17
		changed = true;
    1e68:	81 e0       	ldi	r24, 0x01	; 1
    1e6a:	8b 83       	std	Y+3, r24	; 0x03
	}
	//changed = false; // --> set from outside (where?)
}
    1e6c:	df 91       	pop	r29
    1e6e:	cf 91       	pop	r28
    1e70:	1f 91       	pop	r17
    1e72:	0f 91       	pop	r16
    1e74:	ff 90       	pop	r15
    1e76:	ef 90       	pop	r14
    1e78:	08 95       	ret

00001e7a <_ZN4MenuC1Ev>:
 * 
 * This class draws the upper menu as well as the bottom labels and associated parameters
 */


Menu::Menu() {
    1e7a:	fc 01       	movw	r30, r24

class Parameters {
public: 
	Parameters(){};
	
    typedef struct {
    1e7c:	10 82       	st	Z, r1
    1e7e:	11 82       	std	Z+1, r1	; 0x01
    1e80:	8c ed       	ldi	r24, 0xDC	; 220
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	93 83       	std	Z+3, r25	; 0x03
    1e86:	82 83       	std	Z+2, r24	; 0x02
    1e88:	14 82       	std	Z+4, r1	; 0x04
    1e8a:	80 e9       	ldi	r24, 0x90	; 144
    1e8c:	91 e0       	ldi	r25, 0x01	; 1
    1e8e:	96 83       	std	Z+6, r25	; 0x06
    1e90:	85 83       	std	Z+5, r24	; 0x05
    1e92:	17 82       	std	Z+7, r1	; 0x07
    1e94:	80 e4       	ldi	r24, 0x40	; 64
    1e96:	9f e1       	ldi	r25, 0x1F	; 31
    1e98:	91 87       	std	Z+9, r25	; 0x09
    1e9a:	80 87       	std	Z+8, r24	; 0x08
    1e9c:	88 e2       	ldi	r24, 0x28	; 40
    1e9e:	82 87       	std	Z+10, r24	; 0x0a
    1ea0:	13 86       	std	Z+11, r1	; 0x0b
    1ea2:	15 86       	std	Z+13, r1	; 0x0d
    1ea4:	14 86       	std	Z+12, r1	; 0x0c
    1ea6:	88 ec       	ldi	r24, 0xC8	; 200
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	97 87       	std	Z+15, r25	; 0x0f
    1eac:	86 87       	std	Z+14, r24	; 0x0e
    1eae:	84 eb       	ldi	r24, 0xB4	; 180
    1eb0:	80 8b       	std	Z+16, r24	; 0x10
    1eb2:	8a ef       	ldi	r24, 0xFA	; 250
    1eb4:	90 e0       	ldi	r25, 0x00	; 0
    1eb6:	92 8b       	std	Z+18, r25	; 0x12
    1eb8:	81 8b       	std	Z+17, r24	; 0x11
    1eba:	13 8a       	std	Z+19, r1	; 0x13
    1ebc:	14 8a       	std	Z+20, r1	; 0x14
    1ebe:	15 8a       	std	Z+21, r1	; 0x15
    1ec0:	16 8a       	std	Z+22, r1	; 0x16
    1ec2:	8f e7       	ldi	r24, 0x7F	; 127
    1ec4:	87 8b       	std	Z+23, r24	; 0x17
    1ec6:	10 8e       	std	Z+24, r1	; 0x18
    1ec8:	11 8e       	std	Z+25, r1	; 0x19
    1eca:	12 8e       	std	Z+26, r1	; 0x1a
	tWidth = (WIDTH+1)/TLABELS; // 96px
    1ecc:	80 e6       	ldi	r24, 0x60	; 96
    1ece:	83 a3       	std	Z+35, r24	; 0x23
	bWidth = (WIDTH+1)/BLABELS; // 120px
    1ed0:	88 e7       	ldi	r24, 0x78	; 120
    1ed2:	84 a3       	std	Z+36, r24	; 0x24
	height = HEIGHT/8; // 40px
    1ed4:	87 e2       	ldi	r24, 0x27	; 39
    1ed6:	85 a3       	std	Z+37, r24	; 0x25
    1ed8:	08 95       	ret

00001eda <_ZN4Menu4initEP4UTFTPhS2_PN10Parameters8params_tE>:
}

void Menu::init(UTFT* u, uint8_t* sF, uint8_t* bF, params_t* p) {
    1eda:	0f 93       	push	r16
    1edc:	1f 93       	push	r17
    1ede:	fc 01       	movw	r30, r24
	//Serial.println(p->oscFreq);
	paramsPtr = p;
    1ee0:	12 a3       	std	Z+34, r17	; 0x22
    1ee2:	01 a3       	std	Z+33, r16	; 0x21
	mLCD = u;
    1ee4:	74 8f       	std	Z+28, r23	; 0x1c
    1ee6:	63 8f       	std	Z+27, r22	; 0x1b
	sFont = sF;
    1ee8:	56 8f       	std	Z+30, r21	; 0x1e
    1eea:	45 8f       	std	Z+29, r20	; 0x1d
	bFont = bF;
    1eec:	30 a3       	std	Z+32, r19	; 0x20
    1eee:	27 8f       	std	Z+31, r18	; 0x1f
}
    1ef0:	1f 91       	pop	r17
    1ef2:	0f 91       	pop	r16
    1ef4:	08 95       	ret

00001ef6 <_ZN4Menu11drawTopMenuEv>:
void Menu::drawMenus(){
	drawBottomMenu();
	drawTopMenu();
}

void Menu::drawTopMenu() {
    1ef6:	8f 92       	push	r8
    1ef8:	9f 92       	push	r9
    1efa:	af 92       	push	r10
    1efc:	bf 92       	push	r11
    1efe:	cf 92       	push	r12
    1f00:	df 92       	push	r13
    1f02:	ef 92       	push	r14
    1f04:	ff 92       	push	r15
    1f06:	0f 93       	push	r16
    1f08:	1f 93       	push	r17
    1f0a:	cf 93       	push	r28
    1f0c:	df 93       	push	r29
    1f0e:	00 d0       	rcall	.+0      	; 0x1f10 <_ZN4Menu11drawTopMenuEv+0x1a>
    1f10:	00 d0       	rcall	.+0      	; 0x1f12 <_ZN4Menu11drawTopMenuEv+0x1c>
    1f12:	cd b7       	in	r28, 0x3d	; 61
    1f14:	de b7       	in	r29, 0x3e	; 62
    1f16:	7c 01       	movw	r14, r24
	mLCD->setFont(bFont); // set font
    1f18:	dc 01       	movw	r26, r24
    1f1a:	5f 96       	adiw	r26, 0x1f	; 31
    1f1c:	6d 91       	ld	r22, X+
    1f1e:	7c 91       	ld	r23, X
    1f20:	90 97       	sbiw	r26, 0x20	; 32
    1f22:	5b 96       	adiw	r26, 0x1b	; 27
    1f24:	8d 91       	ld	r24, X+
    1f26:	9c 91       	ld	r25, X
    1f28:	5c 97       	sbiw	r26, 0x1c	; 28
    1f2a:	0e 94 86 3f 	call	0x7f0c	; 0x7f0c <_ZN4UTFT7setFontEPh>
	// draw outer rect
	mLCD->setColor(COLOR);
    1f2e:	60 e0       	ldi	r22, 0x00	; 0
    1f30:	78 ef       	ldi	r23, 0xF8	; 248
    1f32:	f7 01       	movw	r30, r14
    1f34:	83 8d       	ldd	r24, Z+27	; 0x1b
    1f36:	94 8d       	ldd	r25, Z+28	; 0x1c
    1f38:	0e 94 ba 36 	call	0x6d74	; 0x6d74 <_ZN4UTFT8setColorEj>
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);
    1f3c:	d7 01       	movw	r26, r14
    1f3e:	95 96       	adiw	r26, 0x25	; 37
    1f40:	0c 91       	ld	r16, X
    1f42:	95 97       	sbiw	r26, 0x25	; 37
    1f44:	10 e0       	ldi	r17, 0x00	; 0
    1f46:	2f ed       	ldi	r18, 0xDF	; 223
    1f48:	31 e0       	ldi	r19, 0x01	; 1
    1f4a:	40 e0       	ldi	r20, 0x00	; 0
    1f4c:	50 e0       	ldi	r21, 0x00	; 0
    1f4e:	60 e0       	ldi	r22, 0x00	; 0
    1f50:	70 e0       	ldi	r23, 0x00	; 0
    1f52:	5b 96       	adiw	r26, 0x1b	; 27
    1f54:	8d 91       	ld	r24, X+
    1f56:	9c 91       	ld	r25, X
    1f58:	5c 97       	sbiw	r26, 0x1c	; 28
    1f5a:	0e 94 94 37 	call	0x6f28	; 0x6f28 <_ZN4UTFT8fillRectEiiii>
    1f5e:	8c e3       	ldi	r24, 0x3C	; 60
    1f60:	a8 2e       	mov	r10, r24
    1f62:	85 e0       	ldi	r24, 0x05	; 5
    1f64:	b8 2e       	mov	r11, r24


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
    1f66:	c1 2c       	mov	r12, r1
    1f68:	d1 2c       	mov	r13, r1
		if (i != paramsPtr->menu){ // print all but selected
    1f6a:	d7 01       	movw	r26, r14
    1f6c:	91 96       	adiw	r26, 0x21	; 33
    1f6e:	ed 91       	ld	r30, X+
    1f70:	fc 91       	ld	r31, X
    1f72:	92 97       	sbiw	r26, 0x22	; 34
    1f74:	20 81       	ld	r18, Z
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	5b 96       	adiw	r26, 0x1b	; 27
    1f7a:	8d 91       	ld	r24, X+
    1f7c:	9c 91       	ld	r25, X
    1f7e:	5c 97       	sbiw	r26, 0x1c	; 28
    1f80:	f6 01       	movw	r30, r12
    1f82:	31 96       	adiw	r30, 0x01	; 1
    1f84:	4f 01       	movw	r8, r30
			mLCD->setColor(BKGCOLOR);
    1f86:	60 e0       	ldi	r22, 0x00	; 0
    1f88:	70 e0       	ldi	r23, 0x00	; 0
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
		if (i != paramsPtr->menu){ // print all but selected
    1f8a:	2c 15       	cp	r18, r12
    1f8c:	3d 05       	cpc	r19, r13
    1f8e:	09 f4       	brne	.+2      	; 0x1f92 <_ZN4Menu11drawTopMenuEv+0x9c>
    1f90:	56 c0       	rjmp	.+172    	; 0x203e <_ZN4Menu11drawTopMenuEv+0x148>
			mLCD->setColor(BKGCOLOR);
    1f92:	0e 94 ba 36 	call	0x6d74	; 0x6d74 <_ZN4UTFT8setColorEj>
			//              start X                 start Y        end X                      end Y
			mLCD->fillRect( (tWidth*i)+STROKEWEIGHT, STROKEWEIGHT, (tWidth*(i+1))-STROKEWEIGHT, height-STROKEWEIGHT );
    1f96:	d7 01       	movw	r26, r14
    1f98:	93 96       	adiw	r26, 0x23	; 35
    1f9a:	8c 91       	ld	r24, X
    1f9c:	93 97       	sbiw	r26, 0x23	; 35
    1f9e:	90 e0       	ldi	r25, 0x00	; 0
    1fa0:	95 96       	adiw	r26, 0x25	; 37
    1fa2:	0c 91       	ld	r16, X
    1fa4:	95 97       	sbiw	r26, 0x25	; 37
    1fa6:	10 e0       	ldi	r17, 0x00	; 0
    1fa8:	03 50       	subi	r16, 0x03	; 3
    1faa:	11 09       	sbc	r17, r1
    1fac:	88 9e       	mul	r8, r24
    1fae:	90 01       	movw	r18, r0
    1fb0:	89 9e       	mul	r8, r25
    1fb2:	30 0d       	add	r19, r0
    1fb4:	98 9e       	mul	r9, r24
    1fb6:	30 0d       	add	r19, r0
    1fb8:	11 24       	eor	r1, r1
    1fba:	23 50       	subi	r18, 0x03	; 3
    1fbc:	31 09       	sbc	r19, r1
    1fbe:	8c 9d       	mul	r24, r12
    1fc0:	b0 01       	movw	r22, r0
    1fc2:	8d 9d       	mul	r24, r13
    1fc4:	70 0d       	add	r23, r0
    1fc6:	9c 9d       	mul	r25, r12
    1fc8:	70 0d       	add	r23, r0
    1fca:	11 24       	eor	r1, r1
    1fcc:	6d 5f       	subi	r22, 0xFD	; 253
    1fce:	7f 4f       	sbci	r23, 0xFF	; 255
    1fd0:	43 e0       	ldi	r20, 0x03	; 3
    1fd2:	50 e0       	ldi	r21, 0x00	; 0
    1fd4:	5b 96       	adiw	r26, 0x1b	; 27
    1fd6:	8d 91       	ld	r24, X+
    1fd8:	9c 91       	ld	r25, X
    1fda:	5c 97       	sbiw	r26, 0x1c	; 28
    1fdc:	0e 94 94 37 	call	0x6f28	; 0x6f28 <_ZN4UTFT8fillRectEiiii>
			mLCD->setColor(COLOR);
    1fe0:	60 e0       	ldi	r22, 0x00	; 0
    1fe2:	78 ef       	ldi	r23, 0xF8	; 248
    1fe4:	f7 01       	movw	r30, r14
    1fe6:	83 8d       	ldd	r24, Z+27	; 0x1b
    1fe8:	94 8d       	ldd	r25, Z+28	; 0x1c
    1fea:	0e 94 ba 36 	call	0x6d74	; 0x6d74 <_ZN4UTFT8setColorEj>
			mLCD->setBackColor(BKGCOLOR);
    1fee:	40 e0       	ldi	r20, 0x00	; 0
    1ff0:	50 e0       	ldi	r21, 0x00	; 0
    1ff2:	ba 01       	movw	r22, r20
    1ff4:	d7 01       	movw	r26, r14
    1ff6:	5b 96       	adiw	r26, 0x1b	; 27
    1ff8:	8d 91       	ld	r24, X+
    1ffa:	9c 91       	ld	r25, X
    1ffc:	5c 97       	sbiw	r26, 0x1c	; 28
    1ffe:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <_ZN4UTFT12setBackColorEm>
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
    2002:	f7 01       	movw	r30, r14
    2004:	23 a1       	ldd	r18, Z+35	; 0x23
    2006:	2c 9d       	mul	r18, r12
    2008:	c0 01       	movw	r24, r0
    200a:	2d 9d       	mul	r18, r13
    200c:	90 0d       	add	r25, r0
    200e:	11 24       	eor	r1, r1
    2010:	6c 01       	movw	r12, r24
    2012:	f3 e0       	ldi	r31, 0x03	; 3
    2014:	cf 0e       	add	r12, r31
    2016:	d1 1c       	adc	r13, r1
    2018:	b5 01       	movw	r22, r10
    201a:	ce 01       	movw	r24, r28
    201c:	01 96       	adiw	r24, 0x01	; 1
    201e:	0e 94 0a 4a 	call	0x9414	; 0x9414 <_ZN6StringC1ERKS_>
    2022:	00 e0       	ldi	r16, 0x00	; 0
    2024:	10 e0       	ldi	r17, 0x00	; 0
    2026:	2a e0       	ldi	r18, 0x0A	; 10
    2028:	30 e0       	ldi	r19, 0x00	; 0
    202a:	a6 01       	movw	r20, r12
    202c:	be 01       	movw	r22, r28
    202e:	6f 5f       	subi	r22, 0xFF	; 255
    2030:	7f 4f       	sbci	r23, 0xFF	; 255
    2032:	d7 01       	movw	r26, r14
    2034:	5b 96       	adiw	r26, 0x1b	; 27
    2036:	8d 91       	ld	r24, X+
    2038:	9c 91       	ld	r25, X
    203a:	5c 97       	sbiw	r26, 0x1c	; 28
    203c:	27 c0       	rjmp	.+78     	; 0x208c <_ZN4Menu11drawTopMenuEv+0x196>
		}
		else{ // print selected
			mLCD->setColor(BKGCOLOR);
    203e:	0e 94 ba 36 	call	0x6d74	; 0x6d74 <_ZN4UTFT8setColorEj>
			mLCD->setBackColor(COLOR);
    2042:	40 e0       	ldi	r20, 0x00	; 0
    2044:	58 ef       	ldi	r21, 0xF8	; 248
    2046:	6f ef       	ldi	r22, 0xFF	; 255
    2048:	7f ef       	ldi	r23, 0xFF	; 255
    204a:	f7 01       	movw	r30, r14
    204c:	83 8d       	ldd	r24, Z+27	; 0x1b
    204e:	94 8d       	ldd	r25, Z+28	; 0x1c
    2050:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <_ZN4UTFT12setBackColorEm>
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
    2054:	d7 01       	movw	r26, r14
    2056:	93 96       	adiw	r26, 0x23	; 35
    2058:	2c 91       	ld	r18, X
    205a:	2c 9d       	mul	r18, r12
    205c:	c0 01       	movw	r24, r0
    205e:	2d 9d       	mul	r18, r13
    2060:	90 0d       	add	r25, r0
    2062:	11 24       	eor	r1, r1
    2064:	6c 01       	movw	r12, r24
    2066:	b3 e0       	ldi	r27, 0x03	; 3
    2068:	cb 0e       	add	r12, r27
    206a:	d1 1c       	adc	r13, r1
    206c:	b5 01       	movw	r22, r10
    206e:	ce 01       	movw	r24, r28
    2070:	01 96       	adiw	r24, 0x01	; 1
    2072:	0e 94 0a 4a 	call	0x9414	; 0x9414 <_ZN6StringC1ERKS_>
    2076:	00 e0       	ldi	r16, 0x00	; 0
    2078:	10 e0       	ldi	r17, 0x00	; 0
    207a:	2a e0       	ldi	r18, 0x0A	; 10
    207c:	30 e0       	ldi	r19, 0x00	; 0
    207e:	a6 01       	movw	r20, r12
    2080:	be 01       	movw	r22, r28
    2082:	6f 5f       	subi	r22, 0xFF	; 255
    2084:	7f 4f       	sbci	r23, 0xFF	; 255
    2086:	f7 01       	movw	r30, r14
    2088:	83 8d       	ldd	r24, Z+27	; 0x1b
    208a:	94 8d       	ldd	r25, Z+28	; 0x1c
    208c:	0e 94 9e 3c 	call	0x793c	; 0x793c <_ZN4UTFT5printE6Stringiii>
    2090:	ce 01       	movw	r24, r28
    2092:	01 96       	adiw	r24, 0x01	; 1
    2094:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	mLCD->setColor(COLOR);
	mLCD->fillRect(ORIGIN, ORIGIN, WIDTH, height);


	// draw inner rects and labels
	for(int i = 0; i < TLABELS; i++){
    2098:	64 01       	movw	r12, r8
    209a:	f6 e0       	ldi	r31, 0x06	; 6
    209c:	af 0e       	add	r10, r31
    209e:	b1 1c       	adc	r11, r1
    20a0:	25 e0       	ldi	r18, 0x05	; 5
    20a2:	82 16       	cp	r8, r18
    20a4:	91 04       	cpc	r9, r1
    20a6:	09 f0       	breq	.+2      	; 0x20aa <_ZN4Menu11drawTopMenuEv+0x1b4>
    20a8:	60 cf       	rjmp	.-320    	; 0x1f6a <_ZN4Menu11drawTopMenuEv+0x74>
			mLCD->setColor(BKGCOLOR);
			mLCD->setBackColor(COLOR);
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
		}
	}
}
    20aa:	26 96       	adiw	r28, 0x06	; 6
    20ac:	0f b6       	in	r0, 0x3f	; 63
    20ae:	f8 94       	cli
    20b0:	de bf       	out	0x3e, r29	; 62
    20b2:	0f be       	out	0x3f, r0	; 63
    20b4:	cd bf       	out	0x3d, r28	; 61
    20b6:	df 91       	pop	r29
    20b8:	cf 91       	pop	r28
    20ba:	1f 91       	pop	r17
    20bc:	0f 91       	pop	r16
    20be:	ff 90       	pop	r15
    20c0:	ef 90       	pop	r14
    20c2:	df 90       	pop	r13
    20c4:	cf 90       	pop	r12
    20c6:	bf 90       	pop	r11
    20c8:	af 90       	pop	r10
    20ca:	9f 90       	pop	r9
    20cc:	8f 90       	pop	r8
    20ce:	08 95       	ret

000020d0 <_ZN4Menu16drawBottomLabelsEPK6String>:
		break;
		default:
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
    20d0:	4f 92       	push	r4
    20d2:	5f 92       	push	r5
    20d4:	6f 92       	push	r6
    20d6:	7f 92       	push	r7
    20d8:	8f 92       	push	r8
    20da:	9f 92       	push	r9
    20dc:	af 92       	push	r10
    20de:	bf 92       	push	r11
    20e0:	cf 92       	push	r12
    20e2:	df 92       	push	r13
    20e4:	ef 92       	push	r14
    20e6:	ff 92       	push	r15
    20e8:	0f 93       	push	r16
    20ea:	1f 93       	push	r17
    20ec:	cf 93       	push	r28
    20ee:	df 93       	push	r29
    20f0:	00 d0       	rcall	.+0      	; 0x20f2 <_ZN4Menu16drawBottomLabelsEPK6String+0x22>
    20f2:	00 d0       	rcall	.+0      	; 0x20f4 <_ZN4Menu16drawBottomLabelsEPK6String+0x24>
    20f4:	cd b7       	in	r28, 0x3d	; 61
    20f6:	de b7       	in	r29, 0x3e	; 62
    20f8:	7c 01       	movw	r14, r24
    20fa:	5b 01       	movw	r10, r22
	for(int i = 0; i < BLABELS; i++){
    20fc:	c1 2c       	mov	r12, r1
    20fe:	d1 2c       	mov	r13, r1
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
    2100:	8d e4       	ldi	r24, 0x4D	; 77
    2102:	48 2e       	mov	r4, r24
    2104:	55 24       	eor	r5, r5
    2106:	53 94       	inc	r5
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
	for(int i = 0; i < BLABELS; i++){
		mLCD->setColor(COLOR);
    2108:	60 e0       	ldi	r22, 0x00	; 0
    210a:	78 ef       	ldi	r23, 0xF8	; 248
    210c:	f7 01       	movw	r30, r14
    210e:	83 8d       	ldd	r24, Z+27	; 0x1b
    2110:	94 8d       	ldd	r25, Z+28	; 0x1c
    2112:	0e 94 ba 36 	call	0x6d74	; 0x6d74 <_ZN4UTFT8setColorEj>
		mLCD->setBackColor(BKGCOLOR);
    2116:	40 e0       	ldi	r20, 0x00	; 0
    2118:	50 e0       	ldi	r21, 0x00	; 0
    211a:	ba 01       	movw	r22, r20
    211c:	f7 01       	movw	r30, r14
    211e:	83 8d       	ldd	r24, Z+27	; 0x1b
    2120:	94 8d       	ldd	r25, Z+28	; 0x1c
    2122:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <_ZN4UTFT12setBackColorEm>
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
    2126:	f7 01       	movw	r30, r14
    2128:	85 a1       	ldd	r24, Z+37	; 0x25
    212a:	32 01       	movw	r6, r4
    212c:	68 1a       	sub	r6, r24
    212e:	71 08       	sbc	r7, r1
    2130:	84 a1       	ldd	r24, Z+36	; 0x24
    2132:	8c 9d       	mul	r24, r12
    2134:	40 01       	movw	r8, r0
    2136:	8d 9d       	mul	r24, r13
    2138:	90 0c       	add	r9, r0
    213a:	11 24       	eor	r1, r1
    213c:	f5 e0       	ldi	r31, 0x05	; 5
    213e:	8f 0e       	add	r8, r31
    2140:	91 1c       	adc	r9, r1
    2142:	b5 01       	movw	r22, r10
    2144:	ce 01       	movw	r24, r28
    2146:	01 96       	adiw	r24, 0x01	; 1
    2148:	0e 94 0a 4a 	call	0x9414	; 0x9414 <_ZN6StringC1ERKS_>
    214c:	00 e0       	ldi	r16, 0x00	; 0
    214e:	10 e0       	ldi	r17, 0x00	; 0
    2150:	93 01       	movw	r18, r6
    2152:	a4 01       	movw	r20, r8
    2154:	be 01       	movw	r22, r28
    2156:	6f 5f       	subi	r22, 0xFF	; 255
    2158:	7f 4f       	sbci	r23, 0xFF	; 255
    215a:	f7 01       	movw	r30, r14
    215c:	83 8d       	ldd	r24, Z+27	; 0x1b
    215e:	94 8d       	ldd	r25, Z+28	; 0x1c
    2160:	0e 94 9e 3c 	call	0x793c	; 0x793c <_ZN4UTFT5printE6Stringiii>
    2164:	ce 01       	movw	r24, r28
    2166:	01 96       	adiw	r24, 0x01	; 1
    2168:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
		default:
		break;
	}
}
void Menu::drawBottomLabels(const String s[4]){
	for(int i = 0; i < BLABELS; i++){
    216c:	ff ef       	ldi	r31, 0xFF	; 255
    216e:	cf 1a       	sub	r12, r31
    2170:	df 0a       	sbc	r13, r31
    2172:	86 e0       	ldi	r24, 0x06	; 6
    2174:	a8 0e       	add	r10, r24
    2176:	b1 1c       	adc	r11, r1
    2178:	e4 e0       	ldi	r30, 0x04	; 4
    217a:	ce 16       	cp	r12, r30
    217c:	d1 04       	cpc	r13, r1
    217e:	21 f6       	brne	.-120    	; 0x2108 <_ZN4Menu16drawBottomLabelsEPK6String+0x38>
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
	}
}
    2180:	26 96       	adiw	r28, 0x06	; 6
    2182:	0f b6       	in	r0, 0x3f	; 63
    2184:	f8 94       	cli
    2186:	de bf       	out	0x3e, r29	; 62
    2188:	0f be       	out	0x3f, r0	; 63
    218a:	cd bf       	out	0x3d, r28	; 61
    218c:	df 91       	pop	r29
    218e:	cf 91       	pop	r28
    2190:	1f 91       	pop	r17
    2192:	0f 91       	pop	r16
    2194:	ff 90       	pop	r15
    2196:	ef 90       	pop	r14
    2198:	df 90       	pop	r13
    219a:	cf 90       	pop	r12
    219c:	bf 90       	pop	r11
    219e:	af 90       	pop	r10
    21a0:	9f 90       	pop	r9
    21a2:	8f 90       	pop	r8
    21a4:	7f 90       	pop	r7
    21a6:	6f 90       	pop	r6
    21a8:	5f 90       	pop	r5
    21aa:	4f 90       	pop	r4
    21ac:	08 95       	ret

000021ae <_ZN4Menu14drawBottomMenuEv>:
			mLCD->print(tmLabels[i], (tWidth*i)+STROKEWEIGHT, 10);
		}
	}
}

void Menu::drawBottomMenu() {
    21ae:	cf 92       	push	r12
    21b0:	df 92       	push	r13
    21b2:	ef 92       	push	r14
    21b4:	ff 92       	push	r15
    21b6:	0f 93       	push	r16
    21b8:	1f 93       	push	r17
    21ba:	cf 93       	push	r28
    21bc:	df 93       	push	r29
    21be:	ec 01       	movw	r28, r24
	mLCD->setFont(sFont); // set font
    21c0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    21c2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    21c4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21c6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21c8:	0e 94 86 3f 	call	0x7f0c	; 0x7f0c <_ZN4UTFT7setFontEPh>
	// draw outer rect
	mLCD->setColor(COLOR);
    21cc:	60 e0       	ldi	r22, 0x00	; 0
    21ce:	78 ef       	ldi	r23, 0xF8	; 248
    21d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21d4:	0e 94 ba 36 	call	0x6d74	; 0x6d74 <_ZN4UTFT8setColorEj>
	mLCD->fillRect(ORIGIN, HEIGHT-height, WIDTH, HEIGHT);
    21d8:	8d a1       	ldd	r24, Y+37	; 0x25
    21da:	4f e3       	ldi	r20, 0x3F	; 63
    21dc:	51 e0       	ldi	r21, 0x01	; 1
    21de:	48 1b       	sub	r20, r24
    21e0:	51 09       	sbc	r21, r1
    21e2:	0f e3       	ldi	r16, 0x3F	; 63
    21e4:	11 e0       	ldi	r17, 0x01	; 1
    21e6:	2f ed       	ldi	r18, 0xDF	; 223
    21e8:	31 e0       	ldi	r19, 0x01	; 1
    21ea:	60 e0       	ldi	r22, 0x00	; 0
    21ec:	70 e0       	ldi	r23, 0x00	; 0
    21ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21f2:	0e 94 94 37 	call	0x6f28	; 0x6f28 <_ZN4UTFT8fillRectEiiii>
	// draw inner rects
	mLCD->setColor(BKGCOLOR);
    21f6:	60 e0       	ldi	r22, 0x00	; 0
    21f8:	70 e0       	ldi	r23, 0x00	; 0
    21fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    21fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    21fe:	0e 94 ba 36 	call	0x6d74	; 0x6d74 <_ZN4UTFT8setColorEj>
	for(int i = 0; i < BLABELS; i++){
    2202:	e1 2c       	mov	r14, r1
    2204:	f1 2c       	mov	r15, r1
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
    2206:	82 e4       	ldi	r24, 0x42	; 66
    2208:	c8 2e       	mov	r12, r24
    220a:	dd 24       	eor	r13, r13
    220c:	d3 94       	inc	r13
    220e:	8c a1       	ldd	r24, Y+36	; 0x24
    2210:	90 e0       	ldi	r25, 0x00	; 0
    2212:	2f ef       	ldi	r18, 0xFF	; 255
    2214:	e2 1a       	sub	r14, r18
    2216:	f2 0a       	sbc	r15, r18
    2218:	8e 9d       	mul	r24, r14
    221a:	b0 01       	movw	r22, r0
    221c:	8f 9d       	mul	r24, r15
    221e:	70 0d       	add	r23, r0
    2220:	9e 9d       	mul	r25, r14
    2222:	70 0d       	add	r23, r0
    2224:	11 24       	eor	r1, r1
    2226:	9b 01       	movw	r18, r22
    2228:	23 50       	subi	r18, 0x03	; 3
    222a:	31 09       	sbc	r19, r1
    222c:	4d a1       	ldd	r20, Y+37	; 0x25
    222e:	f6 01       	movw	r30, r12
    2230:	e4 1b       	sub	r30, r20
    2232:	f1 09       	sbc	r31, r1
    2234:	af 01       	movw	r20, r30
    2236:	68 1b       	sub	r22, r24
    2238:	79 0b       	sbc	r23, r25
    223a:	6d 5f       	subi	r22, 0xFD	; 253
    223c:	7f 4f       	sbci	r23, 0xFF	; 255
    223e:	0c e3       	ldi	r16, 0x3C	; 60
    2240:	11 e0       	ldi	r17, 0x01	; 1
    2242:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2244:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2246:	0e 94 94 37 	call	0x6f28	; 0x6f28 <_ZN4UTFT8fillRectEiiii>
	// draw outer rect
	mLCD->setColor(COLOR);
	mLCD->fillRect(ORIGIN, HEIGHT-height, WIDTH, HEIGHT);
	// draw inner rects
	mLCD->setColor(BKGCOLOR);
	for(int i = 0; i < BLABELS; i++){
    224a:	f4 e0       	ldi	r31, 0x04	; 4
    224c:	ef 16       	cp	r14, r31
    224e:	f1 04       	cpc	r15, r1
    2250:	f1 f6       	brne	.-68     	; 0x220e <__stack+0xf>
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
    2252:	e9 a1       	ldd	r30, Y+33	; 0x21
    2254:	fa a1       	ldd	r31, Y+34	; 0x22
    2256:	80 81       	ld	r24, Z
    2258:	82 30       	cpi	r24, 0x02	; 2
    225a:	91 f0       	breq	.+36     	; 0x2280 <__stack+0x81>
    225c:	38 f4       	brcc	.+14     	; 0x226c <__stack+0x6d>
    225e:	88 23       	and	r24, r24
    2260:	61 f0       	breq	.+24     	; 0x227a <__stack+0x7b>
    2262:	81 30       	cpi	r24, 0x01	; 1
    2264:	e1 f4       	brne	.+56     	; 0x229e <__stack+0x9f>
		case 0:
			drawBottomLabels(oscLabels);
		break;
		case 1:
			drawBottomLabels(filLabels);
    2266:	6c e0       	ldi	r22, 0x0C	; 12
    2268:	75 e0       	ldi	r23, 0x05	; 5
    226a:	0f c0       	rjmp	.+30     	; 0x228a <__stack+0x8b>
	for(int i = 0; i < BLABELS; i++){
		//              start X                  start Y                     end X                        end Y
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
    226c:	83 30       	cpi	r24, 0x03	; 3
    226e:	59 f0       	breq	.+22     	; 0x2286 <__stack+0x87>
    2270:	84 30       	cpi	r24, 0x04	; 4
    2272:	a9 f4       	brne	.+42     	; 0x229e <__stack+0x9f>
		break;
		case 3:
			drawBottomLabels(fxLabels);
		break;
		case 4:
			drawBottomLabels(settLabels);
    2274:	64 ec       	ldi	r22, 0xC4	; 196
    2276:	74 e0       	ldi	r23, 0x04	; 4
    2278:	08 c0       	rjmp	.+16     	; 0x228a <__stack+0x8b>
		mLCD->fillRect( (bWidth*i)+STROKEWEIGHT, HEIGHT-height+STROKEWEIGHT, (bWidth*(i+1))-STROKEWEIGHT, HEIGHT-STROKEWEIGHT );
	}
	// draw labels
	switch(paramsPtr->menu){
		case 0:
			drawBottomLabels(oscLabels);
    227a:	64 e2       	ldi	r22, 0x24	; 36
    227c:	75 e0       	ldi	r23, 0x05	; 5
    227e:	05 c0       	rjmp	.+10     	; 0x228a <__stack+0x8b>
		break;
		case 1:
			drawBottomLabels(filLabels);
		break;
		case 2:
			drawBottomLabels(envLabels);
    2280:	64 ef       	ldi	r22, 0xF4	; 244
    2282:	74 e0       	ldi	r23, 0x04	; 4
    2284:	02 c0       	rjmp	.+4      	; 0x228a <__stack+0x8b>
		break;
		case 3:
			drawBottomLabels(fxLabels);
    2286:	6c ed       	ldi	r22, 0xDC	; 220
    2288:	74 e0       	ldi	r23, 0x04	; 4
		break;
		case 4:
			drawBottomLabels(settLabels);
    228a:	ce 01       	movw	r24, r28
		break;
		default:
		break;
	}
}
    228c:	df 91       	pop	r29
    228e:	cf 91       	pop	r28
    2290:	1f 91       	pop	r17
    2292:	0f 91       	pop	r16
    2294:	ff 90       	pop	r15
    2296:	ef 90       	pop	r14
    2298:	df 90       	pop	r13
    229a:	cf 90       	pop	r12
		break;
		case 3:
			drawBottomLabels(fxLabels);
		break;
		case 4:
			drawBottomLabels(settLabels);
    229c:	19 cf       	rjmp	.-462    	; 0x20d0 <_ZN4Menu16drawBottomLabelsEPK6String>
		break;
		default:
		break;
	}
}
    229e:	df 91       	pop	r29
    22a0:	cf 91       	pop	r28
    22a2:	1f 91       	pop	r17
    22a4:	0f 91       	pop	r16
    22a6:	ff 90       	pop	r15
    22a8:	ef 90       	pop	r14
    22aa:	df 90       	pop	r13
    22ac:	cf 90       	pop	r12
    22ae:	08 95       	ret

000022b0 <_ZN4Menu9drawMenusEv>:
	mLCD = u;
	sFont = sF;
	bFont = bF;
}

void Menu::drawMenus(){
    22b0:	cf 93       	push	r28
    22b2:	df 93       	push	r29
    22b4:	ec 01       	movw	r28, r24
	drawBottomMenu();
    22b6:	7b df       	rcall	.-266    	; 0x21ae <_ZN4Menu14drawBottomMenuEv>
	drawTopMenu();
    22b8:	ce 01       	movw	r24, r28
}
    22ba:	df 91       	pop	r29
	bFont = bF;
}

void Menu::drawMenus(){
	drawBottomMenu();
	drawTopMenu();
    22bc:	cf 91       	pop	r28
    22be:	1b ce       	rjmp	.-970    	; 0x1ef6 <_ZN4Menu11drawTopMenuEv>

000022c0 <_ZN4Menu10drawValuesEv>:
		mLCD->setColor(COLOR);
		mLCD->setBackColor(BKGCOLOR);
		mLCD->print(s[i], (bWidth*i)+STROKEWEIGHT+2, HEIGHT-height+14);
	}
}
void Menu::drawValues() {
    22c0:	6f 92       	push	r6
    22c2:	7f 92       	push	r7
    22c4:	8f 92       	push	r8
    22c6:	9f 92       	push	r9
    22c8:	af 92       	push	r10
    22ca:	bf 92       	push	r11
    22cc:	cf 92       	push	r12
    22ce:	df 92       	push	r13
    22d0:	ef 92       	push	r14
    22d2:	ff 92       	push	r15
    22d4:	0f 93       	push	r16
    22d6:	1f 93       	push	r17
    22d8:	cf 93       	push	r28
    22da:	df 93       	push	r29
    22dc:	00 d0       	rcall	.+0      	; 0x22de <_ZN4Menu10drawValuesEv+0x1e>
    22de:	00 d0       	rcall	.+0      	; 0x22e0 <_ZN4Menu10drawValuesEv+0x20>
    22e0:	cd b7       	in	r28, 0x3d	; 61
    22e2:	de b7       	in	r29, 0x3e	; 62
    22e4:	3c 01       	movw	r6, r24
	byte i = 0;
	mLCD->setFont(sFont);
    22e6:	dc 01       	movw	r26, r24
    22e8:	5d 96       	adiw	r26, 0x1d	; 29
    22ea:	6d 91       	ld	r22, X+
    22ec:	7c 91       	ld	r23, X
    22ee:	5e 97       	sbiw	r26, 0x1e	; 30
    22f0:	5b 96       	adiw	r26, 0x1b	; 27
    22f2:	8d 91       	ld	r24, X+
    22f4:	9c 91       	ld	r25, X
    22f6:	5c 97       	sbiw	r26, 0x1c	; 28
    22f8:	0e 94 86 3f 	call	0x7f0c	; 0x7f0c <_ZN4UTFT7setFontEPh>
	mLCD->setColor(COLOR);
    22fc:	60 e0       	ldi	r22, 0x00	; 0
    22fe:	78 ef       	ldi	r23, 0xF8	; 248
    2300:	f3 01       	movw	r30, r6
    2302:	83 8d       	ldd	r24, Z+27	; 0x1b
    2304:	94 8d       	ldd	r25, Z+28	; 0x1c
    2306:	0e 94 ba 36 	call	0x6d74	; 0x6d74 <_ZN4UTFT8setColorEj>
	mLCD->setBackColor(BKGCOLOR);
    230a:	40 e0       	ldi	r20, 0x00	; 0
    230c:	50 e0       	ldi	r21, 0x00	; 0
    230e:	ba 01       	movw	r22, r20
    2310:	d3 01       	movw	r26, r6
    2312:	5b 96       	adiw	r26, 0x1b	; 27
    2314:	8d 91       	ld	r24, X+
    2316:	9c 91       	ld	r25, X
    2318:	5c 97       	sbiw	r26, 0x1c	; 28
    231a:	0e 94 be 36 	call	0x6d7c	; 0x6d7c <_ZN4UTFT12setBackColorEm>
	switch(paramsPtr->menu){
    231e:	d3 01       	movw	r26, r6
    2320:	91 96       	adiw	r26, 0x21	; 33
    2322:	ed 91       	ld	r30, X+
    2324:	fc 91       	ld	r31, X
    2326:	92 97       	sbiw	r26, 0x22	; 34
    2328:	80 81       	ld	r24, Z
    232a:	82 30       	cpi	r24, 0x02	; 2
    232c:	09 f4       	brne	.+2      	; 0x2330 <_ZN4Menu10drawValuesEv+0x70>
    232e:	8b c1       	rjmp	.+790    	; 0x2646 <_ZN4Menu10drawValuesEv+0x386>
    2330:	08 f0       	brcs	.+2      	; 0x2334 <_ZN4Menu10drawValuesEv+0x74>
    2332:	6c c0       	rjmp	.+216    	; 0x240c <_ZN4Menu10drawValuesEv+0x14c>
    2334:	88 23       	and	r24, r24
    2336:	09 f4       	brne	.+2      	; 0x233a <_ZN4Menu10drawValuesEv+0x7a>
    2338:	da c0       	rjmp	.+436    	; 0x24ee <_ZN4Menu10drawValuesEv+0x22e>
    233a:	81 30       	cpi	r24, 0x01	; 1
    233c:	09 f0       	breq	.+2      	; 0x2340 <_ZN4Menu10drawValuesEv+0x80>
    233e:	5b c2       	rjmp	.+1206   	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
			mLCD->print(waveNames[paramsPtr->lfoWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumF((float)((paramsPtr->lfoFreq)/LFOMUL), 2, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 1:
			mLCD->printNumI(paramsPtr->filType, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2340:	d3 01       	movw	r26, r6
    2342:	95 96       	adiw	r26, 0x25	; 37
    2344:	8c 91       	ld	r24, X
    2346:	95 97       	sbiw	r26, 0x25	; 37
    2348:	1d e4       	ldi	r17, 0x4D	; 77
    234a:	c1 2e       	mov	r12, r17
    234c:	dd 24       	eor	r13, r13
    234e:	d3 94       	inc	r13
    2350:	96 01       	movw	r18, r12
    2352:	28 1b       	sub	r18, r24
    2354:	31 09       	sbc	r19, r1
    2356:	94 96       	adiw	r26, 0x24	; 36
    2358:	4c 91       	ld	r20, X
    235a:	94 97       	sbiw	r26, 0x24	; 36
    235c:	46 95       	lsr	r20
    235e:	50 e0       	ldi	r21, 0x00	; 0
    2360:	4d 5f       	subi	r20, 0xFD	; 253
    2362:	5f 4f       	sbci	r21, 0xFF	; 255
    2364:	00 e2       	ldi	r16, 0x20	; 32
    2366:	e0 2e       	mov	r14, r16
    2368:	00 e0       	ldi	r16, 0x00	; 0
    236a:	10 e0       	ldi	r17, 0x00	; 0
    236c:	67 81       	ldd	r22, Z+7	; 0x07
    236e:	5b 96       	adiw	r26, 0x1b	; 27
    2370:	8d 91       	ld	r24, X+
    2372:	9c 91       	ld	r25, X
    2374:	5c 97       	sbiw	r26, 0x1c	; 28
    2376:	0e 94 89 3d 	call	0x7b12	; 0x7b12 <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->filFreq, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    237a:	f3 01       	movw	r30, r6
    237c:	84 a1       	ldd	r24, Z+36	; 0x24
    237e:	95 a1       	ldd	r25, Z+37	; 0x25
    2380:	96 01       	movw	r18, r12
    2382:	29 1b       	sub	r18, r25
    2384:	31 09       	sbc	r19, r1
    2386:	48 2f       	mov	r20, r24
    2388:	50 e0       	ldi	r21, 0x00	; 0
    238a:	4d 5f       	subi	r20, 0xFD	; 253
    238c:	5f 4f       	sbci	r21, 0xFF	; 255
    238e:	86 95       	lsr	r24
    2390:	48 0f       	add	r20, r24
    2392:	51 1d       	adc	r21, r1
    2394:	01 a0       	ldd	r0, Z+33	; 0x21
    2396:	f2 a1       	ldd	r31, Z+34	; 0x22
    2398:	e0 2d       	mov	r30, r0
    239a:	60 85       	ldd	r22, Z+8	; 0x08
    239c:	71 85       	ldd	r23, Z+9	; 0x09
    239e:	d3 01       	movw	r26, r6
    23a0:	5b 96       	adiw	r26, 0x1b	; 27
    23a2:	8d 91       	ld	r24, X+
    23a4:	9c 91       	ld	r25, X
    23a6:	5c 97       	sbiw	r26, 0x1c	; 28
    23a8:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <_ZN4UTFT9printNumIEjiiic>
			i++;
			mLCD->printNumI(paramsPtr->filRes, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    23ac:	f3 01       	movw	r30, r6
    23ae:	84 a1       	ldd	r24, Z+36	; 0x24
    23b0:	95 a1       	ldd	r25, Z+37	; 0x25
    23b2:	96 01       	movw	r18, r12
    23b4:	29 1b       	sub	r18, r25
    23b6:	31 09       	sbc	r19, r1
    23b8:	48 2f       	mov	r20, r24
    23ba:	50 e0       	ldi	r21, 0x00	; 0
    23bc:	44 0f       	add	r20, r20
    23be:	55 1f       	adc	r21, r21
    23c0:	4d 5f       	subi	r20, 0xFD	; 253
    23c2:	5f 4f       	sbci	r21, 0xFF	; 255
    23c4:	86 95       	lsr	r24
    23c6:	48 0f       	add	r20, r24
    23c8:	51 1d       	adc	r21, r1
    23ca:	01 a0       	ldd	r0, Z+33	; 0x21
    23cc:	f2 a1       	ldd	r31, Z+34	; 0x22
    23ce:	e0 2d       	mov	r30, r0
    23d0:	62 85       	ldd	r22, Z+10	; 0x0a
    23d2:	d3 01       	movw	r26, r6
    23d4:	5b 96       	adiw	r26, 0x1b	; 27
    23d6:	8d 91       	ld	r24, X+
    23d8:	9c 91       	ld	r25, X
    23da:	5c 97       	sbiw	r26, 0x1c	; 28
    23dc:	0e 94 89 3d 	call	0x7b12	; 0x7b12 <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->filLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    23e0:	f3 01       	movw	r30, r6
    23e2:	84 a1       	ldd	r24, Z+36	; 0x24
    23e4:	95 a1       	ldd	r25, Z+37	; 0x25
    23e6:	96 01       	movw	r18, r12
    23e8:	29 1b       	sub	r18, r25
    23ea:	31 09       	sbc	r19, r1
    23ec:	f3 e0       	ldi	r31, 0x03	; 3
    23ee:	8f 9f       	mul	r24, r31
    23f0:	a0 01       	movw	r20, r0
    23f2:	11 24       	eor	r1, r1
    23f4:	4d 5f       	subi	r20, 0xFD	; 253
    23f6:	5f 4f       	sbci	r21, 0xFF	; 255
    23f8:	86 95       	lsr	r24
    23fa:	48 0f       	add	r20, r24
    23fc:	51 1d       	adc	r21, r1
    23fe:	d3 01       	movw	r26, r6
    2400:	91 96       	adiw	r26, 0x21	; 33
    2402:	ed 91       	ld	r30, X+
    2404:	fc 91       	ld	r31, X
    2406:	92 97       	sbiw	r26, 0x22	; 34
    2408:	63 85       	ldd	r22, Z+11	; 0x0b
    240a:	ef c1       	rjmp	.+990    	; 0x27ea <_ZN4Menu10drawValuesEv+0x52a>
void Menu::drawValues() {
	byte i = 0;
	mLCD->setFont(sFont);
	mLCD->setColor(COLOR);
	mLCD->setBackColor(BKGCOLOR);
	switch(paramsPtr->menu){
    240c:	83 30       	cpi	r24, 0x03	; 3
    240e:	09 f4       	brne	.+2      	; 0x2412 <_ZN4Menu10drawValuesEv+0x152>
    2410:	88 c1       	rjmp	.+784    	; 0x2722 <_ZN4Menu10drawValuesEv+0x462>
    2412:	84 30       	cpi	r24, 0x04	; 4
    2414:	09 f0       	breq	.+2      	; 0x2418 <_ZN4Menu10drawValuesEv+0x158>
    2416:	ef c1       	rjmp	.+990    	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
			mLCD->printNumI(paramsPtr->fxParam, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumI(paramsPtr->fxLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 4:
			mLCD->printNumI(paramsPtr->inPitch, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2418:	d3 01       	movw	r26, r6
    241a:	95 96       	adiw	r26, 0x25	; 37
    241c:	8c 91       	ld	r24, X
    241e:	95 97       	sbiw	r26, 0x25	; 37
    2420:	9d e4       	ldi	r25, 0x4D	; 77
    2422:	c9 2e       	mov	r12, r25
    2424:	dd 24       	eor	r13, r13
    2426:	d3 94       	inc	r13
    2428:	96 01       	movw	r18, r12
    242a:	28 1b       	sub	r18, r24
    242c:	31 09       	sbc	r19, r1
    242e:	94 96       	adiw	r26, 0x24	; 36
    2430:	4c 91       	ld	r20, X
    2432:	94 97       	sbiw	r26, 0x24	; 36
    2434:	46 95       	lsr	r20
    2436:	50 e0       	ldi	r21, 0x00	; 0
    2438:	4d 5f       	subi	r20, 0xFD	; 253
    243a:	5f 4f       	sbci	r21, 0xFF	; 255
    243c:	60 e2       	ldi	r22, 0x20	; 32
    243e:	e6 2e       	mov	r14, r22
    2440:	00 e0       	ldi	r16, 0x00	; 0
    2442:	10 e0       	ldi	r17, 0x00	; 0
    2444:	67 89       	ldd	r22, Z+23	; 0x17
    2446:	5b 96       	adiw	r26, 0x1b	; 27
    2448:	8d 91       	ld	r24, X+
    244a:	9c 91       	ld	r25, X
    244c:	5c 97       	sbiw	r26, 0x1c	; 28
    244e:	0e 94 2e 3e 	call	0x7c5c	; 0x7c5c <_ZN4UTFT9printNumIEaiiic>
			i++;
			mLCD->printNumI(paramsPtr->inEnv, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2452:	f3 01       	movw	r30, r6
    2454:	84 a1       	ldd	r24, Z+36	; 0x24
    2456:	95 a1       	ldd	r25, Z+37	; 0x25
    2458:	96 01       	movw	r18, r12
    245a:	29 1b       	sub	r18, r25
    245c:	31 09       	sbc	r19, r1
    245e:	48 2f       	mov	r20, r24
    2460:	50 e0       	ldi	r21, 0x00	; 0
    2462:	4d 5f       	subi	r20, 0xFD	; 253
    2464:	5f 4f       	sbci	r21, 0xFF	; 255
    2466:	86 95       	lsr	r24
    2468:	48 0f       	add	r20, r24
    246a:	51 1d       	adc	r21, r1
    246c:	01 a0       	ldd	r0, Z+33	; 0x21
    246e:	f2 a1       	ldd	r31, Z+34	; 0x22
    2470:	e0 2d       	mov	r30, r0
    2472:	60 8d       	ldd	r22, Z+24	; 0x18
    2474:	d3 01       	movw	r26, r6
    2476:	5b 96       	adiw	r26, 0x1b	; 27
    2478:	8d 91       	ld	r24, X+
    247a:	9c 91       	ld	r25, X
    247c:	5c 97       	sbiw	r26, 0x1c	; 28
    247e:	0e 94 89 3d 	call	0x7b12	; 0x7b12 <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->filEnv, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2482:	f3 01       	movw	r30, r6
    2484:	84 a1       	ldd	r24, Z+36	; 0x24
    2486:	95 a1       	ldd	r25, Z+37	; 0x25
    2488:	96 01       	movw	r18, r12
    248a:	29 1b       	sub	r18, r25
    248c:	31 09       	sbc	r19, r1
    248e:	48 2f       	mov	r20, r24
    2490:	50 e0       	ldi	r21, 0x00	; 0
    2492:	44 0f       	add	r20, r20
    2494:	55 1f       	adc	r21, r21
    2496:	4d 5f       	subi	r20, 0xFD	; 253
    2498:	5f 4f       	sbci	r21, 0xFF	; 255
    249a:	86 95       	lsr	r24
    249c:	48 0f       	add	r20, r24
    249e:	51 1d       	adc	r21, r1
    24a0:	01 a0       	ldd	r0, Z+33	; 0x21
    24a2:	f2 a1       	ldd	r31, Z+34	; 0x22
    24a4:	e0 2d       	mov	r30, r0
    24a6:	61 8d       	ldd	r22, Z+25	; 0x19
    24a8:	d3 01       	movw	r26, r6
    24aa:	5b 96       	adiw	r26, 0x1b	; 27
    24ac:	8d 91       	ld	r24, X+
    24ae:	9c 91       	ld	r25, X
    24b0:	5c 97       	sbiw	r26, 0x1c	; 28
    24b2:	0e 94 2e 3e 	call	0x7c5c	; 0x7c5c <_ZN4UTFT9printNumIEaiiic>
			i++;
			mLCD->printNumI(paramsPtr->preset, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    24b6:	f3 01       	movw	r30, r6
    24b8:	84 a1       	ldd	r24, Z+36	; 0x24
    24ba:	95 a1       	ldd	r25, Z+37	; 0x25
    24bc:	96 01       	movw	r18, r12
    24be:	29 1b       	sub	r18, r25
    24c0:	31 09       	sbc	r19, r1
    24c2:	f3 e0       	ldi	r31, 0x03	; 3
    24c4:	8f 9f       	mul	r24, r31
    24c6:	a0 01       	movw	r20, r0
    24c8:	11 24       	eor	r1, r1
    24ca:	4d 5f       	subi	r20, 0xFD	; 253
    24cc:	5f 4f       	sbci	r21, 0xFF	; 255
    24ce:	86 95       	lsr	r24
    24d0:	48 0f       	add	r20, r24
    24d2:	51 1d       	adc	r21, r1
    24d4:	d3 01       	movw	r26, r6
    24d6:	91 96       	adiw	r26, 0x21	; 33
    24d8:	ed 91       	ld	r30, X+
    24da:	fc 91       	ld	r31, X
    24dc:	92 97       	sbiw	r26, 0x22	; 34
    24de:	62 8d       	ldd	r22, Z+26	; 0x1a
    24e0:	5b 96       	adiw	r26, 0x1b	; 27
    24e2:	8d 91       	ld	r24, X+
    24e4:	9c 91       	ld	r25, X
    24e6:	5c 97       	sbiw	r26, 0x1c	; 28
    24e8:	0e 94 89 3d 	call	0x7b12	; 0x7b12 <_ZN4UTFT9printNumIEhiiic>
		break;
		default:
		break;
	}
    24ec:	84 c1       	rjmp	.+776    	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
	mLCD->setFont(sFont);
	mLCD->setColor(COLOR);
	mLCD->setBackColor(BKGCOLOR);
	switch(paramsPtr->menu){
		case 0:
			mLCD->print(waveNames[paramsPtr->oscWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    24ee:	d3 01       	movw	r26, r6
    24f0:	95 96       	adiw	r26, 0x25	; 37
    24f2:	8c 91       	ld	r24, X
    24f4:	95 97       	sbiw	r26, 0x25	; 37
    24f6:	2d e4       	ldi	r18, 0x4D	; 77
    24f8:	a2 2e       	mov	r10, r18
    24fa:	bb 24       	eor	r11, r11
    24fc:	b3 94       	inc	r11
    24fe:	75 01       	movw	r14, r10
    2500:	e8 1a       	sub	r14, r24
    2502:	f1 08       	sbc	r15, r1
    2504:	94 96       	adiw	r26, 0x24	; 36
    2506:	cc 90       	ld	r12, X
    2508:	c6 94       	lsr	r12
    250a:	d1 2c       	mov	r13, r1
    250c:	b3 e0       	ldi	r27, 0x03	; 3
    250e:	cb 0e       	add	r12, r27
    2510:	d1 1c       	adc	r13, r1
    2512:	61 81       	ldd	r22, Z+1	; 0x01
    2514:	36 e0       	ldi	r19, 0x06	; 6
    2516:	93 2e       	mov	r9, r19
    2518:	96 9e       	mul	r9, r22
    251a:	b0 01       	movw	r22, r0
    251c:	11 24       	eor	r1, r1
    251e:	64 55       	subi	r22, 0x54	; 84
    2520:	7b 4f       	sbci	r23, 0xFB	; 251
    2522:	ce 01       	movw	r24, r28
    2524:	01 96       	adiw	r24, 0x01	; 1
    2526:	0e 94 0a 4a 	call	0x9414	; 0x9414 <_ZN6StringC1ERKS_>
    252a:	00 e0       	ldi	r16, 0x00	; 0
    252c:	10 e0       	ldi	r17, 0x00	; 0
    252e:	97 01       	movw	r18, r14
    2530:	a6 01       	movw	r20, r12
    2532:	be 01       	movw	r22, r28
    2534:	6f 5f       	subi	r22, 0xFF	; 255
    2536:	7f 4f       	sbci	r23, 0xFF	; 255
    2538:	f3 01       	movw	r30, r6
    253a:	83 8d       	ldd	r24, Z+27	; 0x1b
    253c:	94 8d       	ldd	r25, Z+28	; 0x1c
    253e:	0e 94 9e 3c 	call	0x793c	; 0x793c <_ZN4UTFT5printE6Stringiii>
    2542:	ce 01       	movw	r24, r28
    2544:	01 96       	adiw	r24, 0x01	; 1
    2546:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
			i++;
			mLCD->printNumI(paramsPtr->oscFreq, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    254a:	d3 01       	movw	r26, r6
    254c:	94 96       	adiw	r26, 0x24	; 36
    254e:	8c 91       	ld	r24, X
    2550:	94 97       	sbiw	r26, 0x24	; 36
    2552:	95 96       	adiw	r26, 0x25	; 37
    2554:	9c 91       	ld	r25, X
    2556:	95 97       	sbiw	r26, 0x25	; 37
    2558:	95 01       	movw	r18, r10
    255a:	29 1b       	sub	r18, r25
    255c:	31 09       	sbc	r19, r1
    255e:	48 2f       	mov	r20, r24
    2560:	50 e0       	ldi	r21, 0x00	; 0
    2562:	4d 5f       	subi	r20, 0xFD	; 253
    2564:	5f 4f       	sbci	r21, 0xFF	; 255
    2566:	86 95       	lsr	r24
    2568:	48 0f       	add	r20, r24
    256a:	51 1d       	adc	r21, r1
    256c:	91 96       	adiw	r26, 0x21	; 33
    256e:	ed 91       	ld	r30, X+
    2570:	fc 91       	ld	r31, X
    2572:	92 97       	sbiw	r26, 0x22	; 34
    2574:	62 81       	ldd	r22, Z+2	; 0x02
    2576:	73 81       	ldd	r23, Z+3	; 0x03
    2578:	e0 e2       	ldi	r30, 0x20	; 32
    257a:	ee 2e       	mov	r14, r30
    257c:	5b 96       	adiw	r26, 0x1b	; 27
    257e:	8d 91       	ld	r24, X+
    2580:	9c 91       	ld	r25, X
    2582:	5c 97       	sbiw	r26, 0x1c	; 28
    2584:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <_ZN4UTFT9printNumIEjiiic>
			i++;
			mLCD->print(waveNames[paramsPtr->lfoWave], ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2588:	f3 01       	movw	r30, r6
    258a:	85 a1       	ldd	r24, Z+37	; 0x25
    258c:	75 01       	movw	r14, r10
    258e:	e8 1a       	sub	r14, r24
    2590:	f1 08       	sbc	r15, r1
    2592:	84 a1       	ldd	r24, Z+36	; 0x24
    2594:	c8 2e       	mov	r12, r24
    2596:	d1 2c       	mov	r13, r1
    2598:	cc 0c       	add	r12, r12
    259a:	dd 1c       	adc	r13, r13
    259c:	f3 e0       	ldi	r31, 0x03	; 3
    259e:	cf 0e       	add	r12, r31
    25a0:	d1 1c       	adc	r13, r1
    25a2:	86 95       	lsr	r24
    25a4:	c8 0e       	add	r12, r24
    25a6:	d1 1c       	adc	r13, r1
    25a8:	d3 01       	movw	r26, r6
    25aa:	91 96       	adiw	r26, 0x21	; 33
    25ac:	ed 91       	ld	r30, X+
    25ae:	fc 91       	ld	r31, X
    25b0:	92 97       	sbiw	r26, 0x22	; 34
    25b2:	64 81       	ldd	r22, Z+4	; 0x04
    25b4:	96 9e       	mul	r9, r22
    25b6:	b0 01       	movw	r22, r0
    25b8:	11 24       	eor	r1, r1
    25ba:	64 55       	subi	r22, 0x54	; 84
    25bc:	7b 4f       	sbci	r23, 0xFB	; 251
    25be:	ce 01       	movw	r24, r28
    25c0:	01 96       	adiw	r24, 0x01	; 1
    25c2:	0e 94 0a 4a 	call	0x9414	; 0x9414 <_ZN6StringC1ERKS_>
    25c6:	97 01       	movw	r18, r14
    25c8:	a6 01       	movw	r20, r12
    25ca:	be 01       	movw	r22, r28
    25cc:	6f 5f       	subi	r22, 0xFF	; 255
    25ce:	7f 4f       	sbci	r23, 0xFF	; 255
    25d0:	f3 01       	movw	r30, r6
    25d2:	83 8d       	ldd	r24, Z+27	; 0x1b
    25d4:	94 8d       	ldd	r25, Z+28	; 0x1c
    25d6:	0e 94 9e 3c 	call	0x793c	; 0x793c <_ZN4UTFT5printE6Stringiii>
    25da:	ce 01       	movw	r24, r28
    25dc:	01 96       	adiw	r24, 0x01	; 1
    25de:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
			i++;
			mLCD->printNumF((float)((paramsPtr->lfoFreq)/LFOMUL), 2, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    25e2:	d3 01       	movw	r26, r6
    25e4:	94 96       	adiw	r26, 0x24	; 36
    25e6:	8c 91       	ld	r24, X
    25e8:	94 97       	sbiw	r26, 0x24	; 36
    25ea:	95 96       	adiw	r26, 0x25	; 37
    25ec:	9c 91       	ld	r25, X
    25ee:	75 01       	movw	r14, r10
    25f0:	e9 1a       	sub	r14, r25
    25f2:	f1 08       	sbc	r15, r1
    25f4:	b3 e0       	ldi	r27, 0x03	; 3
    25f6:	8b 9f       	mul	r24, r27
    25f8:	80 01       	movw	r16, r0
    25fa:	11 24       	eor	r1, r1
    25fc:	0d 5f       	subi	r16, 0xFD	; 253
    25fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2600:	86 95       	lsr	r24
    2602:	08 0f       	add	r16, r24
    2604:	11 1d       	adc	r17, r1
    2606:	d3 01       	movw	r26, r6
    2608:	91 96       	adiw	r26, 0x21	; 33
    260a:	ed 91       	ld	r30, X+
    260c:	fc 91       	ld	r31, X
    260e:	92 97       	sbiw	r26, 0x22	; 34
    2610:	65 81       	ldd	r22, Z+5	; 0x05
    2612:	76 81       	ldd	r23, Z+6	; 0x06
    2614:	80 e0       	ldi	r24, 0x00	; 0
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	0e 94 4f 43 	call	0x869e	; 0x869e <__floatunsisf>
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	48 ec       	ldi	r20, 0xC8	; 200
    2622:	52 e4       	ldi	r21, 0x42	; 66
    2624:	0e 94 b6 42 	call	0x856c	; 0x856c <__divsf3>
    2628:	ab 01       	movw	r20, r22
    262a:	bc 01       	movw	r22, r24
    262c:	a0 e2       	ldi	r26, 0x20	; 32
    262e:	8a 2e       	mov	r8, r26
    2630:	a1 2c       	mov	r10, r1
    2632:	b1 2c       	mov	r11, r1
    2634:	be e2       	ldi	r27, 0x2E	; 46
    2636:	cb 2e       	mov	r12, r27
    2638:	22 e0       	ldi	r18, 0x02	; 2
    263a:	f3 01       	movw	r30, r6
    263c:	83 8d       	ldd	r24, Z+27	; 0x1b
    263e:	94 8d       	ldd	r25, Z+28	; 0x1c
    2640:	0e 94 02 3f 	call	0x7e04	; 0x7e04 <_ZN4UTFT9printNumFEdhiicic>
		break;
    2644:	d8 c0       	rjmp	.+432    	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
			mLCD->printNumI(paramsPtr->filRes, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
			i++;
			mLCD->printNumI(paramsPtr->filLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		case 2:
			mLCD->printNumI(paramsPtr->envAtk, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2646:	d3 01       	movw	r26, r6
    2648:	95 96       	adiw	r26, 0x25	; 37
    264a:	8c 91       	ld	r24, X
    264c:	95 97       	sbiw	r26, 0x25	; 37
    264e:	2d e4       	ldi	r18, 0x4D	; 77
    2650:	c2 2e       	mov	r12, r18
    2652:	dd 24       	eor	r13, r13
    2654:	d3 94       	inc	r13
    2656:	96 01       	movw	r18, r12
    2658:	28 1b       	sub	r18, r24
    265a:	31 09       	sbc	r19, r1
    265c:	94 96       	adiw	r26, 0x24	; 36
    265e:	4c 91       	ld	r20, X
    2660:	94 97       	sbiw	r26, 0x24	; 36
    2662:	46 95       	lsr	r20
    2664:	50 e0       	ldi	r21, 0x00	; 0
    2666:	4d 5f       	subi	r20, 0xFD	; 253
    2668:	5f 4f       	sbci	r21, 0xFF	; 255
    266a:	64 85       	ldd	r22, Z+12	; 0x0c
    266c:	75 85       	ldd	r23, Z+13	; 0x0d
    266e:	e0 e2       	ldi	r30, 0x20	; 32
    2670:	ee 2e       	mov	r14, r30
    2672:	00 e0       	ldi	r16, 0x00	; 0
    2674:	10 e0       	ldi	r17, 0x00	; 0
    2676:	5b 96       	adiw	r26, 0x1b	; 27
    2678:	8d 91       	ld	r24, X+
    267a:	9c 91       	ld	r25, X
    267c:	5c 97       	sbiw	r26, 0x1c	; 28
    267e:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <_ZN4UTFT9printNumIEjiiic>
			i++;
			mLCD->printNumI(paramsPtr->envDcy, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2682:	f3 01       	movw	r30, r6
    2684:	84 a1       	ldd	r24, Z+36	; 0x24
    2686:	95 a1       	ldd	r25, Z+37	; 0x25
    2688:	96 01       	movw	r18, r12
    268a:	29 1b       	sub	r18, r25
    268c:	31 09       	sbc	r19, r1
    268e:	48 2f       	mov	r20, r24
    2690:	50 e0       	ldi	r21, 0x00	; 0
    2692:	4d 5f       	subi	r20, 0xFD	; 253
    2694:	5f 4f       	sbci	r21, 0xFF	; 255
    2696:	86 95       	lsr	r24
    2698:	48 0f       	add	r20, r24
    269a:	51 1d       	adc	r21, r1
    269c:	01 a0       	ldd	r0, Z+33	; 0x21
    269e:	f2 a1       	ldd	r31, Z+34	; 0x22
    26a0:	e0 2d       	mov	r30, r0
    26a2:	66 85       	ldd	r22, Z+14	; 0x0e
    26a4:	77 85       	ldd	r23, Z+15	; 0x0f
    26a6:	d3 01       	movw	r26, r6
    26a8:	5b 96       	adiw	r26, 0x1b	; 27
    26aa:	8d 91       	ld	r24, X+
    26ac:	9c 91       	ld	r25, X
    26ae:	5c 97       	sbiw	r26, 0x1c	; 28
    26b0:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <_ZN4UTFT9printNumIEjiiic>
			i++;
			mLCD->printNumI(paramsPtr->envSus, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    26b4:	f3 01       	movw	r30, r6
    26b6:	84 a1       	ldd	r24, Z+36	; 0x24
    26b8:	95 a1       	ldd	r25, Z+37	; 0x25
    26ba:	96 01       	movw	r18, r12
    26bc:	29 1b       	sub	r18, r25
    26be:	31 09       	sbc	r19, r1
    26c0:	48 2f       	mov	r20, r24
    26c2:	50 e0       	ldi	r21, 0x00	; 0
    26c4:	44 0f       	add	r20, r20
    26c6:	55 1f       	adc	r21, r21
    26c8:	4d 5f       	subi	r20, 0xFD	; 253
    26ca:	5f 4f       	sbci	r21, 0xFF	; 255
    26cc:	86 95       	lsr	r24
    26ce:	48 0f       	add	r20, r24
    26d0:	51 1d       	adc	r21, r1
    26d2:	01 a0       	ldd	r0, Z+33	; 0x21
    26d4:	f2 a1       	ldd	r31, Z+34	; 0x22
    26d6:	e0 2d       	mov	r30, r0
    26d8:	60 89       	ldd	r22, Z+16	; 0x10
    26da:	d3 01       	movw	r26, r6
    26dc:	5b 96       	adiw	r26, 0x1b	; 27
    26de:	8d 91       	ld	r24, X+
    26e0:	9c 91       	ld	r25, X
    26e2:	5c 97       	sbiw	r26, 0x1c	; 28
    26e4:	0e 94 89 3d 	call	0x7b12	; 0x7b12 <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->envRel, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    26e8:	f3 01       	movw	r30, r6
    26ea:	84 a1       	ldd	r24, Z+36	; 0x24
    26ec:	95 a1       	ldd	r25, Z+37	; 0x25
    26ee:	96 01       	movw	r18, r12
    26f0:	29 1b       	sub	r18, r25
    26f2:	31 09       	sbc	r19, r1
    26f4:	f3 e0       	ldi	r31, 0x03	; 3
    26f6:	8f 9f       	mul	r24, r31
    26f8:	a0 01       	movw	r20, r0
    26fa:	11 24       	eor	r1, r1
    26fc:	4d 5f       	subi	r20, 0xFD	; 253
    26fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2700:	86 95       	lsr	r24
    2702:	48 0f       	add	r20, r24
    2704:	51 1d       	adc	r21, r1
    2706:	d3 01       	movw	r26, r6
    2708:	91 96       	adiw	r26, 0x21	; 33
    270a:	ed 91       	ld	r30, X+
    270c:	fc 91       	ld	r31, X
    270e:	92 97       	sbiw	r26, 0x22	; 34
    2710:	61 89       	ldd	r22, Z+17	; 0x11
    2712:	72 89       	ldd	r23, Z+18	; 0x12
    2714:	5b 96       	adiw	r26, 0x1b	; 27
    2716:	8d 91       	ld	r24, X+
    2718:	9c 91       	ld	r25, X
    271a:	5c 97       	sbiw	r26, 0x1c	; 28
    271c:	0e 94 e4 3c 	call	0x79c8	; 0x79c8 <_ZN4UTFT9printNumIEjiiic>
		break;
    2720:	6a c0       	rjmp	.+212    	; 0x27f6 <_ZN4Menu10drawValuesEv+0x536>
		case 3:
			mLCD->printNumI(paramsPtr->fxType, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    2722:	d3 01       	movw	r26, r6
    2724:	95 96       	adiw	r26, 0x25	; 37
    2726:	8c 91       	ld	r24, X
    2728:	95 97       	sbiw	r26, 0x25	; 37
    272a:	1d e4       	ldi	r17, 0x4D	; 77
    272c:	c1 2e       	mov	r12, r17
    272e:	dd 24       	eor	r13, r13
    2730:	d3 94       	inc	r13
    2732:	96 01       	movw	r18, r12
    2734:	28 1b       	sub	r18, r24
    2736:	31 09       	sbc	r19, r1
    2738:	94 96       	adiw	r26, 0x24	; 36
    273a:	4c 91       	ld	r20, X
    273c:	94 97       	sbiw	r26, 0x24	; 36
    273e:	46 95       	lsr	r20
    2740:	50 e0       	ldi	r21, 0x00	; 0
    2742:	4d 5f       	subi	r20, 0xFD	; 253
    2744:	5f 4f       	sbci	r21, 0xFF	; 255
    2746:	00 e2       	ldi	r16, 0x20	; 32
    2748:	e0 2e       	mov	r14, r16
    274a:	00 e0       	ldi	r16, 0x00	; 0
    274c:	10 e0       	ldi	r17, 0x00	; 0
    274e:	63 89       	ldd	r22, Z+19	; 0x13
    2750:	5b 96       	adiw	r26, 0x1b	; 27
    2752:	8d 91       	ld	r24, X+
    2754:	9c 91       	ld	r25, X
    2756:	5c 97       	sbiw	r26, 0x1c	; 28
    2758:	0e 94 89 3d 	call	0x7b12	; 0x7b12 <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->fxAmt, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    275c:	f3 01       	movw	r30, r6
    275e:	84 a1       	ldd	r24, Z+36	; 0x24
    2760:	95 a1       	ldd	r25, Z+37	; 0x25
    2762:	96 01       	movw	r18, r12
    2764:	29 1b       	sub	r18, r25
    2766:	31 09       	sbc	r19, r1
    2768:	48 2f       	mov	r20, r24
    276a:	50 e0       	ldi	r21, 0x00	; 0
    276c:	4d 5f       	subi	r20, 0xFD	; 253
    276e:	5f 4f       	sbci	r21, 0xFF	; 255
    2770:	86 95       	lsr	r24
    2772:	48 0f       	add	r20, r24
    2774:	51 1d       	adc	r21, r1
    2776:	01 a0       	ldd	r0, Z+33	; 0x21
    2778:	f2 a1       	ldd	r31, Z+34	; 0x22
    277a:	e0 2d       	mov	r30, r0
    277c:	64 89       	ldd	r22, Z+20	; 0x14
    277e:	d3 01       	movw	r26, r6
    2780:	5b 96       	adiw	r26, 0x1b	; 27
    2782:	8d 91       	ld	r24, X+
    2784:	9c 91       	ld	r25, X
    2786:	5c 97       	sbiw	r26, 0x1c	; 28
    2788:	0e 94 89 3d 	call	0x7b12	; 0x7b12 <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->fxParam, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    278c:	f3 01       	movw	r30, r6
    278e:	84 a1       	ldd	r24, Z+36	; 0x24
    2790:	95 a1       	ldd	r25, Z+37	; 0x25
    2792:	96 01       	movw	r18, r12
    2794:	29 1b       	sub	r18, r25
    2796:	31 09       	sbc	r19, r1
    2798:	48 2f       	mov	r20, r24
    279a:	50 e0       	ldi	r21, 0x00	; 0
    279c:	44 0f       	add	r20, r20
    279e:	55 1f       	adc	r21, r21
    27a0:	4d 5f       	subi	r20, 0xFD	; 253
    27a2:	5f 4f       	sbci	r21, 0xFF	; 255
    27a4:	86 95       	lsr	r24
    27a6:	48 0f       	add	r20, r24
    27a8:	51 1d       	adc	r21, r1
    27aa:	01 a0       	ldd	r0, Z+33	; 0x21
    27ac:	f2 a1       	ldd	r31, Z+34	; 0x22
    27ae:	e0 2d       	mov	r30, r0
    27b0:	65 89       	ldd	r22, Z+21	; 0x15
    27b2:	d3 01       	movw	r26, r6
    27b4:	5b 96       	adiw	r26, 0x1b	; 27
    27b6:	8d 91       	ld	r24, X+
    27b8:	9c 91       	ld	r25, X
    27ba:	5c 97       	sbiw	r26, 0x1c	; 28
    27bc:	0e 94 89 3d 	call	0x7b12	; 0x7b12 <_ZN4UTFT9printNumIEhiiic>
			i++;
			mLCD->printNumI(paramsPtr->fxLfo, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
    27c0:	f3 01       	movw	r30, r6
    27c2:	84 a1       	ldd	r24, Z+36	; 0x24
    27c4:	95 a1       	ldd	r25, Z+37	; 0x25
    27c6:	96 01       	movw	r18, r12
    27c8:	29 1b       	sub	r18, r25
    27ca:	31 09       	sbc	r19, r1
    27cc:	f3 e0       	ldi	r31, 0x03	; 3
    27ce:	8f 9f       	mul	r24, r31
    27d0:	a0 01       	movw	r20, r0
    27d2:	11 24       	eor	r1, r1
    27d4:	4d 5f       	subi	r20, 0xFD	; 253
    27d6:	5f 4f       	sbci	r21, 0xFF	; 255
    27d8:	86 95       	lsr	r24
    27da:	48 0f       	add	r20, r24
    27dc:	51 1d       	adc	r21, r1
    27de:	d3 01       	movw	r26, r6
    27e0:	91 96       	adiw	r26, 0x21	; 33
    27e2:	ed 91       	ld	r30, X+
    27e4:	fc 91       	ld	r31, X
    27e6:	92 97       	sbiw	r26, 0x22	; 34
    27e8:	66 89       	ldd	r22, Z+22	; 0x16
    27ea:	5b 96       	adiw	r26, 0x1b	; 27
    27ec:	8d 91       	ld	r24, X+
    27ee:	9c 91       	ld	r25, X
    27f0:	5c 97       	sbiw	r26, 0x1c	; 28
    27f2:	0e 94 2e 3e 	call	0x7c5c	; 0x7c5c <_ZN4UTFT9printNumIEaiiic>
			mLCD->printNumI(paramsPtr->preset, ((bWidth*i)+STROKEWEIGHT)+(bWidth/2), HEIGHT-height+14);
		break;
		default:
		break;
	}
    27f6:	26 96       	adiw	r28, 0x06	; 6
    27f8:	0f b6       	in	r0, 0x3f	; 63
    27fa:	f8 94       	cli
    27fc:	de bf       	out	0x3e, r29	; 62
    27fe:	0f be       	out	0x3f, r0	; 63
    2800:	cd bf       	out	0x3d, r28	; 61
    2802:	df 91       	pop	r29
    2804:	cf 91       	pop	r28
    2806:	1f 91       	pop	r17
    2808:	0f 91       	pop	r16
    280a:	ff 90       	pop	r15
    280c:	ef 90       	pop	r14
    280e:	df 90       	pop	r13
    2810:	cf 90       	pop	r12
    2812:	bf 90       	pop	r11
    2814:	af 90       	pop	r10
    2816:	9f 90       	pop	r9
    2818:	8f 90       	pop	r8
    281a:	7f 90       	pop	r7
    281c:	6f 90       	pop	r6
    281e:	08 95       	ret

00002820 <_GLOBAL__sub_I__ZN4MenuC2Ev>:
    2820:	cf 93       	push	r28
    2822:	df 93       	push	r29
    2824:	66 ea       	ldi	r22, 0xA6	; 166
    2826:	72 e0       	ldi	r23, 0x02	; 2
    2828:	8c e3       	ldi	r24, 0x3C	; 60
    282a:	95 e0       	ldi	r25, 0x05	; 5
    282c:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2830:	6b ea       	ldi	r22, 0xAB	; 171
    2832:	72 e0       	ldi	r23, 0x02	; 2
    2834:	82 e4       	ldi	r24, 0x42	; 66
    2836:	95 e0       	ldi	r25, 0x05	; 5
    2838:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    283c:	60 eb       	ldi	r22, 0xB0	; 176
    283e:	72 e0       	ldi	r23, 0x02	; 2
    2840:	88 e4       	ldi	r24, 0x48	; 72
    2842:	95 e0       	ldi	r25, 0x05	; 5
    2844:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2848:	65 eb       	ldi	r22, 0xB5	; 181
    284a:	72 e0       	ldi	r23, 0x02	; 2
    284c:	8e e4       	ldi	r24, 0x4E	; 78
    284e:	95 e0       	ldi	r25, 0x05	; 5
    2850:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2854:	68 eb       	ldi	r22, 0xB8	; 184
    2856:	72 e0       	ldi	r23, 0x02	; 2
    2858:	84 e5       	ldi	r24, 0x54	; 84
    285a:	95 e0       	ldi	r25, 0x05	; 5
    285c:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2860:	6e eb       	ldi	r22, 0xBE	; 190
    2862:	72 e0       	ldi	r23, 0x02	; 2
    2864:	84 e2       	ldi	r24, 0x24	; 36
    2866:	95 e0       	ldi	r25, 0x05	; 5
    2868:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    286c:	64 ec       	ldi	r22, 0xC4	; 196
    286e:	72 e0       	ldi	r23, 0x02	; 2
    2870:	8a e2       	ldi	r24, 0x2A	; 42
    2872:	95 e0       	ldi	r25, 0x05	; 5
    2874:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2878:	6a ec       	ldi	r22, 0xCA	; 202
    287a:	72 e0       	ldi	r23, 0x02	; 2
    287c:	80 e3       	ldi	r24, 0x30	; 48
    287e:	95 e0       	ldi	r25, 0x05	; 5
    2880:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2884:	64 ec       	ldi	r22, 0xC4	; 196
    2886:	72 e0       	ldi	r23, 0x02	; 2
    2888:	86 e3       	ldi	r24, 0x36	; 54
    288a:	95 e0       	ldi	r25, 0x05	; 5
    288c:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2890:	6f ec       	ldi	r22, 0xCF	; 207
    2892:	72 e0       	ldi	r23, 0x02	; 2
    2894:	8c e0       	ldi	r24, 0x0C	; 12
    2896:	95 e0       	ldi	r25, 0x05	; 5
    2898:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    289c:	64 ec       	ldi	r22, 0xC4	; 196
    289e:	72 e0       	ldi	r23, 0x02	; 2
    28a0:	82 e1       	ldi	r24, 0x12	; 18
    28a2:	95 e0       	ldi	r25, 0x05	; 5
    28a4:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    28a8:	65 ed       	ldi	r22, 0xD5	; 213
    28aa:	72 e0       	ldi	r23, 0x02	; 2
    28ac:	88 e1       	ldi	r24, 0x18	; 24
    28ae:	95 e0       	ldi	r25, 0x05	; 5
    28b0:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    28b4:	6a ec       	ldi	r22, 0xCA	; 202
    28b6:	72 e0       	ldi	r23, 0x02	; 2
    28b8:	8e e1       	ldi	r24, 0x1E	; 30
    28ba:	95 e0       	ldi	r25, 0x05	; 5
    28bc:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    28c0:	6a ed       	ldi	r22, 0xDA	; 218
    28c2:	72 e0       	ldi	r23, 0x02	; 2
    28c4:	84 ef       	ldi	r24, 0xF4	; 244
    28c6:	94 e0       	ldi	r25, 0x04	; 4
    28c8:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    28cc:	6f ed       	ldi	r22, 0xDF	; 223
    28ce:	72 e0       	ldi	r23, 0x02	; 2
    28d0:	8a ef       	ldi	r24, 0xFA	; 250
    28d2:	94 e0       	ldi	r25, 0x04	; 4
    28d4:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    28d8:	64 ee       	ldi	r22, 0xE4	; 228
    28da:	72 e0       	ldi	r23, 0x02	; 2
    28dc:	80 e0       	ldi	r24, 0x00	; 0
    28de:	95 e0       	ldi	r25, 0x05	; 5
    28e0:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    28e4:	69 ee       	ldi	r22, 0xE9	; 233
    28e6:	72 e0       	ldi	r23, 0x02	; 2
    28e8:	86 e0       	ldi	r24, 0x06	; 6
    28ea:	95 e0       	ldi	r25, 0x05	; 5
    28ec:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    28f0:	6f ec       	ldi	r22, 0xCF	; 207
    28f2:	72 e0       	ldi	r23, 0x02	; 2
    28f4:	8c ed       	ldi	r24, 0xDC	; 220
    28f6:	94 e0       	ldi	r25, 0x04	; 4
    28f8:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    28fc:	6e ee       	ldi	r22, 0xEE	; 238
    28fe:	72 e0       	ldi	r23, 0x02	; 2
    2900:	82 ee       	ldi	r24, 0xE2	; 226
    2902:	94 e0       	ldi	r25, 0x04	; 4
    2904:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2908:	63 ef       	ldi	r22, 0xF3	; 243
    290a:	72 e0       	ldi	r23, 0x02	; 2
    290c:	88 ee       	ldi	r24, 0xE8	; 232
    290e:	94 e0       	ldi	r25, 0x04	; 4
    2910:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2914:	6a ec       	ldi	r22, 0xCA	; 202
    2916:	72 e0       	ldi	r23, 0x02	; 2
    2918:	8e ee       	ldi	r24, 0xEE	; 238
    291a:	94 e0       	ldi	r25, 0x04	; 4
    291c:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2920:	6a ef       	ldi	r22, 0xFA	; 250
    2922:	72 e0       	ldi	r23, 0x02	; 2
    2924:	84 ec       	ldi	r24, 0xC4	; 196
    2926:	94 e0       	ldi	r25, 0x04	; 4
    2928:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    292c:	64 e0       	ldi	r22, 0x04	; 4
    292e:	73 e0       	ldi	r23, 0x03	; 3
    2930:	8a ec       	ldi	r24, 0xCA	; 202
    2932:	94 e0       	ldi	r25, 0x04	; 4
    2934:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2938:	6c e0       	ldi	r22, 0x0C	; 12
    293a:	73 e0       	ldi	r23, 0x03	; 3
    293c:	80 ed       	ldi	r24, 0xD0	; 208
    293e:	94 e0       	ldi	r25, 0x04	; 4
    2940:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2944:	65 e1       	ldi	r22, 0x15	; 21
    2946:	73 e0       	ldi	r23, 0x03	; 3
    2948:	86 ed       	ldi	r24, 0xD6	; 214
    294a:	94 e0       	ldi	r25, 0x04	; 4
    294c:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    2950:	6d e1       	ldi	r22, 0x1D	; 29
    2952:	73 e0       	ldi	r23, 0x03	; 3
    2954:	8c ea       	ldi	r24, 0xAC	; 172
    2956:	94 e0       	ldi	r25, 0x04	; 4
    2958:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    295c:	61 e2       	ldi	r22, 0x21	; 33
    295e:	73 e0       	ldi	r23, 0x03	; 3
    2960:	82 eb       	ldi	r24, 0xB2	; 178
    2962:	94 e0       	ldi	r25, 0x04	; 4
    2964:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2968:	65 e2       	ldi	r22, 0x25	; 37
    296a:	73 e0       	ldi	r23, 0x03	; 3
    296c:	88 eb       	ldi	r24, 0xB8	; 184
    296e:	94 e0       	ldi	r25, 0x04	; 4
    2970:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2974:	69 e2       	ldi	r22, 0x29	; 41
    2976:	73 e0       	ldi	r23, 0x03	; 3
    2978:	8e eb       	ldi	r24, 0xBE	; 190
    297a:	94 e0       	ldi	r25, 0x04	; 4
    297c:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    2980:	6d e2       	ldi	r22, 0x2D	; 45
    2982:	73 e0       	ldi	r23, 0x03	; 3
    2984:	8c e7       	ldi	r24, 0x7C	; 124
    2986:	94 e0       	ldi	r25, 0x04	; 4
    2988:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    298c:	c0 e0       	ldi	r28, 0x00	; 0
    298e:	d0 e0       	ldi	r29, 0x00	; 0
    2990:	26 96       	adiw	r28, 0x06	; 6
    2992:	60 e9       	ldi	r22, 0x90	; 144
    2994:	73 e0       	ldi	r23, 0x03	; 3
    2996:	ce 01       	movw	r24, r28
    2998:	84 58       	subi	r24, 0x84	; 132
    299a:	9b 4f       	sbci	r25, 0xFB	; 251
    299c:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    29a0:	ca 32       	cpi	r28, 0x2A	; 42
    29a2:	d1 05       	cpc	r29, r1
    29a4:	a9 f7       	brne	.-22     	; 0x2990 <_GLOBAL__sub_I__ZN4MenuC2Ev+0x170>
    29a6:	df 91       	pop	r29
    29a8:	cf 91       	pop	r28
    29aa:	08 95       	ret

000029ac <_GLOBAL__sub_D__ZN4MenuC2Ev>:
    29ac:	cf 93       	push	r28
    29ae:	df 93       	push	r29
    29b0:	cc ea       	ldi	r28, 0xAC	; 172
    29b2:	d4 e0       	ldi	r29, 0x04	; 4
    29b4:	26 97       	sbiw	r28, 0x06	; 6
    29b6:	ce 01       	movw	r24, r28
    29b8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    29bc:	84 e0       	ldi	r24, 0x04	; 4
    29be:	cc 37       	cpi	r28, 0x7C	; 124
    29c0:	d8 07       	cpc	r29, r24
    29c2:	c1 f7       	brne	.-16     	; 0x29b4 <_GLOBAL__sub_D__ZN4MenuC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    29c4:	8e eb       	ldi	r24, 0xBE	; 190
    29c6:	94 e0       	ldi	r25, 0x04	; 4
    29c8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    29cc:	88 eb       	ldi	r24, 0xB8	; 184
    29ce:	94 e0       	ldi	r25, 0x04	; 4
    29d0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    29d4:	82 eb       	ldi	r24, 0xB2	; 178
    29d6:	94 e0       	ldi	r25, 0x04	; 4
    29d8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    29dc:	8c ea       	ldi	r24, 0xAC	; 172
    29de:	94 e0       	ldi	r25, 0x04	; 4
    29e0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    29e4:	86 ed       	ldi	r24, 0xD6	; 214
    29e6:	94 e0       	ldi	r25, 0x04	; 4
    29e8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    29ec:	80 ed       	ldi	r24, 0xD0	; 208
    29ee:	94 e0       	ldi	r25, 0x04	; 4
    29f0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    29f4:	8a ec       	ldi	r24, 0xCA	; 202
    29f6:	94 e0       	ldi	r25, 0x04	; 4
    29f8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    29fc:	84 ec       	ldi	r24, 0xC4	; 196
    29fe:	94 e0       	ldi	r25, 0x04	; 4
    2a00:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2a04:	8e ee       	ldi	r24, 0xEE	; 238
    2a06:	94 e0       	ldi	r25, 0x04	; 4
    2a08:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a0c:	88 ee       	ldi	r24, 0xE8	; 232
    2a0e:	94 e0       	ldi	r25, 0x04	; 4
    2a10:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a14:	82 ee       	ldi	r24, 0xE2	; 226
    2a16:	94 e0       	ldi	r25, 0x04	; 4
    2a18:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a1c:	8c ed       	ldi	r24, 0xDC	; 220
    2a1e:	94 e0       	ldi	r25, 0x04	; 4
    2a20:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2a24:	86 e0       	ldi	r24, 0x06	; 6
    2a26:	95 e0       	ldi	r25, 0x05	; 5
    2a28:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a2c:	80 e0       	ldi	r24, 0x00	; 0
    2a2e:	95 e0       	ldi	r25, 0x05	; 5
    2a30:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a34:	8a ef       	ldi	r24, 0xFA	; 250
    2a36:	94 e0       	ldi	r25, 0x04	; 4
    2a38:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a3c:	84 ef       	ldi	r24, 0xF4	; 244
    2a3e:	94 e0       	ldi	r25, 0x04	; 4
    2a40:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2a44:	8e e1       	ldi	r24, 0x1E	; 30
    2a46:	95 e0       	ldi	r25, 0x05	; 5
    2a48:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a4c:	88 e1       	ldi	r24, 0x18	; 24
    2a4e:	95 e0       	ldi	r25, 0x05	; 5
    2a50:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a54:	82 e1       	ldi	r24, 0x12	; 18
    2a56:	95 e0       	ldi	r25, 0x05	; 5
    2a58:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a5c:	8c e0       	ldi	r24, 0x0C	; 12
    2a5e:	95 e0       	ldi	r25, 0x05	; 5
    2a60:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2a64:	86 e3       	ldi	r24, 0x36	; 54
    2a66:	95 e0       	ldi	r25, 0x05	; 5
    2a68:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a6c:	80 e3       	ldi	r24, 0x30	; 48
    2a6e:	95 e0       	ldi	r25, 0x05	; 5
    2a70:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a74:	8a e2       	ldi	r24, 0x2A	; 42
    2a76:	95 e0       	ldi	r25, 0x05	; 5
    2a78:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a7c:	84 e2       	ldi	r24, 0x24	; 36
    2a7e:	95 e0       	ldi	r25, 0x05	; 5
    2a80:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a84:	ca e5       	ldi	r28, 0x5A	; 90
    2a86:	d5 e0       	ldi	r29, 0x05	; 5
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    2a88:	26 97       	sbiw	r28, 0x06	; 6
    2a8a:	ce 01       	movw	r24, r28
    2a8c:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2a90:	85 e0       	ldi	r24, 0x05	; 5
    2a92:	cc 33       	cpi	r28, 0x3C	; 60
    2a94:	d8 07       	cpc	r29, r24
    2a96:	c1 f7       	brne	.-16     	; 0x2a88 <_GLOBAL__sub_D__ZN4MenuC2Ev+0xdc>
    2a98:	df 91       	pop	r29
    2a9a:	cf 91       	pop	r28
    2a9c:	08 95       	ret

00002a9e <_ZN6ScreenC1Ev>:
 * Screen implementation
 * 
 * This class handles all screen manipulations
 */

Screen::Screen() {
    2a9e:	cf 93       	push	r28
    2aa0:	df 93       	push	r29
    2aa2:	ec 01       	movw	r28, r24
    2aa4:	0e 94 d1 1f 	call	0x3fa2	; 0x3fa2 <_ZN4UTFTC1Ev>
    2aa8:	ce 01       	movw	r24, r28
    2aaa:	c1 96       	adiw	r24, 0x31	; 49
    2aac:	e6 d9       	rcall	.-3124   	; 0x1e7a <_ZN4MenuC1Ev>
    2aae:	ce 01       	movw	r24, r28
    2ab0:	89 5a       	subi	r24, 0xA9	; 169
    2ab2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ab4:	0e 94 20 42 	call	0x8440	; 0x8440 <_ZN6WindowC1Ev>
    2ab8:	ce 01       	movw	r24, r28
    2aba:	84 58       	subi	r24, 0x84	; 132
    2abc:	9f 4f       	sbci	r25, 0xFF	; 255
    2abe:	0e 94 d1 1f 	call	0x3fa2	; 0x3fa2 <_ZN4UTFTC1Ev>
    2ac2:	ce 01       	movw	r24, r28
    2ac4:	83 55       	subi	r24, 0x53	; 83
    2ac6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ac8:	d8 d9       	rcall	.-3152   	; 0x1e7a <_ZN4MenuC1Ev>
    2aca:	ce 01       	movw	r24, r28
    2acc:	8d 52       	subi	r24, 0x2D	; 45
    2ace:	9f 4f       	sbci	r25, 0xFF	; 255

}
    2ad0:	df 91       	pop	r29
    2ad2:	cf 91       	pop	r28
 * Screen implementation
 * 
 * This class handles all screen manipulations
 */

Screen::Screen() {
    2ad4:	0c 94 20 42 	jmp	0x8440	; 0x8440 <_ZN6WindowC1Ev>

00002ad8 <_ZN6Screen4initEP7Control>:

}

void Screen::init(Control *obj) {
    2ad8:	8f 92       	push	r8
    2ada:	9f 92       	push	r9
    2adc:	af 92       	push	r10
    2ade:	bf 92       	push	r11
    2ae0:	cf 92       	push	r12
    2ae2:	df 92       	push	r13
    2ae4:	ef 92       	push	r14
    2ae6:	ff 92       	push	r15
    2ae8:	0f 93       	push	r16
    2aea:	1f 93       	push	r17
    2aec:	cf 93       	push	r28
    2aee:	df 93       	push	r29
    2af0:	ec 01       	movw	r28, r24
	ctrlPtr = obj;
    2af2:	5c 01       	movw	r10, r24
    2af4:	8a e7       	ldi	r24, 0x7A	; 122
    2af6:	a8 0e       	add	r10, r24
    2af8:	b1 1c       	adc	r11, r1
    2afa:	d5 01       	movw	r26, r10
    2afc:	6d 93       	st	X+, r22
    2afe:	7c 93       	st	X, r23

	lcd = *new UTFT(CTE32HR,38,39,40,41);
    2b00:	81 e3       	ldi	r24, 0x31	; 49
    2b02:	90 e0       	ldi	r25, 0x00	; 0
    2b04:	0e 94 de 46 	call	0x8dbc	; 0x8dbc <_Znwj>
    2b08:	4c 01       	movw	r8, r24
    2b0a:	c1 2c       	mov	r12, r1
    2b0c:	d1 2c       	mov	r13, r1
    2b0e:	89 e2       	ldi	r24, 0x29	; 41
    2b10:	e8 2e       	mov	r14, r24
    2b12:	f1 2c       	mov	r15, r1
    2b14:	08 e2       	ldi	r16, 0x28	; 40
    2b16:	10 e0       	ldi	r17, 0x00	; 0
    2b18:	27 e2       	ldi	r18, 0x27	; 39
    2b1a:	30 e0       	ldi	r19, 0x00	; 0
    2b1c:	46 e2       	ldi	r20, 0x26	; 38
    2b1e:	50 e0       	ldi	r21, 0x00	; 0
    2b20:	65 e1       	ldi	r22, 0x15	; 21
    2b22:	c4 01       	movw	r24, r8
    2b24:	0e 94 d2 1f 	call	0x3fa4	; 0x3fa4 <_ZN4UTFTC1Ehiiiii>
    2b28:	7e 01       	movw	r14, r28
    2b2a:	bc e7       	ldi	r27, 0x7C	; 124
    2b2c:	eb 0e       	add	r14, r27
    2b2e:	f1 1c       	adc	r15, r1
    2b30:	81 e3       	ldi	r24, 0x31	; 49
    2b32:	f4 01       	movw	r30, r8
    2b34:	d7 01       	movw	r26, r14
    2b36:	01 90       	ld	r0, Z+
    2b38:	0d 92       	st	X+, r0
    2b3a:	8a 95       	dec	r24
    2b3c:	e1 f7       	brne	.-8      	; 0x2b36 <_ZN6Screen4initEP7Control+0x5e>
	lcd.InitLCD();
    2b3e:	61 e0       	ldi	r22, 0x01	; 1
    2b40:	c7 01       	movw	r24, r14
    2b42:	0e 94 21 23 	call	0x4642	; 0x4642 <_ZN4UTFT7InitLCDEh>
	extern uint8_t BigFont[];
	extern uint8_t SmallFont[];
	
	menu.init(&lcd, SmallFont, BigFont, ctrlPtr->paramsPtr);
    2b46:	c3 55       	subi	r28, 0x53	; 83
    2b48:	df 4f       	sbci	r29, 0xFF	; 255
    2b4a:	d5 01       	movw	r26, r10
    2b4c:	ed 91       	ld	r30, X+
    2b4e:	fc 91       	ld	r31, X
    2b50:	ea 57       	subi	r30, 0x7A	; 122
    2b52:	ff 4f       	sbci	r31, 0xFF	; 255
    2b54:	00 81       	ld	r16, Z
    2b56:	11 81       	ldd	r17, Z+1	; 0x01
    2b58:	28 e9       	ldi	r18, 0x98	; 152
    2b5a:	32 e0       	ldi	r19, 0x02	; 2
    2b5c:	4c e7       	ldi	r20, 0x7C	; 124
    2b5e:	5e e0       	ldi	r21, 0x0E	; 14
    2b60:	b7 01       	movw	r22, r14
    2b62:	ce 01       	movw	r24, r28
    2b64:	ba d9       	rcall	.-3212   	; 0x1eda <_ZN4Menu4initEP4UTFTPhS2_PN10Parameters8params_tE>
	
	lcd.clrScr();
    2b66:	c7 01       	movw	r24, r14
    2b68:	0e 94 1e 36 	call	0x6c3c	; 0x6c3c <_ZN4UTFT6clrScrEv>
	menu.drawMenus();
    2b6c:	ce 01       	movw	r24, r28
    2b6e:	a0 db       	rcall	.-2240   	; 0x22b0 <_ZN4Menu9drawMenusEv>
	menu.drawValues();
    2b70:	ce 01       	movw	r24, r28
}
    2b72:	df 91       	pop	r29
    2b74:	cf 91       	pop	r28
    2b76:	1f 91       	pop	r17
    2b78:	0f 91       	pop	r16
    2b7a:	ff 90       	pop	r15
    2b7c:	ef 90       	pop	r14
    2b7e:	df 90       	pop	r13
    2b80:	cf 90       	pop	r12
    2b82:	bf 90       	pop	r11
    2b84:	af 90       	pop	r10
    2b86:	9f 90       	pop	r9
	
	menu.init(&lcd, SmallFont, BigFont, ctrlPtr->paramsPtr);
	
	lcd.clrScr();
	menu.drawMenus();
	menu.drawValues();
    2b88:	8f 90       	pop	r8
    2b8a:	9a cb       	rjmp	.-2252   	; 0x22c0 <_ZN4Menu10drawValuesEv>

00002b8c <_ZN6Screen7displayEv>:
}

void Screen::display() {
    2b8c:	ef 92       	push	r14
    2b8e:	ff 92       	push	r15
    2b90:	0f 93       	push	r16
    2b92:	1f 93       	push	r17
    2b94:	cf 93       	push	r28
    2b96:	df 93       	push	r29
    2b98:	8c 01       	movw	r16, r24
	if(ctrlPtr->menuChanged){
    2b9a:	ec 01       	movw	r28, r24
    2b9c:	c6 58       	subi	r28, 0x86	; 134
    2b9e:	df 4f       	sbci	r29, 0xFF	; 255
    2ba0:	e8 81       	ld	r30, Y
    2ba2:	f9 81       	ldd	r31, Y+1	; 0x01
    2ba4:	ec 57       	subi	r30, 0x7C	; 124
    2ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba8:	80 81       	ld	r24, Z
    2baa:	88 23       	and	r24, r24
    2bac:	69 f0       	breq	.+26     	; 0x2bc8 <_ZN6Screen7displayEv+0x3c>
		menu.drawMenus();
    2bae:	78 01       	movw	r14, r16
    2bb0:	8d ea       	ldi	r24, 0xAD	; 173
    2bb2:	e8 0e       	add	r14, r24
    2bb4:	f1 1c       	adc	r15, r1
    2bb6:	c7 01       	movw	r24, r14
    2bb8:	7b db       	rcall	.-2314   	; 0x22b0 <_ZN4Menu9drawMenusEv>
		menu.drawValues();
    2bba:	c7 01       	movw	r24, r14
    2bbc:	81 db       	rcall	.-2302   	; 0x22c0 <_ZN4Menu10drawValuesEv>
		ctrlPtr->menuChanged = false;
    2bbe:	e8 81       	ld	r30, Y
    2bc0:	f9 81       	ldd	r31, Y+1	; 0x01
    2bc2:	ec 57       	subi	r30, 0x7C	; 124
    2bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc6:	10 82       	st	Z, r1
	}
	if (ctrlPtr->enc1h.changed
    2bc8:	e8 81       	ld	r30, Y
    2bca:	f9 81       	ldd	r31, Y+1	; 0x01
    2bcc:	83 a9       	ldd	r24, Z+51	; 0x33
    2bce:	81 11       	cpse	r24, r1
    2bd0:	0f c0       	rjmp	.+30     	; 0x2bf0 <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc2h.changed
    2bd2:	df 01       	movw	r26, r30
    2bd4:	a8 5b       	subi	r26, 0xB8	; 184
    2bd6:	bf 4f       	sbci	r27, 0xFF	; 255
    2bd8:	8c 91       	ld	r24, X
    2bda:	81 11       	cpse	r24, r1
    2bdc:	09 c0       	rjmp	.+18     	; 0x2bf0 <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc3h.changed
    2bde:	55 96       	adiw	r26, 0x15	; 21
    2be0:	8c 91       	ld	r24, X
    2be2:	81 11       	cpse	r24, r1
    2be4:	05 c0       	rjmp	.+10     	; 0x2bf0 <_ZN6Screen7displayEv+0x64>
	|| ctrlPtr->enc4h.changed )
    2be6:	ee 58       	subi	r30, 0x8E	; 142
    2be8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bea:	80 81       	ld	r24, Z
    2bec:	88 23       	and	r24, r24
    2bee:	81 f0       	breq	.+32     	; 0x2c10 <_ZN6Screen7displayEv+0x84>
	{
		menu.drawValues();
    2bf0:	c8 01       	movw	r24, r16
    2bf2:	83 55       	subi	r24, 0x53	; 83
    2bf4:	9f 4f       	sbci	r25, 0xFF	; 255
    2bf6:	64 db       	rcall	.-2360   	; 0x22c0 <_ZN4Menu10drawValuesEv>
		ctrlPtr->enc1h.changed = false;
    2bf8:	e8 81       	ld	r30, Y
    2bfa:	f9 81       	ldd	r31, Y+1	; 0x01
    2bfc:	13 aa       	std	Z+51, r1	; 0x33
		ctrlPtr->enc2h.changed = false;
    2bfe:	df 01       	movw	r26, r30
    2c00:	a8 5b       	subi	r26, 0xB8	; 184
    2c02:	bf 4f       	sbci	r27, 0xFF	; 255
    2c04:	1c 92       	st	X, r1
		ctrlPtr->enc3h.changed = false;
    2c06:	55 96       	adiw	r26, 0x15	; 21
    2c08:	1c 92       	st	X, r1
		ctrlPtr->enc4h.changed = false;
    2c0a:	ee 58       	subi	r30, 0x8E	; 142
    2c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c0e:	10 82       	st	Z, r1
	}
    2c10:	df 91       	pop	r29
    2c12:	cf 91       	pop	r28
    2c14:	1f 91       	pop	r17
    2c16:	0f 91       	pop	r16
    2c18:	ff 90       	pop	r15
    2c1a:	ef 90       	pop	r14
    2c1c:	08 95       	ret

00002c1e <_GLOBAL__sub_I__ZN6ScreenC2Ev>:
    2c1e:	cf 93       	push	r28
    2c20:	df 93       	push	r29
    2c22:	66 ea       	ldi	r22, 0xA6	; 166
    2c24:	72 e0       	ldi	r23, 0x02	; 2
    2c26:	8a e1       	ldi	r24, 0x1A	; 26
    2c28:	96 e0       	ldi	r25, 0x06	; 6
    2c2a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2c2e:	6b ea       	ldi	r22, 0xAB	; 171
    2c30:	72 e0       	ldi	r23, 0x02	; 2
    2c32:	80 e2       	ldi	r24, 0x20	; 32
    2c34:	96 e0       	ldi	r25, 0x06	; 6
    2c36:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2c3a:	60 eb       	ldi	r22, 0xB0	; 176
    2c3c:	72 e0       	ldi	r23, 0x02	; 2
    2c3e:	86 e2       	ldi	r24, 0x26	; 38
    2c40:	96 e0       	ldi	r25, 0x06	; 6
    2c42:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2c46:	65 eb       	ldi	r22, 0xB5	; 181
    2c48:	72 e0       	ldi	r23, 0x02	; 2
    2c4a:	8c e2       	ldi	r24, 0x2C	; 44
    2c4c:	96 e0       	ldi	r25, 0x06	; 6
    2c4e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2c52:	68 eb       	ldi	r22, 0xB8	; 184
    2c54:	72 e0       	ldi	r23, 0x02	; 2
    2c56:	82 e3       	ldi	r24, 0x32	; 50
    2c58:	96 e0       	ldi	r25, 0x06	; 6
    2c5a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2c5e:	6e eb       	ldi	r22, 0xBE	; 190
    2c60:	72 e0       	ldi	r23, 0x02	; 2
    2c62:	82 e0       	ldi	r24, 0x02	; 2
    2c64:	96 e0       	ldi	r25, 0x06	; 6
    2c66:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2c6a:	64 ec       	ldi	r22, 0xC4	; 196
    2c6c:	72 e0       	ldi	r23, 0x02	; 2
    2c6e:	88 e0       	ldi	r24, 0x08	; 8
    2c70:	96 e0       	ldi	r25, 0x06	; 6
    2c72:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2c76:	6a ec       	ldi	r22, 0xCA	; 202
    2c78:	72 e0       	ldi	r23, 0x02	; 2
    2c7a:	8e e0       	ldi	r24, 0x0E	; 14
    2c7c:	96 e0       	ldi	r25, 0x06	; 6
    2c7e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2c82:	64 ec       	ldi	r22, 0xC4	; 196
    2c84:	72 e0       	ldi	r23, 0x02	; 2
    2c86:	84 e1       	ldi	r24, 0x14	; 20
    2c88:	96 e0       	ldi	r25, 0x06	; 6
    2c8a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2c8e:	6f ec       	ldi	r22, 0xCF	; 207
    2c90:	72 e0       	ldi	r23, 0x02	; 2
    2c92:	8a ee       	ldi	r24, 0xEA	; 234
    2c94:	95 e0       	ldi	r25, 0x05	; 5
    2c96:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2c9a:	64 ec       	ldi	r22, 0xC4	; 196
    2c9c:	72 e0       	ldi	r23, 0x02	; 2
    2c9e:	80 ef       	ldi	r24, 0xF0	; 240
    2ca0:	95 e0       	ldi	r25, 0x05	; 5
    2ca2:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2ca6:	65 ed       	ldi	r22, 0xD5	; 213
    2ca8:	72 e0       	ldi	r23, 0x02	; 2
    2caa:	86 ef       	ldi	r24, 0xF6	; 246
    2cac:	95 e0       	ldi	r25, 0x05	; 5
    2cae:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2cb2:	6a ec       	ldi	r22, 0xCA	; 202
    2cb4:	72 e0       	ldi	r23, 0x02	; 2
    2cb6:	8c ef       	ldi	r24, 0xFC	; 252
    2cb8:	95 e0       	ldi	r25, 0x05	; 5
    2cba:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2cbe:	6a ed       	ldi	r22, 0xDA	; 218
    2cc0:	72 e0       	ldi	r23, 0x02	; 2
    2cc2:	82 ed       	ldi	r24, 0xD2	; 210
    2cc4:	95 e0       	ldi	r25, 0x05	; 5
    2cc6:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2cca:	6f ed       	ldi	r22, 0xDF	; 223
    2ccc:	72 e0       	ldi	r23, 0x02	; 2
    2cce:	88 ed       	ldi	r24, 0xD8	; 216
    2cd0:	95 e0       	ldi	r25, 0x05	; 5
    2cd2:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2cd6:	64 ee       	ldi	r22, 0xE4	; 228
    2cd8:	72 e0       	ldi	r23, 0x02	; 2
    2cda:	8e ed       	ldi	r24, 0xDE	; 222
    2cdc:	95 e0       	ldi	r25, 0x05	; 5
    2cde:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2ce2:	69 ee       	ldi	r22, 0xE9	; 233
    2ce4:	72 e0       	ldi	r23, 0x02	; 2
    2ce6:	84 ee       	ldi	r24, 0xE4	; 228
    2ce8:	95 e0       	ldi	r25, 0x05	; 5
    2cea:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2cee:	6f ec       	ldi	r22, 0xCF	; 207
    2cf0:	72 e0       	ldi	r23, 0x02	; 2
    2cf2:	8a eb       	ldi	r24, 0xBA	; 186
    2cf4:	95 e0       	ldi	r25, 0x05	; 5
    2cf6:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2cfa:	6e ee       	ldi	r22, 0xEE	; 238
    2cfc:	72 e0       	ldi	r23, 0x02	; 2
    2cfe:	80 ec       	ldi	r24, 0xC0	; 192
    2d00:	95 e0       	ldi	r25, 0x05	; 5
    2d02:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d06:	63 ef       	ldi	r22, 0xF3	; 243
    2d08:	72 e0       	ldi	r23, 0x02	; 2
    2d0a:	86 ec       	ldi	r24, 0xC6	; 198
    2d0c:	95 e0       	ldi	r25, 0x05	; 5
    2d0e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d12:	6a ec       	ldi	r22, 0xCA	; 202
    2d14:	72 e0       	ldi	r23, 0x02	; 2
    2d16:	8c ec       	ldi	r24, 0xCC	; 204
    2d18:	95 e0       	ldi	r25, 0x05	; 5
    2d1a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2d1e:	6a ef       	ldi	r22, 0xFA	; 250
    2d20:	72 e0       	ldi	r23, 0x02	; 2
    2d22:	82 ea       	ldi	r24, 0xA2	; 162
    2d24:	95 e0       	ldi	r25, 0x05	; 5
    2d26:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d2a:	64 e0       	ldi	r22, 0x04	; 4
    2d2c:	73 e0       	ldi	r23, 0x03	; 3
    2d2e:	88 ea       	ldi	r24, 0xA8	; 168
    2d30:	95 e0       	ldi	r25, 0x05	; 5
    2d32:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d36:	6c e0       	ldi	r22, 0x0C	; 12
    2d38:	73 e0       	ldi	r23, 0x03	; 3
    2d3a:	8e ea       	ldi	r24, 0xAE	; 174
    2d3c:	95 e0       	ldi	r25, 0x05	; 5
    2d3e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d42:	65 e1       	ldi	r22, 0x15	; 21
    2d44:	73 e0       	ldi	r23, 0x03	; 3
    2d46:	84 eb       	ldi	r24, 0xB4	; 180
    2d48:	95 e0       	ldi	r25, 0x05	; 5
    2d4a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    2d4e:	6d e1       	ldi	r22, 0x1D	; 29
    2d50:	73 e0       	ldi	r23, 0x03	; 3
    2d52:	8a e8       	ldi	r24, 0x8A	; 138
    2d54:	95 e0       	ldi	r25, 0x05	; 5
    2d56:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d5a:	61 e2       	ldi	r22, 0x21	; 33
    2d5c:	73 e0       	ldi	r23, 0x03	; 3
    2d5e:	80 e9       	ldi	r24, 0x90	; 144
    2d60:	95 e0       	ldi	r25, 0x05	; 5
    2d62:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d66:	65 e2       	ldi	r22, 0x25	; 37
    2d68:	73 e0       	ldi	r23, 0x03	; 3
    2d6a:	86 e9       	ldi	r24, 0x96	; 150
    2d6c:	95 e0       	ldi	r25, 0x05	; 5
    2d6e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d72:	69 e2       	ldi	r22, 0x29	; 41
    2d74:	73 e0       	ldi	r23, 0x03	; 3
    2d76:	8c e9       	ldi	r24, 0x9C	; 156
    2d78:	95 e0       	ldi	r25, 0x05	; 5
    2d7a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    2d7e:	6d e2       	ldi	r22, 0x2D	; 45
    2d80:	73 e0       	ldi	r23, 0x03	; 3
    2d82:	8a e5       	ldi	r24, 0x5A	; 90
    2d84:	95 e0       	ldi	r25, 0x05	; 5
    2d86:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d8a:	c0 e0       	ldi	r28, 0x00	; 0
    2d8c:	d0 e0       	ldi	r29, 0x00	; 0
    2d8e:	26 96       	adiw	r28, 0x06	; 6
    2d90:	60 e9       	ldi	r22, 0x90	; 144
    2d92:	73 e0       	ldi	r23, 0x03	; 3
    2d94:	ce 01       	movw	r24, r28
    2d96:	86 5a       	subi	r24, 0xA6	; 166
    2d98:	9a 4f       	sbci	r25, 0xFA	; 250
    2d9a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2d9e:	ca 32       	cpi	r28, 0x2A	; 42
    2da0:	d1 05       	cpc	r29, r1
    2da2:	a9 f7       	brne	.-22     	; 0x2d8e <_GLOBAL__sub_I__ZN6ScreenC2Ev+0x170>
    2da4:	df 91       	pop	r29
    2da6:	cf 91       	pop	r28
    2da8:	08 95       	ret

00002daa <_GLOBAL__sub_D__ZN6ScreenC2Ev>:
    2daa:	cf 93       	push	r28
    2dac:	df 93       	push	r29
    2dae:	ca e8       	ldi	r28, 0x8A	; 138
    2db0:	d5 e0       	ldi	r29, 0x05	; 5
    2db2:	26 97       	sbiw	r28, 0x06	; 6
    2db4:	ce 01       	movw	r24, r28
    2db6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2dba:	85 e0       	ldi	r24, 0x05	; 5
    2dbc:	ca 35       	cpi	r28, 0x5A	; 90
    2dbe:	d8 07       	cpc	r29, r24
    2dc0:	c1 f7       	brne	.-16     	; 0x2db2 <_GLOBAL__sub_D__ZN6ScreenC2Ev+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    2dc2:	8c e9       	ldi	r24, 0x9C	; 156
    2dc4:	95 e0       	ldi	r25, 0x05	; 5
    2dc6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2dca:	86 e9       	ldi	r24, 0x96	; 150
    2dcc:	95 e0       	ldi	r25, 0x05	; 5
    2dce:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2dd2:	80 e9       	ldi	r24, 0x90	; 144
    2dd4:	95 e0       	ldi	r25, 0x05	; 5
    2dd6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2dda:	8a e8       	ldi	r24, 0x8A	; 138
    2ddc:	95 e0       	ldi	r25, 0x05	; 5
    2dde:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    2de2:	84 eb       	ldi	r24, 0xB4	; 180
    2de4:	95 e0       	ldi	r25, 0x05	; 5
    2de6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2dea:	8e ea       	ldi	r24, 0xAE	; 174
    2dec:	95 e0       	ldi	r25, 0x05	; 5
    2dee:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2df2:	88 ea       	ldi	r24, 0xA8	; 168
    2df4:	95 e0       	ldi	r25, 0x05	; 5
    2df6:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2dfa:	82 ea       	ldi	r24, 0xA2	; 162
    2dfc:	95 e0       	ldi	r25, 0x05	; 5
    2dfe:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2e02:	8c ec       	ldi	r24, 0xCC	; 204
    2e04:	95 e0       	ldi	r25, 0x05	; 5
    2e06:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e0a:	86 ec       	ldi	r24, 0xC6	; 198
    2e0c:	95 e0       	ldi	r25, 0x05	; 5
    2e0e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e12:	80 ec       	ldi	r24, 0xC0	; 192
    2e14:	95 e0       	ldi	r25, 0x05	; 5
    2e16:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e1a:	8a eb       	ldi	r24, 0xBA	; 186
    2e1c:	95 e0       	ldi	r25, 0x05	; 5
    2e1e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2e22:	84 ee       	ldi	r24, 0xE4	; 228
    2e24:	95 e0       	ldi	r25, 0x05	; 5
    2e26:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e2a:	8e ed       	ldi	r24, 0xDE	; 222
    2e2c:	95 e0       	ldi	r25, 0x05	; 5
    2e2e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e32:	88 ed       	ldi	r24, 0xD8	; 216
    2e34:	95 e0       	ldi	r25, 0x05	; 5
    2e36:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e3a:	82 ed       	ldi	r24, 0xD2	; 210
    2e3c:	95 e0       	ldi	r25, 0x05	; 5
    2e3e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2e42:	8c ef       	ldi	r24, 0xFC	; 252
    2e44:	95 e0       	ldi	r25, 0x05	; 5
    2e46:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e4a:	86 ef       	ldi	r24, 0xF6	; 246
    2e4c:	95 e0       	ldi	r25, 0x05	; 5
    2e4e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e52:	80 ef       	ldi	r24, 0xF0	; 240
    2e54:	95 e0       	ldi	r25, 0x05	; 5
    2e56:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e5a:	8a ee       	ldi	r24, 0xEA	; 234
    2e5c:	95 e0       	ldi	r25, 0x05	; 5
    2e5e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2e62:	84 e1       	ldi	r24, 0x14	; 20
    2e64:	96 e0       	ldi	r25, 0x06	; 6
    2e66:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e6a:	8e e0       	ldi	r24, 0x0E	; 14
    2e6c:	96 e0       	ldi	r25, 0x06	; 6
    2e6e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e72:	88 e0       	ldi	r24, 0x08	; 8
    2e74:	96 e0       	ldi	r25, 0x06	; 6
    2e76:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e7a:	82 e0       	ldi	r24, 0x02	; 2
    2e7c:	96 e0       	ldi	r25, 0x06	; 6
    2e7e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e82:	c8 e3       	ldi	r28, 0x38	; 56
    2e84:	d6 e0       	ldi	r29, 0x06	; 6
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    2e86:	26 97       	sbiw	r28, 0x06	; 6
    2e88:	ce 01       	movw	r24, r28
    2e8a:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    2e8e:	86 e0       	ldi	r24, 0x06	; 6
    2e90:	ca 31       	cpi	r28, 0x1A	; 26
    2e92:	d8 07       	cpc	r29, r24
    2e94:	c1 f7       	brne	.-16     	; 0x2e86 <_GLOBAL__sub_D__ZN6ScreenC2Ev+0xdc>
    2e96:	df 91       	pop	r29
    2e98:	cf 91       	pop	r28
    2e9a:	08 95       	ret

00002e9c <_Z10encoderISRv>:
	screen.display(); // screen must be called after i2c calls because screen resets some variables (ex. menuChanged)
	Timer1.attachInterrupt(encoderISR);
}

void encoderISR(){
	control.updateParameters();
    2e9c:	8e e2       	ldi	r24, 0x2E	; 46
    2e9e:	97 e0       	ldi	r25, 0x07	; 7
    2ea0:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <_ZN7Control16updateParametersEv>

00002ea4 <setup>:
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    2ea4:	26 e0       	ldi	r18, 0x06	; 6
    2ea6:	40 e0       	ldi	r20, 0x00	; 0
    2ea8:	51 ee       	ldi	r21, 0xE1	; 225
    2eaa:	60 e0       	ldi	r22, 0x00	; 0
    2eac:	70 e0       	ldi	r23, 0x00	; 0
    2eae:	82 e8       	ldi	r24, 0x82	; 130
    2eb0:	99 e0       	ldi	r25, 0x09	; 9
    2eb2:	0e 94 d9 45 	call	0x8bb2	; 0x8bb2 <_ZN14HardwareSerial5beginEmh>
Control control; 
Screen screen; 

void setup() {
	if(DEBUG) Serial.begin(57600);
	Wire.begin(8); // 0~7 are reserved
    2eb6:	68 e0       	ldi	r22, 0x08	; 8
    2eb8:	70 e0       	ldi	r23, 0x00	; 0
    2eba:	8d e2       	ldi	r24, 0x2D	; 45
    2ebc:	99 e0       	ldi	r25, 0x09	; 9
    2ebe:	0e 94 17 42 	call	0x842e	; 0x842e <_ZN7TwoWire5beginEi>
	control.init(&(parameters.data));
    2ec2:	60 ec       	ldi	r22, 0xC0	; 192
    2ec4:	77 e0       	ldi	r23, 0x07	; 7
    2ec6:	8e e2       	ldi	r24, 0x2E	; 46
    2ec8:	97 e0       	ldi	r25, 0x07	; 7
    2eca:	0e 94 3a 0b 	call	0x1674	; 0x1674 <_ZN7Control4initEPN10Parameters8params_tE>
	screen.init(&control);
    2ece:	6e e2       	ldi	r22, 0x2E	; 46
    2ed0:	77 e0       	ldi	r23, 0x07	; 7
    2ed2:	88 e3       	ldi	r24, 0x38	; 56
    2ed4:	96 e0       	ldi	r25, 0x06	; 6
    2ed6:	00 de       	rcall	.-1024   	; 0x2ad8 <_ZN6Screen4initEP7Control>
	Timer1.initialize(1000); // set a timer of length 1000 microseconds (or 0.001 sec - or 1000Hz)
    2ed8:	48 ee       	ldi	r20, 0xE8	; 232
    2eda:	53 e0       	ldi	r21, 0x03	; 3
    2edc:	60 e0       	ldi	r22, 0x00	; 0
    2ede:	70 e0       	ldi	r23, 0x00	; 0
    2ee0:	89 eb       	ldi	r24, 0xB9	; 185
    2ee2:	98 e0       	ldi	r25, 0x08	; 8
    2ee4:	4d d3       	rcall	.+1690   	; 0x3580 <_ZN8TimerOne10initializeEl>
	Timer1.attachInterrupt( encoderISR );
    2ee6:	2f ef       	ldi	r18, 0xFF	; 255
    2ee8:	3f ef       	ldi	r19, 0xFF	; 255
    2eea:	a9 01       	movw	r20, r18
    2eec:	6e e4       	ldi	r22, 0x4E	; 78
    2eee:	77 e1       	ldi	r23, 0x17	; 23
    2ef0:	89 eb       	ldi	r24, 0xB9	; 185
    2ef2:	98 e0       	ldi	r25, 0x08	; 8
    2ef4:	5a c3       	rjmp	.+1716   	; 0x35aa <_ZN8TimerOne15attachInterruptEPFvvEl>

00002ef6 <loop>:
}

void loop() {
	control.read();
    2ef6:	8e e2       	ldi	r24, 0x2E	; 46
    2ef8:	97 e0       	ldi	r25, 0x07	; 7
    2efa:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <_ZN7Control4readEv>
	Timer1.detachInterrupt();
    2efe:	89 eb       	ldi	r24, 0xB9	; 185
    2f00:	98 e0       	ldi	r25, 0x08	; 8
    2f02:	44 d3       	rcall	.+1672   	; 0x358c <_ZN8TimerOne15detachInterruptEv>
	Wire.onRequest(requestEvent); // register event
    2f04:	6b e1       	ldi	r22, 0x1B	; 27
    2f06:	79 e1       	ldi	r23, 0x19	; 25
    2f08:	8d e2       	ldi	r24, 0x2D	; 45
    2f0a:	99 e0       	ldi	r25, 0x09	; 9
    2f0c:	0e 94 18 42 	call	0x8430	; 0x8430 <_ZN7TwoWire9onRequestEPFvvE>
	screen.display(); // screen must be called after i2c calls because screen resets some variables (ex. menuChanged)
    2f10:	88 e3       	ldi	r24, 0x38	; 56
    2f12:	96 e0       	ldi	r25, 0x06	; 6
    2f14:	3b de       	rcall	.-906    	; 0x2b8c <_ZN6Screen7displayEv>
	Timer1.attachInterrupt(encoderISR);
    2f16:	2f ef       	ldi	r18, 0xFF	; 255
    2f18:	3f ef       	ldi	r19, 0xFF	; 255
    2f1a:	a9 01       	movw	r20, r18
    2f1c:	6e e4       	ldi	r22, 0x4E	; 78
    2f1e:	77 e1       	ldi	r23, 0x17	; 23
    2f20:	89 eb       	ldi	r24, 0xB9	; 185
    2f22:	98 e0       	ldi	r25, 0x08	; 8
    2f24:	42 c3       	rjmp	.+1668   	; 0x35aa <_ZN8TimerOne15attachInterruptEPFvvEl>

00002f26 <_GLOBAL__sub_I_parameters>:
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
	Wire.write(byte1);
	Wire.write(byte2);
}
    2f26:	cf 93       	push	r28
    2f28:	df 93       	push	r29
    2f2a:	66 ea       	ldi	r22, 0xA6	; 166
    2f2c:	72 e0       	ldi	r23, 0x02	; 2
    2f2e:	8b e9       	ldi	r24, 0x9B	; 155
    2f30:	98 e0       	ldi	r25, 0x08	; 8
    2f32:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2f36:	6b ea       	ldi	r22, 0xAB	; 171
    2f38:	72 e0       	ldi	r23, 0x02	; 2
    2f3a:	81 ea       	ldi	r24, 0xA1	; 161
    2f3c:	98 e0       	ldi	r25, 0x08	; 8
    2f3e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2f42:	60 eb       	ldi	r22, 0xB0	; 176
    2f44:	72 e0       	ldi	r23, 0x02	; 2
    2f46:	87 ea       	ldi	r24, 0xA7	; 167
    2f48:	98 e0       	ldi	r25, 0x08	; 8
    2f4a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2f4e:	65 eb       	ldi	r22, 0xB5	; 181
    2f50:	72 e0       	ldi	r23, 0x02	; 2
    2f52:	8d ea       	ldi	r24, 0xAD	; 173
    2f54:	98 e0       	ldi	r25, 0x08	; 8
    2f56:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2f5a:	68 eb       	ldi	r22, 0xB8	; 184
    2f5c:	72 e0       	ldi	r23, 0x02	; 2
    2f5e:	83 eb       	ldi	r24, 0xB3	; 179
    2f60:	98 e0       	ldi	r25, 0x08	; 8
    2f62:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    2f66:	6e eb       	ldi	r22, 0xBE	; 190
    2f68:	72 e0       	ldi	r23, 0x02	; 2
    2f6a:	83 e8       	ldi	r24, 0x83	; 131
    2f6c:	98 e0       	ldi	r25, 0x08	; 8
    2f6e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2f72:	64 ec       	ldi	r22, 0xC4	; 196
    2f74:	72 e0       	ldi	r23, 0x02	; 2
    2f76:	89 e8       	ldi	r24, 0x89	; 137
    2f78:	98 e0       	ldi	r25, 0x08	; 8
    2f7a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2f7e:	6a ec       	ldi	r22, 0xCA	; 202
    2f80:	72 e0       	ldi	r23, 0x02	; 2
    2f82:	8f e8       	ldi	r24, 0x8F	; 143
    2f84:	98 e0       	ldi	r25, 0x08	; 8
    2f86:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2f8a:	64 ec       	ldi	r22, 0xC4	; 196
    2f8c:	72 e0       	ldi	r23, 0x02	; 2
    2f8e:	85 e9       	ldi	r24, 0x95	; 149
    2f90:	98 e0       	ldi	r25, 0x08	; 8
    2f92:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    2f96:	6f ec       	ldi	r22, 0xCF	; 207
    2f98:	72 e0       	ldi	r23, 0x02	; 2
    2f9a:	8b e6       	ldi	r24, 0x6B	; 107
    2f9c:	98 e0       	ldi	r25, 0x08	; 8
    2f9e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2fa2:	64 ec       	ldi	r22, 0xC4	; 196
    2fa4:	72 e0       	ldi	r23, 0x02	; 2
    2fa6:	81 e7       	ldi	r24, 0x71	; 113
    2fa8:	98 e0       	ldi	r25, 0x08	; 8
    2faa:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2fae:	65 ed       	ldi	r22, 0xD5	; 213
    2fb0:	72 e0       	ldi	r23, 0x02	; 2
    2fb2:	87 e7       	ldi	r24, 0x77	; 119
    2fb4:	98 e0       	ldi	r25, 0x08	; 8
    2fb6:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2fba:	6a ec       	ldi	r22, 0xCA	; 202
    2fbc:	72 e0       	ldi	r23, 0x02	; 2
    2fbe:	8d e7       	ldi	r24, 0x7D	; 125
    2fc0:	98 e0       	ldi	r25, 0x08	; 8
    2fc2:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    2fc6:	6a ed       	ldi	r22, 0xDA	; 218
    2fc8:	72 e0       	ldi	r23, 0x02	; 2
    2fca:	83 e5       	ldi	r24, 0x53	; 83
    2fcc:	98 e0       	ldi	r25, 0x08	; 8
    2fce:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2fd2:	6f ed       	ldi	r22, 0xDF	; 223
    2fd4:	72 e0       	ldi	r23, 0x02	; 2
    2fd6:	89 e5       	ldi	r24, 0x59	; 89
    2fd8:	98 e0       	ldi	r25, 0x08	; 8
    2fda:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2fde:	64 ee       	ldi	r22, 0xE4	; 228
    2fe0:	72 e0       	ldi	r23, 0x02	; 2
    2fe2:	8f e5       	ldi	r24, 0x5F	; 95
    2fe4:	98 e0       	ldi	r25, 0x08	; 8
    2fe6:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    2fea:	69 ee       	ldi	r22, 0xE9	; 233
    2fec:	72 e0       	ldi	r23, 0x02	; 2
    2fee:	85 e6       	ldi	r24, 0x65	; 101
    2ff0:	98 e0       	ldi	r25, 0x08	; 8
    2ff2:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    2ff6:	6f ec       	ldi	r22, 0xCF	; 207
    2ff8:	72 e0       	ldi	r23, 0x02	; 2
    2ffa:	8b e3       	ldi	r24, 0x3B	; 59
    2ffc:	98 e0       	ldi	r25, 0x08	; 8
    2ffe:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    3002:	6e ee       	ldi	r22, 0xEE	; 238
    3004:	72 e0       	ldi	r23, 0x02	; 2
    3006:	81 e4       	ldi	r24, 0x41	; 65
    3008:	98 e0       	ldi	r25, 0x08	; 8
    300a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    300e:	63 ef       	ldi	r22, 0xF3	; 243
    3010:	72 e0       	ldi	r23, 0x02	; 2
    3012:	87 e4       	ldi	r24, 0x47	; 71
    3014:	98 e0       	ldi	r25, 0x08	; 8
    3016:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    301a:	6a ec       	ldi	r22, 0xCA	; 202
    301c:	72 e0       	ldi	r23, 0x02	; 2
    301e:	8d e4       	ldi	r24, 0x4D	; 77
    3020:	98 e0       	ldi	r25, 0x08	; 8
    3022:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    3026:	6a ef       	ldi	r22, 0xFA	; 250
    3028:	72 e0       	ldi	r23, 0x02	; 2
    302a:	83 e2       	ldi	r24, 0x23	; 35
    302c:	98 e0       	ldi	r25, 0x08	; 8
    302e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    3032:	64 e0       	ldi	r22, 0x04	; 4
    3034:	73 e0       	ldi	r23, 0x03	; 3
    3036:	89 e2       	ldi	r24, 0x29	; 41
    3038:	98 e0       	ldi	r25, 0x08	; 8
    303a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    303e:	6c e0       	ldi	r22, 0x0C	; 12
    3040:	73 e0       	ldi	r23, 0x03	; 3
    3042:	8f e2       	ldi	r24, 0x2F	; 47
    3044:	98 e0       	ldi	r25, 0x08	; 8
    3046:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    304a:	65 e1       	ldi	r22, 0x15	; 21
    304c:	73 e0       	ldi	r23, 0x03	; 3
    304e:	85 e3       	ldi	r24, 0x35	; 53
    3050:	98 e0       	ldi	r25, 0x08	; 8
    3052:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    3056:	6d e1       	ldi	r22, 0x1D	; 29
    3058:	73 e0       	ldi	r23, 0x03	; 3
    305a:	8b e0       	ldi	r24, 0x0B	; 11
    305c:	98 e0       	ldi	r25, 0x08	; 8
    305e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    3062:	61 e2       	ldi	r22, 0x21	; 33
    3064:	73 e0       	ldi	r23, 0x03	; 3
    3066:	81 e1       	ldi	r24, 0x11	; 17
    3068:	98 e0       	ldi	r25, 0x08	; 8
    306a:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    306e:	65 e2       	ldi	r22, 0x25	; 37
    3070:	73 e0       	ldi	r23, 0x03	; 3
    3072:	87 e1       	ldi	r24, 0x17	; 23
    3074:	98 e0       	ldi	r25, 0x08	; 8
    3076:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    307a:	69 e2       	ldi	r22, 0x29	; 41
    307c:	73 e0       	ldi	r23, 0x03	; 3
    307e:	8d e1       	ldi	r24, 0x1D	; 29
    3080:	98 e0       	ldi	r25, 0x08	; 8
    3082:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    const byte NUMFX = 8;
	const String fxNames[NUMFX] = {"OFF, >>, <<, AND, OR, NOR, XAND, XOR"};
    3086:	6d e2       	ldi	r22, 0x2D	; 45
    3088:	73 e0       	ldi	r23, 0x03	; 3
    308a:	8b ed       	ldi	r24, 0xDB	; 219
    308c:	97 e0       	ldi	r25, 0x07	; 7
    308e:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    3092:	c0 e0       	ldi	r28, 0x00	; 0
    3094:	d0 e0       	ldi	r29, 0x00	; 0
    3096:	26 96       	adiw	r28, 0x06	; 6
    3098:	60 e9       	ldi	r22, 0x90	; 144
    309a:	73 e0       	ldi	r23, 0x03	; 3
    309c:	ce 01       	movw	r24, r28
    309e:	85 52       	subi	r24, 0x25	; 37
    30a0:	98 4f       	sbci	r25, 0xF8	; 248
    30a2:	0e 94 e1 49 	call	0x93c2	; 0x93c2 <_ZN6StringC1EPKc>
    30a6:	ca 32       	cpi	r28, 0x2A	; 42
    30a8:	d1 05       	cpc	r29, r1
    30aa:	a9 f7       	brne	.-22     	; 0x3096 <_GLOBAL__sub_I_parameters+0x170>
    30ac:	10 92 c0 07 	sts	0x07C0, r1	; 0x8007c0 <parameters>
    30b0:	10 92 c1 07 	sts	0x07C1, r1	; 0x8007c1 <parameters+0x1>
    30b4:	8c ed       	ldi	r24, 0xDC	; 220
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	90 93 c3 07 	sts	0x07C3, r25	; 0x8007c3 <parameters+0x3>
    30bc:	80 93 c2 07 	sts	0x07C2, r24	; 0x8007c2 <parameters+0x2>
    30c0:	10 92 c4 07 	sts	0x07C4, r1	; 0x8007c4 <parameters+0x4>
    30c4:	80 e9       	ldi	r24, 0x90	; 144
    30c6:	91 e0       	ldi	r25, 0x01	; 1
    30c8:	90 93 c6 07 	sts	0x07C6, r25	; 0x8007c6 <parameters+0x6>
    30cc:	80 93 c5 07 	sts	0x07C5, r24	; 0x8007c5 <parameters+0x5>
    30d0:	10 92 c7 07 	sts	0x07C7, r1	; 0x8007c7 <parameters+0x7>
    30d4:	80 e4       	ldi	r24, 0x40	; 64
    30d6:	9f e1       	ldi	r25, 0x1F	; 31
    30d8:	90 93 c9 07 	sts	0x07C9, r25	; 0x8007c9 <parameters+0x9>
    30dc:	80 93 c8 07 	sts	0x07C8, r24	; 0x8007c8 <parameters+0x8>
    30e0:	88 e2       	ldi	r24, 0x28	; 40
    30e2:	80 93 ca 07 	sts	0x07CA, r24	; 0x8007ca <parameters+0xa>
    30e6:	10 92 cb 07 	sts	0x07CB, r1	; 0x8007cb <parameters+0xb>
    30ea:	10 92 cd 07 	sts	0x07CD, r1	; 0x8007cd <parameters+0xd>
    30ee:	10 92 cc 07 	sts	0x07CC, r1	; 0x8007cc <parameters+0xc>
    30f2:	88 ec       	ldi	r24, 0xC8	; 200
    30f4:	90 e0       	ldi	r25, 0x00	; 0
    30f6:	90 93 cf 07 	sts	0x07CF, r25	; 0x8007cf <parameters+0xf>
    30fa:	80 93 ce 07 	sts	0x07CE, r24	; 0x8007ce <parameters+0xe>
    30fe:	84 eb       	ldi	r24, 0xB4	; 180
    3100:	80 93 d0 07 	sts	0x07D0, r24	; 0x8007d0 <parameters+0x10>
    3104:	8a ef       	ldi	r24, 0xFA	; 250
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	90 93 d2 07 	sts	0x07D2, r25	; 0x8007d2 <parameters+0x12>
    310c:	80 93 d1 07 	sts	0x07D1, r24	; 0x8007d1 <parameters+0x11>
    3110:	10 92 d3 07 	sts	0x07D3, r1	; 0x8007d3 <parameters+0x13>
    3114:	10 92 d4 07 	sts	0x07D4, r1	; 0x8007d4 <parameters+0x14>
    3118:	10 92 d5 07 	sts	0x07D5, r1	; 0x8007d5 <parameters+0x15>
    311c:	10 92 d6 07 	sts	0x07D6, r1	; 0x8007d6 <parameters+0x16>
    3120:	8f e7       	ldi	r24, 0x7F	; 127
    3122:	80 93 d7 07 	sts	0x07D7, r24	; 0x8007d7 <parameters+0x17>
    3126:	10 92 d8 07 	sts	0x07D8, r1	; 0x8007d8 <parameters+0x18>
    312a:	10 92 d9 07 	sts	0x07D9, r1	; 0x8007d9 <parameters+0x19>
    312e:	10 92 da 07 	sts	0x07DA, r1	; 0x8007da <parameters+0x1a>
#include "GLOBALS.h"

#define DEBUG 1

Parameters parameters;
Control control; 
    3132:	8e e2       	ldi	r24, 0x2E	; 46
    3134:	97 e0       	ldi	r25, 0x07	; 7
    3136:	0e 94 47 0a 	call	0x148e	; 0x148e <_ZN7ControlC1Ev>
Screen screen; 
    313a:	88 e3       	ldi	r24, 0x38	; 56
    313c:	96 e0       	ldi	r25, 0x06	; 6
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
	Wire.write(byte1);
	Wire.write(byte2);
}
    313e:	df 91       	pop	r29
    3140:	cf 91       	pop	r28

#define DEBUG 1

Parameters parameters;
Control control; 
Screen screen; 
    3142:	ad cc       	rjmp	.-1702   	; 0x2a9e <_ZN6ScreenC1Ev>

00003144 <_GLOBAL__sub_D_parameters>:
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
	Wire.write(byte1);
	Wire.write(byte2);
}
    3144:	cf 93       	push	r28
    3146:	df 93       	push	r29
    3148:	cb e0       	ldi	r28, 0x0B	; 11
    314a:	d8 e0       	ldi	r29, 0x08	; 8
    314c:	26 97       	sbiw	r28, 0x06	; 6
    314e:	ce 01       	movw	r24, r28
    3150:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    3154:	87 e0       	ldi	r24, 0x07	; 7
    3156:	cb 3d       	cpi	r28, 0xDB	; 219
    3158:	d8 07       	cpc	r29, r24
    315a:	c1 f7       	brne	.-16     	; 0x314c <_GLOBAL__sub_D_parameters+0x8>
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    const byte NUMWAVES = 4; 
	const String waveNames[NUMWAVES] = {"SIN", "SQR", "TRI", "SAW"};
    315c:	8d e1       	ldi	r24, 0x1D	; 29
    315e:	98 e0       	ldi	r25, 0x08	; 8
    3160:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    3164:	87 e1       	ldi	r24, 0x17	; 23
    3166:	98 e0       	ldi	r25, 0x08	; 8
    3168:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    316c:	81 e1       	ldi	r24, 0x11	; 17
    316e:	98 e0       	ldi	r25, 0x08	; 8
    3170:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    3174:	8b e0       	ldi	r24, 0x0B	; 11
    3176:	98 e0       	ldi	r25, 0x08	; 8
    3178:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
	const String settLabels[BLABELS] = {"IN>PITCH:", "IN>ENV:", "ENV>FIL:", "PRESET:"};
    317c:	85 e3       	ldi	r24, 0x35	; 53
    317e:	98 e0       	ldi	r25, 0x08	; 8
    3180:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    3184:	8f e2       	ldi	r24, 0x2F	; 47
    3186:	98 e0       	ldi	r25, 0x08	; 8
    3188:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    318c:	89 e2       	ldi	r24, 0x29	; 41
    318e:	98 e0       	ldi	r25, 0x08	; 8
    3190:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    3194:	83 e2       	ldi	r24, 0x23	; 35
    3196:	98 e0       	ldi	r25, 0x08	; 8
    3198:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    const String fxLabels[BLABELS] = {"TYPE:", "AMT:", "PARAM:", "LFO:"};
    319c:	8d e4       	ldi	r24, 0x4D	; 77
    319e:	98 e0       	ldi	r25, 0x08	; 8
    31a0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31a4:	87 e4       	ldi	r24, 0x47	; 71
    31a6:	98 e0       	ldi	r25, 0x08	; 8
    31a8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31ac:	81 e4       	ldi	r24, 0x41	; 65
    31ae:	98 e0       	ldi	r25, 0x08	; 8
    31b0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31b4:	8b e3       	ldi	r24, 0x3B	; 59
    31b6:	98 e0       	ldi	r25, 0x08	; 8
    31b8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    const String envLabels[BLABELS] = {"ATK:", "DEC:", "SUS:", "REL:"};
    31bc:	85 e6       	ldi	r24, 0x65	; 101
    31be:	98 e0       	ldi	r25, 0x08	; 8
    31c0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31c4:	8f e5       	ldi	r24, 0x5F	; 95
    31c6:	98 e0       	ldi	r25, 0x08	; 8
    31c8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31cc:	89 e5       	ldi	r24, 0x59	; 89
    31ce:	98 e0       	ldi	r25, 0x08	; 8
    31d0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31d4:	83 e5       	ldi	r24, 0x53	; 83
    31d6:	98 e0       	ldi	r25, 0x08	; 8
    31d8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    const String filLabels[BLABELS] = {"TYPE:", "FREQ:", "RES:", "LFO:"};
    31dc:	8d e7       	ldi	r24, 0x7D	; 125
    31de:	98 e0       	ldi	r25, 0x08	; 8
    31e0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31e4:	87 e7       	ldi	r24, 0x77	; 119
    31e6:	98 e0       	ldi	r25, 0x08	; 8
    31e8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31ec:	81 e7       	ldi	r24, 0x71	; 113
    31ee:	98 e0       	ldi	r25, 0x08	; 8
    31f0:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    31f4:	8b e6       	ldi	r24, 0x6B	; 107
    31f6:	98 e0       	ldi	r25, 0x08	; 8
    31f8:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    const byte BLABELS = 4;
    const String oscLabels[BLABELS] = {"WAVE:", "FREQ:", "LFO:", "FREQ:"};
    31fc:	85 e9       	ldi	r24, 0x95	; 149
    31fe:	98 e0       	ldi	r25, 0x08	; 8
    3200:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    3204:	8f e8       	ldi	r24, 0x8F	; 143
    3206:	98 e0       	ldi	r25, 0x08	; 8
    3208:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    320c:	89 e8       	ldi	r24, 0x89	; 137
    320e:	98 e0       	ldi	r25, 0x08	; 8
    3210:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    3214:	83 e8       	ldi	r24, 0x83	; 131
    3216:	98 e0       	ldi	r25, 0x08	; 8
    3218:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    321c:	c9 eb       	ldi	r28, 0xB9	; 185
    321e:	d8 e0       	ldi	r29, 0x08	; 8
    const int COLOR = 0xF800;
    const byte STROKEWEIGHT = 3;
    const float LFOMUL = 100.f;
	
	const byte TLABELS = 5;
    const String tmLabels[TLABELS] = {"OSC.", "FIL.", "ENV.", "FX", "SETT."};
    3220:	26 97       	sbiw	r28, 0x06	; 6
    3222:	ce 01       	movw	r24, r28
    3224:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <_ZN6StringD1Ev>
    3228:	88 e0       	ldi	r24, 0x08	; 8
    322a:	cb 39       	cpi	r28, 0x9B	; 155
    322c:	d8 07       	cpc	r29, r24
    322e:	c1 f7       	brne	.-16     	; 0x3220 <_GLOBAL__sub_D_parameters+0xdc>
    3230:	df 91       	pop	r29
    3232:	cf 91       	pop	r28
    3234:	08 95       	ret

00003236 <_Z12requestEventv>:

void encoderISR(){
	control.updateParameters();
}

void requestEvent(){   	
    3236:	cf 93       	push	r28
    3238:	df 93       	push	r29
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
	byte byte2 = 0;
	
	switch (parameters.data.menu)
    323a:	60 91 c0 07 	lds	r22, 0x07C0	; 0x8007c0 <parameters>
    323e:	62 30       	cpi	r22, 0x02	; 2
    3240:	09 f4       	brne	.+2      	; 0x3244 <_Z12requestEventv+0xe>
    3242:	5a c0       	rjmp	.+180    	; 0x32f8 <_Z12requestEventv+0xc2>
    3244:	28 f4       	brcc	.+10     	; 0x3250 <_Z12requestEventv+0x1a>
    3246:	66 23       	and	r22, r22
    3248:	51 f0       	breq	.+20     	; 0x325e <_Z12requestEventv+0x28>
    324a:	61 30       	cpi	r22, 0x01	; 1
    324c:	79 f1       	breq	.+94     	; 0x32ac <_Z12requestEventv+0x76>
    324e:	b5 c0       	rjmp	.+362    	; 0x33ba <_Z12requestEventv+0x184>
    3250:	63 30       	cpi	r22, 0x03	; 3
    3252:	09 f4       	brne	.+2      	; 0x3256 <_Z12requestEventv+0x20>
    3254:	79 c0       	rjmp	.+242    	; 0x3348 <_Z12requestEventv+0x112>
    3256:	64 30       	cpi	r22, 0x04	; 4
    3258:	09 f4       	brne	.+2      	; 0x325c <_Z12requestEventv+0x26>
    325a:	96 c0       	rjmp	.+300    	; 0x3388 <_Z12requestEventv+0x152>
    325c:	ae c0       	rjmp	.+348    	; 0x33ba <_Z12requestEventv+0x184>
	{			
		// Lowest nibble -> menu
		// Highest nibble -> param num (ex: oscWave=0, oscFreq=1, lfoWave=2, lfoFreq=3)
		case 0: 
			if (control.enc1h.changed)
    325e:	80 91 61 07 	lds	r24, 0x0761	; 0x800761 <control+0x33>
    3262:	88 23       	and	r24, r24
    3264:	19 f0       	breq	.+6      	; 0x326c <_Z12requestEventv+0x36>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = parameters.data.oscWave;
    3266:	c0 91 c1 07 	lds	r28, 0x07C1	; 0x8007c1 <parameters+0x1>
    326a:	02 c0       	rjmp	.+4      	; 0x3270 <_Z12requestEventv+0x3a>
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
    326c:	c0 e0       	ldi	r28, 0x00	; 0
	2nd byte - parameter value
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
    326e:	60 e8       	ldi	r22, 0x80	; 128
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = parameters.data.oscWave;
			    byte2 = 0; // ensure upper byte is 00000000
			}	
			if (control.enc2h.changed)
    3270:	80 91 76 07 	lds	r24, 0x0776	; 0x800776 <control+0x48>
    3274:	88 23       	and	r24, r24
    3276:	31 f0       	breq	.+12     	; 0x3284 <_Z12requestEventv+0x4e>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
				byte1 = get_lowerByte(parameters.data.oscFreq);
    3278:	c0 91 c2 07 	lds	r28, 0x07C2	; 0x8007c2 <parameters+0x2>
				byte2 = get_upperByte(parameters.data.oscFreq); 
    327c:	d0 91 c3 07 	lds	r29, 0x07C3	; 0x8007c3 <parameters+0x3>
			    byte2 = 0; // ensure upper byte is 00000000
			}	
			if (control.enc2h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
    3280:	60 e1       	ldi	r22, 0x10	; 16
    3282:	01 c0       	rjmp	.+2      	; 0x3286 <_Z12requestEventv+0x50>
    3284:	d0 e0       	ldi	r29, 0x00	; 0
				byte1 = get_lowerByte(parameters.data.oscFreq);
				byte2 = get_upperByte(parameters.data.oscFreq); 
			}
			if (control.enc3h.changed)
    3286:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <control+0x5d>
    328a:	88 23       	and	r24, r24
    328c:	21 f0       	breq	.+8      	; 0x3296 <_Z12requestEventv+0x60>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
				byte1 = parameters.data.lfoWave;
    328e:	c0 91 c4 07 	lds	r28, 0x07C4	; 0x8007c4 <parameters+0x4>
				byte2 = 0; // ensure upper byte is 00000000
    3292:	d0 e0       	ldi	r29, 0x00	; 0
				byte2 = get_upperByte(parameters.data.oscFreq); 
			}
			if (control.enc3h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
    3294:	60 e2       	ldi	r22, 0x20	; 32
				byte1 = parameters.data.lfoWave;
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc4h.changed)
    3296:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <control+0x72>
    329a:	88 23       	and	r24, r24
    329c:	09 f4       	brne	.+2      	; 0x32a0 <_Z12requestEventv+0x6a>
    329e:	92 c0       	rjmp	.+292    	; 0x33c4 <_Z12requestEventv+0x18e>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
				byte1 = get_lowerByte(parameters.data.lfoFreq); // this is an integer (float * LFOMUL)
    32a0:	c0 91 c5 07 	lds	r28, 0x07C5	; 0x8007c5 <parameters+0x5>
				byte2 = get_upperByte(parameters.data.lfoFreq);
    32a4:	d0 91 c6 07 	lds	r29, 0x07C6	; 0x8007c6 <parameters+0x6>
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc4h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
    32a8:	60 e3       	ldi	r22, 0x30	; 48
    32aa:	8c c0       	rjmp	.+280    	; 0x33c4 <_Z12requestEventv+0x18e>
				byte2 = get_upperByte(parameters.data.lfoFreq);
			}
		break;
		
		case 1:
			if (control.enc1h.changed)
    32ac:	80 91 61 07 	lds	r24, 0x0761	; 0x800761 <control+0x33>
    32b0:	88 23       	and	r24, r24
    32b2:	19 f0       	breq	.+6      	; 0x32ba <_Z12requestEventv+0x84>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = parameters.data.filType;
    32b4:	c0 91 c7 07 	lds	r28, 0x07C7	; 0x8007c7 <parameters+0x7>
    32b8:	02 c0       	rjmp	.+4      	; 0x32be <_Z12requestEventv+0x88>
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
    32ba:	c0 e0       	ldi	r28, 0x00	; 0
	2nd byte - parameter value
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
    32bc:	60 e8       	ldi	r22, 0x80	; 128
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = parameters.data.filType;
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc2h.changed)
    32be:	80 91 76 07 	lds	r24, 0x0776	; 0x800776 <control+0x48>
    32c2:	88 23       	and	r24, r24
    32c4:	31 f0       	breq	.+12     	; 0x32d2 <_Z12requestEventv+0x9c>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
				byte1 = get_lowerByte(parameters.data.filFreq);
    32c6:	c0 91 c8 07 	lds	r28, 0x07C8	; 0x8007c8 <parameters+0x8>
				byte2 = get_upperByte(parameters.data.filFreq);
    32ca:	d0 91 c9 07 	lds	r29, 0x07C9	; 0x8007c9 <parameters+0x9>
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc2h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
    32ce:	61 e1       	ldi	r22, 0x11	; 17
    32d0:	01 c0       	rjmp	.+2      	; 0x32d4 <_Z12requestEventv+0x9e>
    32d2:	d0 e0       	ldi	r29, 0x00	; 0
				byte1 = get_lowerByte(parameters.data.filFreq);
				byte2 = get_upperByte(parameters.data.filFreq);
			}
			if (control.enc3h.changed)
    32d4:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <control+0x5d>
    32d8:	88 23       	and	r24, r24
    32da:	21 f0       	breq	.+8      	; 0x32e4 <_Z12requestEventv+0xae>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
				byte1 = parameters.data.filRes;
    32dc:	c0 91 ca 07 	lds	r28, 0x07CA	; 0x8007ca <parameters+0xa>
				byte2 = 0; // ensure upper byte is 00000000
    32e0:	d0 e0       	ldi	r29, 0x00	; 0
				byte2 = get_upperByte(parameters.data.filFreq);
			}
			if (control.enc3h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
    32e2:	61 e2       	ldi	r22, 0x21	; 33
				byte1 = parameters.data.filRes;
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc4h.changed)
    32e4:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <control+0x72>
    32e8:	88 23       	and	r24, r24
    32ea:	09 f4       	brne	.+2      	; 0x32ee <_Z12requestEventv+0xb8>
    32ec:	6b c0       	rjmp	.+214    	; 0x33c4 <_Z12requestEventv+0x18e>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
				byte1 = get_lowerByte(parameters.data.filLfo); // this is an integer (float * LFOMUL)
    32ee:	c0 91 cb 07 	lds	r28, 0x07CB	; 0x8007cb <parameters+0xb>
				byte2 = 0; // ensure upper byte is 00000000
    32f2:	d0 e0       	ldi	r29, 0x00	; 0
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc4h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
    32f4:	61 e3       	ldi	r22, 0x31	; 49
    32f6:	66 c0       	rjmp	.+204    	; 0x33c4 <_Z12requestEventv+0x18e>
				byte2 = 0; // ensure upper byte is 00000000
			}
		break;
		
		case 2:
			if (control.enc1h.changed)
    32f8:	80 91 61 07 	lds	r24, 0x0761	; 0x800761 <control+0x33>
    32fc:	88 23       	and	r24, r24
    32fe:	29 f0       	breq	.+10     	; 0x330a <_Z12requestEventv+0xd4>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = get_lowerByte(parameters.data.envAtk);
    3300:	c0 91 cc 07 	lds	r28, 0x07CC	; 0x8007cc <parameters+0xc>
				byte2 = get_upperByte(parameters.data.envAtk);
    3304:	d0 91 cd 07 	lds	r29, 0x07CD	; 0x8007cd <parameters+0xd>
    3308:	03 c0       	rjmp	.+6      	; 0x3310 <_Z12requestEventv+0xda>
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
	byte byte2 = 0;
    330a:	d0 e0       	ldi	r29, 0x00	; 0
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
    330c:	c0 e0       	ldi	r28, 0x00	; 0
	2nd byte - parameter value
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
    330e:	60 e8       	ldi	r22, 0x80	; 128
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = get_lowerByte(parameters.data.envAtk);
				byte2 = get_upperByte(parameters.data.envAtk);
			}
			if (control.enc2h.changed)
    3310:	80 91 76 07 	lds	r24, 0x0776	; 0x800776 <control+0x48>
    3314:	88 23       	and	r24, r24
    3316:	29 f0       	breq	.+10     	; 0x3322 <_Z12requestEventv+0xec>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
				byte1 = get_lowerByte(parameters.data.envDcy);
    3318:	c0 91 ce 07 	lds	r28, 0x07CE	; 0x8007ce <parameters+0xe>
				byte2 = get_upperByte(parameters.data.envDcy);
    331c:	d0 91 cf 07 	lds	r29, 0x07CF	; 0x8007cf <parameters+0xf>
				byte2 = get_upperByte(parameters.data.envAtk);
			}
			if (control.enc2h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
    3320:	62 e1       	ldi	r22, 0x12	; 18
				byte1 = get_lowerByte(parameters.data.envDcy);
				byte2 = get_upperByte(parameters.data.envDcy);
			}
			if (control.enc3h.changed)
    3322:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <control+0x5d>
    3326:	88 23       	and	r24, r24
    3328:	21 f0       	breq	.+8      	; 0x3332 <_Z12requestEventv+0xfc>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
				byte1 = parameters.data.envSus;
    332a:	c0 91 d0 07 	lds	r28, 0x07D0	; 0x8007d0 <parameters+0x10>
				byte2 = 0; // ensure upper byte is 00000000
    332e:	d0 e0       	ldi	r29, 0x00	; 0
				byte2 = get_upperByte(parameters.data.envDcy);
			}
			if (control.enc3h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
    3330:	62 e2       	ldi	r22, 0x22	; 34
				byte1 = parameters.data.envSus;
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc4h.changed)
    3332:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <control+0x72>
    3336:	88 23       	and	r24, r24
    3338:	09 f4       	brne	.+2      	; 0x333c <_Z12requestEventv+0x106>
    333a:	44 c0       	rjmp	.+136    	; 0x33c4 <_Z12requestEventv+0x18e>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
				byte1 = get_lowerByte(parameters.data.envRel); // this is an integer (float * LFOMUL)
    333c:	c0 91 d1 07 	lds	r28, 0x07D1	; 0x8007d1 <parameters+0x11>
				byte2 = get_upperByte(parameters.data.envRel);
    3340:	d0 91 d2 07 	lds	r29, 0x07D2	; 0x8007d2 <parameters+0x12>
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc4h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
    3344:	62 e3       	ldi	r22, 0x32	; 50
    3346:	3e c0       	rjmp	.+124    	; 0x33c4 <_Z12requestEventv+0x18e>
				byte2 = get_upperByte(parameters.data.envRel);
			}
		break;
		
		case 3:
			if (control.enc1h.changed)
    3348:	80 91 61 07 	lds	r24, 0x0761	; 0x800761 <control+0x33>
    334c:	88 23       	and	r24, r24
    334e:	19 f0       	breq	.+6      	; 0x3356 <_Z12requestEventv+0x120>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = get_lowerByte(parameters.data.fxType);
    3350:	c0 91 d3 07 	lds	r28, 0x07D3	; 0x8007d3 <parameters+0x13>
    3354:	02 c0       	rjmp	.+4      	; 0x335a <_Z12requestEventv+0x124>
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
    3356:	c0 e0       	ldi	r28, 0x00	; 0
	2nd byte - parameter value
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
    3358:	60 e8       	ldi	r22, 0x80	; 128
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = get_lowerByte(parameters.data.fxType);
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc2h.changed)
    335a:	80 91 76 07 	lds	r24, 0x0776	; 0x800776 <control+0x48>
    335e:	88 23       	and	r24, r24
    3360:	19 f0       	breq	.+6      	; 0x3368 <_Z12requestEventv+0x132>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
				byte1 = get_lowerByte(parameters.data.fxAmt);
    3362:	c0 91 d4 07 	lds	r28, 0x07D4	; 0x8007d4 <parameters+0x14>
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc2h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
    3366:	63 e1       	ldi	r22, 0x13	; 19
				byte1 = get_lowerByte(parameters.data.fxAmt);
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc3h.changed)
    3368:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <control+0x5d>
    336c:	88 23       	and	r24, r24
    336e:	19 f0       	breq	.+6      	; 0x3376 <_Z12requestEventv+0x140>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
				byte1 = parameters.data.fxParam;
    3370:	c0 91 d5 07 	lds	r28, 0x07D5	; 0x8007d5 <parameters+0x15>
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc3h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
    3374:	63 e2       	ldi	r22, 0x23	; 35
				byte1 = parameters.data.fxParam;
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc4h.changed)
    3376:	80 91 a0 07 	lds	r24, 0x07A0	; 0x8007a0 <control+0x72>
    337a:	88 23       	and	r24, r24
    337c:	11 f1       	breq	.+68     	; 0x33c2 <_Z12requestEventv+0x18c>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
				byte1 = get_lowerByte(parameters.data.fxLfo); // this is an integer (float * LFOMUL)
    337e:	c0 91 d6 07 	lds	r28, 0x07D6	; 0x8007d6 <parameters+0x16>
				byte2 = 0; // ensure upper byte is 00000000
    3382:	d0 e0       	ldi	r29, 0x00	; 0
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc4h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (3 << 4);
    3384:	63 e3       	ldi	r22, 0x33	; 51
    3386:	1e c0       	rjmp	.+60     	; 0x33c4 <_Z12requestEventv+0x18e>
				byte2 = 0; // ensure upper byte is 00000000
			}
		break;
		
		case 4:
			if (control.enc1h.changed)
    3388:	80 91 61 07 	lds	r24, 0x0761	; 0x800761 <control+0x33>
    338c:	88 23       	and	r24, r24
    338e:	19 f0       	breq	.+6      	; 0x3396 <_Z12requestEventv+0x160>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = get_lowerByte(parameters.data.inPitch);
    3390:	c0 91 d7 07 	lds	r28, 0x07D7	; 0x8007d7 <parameters+0x17>
    3394:	02 c0       	rjmp	.+4      	; 0x339a <_Z12requestEventv+0x164>
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
    3396:	c0 e0       	ldi	r28, 0x00	; 0
	2nd byte - parameter value
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
    3398:	60 e8       	ldi	r22, 0x80	; 128
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (0 << 4);
				byte1 = get_lowerByte(parameters.data.inPitch);
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc2h.changed)
    339a:	80 91 76 07 	lds	r24, 0x0776	; 0x800776 <control+0x48>
    339e:	88 23       	and	r24, r24
    33a0:	19 f0       	breq	.+6      	; 0x33a8 <_Z12requestEventv+0x172>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
				byte1 = get_lowerByte(parameters.data.inEnv);
    33a2:	c0 91 d8 07 	lds	r28, 0x07D8	; 0x8007d8 <parameters+0x18>
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc2h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (1 << 4);
    33a6:	64 e1       	ldi	r22, 0x14	; 20
				byte1 = get_lowerByte(parameters.data.inEnv);
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc3h.changed)
    33a8:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <control+0x5d>
    33ac:	88 23       	and	r24, r24
    33ae:	49 f0       	breq	.+18     	; 0x33c2 <_Z12requestEventv+0x18c>
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
				byte1 = parameters.data.filEnv;
    33b0:	c0 91 d9 07 	lds	r28, 0x07D9	; 0x8007d9 <parameters+0x19>
				byte2 = 0; // ensure upper byte is 00000000
    33b4:	d0 e0       	ldi	r29, 0x00	; 0
				byte2 = 0; // ensure upper byte is 00000000
			}
			if (control.enc3h.changed)
			{
				paramAddr = 0x00; // reset parameter address to send via I2C
				paramAddr = parameters.data.menu | (2 << 4);
    33b6:	64 e2       	ldi	r22, 0x24	; 36
    33b8:	05 c0       	rjmp	.+10     	; 0x33c4 <_Z12requestEventv+0x18e>
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
	byte byte2 = 0;
    33ba:	d0 e0       	ldi	r29, 0x00	; 0
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
	byte byte1 = 0;
    33bc:	c0 e0       	ldi	r28, 0x00	; 0
	2nd byte - parameter value
	3nd byte - upper byte if parameter is integer or float* 
	*- float is multiplied by 10? and converted to integer
	*/
	
	byte paramAddr = B10000000; // to signal no COM set first byte 8th bit high 
    33be:	60 e8       	ldi	r22, 0x80	; 128
    33c0:	01 c0       	rjmp	.+2      	; 0x33c4 <_Z12requestEventv+0x18e>
    33c2:	d0 e0       	ldi	r29, 0x00	; 0
		break;
		
		default:	
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
    33c4:	8d e2       	ldi	r24, 0x2D	; 45
    33c6:	99 e0       	ldi	r25, 0x09	; 9
    33c8:	0e 94 c1 41 	call	0x8382	; 0x8382 <_ZN7TwoWire5writeEh>
	Wire.write(byte1);
    33cc:	6c 2f       	mov	r22, r28
    33ce:	8d e2       	ldi	r24, 0x2D	; 45
    33d0:	99 e0       	ldi	r25, 0x09	; 9
    33d2:	0e 94 c1 41 	call	0x8382	; 0x8382 <_ZN7TwoWire5writeEh>
	Wire.write(byte2);
    33d6:	6d 2f       	mov	r22, r29
    33d8:	8d e2       	ldi	r24, 0x2D	; 45
    33da:	99 e0       	ldi	r25, 0x09	; 9
}
    33dc:	df 91       	pop	r29
    33de:	cf 91       	pop	r28
		default:	
		break;
	}
	Wire.write(paramAddr); // send B10000000 if nothing happens
	Wire.write(byte1);
	Wire.write(byte2);
    33e0:	0c 94 c1 41 	jmp	0x8382	; 0x8382 <_ZN7TwoWire5writeEh>

000033e4 <_ZN6RotaryC1Ev>:
#endif

/*
 * Constructor. Each arg is the pin number for each encoder contact.
 */
Rotary::Rotary(){}
    33e4:	08 95       	ret

000033e6 <_ZN6RotaryC1Ecc>:
Rotary::Rotary(char _pin1, char _pin2) {
    33e6:	cf 93       	push	r28
    33e8:	df 93       	push	r29
    33ea:	ec 01       	movw	r28, r24
    33ec:	86 2f       	mov	r24, r22
  // Assign variables.
  pin1 = _pin1;
    33ee:	69 83       	std	Y+1, r22	; 0x01
  pin2 = _pin2;
    33f0:	4a 83       	std	Y+2, r20	; 0x02
  // Set pins to input.
  pinMode(pin1, INPUT);
    33f2:	60 e0       	ldi	r22, 0x00	; 0
    33f4:	0e 94 e8 48 	call	0x91d0	; 0x91d0 <pinMode>
  pinMode(pin2, INPUT);
    33f8:	60 e0       	ldi	r22, 0x00	; 0
    33fa:	8a 81       	ldd	r24, Y+2	; 0x02
    33fc:	0e 94 e8 48 	call	0x91d0	; 0x91d0 <pinMode>
#ifdef ENABLE_PULLUPS
  digitalWrite(pin1, HIGH);
    3400:	61 e0       	ldi	r22, 0x01	; 1
    3402:	89 81       	ldd	r24, Y+1	; 0x01
    3404:	0e 94 24 49 	call	0x9248	; 0x9248 <digitalWrite>
  digitalWrite(pin2, HIGH);
    3408:	61 e0       	ldi	r22, 0x01	; 1
    340a:	8a 81       	ldd	r24, Y+2	; 0x02
    340c:	0e 94 24 49 	call	0x9248	; 0x9248 <digitalWrite>
#endif
  // Initialise state.
  state = R_START;
    3410:	18 82       	st	Y, r1
}
    3412:	df 91       	pop	r29
    3414:	cf 91       	pop	r28
    3416:	08 95       	ret

00003418 <_ZN6Rotary7processEv>:

unsigned char Rotary::process() {
    3418:	0f 93       	push	r16
    341a:	1f 93       	push	r17
    341c:	cf 93       	push	r28
    341e:	df 93       	push	r29
    3420:	ec 01       	movw	r28, r24
  // Grab state of input pins.
  unsigned char pinstate = (digitalRead(pin2) << 1) | digitalRead(pin1);
    3422:	8a 81       	ldd	r24, Y+2	; 0x02
    3424:	0e 94 52 49 	call	0x92a4	; 0x92a4 <digitalRead>
    3428:	8c 01       	movw	r16, r24
    342a:	89 81       	ldd	r24, Y+1	; 0x01
    342c:	0e 94 52 49 	call	0x92a4	; 0x92a4 <digitalRead>
  // Determine new state from the pins and state table.
  state = ttable[state & 0xf][pinstate];
    3430:	e8 81       	ld	r30, Y
    3432:	ef 70       	andi	r30, 0x0F	; 15
    3434:	00 0f       	add	r16, r16
    3436:	11 1f       	adc	r17, r17
    3438:	80 2b       	or	r24, r16
    343a:	94 e0       	ldi	r25, 0x04	; 4
    343c:	e9 9f       	mul	r30, r25
    343e:	f0 01       	movw	r30, r0
    3440:	11 24       	eor	r1, r1
    3442:	ee 5a       	subi	r30, 0xAE	; 174
    3444:	fc 4f       	sbci	r31, 0xFC	; 252
    3446:	e8 0f       	add	r30, r24
    3448:	f1 1d       	adc	r31, r1
    344a:	80 81       	ld	r24, Z
    344c:	88 83       	st	Y, r24
  // Return emit bits, ie the generated event.
  return state & 0x30;
}
    344e:	80 73       	andi	r24, 0x30	; 48
    3450:	df 91       	pop	r29
    3452:	cf 91       	pop	r28
    3454:	1f 91       	pop	r17
    3456:	0f 91       	pop	r16
    3458:	08 95       	ret

0000345a <__vector_20>:
  else if(pin == 2 || pin == 10) {
    DDRB |= _BV(PORTB2);
    TCCR1A |= _BV(COM1B1);
  }
  setPwmDuty(pin, duty);
  resume();			// Lex - make sure the clock is running.  We don't want to restart the count, in case we are starting the second WGM
    345a:	1f 92       	push	r1
    345c:	0f 92       	push	r0
    345e:	0f b6       	in	r0, 0x3f	; 63
    3460:	0f 92       	push	r0
    3462:	11 24       	eor	r1, r1
    3464:	0b b6       	in	r0, 0x3b	; 59
    3466:	0f 92       	push	r0
    3468:	2f 93       	push	r18
    346a:	3f 93       	push	r19
    346c:	4f 93       	push	r20
    346e:	5f 93       	push	r21
    3470:	6f 93       	push	r22
    3472:	7f 93       	push	r23
    3474:	8f 93       	push	r24
    3476:	9f 93       	push	r25
    3478:	af 93       	push	r26
    347a:	bf 93       	push	r27
    347c:	ef 93       	push	r30
    347e:	ff 93       	push	r31
    3480:	e0 91 bd 08 	lds	r30, 0x08BD	; 0x8008bd <Timer1+0x4>
    3484:	f0 91 be 08 	lds	r31, 0x08BE	; 0x8008be <Timer1+0x5>
    3488:	19 95       	eicall
    348a:	ff 91       	pop	r31
    348c:	ef 91       	pop	r30
    348e:	bf 91       	pop	r27
    3490:	af 91       	pop	r26
    3492:	9f 91       	pop	r25
    3494:	8f 91       	pop	r24
    3496:	7f 91       	pop	r23
    3498:	6f 91       	pop	r22
    349a:	5f 91       	pop	r21
    349c:	4f 91       	pop	r20
    349e:	3f 91       	pop	r19
    34a0:	2f 91       	pop	r18
    34a2:	0f 90       	pop	r0
    34a4:	0b be       	out	0x3b, r0	; 59
    34a6:	0f 90       	pop	r0
    34a8:	0f be       	out	0x3f, r0	; 63
    34aa:	0f 90       	pop	r0
    34ac:	1f 90       	pop	r1
    34ae:	18 95       	reti

000034b0 <_ZN8TimerOne9setPeriodEl>:
    34b0:	fc 01       	movw	r30, r24
    34b2:	a3 e0       	ldi	r26, 0x03	; 3
    34b4:	44 0f       	add	r20, r20
    34b6:	55 1f       	adc	r21, r21
    34b8:	66 1f       	adc	r22, r22
    34ba:	77 1f       	adc	r23, r23
    34bc:	aa 95       	dec	r26
    34be:	d1 f7       	brne	.-12     	; 0x34b4 <_ZN8TimerOne9setPeriodEl+0x4>
    34c0:	41 15       	cp	r20, r1
    34c2:	51 05       	cpc	r21, r1
    34c4:	81 e0       	ldi	r24, 0x01	; 1
    34c6:	68 07       	cpc	r22, r24
    34c8:	71 05       	cpc	r23, r1
    34ca:	14 f4       	brge	.+4      	; 0x34d0 <_ZN8TimerOne9setPeriodEl+0x20>
    34cc:	81 e0       	ldi	r24, 0x01	; 1
    34ce:	0e c0       	rjmp	.+28     	; 0x34ec <_ZN8TimerOne9setPeriodEl+0x3c>
    34d0:	33 e0       	ldi	r19, 0x03	; 3
    34d2:	75 95       	asr	r23
    34d4:	67 95       	ror	r22
    34d6:	57 95       	ror	r21
    34d8:	47 95       	ror	r20
    34da:	3a 95       	dec	r19
    34dc:	d1 f7       	brne	.-12     	; 0x34d2 <_ZN8TimerOne9setPeriodEl+0x22>
    34de:	41 15       	cp	r20, r1
    34e0:	51 05       	cpc	r21, r1
    34e2:	81 e0       	ldi	r24, 0x01	; 1
    34e4:	68 07       	cpc	r22, r24
    34e6:	71 05       	cpc	r23, r1
    34e8:	1c f4       	brge	.+6      	; 0x34f0 <_ZN8TimerOne9setPeriodEl+0x40>
    34ea:	82 e0       	ldi	r24, 0x02	; 2
    34ec:	82 83       	std	Z+2, r24	; 0x02
    34ee:	31 c0       	rjmp	.+98     	; 0x3552 <_ZN8TimerOne9setPeriodEl+0xa2>
    34f0:	23 e0       	ldi	r18, 0x03	; 3
    34f2:	75 95       	asr	r23
    34f4:	67 95       	ror	r22
    34f6:	57 95       	ror	r21
    34f8:	47 95       	ror	r20
    34fa:	2a 95       	dec	r18
    34fc:	d1 f7       	brne	.-12     	; 0x34f2 <_ZN8TimerOne9setPeriodEl+0x42>
    34fe:	41 15       	cp	r20, r1
    3500:	51 05       	cpc	r21, r1
    3502:	81 e0       	ldi	r24, 0x01	; 1
    3504:	68 07       	cpc	r22, r24
    3506:	71 05       	cpc	r23, r1
    3508:	14 f4       	brge	.+4      	; 0x350e <_ZN8TimerOne9setPeriodEl+0x5e>
    350a:	83 e0       	ldi	r24, 0x03	; 3
    350c:	ef cf       	rjmp	.-34     	; 0x34ec <_ZN8TimerOne9setPeriodEl+0x3c>
    350e:	92 e0       	ldi	r25, 0x02	; 2
    3510:	75 95       	asr	r23
    3512:	67 95       	ror	r22
    3514:	57 95       	ror	r21
    3516:	47 95       	ror	r20
    3518:	9a 95       	dec	r25
    351a:	d1 f7       	brne	.-12     	; 0x3510 <_ZN8TimerOne9setPeriodEl+0x60>
    351c:	41 15       	cp	r20, r1
    351e:	51 05       	cpc	r21, r1
    3520:	81 e0       	ldi	r24, 0x01	; 1
    3522:	68 07       	cpc	r22, r24
    3524:	71 05       	cpc	r23, r1
    3526:	14 f4       	brge	.+4      	; 0x352c <_ZN8TimerOne9setPeriodEl+0x7c>
    3528:	84 e0       	ldi	r24, 0x04	; 4
    352a:	e0 cf       	rjmp	.-64     	; 0x34ec <_ZN8TimerOne9setPeriodEl+0x3c>
    352c:	82 e0       	ldi	r24, 0x02	; 2
    352e:	75 95       	asr	r23
    3530:	67 95       	ror	r22
    3532:	57 95       	ror	r21
    3534:	47 95       	ror	r20
    3536:	8a 95       	dec	r24
    3538:	d1 f7       	brne	.-12     	; 0x352e <_ZN8TimerOne9setPeriodEl+0x7e>
    353a:	85 e0       	ldi	r24, 0x05	; 5
    353c:	82 83       	std	Z+2, r24	; 0x02
    353e:	41 15       	cp	r20, r1
    3540:	51 05       	cpc	r21, r1
    3542:	81 e0       	ldi	r24, 0x01	; 1
    3544:	68 07       	cpc	r22, r24
    3546:	71 05       	cpc	r23, r1
    3548:	24 f0       	brlt	.+8      	; 0x3552 <_ZN8TimerOne9setPeriodEl+0xa2>
    354a:	4f ef       	ldi	r20, 0xFF	; 255
    354c:	5f ef       	ldi	r21, 0xFF	; 255
    354e:	60 e0       	ldi	r22, 0x00	; 0
    3550:	70 e0       	ldi	r23, 0x00	; 0
    3552:	8f b7       	in	r24, 0x3f	; 63
    3554:	83 83       	std	Z+3, r24	; 0x03
    3556:	f8 94       	cli
    3558:	51 83       	std	Z+1, r21	; 0x01
    355a:	40 83       	st	Z, r20
    355c:	50 93 87 00 	sts	0x0087, r21	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
    3560:	40 93 86 00 	sts	0x0086, r20	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
    3564:	83 81       	ldd	r24, Z+3	; 0x03
    3566:	8f bf       	out	0x3f, r24	; 63
    3568:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    356c:	88 7f       	andi	r24, 0xF8	; 248
    356e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    3572:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    3576:	82 81       	ldd	r24, Z+2	; 0x02
    3578:	89 2b       	or	r24, r25
    357a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    357e:	08 95       	ret

00003580 <_ZN8TimerOne10initializeEl>:
    3580:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    3584:	20 e1       	ldi	r18, 0x10	; 16
    3586:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    358a:	92 cf       	rjmp	.-220    	; 0x34b0 <_ZN8TimerOne9setPeriodEl>

0000358c <_ZN8TimerOne15detachInterruptEv>:
    358c:	ef e6       	ldi	r30, 0x6F	; 111
    358e:	f0 e0       	ldi	r31, 0x00	; 0
    3590:	80 81       	ld	r24, Z
    3592:	8e 7f       	andi	r24, 0xFE	; 254
    3594:	80 83       	st	Z, r24
    3596:	08 95       	ret

00003598 <_ZN8TimerOne6resumeEv>:
    3598:	e1 e8       	ldi	r30, 0x81	; 129
    359a:	f0 e0       	ldi	r31, 0x00	; 0
    359c:	20 81       	ld	r18, Z
    359e:	dc 01       	movw	r26, r24
    35a0:	12 96       	adiw	r26, 0x02	; 2
    35a2:	8c 91       	ld	r24, X
    35a4:	82 2b       	or	r24, r18
    35a6:	80 83       	st	Z, r24
    35a8:	08 95       	ret

000035aa <_ZN8TimerOne15attachInterruptEPFvvEl>:
  if(pin == 1 || pin == 9)       TCCR1A &= ~_BV(COM1A1);   // clear the bit that enables pwm on PB1
  else if(pin == 2 || pin == 10) TCCR1A &= ~_BV(COM1B1);   // clear the bit that enables pwm on PB2
}

void TimerOne::attachInterrupt(void (*isr)(), long microseconds)
{
    35aa:	0f 93       	push	r16
    35ac:	1f 93       	push	r17
    35ae:	cf 93       	push	r28
    35b0:	df 93       	push	r29
    35b2:	ec 01       	movw	r28, r24
    35b4:	8b 01       	movw	r16, r22
    35b6:	ba 01       	movw	r22, r20
    35b8:	a9 01       	movw	r20, r18
  if(microseconds > 0) setPeriod(microseconds);
    35ba:	14 16       	cp	r1, r20
    35bc:	15 06       	cpc	r1, r21
    35be:	16 06       	cpc	r1, r22
    35c0:	17 06       	cpc	r1, r23
    35c2:	0c f4       	brge	.+2      	; 0x35c6 <_ZN8TimerOne15attachInterruptEPFvvEl+0x1c>
    35c4:	75 df       	rcall	.-278    	; 0x34b0 <_ZN8TimerOne9setPeriodEl>
  isrCallback = isr;                                       // register the user's callback with the real ISR
    35c6:	1d 83       	std	Y+5, r17	; 0x05
    35c8:	0c 83       	std	Y+4, r16	; 0x04
  TIMSK1 = _BV(TOIE1);                                     // sets the timer overflow interrupt enable bit
    35ca:	81 e0       	ldi	r24, 0x01	; 1
    35cc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
	// might be running with interrupts disabled (eg inside an ISR), so don't touch the global state
//  sei();
  resume();												
    35d0:	ce 01       	movw	r24, r28
}
    35d2:	df 91       	pop	r29
    35d4:	cf 91       	pop	r28
    35d6:	1f 91       	pop	r17
  if(microseconds > 0) setPeriod(microseconds);
  isrCallback = isr;                                       // register the user's callback with the real ISR
  TIMSK1 = _BV(TOIE1);                                     // sets the timer overflow interrupt enable bit
	// might be running with interrupts disabled (eg inside an ISR), so don't touch the global state
//  sei();
  resume();												
    35d8:	0f 91       	pop	r16
    35da:	de cf       	rjmp	.-68     	; 0x3598 <_ZN8TimerOne6resumeEv>

000035dc <_ZN4UTFT12LCD_Writ_BusEcch>:
			} 
		}
		sbi(P_CS, B_CS);
	}
	clrXY();
}
    35dc:	fc 01       	movw	r30, r24
    35de:	28 30       	cpi	r18, 0x08	; 8
    35e0:	09 f4       	brne	.+2      	; 0x35e4 <_ZN4UTFT12LCD_Writ_BusEcch+0x8>
    35e2:	ee c0       	rjmp	.+476    	; 0x37c0 <_ZN4UTFT12LCD_Writ_BusEcch+0x1e4>
    35e4:	18 f4       	brcc	.+6      	; 0x35ec <_ZN4UTFT12LCD_Writ_BusEcch+0x10>
    35e6:	21 30       	cpi	r18, 0x01	; 1
    35e8:	41 f0       	breq	.+16     	; 0x35fa <_ZN4UTFT12LCD_Writ_BusEcch+0x1e>
    35ea:	08 95       	ret
    35ec:	20 31       	cpi	r18, 0x10	; 16
    35ee:	09 f4       	brne	.+2      	; 0x35f2 <_ZN4UTFT12LCD_Writ_BusEcch+0x16>
    35f0:	f7 c0       	rjmp	.+494    	; 0x37e0 <_ZN4UTFT12LCD_Writ_BusEcch+0x204>
    35f2:	21 31       	cpi	r18, 0x11	; 17
    35f4:	09 f4       	brne	.+2      	; 0x35f8 <_ZN4UTFT12LCD_Writ_BusEcch+0x1c>
    35f6:	02 c1       	rjmp	.+516    	; 0x37fc <_ZN4UTFT12LCD_Writ_BusEcch+0x220>
    35f8:	08 95       	ret
    35fa:	87 85       	ldd	r24, Z+15	; 0x0f
    35fc:	84 30       	cpi	r24, 0x04	; 4
    35fe:	c1 f4       	brne	.+48     	; 0x3630 <_ZN4UTFT12LCD_Writ_BusEcch+0x54>
    3600:	a0 8d       	ldd	r26, Z+24	; 0x18
    3602:	b1 8d       	ldd	r27, Z+25	; 0x19
    3604:	82 a1       	ldd	r24, Z+34	; 0x22
    3606:	9c 91       	ld	r25, X
    3608:	61 30       	cpi	r22, 0x01	; 1
    360a:	11 f4       	brne	.+4      	; 0x3610 <_ZN4UTFT12LCD_Writ_BusEcch+0x34>
    360c:	89 2b       	or	r24, r25
    360e:	02 c0       	rjmp	.+4      	; 0x3614 <_ZN4UTFT12LCD_Writ_BusEcch+0x38>
    3610:	80 95       	com	r24
    3612:	89 23       	and	r24, r25
    3614:	8c 93       	st	X, r24
    3616:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3618:	b3 8d       	ldd	r27, Z+27	; 0x1b
    361a:	9c 91       	ld	r25, X
    361c:	83 a1       	ldd	r24, Z+35	; 0x23
    361e:	80 95       	com	r24
    3620:	89 23       	and	r24, r25
    3622:	8c 93       	st	X, r24
    3624:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3626:	b3 8d       	ldd	r27, Z+27	; 0x1b
    3628:	9c 91       	ld	r25, X
    362a:	83 a1       	ldd	r24, Z+35	; 0x23
    362c:	89 2b       	or	r24, r25
    362e:	08 c0       	rjmp	.+16     	; 0x3640 <_ZN4UTFT12LCD_Writ_BusEcch+0x64>
    3630:	a0 89       	ldd	r26, Z+16	; 0x10
    3632:	b1 89       	ldd	r27, Z+17	; 0x11
    3634:	86 8d       	ldd	r24, Z+30	; 0x1e
    3636:	9c 91       	ld	r25, X
    3638:	61 30       	cpi	r22, 0x01	; 1
    363a:	c1 f3       	breq	.-16     	; 0x362c <_ZN4UTFT12LCD_Writ_BusEcch+0x50>
    363c:	80 95       	com	r24
    363e:	89 23       	and	r24, r25
    3640:	8c 93       	st	X, r24
    3642:	a0 8d       	ldd	r26, Z+24	; 0x18
    3644:	b1 8d       	ldd	r27, Z+25	; 0x19
    3646:	82 a1       	ldd	r24, Z+34	; 0x22
    3648:	9c 91       	ld	r25, X
    364a:	47 ff       	sbrs	r20, 7
    364c:	02 c0       	rjmp	.+4      	; 0x3652 <_ZN4UTFT12LCD_Writ_BusEcch+0x76>
    364e:	89 2b       	or	r24, r25
    3650:	02 c0       	rjmp	.+4      	; 0x3656 <_ZN4UTFT12LCD_Writ_BusEcch+0x7a>
    3652:	80 95       	com	r24
    3654:	89 23       	and	r24, r25
    3656:	8c 93       	st	X, r24
    3658:	a2 8d       	ldd	r26, Z+26	; 0x1a
    365a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    365c:	9c 91       	ld	r25, X
    365e:	83 a1       	ldd	r24, Z+35	; 0x23
    3660:	80 95       	com	r24
    3662:	89 23       	and	r24, r25
    3664:	8c 93       	st	X, r24
    3666:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3668:	b3 8d       	ldd	r27, Z+27	; 0x1b
    366a:	9c 91       	ld	r25, X
    366c:	83 a1       	ldd	r24, Z+35	; 0x23
    366e:	89 2b       	or	r24, r25
    3670:	8c 93       	st	X, r24
    3672:	a0 8d       	ldd	r26, Z+24	; 0x18
    3674:	b1 8d       	ldd	r27, Z+25	; 0x19
    3676:	82 a1       	ldd	r24, Z+34	; 0x22
    3678:	9c 91       	ld	r25, X
    367a:	46 ff       	sbrs	r20, 6
    367c:	02 c0       	rjmp	.+4      	; 0x3682 <_ZN4UTFT12LCD_Writ_BusEcch+0xa6>
    367e:	89 2b       	or	r24, r25
    3680:	02 c0       	rjmp	.+4      	; 0x3686 <_ZN4UTFT12LCD_Writ_BusEcch+0xaa>
    3682:	80 95       	com	r24
    3684:	89 23       	and	r24, r25
    3686:	8c 93       	st	X, r24
    3688:	a2 8d       	ldd	r26, Z+26	; 0x1a
    368a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    368c:	9c 91       	ld	r25, X
    368e:	83 a1       	ldd	r24, Z+35	; 0x23
    3690:	80 95       	com	r24
    3692:	89 23       	and	r24, r25
    3694:	8c 93       	st	X, r24
    3696:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3698:	b3 8d       	ldd	r27, Z+27	; 0x1b
    369a:	9c 91       	ld	r25, X
    369c:	83 a1       	ldd	r24, Z+35	; 0x23
    369e:	89 2b       	or	r24, r25
    36a0:	8c 93       	st	X, r24
    36a2:	a0 8d       	ldd	r26, Z+24	; 0x18
    36a4:	b1 8d       	ldd	r27, Z+25	; 0x19
    36a6:	82 a1       	ldd	r24, Z+34	; 0x22
    36a8:	9c 91       	ld	r25, X
    36aa:	45 ff       	sbrs	r20, 5
    36ac:	02 c0       	rjmp	.+4      	; 0x36b2 <_ZN4UTFT12LCD_Writ_BusEcch+0xd6>
    36ae:	89 2b       	or	r24, r25
    36b0:	02 c0       	rjmp	.+4      	; 0x36b6 <_ZN4UTFT12LCD_Writ_BusEcch+0xda>
    36b2:	80 95       	com	r24
    36b4:	89 23       	and	r24, r25
    36b6:	8c 93       	st	X, r24
    36b8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    36ba:	b3 8d       	ldd	r27, Z+27	; 0x1b
    36bc:	9c 91       	ld	r25, X
    36be:	83 a1       	ldd	r24, Z+35	; 0x23
    36c0:	80 95       	com	r24
    36c2:	89 23       	and	r24, r25
    36c4:	8c 93       	st	X, r24
    36c6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    36c8:	b3 8d       	ldd	r27, Z+27	; 0x1b
    36ca:	9c 91       	ld	r25, X
    36cc:	83 a1       	ldd	r24, Z+35	; 0x23
    36ce:	89 2b       	or	r24, r25
    36d0:	8c 93       	st	X, r24
    36d2:	a0 8d       	ldd	r26, Z+24	; 0x18
    36d4:	b1 8d       	ldd	r27, Z+25	; 0x19
    36d6:	82 a1       	ldd	r24, Z+34	; 0x22
    36d8:	9c 91       	ld	r25, X
    36da:	44 ff       	sbrs	r20, 4
    36dc:	02 c0       	rjmp	.+4      	; 0x36e2 <_ZN4UTFT12LCD_Writ_BusEcch+0x106>
    36de:	89 2b       	or	r24, r25
    36e0:	02 c0       	rjmp	.+4      	; 0x36e6 <_ZN4UTFT12LCD_Writ_BusEcch+0x10a>
    36e2:	80 95       	com	r24
    36e4:	89 23       	and	r24, r25
    36e6:	8c 93       	st	X, r24
    36e8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    36ea:	b3 8d       	ldd	r27, Z+27	; 0x1b
    36ec:	9c 91       	ld	r25, X
    36ee:	83 a1       	ldd	r24, Z+35	; 0x23
    36f0:	80 95       	com	r24
    36f2:	89 23       	and	r24, r25
    36f4:	8c 93       	st	X, r24
    36f6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    36f8:	b3 8d       	ldd	r27, Z+27	; 0x1b
    36fa:	9c 91       	ld	r25, X
    36fc:	83 a1       	ldd	r24, Z+35	; 0x23
    36fe:	89 2b       	or	r24, r25
    3700:	8c 93       	st	X, r24
    3702:	a0 8d       	ldd	r26, Z+24	; 0x18
    3704:	b1 8d       	ldd	r27, Z+25	; 0x19
    3706:	82 a1       	ldd	r24, Z+34	; 0x22
    3708:	9c 91       	ld	r25, X
    370a:	43 ff       	sbrs	r20, 3
    370c:	02 c0       	rjmp	.+4      	; 0x3712 <_ZN4UTFT12LCD_Writ_BusEcch+0x136>
    370e:	89 2b       	or	r24, r25
    3710:	02 c0       	rjmp	.+4      	; 0x3716 <_ZN4UTFT12LCD_Writ_BusEcch+0x13a>
    3712:	80 95       	com	r24
    3714:	89 23       	and	r24, r25
    3716:	8c 93       	st	X, r24
    3718:	a2 8d       	ldd	r26, Z+26	; 0x1a
    371a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    371c:	9c 91       	ld	r25, X
    371e:	83 a1       	ldd	r24, Z+35	; 0x23
    3720:	80 95       	com	r24
    3722:	89 23       	and	r24, r25
    3724:	8c 93       	st	X, r24
    3726:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3728:	b3 8d       	ldd	r27, Z+27	; 0x1b
    372a:	9c 91       	ld	r25, X
    372c:	83 a1       	ldd	r24, Z+35	; 0x23
    372e:	89 2b       	or	r24, r25
    3730:	8c 93       	st	X, r24
    3732:	a0 8d       	ldd	r26, Z+24	; 0x18
    3734:	b1 8d       	ldd	r27, Z+25	; 0x19
    3736:	82 a1       	ldd	r24, Z+34	; 0x22
    3738:	9c 91       	ld	r25, X
    373a:	42 ff       	sbrs	r20, 2
    373c:	02 c0       	rjmp	.+4      	; 0x3742 <_ZN4UTFT12LCD_Writ_BusEcch+0x166>
    373e:	89 2b       	or	r24, r25
    3740:	02 c0       	rjmp	.+4      	; 0x3746 <_ZN4UTFT12LCD_Writ_BusEcch+0x16a>
    3742:	80 95       	com	r24
    3744:	89 23       	and	r24, r25
    3746:	8c 93       	st	X, r24
    3748:	a2 8d       	ldd	r26, Z+26	; 0x1a
    374a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    374c:	9c 91       	ld	r25, X
    374e:	83 a1       	ldd	r24, Z+35	; 0x23
    3750:	80 95       	com	r24
    3752:	89 23       	and	r24, r25
    3754:	8c 93       	st	X, r24
    3756:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3758:	b3 8d       	ldd	r27, Z+27	; 0x1b
    375a:	9c 91       	ld	r25, X
    375c:	83 a1       	ldd	r24, Z+35	; 0x23
    375e:	89 2b       	or	r24, r25
    3760:	8c 93       	st	X, r24
    3762:	a0 8d       	ldd	r26, Z+24	; 0x18
    3764:	b1 8d       	ldd	r27, Z+25	; 0x19
    3766:	82 a1       	ldd	r24, Z+34	; 0x22
    3768:	9c 91       	ld	r25, X
    376a:	41 ff       	sbrs	r20, 1
    376c:	02 c0       	rjmp	.+4      	; 0x3772 <_ZN4UTFT12LCD_Writ_BusEcch+0x196>
    376e:	89 2b       	or	r24, r25
    3770:	02 c0       	rjmp	.+4      	; 0x3776 <_ZN4UTFT12LCD_Writ_BusEcch+0x19a>
    3772:	80 95       	com	r24
    3774:	89 23       	and	r24, r25
    3776:	8c 93       	st	X, r24
    3778:	a2 8d       	ldd	r26, Z+26	; 0x1a
    377a:	b3 8d       	ldd	r27, Z+27	; 0x1b
    377c:	9c 91       	ld	r25, X
    377e:	83 a1       	ldd	r24, Z+35	; 0x23
    3780:	80 95       	com	r24
    3782:	89 23       	and	r24, r25
    3784:	8c 93       	st	X, r24
    3786:	a2 8d       	ldd	r26, Z+26	; 0x1a
    3788:	b3 8d       	ldd	r27, Z+27	; 0x1b
    378a:	9c 91       	ld	r25, X
    378c:	83 a1       	ldd	r24, Z+35	; 0x23
    378e:	89 2b       	or	r24, r25
    3790:	8c 93       	st	X, r24
    3792:	a0 8d       	ldd	r26, Z+24	; 0x18
    3794:	b1 8d       	ldd	r27, Z+25	; 0x19
    3796:	82 a1       	ldd	r24, Z+34	; 0x22
    3798:	9c 91       	ld	r25, X
    379a:	40 ff       	sbrs	r20, 0
    379c:	02 c0       	rjmp	.+4      	; 0x37a2 <_ZN4UTFT12LCD_Writ_BusEcch+0x1c6>
    379e:	89 2b       	or	r24, r25
    37a0:	02 c0       	rjmp	.+4      	; 0x37a6 <_ZN4UTFT12LCD_Writ_BusEcch+0x1ca>
    37a2:	80 95       	com	r24
    37a4:	89 23       	and	r24, r25
    37a6:	8c 93       	st	X, r24
    37a8:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37aa:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37ac:	9c 91       	ld	r25, X
    37ae:	83 a1       	ldd	r24, Z+35	; 0x23
    37b0:	80 95       	com	r24
    37b2:	89 23       	and	r24, r25
    37b4:	8c 93       	st	X, r24
    37b6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    37b8:	b3 8d       	ldd	r27, Z+27	; 0x1b
    37ba:	9c 91       	ld	r25, X
    37bc:	83 a1       	ldd	r24, Z+35	; 0x23
    37be:	a2 c0       	rjmp	.+324    	; 0x3904 <_ZN4UTFT12LCD_Writ_BusEcch+0x328>
    37c0:	62 b9       	out	0x02, r22	; 2
    37c2:	a2 89       	ldd	r26, Z+18	; 0x12
    37c4:	b3 89       	ldd	r27, Z+19	; 0x13
    37c6:	9c 91       	ld	r25, X
    37c8:	87 8d       	ldd	r24, Z+31	; 0x1f
    37ca:	80 95       	com	r24
    37cc:	89 23       	and	r24, r25
    37ce:	8c 93       	st	X, r24
    37d0:	a2 89       	ldd	r26, Z+18	; 0x12
    37d2:	b3 89       	ldd	r27, Z+19	; 0x13
    37d4:	9c 91       	ld	r25, X
    37d6:	87 8d       	ldd	r24, Z+31	; 0x1f
    37d8:	89 2b       	or	r24, r25
    37da:	8c 93       	st	X, r24
    37dc:	42 b9       	out	0x02, r20	; 2
    37de:	02 c0       	rjmp	.+4      	; 0x37e4 <_ZN4UTFT12LCD_Writ_BusEcch+0x208>
    37e0:	62 b9       	out	0x02, r22	; 2
    37e2:	48 b9       	out	0x08, r20	; 8
    37e4:	a2 89       	ldd	r26, Z+18	; 0x12
    37e6:	b3 89       	ldd	r27, Z+19	; 0x13
    37e8:	9c 91       	ld	r25, X
    37ea:	87 8d       	ldd	r24, Z+31	; 0x1f
    37ec:	80 95       	com	r24
    37ee:	89 23       	and	r24, r25
    37f0:	8c 93       	st	X, r24
    37f2:	a2 89       	ldd	r26, Z+18	; 0x12
    37f4:	b3 89       	ldd	r27, Z+19	; 0x13
    37f6:	9c 91       	ld	r25, X
    37f8:	87 8d       	ldd	r24, Z+31	; 0x1f
    37fa:	84 c0       	rjmp	.+264    	; 0x3904 <_ZN4UTFT12LCD_Writ_BusEcch+0x328>
    37fc:	a5 98       	cbi	0x14, 5	; 20
    37fe:	94 b3       	in	r25, 0x14	; 20
    3800:	86 2f       	mov	r24, r22
    3802:	80 71       	andi	r24, 0x10	; 16
    3804:	88 0f       	add	r24, r24
    3806:	89 2b       	or	r24, r25
    3808:	84 bb       	out	0x14, r24	; 20
    380a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    380e:	87 7e       	andi	r24, 0xE7	; 231
    3810:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3814:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3818:	86 2f       	mov	r24, r22
    381a:	80 7c       	andi	r24, 0xC0	; 192
    381c:	86 95       	lsr	r24
    381e:	86 95       	lsr	r24
    3820:	86 95       	lsr	r24
    3822:	89 2b       	or	r24, r25
    3824:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    3828:	8e b1       	in	r24, 0x0e	; 14
    382a:	84 7c       	andi	r24, 0xC4	; 196
    382c:	8e b9       	out	0x0e, r24	; 14
    382e:	9e b1       	in	r25, 0x0e	; 14
    3830:	26 2f       	mov	r18, r22
    3832:	2c 70       	andi	r18, 0x0C	; 12
    3834:	22 0f       	add	r18, r18
    3836:	22 0f       	add	r18, r18
    3838:	86 2f       	mov	r24, r22
    383a:	83 70       	andi	r24, 0x03	; 3
    383c:	28 0f       	add	r18, r24
    383e:	86 2f       	mov	r24, r22
    3840:	80 72       	andi	r24, 0x20	; 32
    3842:	68 2f       	mov	r22, r24
    3844:	70 e0       	ldi	r23, 0x00	; 0
    3846:	75 95       	asr	r23
    3848:	67 95       	ror	r22
    384a:	75 95       	asr	r23
    384c:	67 95       	ror	r22
    384e:	62 0f       	add	r22, r18
    3850:	69 2b       	or	r22, r25
    3852:	6e b9       	out	0x0e, r22	; 14
    3854:	a4 8d       	ldd	r26, Z+28	; 0x1c
    3856:	b5 8d       	ldd	r27, Z+29	; 0x1d
    3858:	9c 91       	ld	r25, X
    385a:	84 a1       	ldd	r24, Z+36	; 0x24
    385c:	80 95       	com	r24
    385e:	89 23       	and	r24, r25
    3860:	8c 93       	st	X, r24
    3862:	a4 8d       	ldd	r26, Z+28	; 0x1c
    3864:	b5 8d       	ldd	r27, Z+29	; 0x1d
    3866:	9c 91       	ld	r25, X
    3868:	84 a1       	ldd	r24, Z+36	; 0x24
    386a:	89 2b       	or	r24, r25
    386c:	8c 93       	st	X, r24
    386e:	a4 8d       	ldd	r26, Z+28	; 0x1c
    3870:	b5 8d       	ldd	r27, Z+29	; 0x1d
    3872:	9c 91       	ld	r25, X
    3874:	84 a1       	ldd	r24, Z+36	; 0x24
    3876:	80 95       	com	r24
    3878:	89 23       	and	r24, r25
    387a:	8c 93       	st	X, r24
    387c:	a4 89       	ldd	r26, Z+20	; 0x14
    387e:	b5 89       	ldd	r27, Z+21	; 0x15
    3880:	9c 91       	ld	r25, X
    3882:	80 a1       	ldd	r24, Z+32	; 0x20
    3884:	80 95       	com	r24
    3886:	89 23       	and	r24, r25
    3888:	8c 93       	st	X, r24
    388a:	a5 98       	cbi	0x14, 5	; 20
    388c:	94 b3       	in	r25, 0x14	; 20
    388e:	84 2f       	mov	r24, r20
    3890:	80 71       	andi	r24, 0x10	; 16
    3892:	88 0f       	add	r24, r24
    3894:	89 2b       	or	r24, r25
    3896:	84 bb       	out	0x14, r24	; 20
    3898:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    389c:	87 7e       	andi	r24, 0xE7	; 231
    389e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    38a2:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    38a6:	84 2f       	mov	r24, r20
    38a8:	80 7c       	andi	r24, 0xC0	; 192
    38aa:	86 95       	lsr	r24
    38ac:	86 95       	lsr	r24
    38ae:	86 95       	lsr	r24
    38b0:	89 2b       	or	r24, r25
    38b2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
    38b6:	8e b1       	in	r24, 0x0e	; 14
    38b8:	84 7c       	andi	r24, 0xC4	; 196
    38ba:	8e b9       	out	0x0e, r24	; 14
    38bc:	9e b1       	in	r25, 0x0e	; 14
    38be:	24 2f       	mov	r18, r20
    38c0:	2c 70       	andi	r18, 0x0C	; 12
    38c2:	22 0f       	add	r18, r18
    38c4:	22 0f       	add	r18, r18
    38c6:	84 2f       	mov	r24, r20
    38c8:	83 70       	andi	r24, 0x03	; 3
    38ca:	28 0f       	add	r18, r24
    38cc:	84 2f       	mov	r24, r20
    38ce:	80 72       	andi	r24, 0x20	; 32
    38d0:	48 2f       	mov	r20, r24
    38d2:	50 e0       	ldi	r21, 0x00	; 0
    38d4:	55 95       	asr	r21
    38d6:	47 95       	ror	r20
    38d8:	55 95       	asr	r21
    38da:	47 95       	ror	r20
    38dc:	42 0f       	add	r20, r18
    38de:	49 2b       	or	r20, r25
    38e0:	4e b9       	out	0x0e, r20	; 14
    38e2:	a2 89       	ldd	r26, Z+18	; 0x12
    38e4:	b3 89       	ldd	r27, Z+19	; 0x13
    38e6:	9c 91       	ld	r25, X
    38e8:	87 8d       	ldd	r24, Z+31	; 0x1f
    38ea:	80 95       	com	r24
    38ec:	89 23       	and	r24, r25
    38ee:	8c 93       	st	X, r24
    38f0:	a2 89       	ldd	r26, Z+18	; 0x12
    38f2:	b3 89       	ldd	r27, Z+19	; 0x13
    38f4:	9c 91       	ld	r25, X
    38f6:	87 8d       	ldd	r24, Z+31	; 0x1f
    38f8:	89 2b       	or	r24, r25
    38fa:	8c 93       	st	X, r24
    38fc:	a4 89       	ldd	r26, Z+20	; 0x14
    38fe:	b5 89       	ldd	r27, Z+21	; 0x15
    3900:	9c 91       	ld	r25, X
    3902:	80 a1       	ldd	r24, Z+32	; 0x20
    3904:	89 2b       	or	r24, r25
    3906:	8c 93       	st	X, r24
    3908:	08 95       	ret

0000390a <_ZN4UTFT24_set_direction_registersEh>:
    390a:	61 31       	cpi	r22, 0x11	; 17
    390c:	31 f0       	breq	.+12     	; 0x391a <_ZN4UTFT24_set_direction_registersEh+0x10>
    390e:	8f ef       	ldi	r24, 0xFF	; 255
    3910:	81 b9       	out	0x01, r24	; 1
    3912:	60 31       	cpi	r22, 0x10	; 16
    3914:	49 f4       	brne	.+18     	; 0x3928 <_ZN4UTFT24_set_direction_registersEh+0x1e>
    3916:	87 b9       	out	0x07, r24	; 7
    3918:	08 95       	ret
    391a:	88 e1       	ldi	r24, 0x18	; 24
    391c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
    3920:	80 e2       	ldi	r24, 0x20	; 32
    3922:	83 bb       	out	0x13, r24	; 19
    3924:	8b e3       	ldi	r24, 0x3B	; 59
    3926:	8d b9       	out	0x0d, r24	; 13
    3928:	08 95       	ret

0000392a <_ZN4UTFT13_fast_fill_16Eiil>:
    392a:	8f 92       	push	r8
    392c:	9f 92       	push	r9
    392e:	af 92       	push	r10
    3930:	bf 92       	push	r11
    3932:	cf 92       	push	r12
    3934:	df 92       	push	r13
    3936:	ef 92       	push	r14
    3938:	ff 92       	push	r15
    393a:	0f 93       	push	r16
    393c:	1f 93       	push	r17
    393e:	cf 93       	push	r28
    3940:	df 93       	push	r29
    3942:	ec 01       	movw	r28, r24
    3944:	68 01       	movw	r12, r16
    3946:	79 01       	movw	r14, r18
    3948:	62 b9       	out	0x02, r22	; 2
    394a:	48 b9       	out	0x08, r20	; 8
    394c:	c9 01       	movw	r24, r18
    394e:	b8 01       	movw	r22, r16
    3950:	20 e1       	ldi	r18, 0x10	; 16
    3952:	30 e0       	ldi	r19, 0x00	; 0
    3954:	40 e0       	ldi	r20, 0x00	; 0
    3956:	50 e0       	ldi	r21, 0x00	; 0
    3958:	0e 94 b2 4a 	call	0x9564	; 0x9564 <__divmodsi4>
    395c:	49 01       	movw	r8, r18
    395e:	5a 01       	movw	r10, r20
    3960:	80 e0       	ldi	r24, 0x00	; 0
    3962:	90 e0       	ldi	r25, 0x00	; 0
    3964:	dc 01       	movw	r26, r24
    3966:	88 15       	cp	r24, r8
    3968:	99 05       	cpc	r25, r9
    396a:	aa 05       	cpc	r26, r10
    396c:	bb 05       	cpc	r27, r11
    396e:	0c f0       	brlt	.+2      	; 0x3972 <_ZN4UTFT13_fast_fill_16Eiil+0x48>
    3970:	d4 c0       	rjmp	.+424    	; 0x3b1a <_ZN4UTFT13_fast_fill_16Eiil+0x1f0>
    3972:	ea 89       	ldd	r30, Y+18	; 0x12
    3974:	fb 89       	ldd	r31, Y+19	; 0x13
    3976:	30 81       	ld	r19, Z
    3978:	2f 8d       	ldd	r18, Y+31	; 0x1f
    397a:	20 95       	com	r18
    397c:	23 23       	and	r18, r19
    397e:	20 83       	st	Z, r18
    3980:	ea 89       	ldd	r30, Y+18	; 0x12
    3982:	fb 89       	ldd	r31, Y+19	; 0x13
    3984:	30 81       	ld	r19, Z
    3986:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3988:	23 2b       	or	r18, r19
    398a:	20 83       	st	Z, r18
    398c:	ea 89       	ldd	r30, Y+18	; 0x12
    398e:	fb 89       	ldd	r31, Y+19	; 0x13
    3990:	30 81       	ld	r19, Z
    3992:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3994:	20 95       	com	r18
    3996:	23 23       	and	r18, r19
    3998:	20 83       	st	Z, r18
    399a:	ea 89       	ldd	r30, Y+18	; 0x12
    399c:	fb 89       	ldd	r31, Y+19	; 0x13
    399e:	30 81       	ld	r19, Z
    39a0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    39a2:	23 2b       	or	r18, r19
    39a4:	20 83       	st	Z, r18
    39a6:	ea 89       	ldd	r30, Y+18	; 0x12
    39a8:	fb 89       	ldd	r31, Y+19	; 0x13
    39aa:	30 81       	ld	r19, Z
    39ac:	2f 8d       	ldd	r18, Y+31	; 0x1f
    39ae:	20 95       	com	r18
    39b0:	23 23       	and	r18, r19
    39b2:	20 83       	st	Z, r18
    39b4:	ea 89       	ldd	r30, Y+18	; 0x12
    39b6:	fb 89       	ldd	r31, Y+19	; 0x13
    39b8:	30 81       	ld	r19, Z
    39ba:	2f 8d       	ldd	r18, Y+31	; 0x1f
    39bc:	23 2b       	or	r18, r19
    39be:	20 83       	st	Z, r18
    39c0:	ea 89       	ldd	r30, Y+18	; 0x12
    39c2:	fb 89       	ldd	r31, Y+19	; 0x13
    39c4:	30 81       	ld	r19, Z
    39c6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    39c8:	20 95       	com	r18
    39ca:	23 23       	and	r18, r19
    39cc:	20 83       	st	Z, r18
    39ce:	ea 89       	ldd	r30, Y+18	; 0x12
    39d0:	fb 89       	ldd	r31, Y+19	; 0x13
    39d2:	30 81       	ld	r19, Z
    39d4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    39d6:	23 2b       	or	r18, r19
    39d8:	20 83       	st	Z, r18
    39da:	ea 89       	ldd	r30, Y+18	; 0x12
    39dc:	fb 89       	ldd	r31, Y+19	; 0x13
    39de:	30 81       	ld	r19, Z
    39e0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    39e2:	20 95       	com	r18
    39e4:	23 23       	and	r18, r19
    39e6:	20 83       	st	Z, r18
    39e8:	ea 89       	ldd	r30, Y+18	; 0x12
    39ea:	fb 89       	ldd	r31, Y+19	; 0x13
    39ec:	30 81       	ld	r19, Z
    39ee:	2f 8d       	ldd	r18, Y+31	; 0x1f
    39f0:	23 2b       	or	r18, r19
    39f2:	20 83       	st	Z, r18
    39f4:	ea 89       	ldd	r30, Y+18	; 0x12
    39f6:	fb 89       	ldd	r31, Y+19	; 0x13
    39f8:	30 81       	ld	r19, Z
    39fa:	2f 8d       	ldd	r18, Y+31	; 0x1f
    39fc:	20 95       	com	r18
    39fe:	23 23       	and	r18, r19
    3a00:	20 83       	st	Z, r18
    3a02:	ea 89       	ldd	r30, Y+18	; 0x12
    3a04:	fb 89       	ldd	r31, Y+19	; 0x13
    3a06:	30 81       	ld	r19, Z
    3a08:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a0a:	23 2b       	or	r18, r19
    3a0c:	20 83       	st	Z, r18
    3a0e:	ea 89       	ldd	r30, Y+18	; 0x12
    3a10:	fb 89       	ldd	r31, Y+19	; 0x13
    3a12:	30 81       	ld	r19, Z
    3a14:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a16:	20 95       	com	r18
    3a18:	23 23       	and	r18, r19
    3a1a:	20 83       	st	Z, r18
    3a1c:	ea 89       	ldd	r30, Y+18	; 0x12
    3a1e:	fb 89       	ldd	r31, Y+19	; 0x13
    3a20:	30 81       	ld	r19, Z
    3a22:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a24:	23 2b       	or	r18, r19
    3a26:	20 83       	st	Z, r18
    3a28:	ea 89       	ldd	r30, Y+18	; 0x12
    3a2a:	fb 89       	ldd	r31, Y+19	; 0x13
    3a2c:	30 81       	ld	r19, Z
    3a2e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a30:	20 95       	com	r18
    3a32:	23 23       	and	r18, r19
    3a34:	20 83       	st	Z, r18
    3a36:	ea 89       	ldd	r30, Y+18	; 0x12
    3a38:	fb 89       	ldd	r31, Y+19	; 0x13
    3a3a:	30 81       	ld	r19, Z
    3a3c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a3e:	23 2b       	or	r18, r19
    3a40:	20 83       	st	Z, r18
    3a42:	ea 89       	ldd	r30, Y+18	; 0x12
    3a44:	fb 89       	ldd	r31, Y+19	; 0x13
    3a46:	30 81       	ld	r19, Z
    3a48:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a4a:	20 95       	com	r18
    3a4c:	23 23       	and	r18, r19
    3a4e:	20 83       	st	Z, r18
    3a50:	ea 89       	ldd	r30, Y+18	; 0x12
    3a52:	fb 89       	ldd	r31, Y+19	; 0x13
    3a54:	30 81       	ld	r19, Z
    3a56:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a58:	23 2b       	or	r18, r19
    3a5a:	20 83       	st	Z, r18
    3a5c:	ea 89       	ldd	r30, Y+18	; 0x12
    3a5e:	fb 89       	ldd	r31, Y+19	; 0x13
    3a60:	30 81       	ld	r19, Z
    3a62:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a64:	20 95       	com	r18
    3a66:	23 23       	and	r18, r19
    3a68:	20 83       	st	Z, r18
    3a6a:	ea 89       	ldd	r30, Y+18	; 0x12
    3a6c:	fb 89       	ldd	r31, Y+19	; 0x13
    3a6e:	30 81       	ld	r19, Z
    3a70:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a72:	23 2b       	or	r18, r19
    3a74:	20 83       	st	Z, r18
    3a76:	ea 89       	ldd	r30, Y+18	; 0x12
    3a78:	fb 89       	ldd	r31, Y+19	; 0x13
    3a7a:	30 81       	ld	r19, Z
    3a7c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a7e:	20 95       	com	r18
    3a80:	23 23       	and	r18, r19
    3a82:	20 83       	st	Z, r18
    3a84:	ea 89       	ldd	r30, Y+18	; 0x12
    3a86:	fb 89       	ldd	r31, Y+19	; 0x13
    3a88:	30 81       	ld	r19, Z
    3a8a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a8c:	23 2b       	or	r18, r19
    3a8e:	20 83       	st	Z, r18
    3a90:	ea 89       	ldd	r30, Y+18	; 0x12
    3a92:	fb 89       	ldd	r31, Y+19	; 0x13
    3a94:	30 81       	ld	r19, Z
    3a96:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a98:	20 95       	com	r18
    3a9a:	23 23       	and	r18, r19
    3a9c:	20 83       	st	Z, r18
    3a9e:	ea 89       	ldd	r30, Y+18	; 0x12
    3aa0:	fb 89       	ldd	r31, Y+19	; 0x13
    3aa2:	30 81       	ld	r19, Z
    3aa4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3aa6:	23 2b       	or	r18, r19
    3aa8:	20 83       	st	Z, r18
    3aaa:	ea 89       	ldd	r30, Y+18	; 0x12
    3aac:	fb 89       	ldd	r31, Y+19	; 0x13
    3aae:	30 81       	ld	r19, Z
    3ab0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ab2:	20 95       	com	r18
    3ab4:	23 23       	and	r18, r19
    3ab6:	20 83       	st	Z, r18
    3ab8:	ea 89       	ldd	r30, Y+18	; 0x12
    3aba:	fb 89       	ldd	r31, Y+19	; 0x13
    3abc:	30 81       	ld	r19, Z
    3abe:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ac0:	23 2b       	or	r18, r19
    3ac2:	20 83       	st	Z, r18
    3ac4:	ea 89       	ldd	r30, Y+18	; 0x12
    3ac6:	fb 89       	ldd	r31, Y+19	; 0x13
    3ac8:	30 81       	ld	r19, Z
    3aca:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3acc:	20 95       	com	r18
    3ace:	23 23       	and	r18, r19
    3ad0:	20 83       	st	Z, r18
    3ad2:	ea 89       	ldd	r30, Y+18	; 0x12
    3ad4:	fb 89       	ldd	r31, Y+19	; 0x13
    3ad6:	30 81       	ld	r19, Z
    3ad8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ada:	23 2b       	or	r18, r19
    3adc:	20 83       	st	Z, r18
    3ade:	ea 89       	ldd	r30, Y+18	; 0x12
    3ae0:	fb 89       	ldd	r31, Y+19	; 0x13
    3ae2:	30 81       	ld	r19, Z
    3ae4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ae6:	20 95       	com	r18
    3ae8:	23 23       	and	r18, r19
    3aea:	20 83       	st	Z, r18
    3aec:	ea 89       	ldd	r30, Y+18	; 0x12
    3aee:	fb 89       	ldd	r31, Y+19	; 0x13
    3af0:	30 81       	ld	r19, Z
    3af2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3af4:	23 2b       	or	r18, r19
    3af6:	20 83       	st	Z, r18
    3af8:	ea 89       	ldd	r30, Y+18	; 0x12
    3afa:	fb 89       	ldd	r31, Y+19	; 0x13
    3afc:	40 81       	ld	r20, Z
    3afe:	3f 8d       	ldd	r19, Y+31	; 0x1f
    3b00:	30 95       	com	r19
    3b02:	34 23       	and	r19, r20
    3b04:	30 83       	st	Z, r19
    3b06:	ea 89       	ldd	r30, Y+18	; 0x12
    3b08:	fb 89       	ldd	r31, Y+19	; 0x13
    3b0a:	20 81       	ld	r18, Z
    3b0c:	3f 8d       	ldd	r19, Y+31	; 0x1f
    3b0e:	32 2b       	or	r19, r18
    3b10:	30 83       	st	Z, r19
    3b12:	01 96       	adiw	r24, 0x01	; 1
    3b14:	a1 1d       	adc	r26, r1
    3b16:	b1 1d       	adc	r27, r1
    3b18:	26 cf       	rjmp	.-436    	; 0x3966 <_ZN4UTFT13_fast_fill_16Eiil+0x3c>
    3b1a:	d7 01       	movw	r26, r14
    3b1c:	c6 01       	movw	r24, r12
    3b1e:	8f 70       	andi	r24, 0x0F	; 15
    3b20:	99 27       	eor	r25, r25
    3b22:	aa 27       	eor	r26, r26
    3b24:	bb 27       	eor	r27, r27
    3b26:	89 2b       	or	r24, r25
    3b28:	8a 2b       	or	r24, r26
    3b2a:	8b 2b       	or	r24, r27
    3b2c:	19 f1       	breq	.+70     	; 0x3b74 <_ZN4UTFT13_fast_fill_16Eiil+0x24a>
    3b2e:	c7 01       	movw	r24, r14
    3b30:	b6 01       	movw	r22, r12
    3b32:	20 e1       	ldi	r18, 0x10	; 16
    3b34:	30 e0       	ldi	r19, 0x00	; 0
    3b36:	40 e0       	ldi	r20, 0x00	; 0
    3b38:	50 e0       	ldi	r21, 0x00	; 0
    3b3a:	0e 94 b2 4a 	call	0x9564	; 0x9564 <__divmodsi4>
    3b3e:	c1 2c       	mov	r12, r1
    3b40:	d1 2c       	mov	r13, r1
    3b42:	76 01       	movw	r14, r12
    3b44:	6c 15       	cp	r22, r12
    3b46:	7d 05       	cpc	r23, r13
    3b48:	8e 05       	cpc	r24, r14
    3b4a:	9f 05       	cpc	r25, r15
    3b4c:	9c f0       	brlt	.+38     	; 0x3b74 <_ZN4UTFT13_fast_fill_16Eiil+0x24a>
    3b4e:	ea 89       	ldd	r30, Y+18	; 0x12
    3b50:	fb 89       	ldd	r31, Y+19	; 0x13
    3b52:	30 81       	ld	r19, Z
    3b54:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b56:	20 95       	com	r18
    3b58:	23 23       	and	r18, r19
    3b5a:	20 83       	st	Z, r18
    3b5c:	ea 89       	ldd	r30, Y+18	; 0x12
    3b5e:	fb 89       	ldd	r31, Y+19	; 0x13
    3b60:	30 81       	ld	r19, Z
    3b62:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3b64:	23 2b       	or	r18, r19
    3b66:	20 83       	st	Z, r18
    3b68:	2f ef       	ldi	r18, 0xFF	; 255
    3b6a:	c2 1a       	sub	r12, r18
    3b6c:	d2 0a       	sbc	r13, r18
    3b6e:	e2 0a       	sbc	r14, r18
    3b70:	f2 0a       	sbc	r15, r18
    3b72:	e8 cf       	rjmp	.-48     	; 0x3b44 <_ZN4UTFT13_fast_fill_16Eiil+0x21a>
    3b74:	df 91       	pop	r29
    3b76:	cf 91       	pop	r28
    3b78:	1f 91       	pop	r17
    3b7a:	0f 91       	pop	r16
    3b7c:	ff 90       	pop	r15
    3b7e:	ef 90       	pop	r14
    3b80:	df 90       	pop	r13
    3b82:	cf 90       	pop	r12
    3b84:	bf 90       	pop	r11
    3b86:	af 90       	pop	r10
    3b88:	9f 90       	pop	r9
    3b8a:	8f 90       	pop	r8
    3b8c:	08 95       	ret

00003b8e <_ZN4UTFT12_fast_fill_8Eil>:
    3b8e:	8f 92       	push	r8
    3b90:	9f 92       	push	r9
    3b92:	af 92       	push	r10
    3b94:	bf 92       	push	r11
    3b96:	cf 92       	push	r12
    3b98:	df 92       	push	r13
    3b9a:	ef 92       	push	r14
    3b9c:	ff 92       	push	r15
    3b9e:	cf 93       	push	r28
    3ba0:	df 93       	push	r29
    3ba2:	ec 01       	movw	r28, r24
    3ba4:	69 01       	movw	r12, r18
    3ba6:	7a 01       	movw	r14, r20
    3ba8:	62 b9       	out	0x02, r22	; 2
    3baa:	ca 01       	movw	r24, r20
    3bac:	b9 01       	movw	r22, r18
    3bae:	20 e1       	ldi	r18, 0x10	; 16
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	40 e0       	ldi	r20, 0x00	; 0
    3bb4:	50 e0       	ldi	r21, 0x00	; 0
    3bb6:	0e 94 b2 4a 	call	0x9564	; 0x9564 <__divmodsi4>
    3bba:	49 01       	movw	r8, r18
    3bbc:	5a 01       	movw	r10, r20
    3bbe:	80 e0       	ldi	r24, 0x00	; 0
    3bc0:	90 e0       	ldi	r25, 0x00	; 0
    3bc2:	dc 01       	movw	r26, r24
    3bc4:	88 15       	cp	r24, r8
    3bc6:	99 05       	cpc	r25, r9
    3bc8:	aa 05       	cpc	r26, r10
    3bca:	bb 05       	cpc	r27, r11
    3bcc:	0c f0       	brlt	.+2      	; 0x3bd0 <_ZN4UTFT12_fast_fill_8Eil+0x42>
    3bce:	a4 c1       	rjmp	.+840    	; 0x3f18 <_ZN4UTFT12_fast_fill_8Eil+0x38a>
    3bd0:	ea 89       	ldd	r30, Y+18	; 0x12
    3bd2:	fb 89       	ldd	r31, Y+19	; 0x13
    3bd4:	30 81       	ld	r19, Z
    3bd6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bd8:	20 95       	com	r18
    3bda:	23 23       	and	r18, r19
    3bdc:	20 83       	st	Z, r18
    3bde:	ea 89       	ldd	r30, Y+18	; 0x12
    3be0:	fb 89       	ldd	r31, Y+19	; 0x13
    3be2:	30 81       	ld	r19, Z
    3be4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3be6:	23 2b       	or	r18, r19
    3be8:	20 83       	st	Z, r18
    3bea:	ea 89       	ldd	r30, Y+18	; 0x12
    3bec:	fb 89       	ldd	r31, Y+19	; 0x13
    3bee:	30 81       	ld	r19, Z
    3bf0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3bf2:	20 95       	com	r18
    3bf4:	23 23       	and	r18, r19
    3bf6:	20 83       	st	Z, r18
    3bf8:	ea 89       	ldd	r30, Y+18	; 0x12
    3bfa:	fb 89       	ldd	r31, Y+19	; 0x13
    3bfc:	30 81       	ld	r19, Z
    3bfe:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c00:	23 2b       	or	r18, r19
    3c02:	20 83       	st	Z, r18
    3c04:	ea 89       	ldd	r30, Y+18	; 0x12
    3c06:	fb 89       	ldd	r31, Y+19	; 0x13
    3c08:	30 81       	ld	r19, Z
    3c0a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c0c:	20 95       	com	r18
    3c0e:	23 23       	and	r18, r19
    3c10:	20 83       	st	Z, r18
    3c12:	ea 89       	ldd	r30, Y+18	; 0x12
    3c14:	fb 89       	ldd	r31, Y+19	; 0x13
    3c16:	30 81       	ld	r19, Z
    3c18:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c1a:	23 2b       	or	r18, r19
    3c1c:	20 83       	st	Z, r18
    3c1e:	ea 89       	ldd	r30, Y+18	; 0x12
    3c20:	fb 89       	ldd	r31, Y+19	; 0x13
    3c22:	30 81       	ld	r19, Z
    3c24:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c26:	20 95       	com	r18
    3c28:	23 23       	and	r18, r19
    3c2a:	20 83       	st	Z, r18
    3c2c:	ea 89       	ldd	r30, Y+18	; 0x12
    3c2e:	fb 89       	ldd	r31, Y+19	; 0x13
    3c30:	30 81       	ld	r19, Z
    3c32:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c34:	23 2b       	or	r18, r19
    3c36:	20 83       	st	Z, r18
    3c38:	ea 89       	ldd	r30, Y+18	; 0x12
    3c3a:	fb 89       	ldd	r31, Y+19	; 0x13
    3c3c:	30 81       	ld	r19, Z
    3c3e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c40:	20 95       	com	r18
    3c42:	23 23       	and	r18, r19
    3c44:	20 83       	st	Z, r18
    3c46:	ea 89       	ldd	r30, Y+18	; 0x12
    3c48:	fb 89       	ldd	r31, Y+19	; 0x13
    3c4a:	30 81       	ld	r19, Z
    3c4c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c4e:	23 2b       	or	r18, r19
    3c50:	20 83       	st	Z, r18
    3c52:	ea 89       	ldd	r30, Y+18	; 0x12
    3c54:	fb 89       	ldd	r31, Y+19	; 0x13
    3c56:	30 81       	ld	r19, Z
    3c58:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c5a:	20 95       	com	r18
    3c5c:	23 23       	and	r18, r19
    3c5e:	20 83       	st	Z, r18
    3c60:	ea 89       	ldd	r30, Y+18	; 0x12
    3c62:	fb 89       	ldd	r31, Y+19	; 0x13
    3c64:	30 81       	ld	r19, Z
    3c66:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c68:	23 2b       	or	r18, r19
    3c6a:	20 83       	st	Z, r18
    3c6c:	ea 89       	ldd	r30, Y+18	; 0x12
    3c6e:	fb 89       	ldd	r31, Y+19	; 0x13
    3c70:	30 81       	ld	r19, Z
    3c72:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c74:	20 95       	com	r18
    3c76:	23 23       	and	r18, r19
    3c78:	20 83       	st	Z, r18
    3c7a:	ea 89       	ldd	r30, Y+18	; 0x12
    3c7c:	fb 89       	ldd	r31, Y+19	; 0x13
    3c7e:	30 81       	ld	r19, Z
    3c80:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c82:	23 2b       	or	r18, r19
    3c84:	20 83       	st	Z, r18
    3c86:	ea 89       	ldd	r30, Y+18	; 0x12
    3c88:	fb 89       	ldd	r31, Y+19	; 0x13
    3c8a:	30 81       	ld	r19, Z
    3c8c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c8e:	20 95       	com	r18
    3c90:	23 23       	and	r18, r19
    3c92:	20 83       	st	Z, r18
    3c94:	ea 89       	ldd	r30, Y+18	; 0x12
    3c96:	fb 89       	ldd	r31, Y+19	; 0x13
    3c98:	30 81       	ld	r19, Z
    3c9a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3c9c:	23 2b       	or	r18, r19
    3c9e:	20 83       	st	Z, r18
    3ca0:	ea 89       	ldd	r30, Y+18	; 0x12
    3ca2:	fb 89       	ldd	r31, Y+19	; 0x13
    3ca4:	30 81       	ld	r19, Z
    3ca6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ca8:	20 95       	com	r18
    3caa:	23 23       	and	r18, r19
    3cac:	20 83       	st	Z, r18
    3cae:	ea 89       	ldd	r30, Y+18	; 0x12
    3cb0:	fb 89       	ldd	r31, Y+19	; 0x13
    3cb2:	30 81       	ld	r19, Z
    3cb4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3cb6:	23 2b       	or	r18, r19
    3cb8:	20 83       	st	Z, r18
    3cba:	ea 89       	ldd	r30, Y+18	; 0x12
    3cbc:	fb 89       	ldd	r31, Y+19	; 0x13
    3cbe:	30 81       	ld	r19, Z
    3cc0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3cc2:	20 95       	com	r18
    3cc4:	23 23       	and	r18, r19
    3cc6:	20 83       	st	Z, r18
    3cc8:	ea 89       	ldd	r30, Y+18	; 0x12
    3cca:	fb 89       	ldd	r31, Y+19	; 0x13
    3ccc:	30 81       	ld	r19, Z
    3cce:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3cd0:	23 2b       	or	r18, r19
    3cd2:	20 83       	st	Z, r18
    3cd4:	ea 89       	ldd	r30, Y+18	; 0x12
    3cd6:	fb 89       	ldd	r31, Y+19	; 0x13
    3cd8:	30 81       	ld	r19, Z
    3cda:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3cdc:	20 95       	com	r18
    3cde:	23 23       	and	r18, r19
    3ce0:	20 83       	st	Z, r18
    3ce2:	ea 89       	ldd	r30, Y+18	; 0x12
    3ce4:	fb 89       	ldd	r31, Y+19	; 0x13
    3ce6:	30 81       	ld	r19, Z
    3ce8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3cea:	23 2b       	or	r18, r19
    3cec:	20 83       	st	Z, r18
    3cee:	ea 89       	ldd	r30, Y+18	; 0x12
    3cf0:	fb 89       	ldd	r31, Y+19	; 0x13
    3cf2:	30 81       	ld	r19, Z
    3cf4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3cf6:	20 95       	com	r18
    3cf8:	23 23       	and	r18, r19
    3cfa:	20 83       	st	Z, r18
    3cfc:	ea 89       	ldd	r30, Y+18	; 0x12
    3cfe:	fb 89       	ldd	r31, Y+19	; 0x13
    3d00:	30 81       	ld	r19, Z
    3d02:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d04:	23 2b       	or	r18, r19
    3d06:	20 83       	st	Z, r18
    3d08:	ea 89       	ldd	r30, Y+18	; 0x12
    3d0a:	fb 89       	ldd	r31, Y+19	; 0x13
    3d0c:	30 81       	ld	r19, Z
    3d0e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d10:	20 95       	com	r18
    3d12:	23 23       	and	r18, r19
    3d14:	20 83       	st	Z, r18
    3d16:	ea 89       	ldd	r30, Y+18	; 0x12
    3d18:	fb 89       	ldd	r31, Y+19	; 0x13
    3d1a:	30 81       	ld	r19, Z
    3d1c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d1e:	23 2b       	or	r18, r19
    3d20:	20 83       	st	Z, r18
    3d22:	ea 89       	ldd	r30, Y+18	; 0x12
    3d24:	fb 89       	ldd	r31, Y+19	; 0x13
    3d26:	30 81       	ld	r19, Z
    3d28:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d2a:	20 95       	com	r18
    3d2c:	23 23       	and	r18, r19
    3d2e:	20 83       	st	Z, r18
    3d30:	ea 89       	ldd	r30, Y+18	; 0x12
    3d32:	fb 89       	ldd	r31, Y+19	; 0x13
    3d34:	30 81       	ld	r19, Z
    3d36:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d38:	23 2b       	or	r18, r19
    3d3a:	20 83       	st	Z, r18
    3d3c:	ea 89       	ldd	r30, Y+18	; 0x12
    3d3e:	fb 89       	ldd	r31, Y+19	; 0x13
    3d40:	30 81       	ld	r19, Z
    3d42:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d44:	20 95       	com	r18
    3d46:	23 23       	and	r18, r19
    3d48:	20 83       	st	Z, r18
    3d4a:	ea 89       	ldd	r30, Y+18	; 0x12
    3d4c:	fb 89       	ldd	r31, Y+19	; 0x13
    3d4e:	30 81       	ld	r19, Z
    3d50:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d52:	23 2b       	or	r18, r19
    3d54:	20 83       	st	Z, r18
    3d56:	ea 89       	ldd	r30, Y+18	; 0x12
    3d58:	fb 89       	ldd	r31, Y+19	; 0x13
    3d5a:	30 81       	ld	r19, Z
    3d5c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d5e:	20 95       	com	r18
    3d60:	23 23       	and	r18, r19
    3d62:	20 83       	st	Z, r18
    3d64:	ea 89       	ldd	r30, Y+18	; 0x12
    3d66:	fb 89       	ldd	r31, Y+19	; 0x13
    3d68:	30 81       	ld	r19, Z
    3d6a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d6c:	23 2b       	or	r18, r19
    3d6e:	20 83       	st	Z, r18
    3d70:	ea 89       	ldd	r30, Y+18	; 0x12
    3d72:	fb 89       	ldd	r31, Y+19	; 0x13
    3d74:	30 81       	ld	r19, Z
    3d76:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d78:	20 95       	com	r18
    3d7a:	23 23       	and	r18, r19
    3d7c:	20 83       	st	Z, r18
    3d7e:	ea 89       	ldd	r30, Y+18	; 0x12
    3d80:	fb 89       	ldd	r31, Y+19	; 0x13
    3d82:	30 81       	ld	r19, Z
    3d84:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d86:	23 2b       	or	r18, r19
    3d88:	20 83       	st	Z, r18
    3d8a:	ea 89       	ldd	r30, Y+18	; 0x12
    3d8c:	fb 89       	ldd	r31, Y+19	; 0x13
    3d8e:	30 81       	ld	r19, Z
    3d90:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3d92:	20 95       	com	r18
    3d94:	23 23       	and	r18, r19
    3d96:	20 83       	st	Z, r18
    3d98:	ea 89       	ldd	r30, Y+18	; 0x12
    3d9a:	fb 89       	ldd	r31, Y+19	; 0x13
    3d9c:	30 81       	ld	r19, Z
    3d9e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3da0:	23 2b       	or	r18, r19
    3da2:	20 83       	st	Z, r18
    3da4:	ea 89       	ldd	r30, Y+18	; 0x12
    3da6:	fb 89       	ldd	r31, Y+19	; 0x13
    3da8:	30 81       	ld	r19, Z
    3daa:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dac:	20 95       	com	r18
    3dae:	23 23       	and	r18, r19
    3db0:	20 83       	st	Z, r18
    3db2:	ea 89       	ldd	r30, Y+18	; 0x12
    3db4:	fb 89       	ldd	r31, Y+19	; 0x13
    3db6:	30 81       	ld	r19, Z
    3db8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dba:	23 2b       	or	r18, r19
    3dbc:	20 83       	st	Z, r18
    3dbe:	ea 89       	ldd	r30, Y+18	; 0x12
    3dc0:	fb 89       	ldd	r31, Y+19	; 0x13
    3dc2:	30 81       	ld	r19, Z
    3dc4:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dc6:	20 95       	com	r18
    3dc8:	23 23       	and	r18, r19
    3dca:	20 83       	st	Z, r18
    3dcc:	ea 89       	ldd	r30, Y+18	; 0x12
    3dce:	fb 89       	ldd	r31, Y+19	; 0x13
    3dd0:	30 81       	ld	r19, Z
    3dd2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dd4:	23 2b       	or	r18, r19
    3dd6:	20 83       	st	Z, r18
    3dd8:	ea 89       	ldd	r30, Y+18	; 0x12
    3dda:	fb 89       	ldd	r31, Y+19	; 0x13
    3ddc:	30 81       	ld	r19, Z
    3dde:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3de0:	20 95       	com	r18
    3de2:	23 23       	and	r18, r19
    3de4:	20 83       	st	Z, r18
    3de6:	ea 89       	ldd	r30, Y+18	; 0x12
    3de8:	fb 89       	ldd	r31, Y+19	; 0x13
    3dea:	30 81       	ld	r19, Z
    3dec:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dee:	23 2b       	or	r18, r19
    3df0:	20 83       	st	Z, r18
    3df2:	ea 89       	ldd	r30, Y+18	; 0x12
    3df4:	fb 89       	ldd	r31, Y+19	; 0x13
    3df6:	30 81       	ld	r19, Z
    3df8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3dfa:	20 95       	com	r18
    3dfc:	23 23       	and	r18, r19
    3dfe:	20 83       	st	Z, r18
    3e00:	ea 89       	ldd	r30, Y+18	; 0x12
    3e02:	fb 89       	ldd	r31, Y+19	; 0x13
    3e04:	30 81       	ld	r19, Z
    3e06:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e08:	23 2b       	or	r18, r19
    3e0a:	20 83       	st	Z, r18
    3e0c:	ea 89       	ldd	r30, Y+18	; 0x12
    3e0e:	fb 89       	ldd	r31, Y+19	; 0x13
    3e10:	30 81       	ld	r19, Z
    3e12:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e14:	20 95       	com	r18
    3e16:	23 23       	and	r18, r19
    3e18:	20 83       	st	Z, r18
    3e1a:	ea 89       	ldd	r30, Y+18	; 0x12
    3e1c:	fb 89       	ldd	r31, Y+19	; 0x13
    3e1e:	30 81       	ld	r19, Z
    3e20:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e22:	23 2b       	or	r18, r19
    3e24:	20 83       	st	Z, r18
    3e26:	ea 89       	ldd	r30, Y+18	; 0x12
    3e28:	fb 89       	ldd	r31, Y+19	; 0x13
    3e2a:	30 81       	ld	r19, Z
    3e2c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e2e:	20 95       	com	r18
    3e30:	23 23       	and	r18, r19
    3e32:	20 83       	st	Z, r18
    3e34:	ea 89       	ldd	r30, Y+18	; 0x12
    3e36:	fb 89       	ldd	r31, Y+19	; 0x13
    3e38:	30 81       	ld	r19, Z
    3e3a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e3c:	23 2b       	or	r18, r19
    3e3e:	20 83       	st	Z, r18
    3e40:	ea 89       	ldd	r30, Y+18	; 0x12
    3e42:	fb 89       	ldd	r31, Y+19	; 0x13
    3e44:	30 81       	ld	r19, Z
    3e46:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e48:	20 95       	com	r18
    3e4a:	23 23       	and	r18, r19
    3e4c:	20 83       	st	Z, r18
    3e4e:	ea 89       	ldd	r30, Y+18	; 0x12
    3e50:	fb 89       	ldd	r31, Y+19	; 0x13
    3e52:	30 81       	ld	r19, Z
    3e54:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e56:	23 2b       	or	r18, r19
    3e58:	20 83       	st	Z, r18
    3e5a:	ea 89       	ldd	r30, Y+18	; 0x12
    3e5c:	fb 89       	ldd	r31, Y+19	; 0x13
    3e5e:	30 81       	ld	r19, Z
    3e60:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e62:	20 95       	com	r18
    3e64:	23 23       	and	r18, r19
    3e66:	20 83       	st	Z, r18
    3e68:	ea 89       	ldd	r30, Y+18	; 0x12
    3e6a:	fb 89       	ldd	r31, Y+19	; 0x13
    3e6c:	30 81       	ld	r19, Z
    3e6e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e70:	23 2b       	or	r18, r19
    3e72:	20 83       	st	Z, r18
    3e74:	ea 89       	ldd	r30, Y+18	; 0x12
    3e76:	fb 89       	ldd	r31, Y+19	; 0x13
    3e78:	30 81       	ld	r19, Z
    3e7a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e7c:	20 95       	com	r18
    3e7e:	23 23       	and	r18, r19
    3e80:	20 83       	st	Z, r18
    3e82:	ea 89       	ldd	r30, Y+18	; 0x12
    3e84:	fb 89       	ldd	r31, Y+19	; 0x13
    3e86:	30 81       	ld	r19, Z
    3e88:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e8a:	23 2b       	or	r18, r19
    3e8c:	20 83       	st	Z, r18
    3e8e:	ea 89       	ldd	r30, Y+18	; 0x12
    3e90:	fb 89       	ldd	r31, Y+19	; 0x13
    3e92:	30 81       	ld	r19, Z
    3e94:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3e96:	20 95       	com	r18
    3e98:	23 23       	and	r18, r19
    3e9a:	20 83       	st	Z, r18
    3e9c:	ea 89       	ldd	r30, Y+18	; 0x12
    3e9e:	fb 89       	ldd	r31, Y+19	; 0x13
    3ea0:	30 81       	ld	r19, Z
    3ea2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ea4:	23 2b       	or	r18, r19
    3ea6:	20 83       	st	Z, r18
    3ea8:	ea 89       	ldd	r30, Y+18	; 0x12
    3eaa:	fb 89       	ldd	r31, Y+19	; 0x13
    3eac:	30 81       	ld	r19, Z
    3eae:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3eb0:	20 95       	com	r18
    3eb2:	23 23       	and	r18, r19
    3eb4:	20 83       	st	Z, r18
    3eb6:	ea 89       	ldd	r30, Y+18	; 0x12
    3eb8:	fb 89       	ldd	r31, Y+19	; 0x13
    3eba:	30 81       	ld	r19, Z
    3ebc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ebe:	23 2b       	or	r18, r19
    3ec0:	20 83       	st	Z, r18
    3ec2:	ea 89       	ldd	r30, Y+18	; 0x12
    3ec4:	fb 89       	ldd	r31, Y+19	; 0x13
    3ec6:	30 81       	ld	r19, Z
    3ec8:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3eca:	20 95       	com	r18
    3ecc:	23 23       	and	r18, r19
    3ece:	20 83       	st	Z, r18
    3ed0:	ea 89       	ldd	r30, Y+18	; 0x12
    3ed2:	fb 89       	ldd	r31, Y+19	; 0x13
    3ed4:	30 81       	ld	r19, Z
    3ed6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ed8:	23 2b       	or	r18, r19
    3eda:	20 83       	st	Z, r18
    3edc:	ea 89       	ldd	r30, Y+18	; 0x12
    3ede:	fb 89       	ldd	r31, Y+19	; 0x13
    3ee0:	30 81       	ld	r19, Z
    3ee2:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ee4:	20 95       	com	r18
    3ee6:	23 23       	and	r18, r19
    3ee8:	20 83       	st	Z, r18
    3eea:	ea 89       	ldd	r30, Y+18	; 0x12
    3eec:	fb 89       	ldd	r31, Y+19	; 0x13
    3eee:	30 81       	ld	r19, Z
    3ef0:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3ef2:	23 2b       	or	r18, r19
    3ef4:	20 83       	st	Z, r18
    3ef6:	ea 89       	ldd	r30, Y+18	; 0x12
    3ef8:	fb 89       	ldd	r31, Y+19	; 0x13
    3efa:	40 81       	ld	r20, Z
    3efc:	3f 8d       	ldd	r19, Y+31	; 0x1f
    3efe:	30 95       	com	r19
    3f00:	34 23       	and	r19, r20
    3f02:	30 83       	st	Z, r19
    3f04:	ea 89       	ldd	r30, Y+18	; 0x12
    3f06:	fb 89       	ldd	r31, Y+19	; 0x13
    3f08:	20 81       	ld	r18, Z
    3f0a:	3f 8d       	ldd	r19, Y+31	; 0x1f
    3f0c:	32 2b       	or	r19, r18
    3f0e:	30 83       	st	Z, r19
    3f10:	01 96       	adiw	r24, 0x01	; 1
    3f12:	a1 1d       	adc	r26, r1
    3f14:	b1 1d       	adc	r27, r1
    3f16:	56 ce       	rjmp	.-852    	; 0x3bc4 <_ZN4UTFT12_fast_fill_8Eil+0x36>
    3f18:	d7 01       	movw	r26, r14
    3f1a:	c6 01       	movw	r24, r12
    3f1c:	8f 70       	andi	r24, 0x0F	; 15
    3f1e:	99 27       	eor	r25, r25
    3f20:	aa 27       	eor	r26, r26
    3f22:	bb 27       	eor	r27, r27
    3f24:	89 2b       	or	r24, r25
    3f26:	8a 2b       	or	r24, r26
    3f28:	8b 2b       	or	r24, r27
    3f2a:	81 f1       	breq	.+96     	; 0x3f8c <_ZN4UTFT12_fast_fill_8Eil+0x3fe>
    3f2c:	c7 01       	movw	r24, r14
    3f2e:	b6 01       	movw	r22, r12
    3f30:	20 e1       	ldi	r18, 0x10	; 16
    3f32:	30 e0       	ldi	r19, 0x00	; 0
    3f34:	40 e0       	ldi	r20, 0x00	; 0
    3f36:	50 e0       	ldi	r21, 0x00	; 0
    3f38:	0e 94 b2 4a 	call	0x9564	; 0x9564 <__divmodsi4>
    3f3c:	c1 2c       	mov	r12, r1
    3f3e:	d1 2c       	mov	r13, r1
    3f40:	76 01       	movw	r14, r12
    3f42:	6c 15       	cp	r22, r12
    3f44:	7d 05       	cpc	r23, r13
    3f46:	8e 05       	cpc	r24, r14
    3f48:	9f 05       	cpc	r25, r15
    3f4a:	04 f1       	brlt	.+64     	; 0x3f8c <_ZN4UTFT12_fast_fill_8Eil+0x3fe>
    3f4c:	ea 89       	ldd	r30, Y+18	; 0x12
    3f4e:	fb 89       	ldd	r31, Y+19	; 0x13
    3f50:	30 81       	ld	r19, Z
    3f52:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f54:	20 95       	com	r18
    3f56:	23 23       	and	r18, r19
    3f58:	20 83       	st	Z, r18
    3f5a:	ea 89       	ldd	r30, Y+18	; 0x12
    3f5c:	fb 89       	ldd	r31, Y+19	; 0x13
    3f5e:	30 81       	ld	r19, Z
    3f60:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f62:	23 2b       	or	r18, r19
    3f64:	20 83       	st	Z, r18
    3f66:	ea 89       	ldd	r30, Y+18	; 0x12
    3f68:	fb 89       	ldd	r31, Y+19	; 0x13
    3f6a:	30 81       	ld	r19, Z
    3f6c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f6e:	20 95       	com	r18
    3f70:	23 23       	and	r18, r19
    3f72:	20 83       	st	Z, r18
    3f74:	ea 89       	ldd	r30, Y+18	; 0x12
    3f76:	fb 89       	ldd	r31, Y+19	; 0x13
    3f78:	30 81       	ld	r19, Z
    3f7a:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3f7c:	23 2b       	or	r18, r19
    3f7e:	20 83       	st	Z, r18
    3f80:	2f ef       	ldi	r18, 0xFF	; 255
    3f82:	c2 1a       	sub	r12, r18
    3f84:	d2 0a       	sbc	r13, r18
    3f86:	e2 0a       	sbc	r14, r18
    3f88:	f2 0a       	sbc	r15, r18
    3f8a:	db cf       	rjmp	.-74     	; 0x3f42 <_ZN4UTFT12_fast_fill_8Eil+0x3b4>
    3f8c:	df 91       	pop	r29
    3f8e:	cf 91       	pop	r28
    3f90:	ff 90       	pop	r15
    3f92:	ef 90       	pop	r14
    3f94:	df 90       	pop	r13
    3f96:	cf 90       	pop	r12
    3f98:	bf 90       	pop	r11
    3f9a:	af 90       	pop	r10
    3f9c:	9f 90       	pop	r9
    3f9e:	8f 90       	pop	r8
    3fa0:	08 95       	ret

00003fa2 <_ZN4UTFTC1Ev>:
    3fa2:	08 95       	ret

00003fa4 <_ZN4UTFTC1Ehiiiii>:
    3fa4:	4f 92       	push	r4
    3fa6:	5f 92       	push	r5
    3fa8:	6f 92       	push	r6
    3faa:	7f 92       	push	r7
    3fac:	8f 92       	push	r8
    3fae:	9f 92       	push	r9
    3fb0:	af 92       	push	r10
    3fb2:	bf 92       	push	r11
    3fb4:	cf 92       	push	r12
    3fb6:	df 92       	push	r13
    3fb8:	ef 92       	push	r14
    3fba:	ff 92       	push	r15
    3fbc:	0f 93       	push	r16
    3fbe:	1f 93       	push	r17
    3fc0:	cf 93       	push	r28
    3fc2:	df 93       	push	r29
    3fc4:	cd b7       	in	r28, 0x3d	; 61
    3fc6:	de b7       	in	r29, 0x3e	; 62
    3fc8:	c0 5a       	subi	r28, 0xA0	; 160
    3fca:	d1 09       	sbc	r29, r1
    3fcc:	0f b6       	in	r0, 0x3f	; 63
    3fce:	f8 94       	cli
    3fd0:	de bf       	out	0x3e, r29	; 62
    3fd2:	0f be       	out	0x3f, r0	; 63
    3fd4:	cd bf       	out	0x3d, r28	; 61
    3fd6:	70 e4       	ldi	r23, 0x40	; 64
    3fd8:	e6 e0       	ldi	r30, 0x06	; 6
    3fda:	f2 e0       	ldi	r31, 0x02	; 2
    3fdc:	de 01       	movw	r26, r28
    3fde:	af 5b       	subi	r26, 0xBF	; 191
    3fe0:	bf 4f       	sbci	r27, 0xFF	; 255
    3fe2:	01 90       	ld	r0, Z+
    3fe4:	0d 92       	st	X+, r0
    3fe6:	7a 95       	dec	r23
    3fe8:	e1 f7       	brne	.-8      	; 0x3fe2 <_ZN4UTFTC1Ehiiiii+0x3e>
    3fea:	70 e4       	ldi	r23, 0x40	; 64
    3fec:	e6 e4       	ldi	r30, 0x46	; 70
    3fee:	f2 e0       	ldi	r31, 0x02	; 2
    3ff0:	de 01       	movw	r26, r28
    3ff2:	11 96       	adiw	r26, 0x01	; 1
    3ff4:	01 90       	ld	r0, Z+
    3ff6:	0d 92       	st	X+, r0
    3ff8:	7a 95       	dec	r23
    3ffa:	e1 f7       	brne	.-8      	; 0x3ff4 <_ZN4UTFTC1Ehiiiii+0x50>
    3ffc:	70 e2       	ldi	r23, 0x20	; 32
    3ffe:	e6 e8       	ldi	r30, 0x86	; 134
    4000:	f2 e0       	ldi	r31, 0x02	; 2
    4002:	de 01       	movw	r26, r28
    4004:	af 57       	subi	r26, 0x7F	; 127
    4006:	bf 4f       	sbci	r27, 0xFF	; 255
    4008:	01 90       	ld	r0, Z+
    400a:	0d 92       	st	X+, r0
    400c:	7a 95       	dec	r23
    400e:	e1 f7       	brne	.-8      	; 0x4008 <_ZN4UTFTC1Ehiiiii+0x64>
    4010:	e6 2f       	mov	r30, r22
    4012:	f0 e0       	ldi	r31, 0x00	; 0
    4014:	5f 01       	movw	r10, r30
    4016:	aa 0c       	add	r10, r10
    4018:	bb 1c       	adc	r11, r11
    401a:	a1 e4       	ldi	r26, 0x41	; 65
    401c:	b0 e0       	ldi	r27, 0x00	; 0
    401e:	ac 0f       	add	r26, r28
    4020:	bd 1f       	adc	r27, r29
    4022:	aa 0d       	add	r26, r10
    4024:	bb 1d       	adc	r27, r11
    4026:	0d 90       	ld	r0, X+
    4028:	bc 91       	ld	r27, X
    402a:	a0 2d       	mov	r26, r0
    402c:	2d 01       	movw	r4, r26
    402e:	61 2c       	mov	r6, r1
    4030:	71 2c       	mov	r7, r1
    4032:	dc 01       	movw	r26, r24
    4034:	15 96       	adiw	r26, 0x05	; 5
    4036:	4d 92       	st	X+, r4
    4038:	5d 92       	st	X+, r5
    403a:	6d 92       	st	X+, r6
    403c:	7c 92       	st	X, r7
    403e:	18 97       	sbiw	r26, 0x08	; 8
    4040:	a1 e0       	ldi	r26, 0x01	; 1
    4042:	b0 e0       	ldi	r27, 0x00	; 0
    4044:	ac 0f       	add	r26, r28
    4046:	bd 1f       	adc	r27, r29
    4048:	aa 0d       	add	r26, r10
    404a:	bb 1d       	adc	r27, r11
    404c:	0d 90       	ld	r0, X+
    404e:	bc 91       	ld	r27, X
    4050:	a0 2d       	mov	r26, r0
    4052:	4d 01       	movw	r8, r26
    4054:	a1 2c       	mov	r10, r1
    4056:	b1 2c       	mov	r11, r1
    4058:	dc 01       	movw	r26, r24
    405a:	19 96       	adiw	r26, 0x09	; 9
    405c:	8d 92       	st	X+, r8
    405e:	9d 92       	st	X+, r9
    4060:	ad 92       	st	X+, r10
    4062:	bc 92       	st	X, r11
    4064:	1c 97       	sbiw	r26, 0x0c	; 12
    4066:	a1 e8       	ldi	r26, 0x81	; 129
    4068:	b0 e0       	ldi	r27, 0x00	; 0
    406a:	ac 0f       	add	r26, r28
    406c:	bd 1f       	adc	r27, r29
    406e:	ea 0f       	add	r30, r26
    4070:	fb 1f       	adc	r31, r27
    4072:	70 81       	ld	r23, Z
    4074:	fc 01       	movw	r30, r24
    4076:	76 87       	std	Z+14, r23	; 0x0e
    4078:	65 87       	std	Z+13, r22	; 0x0d
    407a:	45 a3       	std	Z+37, r20	; 0x25
    407c:	26 a3       	std	Z+38, r18	; 0x26
    407e:	07 a3       	std	Z+39, r16	; 0x27
    4080:	e0 a6       	std	Z+40, r14	; 0x28
    4082:	c1 a6       	std	Z+41, r12	; 0x29
    4084:	74 30       	cpi	r23, 0x04	; 4
    4086:	19 f4       	brne	.+6      	; 0x408e <_ZN4UTFTC1Ehiiiii+0xea>
    4088:	61 e0       	ldi	r22, 0x01	; 1
    408a:	66 87       	std	Z+14, r22	; 0x0e
    408c:	77 87       	std	Z+15, r23	; 0x0f
    408e:	dc 01       	movw	r26, r24
    4090:	1e 96       	adiw	r26, 0x0e	; 14
    4092:	6c 91       	ld	r22, X
    4094:	1e 97       	sbiw	r26, 0x0e	; 14
    4096:	65 30       	cpi	r22, 0x05	; 5
    4098:	31 f4       	brne	.+12     	; 0x40a6 <_ZN4UTFTC1Ehiiiii+0x102>
    409a:	71 e0       	ldi	r23, 0x01	; 1
    409c:	1e 96       	adiw	r26, 0x0e	; 14
    409e:	7c 93       	st	X, r23
    40a0:	1e 97       	sbiw	r26, 0x0e	; 14
    40a2:	1f 96       	adiw	r26, 0x0f	; 15
    40a4:	6c 93       	st	X, r22
    40a6:	fc 01       	movw	r30, r24
    40a8:	66 85       	ldd	r22, Z+14	; 0x0e
    40aa:	61 30       	cpi	r22, 0x01	; 1
    40ac:	09 f4       	brne	.+2      	; 0x40b0 <_ZN4UTFTC1Ehiiiii+0x10c>
    40ae:	98 c0       	rjmp	.+304    	; 0x41e0 <_ZN4UTFTC1Ehiiiii+0x23c>
    40b0:	49 01       	movw	r8, r18
    40b2:	3a 01       	movw	r6, r20
    40b4:	5c 01       	movw	r10, r24
    40b6:	29 dc       	rcall	.-1966   	; 0x390a <_ZN4UTFT24_set_direction_registersEh>
    40b8:	f3 01       	movw	r30, r6
    40ba:	e0 58       	subi	r30, 0x80	; 128
    40bc:	fc 4e       	sbci	r31, 0xEC	; 236
    40be:	e4 91       	lpm	r30, Z
    40c0:	f0 e0       	ldi	r31, 0x00	; 0
    40c2:	ee 0f       	add	r30, r30
    40c4:	ff 1f       	adc	r31, r31
    40c6:	e0 52       	subi	r30, 0x20	; 32
    40c8:	fc 4e       	sbci	r31, 0xEC	; 236
    40ca:	25 91       	lpm	r18, Z+
    40cc:	34 91       	lpm	r19, Z
    40ce:	d5 01       	movw	r26, r10
    40d0:	51 96       	adiw	r26, 0x11	; 17
    40d2:	3c 93       	st	X, r19
    40d4:	2e 93       	st	-X, r18
    40d6:	50 97       	sbiw	r26, 0x10	; 16
    40d8:	f3 01       	movw	r30, r6
    40da:	e6 5c       	subi	r30, 0xC6	; 198
    40dc:	fc 4e       	sbci	r31, 0xEC	; 236
    40de:	e4 91       	lpm	r30, Z
    40e0:	5e 96       	adiw	r26, 0x1e	; 30
    40e2:	ec 93       	st	X, r30
    40e4:	5e 97       	sbiw	r26, 0x1e	; 30
    40e6:	f4 01       	movw	r30, r8
    40e8:	e0 58       	subi	r30, 0x80	; 128
    40ea:	fc 4e       	sbci	r31, 0xEC	; 236
    40ec:	e4 91       	lpm	r30, Z
    40ee:	f0 e0       	ldi	r31, 0x00	; 0
    40f0:	ee 0f       	add	r30, r30
    40f2:	ff 1f       	adc	r31, r31
    40f4:	e0 52       	subi	r30, 0x20	; 32
    40f6:	fc 4e       	sbci	r31, 0xEC	; 236
    40f8:	25 91       	lpm	r18, Z+
    40fa:	34 91       	lpm	r19, Z
    40fc:	f5 01       	movw	r30, r10
    40fe:	33 8b       	std	Z+19, r19	; 0x13
    4100:	22 8b       	std	Z+18, r18	; 0x12
    4102:	f4 01       	movw	r30, r8
    4104:	e6 5c       	subi	r30, 0xC6	; 198
    4106:	fc 4e       	sbci	r31, 0xEC	; 236
    4108:	e4 91       	lpm	r30, Z
    410a:	5f 96       	adiw	r26, 0x1f	; 31
    410c:	ec 93       	st	X, r30
    410e:	5f 97       	sbiw	r26, 0x1f	; 31
    4110:	c8 01       	movw	r24, r16
    4112:	f8 01       	movw	r30, r16
    4114:	e0 58       	subi	r30, 0x80	; 128
    4116:	fc 4e       	sbci	r31, 0xEC	; 236
    4118:	e4 91       	lpm	r30, Z
    411a:	f0 e0       	ldi	r31, 0x00	; 0
    411c:	ee 0f       	add	r30, r30
    411e:	ff 1f       	adc	r31, r31
    4120:	e0 52       	subi	r30, 0x20	; 32
    4122:	fc 4e       	sbci	r31, 0xEC	; 236
    4124:	25 91       	lpm	r18, Z+
    4126:	34 91       	lpm	r19, Z
    4128:	f5 01       	movw	r30, r10
    412a:	35 8b       	std	Z+21, r19	; 0x15
    412c:	24 8b       	std	Z+20, r18	; 0x14
    412e:	fc 01       	movw	r30, r24
    4130:	e6 5c       	subi	r30, 0xC6	; 198
    4132:	fc 4e       	sbci	r31, 0xEC	; 236
    4134:	e4 91       	lpm	r30, Z
    4136:	90 96       	adiw	r26, 0x20	; 32
    4138:	ec 93       	st	X, r30
    413a:	90 97       	sbiw	r26, 0x20	; 32
    413c:	f7 01       	movw	r30, r14
    413e:	e0 58       	subi	r30, 0x80	; 128
    4140:	fc 4e       	sbci	r31, 0xEC	; 236
    4142:	e4 91       	lpm	r30, Z
    4144:	f0 e0       	ldi	r31, 0x00	; 0
    4146:	ee 0f       	add	r30, r30
    4148:	ff 1f       	adc	r31, r31
    414a:	e0 52       	subi	r30, 0x20	; 32
    414c:	fc 4e       	sbci	r31, 0xEC	; 236
    414e:	85 91       	lpm	r24, Z+
    4150:	94 91       	lpm	r25, Z
    4152:	f5 01       	movw	r30, r10
    4154:	97 8b       	std	Z+23, r25	; 0x17
    4156:	86 8b       	std	Z+22, r24	; 0x16
    4158:	f7 01       	movw	r30, r14
    415a:	e6 5c       	subi	r30, 0xC6	; 198
    415c:	fc 4e       	sbci	r31, 0xEC	; 236
    415e:	e4 90       	lpm	r14, Z
    4160:	91 96       	adiw	r26, 0x21	; 33
    4162:	ec 92       	st	X, r14
    4164:	91 97       	sbiw	r26, 0x21	; 33
    4166:	1e 96       	adiw	r26, 0x0e	; 14
    4168:	8c 91       	ld	r24, X
    416a:	81 31       	cpi	r24, 0x11	; 17
    416c:	09 f0       	breq	.+2      	; 0x4170 <_ZN4UTFTC1Ehiiiii+0x1cc>
    416e:	ad c0       	rjmp	.+346    	; 0x42ca <_ZN4UTFTC1Ehiiiii+0x326>
    4170:	f6 01       	movw	r30, r12
    4172:	e0 58       	subi	r30, 0x80	; 128
    4174:	fc 4e       	sbci	r31, 0xEC	; 236
    4176:	e4 91       	lpm	r30, Z
    4178:	f0 e0       	ldi	r31, 0x00	; 0
    417a:	ee 0f       	add	r30, r30
    417c:	ff 1f       	adc	r31, r31
    417e:	e0 52       	subi	r30, 0x20	; 32
    4180:	fc 4e       	sbci	r31, 0xEC	; 236
    4182:	a5 91       	lpm	r26, Z+
    4184:	b4 91       	lpm	r27, Z
    4186:	f5 01       	movw	r30, r10
    4188:	b5 8f       	std	Z+29, r27	; 0x1d
    418a:	a4 8f       	std	Z+28, r26	; 0x1c
    418c:	f6 01       	movw	r30, r12
    418e:	e6 5c       	subi	r30, 0xC6	; 198
    4190:	fc 4e       	sbci	r31, 0xEC	; 236
    4192:	94 91       	lpm	r25, Z
    4194:	f5 01       	movw	r30, r10
    4196:	94 a3       	std	Z+36, r25	; 0x24
    4198:	8c 91       	ld	r24, X
    419a:	e9 2f       	mov	r30, r25
    419c:	e0 95       	com	r30
    419e:	e8 23       	and	r30, r24
    41a0:	ec 93       	st	X, r30
    41a2:	61 e0       	ldi	r22, 0x01	; 1
    41a4:	88 e0       	ldi	r24, 0x08	; 8
    41a6:	0e 94 e8 48 	call	0x91d0	; 0x91d0 <pinMode>
    41aa:	60 e0       	ldi	r22, 0x00	; 0
    41ac:	88 e0       	ldi	r24, 0x08	; 8
    41ae:	c0 56       	subi	r28, 0x60	; 96
    41b0:	df 4f       	sbci	r29, 0xFF	; 255
    41b2:	0f b6       	in	r0, 0x3f	; 63
    41b4:	f8 94       	cli
    41b6:	de bf       	out	0x3e, r29	; 62
    41b8:	0f be       	out	0x3f, r0	; 63
    41ba:	cd bf       	out	0x3d, r28	; 61
    41bc:	df 91       	pop	r29
    41be:	cf 91       	pop	r28
    41c0:	1f 91       	pop	r17
    41c2:	0f 91       	pop	r16
    41c4:	ff 90       	pop	r15
    41c6:	ef 90       	pop	r14
    41c8:	df 90       	pop	r13
    41ca:	cf 90       	pop	r12
    41cc:	bf 90       	pop	r11
    41ce:	af 90       	pop	r10
    41d0:	9f 90       	pop	r9
    41d2:	8f 90       	pop	r8
    41d4:	7f 90       	pop	r7
    41d6:	6f 90       	pop	r6
    41d8:	5f 90       	pop	r5
    41da:	4f 90       	pop	r4
    41dc:	0c 94 24 49 	jmp	0x9248	; 0x9248 <digitalWrite>
    41e0:	ba 01       	movw	r22, r20
    41e2:	fa 01       	movw	r30, r20
    41e4:	e0 58       	subi	r30, 0x80	; 128
    41e6:	fc 4e       	sbci	r31, 0xEC	; 236
    41e8:	e4 91       	lpm	r30, Z
    41ea:	f0 e0       	ldi	r31, 0x00	; 0
    41ec:	ee 0f       	add	r30, r30
    41ee:	ff 1f       	adc	r31, r31
    41f0:	e0 52       	subi	r30, 0x20	; 32
    41f2:	fc 4e       	sbci	r31, 0xEC	; 236
    41f4:	45 91       	lpm	r20, Z+
    41f6:	54 91       	lpm	r21, Z
    41f8:	dc 01       	movw	r26, r24
    41fa:	59 96       	adiw	r26, 0x19	; 25
    41fc:	5c 93       	st	X, r21
    41fe:	4e 93       	st	-X, r20
    4200:	58 97       	sbiw	r26, 0x18	; 24
    4202:	fb 01       	movw	r30, r22
    4204:	e6 5c       	subi	r30, 0xC6	; 198
    4206:	fc 4e       	sbci	r31, 0xEC	; 236
    4208:	e4 91       	lpm	r30, Z
    420a:	92 96       	adiw	r26, 0x22	; 34
    420c:	ec 93       	st	X, r30
    420e:	92 97       	sbiw	r26, 0x22	; 34
    4210:	a9 01       	movw	r20, r18
    4212:	f9 01       	movw	r30, r18
    4214:	e0 58       	subi	r30, 0x80	; 128
    4216:	fc 4e       	sbci	r31, 0xEC	; 236
    4218:	e4 91       	lpm	r30, Z
    421a:	f0 e0       	ldi	r31, 0x00	; 0
    421c:	ee 0f       	add	r30, r30
    421e:	ff 1f       	adc	r31, r31
    4220:	e0 52       	subi	r30, 0x20	; 32
    4222:	fc 4e       	sbci	r31, 0xEC	; 236
    4224:	25 91       	lpm	r18, Z+
    4226:	34 91       	lpm	r19, Z
    4228:	fc 01       	movw	r30, r24
    422a:	33 8f       	std	Z+27, r19	; 0x1b
    422c:	22 8f       	std	Z+26, r18	; 0x1a
    422e:	fa 01       	movw	r30, r20
    4230:	e6 5c       	subi	r30, 0xC6	; 198
    4232:	fc 4e       	sbci	r31, 0xEC	; 236
    4234:	e4 91       	lpm	r30, Z
    4236:	93 96       	adiw	r26, 0x23	; 35
    4238:	ec 93       	st	X, r30
    423a:	93 97       	sbiw	r26, 0x23	; 35
    423c:	f8 01       	movw	r30, r16
    423e:	e0 58       	subi	r30, 0x80	; 128
    4240:	fc 4e       	sbci	r31, 0xEC	; 236
    4242:	e4 91       	lpm	r30, Z
    4244:	f0 e0       	ldi	r31, 0x00	; 0
    4246:	ee 0f       	add	r30, r30
    4248:	ff 1f       	adc	r31, r31
    424a:	e0 52       	subi	r30, 0x20	; 32
    424c:	fc 4e       	sbci	r31, 0xEC	; 236
    424e:	45 91       	lpm	r20, Z+
    4250:	54 91       	lpm	r21, Z
    4252:	fc 01       	movw	r30, r24
    4254:	55 8b       	std	Z+21, r21	; 0x15
    4256:	44 8b       	std	Z+20, r20	; 0x14
    4258:	f8 01       	movw	r30, r16
    425a:	e6 5c       	subi	r30, 0xC6	; 198
    425c:	fc 4e       	sbci	r31, 0xEC	; 236
    425e:	e4 91       	lpm	r30, Z
    4260:	90 96       	adiw	r26, 0x20	; 32
    4262:	ec 93       	st	X, r30
    4264:	bf ef       	ldi	r27, 0xFF	; 255
    4266:	eb 16       	cp	r14, r27
    4268:	f1 04       	cpc	r15, r1
    426a:	a9 f0       	breq	.+42     	; 0x4296 <_ZN4UTFTC1Ehiiiii+0x2f2>
    426c:	f7 01       	movw	r30, r14
    426e:	e0 58       	subi	r30, 0x80	; 128
    4270:	fc 4e       	sbci	r31, 0xEC	; 236
    4272:	e4 91       	lpm	r30, Z
    4274:	f0 e0       	ldi	r31, 0x00	; 0
    4276:	ee 0f       	add	r30, r30
    4278:	ff 1f       	adc	r31, r31
    427a:	e0 52       	subi	r30, 0x20	; 32
    427c:	fc 4e       	sbci	r31, 0xEC	; 236
    427e:	25 91       	lpm	r18, Z+
    4280:	34 91       	lpm	r19, Z
    4282:	fc 01       	movw	r30, r24
    4284:	37 8b       	std	Z+23, r19	; 0x17
    4286:	26 8b       	std	Z+22, r18	; 0x16
    4288:	f7 01       	movw	r30, r14
    428a:	e6 5c       	subi	r30, 0xC6	; 198
    428c:	fc 4e       	sbci	r31, 0xEC	; 236
    428e:	e4 90       	lpm	r14, Z
    4290:	dc 01       	movw	r26, r24
    4292:	91 96       	adiw	r26, 0x21	; 33
    4294:	ec 92       	st	X, r14
    4296:	fc 01       	movw	r30, r24
    4298:	27 85       	ldd	r18, Z+15	; 0x0f
    429a:	24 30       	cpi	r18, 0x04	; 4
    429c:	b1 f0       	breq	.+44     	; 0x42ca <_ZN4UTFTC1Ehiiiii+0x326>
    429e:	f6 01       	movw	r30, r12
    42a0:	e0 58       	subi	r30, 0x80	; 128
    42a2:	fc 4e       	sbci	r31, 0xEC	; 236
    42a4:	e4 91       	lpm	r30, Z
    42a6:	f0 e0       	ldi	r31, 0x00	; 0
    42a8:	ee 0f       	add	r30, r30
    42aa:	ff 1f       	adc	r31, r31
    42ac:	e0 52       	subi	r30, 0x20	; 32
    42ae:	fc 4e       	sbci	r31, 0xEC	; 236
    42b0:	45 91       	lpm	r20, Z+
    42b2:	54 91       	lpm	r21, Z
    42b4:	dc 01       	movw	r26, r24
    42b6:	51 96       	adiw	r26, 0x11	; 17
    42b8:	5c 93       	st	X, r21
    42ba:	4e 93       	st	-X, r20
    42bc:	50 97       	sbiw	r26, 0x10	; 16
    42be:	f6 01       	movw	r30, r12
    42c0:	e6 5c       	subi	r30, 0xC6	; 198
    42c2:	fc 4e       	sbci	r31, 0xEC	; 236
    42c4:	e4 91       	lpm	r30, Z
    42c6:	5e 96       	adiw	r26, 0x1e	; 30
    42c8:	ec 93       	st	X, r30
    42ca:	c0 56       	subi	r28, 0x60	; 96
    42cc:	df 4f       	sbci	r29, 0xFF	; 255
    42ce:	0f b6       	in	r0, 0x3f	; 63
    42d0:	f8 94       	cli
    42d2:	de bf       	out	0x3e, r29	; 62
    42d4:	0f be       	out	0x3f, r0	; 63
    42d6:	cd bf       	out	0x3d, r28	; 61
    42d8:	df 91       	pop	r29
    42da:	cf 91       	pop	r28
    42dc:	1f 91       	pop	r17
    42de:	0f 91       	pop	r16
    42e0:	ff 90       	pop	r15
    42e2:	ef 90       	pop	r14
    42e4:	df 90       	pop	r13
    42e6:	cf 90       	pop	r12
    42e8:	bf 90       	pop	r11
    42ea:	af 90       	pop	r10
    42ec:	9f 90       	pop	r9
    42ee:	8f 90       	pop	r8
    42f0:	7f 90       	pop	r7
    42f2:	6f 90       	pop	r6
    42f4:	5f 90       	pop	r5
    42f6:	4f 90       	pop	r4
    42f8:	08 95       	ret

000042fa <_ZN4UTFT13LCD_Write_COMEc>:
    42fa:	46 2f       	mov	r20, r22
    42fc:	dc 01       	movw	r26, r24
    42fe:	1e 96       	adiw	r26, 0x0e	; 14
    4300:	2c 91       	ld	r18, X
    4302:	1e 97       	sbiw	r26, 0x0e	; 14
    4304:	21 30       	cpi	r18, 0x01	; 1
    4306:	71 f0       	breq	.+28     	; 0x4324 <_ZN4UTFT13LCD_Write_COMEc+0x2a>
    4308:	50 96       	adiw	r26, 0x10	; 16
    430a:	ed 91       	ld	r30, X+
    430c:	fc 91       	ld	r31, X
    430e:	51 97       	sbiw	r26, 0x11	; 17
    4310:	30 81       	ld	r19, Z
    4312:	5e 96       	adiw	r26, 0x1e	; 30
    4314:	2c 91       	ld	r18, X
    4316:	5e 97       	sbiw	r26, 0x1e	; 30
    4318:	20 95       	com	r18
    431a:	23 23       	and	r18, r19
    431c:	20 83       	st	Z, r18
    431e:	1e 96       	adiw	r26, 0x0e	; 14
    4320:	2c 91       	ld	r18, X
    4322:	01 c0       	rjmp	.+2      	; 0x4326 <_ZN4UTFT13LCD_Write_COMEc+0x2c>
    4324:	21 e0       	ldi	r18, 0x01	; 1
    4326:	60 e0       	ldi	r22, 0x00	; 0
    4328:	59 c9       	rjmp	.-3406   	; 0x35dc <_ZN4UTFT12LCD_Writ_BusEcch>

0000432a <_ZN4UTFT14LCD_Write_DATAEcc>:
    432a:	1f 93       	push	r17
    432c:	cf 93       	push	r28
    432e:	df 93       	push	r29
    4330:	dc 01       	movw	r26, r24
    4332:	1e 96       	adiw	r26, 0x0e	; 14
    4334:	2c 91       	ld	r18, X
    4336:	1e 97       	sbiw	r26, 0x0e	; 14
    4338:	21 30       	cpi	r18, 0x01	; 1
    433a:	69 f0       	breq	.+26     	; 0x4356 <_ZN4UTFT14LCD_Write_DATAEcc+0x2c>
    433c:	50 96       	adiw	r26, 0x10	; 16
    433e:	ed 91       	ld	r30, X+
    4340:	fc 91       	ld	r31, X
    4342:	51 97       	sbiw	r26, 0x11	; 17
    4344:	30 81       	ld	r19, Z
    4346:	5e 96       	adiw	r26, 0x1e	; 30
    4348:	2c 91       	ld	r18, X
    434a:	5e 97       	sbiw	r26, 0x1e	; 30
    434c:	23 2b       	or	r18, r19
    434e:	20 83       	st	Z, r18
    4350:	1e 96       	adiw	r26, 0x0e	; 14
    4352:	2c 91       	ld	r18, X
    4354:	0a c0       	rjmp	.+20     	; 0x436a <_ZN4UTFT14LCD_Write_DATAEcc+0x40>
    4356:	14 2f       	mov	r17, r20
    4358:	46 2f       	mov	r20, r22
    435a:	ec 01       	movw	r28, r24
    435c:	21 e0       	ldi	r18, 0x01	; 1
    435e:	61 e0       	ldi	r22, 0x01	; 1
    4360:	3d d9       	rcall	.-3462   	; 0x35dc <_ZN4UTFT12LCD_Writ_BusEcch>
    4362:	2e 85       	ldd	r18, Y+14	; 0x0e
    4364:	41 2f       	mov	r20, r17
    4366:	61 e0       	ldi	r22, 0x01	; 1
    4368:	ce 01       	movw	r24, r28
    436a:	df 91       	pop	r29
    436c:	cf 91       	pop	r28
    436e:	1f 91       	pop	r17
    4370:	35 c9       	rjmp	.-3478   	; 0x35dc <_ZN4UTFT12LCD_Writ_BusEcch>

00004372 <_ZN4UTFT14LCD_Write_DATAEc>:
    4372:	46 2f       	mov	r20, r22
    4374:	dc 01       	movw	r26, r24
    4376:	1e 96       	adiw	r26, 0x0e	; 14
    4378:	2c 91       	ld	r18, X
    437a:	1e 97       	sbiw	r26, 0x0e	; 14
    437c:	21 30       	cpi	r18, 0x01	; 1
    437e:	71 f0       	breq	.+28     	; 0x439c <_ZN4UTFT14LCD_Write_DATAEc+0x2a>
    4380:	50 96       	adiw	r26, 0x10	; 16
    4382:	ed 91       	ld	r30, X+
    4384:	fc 91       	ld	r31, X
    4386:	51 97       	sbiw	r26, 0x11	; 17
    4388:	30 81       	ld	r19, Z
    438a:	5e 96       	adiw	r26, 0x1e	; 30
    438c:	2c 91       	ld	r18, X
    438e:	5e 97       	sbiw	r26, 0x1e	; 30
    4390:	23 2b       	or	r18, r19
    4392:	20 83       	st	Z, r18
    4394:	1e 96       	adiw	r26, 0x0e	; 14
    4396:	2c 91       	ld	r18, X
    4398:	60 e0       	ldi	r22, 0x00	; 0
    439a:	02 c0       	rjmp	.+4      	; 0x43a0 <_ZN4UTFT14LCD_Write_DATAEc+0x2e>
    439c:	21 e0       	ldi	r18, 0x01	; 1
    439e:	61 e0       	ldi	r22, 0x01	; 1
    43a0:	1d c9       	rjmp	.-3526   	; 0x35dc <_ZN4UTFT12LCD_Writ_BusEcch>

000043a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>:
    43a2:	0f 93       	push	r16
    43a4:	1f 93       	push	r17
    43a6:	cf 93       	push	r28
    43a8:	df 93       	push	r29
    43aa:	ec 01       	movw	r28, r24
    43ac:	8a 01       	movw	r16, r20
    43ae:	a5 df       	rcall	.-182    	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    43b0:	40 2f       	mov	r20, r16
    43b2:	61 2f       	mov	r22, r17
    43b4:	ce 01       	movw	r24, r28
    43b6:	df 91       	pop	r29
    43b8:	cf 91       	pop	r28
    43ba:	1f 91       	pop	r17
    43bc:	0f 91       	pop	r16
    43be:	b5 cf       	rjmp	.-150    	; 0x432a <_ZN4UTFT14LCD_Write_DATAEcc>

000043c0 <_ZN4UTFT5setXYEjjjj>:
    43c0:	af 92       	push	r10
    43c2:	bf 92       	push	r11
    43c4:	cf 92       	push	r12
    43c6:	df 92       	push	r13
    43c8:	ef 92       	push	r14
    43ca:	ff 92       	push	r15
    43cc:	0f 93       	push	r16
    43ce:	1f 93       	push	r17
    43d0:	cf 93       	push	r28
    43d2:	df 93       	push	r29
    43d4:	ec 01       	movw	r28, r24
    43d6:	6b 01       	movw	r12, r22
    43d8:	b4 2e       	mov	r11, r20
    43da:	a5 2e       	mov	r10, r21
    43dc:	79 01       	movw	r14, r18
    43de:	8c 81       	ldd	r24, Y+4	; 0x04
    43e0:	81 30       	cpi	r24, 0x01	; 1
    43e2:	69 f4       	brne	.+26     	; 0x43fe <_ZN4UTFT5setXYEjjjj+0x3e>
    43e4:	89 85       	ldd	r24, Y+9	; 0x09
    43e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    43e8:	9c 01       	movw	r18, r24
    43ea:	26 1b       	sub	r18, r22
    43ec:	37 0b       	sbc	r19, r23
    43ee:	8e 19       	sub	r24, r14
    43f0:	9f 09       	sbc	r25, r15
    43f2:	78 01       	movw	r14, r16
    43f4:	89 01       	movw	r16, r18
    43f6:	c4 2e       	mov	r12, r20
    43f8:	d5 2e       	mov	r13, r21
    43fa:	b8 2e       	mov	r11, r24
    43fc:	a9 2e       	mov	r10, r25
    43fe:	ed 85       	ldd	r30, Y+13	; 0x0d
    4400:	8e 2f       	mov	r24, r30
    4402:	90 e0       	ldi	r25, 0x00	; 0
    4404:	fc 01       	movw	r30, r24
    4406:	32 97       	sbiw	r30, 0x02	; 2
    4408:	ee 31       	cpi	r30, 0x1E	; 30
    440a:	f1 05       	cpc	r31, r1
    440c:	08 f0       	brcs	.+2      	; 0x4410 <_ZN4UTFT5setXYEjjjj+0x50>
    440e:	0e c1       	rjmp	.+540    	; 0x462c <_ZN4UTFT5setXYEjjjj+0x26c>
    4410:	88 27       	eor	r24, r24
    4412:	ee 58       	subi	r30, 0x8E	; 142
    4414:	ff 4f       	sbci	r31, 0xFF	; 255
    4416:	8f 4f       	sbci	r24, 0xFF	; 255
    4418:	0c 94 ce 4a 	jmp	0x959c	; 0x959c <__tablejump2__>
    441c:	4d 2d       	mov	r20, r13
    441e:	50 e0       	ldi	r21, 0x00	; 0
    4420:	62 e0       	ldi	r22, 0x02	; 2
    4422:	ce 01       	movw	r24, r28
    4424:	be df       	rcall	.-132    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4426:	a6 01       	movw	r20, r12
    4428:	63 e0       	ldi	r22, 0x03	; 3
    442a:	ce 01       	movw	r24, r28
    442c:	ba df       	rcall	.-140    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    442e:	4f 2d       	mov	r20, r15
    4430:	50 e0       	ldi	r21, 0x00	; 0
    4432:	64 e0       	ldi	r22, 0x04	; 4
    4434:	ce 01       	movw	r24, r28
    4436:	b5 df       	rcall	.-150    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4438:	a7 01       	movw	r20, r14
    443a:	65 e0       	ldi	r22, 0x05	; 5
    443c:	ce 01       	movw	r24, r28
    443e:	b1 df       	rcall	.-158    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4440:	4a 2d       	mov	r20, r10
    4442:	50 e0       	ldi	r21, 0x00	; 0
    4444:	66 e0       	ldi	r22, 0x06	; 6
    4446:	ce 01       	movw	r24, r28
    4448:	ac df       	rcall	.-168    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    444a:	4b 2d       	mov	r20, r11
    444c:	5a 2d       	mov	r21, r10
    444e:	67 e0       	ldi	r22, 0x07	; 7
    4450:	ce 01       	movw	r24, r28
    4452:	a7 df       	rcall	.-178    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4454:	41 2f       	mov	r20, r17
    4456:	50 e0       	ldi	r21, 0x00	; 0
    4458:	52 c0       	rjmp	.+164    	; 0x44fe <_ZN4UTFT5setXYEjjjj+0x13e>
    445a:	5e 2d       	mov	r21, r14
    445c:	44 27       	eor	r20, r20
    445e:	4c 0d       	add	r20, r12
    4460:	5d 1d       	adc	r21, r13
    4462:	64 e4       	ldi	r22, 0x44	; 68
    4464:	ce 01       	movw	r24, r28
    4466:	9d df       	rcall	.-198    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4468:	4b 2d       	mov	r20, r11
    446a:	5a 2d       	mov	r21, r10
    446c:	65 e4       	ldi	r22, 0x45	; 69
    446e:	ce 01       	movw	r24, r28
    4470:	98 df       	rcall	.-208    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4472:	a8 01       	movw	r20, r16
    4474:	66 e4       	ldi	r22, 0x46	; 70
    4476:	ce 01       	movw	r24, r28
    4478:	94 df       	rcall	.-216    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    447a:	a6 01       	movw	r20, r12
    447c:	6e e4       	ldi	r22, 0x4E	; 78
    447e:	ce 01       	movw	r24, r28
    4480:	90 df       	rcall	.-224    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4482:	4b 2d       	mov	r20, r11
    4484:	5a 2d       	mov	r21, r10
    4486:	6f e4       	ldi	r22, 0x4F	; 79
    4488:	ce 01       	movw	r24, r28
    448a:	8b df       	rcall	.-234    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    448c:	62 e2       	ldi	r22, 0x22	; 34
    448e:	c2 c0       	rjmp	.+388    	; 0x4614 <_ZN4UTFT5setXYEjjjj+0x254>
    4490:	a6 01       	movw	r20, r12
    4492:	60 e2       	ldi	r22, 0x20	; 32
    4494:	ce 01       	movw	r24, r28
    4496:	85 df       	rcall	.-246    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4498:	4b 2d       	mov	r20, r11
    449a:	5a 2d       	mov	r21, r10
    449c:	61 e2       	ldi	r22, 0x21	; 33
    449e:	ce 01       	movw	r24, r28
    44a0:	80 df       	rcall	.-256    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44a2:	a6 01       	movw	r20, r12
    44a4:	60 e5       	ldi	r22, 0x50	; 80
    44a6:	ce 01       	movw	r24, r28
    44a8:	7c df       	rcall	.-264    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44aa:	4b 2d       	mov	r20, r11
    44ac:	5a 2d       	mov	r21, r10
    44ae:	62 e5       	ldi	r22, 0x52	; 82
    44b0:	ce 01       	movw	r24, r28
    44b2:	77 df       	rcall	.-274    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44b4:	a7 01       	movw	r20, r14
    44b6:	61 e5       	ldi	r22, 0x51	; 81
    44b8:	ce 01       	movw	r24, r28
    44ba:	73 df       	rcall	.-282    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44bc:	a8 01       	movw	r20, r16
    44be:	63 e5       	ldi	r22, 0x53	; 83
    44c0:	e3 cf       	rjmp	.-58     	; 0x4488 <_ZN4UTFT5setXYEjjjj+0xc8>
    44c2:	40 e0       	ldi	r20, 0x00	; 0
    44c4:	50 e0       	ldi	r21, 0x00	; 0
    44c6:	62 e0       	ldi	r22, 0x02	; 2
    44c8:	ce 01       	movw	r24, r28
    44ca:	6b df       	rcall	.-298    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44cc:	a6 01       	movw	r20, r12
    44ce:	63 e0       	ldi	r22, 0x03	; 3
    44d0:	ce 01       	movw	r24, r28
    44d2:	67 df       	rcall	.-306    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44d4:	40 e0       	ldi	r20, 0x00	; 0
    44d6:	50 e0       	ldi	r21, 0x00	; 0
    44d8:	64 e0       	ldi	r22, 0x04	; 4
    44da:	ce 01       	movw	r24, r28
    44dc:	62 df       	rcall	.-316    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44de:	a7 01       	movw	r20, r14
    44e0:	65 e0       	ldi	r22, 0x05	; 5
    44e2:	ce 01       	movw	r24, r28
    44e4:	5e df       	rcall	.-324    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44e6:	40 e0       	ldi	r20, 0x00	; 0
    44e8:	50 e0       	ldi	r21, 0x00	; 0
    44ea:	66 e0       	ldi	r22, 0x06	; 6
    44ec:	ce 01       	movw	r24, r28
    44ee:	59 df       	rcall	.-334    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44f0:	4b 2d       	mov	r20, r11
    44f2:	5a 2d       	mov	r21, r10
    44f4:	67 e0       	ldi	r22, 0x07	; 7
    44f6:	ce 01       	movw	r24, r28
    44f8:	54 df       	rcall	.-344    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    44fa:	40 e0       	ldi	r20, 0x00	; 0
    44fc:	50 e0       	ldi	r21, 0x00	; 0
    44fe:	68 e0       	ldi	r22, 0x08	; 8
    4500:	ce 01       	movw	r24, r28
    4502:	4f df       	rcall	.-354    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4504:	a8 01       	movw	r20, r16
    4506:	69 e0       	ldi	r22, 0x09	; 9
    4508:	bf cf       	rjmp	.-130    	; 0x4488 <_ZN4UTFT5setXYEjjjj+0xc8>
    450a:	6a e2       	ldi	r22, 0x2A	; 42
    450c:	ce 01       	movw	r24, r28
    450e:	f5 de       	rcall	.-534    	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4510:	6c 2d       	mov	r22, r12
    4512:	ce 01       	movw	r24, r28
    4514:	2e df       	rcall	.-420    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4516:	6e 2d       	mov	r22, r14
    4518:	ce 01       	movw	r24, r28
    451a:	2b df       	rcall	.-426    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    451c:	6b e2       	ldi	r22, 0x2B	; 43
    451e:	ce 01       	movw	r24, r28
    4520:	ec de       	rcall	.-552    	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4522:	6b 2d       	mov	r22, r11
    4524:	71 c0       	rjmp	.+226    	; 0x4608 <_ZN4UTFT5setXYEjjjj+0x248>
    4526:	6a e2       	ldi	r22, 0x2A	; 42
    4528:	ce 01       	movw	r24, r28
    452a:	e7 de       	rcall	.-562    	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    452c:	6a 2d       	mov	r22, r10
    452e:	ce 01       	movw	r24, r28
    4530:	20 df       	rcall	.-448    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4532:	6b 2d       	mov	r22, r11
    4534:	ce 01       	movw	r24, r28
    4536:	1d df       	rcall	.-454    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4538:	61 2f       	mov	r22, r17
    453a:	ce 01       	movw	r24, r28
    453c:	1a df       	rcall	.-460    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    453e:	60 2f       	mov	r22, r16
    4540:	ce 01       	movw	r24, r28
    4542:	17 df       	rcall	.-466    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4544:	6b e2       	ldi	r22, 0x2B	; 43
    4546:	ce 01       	movw	r24, r28
    4548:	d8 de       	rcall	.-592    	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    454a:	6d 2d       	mov	r22, r13
    454c:	ce 01       	movw	r24, r28
    454e:	11 df       	rcall	.-478    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4550:	6c 2d       	mov	r22, r12
    4552:	ce 01       	movw	r24, r28
    4554:	0e df       	rcall	.-484    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4556:	6f 2d       	mov	r22, r15
    4558:	ce 01       	movw	r24, r28
    455a:	0b df       	rcall	.-490    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    455c:	6e 2d       	mov	r22, r14
    455e:	57 c0       	rjmp	.+174    	; 0x460e <_ZN4UTFT5setXYEjjjj+0x24e>
    4560:	5e 2d       	mov	r21, r14
    4562:	44 27       	eor	r20, r20
    4564:	4c 29       	or	r20, r12
    4566:	5d 29       	or	r21, r13
    4568:	66 e4       	ldi	r22, 0x46	; 70
    456a:	ce 01       	movw	r24, r28
    456c:	1a df       	rcall	.-460    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    456e:	a8 01       	movw	r20, r16
    4570:	67 e4       	ldi	r22, 0x47	; 71
    4572:	ce 01       	movw	r24, r28
    4574:	16 df       	rcall	.-468    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4576:	4b 2d       	mov	r20, r11
    4578:	5a 2d       	mov	r21, r10
    457a:	68 e4       	ldi	r22, 0x48	; 72
    457c:	0f c0       	rjmp	.+30     	; 0x459c <_ZN4UTFT5setXYEjjjj+0x1dc>
    457e:	a7 01       	movw	r20, r14
    4580:	66 e3       	ldi	r22, 0x36	; 54
    4582:	ce 01       	movw	r24, r28
    4584:	0e df       	rcall	.-484    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4586:	a6 01       	movw	r20, r12
    4588:	67 e3       	ldi	r22, 0x37	; 55
    458a:	ce 01       	movw	r24, r28
    458c:	0a df       	rcall	.-492    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    458e:	a8 01       	movw	r20, r16
    4590:	68 e3       	ldi	r22, 0x38	; 56
    4592:	ce 01       	movw	r24, r28
    4594:	06 df       	rcall	.-500    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4596:	4b 2d       	mov	r20, r11
    4598:	5a 2d       	mov	r21, r10
    459a:	69 e3       	ldi	r22, 0x39	; 57
    459c:	ce 01       	movw	r24, r28
    459e:	01 df       	rcall	.-510    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45a0:	a6 01       	movw	r20, r12
    45a2:	60 e2       	ldi	r22, 0x20	; 32
    45a4:	ce 01       	movw	r24, r28
    45a6:	fd de       	rcall	.-518    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45a8:	4b 2d       	mov	r20, r11
    45aa:	5a 2d       	mov	r21, r10
    45ac:	61 e2       	ldi	r22, 0x21	; 33
    45ae:	6c cf       	rjmp	.-296    	; 0x4488 <_ZN4UTFT5setXYEjjjj+0xc8>
    45b0:	4b 2d       	mov	r20, r11
    45b2:	5a 2d       	mov	r21, r10
    45b4:	62 e0       	ldi	r22, 0x02	; 2
    45b6:	ce 01       	movw	r24, r28
    45b8:	f4 de       	rcall	.-536    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45ba:	a6 01       	movw	r20, r12
    45bc:	63 e0       	ldi	r22, 0x03	; 3
    45be:	ce 01       	movw	r24, r28
    45c0:	f0 de       	rcall	.-544    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45c2:	a8 01       	movw	r20, r16
    45c4:	66 e0       	ldi	r22, 0x06	; 6
    45c6:	ce 01       	movw	r24, r28
    45c8:	ec de       	rcall	.-552    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45ca:	a7 01       	movw	r20, r14
    45cc:	67 e0       	ldi	r22, 0x07	; 7
    45ce:	ce 01       	movw	r24, r28
    45d0:	e8 de       	rcall	.-560    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    45d2:	6f e0       	ldi	r22, 0x0F	; 15
    45d4:	1f c0       	rjmp	.+62     	; 0x4614 <_ZN4UTFT5setXYEjjjj+0x254>
    45d6:	6a e2       	ldi	r22, 0x2A	; 42
    45d8:	ce 01       	movw	r24, r28
    45da:	8f de       	rcall	.-738    	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    45dc:	6d 2d       	mov	r22, r13
    45de:	ce 01       	movw	r24, r28
    45e0:	c8 de       	rcall	.-624    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    45e2:	6c 2d       	mov	r22, r12
    45e4:	ce 01       	movw	r24, r28
    45e6:	c5 de       	rcall	.-630    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    45e8:	6f 2d       	mov	r22, r15
    45ea:	ce 01       	movw	r24, r28
    45ec:	c2 de       	rcall	.-636    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    45ee:	6e 2d       	mov	r22, r14
    45f0:	ce 01       	movw	r24, r28
    45f2:	bf de       	rcall	.-642    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    45f4:	6b e2       	ldi	r22, 0x2B	; 43
    45f6:	ce 01       	movw	r24, r28
    45f8:	80 de       	rcall	.-768    	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    45fa:	6a 2d       	mov	r22, r10
    45fc:	ce 01       	movw	r24, r28
    45fe:	b9 de       	rcall	.-654    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4600:	6b 2d       	mov	r22, r11
    4602:	ce 01       	movw	r24, r28
    4604:	b6 de       	rcall	.-660    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4606:	61 2f       	mov	r22, r17
    4608:	ce 01       	movw	r24, r28
    460a:	b3 de       	rcall	.-666    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    460c:	60 2f       	mov	r22, r16
    460e:	ce 01       	movw	r24, r28
    4610:	b0 de       	rcall	.-672    	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4612:	6c e2       	ldi	r22, 0x2C	; 44
    4614:	ce 01       	movw	r24, r28
    4616:	df 91       	pop	r29
    4618:	cf 91       	pop	r28
    461a:	1f 91       	pop	r17
    461c:	0f 91       	pop	r16
    461e:	ff 90       	pop	r15
    4620:	ef 90       	pop	r14
    4622:	df 90       	pop	r13
    4624:	cf 90       	pop	r12
    4626:	bf 90       	pop	r11
    4628:	af 90       	pop	r10
    462a:	67 ce       	rjmp	.-818    	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    462c:	df 91       	pop	r29
    462e:	cf 91       	pop	r28
    4630:	1f 91       	pop	r17
    4632:	0f 91       	pop	r16
    4634:	ff 90       	pop	r15
    4636:	ef 90       	pop	r14
    4638:	df 90       	pop	r13
    463a:	cf 90       	pop	r12
    463c:	bf 90       	pop	r11
    463e:	af 90       	pop	r10
    4640:	08 95       	ret

00004642 <_ZN4UTFT7InitLCDEh>:
    4642:	0f 93       	push	r16
    4644:	1f 93       	push	r17
    4646:	cf 93       	push	r28
    4648:	df 93       	push	r29
    464a:	ec 01       	movw	r28, r24
    464c:	6c 83       	std	Y+4, r22	; 0x04
    464e:	61 e0       	ldi	r22, 0x01	; 1
    4650:	8d a1       	ldd	r24, Y+37	; 0x25
    4652:	0e 94 e8 48 	call	0x91d0	; 0x91d0 <pinMode>
    4656:	61 e0       	ldi	r22, 0x01	; 1
    4658:	8e a1       	ldd	r24, Y+38	; 0x26
    465a:	0e 94 e8 48 	call	0x91d0	; 0x91d0 <pinMode>
    465e:	61 e0       	ldi	r22, 0x01	; 1
    4660:	8f a1       	ldd	r24, Y+39	; 0x27
    4662:	0e 94 e8 48 	call	0x91d0	; 0x91d0 <pinMode>
    4666:	88 a5       	ldd	r24, Y+40	; 0x28
    4668:	8f 3f       	cpi	r24, 0xFF	; 255
    466a:	19 f0       	breq	.+6      	; 0x4672 <_ZN4UTFT7InitLCDEh+0x30>
    466c:	61 e0       	ldi	r22, 0x01	; 1
    466e:	0e 94 e8 48 	call	0x91d0	; 0x91d0 <pinMode>
    4672:	8e 85       	ldd	r24, Y+14	; 0x0e
    4674:	81 31       	cpi	r24, 0x11	; 17
    4676:	29 f0       	breq	.+10     	; 0x4682 <_ZN4UTFT7InitLCDEh+0x40>
    4678:	81 30       	cpi	r24, 0x01	; 1
    467a:	39 f4       	brne	.+14     	; 0x468a <_ZN4UTFT7InitLCDEh+0x48>
    467c:	8f 85       	ldd	r24, Y+15	; 0x0f
    467e:	85 30       	cpi	r24, 0x05	; 5
    4680:	21 f4       	brne	.+8      	; 0x468a <_ZN4UTFT7InitLCDEh+0x48>
    4682:	61 e0       	ldi	r22, 0x01	; 1
    4684:	89 a5       	ldd	r24, Y+41	; 0x29
    4686:	0e 94 e8 48 	call	0x91d0	; 0x91d0 <pinMode>
    468a:	6e 85       	ldd	r22, Y+14	; 0x0e
    468c:	61 30       	cpi	r22, 0x01	; 1
    468e:	11 f0       	breq	.+4      	; 0x4694 <_ZN4UTFT7InitLCDEh+0x52>
    4690:	ce 01       	movw	r24, r28
    4692:	3b d9       	rcall	.-3466   	; 0x390a <_ZN4UTFT24_set_direction_registersEh>
    4694:	ee 89       	ldd	r30, Y+22	; 0x16
    4696:	ff 89       	ldd	r31, Y+23	; 0x17
    4698:	90 81       	ld	r25, Z
    469a:	89 a1       	ldd	r24, Y+33	; 0x21
    469c:	89 2b       	or	r24, r25
    469e:	80 83       	st	Z, r24
    46a0:	65 e0       	ldi	r22, 0x05	; 5
    46a2:	70 e0       	ldi	r23, 0x00	; 0
    46a4:	80 e0       	ldi	r24, 0x00	; 0
    46a6:	90 e0       	ldi	r25, 0x00	; 0
    46a8:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    46ac:	ee 89       	ldd	r30, Y+22	; 0x16
    46ae:	ff 89       	ldd	r31, Y+23	; 0x17
    46b0:	90 81       	ld	r25, Z
    46b2:	89 a1       	ldd	r24, Y+33	; 0x21
    46b4:	80 95       	com	r24
    46b6:	89 23       	and	r24, r25
    46b8:	80 83       	st	Z, r24
    46ba:	6f e0       	ldi	r22, 0x0F	; 15
    46bc:	70 e0       	ldi	r23, 0x00	; 0
    46be:	80 e0       	ldi	r24, 0x00	; 0
    46c0:	90 e0       	ldi	r25, 0x00	; 0
    46c2:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    46c6:	ee 89       	ldd	r30, Y+22	; 0x16
    46c8:	ff 89       	ldd	r31, Y+23	; 0x17
    46ca:	90 81       	ld	r25, Z
    46cc:	89 a1       	ldd	r24, Y+33	; 0x21
    46ce:	89 2b       	or	r24, r25
    46d0:	80 83       	st	Z, r24
    46d2:	6f e0       	ldi	r22, 0x0F	; 15
    46d4:	70 e0       	ldi	r23, 0x00	; 0
    46d6:	80 e0       	ldi	r24, 0x00	; 0
    46d8:	90 e0       	ldi	r25, 0x00	; 0
    46da:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    46de:	ec 89       	ldd	r30, Y+20	; 0x14
    46e0:	fd 89       	ldd	r31, Y+21	; 0x15
    46e2:	90 81       	ld	r25, Z
    46e4:	88 a1       	ldd	r24, Y+32	; 0x20
    46e6:	80 95       	com	r24
    46e8:	89 23       	and	r24, r25
    46ea:	80 83       	st	Z, r24
    46ec:	ed 85       	ldd	r30, Y+13	; 0x0d
    46ee:	8e 2f       	mov	r24, r30
    46f0:	90 e0       	ldi	r25, 0x00	; 0
    46f2:	fc 01       	movw	r30, r24
    46f4:	32 97       	sbiw	r30, 0x02	; 2
    46f6:	ee 31       	cpi	r30, 0x1E	; 30
    46f8:	f1 05       	cpc	r31, r1
    46fa:	10 f0       	brcs	.+4      	; 0x4700 <_ZN4UTFT7InitLCDEh+0xbe>
    46fc:	0c 94 f4 35 	jmp	0x6be8	; 0x6be8 <_ZN4UTFT7InitLCDEh+0x25a6>
    4700:	88 27       	eor	r24, r24
    4702:	e0 57       	subi	r30, 0x70	; 112
    4704:	ff 4f       	sbci	r31, 0xFF	; 255
    4706:	8f 4f       	sbci	r24, 0xFF	; 255
    4708:	0c 94 ce 4a 	jmp	0x959c	; 0x959c <__tablejump2__>
    470c:	41 e0       	ldi	r20, 0x01	; 1
    470e:	50 e0       	ldi	r21, 0x00	; 0
    4710:	60 e0       	ldi	r22, 0x00	; 0
    4712:	ce 01       	movw	r24, r28
    4714:	46 de       	rcall	.-884    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4716:	44 ea       	ldi	r20, 0xA4	; 164
    4718:	58 ea       	ldi	r21, 0xA8	; 168
    471a:	63 e0       	ldi	r22, 0x03	; 3
    471c:	ce 01       	movw	r24, r28
    471e:	41 de       	rcall	.-894    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4720:	40 e0       	ldi	r20, 0x00	; 0
    4722:	50 e0       	ldi	r21, 0x00	; 0
    4724:	6c e0       	ldi	r22, 0x0C	; 12
    4726:	ce 01       	movw	r24, r28
    4728:	3c de       	rcall	.-904    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    472a:	4c e0       	ldi	r20, 0x0C	; 12
    472c:	58 e0       	ldi	r21, 0x08	; 8
    472e:	6d e0       	ldi	r22, 0x0D	; 13
    4730:	ce 01       	movw	r24, r28
    4732:	37 de       	rcall	.-914    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4734:	40 e0       	ldi	r20, 0x00	; 0
    4736:	5b e2       	ldi	r21, 0x2B	; 43
    4738:	6e e0       	ldi	r22, 0x0E	; 14
    473a:	ce 01       	movw	r24, r28
    473c:	32 de       	rcall	.-924    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    473e:	47 eb       	ldi	r20, 0xB7	; 183
    4740:	50 e0       	ldi	r21, 0x00	; 0
    4742:	6e e1       	ldi	r22, 0x1E	; 30
    4744:	ce 01       	movw	r24, r28
    4746:	2d de       	rcall	.-934    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4748:	4f e3       	ldi	r20, 0x3F	; 63
    474a:	5b e2       	ldi	r21, 0x2B	; 43
    474c:	61 e0       	ldi	r22, 0x01	; 1
    474e:	ce 01       	movw	r24, r28
    4750:	28 de       	rcall	.-944    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4752:	40 e0       	ldi	r20, 0x00	; 0
    4754:	56 e0       	ldi	r21, 0x06	; 6
    4756:	62 e0       	ldi	r22, 0x02	; 2
    4758:	ce 01       	movw	r24, r28
    475a:	23 de       	rcall	.-954    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    475c:	40 e0       	ldi	r20, 0x00	; 0
    475e:	50 e0       	ldi	r21, 0x00	; 0
    4760:	60 e1       	ldi	r22, 0x10	; 16
    4762:	ce 01       	movw	r24, r28
    4764:	1e de       	rcall	.-964    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4766:	40 e7       	ldi	r20, 0x70	; 112
    4768:	50 e6       	ldi	r21, 0x60	; 96
    476a:	61 e1       	ldi	r22, 0x11	; 17
    476c:	ce 01       	movw	r24, r28
    476e:	19 de       	rcall	.-974    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4770:	40 e0       	ldi	r20, 0x00	; 0
    4772:	50 e0       	ldi	r21, 0x00	; 0
    4774:	65 e0       	ldi	r22, 0x05	; 5
    4776:	ce 01       	movw	r24, r28
    4778:	14 de       	rcall	.-984    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    477a:	40 e0       	ldi	r20, 0x00	; 0
    477c:	50 e0       	ldi	r21, 0x00	; 0
    477e:	66 e0       	ldi	r22, 0x06	; 6
    4780:	ce 01       	movw	r24, r28
    4782:	0f de       	rcall	.-994    	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4784:	4c e1       	ldi	r20, 0x1C	; 28
    4786:	5f ee       	ldi	r21, 0xEF	; 239
    4788:	66 e1       	ldi	r22, 0x16	; 22
    478a:	ce 01       	movw	r24, r28
    478c:	0a de       	rcall	.-1004   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    478e:	43 e0       	ldi	r20, 0x03	; 3
    4790:	50 e0       	ldi	r21, 0x00	; 0
    4792:	67 e1       	ldi	r22, 0x17	; 23
    4794:	ce 01       	movw	r24, r28
    4796:	05 de       	rcall	.-1014   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4798:	43 e3       	ldi	r20, 0x33	; 51
    479a:	52 e0       	ldi	r21, 0x02	; 2
    479c:	67 e0       	ldi	r22, 0x07	; 7
    479e:	ce 01       	movw	r24, r28
    47a0:	00 de       	rcall	.-1024   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47a2:	40 e0       	ldi	r20, 0x00	; 0
    47a4:	50 e0       	ldi	r21, 0x00	; 0
    47a6:	6b e0       	ldi	r22, 0x0B	; 11
    47a8:	ce 01       	movw	r24, r28
    47aa:	fb dd       	rcall	.-1034   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47ac:	40 e0       	ldi	r20, 0x00	; 0
    47ae:	50 e0       	ldi	r21, 0x00	; 0
    47b0:	6f e0       	ldi	r22, 0x0F	; 15
    47b2:	ce 01       	movw	r24, r28
    47b4:	f6 dd       	rcall	.-1044   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47b6:	40 e0       	ldi	r20, 0x00	; 0
    47b8:	50 e0       	ldi	r21, 0x00	; 0
    47ba:	61 e4       	ldi	r22, 0x41	; 65
    47bc:	ce 01       	movw	r24, r28
    47be:	f1 dd       	rcall	.-1054   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47c0:	40 e0       	ldi	r20, 0x00	; 0
    47c2:	50 e0       	ldi	r21, 0x00	; 0
    47c4:	62 e4       	ldi	r22, 0x42	; 66
    47c6:	ce 01       	movw	r24, r28
    47c8:	ec dd       	rcall	.-1064   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47ca:	40 e0       	ldi	r20, 0x00	; 0
    47cc:	50 e0       	ldi	r21, 0x00	; 0
    47ce:	68 e4       	ldi	r22, 0x48	; 72
    47d0:	ce 01       	movw	r24, r28
    47d2:	e7 dd       	rcall	.-1074   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47d4:	4f e3       	ldi	r20, 0x3F	; 63
    47d6:	51 e0       	ldi	r21, 0x01	; 1
    47d8:	69 e4       	ldi	r22, 0x49	; 73
    47da:	ce 01       	movw	r24, r28
    47dc:	e2 dd       	rcall	.-1084   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47de:	40 e0       	ldi	r20, 0x00	; 0
    47e0:	50 e0       	ldi	r21, 0x00	; 0
    47e2:	6a e4       	ldi	r22, 0x4A	; 74
    47e4:	ce 01       	movw	r24, r28
    47e6:	dd dd       	rcall	.-1094   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47e8:	40 e0       	ldi	r20, 0x00	; 0
    47ea:	50 e0       	ldi	r21, 0x00	; 0
    47ec:	6b e4       	ldi	r22, 0x4B	; 75
    47ee:	ce 01       	movw	r24, r28
    47f0:	d8 dd       	rcall	.-1104   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47f2:	40 e0       	ldi	r20, 0x00	; 0
    47f4:	5f ee       	ldi	r21, 0xEF	; 239
    47f6:	64 e4       	ldi	r22, 0x44	; 68
    47f8:	ce 01       	movw	r24, r28
    47fa:	d3 dd       	rcall	.-1114   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    47fc:	40 e0       	ldi	r20, 0x00	; 0
    47fe:	50 e0       	ldi	r21, 0x00	; 0
    4800:	65 e4       	ldi	r22, 0x45	; 69
    4802:	ce 01       	movw	r24, r28
    4804:	ce dd       	rcall	.-1124   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4806:	4f e3       	ldi	r20, 0x3F	; 63
    4808:	51 e0       	ldi	r21, 0x01	; 1
    480a:	66 e4       	ldi	r22, 0x46	; 70
    480c:	ce 01       	movw	r24, r28
    480e:	c9 dd       	rcall	.-1134   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4810:	47 e0       	ldi	r20, 0x07	; 7
    4812:	57 e0       	ldi	r21, 0x07	; 7
    4814:	60 e3       	ldi	r22, 0x30	; 48
    4816:	ce 01       	movw	r24, r28
    4818:	c4 dd       	rcall	.-1144   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    481a:	44 e0       	ldi	r20, 0x04	; 4
    481c:	52 e0       	ldi	r21, 0x02	; 2
    481e:	61 e3       	ldi	r22, 0x31	; 49
    4820:	ce 01       	movw	r24, r28
    4822:	bf dd       	rcall	.-1154   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4824:	44 e0       	ldi	r20, 0x04	; 4
    4826:	52 e0       	ldi	r21, 0x02	; 2
    4828:	62 e3       	ldi	r22, 0x32	; 50
    482a:	ce 01       	movw	r24, r28
    482c:	ba dd       	rcall	.-1164   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    482e:	42 e0       	ldi	r20, 0x02	; 2
    4830:	55 e0       	ldi	r21, 0x05	; 5
    4832:	63 e3       	ldi	r22, 0x33	; 51
    4834:	ce 01       	movw	r24, r28
    4836:	b5 dd       	rcall	.-1174   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4838:	47 e0       	ldi	r20, 0x07	; 7
    483a:	55 e0       	ldi	r21, 0x05	; 5
    483c:	64 e3       	ldi	r22, 0x34	; 52
    483e:	ce 01       	movw	r24, r28
    4840:	b0 dd       	rcall	.-1184   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4842:	44 e0       	ldi	r20, 0x04	; 4
    4844:	52 e0       	ldi	r21, 0x02	; 2
    4846:	65 e3       	ldi	r22, 0x35	; 53
    4848:	ce 01       	movw	r24, r28
    484a:	ab dd       	rcall	.-1194   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    484c:	44 e0       	ldi	r20, 0x04	; 4
    484e:	52 e0       	ldi	r21, 0x02	; 2
    4850:	66 e3       	ldi	r22, 0x36	; 54
    4852:	ce 01       	movw	r24, r28
    4854:	a6 dd       	rcall	.-1204   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4856:	42 e0       	ldi	r20, 0x02	; 2
    4858:	55 e0       	ldi	r21, 0x05	; 5
    485a:	67 e3       	ldi	r22, 0x37	; 55
    485c:	ce 01       	movw	r24, r28
    485e:	a1 dd       	rcall	.-1214   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4860:	42 e0       	ldi	r20, 0x02	; 2
    4862:	53 e0       	ldi	r21, 0x03	; 3
    4864:	6a e3       	ldi	r22, 0x3A	; 58
    4866:	ce 01       	movw	r24, r28
    4868:	9c dd       	rcall	.-1224   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    486a:	42 e0       	ldi	r20, 0x02	; 2
    486c:	53 e0       	ldi	r21, 0x03	; 3
    486e:	6b e3       	ldi	r22, 0x3B	; 59
    4870:	ce 01       	movw	r24, r28
    4872:	97 dd       	rcall	.-1234   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4874:	40 e0       	ldi	r20, 0x00	; 0
    4876:	50 e0       	ldi	r21, 0x00	; 0
    4878:	63 e2       	ldi	r22, 0x23	; 35
    487a:	ce 01       	movw	r24, r28
    487c:	92 dd       	rcall	.-1244   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    487e:	40 e0       	ldi	r20, 0x00	; 0
    4880:	50 e0       	ldi	r21, 0x00	; 0
    4882:	64 e2       	ldi	r22, 0x24	; 36
    4884:	ce 01       	movw	r24, r28
    4886:	8d dd       	rcall	.-1254   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4888:	40 e0       	ldi	r20, 0x00	; 0
    488a:	50 e8       	ldi	r21, 0x80	; 128
    488c:	65 e2       	ldi	r22, 0x25	; 37
    488e:	ce 01       	movw	r24, r28
    4890:	88 dd       	rcall	.-1264   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4892:	40 e0       	ldi	r20, 0x00	; 0
    4894:	50 e0       	ldi	r21, 0x00	; 0
    4896:	6f e4       	ldi	r22, 0x4F	; 79
    4898:	ce 01       	movw	r24, r28
    489a:	83 dd       	rcall	.-1274   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    489c:	40 e0       	ldi	r20, 0x00	; 0
    489e:	50 e0       	ldi	r21, 0x00	; 0
    48a0:	6e e4       	ldi	r22, 0x4E	; 78
    48a2:	0c 94 8c 2f 	jmp	0x5f18	; 0x5f18 <_ZN4UTFT7InitLCDEh+0x18d6>
    48a6:	40 ef       	ldi	r20, 0xF0	; 240
    48a8:	58 e7       	ldi	r21, 0x78	; 120
    48aa:	65 ee       	ldi	r22, 0xE5	; 229
    48ac:	ce 01       	movw	r24, r28
    48ae:	79 dd       	rcall	.-1294   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48b0:	40 e0       	ldi	r20, 0x00	; 0
    48b2:	51 e0       	ldi	r21, 0x01	; 1
    48b4:	61 e0       	ldi	r22, 0x01	; 1
    48b6:	ce 01       	movw	r24, r28
    48b8:	74 dd       	rcall	.-1304   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48ba:	40 e0       	ldi	r20, 0x00	; 0
    48bc:	52 e0       	ldi	r21, 0x02	; 2
    48be:	62 e0       	ldi	r22, 0x02	; 2
    48c0:	ce 01       	movw	r24, r28
    48c2:	6f dd       	rcall	.-1314   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48c4:	40 e3       	ldi	r20, 0x30	; 48
    48c6:	50 e1       	ldi	r21, 0x10	; 16
    48c8:	63 e0       	ldi	r22, 0x03	; 3
    48ca:	ce 01       	movw	r24, r28
    48cc:	6a dd       	rcall	.-1324   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48ce:	40 e0       	ldi	r20, 0x00	; 0
    48d0:	50 e0       	ldi	r21, 0x00	; 0
    48d2:	64 e0       	ldi	r22, 0x04	; 4
    48d4:	ce 01       	movw	r24, r28
    48d6:	65 dd       	rcall	.-1334   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48d8:	47 e0       	ldi	r20, 0x07	; 7
    48da:	52 e0       	ldi	r21, 0x02	; 2
    48dc:	68 e0       	ldi	r22, 0x08	; 8
    48de:	ce 01       	movw	r24, r28
    48e0:	60 dd       	rcall	.-1344   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48e2:	40 e0       	ldi	r20, 0x00	; 0
    48e4:	50 e0       	ldi	r21, 0x00	; 0
    48e6:	69 e0       	ldi	r22, 0x09	; 9
    48e8:	ce 01       	movw	r24, r28
    48ea:	5b dd       	rcall	.-1354   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48ec:	40 e0       	ldi	r20, 0x00	; 0
    48ee:	50 e0       	ldi	r21, 0x00	; 0
    48f0:	6a e0       	ldi	r22, 0x0A	; 10
    48f2:	ce 01       	movw	r24, r28
    48f4:	56 dd       	rcall	.-1364   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    48f6:	40 e0       	ldi	r20, 0x00	; 0
    48f8:	50 e0       	ldi	r21, 0x00	; 0
    48fa:	6c e0       	ldi	r22, 0x0C	; 12
    48fc:	ce 01       	movw	r24, r28
    48fe:	51 dd       	rcall	.-1374   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4900:	40 e0       	ldi	r20, 0x00	; 0
    4902:	50 e0       	ldi	r21, 0x00	; 0
    4904:	6d e0       	ldi	r22, 0x0D	; 13
    4906:	ce 01       	movw	r24, r28
    4908:	4c dd       	rcall	.-1384   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    490a:	40 e0       	ldi	r20, 0x00	; 0
    490c:	50 e0       	ldi	r21, 0x00	; 0
    490e:	6f e0       	ldi	r22, 0x0F	; 15
    4910:	ce 01       	movw	r24, r28
    4912:	47 dd       	rcall	.-1394   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4914:	40 e0       	ldi	r20, 0x00	; 0
    4916:	50 e0       	ldi	r21, 0x00	; 0
    4918:	60 e1       	ldi	r22, 0x10	; 16
    491a:	ce 01       	movw	r24, r28
    491c:	42 dd       	rcall	.-1404   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    491e:	47 e0       	ldi	r20, 0x07	; 7
    4920:	50 e0       	ldi	r21, 0x00	; 0
    4922:	61 e1       	ldi	r22, 0x11	; 17
    4924:	ce 01       	movw	r24, r28
    4926:	3d dd       	rcall	.-1414   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4928:	40 e0       	ldi	r20, 0x00	; 0
    492a:	50 e0       	ldi	r21, 0x00	; 0
    492c:	62 e1       	ldi	r22, 0x12	; 18
    492e:	ce 01       	movw	r24, r28
    4930:	38 dd       	rcall	.-1424   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4932:	40 e0       	ldi	r20, 0x00	; 0
    4934:	50 e0       	ldi	r21, 0x00	; 0
    4936:	63 e1       	ldi	r22, 0x13	; 19
    4938:	ce 01       	movw	r24, r28
    493a:	33 dd       	rcall	.-1434   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    493c:	41 e0       	ldi	r20, 0x01	; 1
    493e:	50 e0       	ldi	r21, 0x00	; 0
    4940:	67 e0       	ldi	r22, 0x07	; 7
    4942:	ce 01       	movw	r24, r28
    4944:	2e dd       	rcall	.-1444   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4946:	68 ec       	ldi	r22, 0xC8	; 200
    4948:	70 e0       	ldi	r23, 0x00	; 0
    494a:	80 e0       	ldi	r24, 0x00	; 0
    494c:	90 e0       	ldi	r25, 0x00	; 0
    494e:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4952:	40 e9       	ldi	r20, 0x90	; 144
    4954:	56 e1       	ldi	r21, 0x16	; 22
    4956:	60 e1       	ldi	r22, 0x10	; 16
    4958:	ce 01       	movw	r24, r28
    495a:	23 dd       	rcall	.-1466   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    495c:	47 e2       	ldi	r20, 0x27	; 39
    495e:	52 e0       	ldi	r21, 0x02	; 2
    4960:	61 e1       	ldi	r22, 0x11	; 17
    4962:	ce 01       	movw	r24, r28
    4964:	1e dd       	rcall	.-1476   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4966:	62 e3       	ldi	r22, 0x32	; 50
    4968:	70 e0       	ldi	r23, 0x00	; 0
    496a:	80 e0       	ldi	r24, 0x00	; 0
    496c:	90 e0       	ldi	r25, 0x00	; 0
    496e:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4972:	4d e0       	ldi	r20, 0x0D	; 13
    4974:	50 e0       	ldi	r21, 0x00	; 0
    4976:	62 e1       	ldi	r22, 0x12	; 18
    4978:	ce 01       	movw	r24, r28
    497a:	13 dd       	rcall	.-1498   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    497c:	62 e3       	ldi	r22, 0x32	; 50
    497e:	70 e0       	ldi	r23, 0x00	; 0
    4980:	80 e0       	ldi	r24, 0x00	; 0
    4982:	90 e0       	ldi	r25, 0x00	; 0
    4984:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4988:	40 e0       	ldi	r20, 0x00	; 0
    498a:	52 e1       	ldi	r21, 0x12	; 18
    498c:	63 e1       	ldi	r22, 0x13	; 19
    498e:	ce 01       	movw	r24, r28
    4990:	08 dd       	rcall	.-1520   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4992:	4a e0       	ldi	r20, 0x0A	; 10
    4994:	50 e0       	ldi	r21, 0x00	; 0
    4996:	69 e2       	ldi	r22, 0x29	; 41
    4998:	ce 01       	movw	r24, r28
    499a:	03 dd       	rcall	.-1530   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    499c:	4d e0       	ldi	r20, 0x0D	; 13
    499e:	50 e0       	ldi	r21, 0x00	; 0
    49a0:	7d c0       	rjmp	.+250    	; 0x4a9c <_ZN4UTFT7InitLCDEh+0x45a>
    49a2:	40 ef       	ldi	r20, 0xF0	; 240
    49a4:	58 e7       	ldi	r21, 0x78	; 120
    49a6:	65 ee       	ldi	r22, 0xE5	; 229
    49a8:	ce 01       	movw	r24, r28
    49aa:	fb dc       	rcall	.-1546   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49ac:	40 e0       	ldi	r20, 0x00	; 0
    49ae:	51 e0       	ldi	r21, 0x01	; 1
    49b0:	61 e0       	ldi	r22, 0x01	; 1
    49b2:	ce 01       	movw	r24, r28
    49b4:	f6 dc       	rcall	.-1556   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49b6:	40 e0       	ldi	r20, 0x00	; 0
    49b8:	57 e0       	ldi	r21, 0x07	; 7
    49ba:	62 e0       	ldi	r22, 0x02	; 2
    49bc:	ce 01       	movw	r24, r28
    49be:	f1 dc       	rcall	.-1566   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49c0:	40 e3       	ldi	r20, 0x30	; 48
    49c2:	50 e1       	ldi	r21, 0x10	; 16
    49c4:	63 e0       	ldi	r22, 0x03	; 3
    49c6:	ce 01       	movw	r24, r28
    49c8:	ec dc       	rcall	.-1576   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49ca:	40 e0       	ldi	r20, 0x00	; 0
    49cc:	50 e0       	ldi	r21, 0x00	; 0
    49ce:	64 e0       	ldi	r22, 0x04	; 4
    49d0:	ce 01       	movw	r24, r28
    49d2:	e7 dc       	rcall	.-1586   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49d4:	47 e0       	ldi	r20, 0x07	; 7
    49d6:	52 e0       	ldi	r21, 0x02	; 2
    49d8:	68 e0       	ldi	r22, 0x08	; 8
    49da:	ce 01       	movw	r24, r28
    49dc:	e2 dc       	rcall	.-1596   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49de:	40 e0       	ldi	r20, 0x00	; 0
    49e0:	50 e0       	ldi	r21, 0x00	; 0
    49e2:	69 e0       	ldi	r22, 0x09	; 9
    49e4:	ce 01       	movw	r24, r28
    49e6:	dd dc       	rcall	.-1606   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49e8:	40 e0       	ldi	r20, 0x00	; 0
    49ea:	50 e0       	ldi	r21, 0x00	; 0
    49ec:	6a e0       	ldi	r22, 0x0A	; 10
    49ee:	ce 01       	movw	r24, r28
    49f0:	d8 dc       	rcall	.-1616   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49f2:	40 e0       	ldi	r20, 0x00	; 0
    49f4:	50 e0       	ldi	r21, 0x00	; 0
    49f6:	6c e0       	ldi	r22, 0x0C	; 12
    49f8:	ce 01       	movw	r24, r28
    49fa:	d3 dc       	rcall	.-1626   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    49fc:	40 e0       	ldi	r20, 0x00	; 0
    49fe:	50 e0       	ldi	r21, 0x00	; 0
    4a00:	6d e0       	ldi	r22, 0x0D	; 13
    4a02:	ce 01       	movw	r24, r28
    4a04:	ce dc       	rcall	.-1636   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a06:	40 e0       	ldi	r20, 0x00	; 0
    4a08:	50 e0       	ldi	r21, 0x00	; 0
    4a0a:	6f e0       	ldi	r22, 0x0F	; 15
    4a0c:	ce 01       	movw	r24, r28
    4a0e:	c9 dc       	rcall	.-1646   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a10:	40 e0       	ldi	r20, 0x00	; 0
    4a12:	50 e0       	ldi	r21, 0x00	; 0
    4a14:	60 e1       	ldi	r22, 0x10	; 16
    4a16:	ce 01       	movw	r24, r28
    4a18:	c4 dc       	rcall	.-1656   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a1a:	47 e0       	ldi	r20, 0x07	; 7
    4a1c:	50 e0       	ldi	r21, 0x00	; 0
    4a1e:	61 e1       	ldi	r22, 0x11	; 17
    4a20:	ce 01       	movw	r24, r28
    4a22:	bf dc       	rcall	.-1666   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a24:	40 e0       	ldi	r20, 0x00	; 0
    4a26:	50 e0       	ldi	r21, 0x00	; 0
    4a28:	62 e1       	ldi	r22, 0x12	; 18
    4a2a:	ce 01       	movw	r24, r28
    4a2c:	ba dc       	rcall	.-1676   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a2e:	40 e0       	ldi	r20, 0x00	; 0
    4a30:	50 e0       	ldi	r21, 0x00	; 0
    4a32:	63 e1       	ldi	r22, 0x13	; 19
    4a34:	ce 01       	movw	r24, r28
    4a36:	b5 dc       	rcall	.-1686   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a38:	41 e0       	ldi	r20, 0x01	; 1
    4a3a:	50 e0       	ldi	r21, 0x00	; 0
    4a3c:	67 e0       	ldi	r22, 0x07	; 7
    4a3e:	ce 01       	movw	r24, r28
    4a40:	b0 dc       	rcall	.-1696   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a42:	68 ec       	ldi	r22, 0xC8	; 200
    4a44:	70 e0       	ldi	r23, 0x00	; 0
    4a46:	80 e0       	ldi	r24, 0x00	; 0
    4a48:	90 e0       	ldi	r25, 0x00	; 0
    4a4a:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4a4e:	40 e9       	ldi	r20, 0x90	; 144
    4a50:	55 e1       	ldi	r21, 0x15	; 21
    4a52:	60 e1       	ldi	r22, 0x10	; 16
    4a54:	ce 01       	movw	r24, r28
    4a56:	a5 dc       	rcall	.-1718   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a58:	47 e2       	ldi	r20, 0x27	; 39
    4a5a:	52 e0       	ldi	r21, 0x02	; 2
    4a5c:	61 e1       	ldi	r22, 0x11	; 17
    4a5e:	ce 01       	movw	r24, r28
    4a60:	a0 dc       	rcall	.-1728   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a62:	62 e3       	ldi	r22, 0x32	; 50
    4a64:	70 e0       	ldi	r23, 0x00	; 0
    4a66:	80 e0       	ldi	r24, 0x00	; 0
    4a68:	90 e0       	ldi	r25, 0x00	; 0
    4a6a:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4a6e:	4c e9       	ldi	r20, 0x9C	; 156
    4a70:	50 e0       	ldi	r21, 0x00	; 0
    4a72:	62 e1       	ldi	r22, 0x12	; 18
    4a74:	ce 01       	movw	r24, r28
    4a76:	95 dc       	rcall	.-1750   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a78:	62 e3       	ldi	r22, 0x32	; 50
    4a7a:	70 e0       	ldi	r23, 0x00	; 0
    4a7c:	80 e0       	ldi	r24, 0x00	; 0
    4a7e:	90 e0       	ldi	r25, 0x00	; 0
    4a80:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4a84:	40 e0       	ldi	r20, 0x00	; 0
    4a86:	59 e1       	ldi	r21, 0x19	; 25
    4a88:	63 e1       	ldi	r22, 0x13	; 19
    4a8a:	ce 01       	movw	r24, r28
    4a8c:	8a dc       	rcall	.-1772   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a8e:	43 e2       	ldi	r20, 0x23	; 35
    4a90:	50 e0       	ldi	r21, 0x00	; 0
    4a92:	69 e2       	ldi	r22, 0x29	; 41
    4a94:	ce 01       	movw	r24, r28
    4a96:	85 dc       	rcall	.-1782   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4a98:	4e e0       	ldi	r20, 0x0E	; 14
    4a9a:	50 e0       	ldi	r21, 0x00	; 0
    4a9c:	6b e2       	ldi	r22, 0x2B	; 43
    4a9e:	ce 01       	movw	r24, r28
    4aa0:	80 dc       	rcall	.-1792   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4aa2:	62 e3       	ldi	r22, 0x32	; 50
    4aa4:	70 e0       	ldi	r23, 0x00	; 0
    4aa6:	80 e0       	ldi	r24, 0x00	; 0
    4aa8:	90 e0       	ldi	r25, 0x00	; 0
    4aaa:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4aae:	40 e0       	ldi	r20, 0x00	; 0
    4ab0:	50 e0       	ldi	r21, 0x00	; 0
    4ab2:	60 e2       	ldi	r22, 0x20	; 32
    4ab4:	ce 01       	movw	r24, r28
    4ab6:	75 dc       	rcall	.-1814   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ab8:	40 e0       	ldi	r20, 0x00	; 0
    4aba:	50 e0       	ldi	r21, 0x00	; 0
    4abc:	61 e2       	ldi	r22, 0x21	; 33
    4abe:	ce 01       	movw	r24, r28
    4ac0:	70 dc       	rcall	.-1824   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ac2:	40 e0       	ldi	r20, 0x00	; 0
    4ac4:	50 e0       	ldi	r21, 0x00	; 0
    4ac6:	60 e3       	ldi	r22, 0x30	; 48
    4ac8:	ce 01       	movw	r24, r28
    4aca:	6b dc       	rcall	.-1834   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4acc:	44 e0       	ldi	r20, 0x04	; 4
    4ace:	54 e0       	ldi	r21, 0x04	; 4
    4ad0:	61 e3       	ldi	r22, 0x31	; 49
    4ad2:	ce 01       	movw	r24, r28
    4ad4:	66 dc       	rcall	.-1844   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ad6:	43 e0       	ldi	r20, 0x03	; 3
    4ad8:	50 e0       	ldi	r21, 0x00	; 0
    4ada:	62 e3       	ldi	r22, 0x32	; 50
    4adc:	ce 01       	movw	r24, r28
    4ade:	61 dc       	rcall	.-1854   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ae0:	45 e0       	ldi	r20, 0x05	; 5
    4ae2:	54 e0       	ldi	r21, 0x04	; 4
    4ae4:	65 e3       	ldi	r22, 0x35	; 53
    4ae6:	ce 01       	movw	r24, r28
    4ae8:	5c dc       	rcall	.-1864   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4aea:	48 e0       	ldi	r20, 0x08	; 8
    4aec:	58 e0       	ldi	r21, 0x08	; 8
    4aee:	66 e3       	ldi	r22, 0x36	; 54
    4af0:	ce 01       	movw	r24, r28
    4af2:	57 dc       	rcall	.-1874   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4af4:	47 e0       	ldi	r20, 0x07	; 7
    4af6:	54 e0       	ldi	r21, 0x04	; 4
    4af8:	67 e3       	ldi	r22, 0x37	; 55
    4afa:	ce 01       	movw	r24, r28
    4afc:	52 dc       	rcall	.-1884   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4afe:	43 e0       	ldi	r20, 0x03	; 3
    4b00:	53 e0       	ldi	r21, 0x03	; 3
    4b02:	68 e3       	ldi	r22, 0x38	; 56
    4b04:	ce 01       	movw	r24, r28
    4b06:	4d dc       	rcall	.-1894   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b08:	47 e0       	ldi	r20, 0x07	; 7
    4b0a:	57 e0       	ldi	r21, 0x07	; 7
    4b0c:	69 e3       	ldi	r22, 0x39	; 57
    4b0e:	ce 01       	movw	r24, r28
    4b10:	48 dc       	rcall	.-1904   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b12:	44 e0       	ldi	r20, 0x04	; 4
    4b14:	55 e0       	ldi	r21, 0x05	; 5
    4b16:	6c e3       	ldi	r22, 0x3C	; 60
    4b18:	ce 01       	movw	r24, r28
    4b1a:	43 dc       	rcall	.-1914   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b1c:	48 e0       	ldi	r20, 0x08	; 8
    4b1e:	58 e0       	ldi	r21, 0x08	; 8
    4b20:	6d e3       	ldi	r22, 0x3D	; 61
    4b22:	ce 01       	movw	r24, r28
    4b24:	3e dc       	rcall	.-1924   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b26:	40 e0       	ldi	r20, 0x00	; 0
    4b28:	50 e0       	ldi	r21, 0x00	; 0
    4b2a:	60 e5       	ldi	r22, 0x50	; 80
    4b2c:	ce 01       	movw	r24, r28
    4b2e:	39 dc       	rcall	.-1934   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b30:	4f ee       	ldi	r20, 0xEF	; 239
    4b32:	50 e0       	ldi	r21, 0x00	; 0
    4b34:	61 e5       	ldi	r22, 0x51	; 81
    4b36:	ce 01       	movw	r24, r28
    4b38:	34 dc       	rcall	.-1944   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b3a:	40 e0       	ldi	r20, 0x00	; 0
    4b3c:	50 e0       	ldi	r21, 0x00	; 0
    4b3e:	62 e5       	ldi	r22, 0x52	; 82
    4b40:	ce 01       	movw	r24, r28
    4b42:	2f dc       	rcall	.-1954   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b44:	4f e3       	ldi	r20, 0x3F	; 63
    4b46:	51 e0       	ldi	r21, 0x01	; 1
    4b48:	63 e5       	ldi	r22, 0x53	; 83
    4b4a:	ce 01       	movw	r24, r28
    4b4c:	2a dc       	rcall	.-1964   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b4e:	40 e0       	ldi	r20, 0x00	; 0
    4b50:	57 ea       	ldi	r21, 0xA7	; 167
    4b52:	60 e6       	ldi	r22, 0x60	; 96
    4b54:	ce 01       	movw	r24, r28
    4b56:	25 dc       	rcall	.-1974   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b58:	41 e0       	ldi	r20, 0x01	; 1
    4b5a:	50 e0       	ldi	r21, 0x00	; 0
    4b5c:	61 e6       	ldi	r22, 0x61	; 97
    4b5e:	ce 01       	movw	r24, r28
    4b60:	20 dc       	rcall	.-1984   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b62:	40 e0       	ldi	r20, 0x00	; 0
    4b64:	50 e0       	ldi	r21, 0x00	; 0
    4b66:	6a e6       	ldi	r22, 0x6A	; 106
    4b68:	ce 01       	movw	r24, r28
    4b6a:	1b dc       	rcall	.-1994   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b6c:	40 e0       	ldi	r20, 0x00	; 0
    4b6e:	50 e0       	ldi	r21, 0x00	; 0
    4b70:	60 e8       	ldi	r22, 0x80	; 128
    4b72:	ce 01       	movw	r24, r28
    4b74:	16 dc       	rcall	.-2004   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b76:	40 e0       	ldi	r20, 0x00	; 0
    4b78:	50 e0       	ldi	r21, 0x00	; 0
    4b7a:	61 e8       	ldi	r22, 0x81	; 129
    4b7c:	ce 01       	movw	r24, r28
    4b7e:	11 dc       	rcall	.-2014   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b80:	40 e0       	ldi	r20, 0x00	; 0
    4b82:	50 e0       	ldi	r21, 0x00	; 0
    4b84:	62 e8       	ldi	r22, 0x82	; 130
    4b86:	ce 01       	movw	r24, r28
    4b88:	0c dc       	rcall	.-2024   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b8a:	40 e0       	ldi	r20, 0x00	; 0
    4b8c:	50 e0       	ldi	r21, 0x00	; 0
    4b8e:	63 e8       	ldi	r22, 0x83	; 131
    4b90:	ce 01       	movw	r24, r28
    4b92:	07 dc       	rcall	.-2034   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b94:	40 e0       	ldi	r20, 0x00	; 0
    4b96:	50 e0       	ldi	r21, 0x00	; 0
    4b98:	64 e8       	ldi	r22, 0x84	; 132
    4b9a:	ce 01       	movw	r24, r28
    4b9c:	02 dc       	rcall	.-2044   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4b9e:	40 e0       	ldi	r20, 0x00	; 0
    4ba0:	50 e0       	ldi	r21, 0x00	; 0
    4ba2:	65 e8       	ldi	r22, 0x85	; 133
    4ba4:	ce 01       	movw	r24, r28
    4ba6:	fd db       	rcall	.-2054   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ba8:	40 e1       	ldi	r20, 0x10	; 16
    4baa:	50 e0       	ldi	r21, 0x00	; 0
    4bac:	60 e9       	ldi	r22, 0x90	; 144
    4bae:	ce 01       	movw	r24, r28
    4bb0:	f8 db       	rcall	.-2064   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bb2:	40 e0       	ldi	r20, 0x00	; 0
    4bb4:	50 e0       	ldi	r21, 0x00	; 0
    4bb6:	62 e9       	ldi	r22, 0x92	; 146
    4bb8:	ce 01       	movw	r24, r28
    4bba:	f3 db       	rcall	.-2074   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bbc:	43 e3       	ldi	r20, 0x33	; 51
    4bbe:	51 e0       	ldi	r21, 0x01	; 1
    4bc0:	67 e0       	ldi	r22, 0x07	; 7
    4bc2:	ce 01       	movw	r24, r28
    4bc4:	ee db       	rcall	.-2084   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bc6:	0c 94 f4 35 	jmp	0x6be8	; 0x6be8 <_ZN4UTFT7InitLCDEh+0x25a6>
    4bca:	44 e8       	ldi	r20, 0x84	; 132
    4bcc:	50 e0       	ldi	r21, 0x00	; 0
    4bce:	66 e2       	ldi	r22, 0x26	; 38
    4bd0:	ce 01       	movw	r24, r28
    4bd2:	e7 db       	rcall	.-2098   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bd4:	68 e2       	ldi	r22, 0x28	; 40
    4bd6:	70 e0       	ldi	r23, 0x00	; 0
    4bd8:	80 e0       	ldi	r24, 0x00	; 0
    4bda:	90 e0       	ldi	r25, 0x00	; 0
    4bdc:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4be0:	48 eb       	ldi	r20, 0xB8	; 184
    4be2:	50 e0       	ldi	r21, 0x00	; 0
    4be4:	66 e2       	ldi	r22, 0x26	; 38
    4be6:	ce 01       	movw	r24, r28
    4be8:	dc db       	rcall	.-2120   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4bea:	68 e2       	ldi	r22, 0x28	; 40
    4bec:	70 e0       	ldi	r23, 0x00	; 0
    4bee:	80 e0       	ldi	r24, 0x00	; 0
    4bf0:	90 e0       	ldi	r25, 0x00	; 0
    4bf2:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4bf6:	4c eb       	ldi	r20, 0xBC	; 188
    4bf8:	50 e0       	ldi	r21, 0x00	; 0
    4bfa:	66 e2       	ldi	r22, 0x26	; 38
    4bfc:	ce 01       	movw	r24, r28
    4bfe:	d1 db       	rcall	.-2142   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c00:	64 e1       	ldi	r22, 0x14	; 20
    4c02:	70 e0       	ldi	r23, 0x00	; 0
    4c04:	80 e0       	ldi	r24, 0x00	; 0
    4c06:	90 e0       	ldi	r25, 0x00	; 0
    4c08:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4c0c:	40 e0       	ldi	r20, 0x00	; 0
    4c0e:	50 e0       	ldi	r21, 0x00	; 0
    4c10:	60 e6       	ldi	r22, 0x60	; 96
    4c12:	ce 01       	movw	r24, r28
    4c14:	c6 db       	rcall	.-2164   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c16:	46 e0       	ldi	r20, 0x06	; 6
    4c18:	50 e0       	ldi	r21, 0x00	; 0
    4c1a:	61 e6       	ldi	r22, 0x61	; 97
    4c1c:	ce 01       	movw	r24, r28
    4c1e:	c1 db       	rcall	.-2174   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c20:	40 e0       	ldi	r20, 0x00	; 0
    4c22:	50 e0       	ldi	r21, 0x00	; 0
    4c24:	62 e6       	ldi	r22, 0x62	; 98
    4c26:	ce 01       	movw	r24, r28
    4c28:	bc db       	rcall	.-2184   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c2a:	48 ec       	ldi	r20, 0xC8	; 200
    4c2c:	50 e0       	ldi	r21, 0x00	; 0
    4c2e:	63 e6       	ldi	r22, 0x63	; 99
    4c30:	ce 01       	movw	r24, r28
    4c32:	b7 db       	rcall	.-2194   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c34:	64 e1       	ldi	r22, 0x14	; 20
    4c36:	70 e0       	ldi	r23, 0x00	; 0
    4c38:	80 e0       	ldi	r24, 0x00	; 0
    4c3a:	90 e0       	ldi	r25, 0x00	; 0
    4c3c:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4c40:	40 e7       	ldi	r20, 0x70	; 112
    4c42:	50 e0       	ldi	r21, 0x00	; 0
    4c44:	63 e7       	ldi	r22, 0x73	; 115
    4c46:	ce 01       	movw	r24, r28
    4c48:	ac db       	rcall	.-2216   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c4a:	40 e0       	ldi	r20, 0x00	; 0
    4c4c:	50 e0       	ldi	r21, 0x00	; 0
    4c4e:	60 e4       	ldi	r22, 0x40	; 64
    4c50:	ce 01       	movw	r24, r28
    4c52:	a7 db       	rcall	.-2226   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c54:	40 e4       	ldi	r20, 0x40	; 64
    4c56:	50 e0       	ldi	r21, 0x00	; 0
    4c58:	61 e4       	ldi	r22, 0x41	; 65
    4c5a:	ce 01       	movw	r24, r28
    4c5c:	a2 db       	rcall	.-2236   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c5e:	45 e4       	ldi	r20, 0x45	; 69
    4c60:	50 e0       	ldi	r21, 0x00	; 0
    4c62:	62 e4       	ldi	r22, 0x42	; 66
    4c64:	ce 01       	movw	r24, r28
    4c66:	9d db       	rcall	.-2246   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c68:	41 e0       	ldi	r20, 0x01	; 1
    4c6a:	50 e0       	ldi	r21, 0x00	; 0
    4c6c:	63 e4       	ldi	r22, 0x43	; 67
    4c6e:	ce 01       	movw	r24, r28
    4c70:	98 db       	rcall	.-2256   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c72:	40 e6       	ldi	r20, 0x60	; 96
    4c74:	50 e0       	ldi	r21, 0x00	; 0
    4c76:	64 e4       	ldi	r22, 0x44	; 68
    4c78:	ce 01       	movw	r24, r28
    4c7a:	93 db       	rcall	.-2266   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c7c:	45 e0       	ldi	r20, 0x05	; 5
    4c7e:	50 e0       	ldi	r21, 0x00	; 0
    4c80:	65 e4       	ldi	r22, 0x45	; 69
    4c82:	ce 01       	movw	r24, r28
    4c84:	8e db       	rcall	.-2276   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c86:	4c e0       	ldi	r20, 0x0C	; 12
    4c88:	50 e0       	ldi	r21, 0x00	; 0
    4c8a:	66 e4       	ldi	r22, 0x46	; 70
    4c8c:	ce 01       	movw	r24, r28
    4c8e:	89 db       	rcall	.-2286   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c90:	41 ed       	ldi	r20, 0xD1	; 209
    4c92:	50 e0       	ldi	r21, 0x00	; 0
    4c94:	67 e4       	ldi	r22, 0x47	; 71
    4c96:	ce 01       	movw	r24, r28
    4c98:	84 db       	rcall	.-2296   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4c9a:	45 e0       	ldi	r20, 0x05	; 5
    4c9c:	50 e0       	ldi	r21, 0x00	; 0
    4c9e:	68 e4       	ldi	r22, 0x48	; 72
    4ca0:	ce 01       	movw	r24, r28
    4ca2:	7f db       	rcall	.-2306   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ca4:	45 e7       	ldi	r20, 0x75	; 117
    4ca6:	50 e0       	ldi	r21, 0x00	; 0
    4ca8:	60 e5       	ldi	r22, 0x50	; 80
    4caa:	ce 01       	movw	r24, r28
    4cac:	7a db       	rcall	.-2316   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cae:	41 e0       	ldi	r20, 0x01	; 1
    4cb0:	50 e0       	ldi	r21, 0x00	; 0
    4cb2:	61 e5       	ldi	r22, 0x51	; 81
    4cb4:	ce 01       	movw	r24, r28
    4cb6:	75 db       	rcall	.-2326   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cb8:	47 e6       	ldi	r20, 0x67	; 103
    4cba:	50 e0       	ldi	r21, 0x00	; 0
    4cbc:	62 e5       	ldi	r22, 0x52	; 82
    4cbe:	ce 01       	movw	r24, r28
    4cc0:	70 db       	rcall	.-2336   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cc2:	44 e1       	ldi	r20, 0x14	; 20
    4cc4:	50 e0       	ldi	r21, 0x00	; 0
    4cc6:	63 e5       	ldi	r22, 0x53	; 83
    4cc8:	ce 01       	movw	r24, r28
    4cca:	6b db       	rcall	.-2346   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ccc:	42 ef       	ldi	r20, 0xF2	; 242
    4cce:	50 e0       	ldi	r21, 0x00	; 0
    4cd0:	64 e5       	ldi	r22, 0x54	; 84
    4cd2:	ce 01       	movw	r24, r28
    4cd4:	66 db       	rcall	.-2356   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cd6:	47 e0       	ldi	r20, 0x07	; 7
    4cd8:	50 e0       	ldi	r21, 0x00	; 0
    4cda:	65 e5       	ldi	r22, 0x55	; 85
    4cdc:	ce 01       	movw	r24, r28
    4cde:	61 db       	rcall	.-2366   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ce0:	43 e0       	ldi	r20, 0x03	; 3
    4ce2:	50 e0       	ldi	r21, 0x00	; 0
    4ce4:	66 e5       	ldi	r22, 0x56	; 86
    4ce6:	ce 01       	movw	r24, r28
    4ce8:	5c db       	rcall	.-2376   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cea:	49 e4       	ldi	r20, 0x49	; 73
    4cec:	50 e0       	ldi	r21, 0x00	; 0
    4cee:	67 e5       	ldi	r22, 0x57	; 87
    4cf0:	ce 01       	movw	r24, r28
    4cf2:	57 db       	rcall	.-2386   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4cf4:	64 e1       	ldi	r22, 0x14	; 20
    4cf6:	70 e0       	ldi	r23, 0x00	; 0
    4cf8:	80 e0       	ldi	r24, 0x00	; 0
    4cfa:	90 e0       	ldi	r25, 0x00	; 0
    4cfc:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4d00:	43 e0       	ldi	r20, 0x03	; 3
    4d02:	50 e0       	ldi	r21, 0x00	; 0
    4d04:	6f e1       	ldi	r22, 0x1F	; 31
    4d06:	ce 01       	movw	r24, r28
    4d08:	4c db       	rcall	.-2408   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d0a:	40 e0       	ldi	r20, 0x00	; 0
    4d0c:	50 e0       	ldi	r21, 0x00	; 0
    4d0e:	60 e2       	ldi	r22, 0x20	; 32
    4d10:	ce 01       	movw	r24, r28
    4d12:	47 db       	rcall	.-2418   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d14:	44 e2       	ldi	r20, 0x24	; 36
    4d16:	50 e0       	ldi	r21, 0x00	; 0
    4d18:	64 e2       	ldi	r22, 0x24	; 36
    4d1a:	ce 01       	movw	r24, r28
    4d1c:	42 db       	rcall	.-2428   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d1e:	44 e3       	ldi	r20, 0x34	; 52
    4d20:	50 e0       	ldi	r21, 0x00	; 0
    4d22:	65 e2       	ldi	r22, 0x25	; 37
    4d24:	ce 01       	movw	r24, r28
    4d26:	3d db       	rcall	.-2438   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d28:	4f e2       	ldi	r20, 0x2F	; 47
    4d2a:	50 e0       	ldi	r21, 0x00	; 0
    4d2c:	63 e2       	ldi	r22, 0x23	; 35
    4d2e:	ce 01       	movw	r24, r28
    4d30:	38 db       	rcall	.-2448   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d32:	64 e1       	ldi	r22, 0x14	; 20
    4d34:	70 e0       	ldi	r23, 0x00	; 0
    4d36:	80 e0       	ldi	r24, 0x00	; 0
    4d38:	90 e0       	ldi	r25, 0x00	; 0
    4d3a:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4d3e:	44 e4       	ldi	r20, 0x44	; 68
    4d40:	50 e0       	ldi	r21, 0x00	; 0
    4d42:	68 e1       	ldi	r22, 0x18	; 24
    4d44:	ce 01       	movw	r24, r28
    4d46:	2d db       	rcall	.-2470   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d48:	41 e0       	ldi	r20, 0x01	; 1
    4d4a:	50 e0       	ldi	r21, 0x00	; 0
    4d4c:	61 e2       	ldi	r22, 0x21	; 33
    4d4e:	ce 01       	movw	r24, r28
    4d50:	28 db       	rcall	.-2480   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d52:	40 e0       	ldi	r20, 0x00	; 0
    4d54:	50 e0       	ldi	r21, 0x00	; 0
    4d56:	61 e0       	ldi	r22, 0x01	; 1
    4d58:	ce 01       	movw	r24, r28
    4d5a:	23 db       	rcall	.-2490   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d5c:	43 e0       	ldi	r20, 0x03	; 3
    4d5e:	50 e0       	ldi	r21, 0x00	; 0
    4d60:	6c e1       	ldi	r22, 0x1C	; 28
    4d62:	ce 01       	movw	r24, r28
    4d64:	1e db       	rcall	.-2500   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d66:	46 e0       	ldi	r20, 0x06	; 6
    4d68:	50 e0       	ldi	r21, 0x00	; 0
    4d6a:	69 e1       	ldi	r22, 0x19	; 25
    4d6c:	ce 01       	movw	r24, r28
    4d6e:	19 db       	rcall	.-2510   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d70:	64 e1       	ldi	r22, 0x14	; 20
    4d72:	70 e0       	ldi	r23, 0x00	; 0
    4d74:	80 e0       	ldi	r24, 0x00	; 0
    4d76:	90 e0       	ldi	r25, 0x00	; 0
    4d78:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4d7c:	44 e8       	ldi	r20, 0x84	; 132
    4d7e:	50 e0       	ldi	r21, 0x00	; 0
    4d80:	66 e2       	ldi	r22, 0x26	; 38
    4d82:	ce 01       	movw	r24, r28
    4d84:	0e db       	rcall	.-2532   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d86:	68 e2       	ldi	r22, 0x28	; 40
    4d88:	70 e0       	ldi	r23, 0x00	; 0
    4d8a:	80 e0       	ldi	r24, 0x00	; 0
    4d8c:	90 e0       	ldi	r25, 0x00	; 0
    4d8e:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4d92:	48 eb       	ldi	r20, 0xB8	; 184
    4d94:	50 e0       	ldi	r21, 0x00	; 0
    4d96:	66 e2       	ldi	r22, 0x26	; 38
    4d98:	ce 01       	movw	r24, r28
    4d9a:	03 db       	rcall	.-2554   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4d9c:	68 e2       	ldi	r22, 0x28	; 40
    4d9e:	70 e0       	ldi	r23, 0x00	; 0
    4da0:	80 e0       	ldi	r24, 0x00	; 0
    4da2:	90 e0       	ldi	r25, 0x00	; 0
    4da4:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4da8:	4c eb       	ldi	r20, 0xBC	; 188
    4daa:	50 e0       	ldi	r21, 0x00	; 0
    4dac:	66 e2       	ldi	r22, 0x26	; 38
    4dae:	ce 01       	movw	r24, r28
    4db0:	f8 da       	rcall	.-2576   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4db2:	64 e1       	ldi	r22, 0x14	; 20
    4db4:	70 e0       	ldi	r23, 0x00	; 0
    4db6:	80 e0       	ldi	r24, 0x00	; 0
    4db8:	90 e0       	ldi	r25, 0x00	; 0
    4dba:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4dbe:	40 e0       	ldi	r20, 0x00	; 0
    4dc0:	50 e0       	ldi	r21, 0x00	; 0
    4dc2:	62 e0       	ldi	r22, 0x02	; 2
    4dc4:	ce 01       	movw	r24, r28
    4dc6:	ed da       	rcall	.-2598   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dc8:	40 e0       	ldi	r20, 0x00	; 0
    4dca:	50 e0       	ldi	r21, 0x00	; 0
    4dcc:	63 e0       	ldi	r22, 0x03	; 3
    4dce:	ce 01       	movw	r24, r28
    4dd0:	e8 da       	rcall	.-2608   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dd2:	40 e0       	ldi	r20, 0x00	; 0
    4dd4:	50 e0       	ldi	r21, 0x00	; 0
    4dd6:	64 e0       	ldi	r22, 0x04	; 4
    4dd8:	ce 01       	movw	r24, r28
    4dda:	e3 da       	rcall	.-2618   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4ddc:	4f ea       	ldi	r20, 0xAF	; 175
    4dde:	50 e0       	ldi	r21, 0x00	; 0
    4de0:	65 e0       	ldi	r22, 0x05	; 5
    4de2:	ce 01       	movw	r24, r28
    4de4:	de da       	rcall	.-2628   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4de6:	40 e0       	ldi	r20, 0x00	; 0
    4de8:	50 e0       	ldi	r21, 0x00	; 0
    4dea:	66 e0       	ldi	r22, 0x06	; 6
    4dec:	ce 01       	movw	r24, r28
    4dee:	d9 da       	rcall	.-2638   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4df0:	40 e0       	ldi	r20, 0x00	; 0
    4df2:	50 e0       	ldi	r21, 0x00	; 0
    4df4:	67 e0       	ldi	r22, 0x07	; 7
    4df6:	ce 01       	movw	r24, r28
    4df8:	d4 da       	rcall	.-2648   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4dfa:	40 e0       	ldi	r20, 0x00	; 0
    4dfc:	50 e0       	ldi	r21, 0x00	; 0
    4dfe:	68 e0       	ldi	r22, 0x08	; 8
    4e00:	ce 01       	movw	r24, r28
    4e02:	cf da       	rcall	.-2658   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e04:	4b ed       	ldi	r20, 0xDB	; 219
    4e06:	50 e0       	ldi	r21, 0x00	; 0
    4e08:	69 e0       	ldi	r22, 0x09	; 9
    4e0a:	ce 01       	movw	r24, r28
    4e0c:	ca da       	rcall	.-2668   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e0e:	64 e1       	ldi	r22, 0x14	; 20
    4e10:	70 e0       	ldi	r23, 0x00	; 0
    4e12:	80 e0       	ldi	r24, 0x00	; 0
    4e14:	90 e0       	ldi	r25, 0x00	; 0
    4e16:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4e1a:	48 e0       	ldi	r20, 0x08	; 8
    4e1c:	50 e0       	ldi	r21, 0x00	; 0
    4e1e:	66 e1       	ldi	r22, 0x16	; 22
    4e20:	ce 01       	movw	r24, r28
    4e22:	bf da       	rcall	.-2690   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e24:	45 e0       	ldi	r20, 0x05	; 5
    4e26:	50 e0       	ldi	r21, 0x00	; 0
    4e28:	67 e1       	ldi	r22, 0x17	; 23
    4e2a:	ce 01       	movw	r24, r28
    4e2c:	ba da       	rcall	.-2700   	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    4e2e:	61 e2       	ldi	r22, 0x21	; 33
    4e30:	ce 01       	movw	r24, r28
    4e32:	63 da       	rcall	.-2874   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4e34:	62 e2       	ldi	r22, 0x22	; 34
    4e36:	ce 01       	movw	r24, r28
    4e38:	60 da       	rcall	.-2880   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4e3a:	0c 94 f4 35 	jmp	0x6be8	; 0x6be8 <_ZN4UTFT7InitLCDEh+0x25a6>
    4e3e:	61 e1       	ldi	r22, 0x11	; 17
    4e40:	ce 01       	movw	r24, r28
    4e42:	5b da       	rcall	.-2890   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4e44:	6c e0       	ldi	r22, 0x0C	; 12
    4e46:	70 e0       	ldi	r23, 0x00	; 0
    4e48:	80 e0       	ldi	r24, 0x00	; 0
    4e4a:	90 e0       	ldi	r25, 0x00	; 0
    4e4c:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4e50:	61 eb       	ldi	r22, 0xB1	; 177
    4e52:	ce 01       	movw	r24, r28
    4e54:	52 da       	rcall	.-2908   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4e56:	61 e0       	ldi	r22, 0x01	; 1
    4e58:	ce 01       	movw	r24, r28
    4e5a:	8b da       	rcall	.-2794   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e5c:	6c e2       	ldi	r22, 0x2C	; 44
    4e5e:	ce 01       	movw	r24, r28
    4e60:	88 da       	rcall	.-2800   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e62:	6d e2       	ldi	r22, 0x2D	; 45
    4e64:	ce 01       	movw	r24, r28
    4e66:	85 da       	rcall	.-2806   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e68:	62 eb       	ldi	r22, 0xB2	; 178
    4e6a:	ce 01       	movw	r24, r28
    4e6c:	46 da       	rcall	.-2932   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4e6e:	61 e0       	ldi	r22, 0x01	; 1
    4e70:	ce 01       	movw	r24, r28
    4e72:	7f da       	rcall	.-2818   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e74:	6c e2       	ldi	r22, 0x2C	; 44
    4e76:	ce 01       	movw	r24, r28
    4e78:	7c da       	rcall	.-2824   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e7a:	6d e2       	ldi	r22, 0x2D	; 45
    4e7c:	ce 01       	movw	r24, r28
    4e7e:	79 da       	rcall	.-2830   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e80:	63 eb       	ldi	r22, 0xB3	; 179
    4e82:	ce 01       	movw	r24, r28
    4e84:	3a da       	rcall	.-2956   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4e86:	61 e0       	ldi	r22, 0x01	; 1
    4e88:	ce 01       	movw	r24, r28
    4e8a:	73 da       	rcall	.-2842   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e8c:	6c e2       	ldi	r22, 0x2C	; 44
    4e8e:	ce 01       	movw	r24, r28
    4e90:	70 da       	rcall	.-2848   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e92:	6d e2       	ldi	r22, 0x2D	; 45
    4e94:	ce 01       	movw	r24, r28
    4e96:	6d da       	rcall	.-2854   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e98:	61 e0       	ldi	r22, 0x01	; 1
    4e9a:	ce 01       	movw	r24, r28
    4e9c:	6a da       	rcall	.-2860   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4e9e:	6c e2       	ldi	r22, 0x2C	; 44
    4ea0:	ce 01       	movw	r24, r28
    4ea2:	67 da       	rcall	.-2866   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4ea4:	6d e2       	ldi	r22, 0x2D	; 45
    4ea6:	ce 01       	movw	r24, r28
    4ea8:	64 da       	rcall	.-2872   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4eaa:	64 eb       	ldi	r22, 0xB4	; 180
    4eac:	ce 01       	movw	r24, r28
    4eae:	25 da       	rcall	.-2998   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4eb0:	67 e0       	ldi	r22, 0x07	; 7
    4eb2:	ce 01       	movw	r24, r28
    4eb4:	5e da       	rcall	.-2884   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4eb6:	60 ec       	ldi	r22, 0xC0	; 192
    4eb8:	ce 01       	movw	r24, r28
    4eba:	1f da       	rcall	.-3010   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4ebc:	62 ea       	ldi	r22, 0xA2	; 162
    4ebe:	ce 01       	movw	r24, r28
    4ec0:	58 da       	rcall	.-2896   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4ec2:	62 e0       	ldi	r22, 0x02	; 2
    4ec4:	ce 01       	movw	r24, r28
    4ec6:	55 da       	rcall	.-2902   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4ec8:	64 e8       	ldi	r22, 0x84	; 132
    4eca:	ce 01       	movw	r24, r28
    4ecc:	52 da       	rcall	.-2908   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4ece:	61 ec       	ldi	r22, 0xC1	; 193
    4ed0:	ce 01       	movw	r24, r28
    4ed2:	13 da       	rcall	.-3034   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4ed4:	65 ec       	ldi	r22, 0xC5	; 197
    4ed6:	ce 01       	movw	r24, r28
    4ed8:	4c da       	rcall	.-2920   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4eda:	62 ec       	ldi	r22, 0xC2	; 194
    4edc:	ce 01       	movw	r24, r28
    4ede:	0d da       	rcall	.-3046   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4ee0:	6a e0       	ldi	r22, 0x0A	; 10
    4ee2:	ce 01       	movw	r24, r28
    4ee4:	46 da       	rcall	.-2932   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4ee6:	60 e0       	ldi	r22, 0x00	; 0
    4ee8:	ce 01       	movw	r24, r28
    4eea:	43 da       	rcall	.-2938   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4eec:	63 ec       	ldi	r22, 0xC3	; 195
    4eee:	ce 01       	movw	r24, r28
    4ef0:	04 da       	rcall	.-3064   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4ef2:	6a e8       	ldi	r22, 0x8A	; 138
    4ef4:	ce 01       	movw	r24, r28
    4ef6:	3d da       	rcall	.-2950   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4ef8:	6a e2       	ldi	r22, 0x2A	; 42
    4efa:	ce 01       	movw	r24, r28
    4efc:	3a da       	rcall	.-2956   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4efe:	64 ec       	ldi	r22, 0xC4	; 196
    4f00:	ce 01       	movw	r24, r28
    4f02:	fb d9       	rcall	.-3082   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4f04:	6a e8       	ldi	r22, 0x8A	; 138
    4f06:	ce 01       	movw	r24, r28
    4f08:	34 da       	rcall	.-2968   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f0a:	6e ee       	ldi	r22, 0xEE	; 238
    4f0c:	ce 01       	movw	r24, r28
    4f0e:	31 da       	rcall	.-2974   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f10:	65 ec       	ldi	r22, 0xC5	; 197
    4f12:	ce 01       	movw	r24, r28
    4f14:	f2 d9       	rcall	.-3100   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4f16:	6e e0       	ldi	r22, 0x0E	; 14
    4f18:	ce 01       	movw	r24, r28
    4f1a:	2b da       	rcall	.-2986   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f1c:	66 e3       	ldi	r22, 0x36	; 54
    4f1e:	ce 01       	movw	r24, r28
    4f20:	ec d9       	rcall	.-3112   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4f22:	68 ec       	ldi	r22, 0xC8	; 200
    4f24:	73 c0       	rjmp	.+230    	; 0x500c <_ZN4UTFT7InitLCDEh+0x9ca>
    4f26:	61 e1       	ldi	r22, 0x11	; 17
    4f28:	ce 01       	movw	r24, r28
    4f2a:	e7 d9       	rcall	.-3122   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4f2c:	6c e0       	ldi	r22, 0x0C	; 12
    4f2e:	70 e0       	ldi	r23, 0x00	; 0
    4f30:	80 e0       	ldi	r24, 0x00	; 0
    4f32:	90 e0       	ldi	r25, 0x00	; 0
    4f34:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    4f38:	61 eb       	ldi	r22, 0xB1	; 177
    4f3a:	ce 01       	movw	r24, r28
    4f3c:	de d9       	rcall	.-3140   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4f3e:	61 e0       	ldi	r22, 0x01	; 1
    4f40:	ce 01       	movw	r24, r28
    4f42:	17 da       	rcall	.-3026   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f44:	6c e2       	ldi	r22, 0x2C	; 44
    4f46:	ce 01       	movw	r24, r28
    4f48:	14 da       	rcall	.-3032   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f4a:	6d e2       	ldi	r22, 0x2D	; 45
    4f4c:	ce 01       	movw	r24, r28
    4f4e:	11 da       	rcall	.-3038   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f50:	62 eb       	ldi	r22, 0xB2	; 178
    4f52:	ce 01       	movw	r24, r28
    4f54:	d2 d9       	rcall	.-3164   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4f56:	61 e0       	ldi	r22, 0x01	; 1
    4f58:	ce 01       	movw	r24, r28
    4f5a:	0b da       	rcall	.-3050   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f5c:	6c e2       	ldi	r22, 0x2C	; 44
    4f5e:	ce 01       	movw	r24, r28
    4f60:	08 da       	rcall	.-3056   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f62:	6d e2       	ldi	r22, 0x2D	; 45
    4f64:	ce 01       	movw	r24, r28
    4f66:	05 da       	rcall	.-3062   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f68:	63 eb       	ldi	r22, 0xB3	; 179
    4f6a:	ce 01       	movw	r24, r28
    4f6c:	c6 d9       	rcall	.-3188   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4f6e:	61 e0       	ldi	r22, 0x01	; 1
    4f70:	ce 01       	movw	r24, r28
    4f72:	ff d9       	rcall	.-3074   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f74:	6c e2       	ldi	r22, 0x2C	; 44
    4f76:	ce 01       	movw	r24, r28
    4f78:	fc d9       	rcall	.-3080   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f7a:	6d e2       	ldi	r22, 0x2D	; 45
    4f7c:	ce 01       	movw	r24, r28
    4f7e:	f9 d9       	rcall	.-3086   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f80:	61 e0       	ldi	r22, 0x01	; 1
    4f82:	ce 01       	movw	r24, r28
    4f84:	f6 d9       	rcall	.-3092   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f86:	6c e2       	ldi	r22, 0x2C	; 44
    4f88:	ce 01       	movw	r24, r28
    4f8a:	f3 d9       	rcall	.-3098   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f8c:	6d e2       	ldi	r22, 0x2D	; 45
    4f8e:	ce 01       	movw	r24, r28
    4f90:	f0 d9       	rcall	.-3104   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f92:	64 eb       	ldi	r22, 0xB4	; 180
    4f94:	ce 01       	movw	r24, r28
    4f96:	b1 d9       	rcall	.-3230   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4f98:	67 e0       	ldi	r22, 0x07	; 7
    4f9a:	ce 01       	movw	r24, r28
    4f9c:	ea d9       	rcall	.-3116   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4f9e:	60 ec       	ldi	r22, 0xC0	; 192
    4fa0:	ce 01       	movw	r24, r28
    4fa2:	ab d9       	rcall	.-3242   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4fa4:	62 ea       	ldi	r22, 0xA2	; 162
    4fa6:	ce 01       	movw	r24, r28
    4fa8:	e4 d9       	rcall	.-3128   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4faa:	62 e0       	ldi	r22, 0x02	; 2
    4fac:	ce 01       	movw	r24, r28
    4fae:	e1 d9       	rcall	.-3134   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4fb0:	64 e8       	ldi	r22, 0x84	; 132
    4fb2:	ce 01       	movw	r24, r28
    4fb4:	de d9       	rcall	.-3140   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4fb6:	61 ec       	ldi	r22, 0xC1	; 193
    4fb8:	ce 01       	movw	r24, r28
    4fba:	9f d9       	rcall	.-3266   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4fbc:	65 ec       	ldi	r22, 0xC5	; 197
    4fbe:	ce 01       	movw	r24, r28
    4fc0:	d8 d9       	rcall	.-3152   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4fc2:	62 ec       	ldi	r22, 0xC2	; 194
    4fc4:	ce 01       	movw	r24, r28
    4fc6:	99 d9       	rcall	.-3278   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4fc8:	6a e0       	ldi	r22, 0x0A	; 10
    4fca:	ce 01       	movw	r24, r28
    4fcc:	d2 d9       	rcall	.-3164   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4fce:	60 e0       	ldi	r22, 0x00	; 0
    4fd0:	ce 01       	movw	r24, r28
    4fd2:	cf d9       	rcall	.-3170   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4fd4:	63 ec       	ldi	r22, 0xC3	; 195
    4fd6:	ce 01       	movw	r24, r28
    4fd8:	90 d9       	rcall	.-3296   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4fda:	6a e8       	ldi	r22, 0x8A	; 138
    4fdc:	ce 01       	movw	r24, r28
    4fde:	c9 d9       	rcall	.-3182   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4fe0:	6a e2       	ldi	r22, 0x2A	; 42
    4fe2:	ce 01       	movw	r24, r28
    4fe4:	c6 d9       	rcall	.-3188   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4fe6:	64 ec       	ldi	r22, 0xC4	; 196
    4fe8:	ce 01       	movw	r24, r28
    4fea:	87 d9       	rcall	.-3314   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4fec:	6a e8       	ldi	r22, 0x8A	; 138
    4fee:	ce 01       	movw	r24, r28
    4ff0:	c0 d9       	rcall	.-3200   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4ff2:	6e ee       	ldi	r22, 0xEE	; 238
    4ff4:	ce 01       	movw	r24, r28
    4ff6:	bd d9       	rcall	.-3206   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    4ff8:	65 ec       	ldi	r22, 0xC5	; 197
    4ffa:	ce 01       	movw	r24, r28
    4ffc:	7e d9       	rcall	.-3332   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    4ffe:	6e e0       	ldi	r22, 0x0E	; 14
    5000:	ce 01       	movw	r24, r28
    5002:	b7 d9       	rcall	.-3218   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5004:	66 e3       	ldi	r22, 0x36	; 54
    5006:	ce 01       	movw	r24, r28
    5008:	78 d9       	rcall	.-3344   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    500a:	60 ec       	ldi	r22, 0xC0	; 192
    500c:	ce 01       	movw	r24, r28
    500e:	b1 d9       	rcall	.-3230   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5010:	60 ee       	ldi	r22, 0xE0	; 224
    5012:	ce 01       	movw	r24, r28
    5014:	72 d9       	rcall	.-3356   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5016:	6f e0       	ldi	r22, 0x0F	; 15
    5018:	ce 01       	movw	r24, r28
    501a:	ab d9       	rcall	.-3242   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    501c:	6a e1       	ldi	r22, 0x1A	; 26
    501e:	ce 01       	movw	r24, r28
    5020:	a8 d9       	rcall	.-3248   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5022:	6f e0       	ldi	r22, 0x0F	; 15
    5024:	ce 01       	movw	r24, r28
    5026:	a5 d9       	rcall	.-3254   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5028:	68 e1       	ldi	r22, 0x18	; 24
    502a:	ce 01       	movw	r24, r28
    502c:	a2 d9       	rcall	.-3260   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    502e:	6f e2       	ldi	r22, 0x2F	; 47
    5030:	ce 01       	movw	r24, r28
    5032:	9f d9       	rcall	.-3266   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5034:	68 e2       	ldi	r22, 0x28	; 40
    5036:	ce 01       	movw	r24, r28
    5038:	9c d9       	rcall	.-3272   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    503a:	60 e2       	ldi	r22, 0x20	; 32
    503c:	ce 01       	movw	r24, r28
    503e:	99 d9       	rcall	.-3278   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5040:	62 e2       	ldi	r22, 0x22	; 34
    5042:	ce 01       	movw	r24, r28
    5044:	96 d9       	rcall	.-3284   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5046:	6f e1       	ldi	r22, 0x1F	; 31
    5048:	ce 01       	movw	r24, r28
    504a:	93 d9       	rcall	.-3290   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    504c:	6b e1       	ldi	r22, 0x1B	; 27
    504e:	ce 01       	movw	r24, r28
    5050:	90 d9       	rcall	.-3296   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5052:	63 e2       	ldi	r22, 0x23	; 35
    5054:	ce 01       	movw	r24, r28
    5056:	8d d9       	rcall	.-3302   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5058:	67 e3       	ldi	r22, 0x37	; 55
    505a:	ce 01       	movw	r24, r28
    505c:	8a d9       	rcall	.-3308   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    505e:	60 e0       	ldi	r22, 0x00	; 0
    5060:	ce 01       	movw	r24, r28
    5062:	87 d9       	rcall	.-3314   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5064:	67 e0       	ldi	r22, 0x07	; 7
    5066:	ce 01       	movw	r24, r28
    5068:	84 d9       	rcall	.-3320   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    506a:	62 e0       	ldi	r22, 0x02	; 2
    506c:	ce 01       	movw	r24, r28
    506e:	81 d9       	rcall	.-3326   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5070:	60 e1       	ldi	r22, 0x10	; 16
    5072:	ce 01       	movw	r24, r28
    5074:	7e d9       	rcall	.-3332   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5076:	61 ee       	ldi	r22, 0xE1	; 225
    5078:	ce 01       	movw	r24, r28
    507a:	3f d9       	rcall	.-3458   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    507c:	6f e0       	ldi	r22, 0x0F	; 15
    507e:	ce 01       	movw	r24, r28
    5080:	78 d9       	rcall	.-3344   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5082:	6b e1       	ldi	r22, 0x1B	; 27
    5084:	ce 01       	movw	r24, r28
    5086:	75 d9       	rcall	.-3350   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5088:	6f e0       	ldi	r22, 0x0F	; 15
    508a:	ce 01       	movw	r24, r28
    508c:	72 d9       	rcall	.-3356   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    508e:	67 e1       	ldi	r22, 0x17	; 23
    5090:	ce 01       	movw	r24, r28
    5092:	6f d9       	rcall	.-3362   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5094:	63 e3       	ldi	r22, 0x33	; 51
    5096:	ce 01       	movw	r24, r28
    5098:	6c d9       	rcall	.-3368   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    509a:	6c e2       	ldi	r22, 0x2C	; 44
    509c:	ce 01       	movw	r24, r28
    509e:	69 d9       	rcall	.-3374   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50a0:	69 e2       	ldi	r22, 0x29	; 41
    50a2:	ce 01       	movw	r24, r28
    50a4:	66 d9       	rcall	.-3380   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50a6:	6e e2       	ldi	r22, 0x2E	; 46
    50a8:	ce 01       	movw	r24, r28
    50aa:	63 d9       	rcall	.-3386   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50ac:	60 e3       	ldi	r22, 0x30	; 48
    50ae:	ce 01       	movw	r24, r28
    50b0:	60 d9       	rcall	.-3392   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50b2:	60 e3       	ldi	r22, 0x30	; 48
    50b4:	ce 01       	movw	r24, r28
    50b6:	5d d9       	rcall	.-3398   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50b8:	69 e3       	ldi	r22, 0x39	; 57
    50ba:	ce 01       	movw	r24, r28
    50bc:	5a d9       	rcall	.-3404   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50be:	6f e3       	ldi	r22, 0x3F	; 63
    50c0:	ce 01       	movw	r24, r28
    50c2:	57 d9       	rcall	.-3410   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50c4:	60 e0       	ldi	r22, 0x00	; 0
    50c6:	ce 01       	movw	r24, r28
    50c8:	54 d9       	rcall	.-3416   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50ca:	67 e0       	ldi	r22, 0x07	; 7
    50cc:	ce 01       	movw	r24, r28
    50ce:	51 d9       	rcall	.-3422   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50d0:	63 e0       	ldi	r22, 0x03	; 3
    50d2:	ce 01       	movw	r24, r28
    50d4:	4e d9       	rcall	.-3428   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50d6:	60 e1       	ldi	r22, 0x10	; 16
    50d8:	ce 01       	movw	r24, r28
    50da:	4b d9       	rcall	.-3434   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50dc:	6a e2       	ldi	r22, 0x2A	; 42
    50de:	ce 01       	movw	r24, r28
    50e0:	0c d9       	rcall	.-3560   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    50e2:	60 e0       	ldi	r22, 0x00	; 0
    50e4:	ce 01       	movw	r24, r28
    50e6:	45 d9       	rcall	.-3446   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50e8:	60 e0       	ldi	r22, 0x00	; 0
    50ea:	ce 01       	movw	r24, r28
    50ec:	42 d9       	rcall	.-3452   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50ee:	60 e0       	ldi	r22, 0x00	; 0
    50f0:	ce 01       	movw	r24, r28
    50f2:	3f d9       	rcall	.-3458   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50f4:	6f e7       	ldi	r22, 0x7F	; 127
    50f6:	ce 01       	movw	r24, r28
    50f8:	3c d9       	rcall	.-3464   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    50fa:	6b e2       	ldi	r22, 0x2B	; 43
    50fc:	ce 01       	movw	r24, r28
    50fe:	fd d8       	rcall	.-3590   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5100:	60 e0       	ldi	r22, 0x00	; 0
    5102:	ce 01       	movw	r24, r28
    5104:	36 d9       	rcall	.-3476   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5106:	60 e0       	ldi	r22, 0x00	; 0
    5108:	ce 01       	movw	r24, r28
    510a:	33 d9       	rcall	.-3482   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    510c:	60 e0       	ldi	r22, 0x00	; 0
    510e:	ce 01       	movw	r24, r28
    5110:	30 d9       	rcall	.-3488   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5112:	6f e9       	ldi	r22, 0x9F	; 159
    5114:	ce 01       	movw	r24, r28
    5116:	2d d9       	rcall	.-3494   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5118:	60 ef       	ldi	r22, 0xF0	; 240
    511a:	ce 01       	movw	r24, r28
    511c:	ee d8       	rcall	.-3620   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    511e:	61 e0       	ldi	r22, 0x01	; 1
    5120:	ce 01       	movw	r24, r28
    5122:	27 d9       	rcall	.-3506   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5124:	66 ef       	ldi	r22, 0xF6	; 246
    5126:	ce 01       	movw	r24, r28
    5128:	e8 d8       	rcall	.-3632   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    512a:	60 e0       	ldi	r22, 0x00	; 0
    512c:	0c 94 b0 30 	jmp	0x6160	; 0x6160 <_ZN4UTFT7InitLCDEh+0x1b1e>
    5130:	61 e0       	ldi	r22, 0x01	; 1
    5132:	ce 01       	movw	r24, r28
    5134:	e2 d8       	rcall	.-3644   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5136:	65 e2       	ldi	r22, 0x25	; 37
    5138:	ce 01       	movw	r24, r28
    513a:	df d8       	rcall	.-3650   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    513c:	60 e4       	ldi	r22, 0x40	; 64
    513e:	ce 01       	movw	r24, r28
    5140:	18 d9       	rcall	.-3536   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5142:	61 e1       	ldi	r22, 0x11	; 17
    5144:	ce 01       	movw	r24, r28
    5146:	d9 d8       	rcall	.-3662   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5148:	6a e0       	ldi	r22, 0x0A	; 10
    514a:	70 e0       	ldi	r23, 0x00	; 0
    514c:	80 e0       	ldi	r24, 0x00	; 0
    514e:	90 e0       	ldi	r25, 0x00	; 0
    5150:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5154:	60 e2       	ldi	r22, 0x20	; 32
    5156:	ce 01       	movw	r24, r28
    5158:	d0 d8       	rcall	.-3680   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    515a:	68 e3       	ldi	r22, 0x38	; 56
    515c:	ce 01       	movw	r24, r28
    515e:	cd d8       	rcall	.-3686   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5160:	69 e2       	ldi	r22, 0x29	; 41
    5162:	ce 01       	movw	r24, r28
    5164:	ca d8       	rcall	.-3692   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5166:	63 e1       	ldi	r22, 0x13	; 19
    5168:	ce 01       	movw	r24, r28
    516a:	c7 d8       	rcall	.-3698   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    516c:	66 e3       	ldi	r22, 0x36	; 54
    516e:	ce 01       	movw	r24, r28
    5170:	c4 d8       	rcall	.-3704   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5172:	60 e6       	ldi	r22, 0x60	; 96
    5174:	ce 01       	movw	r24, r28
    5176:	fd d8       	rcall	.-3590   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5178:	6a e3       	ldi	r22, 0x3A	; 58
    517a:	ce 01       	movw	r24, r28
    517c:	be d8       	rcall	.-3716   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    517e:	65 e0       	ldi	r22, 0x05	; 5
    5180:	ce 01       	movw	r24, r28
    5182:	f7 d8       	rcall	.-3602   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5184:	6a e2       	ldi	r22, 0x2A	; 42
    5186:	ce 01       	movw	r24, r28
    5188:	b8 d8       	rcall	.-3728   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    518a:	60 e0       	ldi	r22, 0x00	; 0
    518c:	ce 01       	movw	r24, r28
    518e:	f1 d8       	rcall	.-3614   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5190:	6f e7       	ldi	r22, 0x7F	; 127
    5192:	ce 01       	movw	r24, r28
    5194:	ee d8       	rcall	.-3620   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5196:	64 eb       	ldi	r22, 0xB4	; 180
    5198:	ce 01       	movw	r24, r28
    519a:	af d8       	rcall	.-3746   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    519c:	63 e0       	ldi	r22, 0x03	; 3
    519e:	ce 01       	movw	r24, r28
    51a0:	e8 d8       	rcall	.-3632   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51a2:	68 e0       	ldi	r22, 0x08	; 8
    51a4:	ce 01       	movw	r24, r28
    51a6:	e5 d8       	rcall	.-3638   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51a8:	6b e0       	ldi	r22, 0x0B	; 11
    51aa:	ce 01       	movw	r24, r28
    51ac:	e2 d8       	rcall	.-3644   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51ae:	6e e0       	ldi	r22, 0x0E	; 14
    51b0:	ce 01       	movw	r24, r28
    51b2:	df d8       	rcall	.-3650   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51b4:	6a eb       	ldi	r22, 0xBA	; 186
    51b6:	ce 01       	movw	r24, r28
    51b8:	a0 d8       	rcall	.-3776   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    51ba:	67 e0       	ldi	r22, 0x07	; 7
    51bc:	ce 01       	movw	r24, r28
    51be:	d9 d8       	rcall	.-3662   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51c0:	6d e0       	ldi	r22, 0x0D	; 13
    51c2:	ce 01       	movw	r24, r28
    51c4:	d6 d8       	rcall	.-3668   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51c6:	6b e2       	ldi	r22, 0x2B	; 43
    51c8:	ce 01       	movw	r24, r28
    51ca:	97 d8       	rcall	.-3794   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    51cc:	60 e0       	ldi	r22, 0x00	; 0
    51ce:	ce 01       	movw	r24, r28
    51d0:	d0 d8       	rcall	.-3680   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51d2:	6f e7       	ldi	r22, 0x7F	; 127
    51d4:	5e c2       	rjmp	.+1212   	; 0x5692 <_ZN4UTFT7InitLCDEh+0x1050>
    51d6:	63 e8       	ldi	r22, 0x83	; 131
    51d8:	ce 01       	movw	r24, r28
    51da:	8f d8       	rcall	.-3810   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    51dc:	62 e0       	ldi	r22, 0x02	; 2
    51de:	ce 01       	movw	r24, r28
    51e0:	c8 d8       	rcall	.-3696   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51e2:	65 e8       	ldi	r22, 0x85	; 133
    51e4:	ce 01       	movw	r24, r28
    51e6:	89 d8       	rcall	.-3822   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    51e8:	63 e0       	ldi	r22, 0x03	; 3
    51ea:	ce 01       	movw	r24, r28
    51ec:	c2 d8       	rcall	.-3708   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51ee:	6b e8       	ldi	r22, 0x8B	; 139
    51f0:	ce 01       	movw	r24, r28
    51f2:	83 d8       	rcall	.-3834   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    51f4:	61 e0       	ldi	r22, 0x01	; 1
    51f6:	ce 01       	movw	r24, r28
    51f8:	bc d8       	rcall	.-3720   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    51fa:	6c e8       	ldi	r22, 0x8C	; 140
    51fc:	ce 01       	movw	r24, r28
    51fe:	7d d8       	rcall	.-3846   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5200:	63 e9       	ldi	r22, 0x93	; 147
    5202:	ce 01       	movw	r24, r28
    5204:	b6 d8       	rcall	.-3732   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5206:	61 e9       	ldi	r22, 0x91	; 145
    5208:	ce 01       	movw	r24, r28
    520a:	77 d8       	rcall	.-3858   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    520c:	61 e0       	ldi	r22, 0x01	; 1
    520e:	ce 01       	movw	r24, r28
    5210:	b0 d8       	rcall	.-3744   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5212:	63 e8       	ldi	r22, 0x83	; 131
    5214:	ce 01       	movw	r24, r28
    5216:	71 d8       	rcall	.-3870   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5218:	60 e0       	ldi	r22, 0x00	; 0
    521a:	ce 01       	movw	r24, r28
    521c:	aa d8       	rcall	.-3756   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    521e:	6e e3       	ldi	r22, 0x3E	; 62
    5220:	ce 01       	movw	r24, r28
    5222:	6b d8       	rcall	.-3882   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5224:	60 eb       	ldi	r22, 0xB0	; 176
    5226:	ce 01       	movw	r24, r28
    5228:	a4 d8       	rcall	.-3768   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    522a:	6f e3       	ldi	r22, 0x3F	; 63
    522c:	ce 01       	movw	r24, r28
    522e:	65 d8       	rcall	.-3894   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5230:	63 e0       	ldi	r22, 0x03	; 3
    5232:	ce 01       	movw	r24, r28
    5234:	9e d8       	rcall	.-3780   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5236:	60 e4       	ldi	r22, 0x40	; 64
    5238:	ce 01       	movw	r24, r28
    523a:	5f d8       	rcall	.-3906   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    523c:	60 e1       	ldi	r22, 0x10	; 16
    523e:	ce 01       	movw	r24, r28
    5240:	98 d8       	rcall	.-3792   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5242:	61 e4       	ldi	r22, 0x41	; 65
    5244:	ce 01       	movw	r24, r28
    5246:	59 d8       	rcall	.-3918   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5248:	66 e5       	ldi	r22, 0x56	; 86
    524a:	ce 01       	movw	r24, r28
    524c:	92 d8       	rcall	.-3804   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    524e:	62 e4       	ldi	r22, 0x42	; 66
    5250:	ce 01       	movw	r24, r28
    5252:	53 d8       	rcall	.-3930   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5254:	63 e1       	ldi	r22, 0x13	; 19
    5256:	ce 01       	movw	r24, r28
    5258:	8c d8       	rcall	.-3816   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    525a:	63 e4       	ldi	r22, 0x43	; 67
    525c:	ce 01       	movw	r24, r28
    525e:	4d d8       	rcall	.-3942   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5260:	66 e4       	ldi	r22, 0x46	; 70
    5262:	ce 01       	movw	r24, r28
    5264:	86 d8       	rcall	.-3828   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5266:	64 e4       	ldi	r22, 0x44	; 68
    5268:	ce 01       	movw	r24, r28
    526a:	47 d8       	rcall	.-3954   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    526c:	63 e2       	ldi	r22, 0x23	; 35
    526e:	ce 01       	movw	r24, r28
    5270:	80 d8       	rcall	.-3840   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5272:	65 e4       	ldi	r22, 0x45	; 69
    5274:	ce 01       	movw	r24, r28
    5276:	41 d8       	rcall	.-3966   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5278:	66 e7       	ldi	r22, 0x76	; 118
    527a:	ce 01       	movw	r24, r28
    527c:	7a d8       	rcall	.-3852   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    527e:	66 e4       	ldi	r22, 0x46	; 70
    5280:	ce 01       	movw	r24, r28
    5282:	3b d8       	rcall	.-3978   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5284:	60 e0       	ldi	r22, 0x00	; 0
    5286:	ce 01       	movw	r24, r28
    5288:	74 d8       	rcall	.-3864   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    528a:	67 e4       	ldi	r22, 0x47	; 71
    528c:	ce 01       	movw	r24, r28
    528e:	35 d8       	rcall	.-3990   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5290:	6e e5       	ldi	r22, 0x5E	; 94
    5292:	ce 01       	movw	r24, r28
    5294:	6e d8       	rcall	.-3876   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5296:	68 e4       	ldi	r22, 0x48	; 72
    5298:	ce 01       	movw	r24, r28
    529a:	2f d8       	rcall	.-4002   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    529c:	6f e4       	ldi	r22, 0x4F	; 79
    529e:	ce 01       	movw	r24, r28
    52a0:	68 d8       	rcall	.-3888   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    52a2:	69 e4       	ldi	r22, 0x49	; 73
    52a4:	ce 01       	movw	r24, r28
    52a6:	29 d8       	rcall	.-4014   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    52a8:	60 e4       	ldi	r22, 0x40	; 64
    52aa:	ce 01       	movw	r24, r28
    52ac:	62 d8       	rcall	.-3900   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    52ae:	67 e1       	ldi	r22, 0x17	; 23
    52b0:	ce 01       	movw	r24, r28
    52b2:	23 d8       	rcall	.-4026   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    52b4:	61 e9       	ldi	r22, 0x91	; 145
    52b6:	ce 01       	movw	r24, r28
    52b8:	5c d8       	rcall	.-3912   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    52ba:	6b e2       	ldi	r22, 0x2B	; 43
    52bc:	ce 01       	movw	r24, r28
    52be:	1d d8       	rcall	.-4038   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    52c0:	69 ef       	ldi	r22, 0xF9	; 249
    52c2:	ce 01       	movw	r24, r28
    52c4:	56 d8       	rcall	.-3924   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    52c6:	6a e0       	ldi	r22, 0x0A	; 10
    52c8:	70 e0       	ldi	r23, 0x00	; 0
    52ca:	80 e0       	ldi	r24, 0x00	; 0
    52cc:	90 e0       	ldi	r25, 0x00	; 0
    52ce:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    52d2:	6b e1       	ldi	r22, 0x1B	; 27
    52d4:	ce 01       	movw	r24, r28
    52d6:	11 d8       	rcall	.-4062   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    52d8:	64 e1       	ldi	r22, 0x14	; 20
    52da:	ce 01       	movw	r24, r28
    52dc:	4a d8       	rcall	.-3948   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    52de:	6a e1       	ldi	r22, 0x1A	; 26
    52e0:	ce 01       	movw	r24, r28
    52e2:	0b d8       	rcall	.-4074   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    52e4:	61 e1       	ldi	r22, 0x11	; 17
    52e6:	ce 01       	movw	r24, r28
    52e8:	44 d8       	rcall	.-3960   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    52ea:	6c e1       	ldi	r22, 0x1C	; 28
    52ec:	ce 01       	movw	r24, r28
    52ee:	05 d8       	rcall	.-4086   	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    52f0:	66 e0       	ldi	r22, 0x06	; 6
    52f2:	ce 01       	movw	r24, r28
    52f4:	3e d8       	rcall	.-3972   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    52f6:	6f e1       	ldi	r22, 0x1F	; 31
    52f8:	ce 01       	movw	r24, r28
    52fa:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    52fe:	62 e4       	ldi	r22, 0x42	; 66
    5300:	ce 01       	movw	r24, r28
    5302:	37 d8       	rcall	.-3986   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5304:	64 e1       	ldi	r22, 0x14	; 20
    5306:	70 e0       	ldi	r23, 0x00	; 0
    5308:	80 e0       	ldi	r24, 0x00	; 0
    530a:	90 e0       	ldi	r25, 0x00	; 0
    530c:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5310:	69 e1       	ldi	r22, 0x19	; 25
    5312:	ce 01       	movw	r24, r28
    5314:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5318:	6a e0       	ldi	r22, 0x0A	; 10
    531a:	ce 01       	movw	r24, r28
    531c:	2a d8       	rcall	.-4012   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    531e:	69 e1       	ldi	r22, 0x19	; 25
    5320:	ce 01       	movw	r24, r28
    5322:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5326:	6a e1       	ldi	r22, 0x1A	; 26
    5328:	ce 01       	movw	r24, r28
    532a:	23 d8       	rcall	.-4026   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    532c:	68 e2       	ldi	r22, 0x28	; 40
    532e:	70 e0       	ldi	r23, 0x00	; 0
    5330:	80 e0       	ldi	r24, 0x00	; 0
    5332:	90 e0       	ldi	r25, 0x00	; 0
    5334:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5338:	69 e1       	ldi	r22, 0x19	; 25
    533a:	ce 01       	movw	r24, r28
    533c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5340:	62 e1       	ldi	r22, 0x12	; 18
    5342:	ce 01       	movw	r24, r28
    5344:	16 d8       	rcall	.-4052   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5346:	68 e2       	ldi	r22, 0x28	; 40
    5348:	70 e0       	ldi	r23, 0x00	; 0
    534a:	80 e0       	ldi	r24, 0x00	; 0
    534c:	90 e0       	ldi	r25, 0x00	; 0
    534e:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5352:	6e e1       	ldi	r22, 0x1E	; 30
    5354:	ce 01       	movw	r24, r28
    5356:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    535a:	67 e2       	ldi	r22, 0x27	; 39
    535c:	ce 01       	movw	r24, r28
    535e:	09 d8       	rcall	.-4078   	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5360:	64 e6       	ldi	r22, 0x64	; 100
    5362:	70 e0       	ldi	r23, 0x00	; 0
    5364:	80 e0       	ldi	r24, 0x00	; 0
    5366:	90 e0       	ldi	r25, 0x00	; 0
    5368:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    536c:	64 e2       	ldi	r22, 0x24	; 36
    536e:	ce 01       	movw	r24, r28
    5370:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5374:	60 e6       	ldi	r22, 0x60	; 96
    5376:	ce 01       	movw	r24, r28
    5378:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    537c:	6d e3       	ldi	r22, 0x3D	; 61
    537e:	ce 01       	movw	r24, r28
    5380:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5384:	60 e4       	ldi	r22, 0x40	; 64
    5386:	ce 01       	movw	r24, r28
    5388:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    538c:	64 e3       	ldi	r22, 0x34	; 52
    538e:	ce 01       	movw	r24, r28
    5390:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5394:	68 e3       	ldi	r22, 0x38	; 56
    5396:	ce 01       	movw	r24, r28
    5398:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    539c:	65 e3       	ldi	r22, 0x35	; 53
    539e:	ce 01       	movw	r24, r28
    53a0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    53a4:	68 e3       	ldi	r22, 0x38	; 56
    53a6:	ce 01       	movw	r24, r28
    53a8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    53ac:	64 e2       	ldi	r22, 0x24	; 36
    53ae:	ce 01       	movw	r24, r28
    53b0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    53b4:	68 e3       	ldi	r22, 0x38	; 56
    53b6:	ce 01       	movw	r24, r28
    53b8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    53bc:	68 e2       	ldi	r22, 0x28	; 40
    53be:	70 e0       	ldi	r23, 0x00	; 0
    53c0:	80 e0       	ldi	r24, 0x00	; 0
    53c2:	90 e0       	ldi	r25, 0x00	; 0
    53c4:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    53c8:	64 e2       	ldi	r22, 0x24	; 36
    53ca:	ce 01       	movw	r24, r28
    53cc:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    53d0:	6c e3       	ldi	r22, 0x3C	; 60
    53d2:	ce 01       	movw	r24, r28
    53d4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    53d8:	66 e1       	ldi	r22, 0x16	; 22
    53da:	ce 01       	movw	r24, r28
    53dc:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    53e0:	6c e1       	ldi	r22, 0x1C	; 28
    53e2:	ce 01       	movw	r24, r28
    53e4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    53e8:	61 e0       	ldi	r22, 0x01	; 1
    53ea:	ce 01       	movw	r24, r28
    53ec:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    53f0:	66 e0       	ldi	r22, 0x06	; 6
    53f2:	ce 01       	movw	r24, r28
    53f4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    53f8:	65 e5       	ldi	r22, 0x55	; 85
    53fa:	ce 01       	movw	r24, r28
    53fc:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5400:	60 e0       	ldi	r22, 0x00	; 0
    5402:	ce 01       	movw	r24, r28
    5404:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5408:	62 e0       	ldi	r22, 0x02	; 2
    540a:	ce 01       	movw	r24, r28
    540c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5410:	60 e0       	ldi	r22, 0x00	; 0
    5412:	ce 01       	movw	r24, r28
    5414:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5418:	63 e0       	ldi	r22, 0x03	; 3
    541a:	ce 01       	movw	r24, r28
    541c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5420:	60 e0       	ldi	r22, 0x00	; 0
    5422:	ce 01       	movw	r24, r28
    5424:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5428:	64 e0       	ldi	r22, 0x04	; 4
    542a:	ce 01       	movw	r24, r28
    542c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5430:	60 e0       	ldi	r22, 0x00	; 0
    5432:	ce 01       	movw	r24, r28
    5434:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5438:	65 e0       	ldi	r22, 0x05	; 5
    543a:	ce 01       	movw	r24, r28
    543c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5440:	6f ee       	ldi	r22, 0xEF	; 239
    5442:	ce 01       	movw	r24, r28
    5444:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5448:	66 e0       	ldi	r22, 0x06	; 6
    544a:	ce 01       	movw	r24, r28
    544c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5450:	60 e0       	ldi	r22, 0x00	; 0
    5452:	ce 01       	movw	r24, r28
    5454:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5458:	67 e0       	ldi	r22, 0x07	; 7
    545a:	ce 01       	movw	r24, r28
    545c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5460:	60 e0       	ldi	r22, 0x00	; 0
    5462:	ce 01       	movw	r24, r28
    5464:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5468:	68 e0       	ldi	r22, 0x08	; 8
    546a:	ce 01       	movw	r24, r28
    546c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5470:	61 e0       	ldi	r22, 0x01	; 1
    5472:	ce 01       	movw	r24, r28
    5474:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5478:	69 e0       	ldi	r22, 0x09	; 9
    547a:	ce 01       	movw	r24, r28
    547c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5480:	6f e8       	ldi	r22, 0x8F	; 143
    5482:	ce 01       	movw	r24, r28
    5484:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5488:	d5 cc       	rjmp	.-1622   	; 0x4e34 <_ZN4UTFT7InitLCDEh+0x7f2>
    548a:	62 ee       	ldi	r22, 0xE2	; 226
    548c:	ce 01       	movw	r24, r28
    548e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5492:	63 e2       	ldi	r22, 0x23	; 35
    5494:	ce 01       	movw	r24, r28
    5496:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    549a:	62 e0       	ldi	r22, 0x02	; 2
    549c:	ce 01       	movw	r24, r28
    549e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    54a2:	64 e5       	ldi	r22, 0x54	; 84
    54a4:	ce 01       	movw	r24, r28
    54a6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    54aa:	60 ee       	ldi	r22, 0xE0	; 224
    54ac:	ce 01       	movw	r24, r28
    54ae:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    54b2:	61 e0       	ldi	r22, 0x01	; 1
    54b4:	ce 01       	movw	r24, r28
    54b6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    54ba:	6a e0       	ldi	r22, 0x0A	; 10
    54bc:	70 e0       	ldi	r23, 0x00	; 0
    54be:	80 e0       	ldi	r24, 0x00	; 0
    54c0:	90 e0       	ldi	r25, 0x00	; 0
    54c2:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    54c6:	60 ee       	ldi	r22, 0xE0	; 224
    54c8:	ce 01       	movw	r24, r28
    54ca:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    54ce:	63 e0       	ldi	r22, 0x03	; 3
    54d0:	ce 01       	movw	r24, r28
    54d2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    54d6:	6a e0       	ldi	r22, 0x0A	; 10
    54d8:	70 e0       	ldi	r23, 0x00	; 0
    54da:	80 e0       	ldi	r24, 0x00	; 0
    54dc:	90 e0       	ldi	r25, 0x00	; 0
    54de:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    54e2:	61 e0       	ldi	r22, 0x01	; 1
    54e4:	ce 01       	movw	r24, r28
    54e6:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    54ea:	64 e6       	ldi	r22, 0x64	; 100
    54ec:	70 e0       	ldi	r23, 0x00	; 0
    54ee:	80 e0       	ldi	r24, 0x00	; 0
    54f0:	90 e0       	ldi	r25, 0x00	; 0
    54f2:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    54f6:	66 ee       	ldi	r22, 0xE6	; 230
    54f8:	ce 01       	movw	r24, r28
    54fa:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    54fe:	61 e0       	ldi	r22, 0x01	; 1
    5500:	ce 01       	movw	r24, r28
    5502:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5506:	6f e1       	ldi	r22, 0x1F	; 31
    5508:	ce 01       	movw	r24, r28
    550a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    550e:	6f ef       	ldi	r22, 0xFF	; 255
    5510:	ce 01       	movw	r24, r28
    5512:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5516:	60 eb       	ldi	r22, 0xB0	; 176
    5518:	ce 01       	movw	r24, r28
    551a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    551e:	60 e2       	ldi	r22, 0x20	; 32
    5520:	ce 01       	movw	r24, r28
    5522:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5526:	60 e0       	ldi	r22, 0x00	; 0
    5528:	ce 01       	movw	r24, r28
    552a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    552e:	61 e0       	ldi	r22, 0x01	; 1
    5530:	ce 01       	movw	r24, r28
    5532:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5536:	6f ed       	ldi	r22, 0xDF	; 223
    5538:	ce 01       	movw	r24, r28
    553a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    553e:	61 e0       	ldi	r22, 0x01	; 1
    5540:	ce 01       	movw	r24, r28
    5542:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5546:	6f e0       	ldi	r22, 0x0F	; 15
    5548:	ce 01       	movw	r24, r28
    554a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    554e:	60 e0       	ldi	r22, 0x00	; 0
    5550:	ce 01       	movw	r24, r28
    5552:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5556:	64 eb       	ldi	r22, 0xB4	; 180
    5558:	ce 01       	movw	r24, r28
    555a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    555e:	62 e0       	ldi	r22, 0x02	; 2
    5560:	ce 01       	movw	r24, r28
    5562:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5566:	63 e1       	ldi	r22, 0x13	; 19
    5568:	ce 01       	movw	r24, r28
    556a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    556e:	60 e0       	ldi	r22, 0x00	; 0
    5570:	ce 01       	movw	r24, r28
    5572:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5576:	68 e0       	ldi	r22, 0x08	; 8
    5578:	ce 01       	movw	r24, r28
    557a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    557e:	6b e2       	ldi	r22, 0x2B	; 43
    5580:	ce 01       	movw	r24, r28
    5582:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5586:	60 e0       	ldi	r22, 0x00	; 0
    5588:	ce 01       	movw	r24, r28
    558a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    558e:	62 e0       	ldi	r22, 0x02	; 2
    5590:	ce 01       	movw	r24, r28
    5592:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5596:	60 e0       	ldi	r22, 0x00	; 0
    5598:	ce 01       	movw	r24, r28
    559a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    559e:	66 eb       	ldi	r22, 0xB6	; 182
    55a0:	ce 01       	movw	r24, r28
    55a2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    55a6:	61 e0       	ldi	r22, 0x01	; 1
    55a8:	ce 01       	movw	r24, r28
    55aa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55ae:	60 e2       	ldi	r22, 0x20	; 32
    55b0:	ce 01       	movw	r24, r28
    55b2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55b6:	60 e0       	ldi	r22, 0x00	; 0
    55b8:	ce 01       	movw	r24, r28
    55ba:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55be:	64 e0       	ldi	r22, 0x04	; 4
    55c0:	ce 01       	movw	r24, r28
    55c2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55c6:	6c e0       	ldi	r22, 0x0C	; 12
    55c8:	ce 01       	movw	r24, r28
    55ca:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55ce:	60 e0       	ldi	r22, 0x00	; 0
    55d0:	ce 01       	movw	r24, r28
    55d2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55d6:	62 e0       	ldi	r22, 0x02	; 2
    55d8:	ce 01       	movw	r24, r28
    55da:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55de:	6a eb       	ldi	r22, 0xBA	; 186
    55e0:	ce 01       	movw	r24, r28
    55e2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    55e6:	6f e0       	ldi	r22, 0x0F	; 15
    55e8:	ce 01       	movw	r24, r28
    55ea:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55ee:	68 eb       	ldi	r22, 0xB8	; 184
    55f0:	ce 01       	movw	r24, r28
    55f2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    55f6:	67 e0       	ldi	r22, 0x07	; 7
    55f8:	ce 01       	movw	r24, r28
    55fa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    55fe:	61 e0       	ldi	r22, 0x01	; 1
    5600:	ce 01       	movw	r24, r28
    5602:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5606:	66 e3       	ldi	r22, 0x36	; 54
    5608:	ce 01       	movw	r24, r28
    560a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    560e:	62 e2       	ldi	r22, 0x22	; 34
    5610:	ce 01       	movw	r24, r28
    5612:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5616:	60 ef       	ldi	r22, 0xF0	; 240
    5618:	ce 01       	movw	r24, r28
    561a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    561e:	63 e0       	ldi	r22, 0x03	; 3
    5620:	ce 01       	movw	r24, r28
    5622:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5626:	61 e0       	ldi	r22, 0x01	; 1
    5628:	70 e0       	ldi	r23, 0x00	; 0
    562a:	80 e0       	ldi	r24, 0x00	; 0
    562c:	90 e0       	ldi	r25, 0x00	; 0
    562e:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5632:	0f e0       	ldi	r16, 0x0F	; 15
    5634:	11 e0       	ldi	r17, 0x01	; 1
    5636:	2f ed       	ldi	r18, 0xDF	; 223
    5638:	31 e0       	ldi	r19, 0x01	; 1
    563a:	40 e0       	ldi	r20, 0x00	; 0
    563c:	50 e0       	ldi	r21, 0x00	; 0
    563e:	60 e0       	ldi	r22, 0x00	; 0
    5640:	70 e0       	ldi	r23, 0x00	; 0
    5642:	ce 01       	movw	r24, r28
    5644:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
    5648:	69 e2       	ldi	r22, 0x29	; 41
    564a:	ce 01       	movw	r24, r28
    564c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5650:	6e eb       	ldi	r22, 0xBE	; 190
    5652:	ce 01       	movw	r24, r28
    5654:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5658:	66 e0       	ldi	r22, 0x06	; 6
    565a:	ce 01       	movw	r24, r28
    565c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5660:	60 ef       	ldi	r22, 0xF0	; 240
    5662:	ce 01       	movw	r24, r28
    5664:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5668:	61 e0       	ldi	r22, 0x01	; 1
    566a:	ce 01       	movw	r24, r28
    566c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5670:	60 ef       	ldi	r22, 0xF0	; 240
    5672:	ce 01       	movw	r24, r28
    5674:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5678:	60 e0       	ldi	r22, 0x00	; 0
    567a:	ce 01       	movw	r24, r28
    567c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5680:	60 e0       	ldi	r22, 0x00	; 0
    5682:	ce 01       	movw	r24, r28
    5684:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5688:	60 ed       	ldi	r22, 0xD0	; 208
    568a:	ce 01       	movw	r24, r28
    568c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5690:	6d e0       	ldi	r22, 0x0D	; 13
    5692:	ce 01       	movw	r24, r28
    5694:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5698:	0c 94 f3 34 	jmp	0x69e6	; 0x69e6 <_ZN4UTFT7InitLCDEh+0x23a4>
    569c:	62 ee       	ldi	r22, 0xE2	; 226
    569e:	ce 01       	movw	r24, r28
    56a0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    56a4:	6e e1       	ldi	r22, 0x1E	; 30
    56a6:	ce 01       	movw	r24, r28
    56a8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    56ac:	62 e0       	ldi	r22, 0x02	; 2
    56ae:	ce 01       	movw	r24, r28
    56b0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    56b4:	64 e5       	ldi	r22, 0x54	; 84
    56b6:	ce 01       	movw	r24, r28
    56b8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    56bc:	60 ee       	ldi	r22, 0xE0	; 224
    56be:	ce 01       	movw	r24, r28
    56c0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    56c4:	61 e0       	ldi	r22, 0x01	; 1
    56c6:	ce 01       	movw	r24, r28
    56c8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    56cc:	6a e0       	ldi	r22, 0x0A	; 10
    56ce:	70 e0       	ldi	r23, 0x00	; 0
    56d0:	80 e0       	ldi	r24, 0x00	; 0
    56d2:	90 e0       	ldi	r25, 0x00	; 0
    56d4:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    56d8:	60 ee       	ldi	r22, 0xE0	; 224
    56da:	ce 01       	movw	r24, r28
    56dc:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    56e0:	63 e0       	ldi	r22, 0x03	; 3
    56e2:	ce 01       	movw	r24, r28
    56e4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    56e8:	6a e0       	ldi	r22, 0x0A	; 10
    56ea:	70 e0       	ldi	r23, 0x00	; 0
    56ec:	80 e0       	ldi	r24, 0x00	; 0
    56ee:	90 e0       	ldi	r25, 0x00	; 0
    56f0:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    56f4:	61 e0       	ldi	r22, 0x01	; 1
    56f6:	ce 01       	movw	r24, r28
    56f8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    56fc:	64 e6       	ldi	r22, 0x64	; 100
    56fe:	70 e0       	ldi	r23, 0x00	; 0
    5700:	80 e0       	ldi	r24, 0x00	; 0
    5702:	90 e0       	ldi	r25, 0x00	; 0
    5704:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5708:	66 ee       	ldi	r22, 0xE6	; 230
    570a:	ce 01       	movw	r24, r28
    570c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5710:	63 e0       	ldi	r22, 0x03	; 3
    5712:	ce 01       	movw	r24, r28
    5714:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5718:	6f ef       	ldi	r22, 0xFF	; 255
    571a:	ce 01       	movw	r24, r28
    571c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5720:	6f ef       	ldi	r22, 0xFF	; 255
    5722:	ce 01       	movw	r24, r28
    5724:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5728:	60 eb       	ldi	r22, 0xB0	; 176
    572a:	ce 01       	movw	r24, r28
    572c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5730:	64 e2       	ldi	r22, 0x24	; 36
    5732:	ce 01       	movw	r24, r28
    5734:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5738:	60 e0       	ldi	r22, 0x00	; 0
    573a:	ce 01       	movw	r24, r28
    573c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5740:	63 e0       	ldi	r22, 0x03	; 3
    5742:	ce 01       	movw	r24, r28
    5744:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5748:	6f e1       	ldi	r22, 0x1F	; 31
    574a:	ce 01       	movw	r24, r28
    574c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5750:	61 e0       	ldi	r22, 0x01	; 1
    5752:	ce 01       	movw	r24, r28
    5754:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5758:	6f ed       	ldi	r22, 0xDF	; 223
    575a:	ce 01       	movw	r24, r28
    575c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5760:	60 e0       	ldi	r22, 0x00	; 0
    5762:	ce 01       	movw	r24, r28
    5764:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5768:	64 eb       	ldi	r22, 0xB4	; 180
    576a:	ce 01       	movw	r24, r28
    576c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5770:	63 e0       	ldi	r22, 0x03	; 3
    5772:	ce 01       	movw	r24, r28
    5774:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5778:	60 ea       	ldi	r22, 0xA0	; 160
    577a:	ce 01       	movw	r24, r28
    577c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5780:	60 e0       	ldi	r22, 0x00	; 0
    5782:	ce 01       	movw	r24, r28
    5784:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5788:	6e e2       	ldi	r22, 0x2E	; 46
    578a:	ce 01       	movw	r24, r28
    578c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5790:	60 e3       	ldi	r22, 0x30	; 48
    5792:	ce 01       	movw	r24, r28
    5794:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5798:	60 e0       	ldi	r22, 0x00	; 0
    579a:	ce 01       	movw	r24, r28
    579c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57a0:	6f e0       	ldi	r22, 0x0F	; 15
    57a2:	ce 01       	movw	r24, r28
    57a4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57a8:	60 e0       	ldi	r22, 0x00	; 0
    57aa:	ce 01       	movw	r24, r28
    57ac:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57b0:	66 eb       	ldi	r22, 0xB6	; 182
    57b2:	ce 01       	movw	r24, r28
    57b4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    57b8:	62 e0       	ldi	r22, 0x02	; 2
    57ba:	ce 01       	movw	r24, r28
    57bc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57c0:	6d e0       	ldi	r22, 0x0D	; 13
    57c2:	ce 01       	movw	r24, r28
    57c4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57c8:	60 e0       	ldi	r22, 0x00	; 0
    57ca:	ce 01       	movw	r24, r28
    57cc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57d0:	60 e1       	ldi	r22, 0x10	; 16
    57d2:	ce 01       	movw	r24, r28
    57d4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57d8:	60 e1       	ldi	r22, 0x10	; 16
    57da:	ce 01       	movw	r24, r28
    57dc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57e0:	60 e0       	ldi	r22, 0x00	; 0
    57e2:	ce 01       	movw	r24, r28
    57e4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57e8:	68 e0       	ldi	r22, 0x08	; 8
    57ea:	ce 01       	movw	r24, r28
    57ec:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    57f0:	6a eb       	ldi	r22, 0xBA	; 186
    57f2:	ce 01       	movw	r24, r28
    57f4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    57f8:	6f e0       	ldi	r22, 0x0F	; 15
    57fa:	ce 01       	movw	r24, r28
    57fc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5800:	68 eb       	ldi	r22, 0xB8	; 184
    5802:	ce 01       	movw	r24, r28
    5804:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5808:	67 e0       	ldi	r22, 0x07	; 7
    580a:	ce 01       	movw	r24, r28
    580c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5810:	61 e0       	ldi	r22, 0x01	; 1
    5812:	ce 01       	movw	r24, r28
    5814:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5818:	66 e3       	ldi	r22, 0x36	; 54
    581a:	ce 01       	movw	r24, r28
    581c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5820:	62 e2       	ldi	r22, 0x22	; 34
    5822:	ce 01       	movw	r24, r28
    5824:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5828:	60 ef       	ldi	r22, 0xF0	; 240
    582a:	ce 01       	movw	r24, r28
    582c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5830:	63 e0       	ldi	r22, 0x03	; 3
    5832:	ce 01       	movw	r24, r28
    5834:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5838:	61 e0       	ldi	r22, 0x01	; 1
    583a:	70 e0       	ldi	r23, 0x00	; 0
    583c:	80 e0       	ldi	r24, 0x00	; 0
    583e:	90 e0       	ldi	r25, 0x00	; 0
    5840:	d2 c0       	rjmp	.+420    	; 0x59e6 <_ZN4UTFT7InitLCDEh+0x13a4>
    5842:	62 ee       	ldi	r22, 0xE2	; 226
    5844:	ce 01       	movw	r24, r28
    5846:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    584a:	63 e2       	ldi	r22, 0x23	; 35
    584c:	ce 01       	movw	r24, r28
    584e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5852:	62 e0       	ldi	r22, 0x02	; 2
    5854:	ce 01       	movw	r24, r28
    5856:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    585a:	64 e0       	ldi	r22, 0x04	; 4
    585c:	ce 01       	movw	r24, r28
    585e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5862:	60 ee       	ldi	r22, 0xE0	; 224
    5864:	ce 01       	movw	r24, r28
    5866:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    586a:	61 e0       	ldi	r22, 0x01	; 1
    586c:	ce 01       	movw	r24, r28
    586e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5872:	6a e0       	ldi	r22, 0x0A	; 10
    5874:	70 e0       	ldi	r23, 0x00	; 0
    5876:	80 e0       	ldi	r24, 0x00	; 0
    5878:	90 e0       	ldi	r25, 0x00	; 0
    587a:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    587e:	60 ee       	ldi	r22, 0xE0	; 224
    5880:	ce 01       	movw	r24, r28
    5882:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5886:	63 e0       	ldi	r22, 0x03	; 3
    5888:	ce 01       	movw	r24, r28
    588a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    588e:	6a e0       	ldi	r22, 0x0A	; 10
    5890:	70 e0       	ldi	r23, 0x00	; 0
    5892:	80 e0       	ldi	r24, 0x00	; 0
    5894:	90 e0       	ldi	r25, 0x00	; 0
    5896:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    589a:	61 e0       	ldi	r22, 0x01	; 1
    589c:	ce 01       	movw	r24, r28
    589e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    58a2:	64 e6       	ldi	r22, 0x64	; 100
    58a4:	70 e0       	ldi	r23, 0x00	; 0
    58a6:	80 e0       	ldi	r24, 0x00	; 0
    58a8:	90 e0       	ldi	r25, 0x00	; 0
    58aa:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    58ae:	66 ee       	ldi	r22, 0xE6	; 230
    58b0:	ce 01       	movw	r24, r28
    58b2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    58b6:	64 e0       	ldi	r22, 0x04	; 4
    58b8:	ce 01       	movw	r24, r28
    58ba:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    58be:	63 e9       	ldi	r22, 0x93	; 147
    58c0:	ce 01       	movw	r24, r28
    58c2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    58c6:	60 ee       	ldi	r22, 0xE0	; 224
    58c8:	ce 01       	movw	r24, r28
    58ca:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    58ce:	60 eb       	ldi	r22, 0xB0	; 176
    58d0:	ce 01       	movw	r24, r28
    58d2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    58d6:	60 e0       	ldi	r22, 0x00	; 0
    58d8:	ce 01       	movw	r24, r28
    58da:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    58de:	60 e0       	ldi	r22, 0x00	; 0
    58e0:	ce 01       	movw	r24, r28
    58e2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    58e6:	63 e0       	ldi	r22, 0x03	; 3
    58e8:	ce 01       	movw	r24, r28
    58ea:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    58ee:	6f e1       	ldi	r22, 0x1F	; 31
    58f0:	ce 01       	movw	r24, r28
    58f2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    58f6:	61 e0       	ldi	r22, 0x01	; 1
    58f8:	ce 01       	movw	r24, r28
    58fa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    58fe:	6f ed       	ldi	r22, 0xDF	; 223
    5900:	ce 01       	movw	r24, r28
    5902:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5906:	60 e0       	ldi	r22, 0x00	; 0
    5908:	ce 01       	movw	r24, r28
    590a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    590e:	64 eb       	ldi	r22, 0xB4	; 180
    5910:	ce 01       	movw	r24, r28
    5912:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5916:	63 e0       	ldi	r22, 0x03	; 3
    5918:	ce 01       	movw	r24, r28
    591a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    591e:	60 ea       	ldi	r22, 0xA0	; 160
    5920:	ce 01       	movw	r24, r28
    5922:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5926:	60 e0       	ldi	r22, 0x00	; 0
    5928:	ce 01       	movw	r24, r28
    592a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    592e:	6e e2       	ldi	r22, 0x2E	; 46
    5930:	ce 01       	movw	r24, r28
    5932:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5936:	60 e3       	ldi	r22, 0x30	; 48
    5938:	ce 01       	movw	r24, r28
    593a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    593e:	60 e0       	ldi	r22, 0x00	; 0
    5940:	ce 01       	movw	r24, r28
    5942:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5946:	6f e0       	ldi	r22, 0x0F	; 15
    5948:	ce 01       	movw	r24, r28
    594a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    594e:	60 e0       	ldi	r22, 0x00	; 0
    5950:	ce 01       	movw	r24, r28
    5952:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5956:	66 eb       	ldi	r22, 0xB6	; 182
    5958:	ce 01       	movw	r24, r28
    595a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    595e:	62 e0       	ldi	r22, 0x02	; 2
    5960:	ce 01       	movw	r24, r28
    5962:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5966:	6d e0       	ldi	r22, 0x0D	; 13
    5968:	ce 01       	movw	r24, r28
    596a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    596e:	60 e0       	ldi	r22, 0x00	; 0
    5970:	ce 01       	movw	r24, r28
    5972:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5976:	60 e1       	ldi	r22, 0x10	; 16
    5978:	ce 01       	movw	r24, r28
    597a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    597e:	60 e1       	ldi	r22, 0x10	; 16
    5980:	ce 01       	movw	r24, r28
    5982:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5986:	60 e0       	ldi	r22, 0x00	; 0
    5988:	ce 01       	movw	r24, r28
    598a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    598e:	68 e0       	ldi	r22, 0x08	; 8
    5990:	ce 01       	movw	r24, r28
    5992:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5996:	6a eb       	ldi	r22, 0xBA	; 186
    5998:	ce 01       	movw	r24, r28
    599a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    599e:	65 e0       	ldi	r22, 0x05	; 5
    59a0:	ce 01       	movw	r24, r28
    59a2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    59a6:	68 eb       	ldi	r22, 0xB8	; 184
    59a8:	ce 01       	movw	r24, r28
    59aa:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    59ae:	67 e0       	ldi	r22, 0x07	; 7
    59b0:	ce 01       	movw	r24, r28
    59b2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    59b6:	61 e0       	ldi	r22, 0x01	; 1
    59b8:	ce 01       	movw	r24, r28
    59ba:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    59be:	66 e3       	ldi	r22, 0x36	; 54
    59c0:	ce 01       	movw	r24, r28
    59c2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    59c6:	62 e2       	ldi	r22, 0x22	; 34
    59c8:	ce 01       	movw	r24, r28
    59ca:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    59ce:	60 ef       	ldi	r22, 0xF0	; 240
    59d0:	ce 01       	movw	r24, r28
    59d2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    59d6:	63 e0       	ldi	r22, 0x03	; 3
    59d8:	ce 01       	movw	r24, r28
    59da:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    59de:	6a e0       	ldi	r22, 0x0A	; 10
    59e0:	70 e0       	ldi	r23, 0x00	; 0
    59e2:	80 e0       	ldi	r24, 0x00	; 0
    59e4:	90 e0       	ldi	r25, 0x00	; 0
    59e6:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    59ea:	0f ed       	ldi	r16, 0xDF	; 223
    59ec:	11 e0       	ldi	r17, 0x01	; 1
    59ee:	2f e1       	ldi	r18, 0x1F	; 31
    59f0:	33 e0       	ldi	r19, 0x03	; 3
    59f2:	23 ce       	rjmp	.-954    	; 0x563a <_ZN4UTFT7InitLCDEh+0xff8>
    59f4:	44 e0       	ldi	r20, 0x04	; 4
    59f6:	50 e2       	ldi	r21, 0x20	; 32
    59f8:	61 e1       	ldi	r22, 0x11	; 17
    59fa:	ce 01       	movw	r24, r28
    59fc:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a00:	40 e0       	ldi	r20, 0x00	; 0
    5a02:	5c ec       	ldi	r21, 0xCC	; 204
    5a04:	63 e1       	ldi	r22, 0x13	; 19
    5a06:	ce 01       	movw	r24, r28
    5a08:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a0c:	40 e0       	ldi	r20, 0x00	; 0
    5a0e:	56 e2       	ldi	r21, 0x26	; 38
    5a10:	65 e1       	ldi	r22, 0x15	; 21
    5a12:	ce 01       	movw	r24, r28
    5a14:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a18:	4a e2       	ldi	r20, 0x2A	; 42
    5a1a:	55 e2       	ldi	r21, 0x25	; 37
    5a1c:	64 e1       	ldi	r22, 0x14	; 20
    5a1e:	ce 01       	movw	r24, r28
    5a20:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a24:	43 e3       	ldi	r20, 0x33	; 51
    5a26:	50 e0       	ldi	r21, 0x00	; 0
    5a28:	62 e1       	ldi	r22, 0x12	; 18
    5a2a:	ce 01       	movw	r24, r28
    5a2c:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a30:	44 e0       	ldi	r20, 0x04	; 4
    5a32:	5c ec       	ldi	r21, 0xCC	; 204
    5a34:	63 e1       	ldi	r22, 0x13	; 19
    5a36:	ce 01       	movw	r24, r28
    5a38:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a3c:	46 e0       	ldi	r20, 0x06	; 6
    5a3e:	5c ec       	ldi	r21, 0xCC	; 204
    5a40:	63 e1       	ldi	r22, 0x13	; 19
    5a42:	ce 01       	movw	r24, r28
    5a44:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a48:	4f e4       	ldi	r20, 0x4F	; 79
    5a4a:	5c ec       	ldi	r21, 0xCC	; 204
    5a4c:	63 e1       	ldi	r22, 0x13	; 19
    5a4e:	ce 01       	movw	r24, r28
    5a50:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a54:	4f e4       	ldi	r20, 0x4F	; 79
    5a56:	57 e6       	ldi	r21, 0x67	; 103
    5a58:	63 e1       	ldi	r22, 0x13	; 19
    5a5a:	ce 01       	movw	r24, r28
    5a5c:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a60:	43 e0       	ldi	r20, 0x03	; 3
    5a62:	50 e2       	ldi	r21, 0x20	; 32
    5a64:	61 e1       	ldi	r22, 0x11	; 17
    5a66:	ce 01       	movw	r24, r28
    5a68:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a6c:	49 e0       	ldi	r20, 0x09	; 9
    5a6e:	56 e2       	ldi	r21, 0x26	; 38
    5a70:	60 e3       	ldi	r22, 0x30	; 48
    5a72:	ce 01       	movw	r24, r28
    5a74:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a78:	4c e2       	ldi	r20, 0x2C	; 44
    5a7a:	54 e2       	ldi	r21, 0x24	; 36
    5a7c:	61 e3       	ldi	r22, 0x31	; 49
    5a7e:	ce 01       	movw	r24, r28
    5a80:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a84:	43 e2       	ldi	r20, 0x23	; 35
    5a86:	5f e1       	ldi	r21, 0x1F	; 31
    5a88:	62 e3       	ldi	r22, 0x32	; 50
    5a8a:	ce 01       	movw	r24, r28
    5a8c:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a90:	45 e2       	ldi	r20, 0x25	; 37
    5a92:	54 e2       	ldi	r21, 0x24	; 36
    5a94:	63 e3       	ldi	r22, 0x33	; 51
    5a96:	ce 01       	movw	r24, r28
    5a98:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5a9c:	46 e2       	ldi	r20, 0x26	; 38
    5a9e:	52 e2       	ldi	r21, 0x22	; 34
    5aa0:	64 e3       	ldi	r22, 0x34	; 52
    5aa2:	ce 01       	movw	r24, r28
    5aa4:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5aa8:	43 e2       	ldi	r20, 0x23	; 35
    5aaa:	55 e2       	ldi	r21, 0x25	; 37
    5aac:	65 e3       	ldi	r22, 0x35	; 53
    5aae:	ce 01       	movw	r24, r28
    5ab0:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ab4:	4a e1       	ldi	r20, 0x1A	; 26
    5ab6:	5c e1       	ldi	r21, 0x1C	; 28
    5ab8:	66 e3       	ldi	r22, 0x36	; 54
    5aba:	ce 01       	movw	r24, r28
    5abc:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ac0:	4d e1       	ldi	r20, 0x1D	; 29
    5ac2:	53 e1       	ldi	r21, 0x13	; 19
    5ac4:	67 e3       	ldi	r22, 0x37	; 55
    5ac6:	ce 01       	movw	r24, r28
    5ac8:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5acc:	41 e1       	ldi	r20, 0x11	; 17
    5ace:	5b e0       	ldi	r21, 0x0B	; 11
    5ad0:	68 e3       	ldi	r22, 0x38	; 56
    5ad2:	ce 01       	movw	r24, r28
    5ad4:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ad8:	40 e1       	ldi	r20, 0x10	; 16
    5ada:	52 e1       	ldi	r21, 0x12	; 18
    5adc:	69 e3       	ldi	r22, 0x39	; 57
    5ade:	ce 01       	movw	r24, r28
    5ae0:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ae4:	45 e1       	ldi	r20, 0x15	; 21
    5ae6:	53 e1       	ldi	r21, 0x13	; 19
    5ae8:	6a e3       	ldi	r22, 0x3A	; 58
    5aea:	ce 01       	movw	r24, r28
    5aec:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5af0:	49 e1       	ldi	r20, 0x19	; 25
    5af2:	56 e3       	ldi	r21, 0x36	; 54
    5af4:	6b e3       	ldi	r22, 0x3B	; 59
    5af6:	ce 01       	movw	r24, r28
    5af8:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5afc:	40 e0       	ldi	r20, 0x00	; 0
    5afe:	5d e0       	ldi	r21, 0x0D	; 13
    5b00:	6c e3       	ldi	r22, 0x3C	; 60
    5b02:	ce 01       	movw	r24, r28
    5b04:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b08:	4d e0       	ldi	r20, 0x0D	; 13
    5b0a:	50 e0       	ldi	r21, 0x00	; 0
    5b0c:	6d e3       	ldi	r22, 0x3D	; 61
    5b0e:	ce 01       	movw	r24, r28
    5b10:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b14:	47 e0       	ldi	r20, 0x07	; 7
    5b16:	50 e0       	ldi	r21, 0x00	; 0
    5b18:	66 e1       	ldi	r22, 0x16	; 22
    5b1a:	ce 01       	movw	r24, r28
    5b1c:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b20:	43 e1       	ldi	r20, 0x13	; 19
    5b22:	50 e0       	ldi	r21, 0x00	; 0
    5b24:	62 e0       	ldi	r22, 0x02	; 2
    5b26:	ce 01       	movw	r24, r28
    5b28:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b2c:	43 e0       	ldi	r20, 0x03	; 3
    5b2e:	50 e0       	ldi	r21, 0x00	; 0
    5b30:	63 e0       	ldi	r22, 0x03	; 3
    5b32:	ce 01       	movw	r24, r28
    5b34:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b38:	47 e2       	ldi	r20, 0x27	; 39
    5b3a:	51 e0       	ldi	r21, 0x01	; 1
    5b3c:	61 e0       	ldi	r22, 0x01	; 1
    5b3e:	ce 01       	movw	r24, r28
    5b40:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b44:	43 e0       	ldi	r20, 0x03	; 3
    5b46:	53 e0       	ldi	r21, 0x03	; 3
    5b48:	68 e0       	ldi	r22, 0x08	; 8
    5b4a:	ce 01       	movw	r24, r28
    5b4c:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b50:	4b e0       	ldi	r20, 0x0B	; 11
    5b52:	50 e0       	ldi	r21, 0x00	; 0
    5b54:	6a e0       	ldi	r22, 0x0A	; 10
    5b56:	ce 01       	movw	r24, r28
    5b58:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b5c:	43 e0       	ldi	r20, 0x03	; 3
    5b5e:	50 e0       	ldi	r21, 0x00	; 0
    5b60:	6b e0       	ldi	r22, 0x0B	; 11
    5b62:	ce 01       	movw	r24, r28
    5b64:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b68:	40 e0       	ldi	r20, 0x00	; 0
    5b6a:	50 e0       	ldi	r21, 0x00	; 0
    5b6c:	6c e0       	ldi	r22, 0x0C	; 12
    5b6e:	ce 01       	movw	r24, r28
    5b70:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b74:	40 e0       	ldi	r20, 0x00	; 0
    5b76:	50 e0       	ldi	r21, 0x00	; 0
    5b78:	61 e4       	ldi	r22, 0x41	; 65
    5b7a:	ce 01       	movw	r24, r28
    5b7c:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b80:	40 e0       	ldi	r20, 0x00	; 0
    5b82:	50 e0       	ldi	r21, 0x00	; 0
    5b84:	60 e5       	ldi	r22, 0x50	; 80
    5b86:	ce 01       	movw	r24, r28
    5b88:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b8c:	45 e0       	ldi	r20, 0x05	; 5
    5b8e:	50 e0       	ldi	r21, 0x00	; 0
    5b90:	60 e6       	ldi	r22, 0x60	; 96
    5b92:	ce 01       	movw	r24, r28
    5b94:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5b98:	4b e0       	ldi	r20, 0x0B	; 11
    5b9a:	50 e0       	ldi	r21, 0x00	; 0
    5b9c:	60 e7       	ldi	r22, 0x70	; 112
    5b9e:	ce 01       	movw	r24, r28
    5ba0:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ba4:	40 e0       	ldi	r20, 0x00	; 0
    5ba6:	50 e0       	ldi	r21, 0x00	; 0
    5ba8:	61 e7       	ldi	r22, 0x71	; 113
    5baa:	ce 01       	movw	r24, r28
    5bac:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bb0:	40 e0       	ldi	r20, 0x00	; 0
    5bb2:	50 e0       	ldi	r21, 0x00	; 0
    5bb4:	68 e7       	ldi	r22, 0x78	; 120
    5bb6:	ce 01       	movw	r24, r28
    5bb8:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bbc:	40 e0       	ldi	r20, 0x00	; 0
    5bbe:	50 e0       	ldi	r21, 0x00	; 0
    5bc0:	6a e7       	ldi	r22, 0x7A	; 122
    5bc2:	ce 01       	movw	r24, r28
    5bc4:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bc8:	47 e0       	ldi	r20, 0x07	; 7
    5bca:	50 e0       	ldi	r21, 0x00	; 0
    5bcc:	69 e7       	ldi	r22, 0x79	; 121
    5bce:	ce 01       	movw	r24, r28
    5bd0:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bd4:	41 e5       	ldi	r20, 0x51	; 81
    5bd6:	50 e0       	ldi	r21, 0x00	; 0
    5bd8:	67 e0       	ldi	r22, 0x07	; 7
    5bda:	ce 01       	movw	r24, r28
    5bdc:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5be0:	43 e5       	ldi	r20, 0x53	; 83
    5be2:	50 e0       	ldi	r21, 0x00	; 0
    5be4:	67 e0       	ldi	r22, 0x07	; 7
    5be6:	ce 01       	movw	r24, r28
    5be8:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5bec:	40 e0       	ldi	r20, 0x00	; 0
    5bee:	50 e0       	ldi	r21, 0x00	; 0
    5bf0:	69 e7       	ldi	r22, 0x79	; 121
    5bf2:	92 c1       	rjmp	.+804    	; 0x5f18 <_ZN4UTFT7InitLCDEh+0x18d6>
    5bf4:	61 e1       	ldi	r22, 0x11	; 17
    5bf6:	ce 01       	movw	r24, r28
    5bf8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5bfc:	64 e1       	ldi	r22, 0x14	; 20
    5bfe:	70 e0       	ldi	r23, 0x00	; 0
    5c00:	80 e0       	ldi	r24, 0x00	; 0
    5c02:	90 e0       	ldi	r25, 0x00	; 0
    5c04:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5c08:	60 ed       	ldi	r22, 0xD0	; 208
    5c0a:	ce 01       	movw	r24, r28
    5c0c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5c10:	67 e0       	ldi	r22, 0x07	; 7
    5c12:	ce 01       	movw	r24, r28
    5c14:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c18:	62 e4       	ldi	r22, 0x42	; 66
    5c1a:	ce 01       	movw	r24, r28
    5c1c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c20:	68 e1       	ldi	r22, 0x18	; 24
    5c22:	ce 01       	movw	r24, r28
    5c24:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c28:	61 ed       	ldi	r22, 0xD1	; 209
    5c2a:	ce 01       	movw	r24, r28
    5c2c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5c30:	60 e0       	ldi	r22, 0x00	; 0
    5c32:	ce 01       	movw	r24, r28
    5c34:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c38:	67 e0       	ldi	r22, 0x07	; 7
    5c3a:	ce 01       	movw	r24, r28
    5c3c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c40:	60 e1       	ldi	r22, 0x10	; 16
    5c42:	ce 01       	movw	r24, r28
    5c44:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c48:	62 ed       	ldi	r22, 0xD2	; 210
    5c4a:	ce 01       	movw	r24, r28
    5c4c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5c50:	61 e0       	ldi	r22, 0x01	; 1
    5c52:	ce 01       	movw	r24, r28
    5c54:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c58:	62 e0       	ldi	r22, 0x02	; 2
    5c5a:	ce 01       	movw	r24, r28
    5c5c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c60:	60 ec       	ldi	r22, 0xC0	; 192
    5c62:	ce 01       	movw	r24, r28
    5c64:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5c68:	60 e1       	ldi	r22, 0x10	; 16
    5c6a:	ce 01       	movw	r24, r28
    5c6c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c70:	6b e3       	ldi	r22, 0x3B	; 59
    5c72:	ce 01       	movw	r24, r28
    5c74:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c78:	60 e0       	ldi	r22, 0x00	; 0
    5c7a:	ce 01       	movw	r24, r28
    5c7c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c80:	62 e0       	ldi	r22, 0x02	; 2
    5c82:	ce 01       	movw	r24, r28
    5c84:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c88:	61 e1       	ldi	r22, 0x11	; 17
    5c8a:	ce 01       	movw	r24, r28
    5c8c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5c90:	65 ec       	ldi	r22, 0xC5	; 197
    5c92:	ce 01       	movw	r24, r28
    5c94:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5c98:	63 e0       	ldi	r22, 0x03	; 3
    5c9a:	ce 01       	movw	r24, r28
    5c9c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5ca0:	68 ec       	ldi	r22, 0xC8	; 200
    5ca2:	ce 01       	movw	r24, r28
    5ca4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5ca8:	60 e0       	ldi	r22, 0x00	; 0
    5caa:	ce 01       	movw	r24, r28
    5cac:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5cb0:	62 e3       	ldi	r22, 0x32	; 50
    5cb2:	ce 01       	movw	r24, r28
    5cb4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5cb8:	66 e3       	ldi	r22, 0x36	; 54
    5cba:	ce 01       	movw	r24, r28
    5cbc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5cc0:	65 e4       	ldi	r22, 0x45	; 69
    5cc2:	ce 01       	movw	r24, r28
    5cc4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5cc8:	66 e0       	ldi	r22, 0x06	; 6
    5cca:	ce 01       	movw	r24, r28
    5ccc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5cd0:	66 e1       	ldi	r22, 0x16	; 22
    5cd2:	ce 01       	movw	r24, r28
    5cd4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5cd8:	67 e3       	ldi	r22, 0x37	; 55
    5cda:	ce 01       	movw	r24, r28
    5cdc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5ce0:	65 e7       	ldi	r22, 0x75	; 117
    5ce2:	ce 01       	movw	r24, r28
    5ce4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5ce8:	67 e7       	ldi	r22, 0x77	; 119
    5cea:	ce 01       	movw	r24, r28
    5cec:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5cf0:	64 e5       	ldi	r22, 0x54	; 84
    5cf2:	ce 01       	movw	r24, r28
    5cf4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5cf8:	6c e0       	ldi	r22, 0x0C	; 12
    5cfa:	ce 01       	movw	r24, r28
    5cfc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d00:	60 e0       	ldi	r22, 0x00	; 0
    5d02:	ce 01       	movw	r24, r28
    5d04:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d08:	66 e3       	ldi	r22, 0x36	; 54
    5d0a:	ce 01       	movw	r24, r28
    5d0c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5d10:	6a e0       	ldi	r22, 0x0A	; 10
    5d12:	ce 01       	movw	r24, r28
    5d14:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d18:	6a e3       	ldi	r22, 0x3A	; 58
    5d1a:	ce 01       	movw	r24, r28
    5d1c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5d20:	65 e5       	ldi	r22, 0x55	; 85
    5d22:	ce 01       	movw	r24, r28
    5d24:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d28:	6a e2       	ldi	r22, 0x2A	; 42
    5d2a:	ce 01       	movw	r24, r28
    5d2c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5d30:	60 e0       	ldi	r22, 0x00	; 0
    5d32:	ce 01       	movw	r24, r28
    5d34:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d38:	60 e0       	ldi	r22, 0x00	; 0
    5d3a:	ce 01       	movw	r24, r28
    5d3c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d40:	61 e0       	ldi	r22, 0x01	; 1
    5d42:	ce 01       	movw	r24, r28
    5d44:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d48:	6f e3       	ldi	r22, 0x3F	; 63
    5d4a:	ce 01       	movw	r24, r28
    5d4c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d50:	6b e2       	ldi	r22, 0x2B	; 43
    5d52:	ce 01       	movw	r24, r28
    5d54:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5d58:	60 e0       	ldi	r22, 0x00	; 0
    5d5a:	ce 01       	movw	r24, r28
    5d5c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d60:	60 e0       	ldi	r22, 0x00	; 0
    5d62:	ce 01       	movw	r24, r28
    5d64:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d68:	61 e0       	ldi	r22, 0x01	; 1
    5d6a:	ce 01       	movw	r24, r28
    5d6c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d70:	60 ee       	ldi	r22, 0xE0	; 224
    5d72:	ce 01       	movw	r24, r28
    5d74:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5d78:	68 e7       	ldi	r22, 0x78	; 120
    5d7a:	70 e0       	ldi	r23, 0x00	; 0
    5d7c:	80 e0       	ldi	r24, 0x00	; 0
    5d7e:	90 e0       	ldi	r25, 0x00	; 0
    5d80:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5d84:	f8 c1       	rjmp	.+1008   	; 0x6176 <_ZN4UTFT7InitLCDEh+0x1b34>
    5d86:	4a e1       	ldi	r20, 0x1A	; 26
    5d88:	50 e0       	ldi	r21, 0x00	; 0
    5d8a:	61 e1       	ldi	r22, 0x11	; 17
    5d8c:	ce 01       	movw	r24, r28
    5d8e:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d92:	41 e2       	ldi	r20, 0x21	; 33
    5d94:	51 e3       	ldi	r21, 0x31	; 49
    5d96:	62 e1       	ldi	r22, 0x12	; 18
    5d98:	ce 01       	movw	r24, r28
    5d9a:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5d9e:	4c e6       	ldi	r20, 0x6C	; 108
    5da0:	50 e0       	ldi	r21, 0x00	; 0
    5da2:	63 e1       	ldi	r22, 0x13	; 19
    5da4:	ce 01       	movw	r24, r28
    5da6:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5daa:	49 e4       	ldi	r20, 0x49	; 73
    5dac:	52 e4       	ldi	r21, 0x42	; 66
    5dae:	64 e1       	ldi	r22, 0x14	; 20
    5db0:	ce 01       	movw	r24, r28
    5db2:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5db6:	40 e0       	ldi	r20, 0x00	; 0
    5db8:	58 e0       	ldi	r21, 0x08	; 8
    5dba:	60 e1       	ldi	r22, 0x10	; 16
    5dbc:	ce 01       	movw	r24, r28
    5dbe:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5dc2:	6a e0       	ldi	r22, 0x0A	; 10
    5dc4:	70 e0       	ldi	r23, 0x00	; 0
    5dc6:	80 e0       	ldi	r24, 0x00	; 0
    5dc8:	90 e0       	ldi	r25, 0x00	; 0
    5dca:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5dce:	4a e1       	ldi	r20, 0x1A	; 26
    5dd0:	51 e0       	ldi	r21, 0x01	; 1
    5dd2:	61 e1       	ldi	r22, 0x11	; 17
    5dd4:	ce 01       	movw	r24, r28
    5dd6:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5dda:	6a e0       	ldi	r22, 0x0A	; 10
    5ddc:	70 e0       	ldi	r23, 0x00	; 0
    5dde:	80 e0       	ldi	r24, 0x00	; 0
    5de0:	90 e0       	ldi	r25, 0x00	; 0
    5de2:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5de6:	4a e1       	ldi	r20, 0x1A	; 26
    5de8:	53 e0       	ldi	r21, 0x03	; 3
    5dea:	61 e1       	ldi	r22, 0x11	; 17
    5dec:	ce 01       	movw	r24, r28
    5dee:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5df2:	6a e0       	ldi	r22, 0x0A	; 10
    5df4:	70 e0       	ldi	r23, 0x00	; 0
    5df6:	80 e0       	ldi	r24, 0x00	; 0
    5df8:	90 e0       	ldi	r25, 0x00	; 0
    5dfa:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5dfe:	4a e1       	ldi	r20, 0x1A	; 26
    5e00:	57 e0       	ldi	r21, 0x07	; 7
    5e02:	61 e1       	ldi	r22, 0x11	; 17
    5e04:	ce 01       	movw	r24, r28
    5e06:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e0a:	6a e0       	ldi	r22, 0x0A	; 10
    5e0c:	70 e0       	ldi	r23, 0x00	; 0
    5e0e:	80 e0       	ldi	r24, 0x00	; 0
    5e10:	90 e0       	ldi	r25, 0x00	; 0
    5e12:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5e16:	4a e1       	ldi	r20, 0x1A	; 26
    5e18:	5f e0       	ldi	r21, 0x0F	; 15
    5e1a:	61 e1       	ldi	r22, 0x11	; 17
    5e1c:	ce 01       	movw	r24, r28
    5e1e:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e22:	6a e0       	ldi	r22, 0x0A	; 10
    5e24:	70 e0       	ldi	r23, 0x00	; 0
    5e26:	80 e0       	ldi	r24, 0x00	; 0
    5e28:	90 e0       	ldi	r25, 0x00	; 0
    5e2a:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5e2e:	4a e3       	ldi	r20, 0x3A	; 58
    5e30:	5f e0       	ldi	r21, 0x0F	; 15
    5e32:	61 e1       	ldi	r22, 0x11	; 17
    5e34:	ce 01       	movw	r24, r28
    5e36:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e3a:	6e e1       	ldi	r22, 0x1E	; 30
    5e3c:	70 e0       	ldi	r23, 0x00	; 0
    5e3e:	80 e0       	ldi	r24, 0x00	; 0
    5e40:	90 e0       	ldi	r25, 0x00	; 0
    5e42:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5e46:	4c e1       	ldi	r20, 0x1C	; 28
    5e48:	51 e0       	ldi	r21, 0x01	; 1
    5e4a:	61 e0       	ldi	r22, 0x01	; 1
    5e4c:	ce 01       	movw	r24, r28
    5e4e:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e52:	40 e0       	ldi	r20, 0x00	; 0
    5e54:	51 e0       	ldi	r21, 0x01	; 1
    5e56:	62 e0       	ldi	r22, 0x02	; 2
    5e58:	ce 01       	movw	r24, r28
    5e5a:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e5e:	40 e3       	ldi	r20, 0x30	; 48
    5e60:	50 e1       	ldi	r21, 0x10	; 16
    5e62:	63 e0       	ldi	r22, 0x03	; 3
    5e64:	ce 01       	movw	r24, r28
    5e66:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e6a:	40 e0       	ldi	r20, 0x00	; 0
    5e6c:	50 e0       	ldi	r21, 0x00	; 0
    5e6e:	67 e0       	ldi	r22, 0x07	; 7
    5e70:	ce 01       	movw	r24, r28
    5e72:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e76:	48 e0       	ldi	r20, 0x08	; 8
    5e78:	58 e0       	ldi	r21, 0x08	; 8
    5e7a:	68 e0       	ldi	r22, 0x08	; 8
    5e7c:	ce 01       	movw	r24, r28
    5e7e:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e82:	40 e0       	ldi	r20, 0x00	; 0
    5e84:	51 e1       	ldi	r21, 0x11	; 17
    5e86:	6b e0       	ldi	r22, 0x0B	; 11
    5e88:	ce 01       	movw	r24, r28
    5e8a:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e8e:	40 e0       	ldi	r20, 0x00	; 0
    5e90:	50 e0       	ldi	r21, 0x00	; 0
    5e92:	6c e0       	ldi	r22, 0x0C	; 12
    5e94:	ce 01       	movw	r24, r28
    5e96:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5e9a:	41 e0       	ldi	r20, 0x01	; 1
    5e9c:	54 e1       	ldi	r21, 0x14	; 20
    5e9e:	6f e0       	ldi	r22, 0x0F	; 15
    5ea0:	ce 01       	movw	r24, r28
    5ea2:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ea6:	40 e0       	ldi	r20, 0x00	; 0
    5ea8:	50 e0       	ldi	r21, 0x00	; 0
    5eaa:	65 e1       	ldi	r22, 0x15	; 21
    5eac:	ce 01       	movw	r24, r28
    5eae:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5eb2:	40 e0       	ldi	r20, 0x00	; 0
    5eb4:	50 e0       	ldi	r21, 0x00	; 0
    5eb6:	60 e2       	ldi	r22, 0x20	; 32
    5eb8:	ce 01       	movw	r24, r28
    5eba:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ebe:	40 e0       	ldi	r20, 0x00	; 0
    5ec0:	50 e0       	ldi	r21, 0x00	; 0
    5ec2:	61 e2       	ldi	r22, 0x21	; 33
    5ec4:	ce 01       	movw	r24, r28
    5ec6:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5eca:	4f ea       	ldi	r20, 0xAF	; 175
    5ecc:	50 e0       	ldi	r21, 0x00	; 0
    5ece:	66 e3       	ldi	r22, 0x36	; 54
    5ed0:	ce 01       	movw	r24, r28
    5ed2:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ed6:	40 e0       	ldi	r20, 0x00	; 0
    5ed8:	50 e0       	ldi	r21, 0x00	; 0
    5eda:	67 e3       	ldi	r22, 0x37	; 55
    5edc:	ce 01       	movw	r24, r28
    5ede:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5ee2:	4b ed       	ldi	r20, 0xDB	; 219
    5ee4:	50 e0       	ldi	r21, 0x00	; 0
    5ee6:	68 e3       	ldi	r22, 0x38	; 56
    5ee8:	ce 01       	movw	r24, r28
    5eea:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5eee:	40 e0       	ldi	r20, 0x00	; 0
    5ef0:	50 e0       	ldi	r21, 0x00	; 0
    5ef2:	69 e3       	ldi	r22, 0x39	; 57
    5ef4:	ce 01       	movw	r24, r28
    5ef6:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5efa:	41 e0       	ldi	r20, 0x01	; 1
    5efc:	5b e0       	ldi	r21, 0x0B	; 11
    5efe:	6f e0       	ldi	r22, 0x0F	; 15
    5f00:	ce 01       	movw	r24, r28
    5f02:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f06:	46 e1       	ldi	r20, 0x16	; 22
    5f08:	50 e0       	ldi	r21, 0x00	; 0
    5f0a:	67 e0       	ldi	r22, 0x07	; 7
    5f0c:	ce 01       	movw	r24, r28
    5f0e:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f12:	47 e1       	ldi	r20, 0x17	; 23
    5f14:	50 e0       	ldi	r21, 0x00	; 0
    5f16:	67 e0       	ldi	r22, 0x07	; 7
    5f18:	ce 01       	movw	r24, r28
    5f1a:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    5f1e:	0c 94 1a 27 	jmp	0x4e34	; 0x4e34 <_ZN4UTFT7InitLCDEh+0x7f2>
    5f22:	61 e1       	ldi	r22, 0x11	; 17
    5f24:	ce 01       	movw	r24, r28
    5f26:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5f2a:	68 e7       	ldi	r22, 0x78	; 120
    5f2c:	70 e0       	ldi	r23, 0x00	; 0
    5f2e:	80 e0       	ldi	r24, 0x00	; 0
    5f30:	90 e0       	ldi	r25, 0x00	; 0
    5f32:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    5f36:	61 eb       	ldi	r22, 0xB1	; 177
    5f38:	ce 01       	movw	r24, r28
    5f3a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5f3e:	65 e0       	ldi	r22, 0x05	; 5
    5f40:	ce 01       	movw	r24, r28
    5f42:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f46:	6c e3       	ldi	r22, 0x3C	; 60
    5f48:	ce 01       	movw	r24, r28
    5f4a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f4e:	6c e3       	ldi	r22, 0x3C	; 60
    5f50:	ce 01       	movw	r24, r28
    5f52:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f56:	62 eb       	ldi	r22, 0xB2	; 178
    5f58:	ce 01       	movw	r24, r28
    5f5a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5f5e:	65 e0       	ldi	r22, 0x05	; 5
    5f60:	ce 01       	movw	r24, r28
    5f62:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f66:	6c e3       	ldi	r22, 0x3C	; 60
    5f68:	ce 01       	movw	r24, r28
    5f6a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f6e:	6c e3       	ldi	r22, 0x3C	; 60
    5f70:	ce 01       	movw	r24, r28
    5f72:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f76:	63 eb       	ldi	r22, 0xB3	; 179
    5f78:	ce 01       	movw	r24, r28
    5f7a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5f7e:	65 e0       	ldi	r22, 0x05	; 5
    5f80:	ce 01       	movw	r24, r28
    5f82:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f86:	6c e3       	ldi	r22, 0x3C	; 60
    5f88:	ce 01       	movw	r24, r28
    5f8a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f8e:	6c e3       	ldi	r22, 0x3C	; 60
    5f90:	ce 01       	movw	r24, r28
    5f92:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f96:	65 e0       	ldi	r22, 0x05	; 5
    5f98:	ce 01       	movw	r24, r28
    5f9a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5f9e:	6c e3       	ldi	r22, 0x3C	; 60
    5fa0:	ce 01       	movw	r24, r28
    5fa2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5fa6:	6c e3       	ldi	r22, 0x3C	; 60
    5fa8:	ce 01       	movw	r24, r28
    5faa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5fae:	64 eb       	ldi	r22, 0xB4	; 180
    5fb0:	ce 01       	movw	r24, r28
    5fb2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5fb6:	63 e0       	ldi	r22, 0x03	; 3
    5fb8:	ce 01       	movw	r24, r28
    5fba:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5fbe:	60 ec       	ldi	r22, 0xC0	; 192
    5fc0:	ce 01       	movw	r24, r28
    5fc2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5fc6:	68 e2       	ldi	r22, 0x28	; 40
    5fc8:	ce 01       	movw	r24, r28
    5fca:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5fce:	68 e0       	ldi	r22, 0x08	; 8
    5fd0:	ce 01       	movw	r24, r28
    5fd2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5fd6:	64 e0       	ldi	r22, 0x04	; 4
    5fd8:	ce 01       	movw	r24, r28
    5fda:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5fde:	61 ec       	ldi	r22, 0xC1	; 193
    5fe0:	ce 01       	movw	r24, r28
    5fe2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5fe6:	60 ec       	ldi	r22, 0xC0	; 192
    5fe8:	ce 01       	movw	r24, r28
    5fea:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5fee:	62 ec       	ldi	r22, 0xC2	; 194
    5ff0:	ce 01       	movw	r24, r28
    5ff2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    5ff6:	6d e0       	ldi	r22, 0x0D	; 13
    5ff8:	ce 01       	movw	r24, r28
    5ffa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    5ffe:	60 e0       	ldi	r22, 0x00	; 0
    6000:	ce 01       	movw	r24, r28
    6002:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6006:	63 ec       	ldi	r22, 0xC3	; 195
    6008:	ce 01       	movw	r24, r28
    600a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    600e:	6d e8       	ldi	r22, 0x8D	; 141
    6010:	ce 01       	movw	r24, r28
    6012:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6016:	6a e2       	ldi	r22, 0x2A	; 42
    6018:	ce 01       	movw	r24, r28
    601a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    601e:	64 ec       	ldi	r22, 0xC4	; 196
    6020:	ce 01       	movw	r24, r28
    6022:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6026:	6d e8       	ldi	r22, 0x8D	; 141
    6028:	ce 01       	movw	r24, r28
    602a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    602e:	6e ee       	ldi	r22, 0xEE	; 238
    6030:	ce 01       	movw	r24, r28
    6032:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6036:	65 ec       	ldi	r22, 0xC5	; 197
    6038:	ce 01       	movw	r24, r28
    603a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    603e:	6a e1       	ldi	r22, 0x1A	; 26
    6040:	ce 01       	movw	r24, r28
    6042:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6046:	66 e3       	ldi	r22, 0x36	; 54
    6048:	ce 01       	movw	r24, r28
    604a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    604e:	60 ec       	ldi	r22, 0xC0	; 192
    6050:	ce 01       	movw	r24, r28
    6052:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6056:	60 ee       	ldi	r22, 0xE0	; 224
    6058:	ce 01       	movw	r24, r28
    605a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    605e:	63 e0       	ldi	r22, 0x03	; 3
    6060:	ce 01       	movw	r24, r28
    6062:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6066:	62 e2       	ldi	r22, 0x22	; 34
    6068:	ce 01       	movw	r24, r28
    606a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    606e:	67 e0       	ldi	r22, 0x07	; 7
    6070:	ce 01       	movw	r24, r28
    6072:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6076:	6a e0       	ldi	r22, 0x0A	; 10
    6078:	ce 01       	movw	r24, r28
    607a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    607e:	6e e2       	ldi	r22, 0x2E	; 46
    6080:	ce 01       	movw	r24, r28
    6082:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6086:	60 e3       	ldi	r22, 0x30	; 48
    6088:	ce 01       	movw	r24, r28
    608a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    608e:	65 e2       	ldi	r22, 0x25	; 37
    6090:	ce 01       	movw	r24, r28
    6092:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6096:	6a e2       	ldi	r22, 0x2A	; 42
    6098:	ce 01       	movw	r24, r28
    609a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    609e:	68 e2       	ldi	r22, 0x28	; 40
    60a0:	ce 01       	movw	r24, r28
    60a2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60a6:	66 e2       	ldi	r22, 0x26	; 38
    60a8:	ce 01       	movw	r24, r28
    60aa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60ae:	6e e2       	ldi	r22, 0x2E	; 46
    60b0:	ce 01       	movw	r24, r28
    60b2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60b6:	6a e3       	ldi	r22, 0x3A	; 58
    60b8:	ce 01       	movw	r24, r28
    60ba:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60be:	60 e0       	ldi	r22, 0x00	; 0
    60c0:	ce 01       	movw	r24, r28
    60c2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60c6:	61 e0       	ldi	r22, 0x01	; 1
    60c8:	ce 01       	movw	r24, r28
    60ca:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60ce:	63 e0       	ldi	r22, 0x03	; 3
    60d0:	ce 01       	movw	r24, r28
    60d2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60d6:	63 e1       	ldi	r22, 0x13	; 19
    60d8:	ce 01       	movw	r24, r28
    60da:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60de:	61 ee       	ldi	r22, 0xE1	; 225
    60e0:	ce 01       	movw	r24, r28
    60e2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    60e6:	64 e0       	ldi	r22, 0x04	; 4
    60e8:	ce 01       	movw	r24, r28
    60ea:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60ee:	66 e1       	ldi	r22, 0x16	; 22
    60f0:	ce 01       	movw	r24, r28
    60f2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60f6:	66 e0       	ldi	r22, 0x06	; 6
    60f8:	ce 01       	movw	r24, r28
    60fa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    60fe:	6d e0       	ldi	r22, 0x0D	; 13
    6100:	ce 01       	movw	r24, r28
    6102:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6106:	6d e2       	ldi	r22, 0x2D	; 45
    6108:	ce 01       	movw	r24, r28
    610a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    610e:	66 e2       	ldi	r22, 0x26	; 38
    6110:	ce 01       	movw	r24, r28
    6112:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6116:	63 e2       	ldi	r22, 0x23	; 35
    6118:	ce 01       	movw	r24, r28
    611a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    611e:	67 e2       	ldi	r22, 0x27	; 39
    6120:	ce 01       	movw	r24, r28
    6122:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6126:	67 e2       	ldi	r22, 0x27	; 39
    6128:	ce 01       	movw	r24, r28
    612a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    612e:	65 e2       	ldi	r22, 0x25	; 37
    6130:	ce 01       	movw	r24, r28
    6132:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6136:	6d e2       	ldi	r22, 0x2D	; 45
    6138:	ce 01       	movw	r24, r28
    613a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    613e:	6b e3       	ldi	r22, 0x3B	; 59
    6140:	ce 01       	movw	r24, r28
    6142:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6146:	60 e0       	ldi	r22, 0x00	; 0
    6148:	ce 01       	movw	r24, r28
    614a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    614e:	61 e0       	ldi	r22, 0x01	; 1
    6150:	ce 01       	movw	r24, r28
    6152:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6156:	64 e0       	ldi	r22, 0x04	; 4
    6158:	ce 01       	movw	r24, r28
    615a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    615e:	63 e1       	ldi	r22, 0x13	; 19
    6160:	ce 01       	movw	r24, r28
    6162:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6166:	6a e3       	ldi	r22, 0x3A	; 58
    6168:	ce 01       	movw	r24, r28
    616a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    616e:	65 e0       	ldi	r22, 0x05	; 5
    6170:	ce 01       	movw	r24, r28
    6172:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6176:	69 e2       	ldi	r22, 0x29	; 41
    6178:	0c 94 1b 27 	jmp	0x4e36	; 0x4e36 <_ZN4UTFT7InitLCDEh+0x7f4>
    617c:	61 e1       	ldi	r22, 0x11	; 17
    617e:	ce 01       	movw	r24, r28
    6180:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6184:	64 e1       	ldi	r22, 0x14	; 20
    6186:	70 e0       	ldi	r23, 0x00	; 0
    6188:	80 e0       	ldi	r24, 0x00	; 0
    618a:	90 e0       	ldi	r25, 0x00	; 0
    618c:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    6190:	68 e2       	ldi	r22, 0x28	; 40
    6192:	ce 01       	movw	r24, r28
    6194:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6198:	65 e0       	ldi	r22, 0x05	; 5
    619a:	70 e0       	ldi	r23, 0x00	; 0
    619c:	80 e0       	ldi	r24, 0x00	; 0
    619e:	90 e0       	ldi	r25, 0x00	; 0
    61a0:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    61a4:	6f ec       	ldi	r22, 0xCF	; 207
    61a6:	ce 01       	movw	r24, r28
    61a8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    61ac:	60 e0       	ldi	r22, 0x00	; 0
    61ae:	ce 01       	movw	r24, r28
    61b0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    61b4:	63 e8       	ldi	r22, 0x83	; 131
    61b6:	ce 01       	movw	r24, r28
    61b8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    61bc:	60 e3       	ldi	r22, 0x30	; 48
    61be:	ce 01       	movw	r24, r28
    61c0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    61c4:	6d ee       	ldi	r22, 0xED	; 237
    61c6:	ce 01       	movw	r24, r28
    61c8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    61cc:	64 e6       	ldi	r22, 0x64	; 100
    61ce:	ce 01       	movw	r24, r28
    61d0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    61d4:	63 e0       	ldi	r22, 0x03	; 3
    61d6:	ce 01       	movw	r24, r28
    61d8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    61dc:	62 e1       	ldi	r22, 0x12	; 18
    61de:	ce 01       	movw	r24, r28
    61e0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    61e4:	61 e8       	ldi	r22, 0x81	; 129
    61e6:	ce 01       	movw	r24, r28
    61e8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    61ec:	68 ee       	ldi	r22, 0xE8	; 232
    61ee:	ce 01       	movw	r24, r28
    61f0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    61f4:	65 e8       	ldi	r22, 0x85	; 133
    61f6:	ce 01       	movw	r24, r28
    61f8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    61fc:	61 e0       	ldi	r22, 0x01	; 1
    61fe:	ce 01       	movw	r24, r28
    6200:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6204:	69 e7       	ldi	r22, 0x79	; 121
    6206:	ce 01       	movw	r24, r28
    6208:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    620c:	6b ec       	ldi	r22, 0xCB	; 203
    620e:	ce 01       	movw	r24, r28
    6210:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6214:	69 e3       	ldi	r22, 0x39	; 57
    6216:	ce 01       	movw	r24, r28
    6218:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    621c:	6c e2       	ldi	r22, 0x2C	; 44
    621e:	ce 01       	movw	r24, r28
    6220:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6224:	60 e0       	ldi	r22, 0x00	; 0
    6226:	ce 01       	movw	r24, r28
    6228:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    622c:	64 e3       	ldi	r22, 0x34	; 52
    622e:	ce 01       	movw	r24, r28
    6230:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6234:	62 e0       	ldi	r22, 0x02	; 2
    6236:	ce 01       	movw	r24, r28
    6238:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    623c:	67 ef       	ldi	r22, 0xF7	; 247
    623e:	ce 01       	movw	r24, r28
    6240:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6244:	60 e2       	ldi	r22, 0x20	; 32
    6246:	ce 01       	movw	r24, r28
    6248:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    624c:	6a ee       	ldi	r22, 0xEA	; 234
    624e:	ce 01       	movw	r24, r28
    6250:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6254:	60 e0       	ldi	r22, 0x00	; 0
    6256:	ce 01       	movw	r24, r28
    6258:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    625c:	60 e0       	ldi	r22, 0x00	; 0
    625e:	ce 01       	movw	r24, r28
    6260:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6264:	60 ec       	ldi	r22, 0xC0	; 192
    6266:	ce 01       	movw	r24, r28
    6268:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    626c:	66 e2       	ldi	r22, 0x26	; 38
    626e:	ce 01       	movw	r24, r28
    6270:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6274:	61 ec       	ldi	r22, 0xC1	; 193
    6276:	ce 01       	movw	r24, r28
    6278:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    627c:	61 e1       	ldi	r22, 0x11	; 17
    627e:	ce 01       	movw	r24, r28
    6280:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6284:	65 ec       	ldi	r22, 0xC5	; 197
    6286:	ce 01       	movw	r24, r28
    6288:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    628c:	65 e3       	ldi	r22, 0x35	; 53
    628e:	ce 01       	movw	r24, r28
    6290:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6294:	6e e3       	ldi	r22, 0x3E	; 62
    6296:	ce 01       	movw	r24, r28
    6298:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    629c:	67 ec       	ldi	r22, 0xC7	; 199
    629e:	ce 01       	movw	r24, r28
    62a0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    62a4:	6e eb       	ldi	r22, 0xBE	; 190
    62a6:	ce 01       	movw	r24, r28
    62a8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    62ac:	61 eb       	ldi	r22, 0xB1	; 177
    62ae:	ce 01       	movw	r24, r28
    62b0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    62b4:	60 e0       	ldi	r22, 0x00	; 0
    62b6:	ce 01       	movw	r24, r28
    62b8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    62bc:	6b e1       	ldi	r22, 0x1B	; 27
    62be:	ce 01       	movw	r24, r28
    62c0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    62c4:	66 eb       	ldi	r22, 0xB6	; 182
    62c6:	ce 01       	movw	r24, r28
    62c8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    62cc:	6a e0       	ldi	r22, 0x0A	; 10
    62ce:	ce 01       	movw	r24, r28
    62d0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    62d4:	62 e8       	ldi	r22, 0x82	; 130
    62d6:	ce 01       	movw	r24, r28
    62d8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    62dc:	67 e2       	ldi	r22, 0x27	; 39
    62de:	ce 01       	movw	r24, r28
    62e0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    62e4:	60 e0       	ldi	r22, 0x00	; 0
    62e6:	ce 01       	movw	r24, r28
    62e8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    62ec:	67 eb       	ldi	r22, 0xB7	; 183
    62ee:	ce 01       	movw	r24, r28
    62f0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    62f4:	67 e0       	ldi	r22, 0x07	; 7
    62f6:	ce 01       	movw	r24, r28
    62f8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    62fc:	6a e3       	ldi	r22, 0x3A	; 58
    62fe:	ce 01       	movw	r24, r28
    6300:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6304:	65 e5       	ldi	r22, 0x55	; 85
    6306:	ce 01       	movw	r24, r28
    6308:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    630c:	66 e3       	ldi	r22, 0x36	; 54
    630e:	ce 01       	movw	r24, r28
    6310:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6314:	68 e4       	ldi	r22, 0x48	; 72
    6316:	ce 01       	movw	r24, r28
    6318:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    631c:	69 e2       	ldi	r22, 0x29	; 41
    631e:	ce 01       	movw	r24, r28
    6320:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6324:	65 e0       	ldi	r22, 0x05	; 5
    6326:	70 e0       	ldi	r23, 0x00	; 0
    6328:	80 e0       	ldi	r24, 0x00	; 0
    632a:	90 e0       	ldi	r25, 0x00	; 0
    632c:	5b c4       	rjmp	.+2230   	; 0x6be4 <_ZN4UTFT7InitLCDEh+0x25a2>
    632e:	6b ec       	ldi	r22, 0xCB	; 203
    6330:	ce 01       	movw	r24, r28
    6332:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6336:	69 e3       	ldi	r22, 0x39	; 57
    6338:	ce 01       	movw	r24, r28
    633a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    633e:	6c e2       	ldi	r22, 0x2C	; 44
    6340:	ce 01       	movw	r24, r28
    6342:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6346:	60 e0       	ldi	r22, 0x00	; 0
    6348:	ce 01       	movw	r24, r28
    634a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    634e:	64 e3       	ldi	r22, 0x34	; 52
    6350:	ce 01       	movw	r24, r28
    6352:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6356:	62 e0       	ldi	r22, 0x02	; 2
    6358:	ce 01       	movw	r24, r28
    635a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    635e:	6f ec       	ldi	r22, 0xCF	; 207
    6360:	ce 01       	movw	r24, r28
    6362:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6366:	60 e0       	ldi	r22, 0x00	; 0
    6368:	ce 01       	movw	r24, r28
    636a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    636e:	61 ec       	ldi	r22, 0xC1	; 193
    6370:	ce 01       	movw	r24, r28
    6372:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6376:	60 e3       	ldi	r22, 0x30	; 48
    6378:	ce 01       	movw	r24, r28
    637a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    637e:	68 ee       	ldi	r22, 0xE8	; 232
    6380:	ce 01       	movw	r24, r28
    6382:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6386:	65 e8       	ldi	r22, 0x85	; 133
    6388:	ce 01       	movw	r24, r28
    638a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    638e:	60 e0       	ldi	r22, 0x00	; 0
    6390:	ce 01       	movw	r24, r28
    6392:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6396:	68 e7       	ldi	r22, 0x78	; 120
    6398:	ce 01       	movw	r24, r28
    639a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    639e:	6a ee       	ldi	r22, 0xEA	; 234
    63a0:	ce 01       	movw	r24, r28
    63a2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    63a6:	60 e0       	ldi	r22, 0x00	; 0
    63a8:	ce 01       	movw	r24, r28
    63aa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    63ae:	60 e0       	ldi	r22, 0x00	; 0
    63b0:	ce 01       	movw	r24, r28
    63b2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    63b6:	6d ee       	ldi	r22, 0xED	; 237
    63b8:	ce 01       	movw	r24, r28
    63ba:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    63be:	64 e6       	ldi	r22, 0x64	; 100
    63c0:	ce 01       	movw	r24, r28
    63c2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    63c6:	63 e0       	ldi	r22, 0x03	; 3
    63c8:	ce 01       	movw	r24, r28
    63ca:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    63ce:	62 e1       	ldi	r22, 0x12	; 18
    63d0:	ce 01       	movw	r24, r28
    63d2:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    63d6:	61 e8       	ldi	r22, 0x81	; 129
    63d8:	ce 01       	movw	r24, r28
    63da:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    63de:	67 ef       	ldi	r22, 0xF7	; 247
    63e0:	ce 01       	movw	r24, r28
    63e2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    63e6:	60 e2       	ldi	r22, 0x20	; 32
    63e8:	ce 01       	movw	r24, r28
    63ea:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    63ee:	60 ec       	ldi	r22, 0xC0	; 192
    63f0:	ce 01       	movw	r24, r28
    63f2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    63f6:	63 e2       	ldi	r22, 0x23	; 35
    63f8:	ce 01       	movw	r24, r28
    63fa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    63fe:	61 ec       	ldi	r22, 0xC1	; 193
    6400:	ce 01       	movw	r24, r28
    6402:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6406:	60 e1       	ldi	r22, 0x10	; 16
    6408:	ce 01       	movw	r24, r28
    640a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    640e:	65 ec       	ldi	r22, 0xC5	; 197
    6410:	ce 01       	movw	r24, r28
    6412:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6416:	6e e3       	ldi	r22, 0x3E	; 62
    6418:	ce 01       	movw	r24, r28
    641a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    641e:	68 e2       	ldi	r22, 0x28	; 40
    6420:	ce 01       	movw	r24, r28
    6422:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6426:	67 ec       	ldi	r22, 0xC7	; 199
    6428:	ce 01       	movw	r24, r28
    642a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    642e:	66 e8       	ldi	r22, 0x86	; 134
    6430:	ce 01       	movw	r24, r28
    6432:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6436:	66 e3       	ldi	r22, 0x36	; 54
    6438:	ce 01       	movw	r24, r28
    643a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    643e:	68 e4       	ldi	r22, 0x48	; 72
    6440:	ce 01       	movw	r24, r28
    6442:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6446:	6a e3       	ldi	r22, 0x3A	; 58
    6448:	ce 01       	movw	r24, r28
    644a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    644e:	65 e5       	ldi	r22, 0x55	; 85
    6450:	ce 01       	movw	r24, r28
    6452:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6456:	61 eb       	ldi	r22, 0xB1	; 177
    6458:	ce 01       	movw	r24, r28
    645a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    645e:	60 e0       	ldi	r22, 0x00	; 0
    6460:	ce 01       	movw	r24, r28
    6462:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6466:	68 e1       	ldi	r22, 0x18	; 24
    6468:	ce 01       	movw	r24, r28
    646a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    646e:	66 eb       	ldi	r22, 0xB6	; 182
    6470:	ce 01       	movw	r24, r28
    6472:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6476:	68 e0       	ldi	r22, 0x08	; 8
    6478:	ce 01       	movw	r24, r28
    647a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    647e:	62 e8       	ldi	r22, 0x82	; 130
    6480:	ce 01       	movw	r24, r28
    6482:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6486:	67 e2       	ldi	r22, 0x27	; 39
    6488:	ce 01       	movw	r24, r28
    648a:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    648e:	61 e1       	ldi	r22, 0x11	; 17
    6490:	ce 01       	movw	r24, r28
    6492:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6496:	68 e7       	ldi	r22, 0x78	; 120
    6498:	70 e0       	ldi	r23, 0x00	; 0
    649a:	80 e0       	ldi	r24, 0x00	; 0
    649c:	90 e0       	ldi	r25, 0x00	; 0
    649e:	9d c2       	rjmp	.+1338   	; 0x69da <_ZN4UTFT7InitLCDEh+0x2398>
    64a0:	60 eb       	ldi	r22, 0xB0	; 176
    64a2:	ce 01       	movw	r24, r28
    64a4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    64a8:	6e e1       	ldi	r22, 0x1E	; 30
    64aa:	ce 01       	movw	r24, r28
    64ac:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    64b0:	60 eb       	ldi	r22, 0xB0	; 176
    64b2:	ce 01       	movw	r24, r28
    64b4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    64b8:	60 e0       	ldi	r22, 0x00	; 0
    64ba:	ce 01       	movw	r24, r28
    64bc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    64c0:	63 eb       	ldi	r22, 0xB3	; 179
    64c2:	ce 01       	movw	r24, r28
    64c4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    64c8:	62 e0       	ldi	r22, 0x02	; 2
    64ca:	ce 01       	movw	r24, r28
    64cc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    64d0:	60 e0       	ldi	r22, 0x00	; 0
    64d2:	ce 01       	movw	r24, r28
    64d4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    64d8:	60 e0       	ldi	r22, 0x00	; 0
    64da:	ce 01       	movw	r24, r28
    64dc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    64e0:	60 e1       	ldi	r22, 0x10	; 16
    64e2:	ce 01       	movw	r24, r28
    64e4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    64e8:	64 eb       	ldi	r22, 0xB4	; 180
    64ea:	ce 01       	movw	r24, r28
    64ec:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    64f0:	60 e0       	ldi	r22, 0x00	; 0
    64f2:	ce 01       	movw	r24, r28
    64f4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    64f8:	60 ec       	ldi	r22, 0xC0	; 192
    64fa:	ce 01       	movw	r24, r28
    64fc:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6500:	63 e0       	ldi	r22, 0x03	; 3
    6502:	ce 01       	movw	r24, r28
    6504:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6508:	6b e3       	ldi	r22, 0x3B	; 59
    650a:	ce 01       	movw	r24, r28
    650c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6510:	60 e0       	ldi	r22, 0x00	; 0
    6512:	ce 01       	movw	r24, r28
    6514:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6518:	60 e0       	ldi	r22, 0x00	; 0
    651a:	ce 01       	movw	r24, r28
    651c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6520:	60 e0       	ldi	r22, 0x00	; 0
    6522:	ce 01       	movw	r24, r28
    6524:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6528:	61 e0       	ldi	r22, 0x01	; 1
    652a:	ce 01       	movw	r24, r28
    652c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6530:	60 e0       	ldi	r22, 0x00	; 0
    6532:	ce 01       	movw	r24, r28
    6534:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6538:	63 e4       	ldi	r22, 0x43	; 67
    653a:	ce 01       	movw	r24, r28
    653c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6540:	61 ec       	ldi	r22, 0xC1	; 193
    6542:	ce 01       	movw	r24, r28
    6544:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6548:	68 e0       	ldi	r22, 0x08	; 8
    654a:	ce 01       	movw	r24, r28
    654c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6550:	65 e1       	ldi	r22, 0x15	; 21
    6552:	ce 01       	movw	r24, r28
    6554:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6558:	68 e0       	ldi	r22, 0x08	; 8
    655a:	ce 01       	movw	r24, r28
    655c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6560:	68 e0       	ldi	r22, 0x08	; 8
    6562:	ce 01       	movw	r24, r28
    6564:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6568:	64 ec       	ldi	r22, 0xC4	; 196
    656a:	ce 01       	movw	r24, r28
    656c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6570:	65 e1       	ldi	r22, 0x15	; 21
    6572:	ce 01       	movw	r24, r28
    6574:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6578:	63 e0       	ldi	r22, 0x03	; 3
    657a:	ce 01       	movw	r24, r28
    657c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6580:	63 e0       	ldi	r22, 0x03	; 3
    6582:	ce 01       	movw	r24, r28
    6584:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6588:	61 e0       	ldi	r22, 0x01	; 1
    658a:	ce 01       	movw	r24, r28
    658c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6590:	66 ec       	ldi	r22, 0xC6	; 198
    6592:	ce 01       	movw	r24, r28
    6594:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6598:	62 e0       	ldi	r22, 0x02	; 2
    659a:	ce 01       	movw	r24, r28
    659c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65a0:	68 ec       	ldi	r22, 0xC8	; 200
    65a2:	ce 01       	movw	r24, r28
    65a4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    65a8:	6c e0       	ldi	r22, 0x0C	; 12
    65aa:	ce 01       	movw	r24, r28
    65ac:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65b0:	65 e0       	ldi	r22, 0x05	; 5
    65b2:	ce 01       	movw	r24, r28
    65b4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65b8:	6a e0       	ldi	r22, 0x0A	; 10
    65ba:	ce 01       	movw	r24, r28
    65bc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65c0:	6b e6       	ldi	r22, 0x6B	; 107
    65c2:	ce 01       	movw	r24, r28
    65c4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65c8:	64 e0       	ldi	r22, 0x04	; 4
    65ca:	ce 01       	movw	r24, r28
    65cc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65d0:	66 e0       	ldi	r22, 0x06	; 6
    65d2:	ce 01       	movw	r24, r28
    65d4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65d8:	65 e1       	ldi	r22, 0x15	; 21
    65da:	ce 01       	movw	r24, r28
    65dc:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65e0:	60 e1       	ldi	r22, 0x10	; 16
    65e2:	ce 01       	movw	r24, r28
    65e4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65e8:	60 e0       	ldi	r22, 0x00	; 0
    65ea:	ce 01       	movw	r24, r28
    65ec:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65f0:	60 e6       	ldi	r22, 0x60	; 96
    65f2:	ce 01       	movw	r24, r28
    65f4:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    65f8:	66 e3       	ldi	r22, 0x36	; 54
    65fa:	ce 01       	movw	r24, r28
    65fc:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6600:	6a e0       	ldi	r22, 0x0A	; 10
    6602:	ce 01       	movw	r24, r28
    6604:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6608:	6c e0       	ldi	r22, 0x0C	; 12
    660a:	ce 01       	movw	r24, r28
    660c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6610:	65 e5       	ldi	r22, 0x55	; 85
    6612:	ce 01       	movw	r24, r28
    6614:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6618:	6a e3       	ldi	r22, 0x3A	; 58
    661a:	ce 01       	movw	r24, r28
    661c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6620:	65 e5       	ldi	r22, 0x55	; 85
    6622:	ce 01       	movw	r24, r28
    6624:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6628:	68 e3       	ldi	r22, 0x38	; 56
    662a:	ce 01       	movw	r24, r28
    662c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6630:	60 ed       	ldi	r22, 0xD0	; 208
    6632:	ce 01       	movw	r24, r28
    6634:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6638:	67 e0       	ldi	r22, 0x07	; 7
    663a:	ce 01       	movw	r24, r28
    663c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6640:	67 e0       	ldi	r22, 0x07	; 7
    6642:	ce 01       	movw	r24, r28
    6644:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6648:	64 e1       	ldi	r22, 0x14	; 20
    664a:	ce 01       	movw	r24, r28
    664c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6650:	62 ea       	ldi	r22, 0xA2	; 162
    6652:	ce 01       	movw	r24, r28
    6654:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6658:	61 ed       	ldi	r22, 0xD1	; 209
    665a:	ce 01       	movw	r24, r28
    665c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6660:	63 e0       	ldi	r22, 0x03	; 3
    6662:	ce 01       	movw	r24, r28
    6664:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6668:	6a e5       	ldi	r22, 0x5A	; 90
    666a:	ce 01       	movw	r24, r28
    666c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6670:	60 e1       	ldi	r22, 0x10	; 16
    6672:	ce 01       	movw	r24, r28
    6674:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6678:	62 ed       	ldi	r22, 0xD2	; 210
    667a:	ce 01       	movw	r24, r28
    667c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6680:	63 e0       	ldi	r22, 0x03	; 3
    6682:	ce 01       	movw	r24, r28
    6684:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6688:	64 e0       	ldi	r22, 0x04	; 4
    668a:	ce 01       	movw	r24, r28
    668c:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6690:	64 e0       	ldi	r22, 0x04	; 4
    6692:	ce 01       	movw	r24, r28
    6694:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6698:	61 e1       	ldi	r22, 0x11	; 17
    669a:	ce 01       	movw	r24, r28
    669c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    66a0:	66 e9       	ldi	r22, 0x96	; 150
    66a2:	70 e0       	ldi	r23, 0x00	; 0
    66a4:	80 e0       	ldi	r24, 0x00	; 0
    66a6:	90 e0       	ldi	r25, 0x00	; 0
    66a8:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    66ac:	6a e2       	ldi	r22, 0x2A	; 42
    66ae:	ce 01       	movw	r24, r28
    66b0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    66b4:	60 e0       	ldi	r22, 0x00	; 0
    66b6:	ce 01       	movw	r24, r28
    66b8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    66bc:	60 e0       	ldi	r22, 0x00	; 0
    66be:	ce 01       	movw	r24, r28
    66c0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    66c4:	61 e0       	ldi	r22, 0x01	; 1
    66c6:	ce 01       	movw	r24, r28
    66c8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    66cc:	6f ed       	ldi	r22, 0xDF	; 223
    66ce:	ce 01       	movw	r24, r28
    66d0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    66d4:	6b e2       	ldi	r22, 0x2B	; 43
    66d6:	ce 01       	movw	r24, r28
    66d8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    66dc:	60 e0       	ldi	r22, 0x00	; 0
    66de:	ce 01       	movw	r24, r28
    66e0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    66e4:	60 e0       	ldi	r22, 0x00	; 0
    66e6:	ce 01       	movw	r24, r28
    66e8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    66ec:	61 e0       	ldi	r22, 0x01	; 1
    66ee:	ce 01       	movw	r24, r28
    66f0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    66f4:	6f e3       	ldi	r22, 0x3F	; 63
    66f6:	ce 01       	movw	r24, r28
    66f8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    66fc:	64 e6       	ldi	r22, 0x64	; 100
    66fe:	70 e0       	ldi	r23, 0x00	; 0
    6700:	80 e0       	ldi	r24, 0x00	; 0
    6702:	90 e0       	ldi	r25, 0x00	; 0
    6704:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    6708:	69 e2       	ldi	r22, 0x29	; 41
    670a:	ce 01       	movw	r24, r28
    670c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6710:	6e e1       	ldi	r22, 0x1E	; 30
    6712:	70 e0       	ldi	r23, 0x00	; 0
    6714:	80 e0       	ldi	r24, 0x00	; 0
    6716:	90 e0       	ldi	r25, 0x00	; 0
    6718:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    671c:	6c e2       	ldi	r22, 0x2C	; 44
    671e:	ce 01       	movw	r24, r28
    6720:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6724:	6e e1       	ldi	r22, 0x1E	; 30
    6726:	70 e0       	ldi	r23, 0x00	; 0
    6728:	80 e0       	ldi	r24, 0x00	; 0
    672a:	90 e0       	ldi	r25, 0x00	; 0
    672c:	5b c2       	rjmp	.+1206   	; 0x6be4 <_ZN4UTFT7InitLCDEh+0x25a2>
    672e:	61 e1       	ldi	r22, 0x11	; 17
    6730:	ce 01       	movw	r24, r28
    6732:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6736:	62 e3       	ldi	r22, 0x32	; 50
    6738:	70 e0       	ldi	r23, 0x00	; 0
    673a:	80 e0       	ldi	r24, 0x00	; 0
    673c:	90 e0       	ldi	r25, 0x00	; 0
    673e:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    6742:	62 ef       	ldi	r22, 0xF2	; 242
    6744:	ce 01       	movw	r24, r28
    6746:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    674a:	6c e1       	ldi	r22, 0x1C	; 28
    674c:	ce 01       	movw	r24, r28
    674e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6752:	63 ea       	ldi	r22, 0xA3	; 163
    6754:	ce 01       	movw	r24, r28
    6756:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    675a:	62 e3       	ldi	r22, 0x32	; 50
    675c:	ce 01       	movw	r24, r28
    675e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6762:	62 e0       	ldi	r22, 0x02	; 2
    6764:	ce 01       	movw	r24, r28
    6766:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    676a:	62 eb       	ldi	r22, 0xB2	; 178
    676c:	ce 01       	movw	r24, r28
    676e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6772:	62 e1       	ldi	r22, 0x12	; 18
    6774:	ce 01       	movw	r24, r28
    6776:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    677a:	6f ef       	ldi	r22, 0xFF	; 255
    677c:	ce 01       	movw	r24, r28
    677e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6782:	62 e1       	ldi	r22, 0x12	; 18
    6784:	ce 01       	movw	r24, r28
    6786:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    678a:	60 e0       	ldi	r22, 0x00	; 0
    678c:	ce 01       	movw	r24, r28
    678e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6792:	61 ef       	ldi	r22, 0xF1	; 241
    6794:	ce 01       	movw	r24, r28
    6796:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    679a:	66 e3       	ldi	r22, 0x36	; 54
    679c:	ce 01       	movw	r24, r28
    679e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    67a2:	64 ea       	ldi	r22, 0xA4	; 164
    67a4:	ce 01       	movw	r24, r28
    67a6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    67aa:	68 ef       	ldi	r22, 0xF8	; 248
    67ac:	ce 01       	movw	r24, r28
    67ae:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    67b2:	61 e2       	ldi	r22, 0x21	; 33
    67b4:	ce 01       	movw	r24, r28
    67b6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    67ba:	64 e0       	ldi	r22, 0x04	; 4
    67bc:	ce 01       	movw	r24, r28
    67be:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    67c2:	69 ef       	ldi	r22, 0xF9	; 249
    67c4:	ce 01       	movw	r24, r28
    67c6:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    67ca:	60 e0       	ldi	r22, 0x00	; 0
    67cc:	ce 01       	movw	r24, r28
    67ce:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    67d2:	68 e0       	ldi	r22, 0x08	; 8
    67d4:	ce 01       	movw	r24, r28
    67d6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    67da:	60 ec       	ldi	r22, 0xC0	; 192
    67dc:	ce 01       	movw	r24, r28
    67de:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    67e2:	6d e0       	ldi	r22, 0x0D	; 13
    67e4:	ce 01       	movw	r24, r28
    67e6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    67ea:	6d e0       	ldi	r22, 0x0D	; 13
    67ec:	ce 01       	movw	r24, r28
    67ee:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    67f2:	61 ec       	ldi	r22, 0xC1	; 193
    67f4:	ce 01       	movw	r24, r28
    67f6:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    67fa:	63 e4       	ldi	r22, 0x43	; 67
    67fc:	ce 01       	movw	r24, r28
    67fe:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6802:	60 e0       	ldi	r22, 0x00	; 0
    6804:	ce 01       	movw	r24, r28
    6806:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    680a:	62 ec       	ldi	r22, 0xC2	; 194
    680c:	ce 01       	movw	r24, r28
    680e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6812:	60 e0       	ldi	r22, 0x00	; 0
    6814:	ce 01       	movw	r24, r28
    6816:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    681a:	65 ec       	ldi	r22, 0xC5	; 197
    681c:	ce 01       	movw	r24, r28
    681e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6822:	60 e0       	ldi	r22, 0x00	; 0
    6824:	ce 01       	movw	r24, r28
    6826:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    682a:	68 e4       	ldi	r22, 0x48	; 72
    682c:	ce 01       	movw	r24, r28
    682e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6832:	66 eb       	ldi	r22, 0xB6	; 182
    6834:	ce 01       	movw	r24, r28
    6836:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    683a:	60 e0       	ldi	r22, 0x00	; 0
    683c:	ce 01       	movw	r24, r28
    683e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6842:	62 e2       	ldi	r22, 0x22	; 34
    6844:	ce 01       	movw	r24, r28
    6846:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    684a:	6b e3       	ldi	r22, 0x3B	; 59
    684c:	ce 01       	movw	r24, r28
    684e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6852:	60 ee       	ldi	r22, 0xE0	; 224
    6854:	ce 01       	movw	r24, r28
    6856:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    685a:	6f e0       	ldi	r22, 0x0F	; 15
    685c:	ce 01       	movw	r24, r28
    685e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6862:	64 e2       	ldi	r22, 0x24	; 36
    6864:	ce 01       	movw	r24, r28
    6866:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    686a:	6c e1       	ldi	r22, 0x1C	; 28
    686c:	ce 01       	movw	r24, r28
    686e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6872:	6a e0       	ldi	r22, 0x0A	; 10
    6874:	ce 01       	movw	r24, r28
    6876:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    687a:	6f e0       	ldi	r22, 0x0F	; 15
    687c:	ce 01       	movw	r24, r28
    687e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6882:	68 e0       	ldi	r22, 0x08	; 8
    6884:	ce 01       	movw	r24, r28
    6886:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    688a:	63 e4       	ldi	r22, 0x43	; 67
    688c:	ce 01       	movw	r24, r28
    688e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6892:	68 e8       	ldi	r22, 0x88	; 136
    6894:	ce 01       	movw	r24, r28
    6896:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    689a:	62 e3       	ldi	r22, 0x32	; 50
    689c:	ce 01       	movw	r24, r28
    689e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68a2:	6f e0       	ldi	r22, 0x0F	; 15
    68a4:	ce 01       	movw	r24, r28
    68a6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68aa:	60 e1       	ldi	r22, 0x10	; 16
    68ac:	ce 01       	movw	r24, r28
    68ae:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68b2:	66 e0       	ldi	r22, 0x06	; 6
    68b4:	ce 01       	movw	r24, r28
    68b6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68ba:	6f e0       	ldi	r22, 0x0F	; 15
    68bc:	ce 01       	movw	r24, r28
    68be:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68c2:	67 e0       	ldi	r22, 0x07	; 7
    68c4:	ce 01       	movw	r24, r28
    68c6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68ca:	60 e0       	ldi	r22, 0x00	; 0
    68cc:	ce 01       	movw	r24, r28
    68ce:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68d2:	61 ee       	ldi	r22, 0xE1	; 225
    68d4:	ce 01       	movw	r24, r28
    68d6:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    68da:	6f e0       	ldi	r22, 0x0F	; 15
    68dc:	ce 01       	movw	r24, r28
    68de:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68e2:	68 e3       	ldi	r22, 0x38	; 56
    68e4:	ce 01       	movw	r24, r28
    68e6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68ea:	60 e3       	ldi	r22, 0x30	; 48
    68ec:	ce 01       	movw	r24, r28
    68ee:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68f2:	69 e0       	ldi	r22, 0x09	; 9
    68f4:	ce 01       	movw	r24, r28
    68f6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    68fa:	6f e0       	ldi	r22, 0x0F	; 15
    68fc:	ce 01       	movw	r24, r28
    68fe:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6902:	6f e0       	ldi	r22, 0x0F	; 15
    6904:	ce 01       	movw	r24, r28
    6906:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    690a:	6e e4       	ldi	r22, 0x4E	; 78
    690c:	ce 01       	movw	r24, r28
    690e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6912:	67 e7       	ldi	r22, 0x77	; 119
    6914:	ce 01       	movw	r24, r28
    6916:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    691a:	6c e3       	ldi	r22, 0x3C	; 60
    691c:	ce 01       	movw	r24, r28
    691e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6922:	67 e0       	ldi	r22, 0x07	; 7
    6924:	ce 01       	movw	r24, r28
    6926:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    692a:	60 e1       	ldi	r22, 0x10	; 16
    692c:	ce 01       	movw	r24, r28
    692e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6932:	65 e0       	ldi	r22, 0x05	; 5
    6934:	ce 01       	movw	r24, r28
    6936:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    693a:	63 e2       	ldi	r22, 0x23	; 35
    693c:	ce 01       	movw	r24, r28
    693e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6942:	6b e1       	ldi	r22, 0x1B	; 27
    6944:	ce 01       	movw	r24, r28
    6946:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    694a:	60 e0       	ldi	r22, 0x00	; 0
    694c:	ce 01       	movw	r24, r28
    694e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6952:	60 e2       	ldi	r22, 0x20	; 32
    6954:	ce 01       	movw	r24, r28
    6956:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    695a:	60 e0       	ldi	r22, 0x00	; 0
    695c:	ce 01       	movw	r24, r28
    695e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6962:	66 e3       	ldi	r22, 0x36	; 54
    6964:	ce 01       	movw	r24, r28
    6966:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    696a:	6a e0       	ldi	r22, 0x0A	; 10
    696c:	ce 01       	movw	r24, r28
    696e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6972:	6a e3       	ldi	r22, 0x3A	; 58
    6974:	ce 01       	movw	r24, r28
    6976:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    697a:	65 e5       	ldi	r22, 0x55	; 85
    697c:	ce 01       	movw	r24, r28
    697e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6982:	6a e2       	ldi	r22, 0x2A	; 42
    6984:	ce 01       	movw	r24, r28
    6986:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    698a:	60 e0       	ldi	r22, 0x00	; 0
    698c:	ce 01       	movw	r24, r28
    698e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6992:	60 e0       	ldi	r22, 0x00	; 0
    6994:	ce 01       	movw	r24, r28
    6996:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    699a:	61 e0       	ldi	r22, 0x01	; 1
    699c:	ce 01       	movw	r24, r28
    699e:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    69a2:	6f ed       	ldi	r22, 0xDF	; 223
    69a4:	ce 01       	movw	r24, r28
    69a6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    69aa:	6b e2       	ldi	r22, 0x2B	; 43
    69ac:	ce 01       	movw	r24, r28
    69ae:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    69b2:	60 e0       	ldi	r22, 0x00	; 0
    69b4:	ce 01       	movw	r24, r28
    69b6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    69ba:	60 e0       	ldi	r22, 0x00	; 0
    69bc:	ce 01       	movw	r24, r28
    69be:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    69c2:	61 e0       	ldi	r22, 0x01	; 1
    69c4:	ce 01       	movw	r24, r28
    69c6:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    69ca:	6f e3       	ldi	r22, 0x3F	; 63
    69cc:	ce 01       	movw	r24, r28
    69ce:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    69d2:	62 e3       	ldi	r22, 0x32	; 50
    69d4:	70 e0       	ldi	r23, 0x00	; 0
    69d6:	80 e0       	ldi	r24, 0x00	; 0
    69d8:	90 e0       	ldi	r25, 0x00	; 0
    69da:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    69de:	69 e2       	ldi	r22, 0x29	; 41
    69e0:	ce 01       	movw	r24, r28
    69e2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    69e6:	6c e2       	ldi	r22, 0x2C	; 44
    69e8:	0c 94 1b 27 	jmp	0x4e36	; 0x4e36 <_ZN4UTFT7InitLCDEh+0x7f4>
    69ec:	8c 81       	ldd	r24, Y+4	; 0x04
    69ee:	81 30       	cpi	r24, 0x01	; 1
    69f0:	11 f4       	brne	.+4      	; 0x69f6 <_ZN4UTFT7InitLCDEh+0x23b4>
    69f2:	1c 82       	std	Y+4, r1	; 0x04
    69f4:	02 c0       	rjmp	.+4      	; 0x69fa <_ZN4UTFT7InitLCDEh+0x23b8>
    69f6:	81 e0       	ldi	r24, 0x01	; 1
    69f8:	8c 83       	std	Y+4, r24	; 0x04
    69fa:	6f e0       	ldi	r22, 0x0F	; 15
    69fc:	ce 01       	movw	r24, r28
    69fe:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6a02:	40 e1       	ldi	r20, 0x10	; 16
    6a04:	50 e0       	ldi	r21, 0x00	; 0
    6a06:	61 e0       	ldi	r22, 0x01	; 1
    6a08:	ce 01       	movw	r24, r28
    6a0a:	0e 94 d1 21 	call	0x43a2	; 0x43a2 <_ZN4UTFT18LCD_Write_COM_DATAEci>
    6a0e:	6f e0       	ldi	r22, 0x0F	; 15
    6a10:	0c 94 1b 27 	jmp	0x4e36	; 0x4e36 <_ZN4UTFT7InitLCDEh+0x7f4>
    6a14:	69 eb       	ldi	r22, 0xB9	; 185
    6a16:	ce 01       	movw	r24, r28
    6a18:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6a1c:	6f ef       	ldi	r22, 0xFF	; 255
    6a1e:	ce 01       	movw	r24, r28
    6a20:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a24:	63 e8       	ldi	r22, 0x83	; 131
    6a26:	ce 01       	movw	r24, r28
    6a28:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a2c:	63 e5       	ldi	r22, 0x53	; 83
    6a2e:	ce 01       	movw	r24, r28
    6a30:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a34:	60 eb       	ldi	r22, 0xB0	; 176
    6a36:	ce 01       	movw	r24, r28
    6a38:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6a3c:	6c e3       	ldi	r22, 0x3C	; 60
    6a3e:	ce 01       	movw	r24, r28
    6a40:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a44:	61 e0       	ldi	r22, 0x01	; 1
    6a46:	ce 01       	movw	r24, r28
    6a48:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a4c:	66 eb       	ldi	r22, 0xB6	; 182
    6a4e:	ce 01       	movw	r24, r28
    6a50:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6a54:	64 e9       	ldi	r22, 0x94	; 148
    6a56:	ce 01       	movw	r24, r28
    6a58:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a5c:	6c e6       	ldi	r22, 0x6C	; 108
    6a5e:	ce 01       	movw	r24, r28
    6a60:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a64:	60 e5       	ldi	r22, 0x50	; 80
    6a66:	ce 01       	movw	r24, r28
    6a68:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a6c:	61 eb       	ldi	r22, 0xB1	; 177
    6a6e:	ce 01       	movw	r24, r28
    6a70:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6a74:	60 e0       	ldi	r22, 0x00	; 0
    6a76:	ce 01       	movw	r24, r28
    6a78:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a7c:	61 e0       	ldi	r22, 0x01	; 1
    6a7e:	ce 01       	movw	r24, r28
    6a80:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a84:	6b e1       	ldi	r22, 0x1B	; 27
    6a86:	ce 01       	movw	r24, r28
    6a88:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a8c:	63 e0       	ldi	r22, 0x03	; 3
    6a8e:	ce 01       	movw	r24, r28
    6a90:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a94:	61 e0       	ldi	r22, 0x01	; 1
    6a96:	ce 01       	movw	r24, r28
    6a98:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6a9c:	68 e0       	ldi	r22, 0x08	; 8
    6a9e:	ce 01       	movw	r24, r28
    6aa0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6aa4:	67 e7       	ldi	r22, 0x77	; 119
    6aa6:	ce 01       	movw	r24, r28
    6aa8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6aac:	69 e8       	ldi	r22, 0x89	; 137
    6aae:	ce 01       	movw	r24, r28
    6ab0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6ab4:	60 ee       	ldi	r22, 0xE0	; 224
    6ab6:	ce 01       	movw	r24, r28
    6ab8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6abc:	60 e5       	ldi	r22, 0x50	; 80
    6abe:	ce 01       	movw	r24, r28
    6ac0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6ac4:	67 e7       	ldi	r22, 0x77	; 119
    6ac6:	ce 01       	movw	r24, r28
    6ac8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6acc:	60 e4       	ldi	r22, 0x40	; 64
    6ace:	ce 01       	movw	r24, r28
    6ad0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6ad4:	68 e0       	ldi	r22, 0x08	; 8
    6ad6:	ce 01       	movw	r24, r28
    6ad8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6adc:	6f eb       	ldi	r22, 0xBF	; 191
    6ade:	ce 01       	movw	r24, r28
    6ae0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6ae4:	60 e0       	ldi	r22, 0x00	; 0
    6ae6:	ce 01       	movw	r24, r28
    6ae8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6aec:	63 e0       	ldi	r22, 0x03	; 3
    6aee:	ce 01       	movw	r24, r28
    6af0:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6af4:	6f e0       	ldi	r22, 0x0F	; 15
    6af6:	ce 01       	movw	r24, r28
    6af8:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6afc:	60 e0       	ldi	r22, 0x00	; 0
    6afe:	ce 01       	movw	r24, r28
    6b00:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b04:	61 e0       	ldi	r22, 0x01	; 1
    6b06:	ce 01       	movw	r24, r28
    6b08:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b0c:	63 e7       	ldi	r22, 0x73	; 115
    6b0e:	ce 01       	movw	r24, r28
    6b10:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b14:	60 e0       	ldi	r22, 0x00	; 0
    6b16:	ce 01       	movw	r24, r28
    6b18:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b1c:	62 e7       	ldi	r22, 0x72	; 114
    6b1e:	ce 01       	movw	r24, r28
    6b20:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b24:	63 e0       	ldi	r22, 0x03	; 3
    6b26:	ce 01       	movw	r24, r28
    6b28:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b2c:	60 eb       	ldi	r22, 0xB0	; 176
    6b2e:	ce 01       	movw	r24, r28
    6b30:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b34:	6f e0       	ldi	r22, 0x0F	; 15
    6b36:	ce 01       	movw	r24, r28
    6b38:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b3c:	68 e0       	ldi	r22, 0x08	; 8
    6b3e:	ce 01       	movw	r24, r28
    6b40:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b44:	60 e0       	ldi	r22, 0x00	; 0
    6b46:	ce 01       	movw	r24, r28
    6b48:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b4c:	6f e0       	ldi	r22, 0x0F	; 15
    6b4e:	ce 01       	movw	r24, r28
    6b50:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b54:	6a e3       	ldi	r22, 0x3A	; 58
    6b56:	ce 01       	movw	r24, r28
    6b58:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6b5c:	65 e0       	ldi	r22, 0x05	; 5
    6b5e:	ce 01       	movw	r24, r28
    6b60:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b64:	66 e3       	ldi	r22, 0x36	; 54
    6b66:	ce 01       	movw	r24, r28
    6b68:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6b6c:	60 ec       	ldi	r22, 0xC0	; 192
    6b6e:	ce 01       	movw	r24, r28
    6b70:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6b74:	61 e1       	ldi	r22, 0x11	; 17
    6b76:	ce 01       	movw	r24, r28
    6b78:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6b7c:	66 e9       	ldi	r22, 0x96	; 150
    6b7e:	70 e0       	ldi	r23, 0x00	; 0
    6b80:	80 e0       	ldi	r24, 0x00	; 0
    6b82:	90 e0       	ldi	r25, 0x00	; 0
    6b84:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    6b88:	69 e2       	ldi	r22, 0x29	; 41
    6b8a:	ce 01       	movw	r24, r28
    6b8c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6b90:	66 e9       	ldi	r22, 0x96	; 150
    6b92:	70 e0       	ldi	r23, 0x00	; 0
    6b94:	80 e0       	ldi	r24, 0x00	; 0
    6b96:	90 e0       	ldi	r25, 0x00	; 0
    6b98:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    6b9c:	6d e2       	ldi	r22, 0x2D	; 45
    6b9e:	ce 01       	movw	r24, r28
    6ba0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6ba4:	10 e0       	ldi	r17, 0x00	; 0
    6ba6:	61 2f       	mov	r22, r17
    6ba8:	ce 01       	movw	r24, r28
    6baa:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6bae:	1e 5f       	subi	r17, 0xFE	; 254
    6bb0:	10 34       	cpi	r17, 0x40	; 64
    6bb2:	c9 f7       	brne	.-14     	; 0x6ba6 <_ZN4UTFT7InitLCDEh+0x2564>
    6bb4:	10 e0       	ldi	r17, 0x00	; 0
    6bb6:	61 2f       	mov	r22, r17
    6bb8:	ce 01       	movw	r24, r28
    6bba:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6bbe:	1f 5f       	subi	r17, 0xFF	; 255
    6bc0:	10 34       	cpi	r17, 0x40	; 64
    6bc2:	c9 f7       	brne	.-14     	; 0x6bb6 <_ZN4UTFT7InitLCDEh+0x2574>
    6bc4:	10 e0       	ldi	r17, 0x00	; 0
    6bc6:	61 2f       	mov	r22, r17
    6bc8:	ce 01       	movw	r24, r28
    6bca:	0e 94 b9 21 	call	0x4372	; 0x4372 <_ZN4UTFT14LCD_Write_DATAEc>
    6bce:	1e 5f       	subi	r17, 0xFE	; 254
    6bd0:	10 34       	cpi	r17, 0x40	; 64
    6bd2:	c9 f7       	brne	.-14     	; 0x6bc6 <_ZN4UTFT7InitLCDEh+0x2584>
    6bd4:	6c e2       	ldi	r22, 0x2C	; 44
    6bd6:	ce 01       	movw	r24, r28
    6bd8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN4UTFT13LCD_Write_COMEc>
    6bdc:	66 e9       	ldi	r22, 0x96	; 150
    6bde:	70 e0       	ldi	r23, 0x00	; 0
    6be0:	80 e0       	ldi	r24, 0x00	; 0
    6be2:	90 e0       	ldi	r25, 0x00	; 0
    6be4:	0e 94 f8 47 	call	0x8ff0	; 0x8ff0 <delay>
    6be8:	ec 89       	ldd	r30, Y+20	; 0x14
    6bea:	fd 89       	ldd	r31, Y+21	; 0x15
    6bec:	90 81       	ld	r25, Z
    6bee:	88 a1       	ldd	r24, Y+32	; 0x20
    6bf0:	89 2b       	or	r24, r25
    6bf2:	80 83       	st	Z, r24
    6bf4:	8f ef       	ldi	r24, 0xFF	; 255
    6bf6:	88 83       	st	Y, r24
    6bf8:	89 83       	std	Y+1, r24	; 0x01
    6bfa:	1a 82       	std	Y+2, r1	; 0x02
    6bfc:	1b 82       	std	Y+3, r1	; 0x03
    6bfe:	18 aa       	std	Y+48, r1	; 0x30
    6c00:	1b a6       	std	Y+43, r1	; 0x2b
    6c02:	1a a6       	std	Y+42, r1	; 0x2a
    6c04:	df 91       	pop	r29
    6c06:	cf 91       	pop	r28
    6c08:	1f 91       	pop	r17
    6c0a:	0f 91       	pop	r16
    6c0c:	08 95       	ret

00006c0e <_ZN4UTFT5clrXYEv>:
    6c0e:	0f 93       	push	r16
    6c10:	1f 93       	push	r17
    6c12:	fc 01       	movw	r30, r24
    6c14:	64 81       	ldd	r22, Z+4	; 0x04
    6c16:	21 85       	ldd	r18, Z+9	; 0x09
    6c18:	32 85       	ldd	r19, Z+10	; 0x0a
    6c1a:	45 81       	ldd	r20, Z+5	; 0x05
    6c1c:	56 81       	ldd	r21, Z+6	; 0x06
    6c1e:	61 11       	cpse	r22, r1
    6c20:	03 c0       	rjmp	.+6      	; 0x6c28 <_ZN4UTFT5clrXYEv+0x1a>
    6c22:	89 01       	movw	r16, r18
    6c24:	9a 01       	movw	r18, r20
    6c26:	01 c0       	rjmp	.+2      	; 0x6c2a <_ZN4UTFT5clrXYEv+0x1c>
    6c28:	8a 01       	movw	r16, r20
    6c2a:	40 e0       	ldi	r20, 0x00	; 0
    6c2c:	50 e0       	ldi	r21, 0x00	; 0
    6c2e:	60 e0       	ldi	r22, 0x00	; 0
    6c30:	70 e0       	ldi	r23, 0x00	; 0
    6c32:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
    6c36:	1f 91       	pop	r17
    6c38:	0f 91       	pop	r16
    6c3a:	08 95       	ret

00006c3c <_ZN4UTFT6clrScrEv>:
    6c3c:	cf 92       	push	r12
    6c3e:	df 92       	push	r13
    6c40:	ef 92       	push	r14
    6c42:	ff 92       	push	r15
    6c44:	0f 93       	push	r16
    6c46:	1f 93       	push	r17
    6c48:	cf 93       	push	r28
    6c4a:	df 93       	push	r29
    6c4c:	ec 01       	movw	r28, r24
    6c4e:	ec 89       	ldd	r30, Y+20	; 0x14
    6c50:	fd 89       	ldd	r31, Y+21	; 0x15
    6c52:	90 81       	ld	r25, Z
    6c54:	88 a1       	ldd	r24, Y+32	; 0x20
    6c56:	80 95       	com	r24
    6c58:	89 23       	and	r24, r25
    6c5a:	80 83       	st	Z, r24
    6c5c:	ce 01       	movw	r24, r28
    6c5e:	d7 df       	rcall	.-82     	; 0x6c0e <_ZN4UTFT5clrXYEv>
    6c60:	8e 85       	ldd	r24, Y+14	; 0x0e
    6c62:	81 30       	cpi	r24, 0x01	; 1
    6c64:	31 f0       	breq	.+12     	; 0x6c72 <_ZN4UTFT6clrScrEv+0x36>
    6c66:	e8 89       	ldd	r30, Y+16	; 0x10
    6c68:	f9 89       	ldd	r31, Y+17	; 0x11
    6c6a:	90 81       	ld	r25, Z
    6c6c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6c6e:	89 2b       	or	r24, r25
    6c70:	80 83       	st	Z, r24
    6c72:	ee 85       	ldd	r30, Y+14	; 0x0e
    6c74:	4d 81       	ldd	r20, Y+5	; 0x05
    6c76:	5e 81       	ldd	r21, Y+6	; 0x06
    6c78:	6f 81       	ldd	r22, Y+7	; 0x07
    6c7a:	78 85       	ldd	r23, Y+8	; 0x08
    6c7c:	89 85       	ldd	r24, Y+9	; 0x09
    6c7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    6c80:	ab 85       	ldd	r26, Y+11	; 0x0b
    6c82:	bc 85       	ldd	r27, Y+12	; 0x0c
    6c84:	e0 31       	cpi	r30, 0x10	; 16
    6c86:	c1 f4       	brne	.+48     	; 0x6cb8 <_ZN4UTFT6clrScrEv+0x7c>
    6c88:	9a 01       	movw	r18, r20
    6c8a:	ab 01       	movw	r20, r22
    6c8c:	2f 5f       	subi	r18, 0xFF	; 255
    6c8e:	3f 4f       	sbci	r19, 0xFF	; 255
    6c90:	4f 4f       	sbci	r20, 0xFF	; 255
    6c92:	5f 4f       	sbci	r21, 0xFF	; 255
    6c94:	bc 01       	movw	r22, r24
    6c96:	cd 01       	movw	r24, r26
    6c98:	6f 5f       	subi	r22, 0xFF	; 255
    6c9a:	7f 4f       	sbci	r23, 0xFF	; 255
    6c9c:	8f 4f       	sbci	r24, 0xFF	; 255
    6c9e:	9f 4f       	sbci	r25, 0xFF	; 255
    6ca0:	0e 94 41 4a 	call	0x9482	; 0x9482 <__mulsi3>
    6ca4:	8b 01       	movw	r16, r22
    6ca6:	9c 01       	movw	r18, r24
    6ca8:	40 e0       	ldi	r20, 0x00	; 0
    6caa:	50 e0       	ldi	r21, 0x00	; 0
    6cac:	60 e0       	ldi	r22, 0x00	; 0
    6cae:	70 e0       	ldi	r23, 0x00	; 0
    6cb0:	ce 01       	movw	r24, r28
    6cb2:	0e 94 95 1c 	call	0x392a	; 0x392a <_ZN4UTFT13_fast_fill_16Eiil>
    6cb6:	4f c0       	rjmp	.+158    	; 0x6d56 <_ZN4UTFT6clrScrEv+0x11a>
    6cb8:	e8 30       	cpi	r30, 0x08	; 8
    6cba:	21 f0       	breq	.+8      	; 0x6cc4 <_ZN4UTFT6clrScrEv+0x88>
    6cbc:	c1 2c       	mov	r12, r1
    6cbe:	d1 2c       	mov	r13, r1
    6cc0:	76 01       	movw	r14, r12
    6cc2:	23 c0       	rjmp	.+70     	; 0x6d0a <_ZN4UTFT6clrScrEv+0xce>
    6cc4:	9a 01       	movw	r18, r20
    6cc6:	ab 01       	movw	r20, r22
    6cc8:	2f 5f       	subi	r18, 0xFF	; 255
    6cca:	3f 4f       	sbci	r19, 0xFF	; 255
    6ccc:	4f 4f       	sbci	r20, 0xFF	; 255
    6cce:	5f 4f       	sbci	r21, 0xFF	; 255
    6cd0:	bc 01       	movw	r22, r24
    6cd2:	cd 01       	movw	r24, r26
    6cd4:	6f 5f       	subi	r22, 0xFF	; 255
    6cd6:	7f 4f       	sbci	r23, 0xFF	; 255
    6cd8:	8f 4f       	sbci	r24, 0xFF	; 255
    6cda:	9f 4f       	sbci	r25, 0xFF	; 255
    6cdc:	0e 94 41 4a 	call	0x9482	; 0x9482 <__mulsi3>
    6ce0:	9b 01       	movw	r18, r22
    6ce2:	ac 01       	movw	r20, r24
    6ce4:	60 e0       	ldi	r22, 0x00	; 0
    6ce6:	70 e0       	ldi	r23, 0x00	; 0
    6ce8:	ce 01       	movw	r24, r28
    6cea:	0e 94 c7 1d 	call	0x3b8e	; 0x3b8e <_ZN4UTFT12_fast_fill_8Eil>
    6cee:	33 c0       	rjmp	.+102    	; 0x6d56 <_ZN4UTFT6clrScrEv+0x11a>
    6cf0:	2e 85       	ldd	r18, Y+14	; 0x0e
    6cf2:	21 30       	cpi	r18, 0x01	; 1
    6cf4:	31 f1       	breq	.+76     	; 0x6d42 <_ZN4UTFT6clrScrEv+0x106>
    6cf6:	40 e0       	ldi	r20, 0x00	; 0
    6cf8:	60 e0       	ldi	r22, 0x00	; 0
    6cfa:	ce 01       	movw	r24, r28
    6cfc:	0e 94 ee 1a 	call	0x35dc	; 0x35dc <_ZN4UTFT12LCD_Writ_BusEcch>
    6d00:	8f ef       	ldi	r24, 0xFF	; 255
    6d02:	c8 1a       	sub	r12, r24
    6d04:	d8 0a       	sbc	r13, r24
    6d06:	e8 0a       	sbc	r14, r24
    6d08:	f8 0a       	sbc	r15, r24
    6d0a:	8d 81       	ldd	r24, Y+5	; 0x05
    6d0c:	9e 81       	ldd	r25, Y+6	; 0x06
    6d0e:	af 81       	ldd	r26, Y+7	; 0x07
    6d10:	b8 85       	ldd	r27, Y+8	; 0x08
    6d12:	9c 01       	movw	r18, r24
    6d14:	ad 01       	movw	r20, r26
    6d16:	2f 5f       	subi	r18, 0xFF	; 255
    6d18:	3f 4f       	sbci	r19, 0xFF	; 255
    6d1a:	4f 4f       	sbci	r20, 0xFF	; 255
    6d1c:	5f 4f       	sbci	r21, 0xFF	; 255
    6d1e:	89 85       	ldd	r24, Y+9	; 0x09
    6d20:	9a 85       	ldd	r25, Y+10	; 0x0a
    6d22:	ab 85       	ldd	r26, Y+11	; 0x0b
    6d24:	bc 85       	ldd	r27, Y+12	; 0x0c
    6d26:	bc 01       	movw	r22, r24
    6d28:	cd 01       	movw	r24, r26
    6d2a:	6f 5f       	subi	r22, 0xFF	; 255
    6d2c:	7f 4f       	sbci	r23, 0xFF	; 255
    6d2e:	8f 4f       	sbci	r24, 0xFF	; 255
    6d30:	9f 4f       	sbci	r25, 0xFF	; 255
    6d32:	0e 94 41 4a 	call	0x9482	; 0x9482 <__mulsi3>
    6d36:	c6 16       	cp	r12, r22
    6d38:	d7 06       	cpc	r13, r23
    6d3a:	e8 06       	cpc	r14, r24
    6d3c:	f9 06       	cpc	r15, r25
    6d3e:	c4 f2       	brlt	.-80     	; 0x6cf0 <_ZN4UTFT6clrScrEv+0xb4>
    6d40:	0a c0       	rjmp	.+20     	; 0x6d56 <_ZN4UTFT6clrScrEv+0x11a>
    6d42:	21 e0       	ldi	r18, 0x01	; 1
    6d44:	40 e0       	ldi	r20, 0x00	; 0
    6d46:	61 e0       	ldi	r22, 0x01	; 1
    6d48:	ce 01       	movw	r24, r28
    6d4a:	0e 94 ee 1a 	call	0x35dc	; 0x35dc <_ZN4UTFT12LCD_Writ_BusEcch>
    6d4e:	2e 85       	ldd	r18, Y+14	; 0x0e
    6d50:	40 e0       	ldi	r20, 0x00	; 0
    6d52:	61 e0       	ldi	r22, 0x01	; 1
    6d54:	d2 cf       	rjmp	.-92     	; 0x6cfa <_ZN4UTFT6clrScrEv+0xbe>
    6d56:	ec 89       	ldd	r30, Y+20	; 0x14
    6d58:	fd 89       	ldd	r31, Y+21	; 0x15
    6d5a:	90 81       	ld	r25, Z
    6d5c:	88 a1       	ldd	r24, Y+32	; 0x20
    6d5e:	89 2b       	or	r24, r25
    6d60:	80 83       	st	Z, r24
    6d62:	df 91       	pop	r29
    6d64:	cf 91       	pop	r28
    6d66:	1f 91       	pop	r17
    6d68:	0f 91       	pop	r16
    6d6a:	ff 90       	pop	r15
    6d6c:	ef 90       	pop	r14
    6d6e:	df 90       	pop	r13
    6d70:	cf 90       	pop	r12
    6d72:	08 95       	ret

00006d74 <_ZN4UTFT8setColorEj>:
    6d74:	fc 01       	movw	r30, r24
    6d76:	70 83       	st	Z, r23
    6d78:	61 83       	std	Z+1, r22	; 0x01
    6d7a:	08 95       	ret

00006d7c <_ZN4UTFT12setBackColorEm>:
    6d7c:	fc 01       	movw	r30, r24
    6d7e:	4f 3f       	cpi	r20, 0xFF	; 255
    6d80:	8f ef       	ldi	r24, 0xFF	; 255
    6d82:	58 07       	cpc	r21, r24
    6d84:	68 07       	cpc	r22, r24
    6d86:	78 07       	cpc	r23, r24
    6d88:	19 f4       	brne	.+6      	; 0x6d90 <_ZN4UTFT12setBackColorEm+0x14>
    6d8a:	81 e0       	ldi	r24, 0x01	; 1
    6d8c:	80 ab       	std	Z+48, r24	; 0x30
    6d8e:	08 95       	ret
    6d90:	52 83       	std	Z+2, r21	; 0x02
    6d92:	43 83       	std	Z+3, r20	; 0x03
    6d94:	10 aa       	std	Z+48, r1	; 0x30
    6d96:	08 95       	ret

00006d98 <_ZN4UTFT8setPixelEj>:
    6d98:	46 2f       	mov	r20, r22
    6d9a:	67 2f       	mov	r22, r23
    6d9c:	0c 94 95 21 	jmp	0x432a	; 0x432a <_ZN4UTFT14LCD_Write_DATAEcc>

00006da0 <_ZN4UTFT9drawHLineEiii>:
    6da0:	ef 92       	push	r14
    6da2:	ff 92       	push	r15
    6da4:	0f 93       	push	r16
    6da6:	1f 93       	push	r17
    6da8:	cf 93       	push	r28
    6daa:	df 93       	push	r29
    6dac:	ec 01       	movw	r28, r24
    6dae:	79 01       	movw	r14, r18
    6db0:	37 ff       	sbrs	r19, 7
    6db2:	05 c0       	rjmp	.+10     	; 0x6dbe <_ZN4UTFT9drawHLineEiii+0x1e>
    6db4:	62 0f       	add	r22, r18
    6db6:	73 1f       	adc	r23, r19
    6db8:	f1 94       	neg	r15
    6dba:	e1 94       	neg	r14
    6dbc:	f1 08       	sbc	r15, r1
    6dbe:	ec 89       	ldd	r30, Y+20	; 0x14
    6dc0:	fd 89       	ldd	r31, Y+21	; 0x15
    6dc2:	90 81       	ld	r25, Z
    6dc4:	88 a1       	ldd	r24, Y+32	; 0x20
    6dc6:	80 95       	com	r24
    6dc8:	89 23       	and	r24, r25
    6dca:	80 83       	st	Z, r24
    6dcc:	9b 01       	movw	r18, r22
    6dce:	2e 0d       	add	r18, r14
    6dd0:	3f 1d       	adc	r19, r15
    6dd2:	8a 01       	movw	r16, r20
    6dd4:	ce 01       	movw	r24, r28
    6dd6:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
    6dda:	8e 85       	ldd	r24, Y+14	; 0x0e
    6ddc:	80 31       	cpi	r24, 0x10	; 16
    6dde:	91 f4       	brne	.+36     	; 0x6e04 <_ZN4UTFT9drawHLineEiii+0x64>
    6de0:	e8 89       	ldd	r30, Y+16	; 0x10
    6de2:	f9 89       	ldd	r31, Y+17	; 0x11
    6de4:	90 81       	ld	r25, Z
    6de6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6de8:	89 2b       	or	r24, r25
    6dea:	80 83       	st	Z, r24
    6dec:	87 01       	movw	r16, r14
    6dee:	ff 0c       	add	r15, r15
    6df0:	22 0b       	sbc	r18, r18
    6df2:	33 0b       	sbc	r19, r19
    6df4:	49 81       	ldd	r20, Y+1	; 0x01
    6df6:	50 e0       	ldi	r21, 0x00	; 0
    6df8:	68 81       	ld	r22, Y
    6dfa:	70 e0       	ldi	r23, 0x00	; 0
    6dfc:	ce 01       	movw	r24, r28
    6dfe:	0e 94 95 1c 	call	0x392a	; 0x392a <_ZN4UTFT13_fast_fill_16Eiil>
    6e02:	22 c0       	rjmp	.+68     	; 0x6e48 <_ZN4UTFT9drawHLineEiii+0xa8>
    6e04:	88 30       	cpi	r24, 0x08	; 8
    6e06:	a1 f4       	brne	.+40     	; 0x6e30 <_ZN4UTFT9drawHLineEiii+0x90>
    6e08:	98 81       	ld	r25, Y
    6e0a:	89 81       	ldd	r24, Y+1	; 0x01
    6e0c:	98 13       	cpse	r25, r24
    6e0e:	10 c0       	rjmp	.+32     	; 0x6e30 <_ZN4UTFT9drawHLineEiii+0x90>
    6e10:	e8 89       	ldd	r30, Y+16	; 0x10
    6e12:	f9 89       	ldd	r31, Y+17	; 0x11
    6e14:	90 81       	ld	r25, Z
    6e16:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6e18:	89 2b       	or	r24, r25
    6e1a:	80 83       	st	Z, r24
    6e1c:	97 01       	movw	r18, r14
    6e1e:	ff 0c       	add	r15, r15
    6e20:	44 0b       	sbc	r20, r20
    6e22:	55 0b       	sbc	r21, r21
    6e24:	68 81       	ld	r22, Y
    6e26:	70 e0       	ldi	r23, 0x00	; 0
    6e28:	ce 01       	movw	r24, r28
    6e2a:	0e 94 c7 1d 	call	0x3b8e	; 0x3b8e <_ZN4UTFT12_fast_fill_8Eil>
    6e2e:	0c c0       	rjmp	.+24     	; 0x6e48 <_ZN4UTFT9drawHLineEiii+0xa8>
    6e30:	00 e0       	ldi	r16, 0x00	; 0
    6e32:	10 e0       	ldi	r17, 0x00	; 0
    6e34:	49 81       	ldd	r20, Y+1	; 0x01
    6e36:	68 81       	ld	r22, Y
    6e38:	ce 01       	movw	r24, r28
    6e3a:	0e 94 95 21 	call	0x432a	; 0x432a <_ZN4UTFT14LCD_Write_DATAEcc>
    6e3e:	0f 5f       	subi	r16, 0xFF	; 255
    6e40:	1f 4f       	sbci	r17, 0xFF	; 255
    6e42:	e0 16       	cp	r14, r16
    6e44:	f1 06       	cpc	r15, r17
    6e46:	b4 f7       	brge	.-20     	; 0x6e34 <_ZN4UTFT9drawHLineEiii+0x94>
    6e48:	ec 89       	ldd	r30, Y+20	; 0x14
    6e4a:	fd 89       	ldd	r31, Y+21	; 0x15
    6e4c:	90 81       	ld	r25, Z
    6e4e:	88 a1       	ldd	r24, Y+32	; 0x20
    6e50:	89 2b       	or	r24, r25
    6e52:	80 83       	st	Z, r24
    6e54:	ce 01       	movw	r24, r28
    6e56:	df 91       	pop	r29
    6e58:	cf 91       	pop	r28
    6e5a:	1f 91       	pop	r17
    6e5c:	0f 91       	pop	r16
    6e5e:	ff 90       	pop	r15
    6e60:	ef 90       	pop	r14
    6e62:	d5 ce       	rjmp	.-598    	; 0x6c0e <_ZN4UTFT5clrXYEv>

00006e64 <_ZN4UTFT9drawVLineEiii>:
    6e64:	ef 92       	push	r14
    6e66:	ff 92       	push	r15
    6e68:	0f 93       	push	r16
    6e6a:	1f 93       	push	r17
    6e6c:	cf 93       	push	r28
    6e6e:	df 93       	push	r29
    6e70:	ec 01       	movw	r28, r24
    6e72:	79 01       	movw	r14, r18
    6e74:	37 ff       	sbrs	r19, 7
    6e76:	05 c0       	rjmp	.+10     	; 0x6e82 <_ZN4UTFT9drawVLineEiii+0x1e>
    6e78:	42 0f       	add	r20, r18
    6e7a:	53 1f       	adc	r21, r19
    6e7c:	f1 94       	neg	r15
    6e7e:	e1 94       	neg	r14
    6e80:	f1 08       	sbc	r15, r1
    6e82:	ec 89       	ldd	r30, Y+20	; 0x14
    6e84:	fd 89       	ldd	r31, Y+21	; 0x15
    6e86:	90 81       	ld	r25, Z
    6e88:	88 a1       	ldd	r24, Y+32	; 0x20
    6e8a:	80 95       	com	r24
    6e8c:	89 23       	and	r24, r25
    6e8e:	80 83       	st	Z, r24
    6e90:	8a 01       	movw	r16, r20
    6e92:	0e 0d       	add	r16, r14
    6e94:	1f 1d       	adc	r17, r15
    6e96:	9b 01       	movw	r18, r22
    6e98:	ce 01       	movw	r24, r28
    6e9a:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
    6e9e:	8e 85       	ldd	r24, Y+14	; 0x0e
    6ea0:	80 31       	cpi	r24, 0x10	; 16
    6ea2:	91 f4       	brne	.+36     	; 0x6ec8 <_ZN4UTFT9drawVLineEiii+0x64>
    6ea4:	e8 89       	ldd	r30, Y+16	; 0x10
    6ea6:	f9 89       	ldd	r31, Y+17	; 0x11
    6ea8:	90 81       	ld	r25, Z
    6eaa:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6eac:	89 2b       	or	r24, r25
    6eae:	80 83       	st	Z, r24
    6eb0:	87 01       	movw	r16, r14
    6eb2:	ff 0c       	add	r15, r15
    6eb4:	22 0b       	sbc	r18, r18
    6eb6:	33 0b       	sbc	r19, r19
    6eb8:	49 81       	ldd	r20, Y+1	; 0x01
    6eba:	50 e0       	ldi	r21, 0x00	; 0
    6ebc:	68 81       	ld	r22, Y
    6ebe:	70 e0       	ldi	r23, 0x00	; 0
    6ec0:	ce 01       	movw	r24, r28
    6ec2:	0e 94 95 1c 	call	0x392a	; 0x392a <_ZN4UTFT13_fast_fill_16Eiil>
    6ec6:	22 c0       	rjmp	.+68     	; 0x6f0c <_ZN4UTFT9drawVLineEiii+0xa8>
    6ec8:	88 30       	cpi	r24, 0x08	; 8
    6eca:	a1 f4       	brne	.+40     	; 0x6ef4 <_ZN4UTFT9drawVLineEiii+0x90>
    6ecc:	98 81       	ld	r25, Y
    6ece:	89 81       	ldd	r24, Y+1	; 0x01
    6ed0:	98 13       	cpse	r25, r24
    6ed2:	10 c0       	rjmp	.+32     	; 0x6ef4 <_ZN4UTFT9drawVLineEiii+0x90>
    6ed4:	e8 89       	ldd	r30, Y+16	; 0x10
    6ed6:	f9 89       	ldd	r31, Y+17	; 0x11
    6ed8:	90 81       	ld	r25, Z
    6eda:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6edc:	89 2b       	or	r24, r25
    6ede:	80 83       	st	Z, r24
    6ee0:	97 01       	movw	r18, r14
    6ee2:	ff 0c       	add	r15, r15
    6ee4:	44 0b       	sbc	r20, r20
    6ee6:	55 0b       	sbc	r21, r21
    6ee8:	68 81       	ld	r22, Y
    6eea:	70 e0       	ldi	r23, 0x00	; 0
    6eec:	ce 01       	movw	r24, r28
    6eee:	0e 94 c7 1d 	call	0x3b8e	; 0x3b8e <_ZN4UTFT12_fast_fill_8Eil>
    6ef2:	0c c0       	rjmp	.+24     	; 0x6f0c <_ZN4UTFT9drawVLineEiii+0xa8>
    6ef4:	00 e0       	ldi	r16, 0x00	; 0
    6ef6:	10 e0       	ldi	r17, 0x00	; 0
    6ef8:	49 81       	ldd	r20, Y+1	; 0x01
    6efa:	68 81       	ld	r22, Y
    6efc:	ce 01       	movw	r24, r28
    6efe:	0e 94 95 21 	call	0x432a	; 0x432a <_ZN4UTFT14LCD_Write_DATAEcc>
    6f02:	0f 5f       	subi	r16, 0xFF	; 255
    6f04:	1f 4f       	sbci	r17, 0xFF	; 255
    6f06:	e0 16       	cp	r14, r16
    6f08:	f1 06       	cpc	r15, r17
    6f0a:	b4 f7       	brge	.-20     	; 0x6ef8 <_ZN4UTFT9drawVLineEiii+0x94>
    6f0c:	ec 89       	ldd	r30, Y+20	; 0x14
    6f0e:	fd 89       	ldd	r31, Y+21	; 0x15
    6f10:	90 81       	ld	r25, Z
    6f12:	88 a1       	ldd	r24, Y+32	; 0x20
    6f14:	89 2b       	or	r24, r25
    6f16:	80 83       	st	Z, r24
    6f18:	ce 01       	movw	r24, r28
    6f1a:	df 91       	pop	r29
    6f1c:	cf 91       	pop	r28
    6f1e:	1f 91       	pop	r17
    6f20:	0f 91       	pop	r16
    6f22:	ff 90       	pop	r15
    6f24:	ef 90       	pop	r14
    6f26:	73 ce       	rjmp	.-794    	; 0x6c0e <_ZN4UTFT5clrXYEv>

00006f28 <_ZN4UTFT8fillRectEiiii>:
    6f28:	6f 92       	push	r6
    6f2a:	7f 92       	push	r7
    6f2c:	8f 92       	push	r8
    6f2e:	9f 92       	push	r9
    6f30:	af 92       	push	r10
    6f32:	bf 92       	push	r11
    6f34:	cf 92       	push	r12
    6f36:	df 92       	push	r13
    6f38:	ef 92       	push	r14
    6f3a:	ff 92       	push	r15
    6f3c:	0f 93       	push	r16
    6f3e:	1f 93       	push	r17
    6f40:	cf 93       	push	r28
    6f42:	df 93       	push	r29
    6f44:	ec 01       	movw	r28, r24
    6f46:	4b 01       	movw	r8, r22
    6f48:	5a 01       	movw	r10, r20
    6f4a:	69 01       	movw	r12, r18
    6f4c:	78 01       	movw	r14, r16
    6f4e:	26 17       	cp	r18, r22
    6f50:	37 07       	cpc	r19, r23
    6f52:	24 f4       	brge	.+8      	; 0x6f5c <_ZN4UTFT8fillRectEiiii+0x34>
    6f54:	89 2d       	mov	r24, r9
    6f56:	49 01       	movw	r8, r18
    6f58:	c6 2e       	mov	r12, r22
    6f5a:	d8 2e       	mov	r13, r24
    6f5c:	ea 14       	cp	r14, r10
    6f5e:	fb 04       	cpc	r15, r11
    6f60:	2c f4       	brge	.+10     	; 0x6f6c <_ZN4UTFT8fillRectEiiii+0x44>
    6f62:	9a 2d       	mov	r25, r10
    6f64:	8b 2d       	mov	r24, r11
    6f66:	57 01       	movw	r10, r14
    6f68:	e9 2e       	mov	r14, r25
    6f6a:	f8 2e       	mov	r15, r24
    6f6c:	8e 85       	ldd	r24, Y+14	; 0x0e
    6f6e:	80 31       	cpi	r24, 0x10	; 16
    6f70:	d9 f5       	brne	.+118    	; 0x6fe8 <_ZN4UTFT8fillRectEiiii+0xc0>
    6f72:	ec 89       	ldd	r30, Y+20	; 0x14
    6f74:	fd 89       	ldd	r31, Y+21	; 0x15
    6f76:	90 81       	ld	r25, Z
    6f78:	88 a1       	ldd	r24, Y+32	; 0x20
    6f7a:	80 95       	com	r24
    6f7c:	89 23       	and	r24, r25
    6f7e:	80 83       	st	Z, r24
    6f80:	87 01       	movw	r16, r14
    6f82:	96 01       	movw	r18, r12
    6f84:	a5 01       	movw	r20, r10
    6f86:	b4 01       	movw	r22, r8
    6f88:	ce 01       	movw	r24, r28
    6f8a:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
    6f8e:	e8 89       	ldd	r30, Y+16	; 0x10
    6f90:	f9 89       	ldd	r31, Y+17	; 0x11
    6f92:	90 81       	ld	r25, Z
    6f94:	8e 8d       	ldd	r24, Y+30	; 0x1e
    6f96:	89 2b       	or	r24, r25
    6f98:	80 83       	st	Z, r24
    6f9a:	96 01       	movw	r18, r12
    6f9c:	28 19       	sub	r18, r8
    6f9e:	39 09       	sbc	r19, r9
    6fa0:	c9 01       	movw	r24, r18
    6fa2:	33 0f       	add	r19, r19
    6fa4:	aa 0b       	sbc	r26, r26
    6fa6:	bb 0b       	sbc	r27, r27
    6fa8:	9c 01       	movw	r18, r24
    6faa:	ad 01       	movw	r20, r26
    6fac:	2f 5f       	subi	r18, 0xFF	; 255
    6fae:	3f 4f       	sbci	r19, 0xFF	; 255
    6fb0:	4f 4f       	sbci	r20, 0xFF	; 255
    6fb2:	5f 4f       	sbci	r21, 0xFF	; 255
    6fb4:	b7 01       	movw	r22, r14
    6fb6:	6a 19       	sub	r22, r10
    6fb8:	7b 09       	sbc	r23, r11
    6fba:	cb 01       	movw	r24, r22
    6fbc:	77 0f       	add	r23, r23
    6fbe:	aa 0b       	sbc	r26, r26
    6fc0:	bb 0b       	sbc	r27, r27
    6fc2:	bc 01       	movw	r22, r24
    6fc4:	cd 01       	movw	r24, r26
    6fc6:	6f 5f       	subi	r22, 0xFF	; 255
    6fc8:	7f 4f       	sbci	r23, 0xFF	; 255
    6fca:	8f 4f       	sbci	r24, 0xFF	; 255
    6fcc:	9f 4f       	sbci	r25, 0xFF	; 255
    6fce:	0e 94 41 4a 	call	0x9482	; 0x9482 <__mulsi3>
    6fd2:	8b 01       	movw	r16, r22
    6fd4:	9c 01       	movw	r18, r24
    6fd6:	49 81       	ldd	r20, Y+1	; 0x01
    6fd8:	50 e0       	ldi	r21, 0x00	; 0
    6fda:	88 81       	ld	r24, Y
    6fdc:	68 2f       	mov	r22, r24
    6fde:	70 e0       	ldi	r23, 0x00	; 0
    6fe0:	ce 01       	movw	r24, r28
    6fe2:	0e 94 95 1c 	call	0x392a	; 0x392a <_ZN4UTFT13_fast_fill_16Eiil>
    6fe6:	3f c0       	rjmp	.+126    	; 0x7066 <_ZN4UTFT8fillRectEiiii+0x13e>
    6fe8:	88 30       	cpi	r24, 0x08	; 8
    6fea:	09 f0       	breq	.+2      	; 0x6fee <_ZN4UTFT8fillRectEiiii+0xc6>
    6fec:	43 c0       	rjmp	.+134    	; 0x7074 <_ZN4UTFT8fillRectEiiii+0x14c>
    6fee:	98 81       	ld	r25, Y
    6ff0:	89 81       	ldd	r24, Y+1	; 0x01
    6ff2:	98 13       	cpse	r25, r24
    6ff4:	3f c0       	rjmp	.+126    	; 0x7074 <_ZN4UTFT8fillRectEiiii+0x14c>
    6ff6:	ec 89       	ldd	r30, Y+20	; 0x14
    6ff8:	fd 89       	ldd	r31, Y+21	; 0x15
    6ffa:	90 81       	ld	r25, Z
    6ffc:	88 a1       	ldd	r24, Y+32	; 0x20
    6ffe:	80 95       	com	r24
    7000:	89 23       	and	r24, r25
    7002:	80 83       	st	Z, r24
    7004:	87 01       	movw	r16, r14
    7006:	96 01       	movw	r18, r12
    7008:	a5 01       	movw	r20, r10
    700a:	b4 01       	movw	r22, r8
    700c:	ce 01       	movw	r24, r28
    700e:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
    7012:	e8 89       	ldd	r30, Y+16	; 0x10
    7014:	f9 89       	ldd	r31, Y+17	; 0x11
    7016:	90 81       	ld	r25, Z
    7018:	8e 8d       	ldd	r24, Y+30	; 0x1e
    701a:	89 2b       	or	r24, r25
    701c:	80 83       	st	Z, r24
    701e:	96 01       	movw	r18, r12
    7020:	28 19       	sub	r18, r8
    7022:	39 09       	sbc	r19, r9
    7024:	c9 01       	movw	r24, r18
    7026:	33 0f       	add	r19, r19
    7028:	aa 0b       	sbc	r26, r26
    702a:	bb 0b       	sbc	r27, r27
    702c:	9c 01       	movw	r18, r24
    702e:	ad 01       	movw	r20, r26
    7030:	2f 5f       	subi	r18, 0xFF	; 255
    7032:	3f 4f       	sbci	r19, 0xFF	; 255
    7034:	4f 4f       	sbci	r20, 0xFF	; 255
    7036:	5f 4f       	sbci	r21, 0xFF	; 255
    7038:	b7 01       	movw	r22, r14
    703a:	6a 19       	sub	r22, r10
    703c:	7b 09       	sbc	r23, r11
    703e:	cb 01       	movw	r24, r22
    7040:	77 0f       	add	r23, r23
    7042:	aa 0b       	sbc	r26, r26
    7044:	bb 0b       	sbc	r27, r27
    7046:	bc 01       	movw	r22, r24
    7048:	cd 01       	movw	r24, r26
    704a:	6f 5f       	subi	r22, 0xFF	; 255
    704c:	7f 4f       	sbci	r23, 0xFF	; 255
    704e:	8f 4f       	sbci	r24, 0xFF	; 255
    7050:	9f 4f       	sbci	r25, 0xFF	; 255
    7052:	0e 94 41 4a 	call	0x9482	; 0x9482 <__mulsi3>
    7056:	9b 01       	movw	r18, r22
    7058:	ac 01       	movw	r20, r24
    705a:	88 81       	ld	r24, Y
    705c:	68 2f       	mov	r22, r24
    705e:	70 e0       	ldi	r23, 0x00	; 0
    7060:	ce 01       	movw	r24, r28
    7062:	0e 94 c7 1d 	call	0x3b8e	; 0x3b8e <_ZN4UTFT12_fast_fill_8Eil>
    7066:	ec 89       	ldd	r30, Y+20	; 0x14
    7068:	fd 89       	ldd	r31, Y+21	; 0x15
    706a:	90 81       	ld	r25, Z
    706c:	88 a1       	ldd	r24, Y+32	; 0x20
    706e:	89 2b       	or	r24, r25
    7070:	80 83       	st	Z, r24
    7072:	47 c0       	rjmp	.+142    	; 0x7102 <_ZN4UTFT8fillRectEiiii+0x1da>
    7074:	8c 81       	ldd	r24, Y+4	; 0x04
    7076:	81 11       	cpse	r24, r1
    7078:	22 c0       	rjmp	.+68     	; 0x70be <_ZN4UTFT8fillRectEiiii+0x196>
    707a:	37 01       	movw	r6, r14
    707c:	6a 18       	sub	r6, r10
    707e:	7b 08       	sbc	r7, r11
    7080:	77 fe       	sbrs	r7, 7
    7082:	03 c0       	rjmp	.+6      	; 0x708a <_ZN4UTFT8fillRectEiiii+0x162>
    7084:	8f ef       	ldi	r24, 0xFF	; 255
    7086:	68 1a       	sub	r6, r24
    7088:	78 0a       	sbc	r7, r24
    708a:	75 94       	asr	r7
    708c:	67 94       	ror	r6
    708e:	00 e0       	ldi	r16, 0x00	; 0
    7090:	10 e0       	ldi	r17, 0x00	; 0
    7092:	c8 18       	sub	r12, r8
    7094:	d9 08       	sbc	r13, r9
    7096:	60 16       	cp	r6, r16
    7098:	71 06       	cpc	r7, r17
    709a:	9c f1       	brlt	.+102    	; 0x7102 <_ZN4UTFT8fillRectEiiii+0x1da>
    709c:	a5 01       	movw	r20, r10
    709e:	40 0f       	add	r20, r16
    70a0:	51 1f       	adc	r21, r17
    70a2:	96 01       	movw	r18, r12
    70a4:	b4 01       	movw	r22, r8
    70a6:	ce 01       	movw	r24, r28
    70a8:	7b de       	rcall	.-778    	; 0x6da0 <_ZN4UTFT9drawHLineEiii>
    70aa:	a7 01       	movw	r20, r14
    70ac:	40 1b       	sub	r20, r16
    70ae:	51 0b       	sbc	r21, r17
    70b0:	96 01       	movw	r18, r12
    70b2:	b4 01       	movw	r22, r8
    70b4:	ce 01       	movw	r24, r28
    70b6:	74 de       	rcall	.-792    	; 0x6da0 <_ZN4UTFT9drawHLineEiii>
    70b8:	0f 5f       	subi	r16, 0xFF	; 255
    70ba:	1f 4f       	sbci	r17, 0xFF	; 255
    70bc:	ec cf       	rjmp	.-40     	; 0x7096 <_ZN4UTFT8fillRectEiiii+0x16e>
    70be:	36 01       	movw	r6, r12
    70c0:	68 18       	sub	r6, r8
    70c2:	79 08       	sbc	r7, r9
    70c4:	77 fe       	sbrs	r7, 7
    70c6:	03 c0       	rjmp	.+6      	; 0x70ce <_ZN4UTFT8fillRectEiiii+0x1a6>
    70c8:	8f ef       	ldi	r24, 0xFF	; 255
    70ca:	68 1a       	sub	r6, r24
    70cc:	78 0a       	sbc	r7, r24
    70ce:	75 94       	asr	r7
    70d0:	67 94       	ror	r6
    70d2:	00 e0       	ldi	r16, 0x00	; 0
    70d4:	10 e0       	ldi	r17, 0x00	; 0
    70d6:	ea 18       	sub	r14, r10
    70d8:	fb 08       	sbc	r15, r11
    70da:	60 16       	cp	r6, r16
    70dc:	71 06       	cpc	r7, r17
    70de:	8c f0       	brlt	.+34     	; 0x7102 <_ZN4UTFT8fillRectEiiii+0x1da>
    70e0:	b4 01       	movw	r22, r8
    70e2:	60 0f       	add	r22, r16
    70e4:	71 1f       	adc	r23, r17
    70e6:	97 01       	movw	r18, r14
    70e8:	a5 01       	movw	r20, r10
    70ea:	ce 01       	movw	r24, r28
    70ec:	bb de       	rcall	.-650    	; 0x6e64 <_ZN4UTFT9drawVLineEiii>
    70ee:	b6 01       	movw	r22, r12
    70f0:	60 1b       	sub	r22, r16
    70f2:	71 0b       	sbc	r23, r17
    70f4:	97 01       	movw	r18, r14
    70f6:	a5 01       	movw	r20, r10
    70f8:	ce 01       	movw	r24, r28
    70fa:	b4 de       	rcall	.-664    	; 0x6e64 <_ZN4UTFT9drawVLineEiii>
    70fc:	0f 5f       	subi	r16, 0xFF	; 255
    70fe:	1f 4f       	sbci	r17, 0xFF	; 255
    7100:	ec cf       	rjmp	.-40     	; 0x70da <_ZN4UTFT8fillRectEiiii+0x1b2>
    7102:	df 91       	pop	r29
    7104:	cf 91       	pop	r28
    7106:	1f 91       	pop	r17
    7108:	0f 91       	pop	r16
    710a:	ff 90       	pop	r15
    710c:	ef 90       	pop	r14
    710e:	df 90       	pop	r13
    7110:	cf 90       	pop	r12
    7112:	bf 90       	pop	r11
    7114:	af 90       	pop	r10
    7116:	9f 90       	pop	r9
    7118:	8f 90       	pop	r8
    711a:	7f 90       	pop	r7
    711c:	6f 90       	pop	r6
    711e:	08 95       	ret

00007120 <_ZN4UTFT9printCharEhii>:
	sbi(P_CS, B_CS);
	clrXY();
}

void UTFT::printChar(byte c, int x, int y)
{
    7120:	2f 92       	push	r2
    7122:	3f 92       	push	r3
    7124:	4f 92       	push	r4
    7126:	5f 92       	push	r5
    7128:	6f 92       	push	r6
    712a:	7f 92       	push	r7
    712c:	8f 92       	push	r8
    712e:	9f 92       	push	r9
    7130:	af 92       	push	r10
    7132:	bf 92       	push	r11
    7134:	cf 92       	push	r12
    7136:	df 92       	push	r13
    7138:	ef 92       	push	r14
    713a:	ff 92       	push	r15
    713c:	0f 93       	push	r16
    713e:	1f 93       	push	r17
    7140:	cf 93       	push	r28
    7142:	df 93       	push	r29
    7144:	cd b7       	in	r28, 0x3d	; 61
    7146:	de b7       	in	r29, 0x3e	; 62
    7148:	28 97       	sbiw	r28, 0x08	; 8
    714a:	0f b6       	in	r0, 0x3f	; 63
    714c:	f8 94       	cli
    714e:	de bf       	out	0x3e, r29	; 62
    7150:	0f be       	out	0x3f, r0	; 63
    7152:	cd bf       	out	0x3d, r28	; 61
    7154:	98 87       	std	Y+8, r25	; 0x08
    7156:	8f 83       	std	Y+7, r24	; 0x07
    7158:	3a 01       	movw	r6, r20
    715a:	29 01       	movw	r4, r18
	byte i,ch;
	word j;
	word temp; 

	cbi(P_CS, B_CS);
    715c:	dc 01       	movw	r26, r24
    715e:	54 96       	adiw	r26, 0x14	; 20
    7160:	ed 91       	ld	r30, X+
    7162:	fc 91       	ld	r31, X
    7164:	55 97       	sbiw	r26, 0x15	; 21
    7166:	90 81       	ld	r25, Z
    7168:	90 96       	adiw	r26, 0x20	; 32
    716a:	8c 91       	ld	r24, X
    716c:	90 97       	sbiw	r26, 0x20	; 32
    716e:	80 95       	com	r24
    7170:	89 23       	and	r24, r25
    7172:	80 83       	st	Z, r24
  
	if (!_transparent)
    7174:	d0 96       	adiw	r26, 0x30	; 48
    7176:	2c 91       	ld	r18, X
    7178:	d0 97       	sbiw	r26, 0x30	; 48
    717a:	9d 96       	adiw	r26, 0x2d	; 45
    717c:	9c 91       	ld	r25, X
    717e:	9d 97       	sbiw	r26, 0x2d	; 45
    7180:	9c 96       	adiw	r26, 0x2c	; 44
    7182:	8c 91       	ld	r24, X
    7184:	9c 97       	sbiw	r26, 0x2c	; 44
    7186:	e6 2e       	mov	r14, r22
    7188:	f1 2c       	mov	r15, r1
    718a:	21 11       	cpse	r18, r1
    718c:	00 c1       	rjmp	.+512    	; 0x738e <_ZN4UTFT9printCharEhii+0x26e>
	{
		if (orient==PORTRAIT)
    718e:	14 96       	adiw	r26, 0x04	; 4
    7190:	2c 91       	ld	r18, X
    7192:	14 97       	sbiw	r26, 0x04	; 4
    7194:	21 11       	cpse	r18, r1
    7196:	6f c0       	rjmp	.+222    	; 0x7276 <_ZN4UTFT9printCharEhii+0x156>
		{
			setXY(x,y,x+cfont.x_size-1,y+cfont.y_size-1);
    7198:	82 01       	movw	r16, r4
    719a:	09 0f       	add	r16, r25
    719c:	11 1d       	adc	r17, r1
    719e:	01 50       	subi	r16, 0x01	; 1
    71a0:	11 09       	sbc	r17, r1
    71a2:	9a 01       	movw	r18, r20
    71a4:	28 0f       	add	r18, r24
    71a6:	31 1d       	adc	r19, r1
    71a8:	21 50       	subi	r18, 0x01	; 1
    71aa:	31 09       	sbc	r19, r1
    71ac:	a2 01       	movw	r20, r4
    71ae:	b3 01       	movw	r22, r6
    71b0:	cd 01       	movw	r24, r26
    71b2:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
	  
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    71b6:	ef 81       	ldd	r30, Y+7	; 0x07
    71b8:	f8 85       	ldd	r31, Y+8	; 0x08
    71ba:	84 a5       	ldd	r24, Z+44	; 0x2c
    71bc:	86 95       	lsr	r24
    71be:	86 95       	lsr	r24
    71c0:	86 95       	lsr	r24
    71c2:	95 a5       	ldd	r25, Z+45	; 0x2d
    71c4:	26 a5       	ldd	r18, Z+46	; 0x2e
    71c6:	e2 1a       	sub	r14, r18
    71c8:	f1 08       	sbc	r15, r1
    71ca:	89 9f       	mul	r24, r25
    71cc:	c0 01       	movw	r24, r0
    71ce:	11 24       	eor	r1, r1
    71d0:	e8 9e       	mul	r14, r24
    71d2:	90 01       	movw	r18, r0
    71d4:	e9 9e       	mul	r14, r25
    71d6:	30 0d       	add	r19, r0
    71d8:	f8 9e       	mul	r15, r24
    71da:	30 0d       	add	r19, r0
    71dc:	11 24       	eor	r1, r1
    71de:	79 01       	movw	r14, r18
    71e0:	f4 e0       	ldi	r31, 0x04	; 4
    71e2:	ef 0e       	add	r14, r31
    71e4:	f1 1c       	adc	r15, r1
			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j++)
    71e6:	c1 2c       	mov	r12, r1
    71e8:	d1 2c       	mov	r13, r1
    71ea:	af 81       	ldd	r26, Y+7	; 0x07
    71ec:	b8 85       	ldd	r27, Y+8	; 0x08
    71ee:	9c 96       	adiw	r26, 0x2c	; 44
    71f0:	8c 91       	ld	r24, X
    71f2:	9c 97       	sbiw	r26, 0x2c	; 44
    71f4:	86 95       	lsr	r24
    71f6:	86 95       	lsr	r24
    71f8:	86 95       	lsr	r24
    71fa:	9d 96       	adiw	r26, 0x2d	; 45
    71fc:	9c 91       	ld	r25, X
    71fe:	9d 97       	sbiw	r26, 0x2d	; 45
    7200:	89 9f       	mul	r24, r25
    7202:	c0 01       	movw	r24, r0
    7204:	11 24       	eor	r1, r1
    7206:	c8 16       	cp	r12, r24
    7208:	d9 06       	cpc	r13, r25
    720a:	08 f0       	brcs	.+2      	; 0x720e <_ZN4UTFT9printCharEhii+0xee>
    720c:	3d c1       	rjmp	.+634    	; 0x7488 <_ZN4UTFT9printCharEhii+0x368>
			{
				ch=pgm_read_byte(&cfont.font[temp]);
    720e:	9a 96       	adiw	r26, 0x2a	; 42
    7210:	ed 91       	ld	r30, X+
    7212:	fc 91       	ld	r31, X
    7214:	9b 97       	sbiw	r26, 0x2b	; 43
    7216:	ee 0d       	add	r30, r14
    7218:	ff 1d       	adc	r31, r15
    721a:	e4 91       	lpm	r30, Z
    721c:	97 e0       	ldi	r25, 0x07	; 7
    721e:	a9 2e       	mov	r10, r25
    7220:	b1 2c       	mov	r11, r1
				for(i=0;i<8;i++)
				{   
					if((ch&(1<<(7-i)))!=0)   
    7222:	0e 2f       	mov	r16, r30
    7224:	10 e0       	ldi	r17, 0x00	; 0
    7226:	c8 01       	movw	r24, r16
    7228:	0a 2c       	mov	r0, r10
    722a:	02 c0       	rjmp	.+4      	; 0x7230 <_ZN4UTFT9printCharEhii+0x110>
    722c:	95 95       	asr	r25
    722e:	87 95       	ror	r24
    7230:	0a 94       	dec	r0
    7232:	e2 f7       	brpl	.-8      	; 0x722c <_ZN4UTFT9printCharEhii+0x10c>
    7234:	80 ff       	sbrs	r24, 0
    7236:	09 c0       	rjmp	.+18     	; 0x724a <_ZN4UTFT9printCharEhii+0x12a>
					{
						setPixel((fch<<8)|fcl);
    7238:	ef 81       	ldd	r30, Y+7	; 0x07
    723a:	f8 85       	ldd	r31, Y+8	; 0x08
    723c:	60 81       	ld	r22, Z
    723e:	71 81       	ldd	r23, Z+1	; 0x01
    7240:	76 27       	eor	r23, r22
    7242:	67 27       	eor	r22, r23
    7244:	76 27       	eor	r23, r22
    7246:	cf 01       	movw	r24, r30
    7248:	0a c0       	rjmp	.+20     	; 0x725e <_ZN4UTFT9printCharEhii+0x13e>
					} 
					else
					{
						setPixel((bch<<8)|bcl);
    724a:	af 81       	ldd	r26, Y+7	; 0x07
    724c:	b8 85       	ldd	r27, Y+8	; 0x08
    724e:	12 96       	adiw	r26, 0x02	; 2
    7250:	6d 91       	ld	r22, X+
    7252:	7c 91       	ld	r23, X
    7254:	13 97       	sbiw	r26, 0x03	; 3
    7256:	76 27       	eor	r23, r22
    7258:	67 27       	eor	r22, r23
    725a:	76 27       	eor	r23, r22
    725c:	cd 01       	movw	r24, r26
    725e:	9c dd       	rcall	.-1224   	; 0x6d98 <_ZN4UTFT8setPixelEj>
    7260:	b1 e0       	ldi	r27, 0x01	; 1
    7262:	ab 1a       	sub	r10, r27
    7264:	b1 08       	sbc	r11, r1
    7266:	f8 f6       	brcc	.-66     	; 0x7226 <_ZN4UTFT9printCharEhii+0x106>
					}   
				}
				temp++;
    7268:	ff ef       	ldi	r31, 0xFF	; 255
    726a:	ef 1a       	sub	r14, r31
    726c:	ff 0a       	sbc	r15, r31
		if (orient==PORTRAIT)
		{
			setXY(x,y,x+cfont.x_size-1,y+cfont.y_size-1);
	  
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j++)
    726e:	8f ef       	ldi	r24, 0xFF	; 255
    7270:	c8 1a       	sub	r12, r24
    7272:	d8 0a       	sbc	r13, r24
    7274:	ba cf       	rjmp	.-140    	; 0x71ea <_ZN4UTFT9printCharEhii+0xca>
				temp++;
			}
		}
		else
		{
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    7276:	86 95       	lsr	r24
    7278:	86 95       	lsr	r24
    727a:	86 95       	lsr	r24
    727c:	af 81       	ldd	r26, Y+7	; 0x07
    727e:	b8 85       	ldd	r27, Y+8	; 0x08
    7280:	9e 96       	adiw	r26, 0x2e	; 46
    7282:	2c 91       	ld	r18, X
    7284:	e2 1a       	sub	r14, r18
    7286:	f1 08       	sbc	r15, r1
    7288:	89 9f       	mul	r24, r25
    728a:	c0 01       	movw	r24, r0
    728c:	11 24       	eor	r1, r1
    728e:	e8 9e       	mul	r14, r24
    7290:	90 01       	movw	r18, r0
    7292:	e9 9e       	mul	r14, r25
    7294:	30 0d       	add	r19, r0
    7296:	f8 9e       	mul	r15, r24
    7298:	30 0d       	add	r19, r0
    729a:	11 24       	eor	r1, r1
    729c:	79 01       	movw	r14, r18
    729e:	b4 e0       	ldi	r27, 0x04	; 4
    72a0:	eb 0e       	add	r14, r27
    72a2:	f1 1c       	adc	r15, r1

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
    72a4:	c1 2c       	mov	r12, r1
    72a6:	d1 2c       	mov	r13, r1
    72a8:	ef 81       	ldd	r30, Y+7	; 0x07
    72aa:	f8 85       	ldd	r31, Y+8	; 0x08
    72ac:	24 a5       	ldd	r18, Z+44	; 0x2c
    72ae:	62 2f       	mov	r22, r18
    72b0:	66 95       	lsr	r22
    72b2:	66 95       	lsr	r22
    72b4:	66 95       	lsr	r22
    72b6:	85 a5       	ldd	r24, Z+45	; 0x2d
    72b8:	68 9f       	mul	r22, r24
    72ba:	c0 01       	movw	r24, r0
    72bc:	11 24       	eor	r1, r1
    72be:	c8 16       	cp	r12, r24
    72c0:	d9 06       	cpc	r13, r25
    72c2:	08 f0       	brcs	.+2      	; 0x72c6 <_ZN4UTFT9printCharEhii+0x1a6>
    72c4:	e1 c0       	rjmp	.+450    	; 0x7488 <_ZN4UTFT9printCharEhii+0x368>
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
    72c6:	70 e0       	ldi	r23, 0x00	; 0
    72c8:	c6 01       	movw	r24, r12
    72ca:	0e 94 69 4a 	call	0x94d2	; 0x94d2 <__udivmodhi4>
    72ce:	ab 01       	movw	r20, r22
    72d0:	44 0d       	add	r20, r4
    72d2:	55 1d       	adc	r21, r5
    72d4:	c3 01       	movw	r24, r6
    72d6:	82 0f       	add	r24, r18
    72d8:	91 1d       	adc	r25, r1
    72da:	9c 01       	movw	r18, r24
    72dc:	21 50       	subi	r18, 0x01	; 1
    72de:	31 09       	sbc	r19, r1
    72e0:	8a 01       	movw	r16, r20
    72e2:	b3 01       	movw	r22, r6
    72e4:	cf 01       	movw	r24, r30
    72e6:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    72ea:	af 81       	ldd	r26, Y+7	; 0x07
    72ec:	b8 85       	ldd	r27, Y+8	; 0x08
    72ee:	9c 96       	adiw	r26, 0x2c	; 44
    72f0:	8c 90       	ld	r8, X
    72f2:	86 94       	lsr	r8
    72f4:	86 94       	lsr	r8
    72f6:	86 94       	lsr	r8
    72f8:	91 2c       	mov	r9, r1
    72fa:	b1 e0       	ldi	r27, 0x01	; 1
    72fc:	8b 1a       	sub	r8, r27
    72fe:	91 08       	sbc	r9, r1
						{
							setPixel((bch<<8)|bcl);
						}   
					}
				}
				temp+=(cfont.x_size/8);
    7300:	af 81       	ldd	r26, Y+7	; 0x07
    7302:	b8 85       	ldd	r27, Y+8	; 0x08
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    7304:	ef ef       	ldi	r30, 0xFF	; 255
    7306:	8e 16       	cp	r8, r30
    7308:	9e 06       	cpc	r9, r30
    730a:	b1 f1       	breq	.+108    	; 0x7378 <_ZN4UTFT9printCharEhii+0x258>
				{
					ch=pgm_read_byte(&cfont.font[temp+zz]);
    730c:	9a 96       	adiw	r26, 0x2a	; 42
    730e:	ed 91       	ld	r30, X+
    7310:	fc 91       	ld	r31, X
    7312:	9b 97       	sbiw	r26, 0x2b	; 43
    7314:	c4 01       	movw	r24, r8
    7316:	8e 0d       	add	r24, r14
    7318:	9f 1d       	adc	r25, r15
    731a:	e8 0f       	add	r30, r24
    731c:	f9 1f       	adc	r31, r25
    731e:	e4 91       	lpm	r30, Z
    7320:	a1 2c       	mov	r10, r1
    7322:	b1 2c       	mov	r11, r1
					for(i=0;i<8;i++)
					{   
						if((ch&(1<<i))!=0)   
    7324:	0e 2f       	mov	r16, r30
    7326:	10 e0       	ldi	r17, 0x00	; 0
    7328:	c8 01       	movw	r24, r16
    732a:	0a 2c       	mov	r0, r10
    732c:	02 c0       	rjmp	.+4      	; 0x7332 <_ZN4UTFT9printCharEhii+0x212>
    732e:	95 95       	asr	r25
    7330:	87 95       	ror	r24
    7332:	0a 94       	dec	r0
    7334:	e2 f7       	brpl	.-8      	; 0x732e <_ZN4UTFT9printCharEhii+0x20e>
    7336:	80 ff       	sbrs	r24, 0
    7338:	09 c0       	rjmp	.+18     	; 0x734c <_ZN4UTFT9printCharEhii+0x22c>
						{
							setPixel((fch<<8)|fcl);
    733a:	ef 81       	ldd	r30, Y+7	; 0x07
    733c:	f8 85       	ldd	r31, Y+8	; 0x08
    733e:	60 81       	ld	r22, Z
    7340:	71 81       	ldd	r23, Z+1	; 0x01
    7342:	76 27       	eor	r23, r22
    7344:	67 27       	eor	r22, r23
    7346:	76 27       	eor	r23, r22
    7348:	cf 01       	movw	r24, r30
    734a:	0a c0       	rjmp	.+20     	; 0x7360 <_ZN4UTFT9printCharEhii+0x240>
						} 
						else
						{
							setPixel((bch<<8)|bcl);
    734c:	af 81       	ldd	r26, Y+7	; 0x07
    734e:	b8 85       	ldd	r27, Y+8	; 0x08
    7350:	12 96       	adiw	r26, 0x02	; 2
    7352:	6d 91       	ld	r22, X+
    7354:	7c 91       	ld	r23, X
    7356:	13 97       	sbiw	r26, 0x03	; 3
    7358:	76 27       	eor	r23, r22
    735a:	67 27       	eor	r22, r23
    735c:	76 27       	eor	r23, r22
    735e:	cd 01       	movw	r24, r26
    7360:	1b dd       	rcall	.-1482   	; 0x6d98 <_ZN4UTFT8setPixelEj>
    7362:	bf ef       	ldi	r27, 0xFF	; 255
    7364:	ab 1a       	sub	r10, r27
    7366:	bb 0a       	sbc	r11, r27
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
				{
					ch=pgm_read_byte(&cfont.font[temp+zz]);
					for(i=0;i<8;i++)
    7368:	e8 e0       	ldi	r30, 0x08	; 8
    736a:	ae 16       	cp	r10, r30
    736c:	b1 04       	cpc	r11, r1
    736e:	e1 f6       	brne	.-72     	; 0x7328 <_ZN4UTFT9printCharEhii+0x208>
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
			{
				setXY(x,y+(j/(cfont.x_size/8)),x+cfont.x_size-1,y+(j/(cfont.x_size/8)));
				for (int zz=(cfont.x_size/8)-1; zz>=0; zz--)
    7370:	f1 e0       	ldi	r31, 0x01	; 1
    7372:	8f 1a       	sub	r8, r31
    7374:	91 08       	sbc	r9, r1
    7376:	c4 cf       	rjmp	.-120    	; 0x7300 <_ZN4UTFT9printCharEhii+0x1e0>
						{
							setPixel((bch<<8)|bcl);
						}   
					}
				}
				temp+=(cfont.x_size/8);
    7378:	9c 96       	adiw	r26, 0x2c	; 44
    737a:	8c 91       	ld	r24, X
    737c:	86 95       	lsr	r24
    737e:	86 95       	lsr	r24
    7380:	86 95       	lsr	r24
    7382:	90 e0       	ldi	r25, 0x00	; 0
    7384:	e8 0e       	add	r14, r24
    7386:	f9 1e       	adc	r15, r25
		}
		else
		{
			temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;

			for(j=0;j<((cfont.x_size/8)*cfont.y_size);j+=(cfont.x_size/8))
    7388:	c8 0e       	add	r12, r24
    738a:	d9 1e       	adc	r13, r25
    738c:	8d cf       	rjmp	.-230    	; 0x72a8 <_ZN4UTFT9printCharEhii+0x188>
			}
		}
	}
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    738e:	86 95       	lsr	r24
    7390:	86 95       	lsr	r24
    7392:	86 95       	lsr	r24
    7394:	ef 81       	ldd	r30, Y+7	; 0x07
    7396:	f8 85       	ldd	r31, Y+8	; 0x08
    7398:	26 a5       	ldd	r18, Z+46	; 0x2e
    739a:	e2 1a       	sub	r14, r18
    739c:	f1 08       	sbc	r15, r1
    739e:	89 9f       	mul	r24, r25
    73a0:	c0 01       	movw	r24, r0
    73a2:	11 24       	eor	r1, r1
    73a4:	e8 9e       	mul	r14, r24
    73a6:	10 01       	movw	r2, r0
    73a8:	e9 9e       	mul	r14, r25
    73aa:	30 0c       	add	r3, r0
    73ac:	f8 9e       	mul	r15, r24
    73ae:	30 0c       	add	r3, r0
    73b0:	11 24       	eor	r1, r1
    73b2:	f4 e0       	ldi	r31, 0x04	; 4
    73b4:	2f 0e       	add	r2, r31
    73b6:	31 1c       	adc	r3, r1
    73b8:	72 01       	movw	r14, r4
		for(j=0;j<cfont.y_size;j++) 
    73ba:	af 81       	ldd	r26, Y+7	; 0x07
    73bc:	b8 85       	ldd	r27, Y+8	; 0x08
    73be:	9d 96       	adiw	r26, 0x2d	; 45
    73c0:	8c 91       	ld	r24, X
    73c2:	90 e0       	ldi	r25, 0x00	; 0
    73c4:	97 01       	movw	r18, r14
    73c6:	24 19       	sub	r18, r4
    73c8:	35 09       	sbc	r19, r5
    73ca:	28 17       	cp	r18, r24
    73cc:	39 07       	cpc	r19, r25
    73ce:	08 f0       	brcs	.+2      	; 0x73d2 <_ZN4UTFT9printCharEhii+0x2b2>
    73d0:	5b c0       	rjmp	.+182    	; 0x7488 <_ZN4UTFT9printCharEhii+0x368>
    73d2:	43 01       	movw	r8, r6
    73d4:	c1 2c       	mov	r12, r1
    73d6:	d1 2c       	mov	r13, r1
				for(i=0;i<8;i++)
				{   
				
					if((ch&(1<<(7-i)))!=0)   
					{
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
    73d8:	f7 01       	movw	r30, r14
    73da:	31 96       	adiw	r30, 0x01	; 1
    73dc:	fe 83       	std	Y+6, r31	; 0x06
    73de:	ed 83       	std	Y+5, r30	; 0x05
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
    73e0:	af 81       	ldd	r26, Y+7	; 0x07
    73e2:	b8 85       	ldd	r27, Y+8	; 0x08
    73e4:	9c 96       	adiw	r26, 0x2c	; 44
    73e6:	8c 91       	ld	r24, X
    73e8:	9c 97       	sbiw	r26, 0x2c	; 44
    73ea:	86 95       	lsr	r24
    73ec:	86 95       	lsr	r24
    73ee:	86 95       	lsr	r24
    73f0:	90 e0       	ldi	r25, 0x00	; 0
    73f2:	c8 16       	cp	r12, r24
    73f4:	d9 06       	cpc	r13, r25
    73f6:	0c f0       	brlt	.+2      	; 0x73fa <_ZN4UTFT9printCharEhii+0x2da>
    73f8:	41 c0       	rjmp	.+130    	; 0x747c <_ZN4UTFT9printCharEhii+0x35c>
			{
				ch=pgm_read_byte(&cfont.font[temp+zz]); 
    73fa:	9a 96       	adiw	r26, 0x2a	; 42
    73fc:	ed 91       	ld	r30, X+
    73fe:	fc 91       	ld	r31, X
    7400:	9b 97       	sbiw	r26, 0x2b	; 43
    7402:	c6 01       	movw	r24, r12
    7404:	82 0d       	add	r24, r2
    7406:	93 1d       	adc	r25, r3
    7408:	e8 0f       	add	r30, r24
    740a:	f9 1f       	adc	r31, r25
    740c:	e4 91       	lpm	r30, Z
    740e:	b4 01       	movw	r22, r8
    7410:	87 e0       	ldi	r24, 0x07	; 7
    7412:	a8 2e       	mov	r10, r24
    7414:	b1 2c       	mov	r11, r1
				for(i=0;i<8;i++)
				{   
				
					if((ch&(1<<(7-i)))!=0)   
    7416:	8e 2f       	mov	r24, r30
    7418:	90 e0       	ldi	r25, 0x00	; 0
    741a:	9c 83       	std	Y+4, r25	; 0x04
    741c:	8b 83       	std	Y+3, r24	; 0x03
    741e:	db 01       	movw	r26, r22
    7420:	11 96       	adiw	r26, 0x01	; 1
    7422:	ba 83       	std	Y+2, r27	; 0x02
    7424:	a9 83       	std	Y+1, r26	; 0x01
    7426:	8b 81       	ldd	r24, Y+3	; 0x03
    7428:	9c 81       	ldd	r25, Y+4	; 0x04
    742a:	0a 2c       	mov	r0, r10
    742c:	02 c0       	rjmp	.+4      	; 0x7432 <_ZN4UTFT9printCharEhii+0x312>
    742e:	95 95       	asr	r25
    7430:	87 95       	ror	r24
    7432:	0a 94       	dec	r0
    7434:	e2 f7       	brpl	.-8      	; 0x742e <_ZN4UTFT9printCharEhii+0x30e>
    7436:	80 ff       	sbrs	r24, 0
    7438:	11 c0       	rjmp	.+34     	; 0x745c <_ZN4UTFT9printCharEhii+0x33c>
					{
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
    743a:	0d 81       	ldd	r16, Y+5	; 0x05
    743c:	1e 81       	ldd	r17, Y+6	; 0x06
    743e:	9d 01       	movw	r18, r26
    7440:	a7 01       	movw	r20, r14
    7442:	8f 81       	ldd	r24, Y+7	; 0x07
    7444:	98 85       	ldd	r25, Y+8	; 0x08
    7446:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
						setPixel((fch<<8)|fcl);
    744a:	ef 81       	ldd	r30, Y+7	; 0x07
    744c:	f8 85       	ldd	r31, Y+8	; 0x08
    744e:	60 81       	ld	r22, Z
    7450:	71 81       	ldd	r23, Z+1	; 0x01
    7452:	76 27       	eor	r23, r22
    7454:	67 27       	eor	r22, r23
    7456:	76 27       	eor	r23, r22
    7458:	cf 01       	movw	r24, r30
    745a:	9e dc       	rcall	.-1732   	; 0x6d98 <_ZN4UTFT8setPixelEj>
    745c:	f1 e0       	ldi	r31, 0x01	; 1
    745e:	af 1a       	sub	r10, r31
    7460:	b1 08       	sbc	r11, r1
    7462:	69 81       	ldd	r22, Y+1	; 0x01
    7464:	7a 81       	ldd	r23, Y+2	; 0x02
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
			{
				ch=pgm_read_byte(&cfont.font[temp+zz]); 
				for(i=0;i<8;i++)
    7466:	8f ef       	ldi	r24, 0xFF	; 255
    7468:	a8 16       	cp	r10, r24
    746a:	b8 06       	cpc	r11, r24
    746c:	c1 f6       	brne	.-80     	; 0x741e <_ZN4UTFT9printCharEhii+0x2fe>
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
		{
			for (int zz=0; zz<(cfont.x_size/8); zz++)
    746e:	9f ef       	ldi	r25, 0xFF	; 255
    7470:	c9 1a       	sub	r12, r25
    7472:	d9 0a       	sbc	r13, r25
    7474:	a8 e0       	ldi	r26, 0x08	; 8
    7476:	8a 0e       	add	r8, r26
    7478:	91 1c       	adc	r9, r1
    747a:	b2 cf       	rjmp	.-156    	; 0x73e0 <_ZN4UTFT9printCharEhii+0x2c0>
						setXY(x+i+(zz*8),y+j,x+i+(zz*8)+1,y+j+1);
						setPixel((fch<<8)|fcl);
					} 
				}
			}
			temp+=(cfont.x_size/8);
    747c:	28 0e       	add	r2, r24
    747e:	39 1e       	adc	r3, r25
    7480:	bf ef       	ldi	r27, 0xFF	; 255
    7482:	eb 1a       	sub	r14, r27
    7484:	fb 0a       	sbc	r15, r27
		}
	}
	else
	{
		temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
		for(j=0;j<cfont.y_size;j++) 
    7486:	99 cf       	rjmp	.-206    	; 0x73ba <_ZN4UTFT9printCharEhii+0x29a>
			}
			temp+=(cfont.x_size/8);
		}
	}

	sbi(P_CS, B_CS);
    7488:	af 81       	ldd	r26, Y+7	; 0x07
    748a:	b8 85       	ldd	r27, Y+8	; 0x08
    748c:	54 96       	adiw	r26, 0x14	; 20
    748e:	ed 91       	ld	r30, X+
    7490:	fc 91       	ld	r31, X
    7492:	55 97       	sbiw	r26, 0x15	; 21
    7494:	90 81       	ld	r25, Z
    7496:	90 96       	adiw	r26, 0x20	; 32
    7498:	8c 91       	ld	r24, X
    749a:	90 97       	sbiw	r26, 0x20	; 32
    749c:	89 2b       	or	r24, r25
    749e:	80 83       	st	Z, r24
	clrXY();
    74a0:	cd 01       	movw	r24, r26
}
    74a2:	28 96       	adiw	r28, 0x08	; 8
    74a4:	0f b6       	in	r0, 0x3f	; 63
    74a6:	f8 94       	cli
    74a8:	de bf       	out	0x3e, r29	; 62
    74aa:	0f be       	out	0x3f, r0	; 63
    74ac:	cd bf       	out	0x3d, r28	; 61
    74ae:	df 91       	pop	r29
    74b0:	cf 91       	pop	r28
    74b2:	1f 91       	pop	r17
    74b4:	0f 91       	pop	r16
    74b6:	ff 90       	pop	r15
    74b8:	ef 90       	pop	r14
    74ba:	df 90       	pop	r13
    74bc:	cf 90       	pop	r12
    74be:	bf 90       	pop	r11
    74c0:	af 90       	pop	r10
    74c2:	9f 90       	pop	r9
    74c4:	8f 90       	pop	r8
    74c6:	7f 90       	pop	r7
    74c8:	6f 90       	pop	r6
    74ca:	5f 90       	pop	r5
    74cc:	4f 90       	pop	r4
    74ce:	3f 90       	pop	r3
			temp+=(cfont.x_size/8);
		}
	}

	sbi(P_CS, B_CS);
	clrXY();
    74d0:	2f 90       	pop	r2
    74d2:	9d cb       	rjmp	.-2246   	; 0x6c0e <_ZN4UTFT5clrXYEv>

000074d4 <_ZN4UTFT10rotateCharEhiiii>:
}

void UTFT::rotateChar(byte c, int x, int y, int pos, int deg)
{
    74d4:	2f 92       	push	r2
    74d6:	3f 92       	push	r3
    74d8:	4f 92       	push	r4
    74da:	5f 92       	push	r5
    74dc:	6f 92       	push	r6
    74de:	7f 92       	push	r7
    74e0:	8f 92       	push	r8
    74e2:	9f 92       	push	r9
    74e4:	af 92       	push	r10
    74e6:	bf 92       	push	r11
    74e8:	cf 92       	push	r12
    74ea:	df 92       	push	r13
    74ec:	ef 92       	push	r14
    74ee:	ff 92       	push	r15
    74f0:	0f 93       	push	r16
    74f2:	1f 93       	push	r17
    74f4:	cf 93       	push	r28
    74f6:	df 93       	push	r29
    74f8:	cd b7       	in	r28, 0x3d	; 61
    74fa:	de b7       	in	r29, 0x3e	; 62
    74fc:	ab 97       	sbiw	r28, 0x2b	; 43
    74fe:	0f b6       	in	r0, 0x3f	; 63
    7500:	f8 94       	cli
    7502:	de bf       	out	0x3e, r29	; 62
    7504:	0f be       	out	0x3f, r0	; 63
    7506:	cd bf       	out	0x3d, r28	; 61
    7508:	9b a7       	std	Y+43, r25	; 0x2b
    750a:	8a a7       	std	Y+42, r24	; 0x2a
    750c:	76 2e       	mov	r7, r22
    750e:	4a 01       	movw	r8, r20
    7510:	59 01       	movw	r10, r18
    7512:	1b 8f       	std	Y+27, r17	; 0x1b
    7514:	0a 8f       	std	Y+26, r16	; 0x1a
	byte i,j,ch;
	word temp; 
	int newx,newy;
	double radian;
	radian=deg*0.0175;  
    7516:	b7 01       	movw	r22, r14
    7518:	ff 0c       	add	r15, r15
    751a:	88 0b       	sbc	r24, r24
    751c:	99 0b       	sbc	r25, r25
    751e:	0e 94 51 43 	call	0x86a2	; 0x86a2 <__floatsisf>
    7522:	29 e2       	ldi	r18, 0x29	; 41
    7524:	3c e5       	ldi	r19, 0x5C	; 92
    7526:	4f e8       	ldi	r20, 0x8F	; 143
    7528:	5c e3       	ldi	r21, 0x3C	; 60
    752a:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    752e:	6b 01       	movw	r12, r22
    7530:	7c 01       	movw	r14, r24

	cbi(P_CS, B_CS);
    7532:	aa a5       	ldd	r26, Y+42	; 0x2a
    7534:	bb a5       	ldd	r27, Y+43	; 0x2b
    7536:	54 96       	adiw	r26, 0x14	; 20
    7538:	ed 91       	ld	r30, X+
    753a:	fc 91       	ld	r31, X
    753c:	55 97       	sbiw	r26, 0x15	; 21
    753e:	90 81       	ld	r25, Z
    7540:	90 96       	adiw	r26, 0x20	; 32
    7542:	8c 91       	ld	r24, X
    7544:	90 97       	sbiw	r26, 0x20	; 32
    7546:	80 95       	com	r24
    7548:	89 23       	and	r24, r25
    754a:	80 83       	st	Z, r24

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
    754c:	9c 96       	adiw	r26, 0x2c	; 44
    754e:	8c 91       	ld	r24, X
    7550:	9c 97       	sbiw	r26, 0x2c	; 44
    7552:	86 95       	lsr	r24
    7554:	86 95       	lsr	r24
    7556:	86 95       	lsr	r24
    7558:	9d 96       	adiw	r26, 0x2d	; 45
    755a:	9c 91       	ld	r25, X
    755c:	9d 97       	sbiw	r26, 0x2d	; 45
    755e:	27 2d       	mov	r18, r7
    7560:	30 e0       	ldi	r19, 0x00	; 0
    7562:	9e 96       	adiw	r26, 0x2e	; 46
    7564:	4c 91       	ld	r20, X
    7566:	24 1b       	sub	r18, r20
    7568:	31 09       	sbc	r19, r1
    756a:	89 9f       	mul	r24, r25
    756c:	c0 01       	movw	r24, r0
    756e:	11 24       	eor	r1, r1
    7570:	28 9f       	mul	r18, r24
    7572:	a0 01       	movw	r20, r0
    7574:	29 9f       	mul	r18, r25
    7576:	50 0d       	add	r21, r0
    7578:	38 9f       	mul	r19, r24
    757a:	50 0d       	add	r21, r0
    757c:	11 24       	eor	r1, r1
    757e:	fa 01       	movw	r30, r20
    7580:	34 96       	adiw	r30, 0x04	; 4
    7582:	fd 83       	std	Y+5, r31	; 0x05
    7584:	ec 83       	std	Y+4, r30	; 0x04
	for(j=0;j<cfont.y_size;j++) 
    7586:	1b 82       	std	Y+3, r1	; 0x03
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    7588:	c4 01       	movw	r24, r8
    758a:	99 0c       	add	r9, r9
    758c:	aa 0b       	sbc	r26, r26
    758e:	bb 0b       	sbc	r27, r27
    7590:	8a a3       	std	Y+34, r24	; 0x22
    7592:	9b a3       	std	Y+35, r25	; 0x23
    7594:	ac a3       	std	Y+36, r26	; 0x24
    7596:	bd a3       	std	Y+37, r27	; 0x25
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    7598:	c5 01       	movw	r24, r10
    759a:	bb 0c       	add	r11, r11
    759c:	aa 0b       	sbc	r26, r26
    759e:	bb 0b       	sbc	r27, r27
    75a0:	8e a3       	std	Y+38, r24	; 0x26
    75a2:	9f a3       	std	Y+39, r25	; 0x27
    75a4:	a8 a7       	std	Y+40, r26	; 0x28
    75a6:	b9 a7       	std	Y+41, r27	; 0x29
	radian=deg*0.0175;  

	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
    75a8:	aa a5       	ldd	r26, Y+42	; 0x2a
    75aa:	bb a5       	ldd	r27, Y+43	; 0x2b
    75ac:	9d 96       	adiw	r26, 0x2d	; 45
    75ae:	8c 91       	ld	r24, X
    75b0:	bb 81       	ldd	r27, Y+3	; 0x03
    75b2:	b8 17       	cp	r27, r24
    75b4:	08 f0       	brcs	.+2      	; 0x75b8 <_ZN4UTFT10rotateCharEhiiii+0xe4>
    75b6:	f5 c0       	rjmp	.+490    	; 0x77a2 <_ZN4UTFT10rotateCharEhiiii+0x2ce>
    75b8:	19 86       	std	Y+9, r1	; 0x09
    75ba:	18 86       	std	Y+8, r1	; 0x08
    75bc:	21 2c       	mov	r2, r1
    75be:	31 2c       	mov	r3, r1
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    75c0:	8b 2f       	mov	r24, r27
    75c2:	90 e0       	ldi	r25, 0x00	; 0
    75c4:	a0 e0       	ldi	r26, 0x00	; 0
    75c6:	b0 e0       	ldi	r27, 0x00	; 0
    75c8:	8e 8f       	std	Y+30, r24	; 0x1e
    75ca:	9f 8f       	std	Y+31, r25	; 0x1f
    75cc:	a8 a3       	std	Y+32, r26	; 0x20
    75ce:	b9 a3       	std	Y+33, r27	; 0x21
	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
    75d0:	aa a5       	ldd	r26, Y+42	; 0x2a
    75d2:	bb a5       	ldd	r27, Y+43	; 0x2b
    75d4:	9c 96       	adiw	r26, 0x2c	; 44
    75d6:	8c 91       	ld	r24, X
    75d8:	9c 97       	sbiw	r26, 0x2c	; 44
    75da:	86 95       	lsr	r24
    75dc:	86 95       	lsr	r24
    75de:	86 95       	lsr	r24
    75e0:	90 e0       	ldi	r25, 0x00	; 0
    75e2:	28 16       	cp	r2, r24
    75e4:	39 06       	cpc	r3, r25
    75e6:	0c f0       	brlt	.+2      	; 0x75ea <_ZN4UTFT10rotateCharEhiiii+0x116>
    75e8:	d2 c0       	rjmp	.+420    	; 0x778e <_ZN4UTFT10rotateCharEhiiii+0x2ba>
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
    75ea:	9a 96       	adiw	r26, 0x2a	; 42
    75ec:	ed 91       	ld	r30, X+
    75ee:	fc 91       	ld	r31, X
    75f0:	9b 97       	sbiw	r26, 0x2b	; 43
    75f2:	8c 81       	ldd	r24, Y+4	; 0x04
    75f4:	9d 81       	ldd	r25, Y+5	; 0x05
    75f6:	82 0d       	add	r24, r2
    75f8:	93 1d       	adc	r25, r3
    75fa:	e8 0f       	add	r30, r24
    75fc:	f9 1f       	adc	r31, r25
    75fe:	74 90       	lpm	r7, Z
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    7600:	c7 01       	movw	r24, r14
    7602:	b6 01       	movw	r22, r12
    7604:	b0 d7       	rcall	.+3936   	; 0x8566 <cos>
    7606:	6a 87       	std	Y+10, r22	; 0x0a
    7608:	7b 87       	std	Y+11, r23	; 0x0b
    760a:	8c 87       	std	Y+12, r24	; 0x0c
    760c:	9d 87       	std	Y+13, r25	; 0x0d
    760e:	6e 8d       	ldd	r22, Y+30	; 0x1e
    7610:	7f 8d       	ldd	r23, Y+31	; 0x1f
    7612:	88 a1       	ldd	r24, Y+32	; 0x20
    7614:	99 a1       	ldd	r25, Y+33	; 0x21
    7616:	0e 94 51 43 	call	0x86a2	; 0x86a2 <__floatsisf>
    761a:	4b 01       	movw	r8, r22
    761c:	5c 01       	movw	r10, r24
    761e:	c7 01       	movw	r24, r14
    7620:	b6 01       	movw	r22, r12
    7622:	0e 94 9d 44 	call	0x893a	; 0x893a <sin>
    7626:	6e 87       	std	Y+14, r22	; 0x0e
    7628:	7f 87       	std	Y+15, r23	; 0x0f
    762a:	88 8b       	std	Y+16, r24	; 0x10
    762c:	99 8b       	std	Y+17, r25	; 0x11
    762e:	9b 01       	movw	r18, r22
    7630:	ac 01       	movw	r20, r24
    7632:	c5 01       	movw	r24, r10
    7634:	b4 01       	movw	r22, r8
    7636:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    763a:	6a 8b       	std	Y+18, r22	; 0x12
    763c:	7b 8b       	std	Y+19, r23	; 0x13
    763e:	8c 8b       	std	Y+20, r24	; 0x14
    7640:	9d 8b       	std	Y+21, r25	; 0x15
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    7642:	a5 01       	movw	r20, r10
    7644:	94 01       	movw	r18, r8
    7646:	6a 85       	ldd	r22, Y+10	; 0x0a
    7648:	7b 85       	ldd	r23, Y+11	; 0x0b
    764a:	8c 85       	ldd	r24, Y+12	; 0x0c
    764c:	9d 85       	ldd	r25, Y+13	; 0x0d
    764e:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    7652:	6e 8b       	std	Y+22, r22	; 0x16
    7654:	7f 8b       	std	Y+23, r23	; 0x17
    7656:	88 8f       	std	Y+24, r24	; 0x18
    7658:	99 8f       	std	Y+25, r25	; 0x19
    765a:	e8 85       	ldd	r30, Y+8	; 0x08
    765c:	f9 85       	ldd	r31, Y+9	; 0x09
    765e:	ff 83       	std	Y+7, r31	; 0x07
    7660:	ee 83       	std	Y+6, r30	; 0x06
    7662:	27 e0       	ldi	r18, 0x07	; 7
    7664:	30 e0       	ldi	r19, 0x00	; 0
    7666:	3a 83       	std	Y+2, r19	; 0x02
    7668:	29 83       	std	Y+1, r18	; 0x01

				setXY(newx,newy,newx+1,newy+1);
				
				if((ch&(1<<(7-i)))!=0)   
    766a:	87 2d       	mov	r24, r7
    766c:	90 e0       	ldi	r25, 0x00	; 0
    766e:	9d 8f       	std	Y+29, r25	; 0x1d
    7670:	8c 8f       	std	Y+28, r24	; 0x1c
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
			{   
				newx=x+(((i+(zz*8)+(pos*cfont.x_size))*cos(radian))-((j)*sin(radian)));
    7672:	aa a5       	ldd	r26, Y+42	; 0x2a
    7674:	bb a5       	ldd	r27, Y+43	; 0x2b
    7676:	9c 96       	adiw	r26, 0x2c	; 44
    7678:	8c 91       	ld	r24, X
    767a:	ea 8d       	ldd	r30, Y+26	; 0x1a
    767c:	fb 8d       	ldd	r31, Y+27	; 0x1b
    767e:	8e 9f       	mul	r24, r30
    7680:	b0 01       	movw	r22, r0
    7682:	8f 9f       	mul	r24, r31
    7684:	70 0d       	add	r23, r0
    7686:	11 24       	eor	r1, r1
    7688:	2e 81       	ldd	r18, Y+6	; 0x06
    768a:	3f 81       	ldd	r19, Y+7	; 0x07
    768c:	62 0f       	add	r22, r18
    768e:	73 1f       	adc	r23, r19
    7690:	07 2e       	mov	r0, r23
    7692:	00 0c       	add	r0, r0
    7694:	88 0b       	sbc	r24, r24
    7696:	99 0b       	sbc	r25, r25
    7698:	0e 94 51 43 	call	0x86a2	; 0x86a2 <__floatsisf>
    769c:	2b 01       	movw	r4, r22
    769e:	3c 01       	movw	r6, r24
    76a0:	2a 85       	ldd	r18, Y+10	; 0x0a
    76a2:	3b 85       	ldd	r19, Y+11	; 0x0b
    76a4:	4c 85       	ldd	r20, Y+12	; 0x0c
    76a6:	5d 85       	ldd	r21, Y+13	; 0x0d
    76a8:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    76ac:	2a 89       	ldd	r18, Y+18	; 0x12
    76ae:	3b 89       	ldd	r19, Y+19	; 0x13
    76b0:	4c 89       	ldd	r20, Y+20	; 0x14
    76b2:	5d 89       	ldd	r21, Y+21	; 0x15
    76b4:	ef d6       	rcall	.+3550   	; 0x8494 <__subsf3>
    76b6:	4b 01       	movw	r8, r22
    76b8:	5c 01       	movw	r10, r24
    76ba:	6a a1       	ldd	r22, Y+34	; 0x22
    76bc:	7b a1       	ldd	r23, Y+35	; 0x23
    76be:	8c a1       	ldd	r24, Y+36	; 0x24
    76c0:	9d a1       	ldd	r25, Y+37	; 0x25
    76c2:	ef d7       	rcall	.+4062   	; 0x86a2 <__floatsisf>
    76c4:	9b 01       	movw	r18, r22
    76c6:	ac 01       	movw	r20, r24
    76c8:	c5 01       	movw	r24, r10
    76ca:	b4 01       	movw	r22, r8
    76cc:	e4 d6       	rcall	.+3528   	; 0x8496 <__addsf3>
    76ce:	b6 d7       	rcall	.+3948   	; 0x863c <__fixsfsi>
    76d0:	4b 01       	movw	r8, r22
    76d2:	5c 01       	movw	r10, r24
				newy=y+(((j)*cos(radian))+((i+(zz*8)+(pos*cfont.x_size))*sin(radian)));
    76d4:	2e 85       	ldd	r18, Y+14	; 0x0e
    76d6:	3f 85       	ldd	r19, Y+15	; 0x0f
    76d8:	48 89       	ldd	r20, Y+16	; 0x10
    76da:	59 89       	ldd	r21, Y+17	; 0x11
    76dc:	c3 01       	movw	r24, r6
    76de:	b2 01       	movw	r22, r4
    76e0:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    76e4:	2e 89       	ldd	r18, Y+22	; 0x16
    76e6:	3f 89       	ldd	r19, Y+23	; 0x17
    76e8:	48 8d       	ldd	r20, Y+24	; 0x18
    76ea:	59 8d       	ldd	r21, Y+25	; 0x19
    76ec:	d4 d6       	rcall	.+3496   	; 0x8496 <__addsf3>
    76ee:	2b 01       	movw	r4, r22
    76f0:	3c 01       	movw	r6, r24
    76f2:	6e a1       	ldd	r22, Y+38	; 0x26
    76f4:	7f a1       	ldd	r23, Y+39	; 0x27
    76f6:	88 a5       	ldd	r24, Y+40	; 0x28
    76f8:	99 a5       	ldd	r25, Y+41	; 0x29
    76fa:	d3 d7       	rcall	.+4006   	; 0x86a2 <__floatsisf>
    76fc:	9b 01       	movw	r18, r22
    76fe:	ac 01       	movw	r20, r24
    7700:	c3 01       	movw	r24, r6
    7702:	b2 01       	movw	r22, r4
    7704:	c8 d6       	rcall	.+3472   	; 0x8496 <__addsf3>
    7706:	9a d7       	rcall	.+3892   	; 0x863c <__fixsfsi>

				setXY(newx,newy,newx+1,newy+1);
    7708:	8b 01       	movw	r16, r22
    770a:	0f 5f       	subi	r16, 0xFF	; 255
    770c:	1f 4f       	sbci	r17, 0xFF	; 255
    770e:	94 01       	movw	r18, r8
    7710:	2f 5f       	subi	r18, 0xFF	; 255
    7712:	3f 4f       	sbci	r19, 0xFF	; 255
    7714:	ab 01       	movw	r20, r22
    7716:	b4 01       	movw	r22, r8
    7718:	8a a5       	ldd	r24, Y+42	; 0x2a
    771a:	9b a5       	ldd	r25, Y+43	; 0x2b
    771c:	0e 94 e0 21 	call	0x43c0	; 0x43c0 <_ZN4UTFT5setXYEjjjj>
				
				if((ch&(1<<(7-i)))!=0)   
    7720:	8c 8d       	ldd	r24, Y+28	; 0x1c
    7722:	9d 8d       	ldd	r25, Y+29	; 0x1d
    7724:	09 80       	ldd	r0, Y+1	; 0x01
    7726:	02 c0       	rjmp	.+4      	; 0x772c <_ZN4UTFT10rotateCharEhiiii+0x258>
    7728:	95 95       	asr	r25
    772a:	87 95       	ror	r24
    772c:	0a 94       	dec	r0
    772e:	e2 f7       	brpl	.-8      	; 0x7728 <_ZN4UTFT10rotateCharEhiiii+0x254>
    7730:	80 ff       	sbrs	r24, 0
    7732:	0a c0       	rjmp	.+20     	; 0x7748 <_ZN4UTFT10rotateCharEhiiii+0x274>
				{
					setPixel((fch<<8)|fcl);
    7734:	aa a5       	ldd	r26, Y+42	; 0x2a
    7736:	bb a5       	ldd	r27, Y+43	; 0x2b
    7738:	6d 91       	ld	r22, X+
    773a:	7c 91       	ld	r23, X
    773c:	11 97       	sbiw	r26, 0x01	; 1
    773e:	76 27       	eor	r23, r22
    7740:	67 27       	eor	r22, r23
    7742:	76 27       	eor	r23, r22
    7744:	cd 01       	movw	r24, r26
    7746:	0b c0       	rjmp	.+22     	; 0x775e <_ZN4UTFT10rotateCharEhiiii+0x28a>
				} 
				else  
				{
					if (!_transparent)
    7748:	ea a5       	ldd	r30, Y+42	; 0x2a
    774a:	fb a5       	ldd	r31, Y+43	; 0x2b
    774c:	80 a9       	ldd	r24, Z+48	; 0x30
    774e:	81 11       	cpse	r24, r1
						setPixel((bch<<8)|bcl);
    7750:	07 c0       	rjmp	.+14     	; 0x7760 <_ZN4UTFT10rotateCharEhiiii+0x28c>
    7752:	62 81       	ldd	r22, Z+2	; 0x02
    7754:	73 81       	ldd	r23, Z+3	; 0x03
    7756:	76 27       	eor	r23, r22
    7758:	67 27       	eor	r22, r23
    775a:	76 27       	eor	r23, r22
    775c:	cf 01       	movw	r24, r30
    775e:	1c db       	rcall	.-2504   	; 0x6d98 <_ZN4UTFT8setPixelEj>
    7760:	2e 81       	ldd	r18, Y+6	; 0x06
    7762:	3f 81       	ldd	r19, Y+7	; 0x07
    7764:	2f 5f       	subi	r18, 0xFF	; 255
    7766:	3f 4f       	sbci	r19, 0xFF	; 255
    7768:	3f 83       	std	Y+7, r19	; 0x07
    776a:	2e 83       	std	Y+6, r18	; 0x06
    776c:	89 81       	ldd	r24, Y+1	; 0x01
    776e:	9a 81       	ldd	r25, Y+2	; 0x02
    7770:	01 97       	sbiw	r24, 0x01	; 1
    7772:	9a 83       	std	Y+2, r25	; 0x02
    7774:	89 83       	std	Y+1, r24	; 0x01
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
		{
			ch=pgm_read_byte(&cfont.font[temp+zz]); 
			for(i=0;i<8;i++)
    7776:	01 96       	adiw	r24, 0x01	; 1
    7778:	09 f0       	breq	.+2      	; 0x777c <_ZN4UTFT10rotateCharEhiiii+0x2a8>
    777a:	7b cf       	rjmp	.-266    	; 0x7672 <_ZN4UTFT10rotateCharEhiiii+0x19e>
	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
	{
		for (int zz=0; zz<(cfont.x_size/8); zz++)
    777c:	bf ef       	ldi	r27, 0xFF	; 255
    777e:	2b 1a       	sub	r2, r27
    7780:	3b 0a       	sbc	r3, r27
    7782:	e8 85       	ldd	r30, Y+8	; 0x08
    7784:	f9 85       	ldd	r31, Y+9	; 0x09
    7786:	38 96       	adiw	r30, 0x08	; 8
    7788:	f9 87       	std	Y+9, r31	; 0x09
    778a:	e8 87       	std	Y+8, r30	; 0x08
    778c:	21 cf       	rjmp	.-446    	; 0x75d0 <_ZN4UTFT10rotateCharEhiiii+0xfc>
					if (!_transparent)
						setPixel((bch<<8)|bcl);
				}   
			}
		}
		temp+=(cfont.x_size/8);
    778e:	2c 81       	ldd	r18, Y+4	; 0x04
    7790:	3d 81       	ldd	r19, Y+5	; 0x05
    7792:	28 0f       	add	r18, r24
    7794:	39 1f       	adc	r19, r25
    7796:	3d 83       	std	Y+5, r19	; 0x05
    7798:	2c 83       	std	Y+4, r18	; 0x04
	radian=deg*0.0175;  

	cbi(P_CS, B_CS);

	temp=((c-cfont.offset)*((cfont.x_size/8)*cfont.y_size))+4;
	for(j=0;j<cfont.y_size;j++) 
    779a:	3b 81       	ldd	r19, Y+3	; 0x03
    779c:	3f 5f       	subi	r19, 0xFF	; 255
    779e:	3b 83       	std	Y+3, r19	; 0x03
    77a0:	03 cf       	rjmp	.-506    	; 0x75a8 <_ZN4UTFT10rotateCharEhiiii+0xd4>
				}   
			}
		}
		temp+=(cfont.x_size/8);
	}
	sbi(P_CS, B_CS);
    77a2:	aa a5       	ldd	r26, Y+42	; 0x2a
    77a4:	bb a5       	ldd	r27, Y+43	; 0x2b
    77a6:	54 96       	adiw	r26, 0x14	; 20
    77a8:	ed 91       	ld	r30, X+
    77aa:	fc 91       	ld	r31, X
    77ac:	55 97       	sbiw	r26, 0x15	; 21
    77ae:	90 81       	ld	r25, Z
    77b0:	90 96       	adiw	r26, 0x20	; 32
    77b2:	8c 91       	ld	r24, X
    77b4:	90 97       	sbiw	r26, 0x20	; 32
    77b6:	89 2b       	or	r24, r25
    77b8:	80 83       	st	Z, r24
	clrXY();
    77ba:	cd 01       	movw	r24, r26
}
    77bc:	ab 96       	adiw	r28, 0x2b	; 43
    77be:	0f b6       	in	r0, 0x3f	; 63
    77c0:	f8 94       	cli
    77c2:	de bf       	out	0x3e, r29	; 62
    77c4:	0f be       	out	0x3f, r0	; 63
    77c6:	cd bf       	out	0x3d, r28	; 61
    77c8:	df 91       	pop	r29
    77ca:	cf 91       	pop	r28
    77cc:	1f 91       	pop	r17
    77ce:	0f 91       	pop	r16
    77d0:	ff 90       	pop	r15
    77d2:	ef 90       	pop	r14
    77d4:	df 90       	pop	r13
    77d6:	cf 90       	pop	r12
    77d8:	bf 90       	pop	r11
    77da:	af 90       	pop	r10
    77dc:	9f 90       	pop	r9
    77de:	8f 90       	pop	r8
    77e0:	7f 90       	pop	r7
    77e2:	6f 90       	pop	r6
    77e4:	5f 90       	pop	r5
    77e6:	4f 90       	pop	r4
    77e8:	3f 90       	pop	r3
			}
		}
		temp+=(cfont.x_size/8);
	}
	sbi(P_CS, B_CS);
	clrXY();
    77ea:	2f 90       	pop	r2
    77ec:	10 ca       	rjmp	.-3040   	; 0x6c0e <_ZN4UTFT5clrXYEv>

000077ee <_ZN4UTFT5printEPciii>:
}

void UTFT::print(char *st, int x, int y, int deg)
{
    77ee:	2f 92       	push	r2
    77f0:	3f 92       	push	r3
    77f2:	4f 92       	push	r4
    77f4:	5f 92       	push	r5
    77f6:	6f 92       	push	r6
    77f8:	7f 92       	push	r7
    77fa:	8f 92       	push	r8
    77fc:	9f 92       	push	r9
    77fe:	af 92       	push	r10
    7800:	bf 92       	push	r11
    7802:	cf 92       	push	r12
    7804:	df 92       	push	r13
    7806:	ef 92       	push	r14
    7808:	ff 92       	push	r15
    780a:	0f 93       	push	r16
    780c:	1f 93       	push	r17
    780e:	cf 93       	push	r28
    7810:	df 93       	push	r29
    7812:	6c 01       	movw	r12, r24
    7814:	2b 01       	movw	r4, r22
    7816:	ea 01       	movw	r28, r20
    7818:	39 01       	movw	r6, r18
    781a:	18 01       	movw	r2, r16
	int stl, i;

	stl = strlen(st);
    781c:	fb 01       	movw	r30, r22
    781e:	01 90       	ld	r0, Z+
    7820:	00 20       	and	r0, r0
    7822:	e9 f7       	brne	.-6      	; 0x781e <_ZN4UTFT5printEPciii+0x30>
    7824:	31 97       	sbiw	r30, 0x01	; 1
    7826:	5f 01       	movw	r10, r30
    7828:	a6 1a       	sub	r10, r22
    782a:	b7 0a       	sbc	r11, r23

	if (orient==PORTRAIT)
    782c:	fc 01       	movw	r30, r24
    782e:	84 81       	ldd	r24, Z+4	; 0x04
    7830:	81 11       	cpse	r24, r1
    7832:	19 c0       	rjmp	.+50     	; 0x7866 <_ZN4UTFT5printEPciii+0x78>
	{
	if (x==RIGHT)
    7834:	4f 30       	cpi	r20, 0x0F	; 15
    7836:	57 42       	sbci	r21, 0x27	; 39
    7838:	61 f4       	brne	.+24     	; 0x7852 <_ZN4UTFT5printEPciii+0x64>
		x=(disp_x_size+1)-(stl*cfont.x_size);
    783a:	f6 01       	movw	r30, r12
    783c:	c5 81       	ldd	r28, Z+5	; 0x05
    783e:	d6 81       	ldd	r29, Z+6	; 0x06
    7840:	21 96       	adiw	r28, 0x01	; 1
    7842:	24 a5       	ldd	r18, Z+44	; 0x2c
    7844:	2a 9d       	mul	r18, r10
    7846:	c0 01       	movw	r24, r0
    7848:	2b 9d       	mul	r18, r11
    784a:	90 0d       	add	r25, r0
    784c:	11 24       	eor	r1, r1
    784e:	c8 1b       	sub	r28, r24
    7850:	d9 0b       	sbc	r29, r25
	if (x==CENTER)
    7852:	ce 30       	cpi	r28, 0x0E	; 14
    7854:	f7 e2       	ldi	r31, 0x27	; 39
    7856:	df 07       	cpc	r29, r31
    7858:	c1 f5       	brne	.+112    	; 0x78ca <_ZN4UTFT5printEPciii+0xdc>
		x=((disp_x_size+1)-(stl*cfont.x_size))/2;
    785a:	f6 01       	movw	r30, r12
    785c:	85 81       	ldd	r24, Z+5	; 0x05
    785e:	96 81       	ldd	r25, Z+6	; 0x06
    7860:	a7 81       	ldd	r26, Z+7	; 0x07
    7862:	b0 85       	ldd	r27, Z+8	; 0x08
    7864:	18 c0       	rjmp	.+48     	; 0x7896 <_ZN4UTFT5printEPciii+0xa8>
	}
	else
	{
	if (x==RIGHT)
    7866:	4f 30       	cpi	r20, 0x0F	; 15
    7868:	57 42       	sbci	r21, 0x27	; 39
    786a:	61 f4       	brne	.+24     	; 0x7884 <_ZN4UTFT5printEPciii+0x96>
		x=(disp_y_size+1)-(stl*cfont.x_size);
    786c:	f6 01       	movw	r30, r12
    786e:	c1 85       	ldd	r28, Z+9	; 0x09
    7870:	d2 85       	ldd	r29, Z+10	; 0x0a
    7872:	21 96       	adiw	r28, 0x01	; 1
    7874:	24 a5       	ldd	r18, Z+44	; 0x2c
    7876:	2a 9d       	mul	r18, r10
    7878:	c0 01       	movw	r24, r0
    787a:	2b 9d       	mul	r18, r11
    787c:	90 0d       	add	r25, r0
    787e:	11 24       	eor	r1, r1
    7880:	c8 1b       	sub	r28, r24
    7882:	d9 0b       	sbc	r29, r25
	if (x==CENTER)
    7884:	ce 30       	cpi	r28, 0x0E	; 14
    7886:	f7 e2       	ldi	r31, 0x27	; 39
    7888:	df 07       	cpc	r29, r31
    788a:	f9 f4       	brne	.+62     	; 0x78ca <_ZN4UTFT5printEPciii+0xdc>
		x=((disp_y_size+1)-(stl*cfont.x_size))/2;
    788c:	f6 01       	movw	r30, r12
    788e:	81 85       	ldd	r24, Z+9	; 0x09
    7890:	92 85       	ldd	r25, Z+10	; 0x0a
    7892:	a3 85       	ldd	r26, Z+11	; 0x0b
    7894:	b4 85       	ldd	r27, Z+12	; 0x0c
    7896:	01 96       	adiw	r24, 0x01	; 1
    7898:	a1 1d       	adc	r26, r1
    789a:	b1 1d       	adc	r27, r1
    789c:	24 a5       	ldd	r18, Z+44	; 0x2c
    789e:	2a 9d       	mul	r18, r10
    78a0:	80 01       	movw	r16, r0
    78a2:	2b 9d       	mul	r18, r11
    78a4:	10 0d       	add	r17, r0
    78a6:	11 24       	eor	r1, r1
    78a8:	01 2e       	mov	r0, r17
    78aa:	00 0c       	add	r0, r0
    78ac:	22 0b       	sbc	r18, r18
    78ae:	33 0b       	sbc	r19, r19
    78b0:	bc 01       	movw	r22, r24
    78b2:	cd 01       	movw	r24, r26
    78b4:	60 1b       	sub	r22, r16
    78b6:	71 0b       	sbc	r23, r17
    78b8:	82 0b       	sbc	r24, r18
    78ba:	93 0b       	sbc	r25, r19
    78bc:	22 e0       	ldi	r18, 0x02	; 2
    78be:	30 e0       	ldi	r19, 0x00	; 0
    78c0:	40 e0       	ldi	r20, 0x00	; 0
    78c2:	50 e0       	ldi	r21, 0x00	; 0
    78c4:	0e 94 b2 4a 	call	0x9564	; 0x9564 <__divmodsi4>
    78c8:	e9 01       	movw	r28, r18
	}

	for (i=0; i<stl; i++)
    78ca:	81 2c       	mov	r8, r1
    78cc:	91 2c       	mov	r9, r1
    78ce:	8a 14       	cp	r8, r10
    78d0:	9b 04       	cpc	r9, r11
    78d2:	0c f5       	brge	.+66     	; 0x7916 <_ZN4UTFT5printEPciii+0x128>
		if (deg==0)
    78d4:	21 14       	cp	r2, r1
    78d6:	31 04       	cpc	r3, r1
    78d8:	79 f4       	brne	.+30     	; 0x78f8 <_ZN4UTFT5printEPciii+0x10a>
			printChar(*st++, x + (i*(cfont.x_size)), y);
    78da:	f6 01       	movw	r30, r12
    78dc:	84 a5       	ldd	r24, Z+44	; 0x2c
    78de:	88 9d       	mul	r24, r8
    78e0:	a0 01       	movw	r20, r0
    78e2:	89 9d       	mul	r24, r9
    78e4:	50 0d       	add	r21, r0
    78e6:	11 24       	eor	r1, r1
    78e8:	4c 0f       	add	r20, r28
    78ea:	5d 1f       	adc	r21, r29
    78ec:	93 01       	movw	r18, r6
    78ee:	f2 01       	movw	r30, r4
    78f0:	60 81       	ld	r22, Z
    78f2:	c6 01       	movw	r24, r12
    78f4:	15 dc       	rcall	.-2006   	; 0x7120 <_ZN4UTFT9printCharEhii>
    78f6:	08 c0       	rjmp	.+16     	; 0x7908 <_ZN4UTFT5printEPciii+0x11a>
		else
			rotateChar(*st++, x, y, i, deg);
    78f8:	71 01       	movw	r14, r2
    78fa:	84 01       	movw	r16, r8
    78fc:	93 01       	movw	r18, r6
    78fe:	ae 01       	movw	r20, r28
    7900:	f2 01       	movw	r30, r4
    7902:	60 81       	ld	r22, Z
    7904:	c6 01       	movw	r24, r12
    7906:	e6 dd       	rcall	.-1076   	; 0x74d4 <_ZN4UTFT10rotateCharEhiiii>
		x=(disp_y_size+1)-(stl*cfont.x_size);
	if (x==CENTER)
		x=((disp_y_size+1)-(stl*cfont.x_size))/2;
	}

	for (i=0; i<stl; i++)
    7908:	ff ef       	ldi	r31, 0xFF	; 255
    790a:	8f 1a       	sub	r8, r31
    790c:	9f 0a       	sbc	r9, r31
    790e:	8f ef       	ldi	r24, 0xFF	; 255
    7910:	48 1a       	sub	r4, r24
    7912:	58 0a       	sbc	r5, r24
    7914:	dc cf       	rjmp	.-72     	; 0x78ce <_ZN4UTFT5printEPciii+0xe0>
		if (deg==0)
			printChar(*st++, x + (i*(cfont.x_size)), y);
		else
			rotateChar(*st++, x, y, i, deg);
}
    7916:	df 91       	pop	r29
    7918:	cf 91       	pop	r28
    791a:	1f 91       	pop	r17
    791c:	0f 91       	pop	r16
    791e:	ff 90       	pop	r15
    7920:	ef 90       	pop	r14
    7922:	df 90       	pop	r13
    7924:	cf 90       	pop	r12
    7926:	bf 90       	pop	r11
    7928:	af 90       	pop	r10
    792a:	9f 90       	pop	r9
    792c:	8f 90       	pop	r8
    792e:	7f 90       	pop	r7
    7930:	6f 90       	pop	r6
    7932:	5f 90       	pop	r5
    7934:	4f 90       	pop	r4
    7936:	3f 90       	pop	r3
    7938:	2f 90       	pop	r2
    793a:	08 95       	ret

0000793c <_ZN4UTFT5printE6Stringiii>:

void UTFT::print(String st, int x, int y, int deg)
{
    793c:	6f 92       	push	r6
    793e:	7f 92       	push	r7
    7940:	8f 92       	push	r8
    7942:	9f 92       	push	r9
    7944:	af 92       	push	r10
    7946:	bf 92       	push	r11
    7948:	cf 92       	push	r12
    794a:	df 92       	push	r13
    794c:	ef 92       	push	r14
    794e:	ff 92       	push	r15
    7950:	0f 93       	push	r16
    7952:	1f 93       	push	r17
    7954:	cf 93       	push	r28
    7956:	df 93       	push	r29
    7958:	cd b7       	in	r28, 0x3d	; 61
    795a:	de b7       	in	r29, 0x3e	; 62
    795c:	5c 01       	movw	r10, r24
    795e:	cb 01       	movw	r24, r22
    7960:	4a 01       	movw	r8, r20
    7962:	39 01       	movw	r6, r18
	char buf[st.length()+1];

	st.toCharArray(buf, st.length()+1);
	print(buf, x, y, deg);
}
    7964:	cd b6       	in	r12, 0x3d	; 61
    7966:	de b6       	in	r13, 0x3e	; 62
			rotateChar(*st++, x, y, i, deg);
}

void UTFT::print(String st, int x, int y, int deg)
{
	char buf[st.length()+1];
    7968:	fb 01       	movw	r30, r22
    796a:	44 81       	ldd	r20, Z+4	; 0x04
    796c:	55 81       	ldd	r21, Z+5	; 0x05
    796e:	4f 5f       	subi	r20, 0xFF	; 255
    7970:	5f 4f       	sbci	r21, 0xFF	; 255
    7972:	2d b7       	in	r18, 0x3d	; 61
    7974:	3e b7       	in	r19, 0x3e	; 62
    7976:	24 1b       	sub	r18, r20
    7978:	35 0b       	sbc	r19, r21
    797a:	0f b6       	in	r0, 0x3f	; 63
    797c:	f8 94       	cli
    797e:	3e bf       	out	0x3e, r19	; 62
    7980:	0f be       	out	0x3f, r0	; 63
    7982:	2d bf       	out	0x3d, r18	; 61
    7984:	ed b7       	in	r30, 0x3d	; 61
    7986:	fe b7       	in	r31, 0x3e	; 62
    7988:	31 96       	adiw	r30, 0x01	; 1
    798a:	7f 01       	movw	r14, r30
	void setCharAt(unsigned int index, char c);
	char operator [] (unsigned int index) const;
	char& operator [] (unsigned int index);
	void getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index=0) const;
	void toCharArray(char *buf, unsigned int bufsize, unsigned int index=0) const
		{ getBytes((unsigned char *)buf, bufsize, index); }
    798c:	20 e0       	ldi	r18, 0x00	; 0
    798e:	30 e0       	ldi	r19, 0x00	; 0
    7990:	bf 01       	movw	r22, r30
    7992:	0e 94 12 4a 	call	0x9424	; 0x9424 <_ZNK6String8getBytesEPhjj>

	st.toCharArray(buf, st.length()+1);
	print(buf, x, y, deg);
    7996:	93 01       	movw	r18, r6
    7998:	a4 01       	movw	r20, r8
    799a:	b7 01       	movw	r22, r14
    799c:	c5 01       	movw	r24, r10
    799e:	27 df       	rcall	.-434    	; 0x77ee <_ZN4UTFT5printEPciii>
}
    79a0:	0f b6       	in	r0, 0x3f	; 63
    79a2:	f8 94       	cli
    79a4:	de be       	out	0x3e, r13	; 62
    79a6:	0f be       	out	0x3f, r0	; 63
    79a8:	cd be       	out	0x3d, r12	; 61
    79aa:	df 91       	pop	r29
    79ac:	cf 91       	pop	r28
    79ae:	1f 91       	pop	r17
    79b0:	0f 91       	pop	r16
    79b2:	ff 90       	pop	r15
    79b4:	ef 90       	pop	r14
    79b6:	df 90       	pop	r13
    79b8:	cf 90       	pop	r12
    79ba:	bf 90       	pop	r11
    79bc:	af 90       	pop	r10
    79be:	9f 90       	pop	r9
    79c0:	8f 90       	pop	r8
    79c2:	7f 90       	pop	r7
    79c4:	6f 90       	pop	r6
    79c6:	08 95       	ret

000079c8 <_ZN4UTFT9printNumIEjiiic>:

void UTFT::printNumI(uint16_t num, int x, int y, int length, char filler)
{
    79c8:	2f 92       	push	r2
    79ca:	3f 92       	push	r3
    79cc:	4f 92       	push	r4
    79ce:	5f 92       	push	r5
    79d0:	6f 92       	push	r6
    79d2:	7f 92       	push	r7
    79d4:	8f 92       	push	r8
    79d6:	9f 92       	push	r9
    79d8:	af 92       	push	r10
    79da:	bf 92       	push	r11
    79dc:	cf 92       	push	r12
    79de:	df 92       	push	r13
    79e0:	ef 92       	push	r14
    79e2:	0f 93       	push	r16
    79e4:	1f 93       	push	r17
    79e6:	cf 93       	push	r28
    79e8:	df 93       	push	r29
    79ea:	cd b7       	in	r28, 0x3d	; 61
    79ec:	de b7       	in	r29, 0x3e	; 62
    79ee:	e4 97       	sbiw	r28, 0x34	; 52
    79f0:	0f b6       	in	r0, 0x3f	; 63
    79f2:	f8 94       	cli
    79f4:	de bf       	out	0x3e, r29	; 62
    79f6:	0f be       	out	0x3f, r0	; 63
    79f8:	cd bf       	out	0x3d, r28	; 61
    79fa:	1c 01       	movw	r2, r24
    79fc:	5b 01       	movw	r10, r22
    79fe:	2a 01       	movw	r4, r20
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
  
	if (num==0)
    7a00:	67 2b       	or	r22, r23
    7a02:	e9 f4       	brne	.+58     	; 0x7a3e <_ZN4UTFT9printNumIEjiiic+0x76>
	{
		if (length!=0)
    7a04:	01 15       	cp	r16, r1
    7a06:	11 05       	cpc	r17, r1
    7a08:	b1 f0       	breq	.+44     	; 0x7a36 <_ZN4UTFT9printNumIEjiiic+0x6e>
    7a0a:	de 01       	movw	r26, r28
    7a0c:	11 96       	adiw	r26, 0x01	; 1
    7a0e:	80 e0       	ldi	r24, 0x00	; 0
    7a10:	90 e0       	ldi	r25, 0x00	; 0
    7a12:	fd 01       	movw	r30, r26
		{
			for (c=0; c<(length-1); c++)
    7a14:	01 50       	subi	r16, 0x01	; 1
    7a16:	11 09       	sbc	r17, r1
    7a18:	80 17       	cp	r24, r16
    7a1a:	91 07       	cpc	r25, r17
    7a1c:	1c f4       	brge	.+6      	; 0x7a24 <_ZN4UTFT9printNumIEjiiic+0x5c>
				st[c]=filler;
    7a1e:	ed 92       	st	X+, r14
  
	if (num==0)
	{
		if (length!=0)
		{
			for (c=0; c<(length-1); c++)
    7a20:	01 96       	adiw	r24, 0x01	; 1
    7a22:	fa cf       	rjmp	.-12     	; 0x7a18 <_ZN4UTFT9printNumIEjiiic+0x50>
				st[c]=filler;
			st[c]=48;
    7a24:	e8 0f       	add	r30, r24
    7a26:	f9 1f       	adc	r31, r25
    7a28:	40 e3       	ldi	r20, 0x30	; 48
    7a2a:	40 83       	st	Z, r20
			st[c+1]=0;
    7a2c:	fe 01       	movw	r30, r28
    7a2e:	e8 0f       	add	r30, r24
    7a30:	f9 1f       	adc	r31, r25
    7a32:	12 82       	std	Z+2, r1	; 0x02
    7a34:	4e c0       	rjmp	.+156    	; 0x7ad2 <_ZN4UTFT9printNumIEjiiic+0x10a>
		}
		else
		{
			st[0]=48;
    7a36:	80 e3       	ldi	r24, 0x30	; 48
    7a38:	89 83       	std	Y+1, r24	; 0x01
			st[1]=0;
    7a3a:	1a 82       	std	Y+2, r1	; 0x02
    7a3c:	4a c0       	rjmp	.+148    	; 0x7ad2 <_ZN4UTFT9printNumIEjiiic+0x10a>
    7a3e:	fe 01       	movw	r30, r28
    7a40:	7c 96       	adiw	r30, 0x1c	; 28
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
  
	if (num==0)
    7a42:	4f 01       	movw	r8, r30
			num=-num;
		}
	  
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7a44:	8a e0       	ldi	r24, 0x0A	; 10
    7a46:	68 2e       	mov	r6, r24
    7a48:	71 2c       	mov	r7, r1
    7a4a:	c5 01       	movw	r24, r10
    7a4c:	b3 01       	movw	r22, r6
    7a4e:	0e 94 69 4a 	call	0x94d2	; 0x94d2 <__udivmodhi4>
    7a52:	40 e3       	ldi	r20, 0x30	; 48
    7a54:	48 0f       	add	r20, r24
    7a56:	d4 01       	movw	r26, r8
    7a58:	4d 93       	st	X+, r20
    7a5a:	4d 01       	movw	r8, r26
    7a5c:	6d 01       	movw	r12, r26
    7a5e:	ce 1a       	sub	r12, r30
    7a60:	df 0a       	sbc	r13, r31
			c++;
			num=(num-(num % 10))/10;
    7a62:	a5 01       	movw	r20, r10
    7a64:	48 1b       	sub	r20, r24
    7a66:	59 0b       	sbc	r21, r25
    7a68:	ca 01       	movw	r24, r20
    7a6a:	b3 01       	movw	r22, r6
    7a6c:	0e 94 69 4a 	call	0x94d2	; 0x94d2 <__udivmodhi4>
    7a70:	5b 01       	movw	r10, r22
		{
			neg=true;
			num=-num;
		}
	  
		while (num>0)
    7a72:	67 2b       	or	r22, r23
    7a74:	51 f7       	brne	.-44     	; 0x7a4a <_ZN4UTFT9printNumIEjiiic+0x82>
		{
			buf[c]=48+(num % 10);
			c++;
			num=(num-(num % 10))/10;
		}
		buf[c]=0;
    7a76:	df 01       	movw	r26, r30
    7a78:	ac 0d       	add	r26, r12
    7a7a:	bd 1d       	adc	r27, r13
    7a7c:	1c 92       	st	X, r1
    7a7e:	ce 01       	movw	r24, r28
    7a80:	01 96       	adiw	r24, 0x01	; 1
		if (neg)
		{
			st[0]=45;
		}
	  
		if (length>(c+neg))
    7a82:	c0 16       	cp	r12, r16
    7a84:	d1 06       	cpc	r13, r17
    7a86:	74 f4       	brge	.+28     	; 0x7aa4 <_ZN4UTFT9printNumIEjiiic+0xdc>
    7a88:	dc 01       	movw	r26, r24
		{
			for (int i=0; i<(length-c-neg); i++)
    7a8a:	0c 19       	sub	r16, r12
    7a8c:	1d 09       	sbc	r17, r13
    7a8e:	ad 01       	movw	r20, r26
    7a90:	48 1b       	sub	r20, r24
    7a92:	59 0b       	sbc	r21, r25
    7a94:	40 17       	cp	r20, r16
    7a96:	51 07       	cpc	r21, r17
    7a98:	1c f0       	brlt	.+6      	; 0x7aa0 <_ZN4UTFT9printNumIEjiiic+0xd8>
    7a9a:	17 ff       	sbrs	r17, 7
    7a9c:	05 c0       	rjmp	.+10     	; 0x7aa8 <_ZN4UTFT9printNumIEjiiic+0xe0>
    7a9e:	02 c0       	rjmp	.+4      	; 0x7aa4 <_ZN4UTFT9printNumIEjiiic+0xdc>
			{
				st[i+neg]=filler;
    7aa0:	ed 92       	st	X+, r14
			st[0]=45;
		}
	  
		if (length>(c+neg))
		{
			for (int i=0; i<(length-c-neg); i++)
    7aa2:	f5 cf       	rjmp	.-22     	; 0x7a8e <_ZN4UTFT9printNumIEjiiic+0xc6>
void UTFT::printNumI(uint16_t num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
    7aa4:	00 e0       	ldi	r16, 0x00	; 0
    7aa6:	10 e0       	ldi	r17, 0x00	; 0
    7aa8:	ec 0d       	add	r30, r12
    7aaa:	fd 1d       	adc	r31, r13
    7aac:	dc 01       	movw	r26, r24
    7aae:	a0 0f       	add	r26, r16
    7ab0:	b1 1f       	adc	r27, r17
    7ab2:	be 01       	movw	r22, r28
    7ab4:	65 5e       	subi	r22, 0xE5	; 229
    7ab6:	7f 4f       	sbci	r23, 0xFF	; 255
    7ab8:	31 97       	sbiw	r30, 0x01	; 1
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7aba:	e6 17       	cp	r30, r22
    7abc:	f7 07       	cpc	r31, r23
    7abe:	19 f0       	breq	.+6      	; 0x7ac6 <_ZN4UTFT9printNumIEjiiic+0xfe>
		{
			st[i+neg+f]=buf[c-i-1];
    7ac0:	40 81       	ld	r20, Z
    7ac2:	4d 93       	st	X+, r20
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7ac4:	f9 cf       	rjmp	.-14     	; 0x7ab8 <_ZN4UTFT9printNumIEjiiic+0xf0>
		{
			st[i+neg+f]=buf[c-i-1];
		}
		st[c+neg+f]=0;
    7ac6:	08 0f       	add	r16, r24
    7ac8:	19 1f       	adc	r17, r25
    7aca:	f8 01       	movw	r30, r16
    7acc:	ec 0d       	add	r30, r12
    7ace:	fd 1d       	adc	r31, r13
    7ad0:	10 82       	st	Z, r1

	}

	print(st,x,y);
    7ad2:	00 e0       	ldi	r16, 0x00	; 0
    7ad4:	10 e0       	ldi	r17, 0x00	; 0
    7ad6:	a2 01       	movw	r20, r4
    7ad8:	be 01       	movw	r22, r28
    7ada:	6f 5f       	subi	r22, 0xFF	; 255
    7adc:	7f 4f       	sbci	r23, 0xFF	; 255
    7ade:	c1 01       	movw	r24, r2
    7ae0:	86 de       	rcall	.-756    	; 0x77ee <_ZN4UTFT5printEPciii>
}
    7ae2:	e4 96       	adiw	r28, 0x34	; 52
    7ae4:	0f b6       	in	r0, 0x3f	; 63
    7ae6:	f8 94       	cli
    7ae8:	de bf       	out	0x3e, r29	; 62
    7aea:	0f be       	out	0x3f, r0	; 63
    7aec:	cd bf       	out	0x3d, r28	; 61
    7aee:	df 91       	pop	r29
    7af0:	cf 91       	pop	r28
    7af2:	1f 91       	pop	r17
    7af4:	0f 91       	pop	r16
    7af6:	ef 90       	pop	r14
    7af8:	df 90       	pop	r13
    7afa:	cf 90       	pop	r12
    7afc:	bf 90       	pop	r11
    7afe:	af 90       	pop	r10
    7b00:	9f 90       	pop	r9
    7b02:	8f 90       	pop	r8
    7b04:	7f 90       	pop	r7
    7b06:	6f 90       	pop	r6
    7b08:	5f 90       	pop	r5
    7b0a:	4f 90       	pop	r4
    7b0c:	3f 90       	pop	r3
    7b0e:	2f 90       	pop	r2
    7b10:	08 95       	ret

00007b12 <_ZN4UTFT9printNumIEhiiic>:

void UTFT::printNumI(uint8_t num, int x, int y, int length, char filler)
{
    7b12:	4f 92       	push	r4
    7b14:	5f 92       	push	r5
    7b16:	6f 92       	push	r6
    7b18:	7f 92       	push	r7
    7b1a:	8f 92       	push	r8
    7b1c:	9f 92       	push	r9
    7b1e:	af 92       	push	r10
    7b20:	bf 92       	push	r11
    7b22:	cf 92       	push	r12
    7b24:	df 92       	push	r13
    7b26:	ef 92       	push	r14
    7b28:	ff 92       	push	r15
    7b2a:	0f 93       	push	r16
    7b2c:	1f 93       	push	r17
    7b2e:	cf 93       	push	r28
    7b30:	df 93       	push	r29
    7b32:	cd b7       	in	r28, 0x3d	; 61
    7b34:	de b7       	in	r29, 0x3e	; 62
    7b36:	e4 97       	sbiw	r28, 0x34	; 52
    7b38:	0f b6       	in	r0, 0x3f	; 63
    7b3a:	f8 94       	cli
    7b3c:	de bf       	out	0x3e, r29	; 62
    7b3e:	0f be       	out	0x3f, r0	; 63
    7b40:	cd bf       	out	0x3d, r28	; 61
    7b42:	5c 01       	movw	r10, r24
    7b44:	f6 2e       	mov	r15, r22
    7b46:	4a 01       	movw	r8, r20
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
	
	if (num==0)
    7b48:	61 11       	cpse	r22, r1
    7b4a:	1d c0       	rjmp	.+58     	; 0x7b86 <_ZN4UTFT9printNumIEhiiic+0x74>
	{
		if (length!=0)
    7b4c:	01 15       	cp	r16, r1
    7b4e:	11 05       	cpc	r17, r1
    7b50:	b1 f0       	breq	.+44     	; 0x7b7e <_ZN4UTFT9printNumIEhiiic+0x6c>
    7b52:	de 01       	movw	r26, r28
    7b54:	11 96       	adiw	r26, 0x01	; 1
    7b56:	80 e0       	ldi	r24, 0x00	; 0
    7b58:	90 e0       	ldi	r25, 0x00	; 0
    7b5a:	fd 01       	movw	r30, r26
		{
			for (c=0; c<(length-1); c++)
    7b5c:	01 50       	subi	r16, 0x01	; 1
    7b5e:	11 09       	sbc	r17, r1
    7b60:	80 17       	cp	r24, r16
    7b62:	91 07       	cpc	r25, r17
    7b64:	1c f4       	brge	.+6      	; 0x7b6c <_ZN4UTFT9printNumIEhiiic+0x5a>
			st[c]=filler;
    7b66:	ed 92       	st	X+, r14
	
	if (num==0)
	{
		if (length!=0)
		{
			for (c=0; c<(length-1); c++)
    7b68:	01 96       	adiw	r24, 0x01	; 1
    7b6a:	fa cf       	rjmp	.-12     	; 0x7b60 <_ZN4UTFT9printNumIEhiiic+0x4e>
			st[c]=filler;
			st[c]=48;
    7b6c:	e8 0f       	add	r30, r24
    7b6e:	f9 1f       	adc	r31, r25
    7b70:	40 e3       	ldi	r20, 0x30	; 48
    7b72:	40 83       	st	Z, r20
			st[c+1]=0;
    7b74:	fe 01       	movw	r30, r28
    7b76:	e8 0f       	add	r30, r24
    7b78:	f9 1f       	adc	r31, r25
    7b7a:	12 82       	std	Z+2, r1	; 0x02
    7b7c:	50 c0       	rjmp	.+160    	; 0x7c1e <_ZN4UTFT9printNumIEhiiic+0x10c>
		}
		else
		{
			st[0]=48;
    7b7e:	80 e3       	ldi	r24, 0x30	; 48
    7b80:	89 83       	std	Y+1, r24	; 0x01
			st[1]=0;
    7b82:	1a 82       	std	Y+2, r1	; 0x02
    7b84:	4c c0       	rjmp	.+152    	; 0x7c1e <_ZN4UTFT9printNumIEhiiic+0x10c>
    7b86:	fe 01       	movw	r30, r28
    7b88:	7c 96       	adiw	r30, 0x1c	; 28
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
	
	if (num==0)
    7b8a:	3f 01       	movw	r6, r30
			num=-num;
		}
		
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7b8c:	4a e0       	ldi	r20, 0x0A	; 10
			c++;
			num=(num-(num % 10))/10;
    7b8e:	8a e0       	ldi	r24, 0x0A	; 10
    7b90:	48 2e       	mov	r4, r24
    7b92:	51 2c       	mov	r5, r1
			num=-num;
		}
		
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7b94:	8f 2d       	mov	r24, r15
    7b96:	64 2f       	mov	r22, r20
    7b98:	0e 94 50 4a 	call	0x94a0	; 0x94a0 <__udivmodqi4>
    7b9c:	59 2f       	mov	r21, r25
    7b9e:	80 e3       	ldi	r24, 0x30	; 48
    7ba0:	89 0f       	add	r24, r25
    7ba2:	d3 01       	movw	r26, r6
    7ba4:	8d 93       	st	X+, r24
    7ba6:	3d 01       	movw	r6, r26
    7ba8:	6d 01       	movw	r12, r26
    7baa:	ce 1a       	sub	r12, r30
    7bac:	df 0a       	sbc	r13, r31
			c++;
			num=(num-(num % 10))/10;
    7bae:	8f 2d       	mov	r24, r15
    7bb0:	90 e0       	ldi	r25, 0x00	; 0
    7bb2:	85 1b       	sub	r24, r21
    7bb4:	91 09       	sbc	r25, r1
    7bb6:	b2 01       	movw	r22, r4
    7bb8:	0e 94 7d 4a 	call	0x94fa	; 0x94fa <__divmodhi4>
    7bbc:	f6 2e       	mov	r15, r22
		{
			neg=true;
			num=-num;
		}
		
		while (num>0)
    7bbe:	61 11       	cpse	r22, r1
    7bc0:	e9 cf       	rjmp	.-46     	; 0x7b94 <_ZN4UTFT9printNumIEhiiic+0x82>
		{
			buf[c]=48+(num % 10);
			c++;
			num=(num-(num % 10))/10;
		}
		buf[c]=0;
    7bc2:	df 01       	movw	r26, r30
    7bc4:	ac 0d       	add	r26, r12
    7bc6:	bd 1d       	adc	r27, r13
    7bc8:	1c 92       	st	X, r1
    7bca:	ce 01       	movw	r24, r28
    7bcc:	01 96       	adiw	r24, 0x01	; 1
		if (neg)
		{
			st[0]=45;
		}
		
		if (length>(c+neg))
    7bce:	c0 16       	cp	r12, r16
    7bd0:	d1 06       	cpc	r13, r17
    7bd2:	74 f4       	brge	.+28     	; 0x7bf0 <_ZN4UTFT9printNumIEhiiic+0xde>
    7bd4:	dc 01       	movw	r26, r24
		{
			for (int i=0; i<(length-c-neg); i++)
    7bd6:	0c 19       	sub	r16, r12
    7bd8:	1d 09       	sbc	r17, r13
    7bda:	ad 01       	movw	r20, r26
    7bdc:	48 1b       	sub	r20, r24
    7bde:	59 0b       	sbc	r21, r25
    7be0:	40 17       	cp	r20, r16
    7be2:	51 07       	cpc	r21, r17
    7be4:	1c f0       	brlt	.+6      	; 0x7bec <_ZN4UTFT9printNumIEhiiic+0xda>
    7be6:	17 ff       	sbrs	r17, 7
    7be8:	05 c0       	rjmp	.+10     	; 0x7bf4 <_ZN4UTFT9printNumIEhiiic+0xe2>
    7bea:	02 c0       	rjmp	.+4      	; 0x7bf0 <_ZN4UTFT9printNumIEhiiic+0xde>
			{
				st[i+neg]=filler;
    7bec:	ed 92       	st	X+, r14
			st[0]=45;
		}
		
		if (length>(c+neg))
		{
			for (int i=0; i<(length-c-neg); i++)
    7bee:	f5 cf       	rjmp	.-22     	; 0x7bda <_ZN4UTFT9printNumIEhiiic+0xc8>
void UTFT::printNumI(uint8_t num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
    7bf0:	00 e0       	ldi	r16, 0x00	; 0
    7bf2:	10 e0       	ldi	r17, 0x00	; 0
    7bf4:	ec 0d       	add	r30, r12
    7bf6:	fd 1d       	adc	r31, r13
    7bf8:	dc 01       	movw	r26, r24
    7bfa:	a0 0f       	add	r26, r16
    7bfc:	b1 1f       	adc	r27, r17
    7bfe:	be 01       	movw	r22, r28
    7c00:	65 5e       	subi	r22, 0xE5	; 229
    7c02:	7f 4f       	sbci	r23, 0xFF	; 255
    7c04:	31 97       	sbiw	r30, 0x01	; 1
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7c06:	e6 17       	cp	r30, r22
    7c08:	f7 07       	cpc	r31, r23
    7c0a:	19 f0       	breq	.+6      	; 0x7c12 <_ZN4UTFT9printNumIEhiiic+0x100>
		{
			st[i+neg+f]=buf[c-i-1];
    7c0c:	40 81       	ld	r20, Z
    7c0e:	4d 93       	st	X+, r20
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7c10:	f9 cf       	rjmp	.-14     	; 0x7c04 <_ZN4UTFT9printNumIEhiiic+0xf2>
		{
			st[i+neg+f]=buf[c-i-1];
		}
		st[c+neg+f]=0;
    7c12:	08 0f       	add	r16, r24
    7c14:	19 1f       	adc	r17, r25
    7c16:	f8 01       	movw	r30, r16
    7c18:	ec 0d       	add	r30, r12
    7c1a:	fd 1d       	adc	r31, r13
    7c1c:	10 82       	st	Z, r1

	}

	print(st,x,y);
    7c1e:	00 e0       	ldi	r16, 0x00	; 0
    7c20:	10 e0       	ldi	r17, 0x00	; 0
    7c22:	a4 01       	movw	r20, r8
    7c24:	be 01       	movw	r22, r28
    7c26:	6f 5f       	subi	r22, 0xFF	; 255
    7c28:	7f 4f       	sbci	r23, 0xFF	; 255
    7c2a:	c5 01       	movw	r24, r10
    7c2c:	e0 dd       	rcall	.-1088   	; 0x77ee <_ZN4UTFT5printEPciii>
}
    7c2e:	e4 96       	adiw	r28, 0x34	; 52
    7c30:	0f b6       	in	r0, 0x3f	; 63
    7c32:	f8 94       	cli
    7c34:	de bf       	out	0x3e, r29	; 62
    7c36:	0f be       	out	0x3f, r0	; 63
    7c38:	cd bf       	out	0x3d, r28	; 61
    7c3a:	df 91       	pop	r29
    7c3c:	cf 91       	pop	r28
    7c3e:	1f 91       	pop	r17
    7c40:	0f 91       	pop	r16
    7c42:	ff 90       	pop	r15
    7c44:	ef 90       	pop	r14
    7c46:	df 90       	pop	r13
    7c48:	cf 90       	pop	r12
    7c4a:	bf 90       	pop	r11
    7c4c:	af 90       	pop	r10
    7c4e:	9f 90       	pop	r9
    7c50:	8f 90       	pop	r8
    7c52:	7f 90       	pop	r7
    7c54:	6f 90       	pop	r6
    7c56:	5f 90       	pop	r5
    7c58:	4f 90       	pop	r4
    7c5a:	08 95       	ret

00007c5c <_ZN4UTFT9printNumIEaiiic>:

void UTFT::printNumI(int8_t num, int x, int y, int length, char filler)
{
    7c5c:	2f 92       	push	r2
    7c5e:	3f 92       	push	r3
    7c60:	5f 92       	push	r5
    7c62:	6f 92       	push	r6
    7c64:	7f 92       	push	r7
    7c66:	8f 92       	push	r8
    7c68:	9f 92       	push	r9
    7c6a:	af 92       	push	r10
    7c6c:	bf 92       	push	r11
    7c6e:	cf 92       	push	r12
    7c70:	df 92       	push	r13
    7c72:	ef 92       	push	r14
    7c74:	ff 92       	push	r15
    7c76:	0f 93       	push	r16
    7c78:	1f 93       	push	r17
    7c7a:	cf 93       	push	r28
    7c7c:	df 93       	push	r29
    7c7e:	cd b7       	in	r28, 0x3d	; 61
    7c80:	de b7       	in	r29, 0x3e	; 62
    7c82:	e4 97       	sbiw	r28, 0x34	; 52
    7c84:	0f b6       	in	r0, 0x3f	; 63
    7c86:	f8 94       	cli
    7c88:	de bf       	out	0x3e, r29	; 62
    7c8a:	0f be       	out	0x3f, r0	; 63
    7c8c:	cd bf       	out	0x3d, r28	; 61
    7c8e:	5c 01       	movw	r10, r24
    7c90:	a6 2f       	mov	r26, r22
    7c92:	6a 01       	movw	r12, r20
    7c94:	7e 2c       	mov	r7, r14
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
	
	if (num==0)
    7c96:	61 11       	cpse	r22, r1
    7c98:	1d c0       	rjmp	.+58     	; 0x7cd4 <_ZN4UTFT9printNumIEaiiic+0x78>
	{
		if (length!=0)
    7c9a:	01 15       	cp	r16, r1
    7c9c:	11 05       	cpc	r17, r1
    7c9e:	b1 f0       	breq	.+44     	; 0x7ccc <_ZN4UTFT9printNumIEaiiic+0x70>
    7ca0:	de 01       	movw	r26, r28
    7ca2:	11 96       	adiw	r26, 0x01	; 1
    7ca4:	80 e0       	ldi	r24, 0x00	; 0
    7ca6:	90 e0       	ldi	r25, 0x00	; 0
    7ca8:	fd 01       	movw	r30, r26
		{
			for (c=0; c<(length-1); c++)
    7caa:	01 50       	subi	r16, 0x01	; 1
    7cac:	11 09       	sbc	r17, r1
    7cae:	80 17       	cp	r24, r16
    7cb0:	91 07       	cpc	r25, r17
    7cb2:	1c f4       	brge	.+6      	; 0x7cba <_ZN4UTFT9printNumIEaiiic+0x5e>
			st[c]=filler;
    7cb4:	7d 92       	st	X+, r7
	
	if (num==0)
	{
		if (length!=0)
		{
			for (c=0; c<(length-1); c++)
    7cb6:	01 96       	adiw	r24, 0x01	; 1
    7cb8:	fa cf       	rjmp	.-12     	; 0x7cae <_ZN4UTFT9printNumIEaiiic+0x52>
			st[c]=filler;
			st[c]=48;
    7cba:	e8 0f       	add	r30, r24
    7cbc:	f9 1f       	adc	r31, r25
    7cbe:	40 e3       	ldi	r20, 0x30	; 48
    7cc0:	40 83       	st	Z, r20
			st[c+1]=0;
    7cc2:	fe 01       	movw	r30, r28
    7cc4:	e8 0f       	add	r30, r24
    7cc6:	f9 1f       	adc	r31, r25
    7cc8:	12 82       	std	Z+2, r1	; 0x02
    7cca:	7c c0       	rjmp	.+248    	; 0x7dc4 <_ZN4UTFT9printNumIEaiiic+0x168>
		}
		else
		{
			st[0]=48;
    7ccc:	80 e3       	ldi	r24, 0x30	; 48
    7cce:	89 83       	std	Y+1, r24	; 0x01
			st[1]=0;
    7cd0:	1a 82       	std	Y+2, r1	; 0x02
    7cd2:	78 c0       	rjmp	.+240    	; 0x7dc4 <_ZN4UTFT9printNumIEaiiic+0x168>
		}
	}
	else
	{
		if (num<0)
    7cd4:	67 ff       	sbrs	r22, 7
    7cd6:	04 c0       	rjmp	.+8      	; 0x7ce0 <_ZN4UTFT9printNumIEaiiic+0x84>
		{
			neg=true;
			num=-num;
    7cd8:	a1 95       	neg	r26
	}
	else
	{
		if (num<0)
		{
			neg=true;
    7cda:	66 24       	eor	r6, r6
    7cdc:	63 94       	inc	r6
    7cde:	01 c0       	rjmp	.+2      	; 0x7ce2 <_ZN4UTFT9printNumIEaiiic+0x86>

void UTFT::printNumI(int8_t num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
    7ce0:	61 2c       	mov	r6, r1
    7ce2:	1e 01       	movw	r2, r28
    7ce4:	8c e1       	ldi	r24, 0x1C	; 28
    7ce6:	28 0e       	add	r2, r24
    7ce8:	31 1c       	adc	r3, r1
	}
	else
	{
		if (num<0)
		{
			neg=true;
    7cea:	71 01       	movw	r14, r2
			num=-num;
		}
		
		while (num>0)
		{
			buf[c]=48+(num % 10);
    7cec:	8a e0       	ldi	r24, 0x0A	; 10
    7cee:	58 2e       	mov	r5, r24
			c++;
			num=(num-(num % 10))/10;
    7cf0:	9a e0       	ldi	r25, 0x0A	; 10
    7cf2:	89 2e       	mov	r8, r25
    7cf4:	91 2c       	mov	r9, r1
    7cf6:	a7 01       	movw	r20, r14
    7cf8:	42 19       	sub	r20, r2
    7cfa:	53 09       	sbc	r21, r3
		{
			neg=true;
			num=-num;
		}
		
		while (num>0)
    7cfc:	1a 16       	cp	r1, r26
    7cfe:	b4 f4       	brge	.+44     	; 0x7d2c <_ZN4UTFT9printNumIEaiiic+0xd0>
		{
			buf[c]=48+(num % 10);
    7d00:	8a 2f       	mov	r24, r26
    7d02:	65 2d       	mov	r22, r5
    7d04:	0e 94 5c 4a 	call	0x94b8	; 0x94b8 <__divmodqi4>
    7d08:	49 2f       	mov	r20, r25
    7d0a:	80 e3       	ldi	r24, 0x30	; 48
    7d0c:	89 0f       	add	r24, r25
    7d0e:	f7 01       	movw	r30, r14
    7d10:	81 93       	st	Z+, r24
    7d12:	7f 01       	movw	r14, r30
			c++;
			num=(num-(num % 10))/10;
    7d14:	8a 2f       	mov	r24, r26
    7d16:	aa 0f       	add	r26, r26
    7d18:	99 0b       	sbc	r25, r25
    7d1a:	84 1b       	sub	r24, r20
    7d1c:	91 09       	sbc	r25, r1
    7d1e:	47 fd       	sbrc	r20, 7
    7d20:	93 95       	inc	r25
    7d22:	b4 01       	movw	r22, r8
    7d24:	0e 94 7d 4a 	call	0x94fa	; 0x94fa <__divmodhi4>
    7d28:	a6 2f       	mov	r26, r22
		{
			neg=true;
			num=-num;
		}
		
		while (num>0)
    7d2a:	e5 cf       	rjmp	.-54     	; 0x7cf6 <_ZN4UTFT9printNumIEaiiic+0x9a>
		{
			buf[c]=48+(num % 10);
			c++;
			num=(num-(num % 10))/10;
		}
		buf[c]=0;
    7d2c:	d1 01       	movw	r26, r2
    7d2e:	a4 0f       	add	r26, r20
    7d30:	b5 1f       	adc	r27, r21
    7d32:	1c 92       	st	X, r1
		
		if (neg)
    7d34:	66 20       	and	r6, r6
    7d36:	11 f0       	breq	.+4      	; 0x7d3c <_ZN4UTFT9printNumIEaiiic+0xe0>
		{
			st[0]=45;
    7d38:	8d e2       	ldi	r24, 0x2D	; 45
    7d3a:	89 83       	std	Y+1, r24	; 0x01
		}
		
		if (length>(c+neg))
    7d3c:	86 2d       	mov	r24, r6
    7d3e:	90 e0       	ldi	r25, 0x00	; 0
    7d40:	4c 01       	movw	r8, r24
    7d42:	84 0e       	add	r8, r20
    7d44:	95 1e       	adc	r9, r21
    7d46:	80 16       	cp	r8, r16
    7d48:	91 06       	cpc	r9, r17
    7d4a:	b4 f4       	brge	.+44     	; 0x7d78 <_ZN4UTFT9printNumIEaiiic+0x11c>
    7d4c:	a1 e0       	ldi	r26, 0x01	; 1
    7d4e:	b0 e0       	ldi	r27, 0x00	; 0
    7d50:	ac 0f       	add	r26, r28
    7d52:	bd 1f       	adc	r27, r29
    7d54:	a8 0f       	add	r26, r24
    7d56:	b9 1f       	adc	r27, r25
		{
			for (int i=0; i<(length-c-neg); i++)
    7d58:	04 1b       	sub	r16, r20
    7d5a:	15 0b       	sbc	r17, r21
    7d5c:	08 1b       	sub	r16, r24
    7d5e:	19 0b       	sbc	r17, r25
    7d60:	bd 01       	movw	r22, r26
    7d62:	7d 01       	movw	r14, r26
    7d64:	e6 1a       	sub	r14, r22
    7d66:	f7 0a       	sbc	r15, r23
    7d68:	e0 16       	cp	r14, r16
    7d6a:	f1 06       	cpc	r15, r17
    7d6c:	1c f0       	brlt	.+6      	; 0x7d74 <_ZN4UTFT9printNumIEaiiic+0x118>
    7d6e:	17 ff       	sbrs	r17, 7
    7d70:	05 c0       	rjmp	.+10     	; 0x7d7c <_ZN4UTFT9printNumIEaiiic+0x120>
    7d72:	02 c0       	rjmp	.+4      	; 0x7d78 <_ZN4UTFT9printNumIEaiiic+0x11c>
			{
				st[i+neg]=filler;
    7d74:	7d 92       	st	X+, r7
			st[0]=45;
		}
		
		if (length>(c+neg))
		{
			for (int i=0; i<(length-c-neg); i++)
    7d76:	f5 cf       	rjmp	.-22     	; 0x7d62 <_ZN4UTFT9printNumIEaiiic+0x106>
void UTFT::printNumI(int8_t num, int x, int y, int length, char filler)
{
	char buf[25];
	char st[27];
	boolean neg=false;
	int c=0, f=0;
    7d78:	00 e0       	ldi	r16, 0x00	; 0
    7d7a:	10 e0       	ldi	r17, 0x00	; 0
    7d7c:	f1 01       	movw	r30, r2
    7d7e:	e4 0f       	add	r30, r20
    7d80:	f5 1f       	adc	r31, r21
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7d82:	60 e0       	ldi	r22, 0x00	; 0
    7d84:	70 e0       	ldi	r23, 0x00	; 0
    7d86:	80 0f       	add	r24, r16
    7d88:	91 1f       	adc	r25, r17
    7d8a:	31 97       	sbiw	r30, 0x01	; 1
    7d8c:	64 17       	cp	r22, r20
    7d8e:	75 07       	cpc	r23, r21
    7d90:	79 f0       	breq	.+30     	; 0x7db0 <_ZN4UTFT9printNumIEaiiic+0x154>
		{
			st[i+neg+f]=buf[c-i-1];
    7d92:	db 01       	movw	r26, r22
    7d94:	a8 0f       	add	r26, r24
    7d96:	b9 1f       	adc	r27, r25
    7d98:	ee 24       	eor	r14, r14
    7d9a:	e3 94       	inc	r14
    7d9c:	f1 2c       	mov	r15, r1
    7d9e:	ec 0e       	add	r14, r28
    7da0:	fd 1e       	adc	r15, r29
    7da2:	ae 0d       	add	r26, r14
    7da4:	bf 1d       	adc	r27, r15
    7da6:	f0 80       	ld	r15, Z
    7da8:	fc 92       	st	X, r15
				st[i+neg]=filler;
				f++;
			}
		}

		for (int i=0; i<c; i++)
    7daa:	6f 5f       	subi	r22, 0xFF	; 255
    7dac:	7f 4f       	sbci	r23, 0xFF	; 255
    7dae:	ed cf       	rjmp	.-38     	; 0x7d8a <_ZN4UTFT9printNumIEaiiic+0x12e>
		{
			st[i+neg+f]=buf[c-i-1];
		}
		st[c+neg+f]=0;
    7db0:	81 e0       	ldi	r24, 0x01	; 1
    7db2:	90 e0       	ldi	r25, 0x00	; 0
    7db4:	8c 0f       	add	r24, r28
    7db6:	9d 1f       	adc	r25, r29
    7db8:	08 0f       	add	r16, r24
    7dba:	19 1f       	adc	r17, r25
    7dbc:	f8 01       	movw	r30, r16
    7dbe:	e8 0d       	add	r30, r8
    7dc0:	f9 1d       	adc	r31, r9
    7dc2:	10 82       	st	Z, r1

	}

	print(st,x,y);
    7dc4:	00 e0       	ldi	r16, 0x00	; 0
    7dc6:	10 e0       	ldi	r17, 0x00	; 0
    7dc8:	a6 01       	movw	r20, r12
    7dca:	be 01       	movw	r22, r28
    7dcc:	6f 5f       	subi	r22, 0xFF	; 255
    7dce:	7f 4f       	sbci	r23, 0xFF	; 255
    7dd0:	c5 01       	movw	r24, r10
    7dd2:	0d dd       	rcall	.-1510   	; 0x77ee <_ZN4UTFT5printEPciii>
}
    7dd4:	e4 96       	adiw	r28, 0x34	; 52
    7dd6:	0f b6       	in	r0, 0x3f	; 63
    7dd8:	f8 94       	cli
    7dda:	de bf       	out	0x3e, r29	; 62
    7ddc:	0f be       	out	0x3f, r0	; 63
    7dde:	cd bf       	out	0x3d, r28	; 61
    7de0:	df 91       	pop	r29
    7de2:	cf 91       	pop	r28
    7de4:	1f 91       	pop	r17
    7de6:	0f 91       	pop	r16
    7de8:	ff 90       	pop	r15
    7dea:	ef 90       	pop	r14
    7dec:	df 90       	pop	r13
    7dee:	cf 90       	pop	r12
    7df0:	bf 90       	pop	r11
    7df2:	af 90       	pop	r10
    7df4:	9f 90       	pop	r9
    7df6:	8f 90       	pop	r8
    7df8:	7f 90       	pop	r7
    7dfa:	6f 90       	pop	r6
    7dfc:	5f 90       	pop	r5
    7dfe:	3f 90       	pop	r3
    7e00:	2f 90       	pop	r2
    7e02:	08 95       	ret

00007e04 <_ZN4UTFT9printNumFEdhiicic>:

void UTFT::printNumF(double num, byte dec, int x, int y, char divider, int length, char filler)
{
    7e04:	2f 92       	push	r2
    7e06:	3f 92       	push	r3
    7e08:	4f 92       	push	r4
    7e0a:	5f 92       	push	r5
    7e0c:	6f 92       	push	r6
    7e0e:	7f 92       	push	r7
    7e10:	8f 92       	push	r8
    7e12:	af 92       	push	r10
    7e14:	cf 92       	push	r12
    7e16:	ef 92       	push	r14
    7e18:	ff 92       	push	r15
    7e1a:	0f 93       	push	r16
    7e1c:	1f 93       	push	r17
    7e1e:	cf 93       	push	r28
    7e20:	df 93       	push	r29
    7e22:	cd b7       	in	r28, 0x3d	; 61
    7e24:	de b7       	in	r29, 0x3e	; 62
    7e26:	6d 97       	sbiw	r28, 0x1d	; 29
    7e28:	0f b6       	in	r0, 0x3f	; 63
    7e2a:	f8 94       	cli
    7e2c:	de bf       	out	0x3e, r29	; 62
    7e2e:	0f be       	out	0x3f, r0	; 63
    7e30:	cd bf       	out	0x3d, r28	; 61
    7e32:	3c 01       	movw	r6, r24
    7e34:	1a 01       	movw	r2, r20
    7e36:	2b 01       	movw	r4, r22
    7e38:	1d 8f       	std	Y+29, r17	; 0x1d
    7e3a:	0c 8f       	std	Y+28, r16	; 0x1c
    7e3c:	4a 2d       	mov	r20, r10
	char st[27];
	boolean neg=false;

	if (dec<1)
    7e3e:	22 23       	and	r18, r18
    7e40:	21 f0       	breq	.+8      	; 0x7e4a <_ZN4UTFT9printNumFEdhiicic+0x46>
    7e42:	26 30       	cpi	r18, 0x06	; 6
    7e44:	18 f0       	brcs	.+6      	; 0x7e4c <_ZN4UTFT9printNumFEdhiicic+0x48>
    7e46:	25 e0       	ldi	r18, 0x05	; 5
    7e48:	01 c0       	rjmp	.+2      	; 0x7e4c <_ZN4UTFT9printNumFEdhiicic+0x48>
		dec=1;
    7e4a:	21 e0       	ldi	r18, 0x01	; 1
void UTFT::_convert_float(char *buf, double num, int width, byte prec)
{
	dtostrf(num, width, prec, buf);
    7e4c:	8e 01       	movw	r16, r28
    7e4e:	0f 5f       	subi	r16, 0xFF	; 255
    7e50:	1f 4f       	sbci	r17, 0xFF	; 255
    7e52:	c2 01       	movw	r24, r4
    7e54:	b1 01       	movw	r22, r2
    7e56:	0e 94 ef 4a 	call	0x95de	; 0x95de <dtostrf>
	if (num<0)
		neg = true;

	_convert_float(st, num, length, dec);

	if (divider != '.')
    7e5a:	8e e2       	ldi	r24, 0x2E	; 46
    7e5c:	c8 16       	cp	r12, r24
    7e5e:	61 f0       	breq	.+24     	; 0x7e78 <_ZN4UTFT9printNumFEdhiicic+0x74>
    7e60:	f8 01       	movw	r30, r16
    7e62:	ce 01       	movw	r24, r28
    7e64:	4c 96       	adiw	r24, 0x1c	; 28
	{
		for (int i=0; i<sizeof(st); i++)
    7e66:	e8 17       	cp	r30, r24
    7e68:	f9 07       	cpc	r31, r25
    7e6a:	31 f0       	breq	.+12     	; 0x7e78 <_ZN4UTFT9printNumFEdhiicic+0x74>
			if (st[i]=='.')
    7e6c:	20 81       	ld	r18, Z
    7e6e:	2e 32       	cpi	r18, 0x2E	; 46
    7e70:	09 f4       	brne	.+2      	; 0x7e74 <_ZN4UTFT9printNumFEdhiicic+0x70>
				st[i]=divider;
    7e72:	c0 82       	st	Z, r12
    7e74:	31 96       	adiw	r30, 0x01	; 1

	_convert_float(st, num, length, dec);

	if (divider != '.')
	{
		for (int i=0; i<sizeof(st); i++)
    7e76:	f7 cf       	rjmp	.-18     	; 0x7e66 <_ZN4UTFT9printNumFEdhiicic+0x62>
			if (st[i]=='.')
				st[i]=divider;
	}

	if (filler != ' ')
    7e78:	80 e2       	ldi	r24, 0x20	; 32
    7e7a:	88 16       	cp	r8, r24
    7e7c:	39 f1       	breq	.+78     	; 0x7ecc <_ZN4UTFT9printNumFEdhiicic+0xc8>
	{
		if (neg)
    7e7e:	20 e0       	ldi	r18, 0x00	; 0
    7e80:	30 e0       	ldi	r19, 0x00	; 0
    7e82:	a9 01       	movw	r20, r18
    7e84:	c2 01       	movw	r24, r4
    7e86:	b1 01       	movw	r22, r2
    7e88:	6a d3       	rcall	.+1748   	; 0x855e <__cmpsf2>
    7e8a:	87 ff       	sbrs	r24, 7
    7e8c:	12 c0       	rjmp	.+36     	; 0x7eb2 <_ZN4UTFT9printNumFEdhiicic+0xae>
		{
			st[0]='-';
    7e8e:	8d e2       	ldi	r24, 0x2D	; 45
    7e90:	89 83       	std	Y+1, r24	; 0x01
    7e92:	fe 01       	movw	r30, r28
    7e94:	31 96       	adiw	r30, 0x01	; 1
    7e96:	9e 01       	movw	r18, r28
    7e98:	25 5e       	subi	r18, 0xE5	; 229
    7e9a:	3f 4f       	sbci	r19, 0xFF	; 255
			for (int i=1; i<sizeof(st); i++)
    7e9c:	e2 17       	cp	r30, r18
    7e9e:	f3 07       	cpc	r31, r19
    7ea0:	a9 f0       	breq	.+42     	; 0x7ecc <_ZN4UTFT9printNumFEdhiicic+0xc8>
				if ((st[i]==' ') || (st[i]=='-'))
    7ea2:	81 81       	ldd	r24, Z+1	; 0x01
    7ea4:	80 32       	cpi	r24, 0x20	; 32
    7ea6:	11 f0       	breq	.+4      	; 0x7eac <_ZN4UTFT9printNumFEdhiicic+0xa8>
    7ea8:	8d 32       	cpi	r24, 0x2D	; 45
    7eaa:	09 f4       	brne	.+2      	; 0x7eae <_ZN4UTFT9printNumFEdhiicic+0xaa>
					st[i]=filler;
    7eac:	81 82       	std	Z+1, r8	; 0x01
    7eae:	31 96       	adiw	r30, 0x01	; 1
	if (filler != ' ')
	{
		if (neg)
		{
			st[0]='-';
			for (int i=1; i<sizeof(st); i++)
    7eb0:	f5 cf       	rjmp	.-22     	; 0x7e9c <_ZN4UTFT9printNumFEdhiicic+0x98>
    7eb2:	fe 01       	movw	r30, r28
    7eb4:	31 96       	adiw	r30, 0x01	; 1
    7eb6:	ce 01       	movw	r24, r28
    7eb8:	4c 96       	adiw	r24, 0x1c	; 28
				if ((st[i]==' ') || (st[i]=='-'))
					st[i]=filler;
		}
		else
		{
			for (int i=0; i<sizeof(st); i++)
    7eba:	e8 17       	cp	r30, r24
    7ebc:	f9 07       	cpc	r31, r25
    7ebe:	31 f0       	breq	.+12     	; 0x7ecc <_ZN4UTFT9printNumFEdhiicic+0xc8>
				if (st[i]==' ')
    7ec0:	20 81       	ld	r18, Z
    7ec2:	20 32       	cpi	r18, 0x20	; 32
    7ec4:	09 f4       	brne	.+2      	; 0x7ec8 <_ZN4UTFT9printNumFEdhiicic+0xc4>
					st[i]=filler;
    7ec6:	80 82       	st	Z, r8
    7ec8:	31 96       	adiw	r30, 0x01	; 1
				if ((st[i]==' ') || (st[i]=='-'))
					st[i]=filler;
		}
		else
		{
			for (int i=0; i<sizeof(st); i++)
    7eca:	f7 cf       	rjmp	.-18     	; 0x7eba <_ZN4UTFT9printNumFEdhiicic+0xb6>
				if (st[i]==' ')
					st[i]=filler;
		}
	}

	print(st,x,y);
    7ecc:	00 e0       	ldi	r16, 0x00	; 0
    7ece:	10 e0       	ldi	r17, 0x00	; 0
    7ed0:	97 01       	movw	r18, r14
    7ed2:	4c 8d       	ldd	r20, Y+28	; 0x1c
    7ed4:	5d 8d       	ldd	r21, Y+29	; 0x1d
    7ed6:	be 01       	movw	r22, r28
    7ed8:	6f 5f       	subi	r22, 0xFF	; 255
    7eda:	7f 4f       	sbci	r23, 0xFF	; 255
    7edc:	c3 01       	movw	r24, r6
    7ede:	87 dc       	rcall	.-1778   	; 0x77ee <_ZN4UTFT5printEPciii>
}
    7ee0:	6d 96       	adiw	r28, 0x1d	; 29
    7ee2:	0f b6       	in	r0, 0x3f	; 63
    7ee4:	f8 94       	cli
    7ee6:	de bf       	out	0x3e, r29	; 62
    7ee8:	0f be       	out	0x3f, r0	; 63
    7eea:	cd bf       	out	0x3d, r28	; 61
    7eec:	df 91       	pop	r29
    7eee:	cf 91       	pop	r28
    7ef0:	1f 91       	pop	r17
    7ef2:	0f 91       	pop	r16
    7ef4:	ff 90       	pop	r15
    7ef6:	ef 90       	pop	r14
    7ef8:	cf 90       	pop	r12
    7efa:	af 90       	pop	r10
    7efc:	8f 90       	pop	r8
    7efe:	7f 90       	pop	r7
    7f00:	6f 90       	pop	r6
    7f02:	5f 90       	pop	r5
    7f04:	4f 90       	pop	r4
    7f06:	3f 90       	pop	r3
    7f08:	2f 90       	pop	r2
    7f0a:	08 95       	ret

00007f0c <_ZN4UTFT7setFontEPh>:

void UTFT::setFont(uint8_t* font)
{
    7f0c:	dc 01       	movw	r26, r24
	cfont.font=font;
    7f0e:	9b 96       	adiw	r26, 0x2b	; 43
    7f10:	7c 93       	st	X, r23
    7f12:	6e 93       	st	-X, r22
    7f14:	9a 97       	sbiw	r26, 0x2a	; 42
	cfont.x_size=fontbyte(0);
    7f16:	fb 01       	movw	r30, r22
    7f18:	84 91       	lpm	r24, Z
    7f1a:	9c 96       	adiw	r26, 0x2c	; 44
    7f1c:	8c 93       	st	X, r24
    7f1e:	9c 97       	sbiw	r26, 0x2c	; 44
	cfont.y_size=fontbyte(1);
    7f20:	31 96       	adiw	r30, 0x01	; 1
    7f22:	e4 91       	lpm	r30, Z
    7f24:	9d 96       	adiw	r26, 0x2d	; 45
    7f26:	ec 93       	st	X, r30
    7f28:	9d 97       	sbiw	r26, 0x2d	; 45
	cfont.offset=fontbyte(2);
    7f2a:	fb 01       	movw	r30, r22
    7f2c:	32 96       	adiw	r30, 0x02	; 2
    7f2e:	e4 91       	lpm	r30, Z
    7f30:	9e 96       	adiw	r26, 0x2e	; 46
    7f32:	ec 93       	st	X, r30
    7f34:	9e 97       	sbiw	r26, 0x2e	; 46
	cfont.numchars=fontbyte(3);
    7f36:	fb 01       	movw	r30, r22
    7f38:	33 96       	adiw	r30, 0x03	; 3
    7f3a:	64 91       	lpm	r22, Z
    7f3c:	9f 96       	adiw	r26, 0x2f	; 47
    7f3e:	6c 93       	st	X, r22
    7f40:	08 95       	ret

00007f42 <twi_init>:
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    7f42:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <twi_state>
    7f46:	81 e0       	ldi	r24, 0x01	; 1
    7f48:	80 93 2a 09 	sts	0x092A, r24	; 0x80092a <twi_sendStop>
    7f4c:	10 92 29 09 	sts	0x0929, r1	; 0x800929 <twi_inRepStart>
    7f50:	61 e0       	ldi	r22, 0x01	; 1
    7f52:	84 e1       	ldi	r24, 0x14	; 20
    7f54:	0e 94 24 49 	call	0x9248	; 0x9248 <digitalWrite>
    7f58:	61 e0       	ldi	r22, 0x01	; 1
    7f5a:	85 e1       	ldi	r24, 0x15	; 21
    7f5c:	0e 94 24 49 	call	0x9248	; 0x9248 <digitalWrite>
    7f60:	e9 eb       	ldi	r30, 0xB9	; 185
    7f62:	f0 e0       	ldi	r31, 0x00	; 0
    7f64:	80 81       	ld	r24, Z
    7f66:	8e 7f       	andi	r24, 0xFE	; 254
    7f68:	80 83       	st	Z, r24
    7f6a:	80 81       	ld	r24, Z
    7f6c:	8d 7f       	andi	r24, 0xFD	; 253
    7f6e:	80 83       	st	Z, r24
    7f70:	88 e4       	ldi	r24, 0x48	; 72
    7f72:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    7f76:	85 e4       	ldi	r24, 0x45	; 69
    7f78:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    7f7c:	08 95       	ret

00007f7e <twi_setAddress>:
    7f7e:	88 0f       	add	r24, r24
    7f80:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7000ba>
    7f84:	08 95       	ret

00007f86 <twi_transmit>:
    7f86:	40 91 e1 08 	lds	r20, 0x08E1	; 0x8008e1 <twi_txBufferLength>
    7f8a:	26 2f       	mov	r18, r22
    7f8c:	30 e0       	ldi	r19, 0x00	; 0
    7f8e:	24 0f       	add	r18, r20
    7f90:	31 1d       	adc	r19, r1
    7f92:	21 32       	cpi	r18, 0x21	; 33
    7f94:	31 05       	cpc	r19, r1
    7f96:	dc f4       	brge	.+54     	; 0x7fce <twi_transmit+0x48>
    7f98:	20 91 2c 09 	lds	r18, 0x092C	; 0x80092c <twi_state>
    7f9c:	24 30       	cpi	r18, 0x04	; 4
    7f9e:	c9 f4       	brne	.+50     	; 0x7fd2 <twi_transmit+0x4c>
    7fa0:	fc 01       	movw	r30, r24
    7fa2:	80 e0       	ldi	r24, 0x00	; 0
    7fa4:	90 e0       	ldi	r25, 0x00	; 0
    7fa6:	86 17       	cp	r24, r22
    7fa8:	58 f4       	brcc	.+22     	; 0x7fc0 <twi_transmit+0x3a>
    7faa:	30 91 e1 08 	lds	r19, 0x08E1	; 0x8008e1 <twi_txBufferLength>
    7fae:	21 91       	ld	r18, Z+
    7fb0:	dc 01       	movw	r26, r24
    7fb2:	ad 51       	subi	r26, 0x1D	; 29
    7fb4:	b7 4f       	sbci	r27, 0xF7	; 247
    7fb6:	a3 0f       	add	r26, r19
    7fb8:	b1 1d       	adc	r27, r1
    7fba:	2c 93       	st	X, r18
    7fbc:	01 96       	adiw	r24, 0x01	; 1
    7fbe:	f3 cf       	rjmp	.-26     	; 0x7fa6 <twi_transmit+0x20>
    7fc0:	80 91 e1 08 	lds	r24, 0x08E1	; 0x8008e1 <twi_txBufferLength>
    7fc4:	68 0f       	add	r22, r24
    7fc6:	60 93 e1 08 	sts	0x08E1, r22	; 0x8008e1 <twi_txBufferLength>
    7fca:	80 e0       	ldi	r24, 0x00	; 0
    7fcc:	08 95       	ret
    7fce:	81 e0       	ldi	r24, 0x01	; 1
    7fd0:	08 95       	ret
    7fd2:	82 e0       	ldi	r24, 0x02	; 2
    7fd4:	08 95       	ret

00007fd6 <twi_attachSlaveRxEvent>:
    7fd6:	90 93 26 09 	sts	0x0926, r25	; 0x800926 <twi_onSlaveReceive+0x1>
    7fda:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <twi_onSlaveReceive>
    7fde:	08 95       	ret

00007fe0 <twi_attachSlaveTxEvent>:
    7fe0:	90 93 28 09 	sts	0x0928, r25	; 0x800928 <twi_onSlaveTransmit+0x1>
    7fe4:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <twi_onSlaveTransmit>
    7fe8:	08 95       	ret

00007fea <twi_stop>:
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    7fea:	85 ed       	ldi	r24, 0xD5	; 213
    7fec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    7ff0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    7ff4:	84 fd       	sbrc	r24, 4
    7ff6:	fc cf       	rjmp	.-8      	; 0x7ff0 <twi_stop+0x6>
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    7ff8:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <twi_state>
    7ffc:	08 95       	ret

00007ffe <twi_releaseBus>:
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    7ffe:	85 ec       	ldi	r24, 0xC5	; 197
    8000:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>

  // update twi state
  twi_state = TWI_READY;
    8004:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <twi_state>
    8008:	08 95       	ret

0000800a <__vector_39>:
}

ISR(TWI_vect)
{
    800a:	1f 92       	push	r1
    800c:	0f 92       	push	r0
    800e:	0f b6       	in	r0, 0x3f	; 63
    8010:	0f 92       	push	r0
    8012:	11 24       	eor	r1, r1
    8014:	0b b6       	in	r0, 0x3b	; 59
    8016:	0f 92       	push	r0
    8018:	2f 93       	push	r18
    801a:	3f 93       	push	r19
    801c:	4f 93       	push	r20
    801e:	5f 93       	push	r21
    8020:	6f 93       	push	r22
    8022:	7f 93       	push	r23
    8024:	8f 93       	push	r24
    8026:	9f 93       	push	r25
    8028:	af 93       	push	r26
    802a:	bf 93       	push	r27
    802c:	ef 93       	push	r30
    802e:	ff 93       	push	r31
  switch(TW_STATUS){
    8030:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    8034:	88 7f       	andi	r24, 0xF8	; 248
    8036:	80 36       	cpi	r24, 0x60	; 96
    8038:	09 f4       	brne	.+2      	; 0x803c <__vector_39+0x32>
    803a:	9d c0       	rjmp	.+314    	; 0x8176 <__vector_39+0x16c>
    803c:	70 f5       	brcc	.+92     	; 0x809a <__vector_39+0x90>
    803e:	88 32       	cpi	r24, 0x28	; 40
    8040:	09 f4       	brne	.+2      	; 0x8044 <__vector_39+0x3a>
    8042:	5c c0       	rjmp	.+184    	; 0x80fc <__vector_39+0xf2>
    8044:	90 f4       	brcc	.+36     	; 0x806a <__vector_39+0x60>
    8046:	80 31       	cpi	r24, 0x10	; 16
    8048:	09 f4       	brne	.+2      	; 0x804c <__vector_39+0x42>
    804a:	55 c0       	rjmp	.+170    	; 0x80f6 <__vector_39+0xec>
    804c:	38 f4       	brcc	.+14     	; 0x805c <__vector_39+0x52>
    804e:	88 23       	and	r24, r24
    8050:	09 f4       	brne	.+2      	; 0x8054 <__vector_39+0x4a>
    8052:	f3 c0       	rjmp	.+486    	; 0x823a <__vector_39+0x230>
    8054:	88 30       	cpi	r24, 0x08	; 8
    8056:	09 f4       	brne	.+2      	; 0x805a <__vector_39+0x50>
    8058:	4e c0       	rjmp	.+156    	; 0x80f6 <__vector_39+0xec>
    805a:	f2 c0       	rjmp	.+484    	; 0x8240 <__vector_39+0x236>
    805c:	88 31       	cpi	r24, 0x18	; 24
    805e:	09 f4       	brne	.+2      	; 0x8062 <__vector_39+0x58>
    8060:	4d c0       	rjmp	.+154    	; 0x80fc <__vector_39+0xf2>
    8062:	80 32       	cpi	r24, 0x20	; 32
    8064:	09 f4       	brne	.+2      	; 0x8068 <__vector_39+0x5e>
    8066:	5e c0       	rjmp	.+188    	; 0x8124 <__vector_39+0x11a>
    8068:	eb c0       	rjmp	.+470    	; 0x8240 <__vector_39+0x236>
    806a:	80 34       	cpi	r24, 0x40	; 64
    806c:	09 f4       	brne	.+2      	; 0x8070 <__vector_39+0x66>
    806e:	69 c0       	rjmp	.+210    	; 0x8142 <__vector_39+0x138>
    8070:	50 f4       	brcc	.+20     	; 0x8086 <__vector_39+0x7c>
    8072:	80 33       	cpi	r24, 0x30	; 48
    8074:	09 f4       	brne	.+2      	; 0x8078 <__vector_39+0x6e>
    8076:	56 c0       	rjmp	.+172    	; 0x8124 <__vector_39+0x11a>
    8078:	88 33       	cpi	r24, 0x38	; 56
    807a:	09 f0       	breq	.+2      	; 0x807e <__vector_39+0x74>
    807c:	e1 c0       	rjmp	.+450    	; 0x8240 <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    807e:	80 93 bf 08 	sts	0x08BF, r24	; 0x8008bf <twi_error>
      twi_releaseBus();
    8082:	bd df       	rcall	.-134    	; 0x7ffe <twi_releaseBus>
      break;
    8084:	dd c0       	rjmp	.+442    	; 0x8240 <__vector_39+0x236>
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    8086:	80 35       	cpi	r24, 0x50	; 80
    8088:	09 f4       	brne	.+2      	; 0x808c <__vector_39+0x82>
    808a:	4f c0       	rjmp	.+158    	; 0x812a <__vector_39+0x120>
    808c:	88 35       	cpi	r24, 0x58	; 88
    808e:	09 f4       	brne	.+2      	; 0x8092 <__vector_39+0x88>
    8090:	5d c0       	rjmp	.+186    	; 0x814c <__vector_39+0x142>
    8092:	88 34       	cpi	r24, 0x48	; 72
    8094:	09 f0       	breq	.+2      	; 0x8098 <__vector_39+0x8e>
    8096:	d4 c0       	rjmp	.+424    	; 0x8240 <__vector_39+0x236>
    8098:	d2 c0       	rjmp	.+420    	; 0x823e <__vector_39+0x234>
    809a:	88 39       	cpi	r24, 0x98	; 152
    809c:	09 f4       	brne	.+2      	; 0x80a0 <__vector_39+0x96>
    809e:	c3 c0       	rjmp	.+390    	; 0x8226 <__vector_39+0x21c>
    80a0:	a8 f4       	brcc	.+42     	; 0x80cc <__vector_39+0xc2>
    80a2:	88 37       	cpi	r24, 0x78	; 120
    80a4:	09 f4       	brne	.+2      	; 0x80a8 <__vector_39+0x9e>
    80a6:	67 c0       	rjmp	.+206    	; 0x8176 <__vector_39+0x16c>
    80a8:	38 f4       	brcc	.+14     	; 0x80b8 <__vector_39+0xae>
    80aa:	88 36       	cpi	r24, 0x68	; 104
    80ac:	09 f4       	brne	.+2      	; 0x80b0 <__vector_39+0xa6>
    80ae:	63 c0       	rjmp	.+198    	; 0x8176 <__vector_39+0x16c>
    80b0:	80 37       	cpi	r24, 0x70	; 112
    80b2:	09 f4       	brne	.+2      	; 0x80b6 <__vector_39+0xac>
    80b4:	60 c0       	rjmp	.+192    	; 0x8176 <__vector_39+0x16c>
    80b6:	c4 c0       	rjmp	.+392    	; 0x8240 <__vector_39+0x236>
    80b8:	88 38       	cpi	r24, 0x88	; 136
    80ba:	09 f4       	brne	.+2      	; 0x80be <__vector_39+0xb4>
    80bc:	b4 c0       	rjmp	.+360    	; 0x8226 <__vector_39+0x21c>
    80be:	80 39       	cpi	r24, 0x90	; 144
    80c0:	09 f4       	brne	.+2      	; 0x80c4 <__vector_39+0xba>
    80c2:	5f c0       	rjmp	.+190    	; 0x8182 <__vector_39+0x178>
    80c4:	80 38       	cpi	r24, 0x80	; 128
    80c6:	09 f0       	breq	.+2      	; 0x80ca <__vector_39+0xc0>
    80c8:	bb c0       	rjmp	.+374    	; 0x8240 <__vector_39+0x236>
    80ca:	5b c0       	rjmp	.+182    	; 0x8182 <__vector_39+0x178>
    80cc:	80 3b       	cpi	r24, 0xB0	; 176
    80ce:	09 f4       	brne	.+2      	; 0x80d2 <__vector_39+0xc8>
    80d0:	82 c0       	rjmp	.+260    	; 0x81d6 <__vector_39+0x1cc>
    80d2:	38 f4       	brcc	.+14     	; 0x80e2 <__vector_39+0xd8>
    80d4:	80 3a       	cpi	r24, 0xA0	; 160
    80d6:	09 f4       	brne	.+2      	; 0x80da <__vector_39+0xd0>
    80d8:	66 c0       	rjmp	.+204    	; 0x81a6 <__vector_39+0x19c>
    80da:	88 3a       	cpi	r24, 0xA8	; 168
    80dc:	09 f4       	brne	.+2      	; 0x80e0 <__vector_39+0xd6>
    80de:	7b c0       	rjmp	.+246    	; 0x81d6 <__vector_39+0x1cc>
    80e0:	af c0       	rjmp	.+350    	; 0x8240 <__vector_39+0x236>
    80e2:	80 3c       	cpi	r24, 0xC0	; 192
    80e4:	09 f4       	brne	.+2      	; 0x80e8 <__vector_39+0xde>
    80e6:	a3 c0       	rjmp	.+326    	; 0x822e <__vector_39+0x224>
    80e8:	88 3c       	cpi	r24, 0xC8	; 200
    80ea:	09 f4       	brne	.+2      	; 0x80ee <__vector_39+0xe4>
    80ec:	a0 c0       	rjmp	.+320    	; 0x822e <__vector_39+0x224>
    80ee:	88 3b       	cpi	r24, 0xB8	; 184
    80f0:	09 f4       	brne	.+2      	; 0x80f4 <__vector_39+0xea>
    80f2:	86 c0       	rjmp	.+268    	; 0x8200 <__vector_39+0x1f6>
    80f4:	a5 c0       	rjmp	.+330    	; 0x8240 <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    80f6:	80 91 2b 09 	lds	r24, 0x092B	; 0x80092b <twi_slarw>
    80fa:	10 c0       	rjmp	.+32     	; 0x811c <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    80fc:	90 91 04 09 	lds	r25, 0x0904	; 0x800904 <twi_masterBufferIndex>
    8100:	80 91 03 09 	lds	r24, 0x0903	; 0x800903 <twi_masterBufferLength>
    8104:	98 17       	cp	r25, r24
    8106:	70 f5       	brcc	.+92     	; 0x8164 <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    8108:	e0 91 04 09 	lds	r30, 0x0904	; 0x800904 <twi_masterBufferIndex>
    810c:	81 e0       	ldi	r24, 0x01	; 1
    810e:	8e 0f       	add	r24, r30
    8110:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <twi_masterBufferIndex>
    8114:	f0 e0       	ldi	r31, 0x00	; 0
    8116:	eb 5f       	subi	r30, 0xFB	; 251
    8118:	f6 4f       	sbci	r31, 0xF6	; 246
    811a:	80 81       	ld	r24, Z
    811c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    8120:	85 ec       	ldi	r24, 0xC5	; 197
    8122:	82 c0       	rjmp	.+260    	; 0x8228 <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    8124:	80 93 bf 08 	sts	0x08BF, r24	; 0x8008bf <twi_error>
    8128:	8a c0       	rjmp	.+276    	; 0x823e <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    812a:	e0 91 04 09 	lds	r30, 0x0904	; 0x800904 <twi_masterBufferIndex>
    812e:	81 e0       	ldi	r24, 0x01	; 1
    8130:	8e 0f       	add	r24, r30
    8132:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <twi_masterBufferIndex>
    8136:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    813a:	f0 e0       	ldi	r31, 0x00	; 0
    813c:	eb 5f       	subi	r30, 0xFB	; 251
    813e:	f6 4f       	sbci	r31, 0xF6	; 246
    8140:	80 83       	st	Z, r24
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    8142:	90 91 04 09 	lds	r25, 0x0904	; 0x800904 <twi_masterBufferIndex>
    8146:	80 91 03 09 	lds	r24, 0x0903	; 0x800903 <twi_masterBufferLength>
    814a:	6a c0       	rjmp	.+212    	; 0x8220 <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    814c:	e0 91 04 09 	lds	r30, 0x0904	; 0x800904 <twi_masterBufferIndex>
    8150:	81 e0       	ldi	r24, 0x01	; 1
    8152:	8e 0f       	add	r24, r30
    8154:	80 93 04 09 	sts	0x0904, r24	; 0x800904 <twi_masterBufferIndex>
    8158:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    815c:	f0 e0       	ldi	r31, 0x00	; 0
    815e:	eb 5f       	subi	r30, 0xFB	; 251
    8160:	f6 4f       	sbci	r31, 0xF6	; 246
    8162:	80 83       	st	Z, r24
	if (twi_sendStop)
    8164:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <twi_sendStop>
    8168:	81 11       	cpse	r24, r1
    816a:	69 c0       	rjmp	.+210    	; 0x823e <__vector_39+0x234>
          twi_stop();
	else {
	  twi_inRepStart = true;	// we're gonna send the START
    816c:	81 e0       	ldi	r24, 0x01	; 1
    816e:	80 93 29 09 	sts	0x0929, r24	; 0x800929 <twi_inRepStart>
	  // don't enable the interrupt. We'll generate the start, but we 
	  // avoid handling the interrupt until we're in the next transaction,
	  // at the point where we would normally issue the start.
	  TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    8172:	84 ea       	ldi	r24, 0xA4	; 164
    8174:	5d c0       	rjmp	.+186    	; 0x8230 <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    8176:	83 e0       	ldi	r24, 0x03	; 3
    8178:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    817c:	10 92 c0 08 	sts	0x08C0, r1	; 0x8008c0 <twi_rxBufferIndex>
    8180:	cf cf       	rjmp	.-98     	; 0x8120 <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    8182:	80 91 c0 08 	lds	r24, 0x08C0	; 0x8008c0 <twi_rxBufferIndex>
    8186:	80 32       	cpi	r24, 0x20	; 32
    8188:	08 f0       	brcs	.+2      	; 0x818c <__vector_39+0x182>
    818a:	4d c0       	rjmp	.+154    	; 0x8226 <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    818c:	e0 91 c0 08 	lds	r30, 0x08C0	; 0x8008c0 <twi_rxBufferIndex>
    8190:	81 e0       	ldi	r24, 0x01	; 1
    8192:	8e 0f       	add	r24, r30
    8194:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <twi_rxBufferIndex>
    8198:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    819c:	f0 e0       	ldi	r31, 0x00	; 0
    819e:	ef 53       	subi	r30, 0x3F	; 63
    81a0:	f7 4f       	sbci	r31, 0xF7	; 247
    81a2:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    81a4:	bd cf       	rjmp	.-134    	; 0x8120 <__vector_39+0x116>
    81a6:	2b df       	rcall	.-426    	; 0x7ffe <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    81a8:	80 91 c0 08 	lds	r24, 0x08C0	; 0x8008c0 <twi_rxBufferIndex>
    81ac:	80 32       	cpi	r24, 0x20	; 32
    81ae:	30 f4       	brcc	.+12     	; 0x81bc <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    81b0:	e0 91 c0 08 	lds	r30, 0x08C0	; 0x8008c0 <twi_rxBufferIndex>
    81b4:	f0 e0       	ldi	r31, 0x00	; 0
    81b6:	ef 53       	subi	r30, 0x3F	; 63
    81b8:	f7 4f       	sbci	r31, 0xF7	; 247
    81ba:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    81bc:	60 91 c0 08 	lds	r22, 0x08C0	; 0x8008c0 <twi_rxBufferIndex>
    81c0:	70 e0       	ldi	r23, 0x00	; 0
    81c2:	e0 91 25 09 	lds	r30, 0x0925	; 0x800925 <twi_onSlaveReceive>
    81c6:	f0 91 26 09 	lds	r31, 0x0926	; 0x800926 <twi_onSlaveReceive+0x1>
    81ca:	81 ec       	ldi	r24, 0xC1	; 193
    81cc:	98 e0       	ldi	r25, 0x08	; 8
    81ce:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    81d0:	10 92 c0 08 	sts	0x08C0, r1	; 0x8008c0 <twi_rxBufferIndex>
      break;
    81d4:	35 c0       	rjmp	.+106    	; 0x8240 <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    81d6:	84 e0       	ldi	r24, 0x04	; 4
    81d8:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    81dc:	10 92 e2 08 	sts	0x08E2, r1	; 0x8008e2 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    81e0:	10 92 e1 08 	sts	0x08E1, r1	; 0x8008e1 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    81e4:	e0 91 27 09 	lds	r30, 0x0927	; 0x800927 <twi_onSlaveTransmit>
    81e8:	f0 91 28 09 	lds	r31, 0x0928	; 0x800928 <twi_onSlaveTransmit+0x1>
    81ec:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    81ee:	80 91 e1 08 	lds	r24, 0x08E1	; 0x8008e1 <twi_txBufferLength>
    81f2:	81 11       	cpse	r24, r1
    81f4:	05 c0       	rjmp	.+10     	; 0x8200 <__vector_39+0x1f6>
        twi_txBufferLength = 1;
    81f6:	81 e0       	ldi	r24, 0x01	; 1
    81f8:	80 93 e1 08 	sts	0x08E1, r24	; 0x8008e1 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    81fc:	10 92 e3 08 	sts	0x08E3, r1	; 0x8008e3 <twi_txBuffer>
      }
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    8200:	e0 91 e2 08 	lds	r30, 0x08E2	; 0x8008e2 <twi_txBufferIndex>
    8204:	81 e0       	ldi	r24, 0x01	; 1
    8206:	8e 0f       	add	r24, r30
    8208:	80 93 e2 08 	sts	0x08E2, r24	; 0x8008e2 <twi_txBufferIndex>
    820c:	f0 e0       	ldi	r31, 0x00	; 0
    820e:	ed 51       	subi	r30, 0x1D	; 29
    8210:	f7 4f       	sbci	r31, 0xF7	; 247
    8212:	80 81       	ld	r24, Z
    8214:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    8218:	90 91 e2 08 	lds	r25, 0x08E2	; 0x8008e2 <twi_txBufferIndex>
    821c:	80 91 e1 08 	lds	r24, 0x08E1	; 0x8008e1 <twi_txBufferLength>
    8220:	98 17       	cp	r25, r24
    8222:	08 f4       	brcc	.+2      	; 0x8226 <__vector_39+0x21c>
    8224:	7d cf       	rjmp	.-262    	; 0x8120 <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
	  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    8226:	85 e8       	ldi	r24, 0x85	; 133
    8228:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    822c:	09 c0       	rjmp	.+18     	; 0x8240 <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    822e:	85 ec       	ldi	r24, 0xC5	; 197
    8230:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    8234:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <twi_state>
      break;
    8238:	03 c0       	rjmp	.+6      	; 0x8240 <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    823a:	10 92 bf 08 	sts	0x08BF, r1	; 0x8008bf <twi_error>
      twi_stop();
    823e:	d5 de       	rcall	.-598    	; 0x7fea <twi_stop>
      break;
  }
}
    8240:	ff 91       	pop	r31
    8242:	ef 91       	pop	r30
    8244:	bf 91       	pop	r27
    8246:	af 91       	pop	r26
    8248:	9f 91       	pop	r25
    824a:	8f 91       	pop	r24
    824c:	7f 91       	pop	r23
    824e:	6f 91       	pop	r22
    8250:	5f 91       	pop	r21
    8252:	4f 91       	pop	r20
    8254:	3f 91       	pop	r19
    8256:	2f 91       	pop	r18
    8258:	0f 90       	pop	r0
    825a:	0b be       	out	0x3b, r0	; 59
    825c:	0f 90       	pop	r0
    825e:	0f be       	out	0x3f, r0	; 63
    8260:	0f 90       	pop	r0
    8262:	1f 90       	pop	r1
    8264:	18 95       	reti

00008266 <_ZN7TwoWire9availableEv>:
}

// sets function called on slave write
void TwoWire::onReceive( void (*function)(int) )
{
  user_onReceive = function;
    8266:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <_ZN7TwoWire14rxBufferLengthE>
    826a:	90 e0       	ldi	r25, 0x00	; 0
    826c:	20 91 61 09 	lds	r18, 0x0961	; 0x800961 <_ZN7TwoWire13rxBufferIndexE>
    8270:	82 1b       	sub	r24, r18
    8272:	91 09       	sbc	r25, r1
    8274:	08 95       	ret

00008276 <_ZN7TwoWire4readEv>:
    8276:	90 91 61 09 	lds	r25, 0x0961	; 0x800961 <_ZN7TwoWire13rxBufferIndexE>
    827a:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <_ZN7TwoWire14rxBufferLengthE>
    827e:	98 17       	cp	r25, r24
    8280:	50 f4       	brcc	.+20     	; 0x8296 <_ZN7TwoWire4readEv+0x20>
    8282:	e9 2f       	mov	r30, r25
    8284:	f0 e0       	ldi	r31, 0x00	; 0
    8286:	ee 59       	subi	r30, 0x9E	; 158
    8288:	f6 4f       	sbci	r31, 0xF6	; 246
    828a:	20 81       	ld	r18, Z
    828c:	30 e0       	ldi	r19, 0x00	; 0
    828e:	9f 5f       	subi	r25, 0xFF	; 255
    8290:	90 93 61 09 	sts	0x0961, r25	; 0x800961 <_ZN7TwoWire13rxBufferIndexE>
    8294:	02 c0       	rjmp	.+4      	; 0x829a <_ZN7TwoWire4readEv+0x24>
    8296:	2f ef       	ldi	r18, 0xFF	; 255
    8298:	3f ef       	ldi	r19, 0xFF	; 255
    829a:	c9 01       	movw	r24, r18
    829c:	08 95       	ret

0000829e <_ZN7TwoWire4peekEv>:
    829e:	e0 91 61 09 	lds	r30, 0x0961	; 0x800961 <_ZN7TwoWire13rxBufferIndexE>
    82a2:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <_ZN7TwoWire14rxBufferLengthE>
    82a6:	e8 17       	cp	r30, r24
    82a8:	30 f4       	brcc	.+12     	; 0x82b6 <_ZN7TwoWire4peekEv+0x18>
    82aa:	f0 e0       	ldi	r31, 0x00	; 0
    82ac:	ee 59       	subi	r30, 0x9E	; 158
    82ae:	f6 4f       	sbci	r31, 0xF6	; 246
    82b0:	80 81       	ld	r24, Z
    82b2:	90 e0       	ldi	r25, 0x00	; 0
    82b4:	08 95       	ret
    82b6:	8f ef       	ldi	r24, 0xFF	; 255
    82b8:	9f ef       	ldi	r25, 0xFF	; 255
    82ba:	08 95       	ret

000082bc <_ZN7TwoWire5flushEv>:
    82bc:	08 95       	ret

000082be <_ZN7TwoWire16onReceiveServiceEPhi>:
    82be:	cf 93       	push	r28
    82c0:	df 93       	push	r29
    82c2:	ec 01       	movw	r28, r24
    82c4:	e0 91 39 09 	lds	r30, 0x0939	; 0x800939 <_ZN7TwoWire14user_onReceiveE>
    82c8:	f0 91 3a 09 	lds	r31, 0x093A	; 0x80093a <_ZN7TwoWire14user_onReceiveE+0x1>
    82cc:	30 97       	sbiw	r30, 0x00	; 0
    82ce:	f1 f0       	breq	.+60     	; 0x830c <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    82d0:	90 91 61 09 	lds	r25, 0x0961	; 0x800961 <_ZN7TwoWire13rxBufferIndexE>
    82d4:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <_ZN7TwoWire14rxBufferLengthE>
    82d8:	98 17       	cp	r25, r24
    82da:	c0 f0       	brcs	.+48     	; 0x830c <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    82dc:	90 e0       	ldi	r25, 0x00	; 0
    82de:	29 2f       	mov	r18, r25
    82e0:	30 e0       	ldi	r19, 0x00	; 0
    82e2:	26 17       	cp	r18, r22
    82e4:	37 07       	cpc	r19, r23
    82e6:	54 f4       	brge	.+20     	; 0x82fc <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    82e8:	de 01       	movw	r26, r28
    82ea:	a2 0f       	add	r26, r18
    82ec:	b3 1f       	adc	r27, r19
    82ee:	4c 91       	ld	r20, X
    82f0:	d9 01       	movw	r26, r18
    82f2:	ae 59       	subi	r26, 0x9E	; 158
    82f4:	b6 4f       	sbci	r27, 0xF6	; 246
    82f6:	4c 93       	st	X, r20
    82f8:	9f 5f       	subi	r25, 0xFF	; 255
    82fa:	f1 cf       	rjmp	.-30     	; 0x82de <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    82fc:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <_ZN7TwoWire13rxBufferIndexE>
    8300:	60 93 60 09 	sts	0x0960, r22	; 0x800960 <_ZN7TwoWire14rxBufferLengthE>
    8304:	cb 01       	movw	r24, r22
    8306:	df 91       	pop	r29
    8308:	cf 91       	pop	r28
    830a:	19 94       	eijmp
    830c:	df 91       	pop	r29
    830e:	cf 91       	pop	r28
    8310:	08 95       	ret

00008312 <_ZN7TwoWire16onRequestServiceEv>:
    8312:	e0 91 3b 09 	lds	r30, 0x093B	; 0x80093b <_ZN7TwoWire14user_onRequestE>
    8316:	f0 91 3c 09 	lds	r31, 0x093C	; 0x80093c <_ZN7TwoWire14user_onRequestE+0x1>
    831a:	30 97       	sbiw	r30, 0x00	; 0
    831c:	29 f0       	breq	.+10     	; 0x8328 <_ZN7TwoWire16onRequestServiceEv+0x16>
    831e:	10 92 3f 09 	sts	0x093F, r1	; 0x80093f <_ZN7TwoWire13txBufferIndexE>
    8322:	10 92 3e 09 	sts	0x093E, r1	; 0x80093e <_ZN7TwoWire14txBufferLengthE>
    8326:	19 94       	eijmp
    8328:	08 95       	ret

0000832a <_ZN7TwoWire5writeEPKhj>:
    832a:	cf 92       	push	r12
    832c:	df 92       	push	r13
    832e:	ef 92       	push	r14
    8330:	ff 92       	push	r15
    8332:	0f 93       	push	r16
    8334:	1f 93       	push	r17
    8336:	cf 93       	push	r28
    8338:	df 93       	push	r29
    833a:	7c 01       	movw	r14, r24
    833c:	cb 01       	movw	r24, r22
    833e:	8a 01       	movw	r16, r20
    8340:	20 91 3d 09 	lds	r18, 0x093D	; 0x80093d <_ZN7TwoWire12transmittingE>
    8344:	22 23       	and	r18, r18
    8346:	89 f0       	breq	.+34     	; 0x836a <_ZN7TwoWire5writeEPKhj+0x40>
    8348:	eb 01       	movw	r28, r22
    834a:	6b 01       	movw	r12, r22
    834c:	c4 0e       	add	r12, r20
    834e:	d5 1e       	adc	r13, r21
    8350:	cc 15       	cp	r28, r12
    8352:	dd 05       	cpc	r29, r13
    8354:	61 f0       	breq	.+24     	; 0x836e <_ZN7TwoWire5writeEPKhj+0x44>
    8356:	69 91       	ld	r22, Y+
    8358:	d7 01       	movw	r26, r14
    835a:	ed 91       	ld	r30, X+
    835c:	fc 91       	ld	r31, X
    835e:	01 90       	ld	r0, Z+
    8360:	f0 81       	ld	r31, Z
    8362:	e0 2d       	mov	r30, r0
    8364:	c7 01       	movw	r24, r14
    8366:	19 95       	eicall
    8368:	f3 cf       	rjmp	.-26     	; 0x8350 <_ZN7TwoWire5writeEPKhj+0x26>
    836a:	64 2f       	mov	r22, r20
    836c:	0c de       	rcall	.-1000   	; 0x7f86 <twi_transmit>
    836e:	c8 01       	movw	r24, r16
    8370:	df 91       	pop	r29
    8372:	cf 91       	pop	r28
    8374:	1f 91       	pop	r17
    8376:	0f 91       	pop	r16
    8378:	ff 90       	pop	r15
    837a:	ef 90       	pop	r14
    837c:	df 90       	pop	r13
    837e:	cf 90       	pop	r12
    8380:	08 95       	ret

00008382 <_ZN7TwoWire5writeEh>:
    8382:	cf 93       	push	r28
    8384:	df 93       	push	r29
    8386:	1f 92       	push	r1
    8388:	cd b7       	in	r28, 0x3d	; 61
    838a:	de b7       	in	r29, 0x3e	; 62
    838c:	69 83       	std	Y+1, r22	; 0x01
    838e:	20 91 3d 09 	lds	r18, 0x093D	; 0x80093d <_ZN7TwoWire12transmittingE>
    8392:	22 23       	and	r18, r18
    8394:	d1 f0       	breq	.+52     	; 0x83ca <_ZN7TwoWire5writeEh+0x48>
    8396:	20 91 3e 09 	lds	r18, 0x093E	; 0x80093e <_ZN7TwoWire14txBufferLengthE>
    839a:	20 32       	cpi	r18, 0x20	; 32
    839c:	40 f0       	brcs	.+16     	; 0x83ae <_ZN7TwoWire5writeEh+0x2c>
    839e:	21 e0       	ldi	r18, 0x01	; 1
    83a0:	30 e0       	ldi	r19, 0x00	; 0
    83a2:	fc 01       	movw	r30, r24
    83a4:	33 83       	std	Z+3, r19	; 0x03
    83a6:	22 83       	std	Z+2, r18	; 0x02
    83a8:	80 e0       	ldi	r24, 0x00	; 0
    83aa:	90 e0       	ldi	r25, 0x00	; 0
    83ac:	14 c0       	rjmp	.+40     	; 0x83d6 <_ZN7TwoWire5writeEh+0x54>
    83ae:	80 91 3f 09 	lds	r24, 0x093F	; 0x80093f <_ZN7TwoWire13txBufferIndexE>
    83b2:	e8 2f       	mov	r30, r24
    83b4:	f0 e0       	ldi	r31, 0x00	; 0
    83b6:	e0 5c       	subi	r30, 0xC0	; 192
    83b8:	f6 4f       	sbci	r31, 0xF6	; 246
    83ba:	99 81       	ldd	r25, Y+1	; 0x01
    83bc:	90 83       	st	Z, r25
    83be:	8f 5f       	subi	r24, 0xFF	; 255
    83c0:	80 93 3f 09 	sts	0x093F, r24	; 0x80093f <_ZN7TwoWire13txBufferIndexE>
    83c4:	80 93 3e 09 	sts	0x093E, r24	; 0x80093e <_ZN7TwoWire14txBufferLengthE>
    83c8:	04 c0       	rjmp	.+8      	; 0x83d2 <_ZN7TwoWire5writeEh+0x50>
    83ca:	61 e0       	ldi	r22, 0x01	; 1
    83cc:	ce 01       	movw	r24, r28
    83ce:	01 96       	adiw	r24, 0x01	; 1
    83d0:	da dd       	rcall	.-1100   	; 0x7f86 <twi_transmit>
    83d2:	81 e0       	ldi	r24, 0x01	; 1
    83d4:	90 e0       	ldi	r25, 0x00	; 0
    83d6:	0f 90       	pop	r0
    83d8:	df 91       	pop	r29
    83da:	cf 91       	pop	r28
    83dc:	08 95       	ret

000083de <_ZN7TwoWireC1Ev>:
    83de:	fc 01       	movw	r30, r24
    83e0:	13 82       	std	Z+3, r1	; 0x03
    83e2:	12 82       	std	Z+2, r1	; 0x02
    83e4:	88 ee       	ldi	r24, 0xE8	; 232
    83e6:	93 e0       	ldi	r25, 0x03	; 3
    83e8:	a0 e0       	ldi	r26, 0x00	; 0
    83ea:	b0 e0       	ldi	r27, 0x00	; 0
    83ec:	84 83       	std	Z+4, r24	; 0x04
    83ee:	95 83       	std	Z+5, r25	; 0x05
    83f0:	a6 83       	std	Z+6, r26	; 0x06
    83f2:	b7 83       	std	Z+7, r27	; 0x07
    83f4:	82 e7       	ldi	r24, 0x72	; 114
    83f6:	93 e0       	ldi	r25, 0x03	; 3
    83f8:	91 83       	std	Z+1, r25	; 0x01
    83fa:	80 83       	st	Z, r24
    83fc:	08 95       	ret

000083fe <_ZN7TwoWire5beginEv>:
    83fe:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <_ZN7TwoWire13rxBufferIndexE>
    8402:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <_ZN7TwoWire14rxBufferLengthE>
    8406:	10 92 3f 09 	sts	0x093F, r1	; 0x80093f <_ZN7TwoWire13txBufferIndexE>
    840a:	10 92 3e 09 	sts	0x093E, r1	; 0x80093e <_ZN7TwoWire14txBufferLengthE>
    840e:	99 cd       	rjmp	.-1230   	; 0x7f42 <twi_init>

00008410 <_ZN7TwoWire5beginEh>:
    8410:	cf 93       	push	r28
    8412:	df 93       	push	r29
    8414:	ec 01       	movw	r28, r24
    8416:	86 2f       	mov	r24, r22
    8418:	b2 dd       	rcall	.-1180   	; 0x7f7e <twi_setAddress>
    841a:	89 e8       	ldi	r24, 0x89	; 137
    841c:	91 e4       	ldi	r25, 0x41	; 65
    841e:	e0 dd       	rcall	.-1088   	; 0x7fe0 <twi_attachSlaveTxEvent>
    8420:	8f e5       	ldi	r24, 0x5F	; 95
    8422:	91 e4       	ldi	r25, 0x41	; 65
    8424:	d8 dd       	rcall	.-1104   	; 0x7fd6 <twi_attachSlaveRxEvent>
    8426:	ce 01       	movw	r24, r28
    8428:	df 91       	pop	r29
    842a:	cf 91       	pop	r28
    842c:	e8 cf       	rjmp	.-48     	; 0x83fe <_ZN7TwoWire5beginEv>

0000842e <_ZN7TwoWire5beginEi>:
    842e:	f0 cf       	rjmp	.-32     	; 0x8410 <_ZN7TwoWire5beginEh>

00008430 <_ZN7TwoWire9onRequestEPFvvE>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    8430:	70 93 3c 09 	sts	0x093C, r23	; 0x80093c <_ZN7TwoWire14user_onRequestE+0x1>
    8434:	60 93 3b 09 	sts	0x093B, r22	; 0x80093b <_ZN7TwoWire14user_onRequestE>
    8438:	08 95       	ret

0000843a <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    843a:	8d e2       	ldi	r24, 0x2D	; 45
    843c:	99 e0       	ldi	r25, 0x09	; 9
    843e:	cf cf       	rjmp	.-98     	; 0x83de <_ZN7TwoWireC1Ev>

00008440 <_ZN6WindowC1Ev>:
 * Window implementation
 * 
 * This class draws the window (middle section of the screen) representing synthesis parameters
 */

Window::Window() {
    8440:	fc 01       	movw	r30, r24
    8442:	10 82       	st	Z, r1
    8444:	11 82       	std	Z+1, r1	; 0x01
    8446:	8c ed       	ldi	r24, 0xDC	; 220
    8448:	90 e0       	ldi	r25, 0x00	; 0
    844a:	93 83       	std	Z+3, r25	; 0x03
    844c:	82 83       	std	Z+2, r24	; 0x02
    844e:	14 82       	std	Z+4, r1	; 0x04
    8450:	80 e9       	ldi	r24, 0x90	; 144
    8452:	91 e0       	ldi	r25, 0x01	; 1
    8454:	96 83       	std	Z+6, r25	; 0x06
    8456:	85 83       	std	Z+5, r24	; 0x05
    8458:	17 82       	std	Z+7, r1	; 0x07
    845a:	80 e4       	ldi	r24, 0x40	; 64
    845c:	9f e1       	ldi	r25, 0x1F	; 31
    845e:	91 87       	std	Z+9, r25	; 0x09
    8460:	80 87       	std	Z+8, r24	; 0x08
    8462:	88 e2       	ldi	r24, 0x28	; 40
    8464:	82 87       	std	Z+10, r24	; 0x0a
    8466:	13 86       	std	Z+11, r1	; 0x0b
    8468:	15 86       	std	Z+13, r1	; 0x0d
    846a:	14 86       	std	Z+12, r1	; 0x0c
    846c:	88 ec       	ldi	r24, 0xC8	; 200
    846e:	90 e0       	ldi	r25, 0x00	; 0
    8470:	97 87       	std	Z+15, r25	; 0x0f
    8472:	86 87       	std	Z+14, r24	; 0x0e
    8474:	84 eb       	ldi	r24, 0xB4	; 180
    8476:	80 8b       	std	Z+16, r24	; 0x10
    8478:	8a ef       	ldi	r24, 0xFA	; 250
    847a:	90 e0       	ldi	r25, 0x00	; 0
    847c:	92 8b       	std	Z+18, r25	; 0x12
    847e:	81 8b       	std	Z+17, r24	; 0x11
    8480:	13 8a       	std	Z+19, r1	; 0x13
    8482:	14 8a       	std	Z+20, r1	; 0x14
    8484:	15 8a       	std	Z+21, r1	; 0x15
    8486:	16 8a       	std	Z+22, r1	; 0x16
    8488:	8f e7       	ldi	r24, 0x7F	; 127
    848a:	87 8b       	std	Z+23, r24	; 0x17
    848c:	10 8e       	std	Z+24, r1	; 0x18
    848e:	11 8e       	std	Z+25, r1	; 0x19
    8490:	12 8e       	std	Z+26, r1	; 0x1a
    8492:	08 95       	ret

00008494 <__subsf3>:
    8494:	50 58       	subi	r21, 0x80	; 128

00008496 <__addsf3>:
    8496:	bb 27       	eor	r27, r27
    8498:	aa 27       	eor	r26, r26
    849a:	0e d0       	rcall	.+28     	; 0x84b8 <__addsf3x>
    849c:	a0 c1       	rjmp	.+832    	; 0x87de <__fp_round>
    849e:	69 d1       	rcall	.+722    	; 0x8772 <__fp_pscA>
    84a0:	30 f0       	brcs	.+12     	; 0x84ae <__addsf3+0x18>
    84a2:	6e d1       	rcall	.+732    	; 0x8780 <__fp_pscB>
    84a4:	20 f0       	brcs	.+8      	; 0x84ae <__addsf3+0x18>
    84a6:	31 f4       	brne	.+12     	; 0x84b4 <__addsf3+0x1e>
    84a8:	9f 3f       	cpi	r25, 0xFF	; 255
    84aa:	11 f4       	brne	.+4      	; 0x84b0 <__addsf3+0x1a>
    84ac:	1e f4       	brtc	.+6      	; 0x84b4 <__addsf3+0x1e>
    84ae:	5e c1       	rjmp	.+700    	; 0x876c <__fp_nan>
    84b0:	0e f4       	brtc	.+2      	; 0x84b4 <__addsf3+0x1e>
    84b2:	e0 95       	com	r30
    84b4:	e7 fb       	bst	r30, 7
    84b6:	54 c1       	rjmp	.+680    	; 0x8760 <__fp_inf>

000084b8 <__addsf3x>:
    84b8:	e9 2f       	mov	r30, r25
    84ba:	b3 d1       	rcall	.+870    	; 0x8822 <__fp_split3>
    84bc:	80 f3       	brcs	.-32     	; 0x849e <__addsf3+0x8>
    84be:	ba 17       	cp	r27, r26
    84c0:	62 07       	cpc	r22, r18
    84c2:	73 07       	cpc	r23, r19
    84c4:	84 07       	cpc	r24, r20
    84c6:	95 07       	cpc	r25, r21
    84c8:	18 f0       	brcs	.+6      	; 0x84d0 <__addsf3x+0x18>
    84ca:	71 f4       	brne	.+28     	; 0x84e8 <__addsf3x+0x30>
    84cc:	9e f5       	brtc	.+102    	; 0x8534 <__addsf3x+0x7c>
    84ce:	cb c1       	rjmp	.+918    	; 0x8866 <__fp_zero>
    84d0:	0e f4       	brtc	.+2      	; 0x84d4 <__addsf3x+0x1c>
    84d2:	e0 95       	com	r30
    84d4:	0b 2e       	mov	r0, r27
    84d6:	ba 2f       	mov	r27, r26
    84d8:	a0 2d       	mov	r26, r0
    84da:	0b 01       	movw	r0, r22
    84dc:	b9 01       	movw	r22, r18
    84de:	90 01       	movw	r18, r0
    84e0:	0c 01       	movw	r0, r24
    84e2:	ca 01       	movw	r24, r20
    84e4:	a0 01       	movw	r20, r0
    84e6:	11 24       	eor	r1, r1
    84e8:	ff 27       	eor	r31, r31
    84ea:	59 1b       	sub	r21, r25
    84ec:	99 f0       	breq	.+38     	; 0x8514 <__addsf3x+0x5c>
    84ee:	59 3f       	cpi	r21, 0xF9	; 249
    84f0:	50 f4       	brcc	.+20     	; 0x8506 <__addsf3x+0x4e>
    84f2:	50 3e       	cpi	r21, 0xE0	; 224
    84f4:	68 f1       	brcs	.+90     	; 0x8550 <__addsf3x+0x98>
    84f6:	1a 16       	cp	r1, r26
    84f8:	f0 40       	sbci	r31, 0x00	; 0
    84fa:	a2 2f       	mov	r26, r18
    84fc:	23 2f       	mov	r18, r19
    84fe:	34 2f       	mov	r19, r20
    8500:	44 27       	eor	r20, r20
    8502:	58 5f       	subi	r21, 0xF8	; 248
    8504:	f3 cf       	rjmp	.-26     	; 0x84ec <__addsf3x+0x34>
    8506:	46 95       	lsr	r20
    8508:	37 95       	ror	r19
    850a:	27 95       	ror	r18
    850c:	a7 95       	ror	r26
    850e:	f0 40       	sbci	r31, 0x00	; 0
    8510:	53 95       	inc	r21
    8512:	c9 f7       	brne	.-14     	; 0x8506 <__addsf3x+0x4e>
    8514:	7e f4       	brtc	.+30     	; 0x8534 <__addsf3x+0x7c>
    8516:	1f 16       	cp	r1, r31
    8518:	ba 0b       	sbc	r27, r26
    851a:	62 0b       	sbc	r22, r18
    851c:	73 0b       	sbc	r23, r19
    851e:	84 0b       	sbc	r24, r20
    8520:	ba f0       	brmi	.+46     	; 0x8550 <__addsf3x+0x98>
    8522:	91 50       	subi	r25, 0x01	; 1
    8524:	a1 f0       	breq	.+40     	; 0x854e <__addsf3x+0x96>
    8526:	ff 0f       	add	r31, r31
    8528:	bb 1f       	adc	r27, r27
    852a:	66 1f       	adc	r22, r22
    852c:	77 1f       	adc	r23, r23
    852e:	88 1f       	adc	r24, r24
    8530:	c2 f7       	brpl	.-16     	; 0x8522 <__addsf3x+0x6a>
    8532:	0e c0       	rjmp	.+28     	; 0x8550 <__addsf3x+0x98>
    8534:	ba 0f       	add	r27, r26
    8536:	62 1f       	adc	r22, r18
    8538:	73 1f       	adc	r23, r19
    853a:	84 1f       	adc	r24, r20
    853c:	48 f4       	brcc	.+18     	; 0x8550 <__addsf3x+0x98>
    853e:	87 95       	ror	r24
    8540:	77 95       	ror	r23
    8542:	67 95       	ror	r22
    8544:	b7 95       	ror	r27
    8546:	f7 95       	ror	r31
    8548:	9e 3f       	cpi	r25, 0xFE	; 254
    854a:	08 f0       	brcs	.+2      	; 0x854e <__addsf3x+0x96>
    854c:	b3 cf       	rjmp	.-154    	; 0x84b4 <__addsf3+0x1e>
    854e:	93 95       	inc	r25
    8550:	88 0f       	add	r24, r24
    8552:	08 f0       	brcs	.+2      	; 0x8556 <__addsf3x+0x9e>
    8554:	99 27       	eor	r25, r25
    8556:	ee 0f       	add	r30, r30
    8558:	97 95       	ror	r25
    855a:	87 95       	ror	r24
    855c:	08 95       	ret

0000855e <__cmpsf2>:
    855e:	dc d0       	rcall	.+440    	; 0x8718 <__fp_cmp>
    8560:	08 f4       	brcc	.+2      	; 0x8564 <__cmpsf2+0x6>
    8562:	81 e0       	ldi	r24, 0x01	; 1
    8564:	08 95       	ret

00008566 <cos>:
    8566:	14 d1       	rcall	.+552    	; 0x8790 <__fp_rempio2>
    8568:	e3 95       	inc	r30
    856a:	4a c1       	rjmp	.+660    	; 0x8800 <__fp_sinus>

0000856c <__divsf3>:
    856c:	0c d0       	rcall	.+24     	; 0x8586 <__divsf3x>
    856e:	37 c1       	rjmp	.+622    	; 0x87de <__fp_round>
    8570:	07 d1       	rcall	.+526    	; 0x8780 <__fp_pscB>
    8572:	40 f0       	brcs	.+16     	; 0x8584 <__divsf3+0x18>
    8574:	fe d0       	rcall	.+508    	; 0x8772 <__fp_pscA>
    8576:	30 f0       	brcs	.+12     	; 0x8584 <__divsf3+0x18>
    8578:	21 f4       	brne	.+8      	; 0x8582 <__divsf3+0x16>
    857a:	5f 3f       	cpi	r21, 0xFF	; 255
    857c:	19 f0       	breq	.+6      	; 0x8584 <__divsf3+0x18>
    857e:	f0 c0       	rjmp	.+480    	; 0x8760 <__fp_inf>
    8580:	51 11       	cpse	r21, r1
    8582:	72 c1       	rjmp	.+740    	; 0x8868 <__fp_szero>
    8584:	f3 c0       	rjmp	.+486    	; 0x876c <__fp_nan>

00008586 <__divsf3x>:
    8586:	4d d1       	rcall	.+666    	; 0x8822 <__fp_split3>
    8588:	98 f3       	brcs	.-26     	; 0x8570 <__divsf3+0x4>

0000858a <__divsf3_pse>:
    858a:	99 23       	and	r25, r25
    858c:	c9 f3       	breq	.-14     	; 0x8580 <__divsf3+0x14>
    858e:	55 23       	and	r21, r21
    8590:	b1 f3       	breq	.-20     	; 0x857e <__divsf3+0x12>
    8592:	95 1b       	sub	r25, r21
    8594:	55 0b       	sbc	r21, r21
    8596:	bb 27       	eor	r27, r27
    8598:	aa 27       	eor	r26, r26
    859a:	62 17       	cp	r22, r18
    859c:	73 07       	cpc	r23, r19
    859e:	84 07       	cpc	r24, r20
    85a0:	38 f0       	brcs	.+14     	; 0x85b0 <__divsf3_pse+0x26>
    85a2:	9f 5f       	subi	r25, 0xFF	; 255
    85a4:	5f 4f       	sbci	r21, 0xFF	; 255
    85a6:	22 0f       	add	r18, r18
    85a8:	33 1f       	adc	r19, r19
    85aa:	44 1f       	adc	r20, r20
    85ac:	aa 1f       	adc	r26, r26
    85ae:	a9 f3       	breq	.-22     	; 0x859a <__divsf3_pse+0x10>
    85b0:	33 d0       	rcall	.+102    	; 0x8618 <__divsf3_pse+0x8e>
    85b2:	0e 2e       	mov	r0, r30
    85b4:	3a f0       	brmi	.+14     	; 0x85c4 <__divsf3_pse+0x3a>
    85b6:	e0 e8       	ldi	r30, 0x80	; 128
    85b8:	30 d0       	rcall	.+96     	; 0x861a <__divsf3_pse+0x90>
    85ba:	91 50       	subi	r25, 0x01	; 1
    85bc:	50 40       	sbci	r21, 0x00	; 0
    85be:	e6 95       	lsr	r30
    85c0:	00 1c       	adc	r0, r0
    85c2:	ca f7       	brpl	.-14     	; 0x85b6 <__divsf3_pse+0x2c>
    85c4:	29 d0       	rcall	.+82     	; 0x8618 <__divsf3_pse+0x8e>
    85c6:	fe 2f       	mov	r31, r30
    85c8:	27 d0       	rcall	.+78     	; 0x8618 <__divsf3_pse+0x8e>
    85ca:	66 0f       	add	r22, r22
    85cc:	77 1f       	adc	r23, r23
    85ce:	88 1f       	adc	r24, r24
    85d0:	bb 1f       	adc	r27, r27
    85d2:	26 17       	cp	r18, r22
    85d4:	37 07       	cpc	r19, r23
    85d6:	48 07       	cpc	r20, r24
    85d8:	ab 07       	cpc	r26, r27
    85da:	b0 e8       	ldi	r27, 0x80	; 128
    85dc:	09 f0       	breq	.+2      	; 0x85e0 <__divsf3_pse+0x56>
    85de:	bb 0b       	sbc	r27, r27
    85e0:	80 2d       	mov	r24, r0
    85e2:	bf 01       	movw	r22, r30
    85e4:	ff 27       	eor	r31, r31
    85e6:	93 58       	subi	r25, 0x83	; 131
    85e8:	5f 4f       	sbci	r21, 0xFF	; 255
    85ea:	2a f0       	brmi	.+10     	; 0x85f6 <__divsf3_pse+0x6c>
    85ec:	9e 3f       	cpi	r25, 0xFE	; 254
    85ee:	51 05       	cpc	r21, r1
    85f0:	68 f0       	brcs	.+26     	; 0x860c <__divsf3_pse+0x82>
    85f2:	b6 c0       	rjmp	.+364    	; 0x8760 <__fp_inf>
    85f4:	39 c1       	rjmp	.+626    	; 0x8868 <__fp_szero>
    85f6:	5f 3f       	cpi	r21, 0xFF	; 255
    85f8:	ec f3       	brlt	.-6      	; 0x85f4 <__divsf3_pse+0x6a>
    85fa:	98 3e       	cpi	r25, 0xE8	; 232
    85fc:	dc f3       	brlt	.-10     	; 0x85f4 <__divsf3_pse+0x6a>
    85fe:	86 95       	lsr	r24
    8600:	77 95       	ror	r23
    8602:	67 95       	ror	r22
    8604:	b7 95       	ror	r27
    8606:	f7 95       	ror	r31
    8608:	9f 5f       	subi	r25, 0xFF	; 255
    860a:	c9 f7       	brne	.-14     	; 0x85fe <__divsf3_pse+0x74>
    860c:	88 0f       	add	r24, r24
    860e:	91 1d       	adc	r25, r1
    8610:	96 95       	lsr	r25
    8612:	87 95       	ror	r24
    8614:	97 f9       	bld	r25, 7
    8616:	08 95       	ret
    8618:	e1 e0       	ldi	r30, 0x01	; 1
    861a:	66 0f       	add	r22, r22
    861c:	77 1f       	adc	r23, r23
    861e:	88 1f       	adc	r24, r24
    8620:	bb 1f       	adc	r27, r27
    8622:	62 17       	cp	r22, r18
    8624:	73 07       	cpc	r23, r19
    8626:	84 07       	cpc	r24, r20
    8628:	ba 07       	cpc	r27, r26
    862a:	20 f0       	brcs	.+8      	; 0x8634 <__divsf3_pse+0xaa>
    862c:	62 1b       	sub	r22, r18
    862e:	73 0b       	sbc	r23, r19
    8630:	84 0b       	sbc	r24, r20
    8632:	ba 0b       	sbc	r27, r26
    8634:	ee 1f       	adc	r30, r30
    8636:	88 f7       	brcc	.-30     	; 0x861a <__divsf3_pse+0x90>
    8638:	e0 95       	com	r30
    863a:	08 95       	ret

0000863c <__fixsfsi>:
    863c:	04 d0       	rcall	.+8      	; 0x8646 <__fixunssfsi>
    863e:	68 94       	set
    8640:	b1 11       	cpse	r27, r1
    8642:	12 c1       	rjmp	.+548    	; 0x8868 <__fp_szero>
    8644:	08 95       	ret

00008646 <__fixunssfsi>:
    8646:	f5 d0       	rcall	.+490    	; 0x8832 <__fp_splitA>
    8648:	88 f0       	brcs	.+34     	; 0x866c <__fixunssfsi+0x26>
    864a:	9f 57       	subi	r25, 0x7F	; 127
    864c:	90 f0       	brcs	.+36     	; 0x8672 <__fixunssfsi+0x2c>
    864e:	b9 2f       	mov	r27, r25
    8650:	99 27       	eor	r25, r25
    8652:	b7 51       	subi	r27, 0x17	; 23
    8654:	a0 f0       	brcs	.+40     	; 0x867e <__fixunssfsi+0x38>
    8656:	d1 f0       	breq	.+52     	; 0x868c <__fixunssfsi+0x46>
    8658:	66 0f       	add	r22, r22
    865a:	77 1f       	adc	r23, r23
    865c:	88 1f       	adc	r24, r24
    865e:	99 1f       	adc	r25, r25
    8660:	1a f0       	brmi	.+6      	; 0x8668 <__fixunssfsi+0x22>
    8662:	ba 95       	dec	r27
    8664:	c9 f7       	brne	.-14     	; 0x8658 <__fixunssfsi+0x12>
    8666:	12 c0       	rjmp	.+36     	; 0x868c <__fixunssfsi+0x46>
    8668:	b1 30       	cpi	r27, 0x01	; 1
    866a:	81 f0       	breq	.+32     	; 0x868c <__fixunssfsi+0x46>
    866c:	fc d0       	rcall	.+504    	; 0x8866 <__fp_zero>
    866e:	b1 e0       	ldi	r27, 0x01	; 1
    8670:	08 95       	ret
    8672:	f9 c0       	rjmp	.+498    	; 0x8866 <__fp_zero>
    8674:	67 2f       	mov	r22, r23
    8676:	78 2f       	mov	r23, r24
    8678:	88 27       	eor	r24, r24
    867a:	b8 5f       	subi	r27, 0xF8	; 248
    867c:	39 f0       	breq	.+14     	; 0x868c <__fixunssfsi+0x46>
    867e:	b9 3f       	cpi	r27, 0xF9	; 249
    8680:	cc f3       	brlt	.-14     	; 0x8674 <__fixunssfsi+0x2e>
    8682:	86 95       	lsr	r24
    8684:	77 95       	ror	r23
    8686:	67 95       	ror	r22
    8688:	b3 95       	inc	r27
    868a:	d9 f7       	brne	.-10     	; 0x8682 <__fixunssfsi+0x3c>
    868c:	3e f4       	brtc	.+14     	; 0x869c <__fixunssfsi+0x56>
    868e:	90 95       	com	r25
    8690:	80 95       	com	r24
    8692:	70 95       	com	r23
    8694:	61 95       	neg	r22
    8696:	7f 4f       	sbci	r23, 0xFF	; 255
    8698:	8f 4f       	sbci	r24, 0xFF	; 255
    869a:	9f 4f       	sbci	r25, 0xFF	; 255
    869c:	08 95       	ret

0000869e <__floatunsisf>:
    869e:	e8 94       	clt
    86a0:	09 c0       	rjmp	.+18     	; 0x86b4 <__floatsisf+0x12>

000086a2 <__floatsisf>:
    86a2:	97 fb       	bst	r25, 7
    86a4:	3e f4       	brtc	.+14     	; 0x86b4 <__floatsisf+0x12>
    86a6:	90 95       	com	r25
    86a8:	80 95       	com	r24
    86aa:	70 95       	com	r23
    86ac:	61 95       	neg	r22
    86ae:	7f 4f       	sbci	r23, 0xFF	; 255
    86b0:	8f 4f       	sbci	r24, 0xFF	; 255
    86b2:	9f 4f       	sbci	r25, 0xFF	; 255
    86b4:	99 23       	and	r25, r25
    86b6:	a9 f0       	breq	.+42     	; 0x86e2 <__floatsisf+0x40>
    86b8:	f9 2f       	mov	r31, r25
    86ba:	96 e9       	ldi	r25, 0x96	; 150
    86bc:	bb 27       	eor	r27, r27
    86be:	93 95       	inc	r25
    86c0:	f6 95       	lsr	r31
    86c2:	87 95       	ror	r24
    86c4:	77 95       	ror	r23
    86c6:	67 95       	ror	r22
    86c8:	b7 95       	ror	r27
    86ca:	f1 11       	cpse	r31, r1
    86cc:	f8 cf       	rjmp	.-16     	; 0x86be <__floatsisf+0x1c>
    86ce:	fa f4       	brpl	.+62     	; 0x870e <__floatsisf+0x6c>
    86d0:	bb 0f       	add	r27, r27
    86d2:	11 f4       	brne	.+4      	; 0x86d8 <__floatsisf+0x36>
    86d4:	60 ff       	sbrs	r22, 0
    86d6:	1b c0       	rjmp	.+54     	; 0x870e <__floatsisf+0x6c>
    86d8:	6f 5f       	subi	r22, 0xFF	; 255
    86da:	7f 4f       	sbci	r23, 0xFF	; 255
    86dc:	8f 4f       	sbci	r24, 0xFF	; 255
    86de:	9f 4f       	sbci	r25, 0xFF	; 255
    86e0:	16 c0       	rjmp	.+44     	; 0x870e <__floatsisf+0x6c>
    86e2:	88 23       	and	r24, r24
    86e4:	11 f0       	breq	.+4      	; 0x86ea <__floatsisf+0x48>
    86e6:	96 e9       	ldi	r25, 0x96	; 150
    86e8:	11 c0       	rjmp	.+34     	; 0x870c <__floatsisf+0x6a>
    86ea:	77 23       	and	r23, r23
    86ec:	21 f0       	breq	.+8      	; 0x86f6 <__floatsisf+0x54>
    86ee:	9e e8       	ldi	r25, 0x8E	; 142
    86f0:	87 2f       	mov	r24, r23
    86f2:	76 2f       	mov	r23, r22
    86f4:	05 c0       	rjmp	.+10     	; 0x8700 <__floatsisf+0x5e>
    86f6:	66 23       	and	r22, r22
    86f8:	71 f0       	breq	.+28     	; 0x8716 <__floatsisf+0x74>
    86fa:	96 e8       	ldi	r25, 0x86	; 134
    86fc:	86 2f       	mov	r24, r22
    86fe:	70 e0       	ldi	r23, 0x00	; 0
    8700:	60 e0       	ldi	r22, 0x00	; 0
    8702:	2a f0       	brmi	.+10     	; 0x870e <__floatsisf+0x6c>
    8704:	9a 95       	dec	r25
    8706:	66 0f       	add	r22, r22
    8708:	77 1f       	adc	r23, r23
    870a:	88 1f       	adc	r24, r24
    870c:	da f7       	brpl	.-10     	; 0x8704 <__floatsisf+0x62>
    870e:	88 0f       	add	r24, r24
    8710:	96 95       	lsr	r25
    8712:	87 95       	ror	r24
    8714:	97 f9       	bld	r25, 7
    8716:	08 95       	ret

00008718 <__fp_cmp>:
    8718:	99 0f       	add	r25, r25
    871a:	00 08       	sbc	r0, r0
    871c:	55 0f       	add	r21, r21
    871e:	aa 0b       	sbc	r26, r26
    8720:	e0 e8       	ldi	r30, 0x80	; 128
    8722:	fe ef       	ldi	r31, 0xFE	; 254
    8724:	16 16       	cp	r1, r22
    8726:	17 06       	cpc	r1, r23
    8728:	e8 07       	cpc	r30, r24
    872a:	f9 07       	cpc	r31, r25
    872c:	c0 f0       	brcs	.+48     	; 0x875e <__fp_cmp+0x46>
    872e:	12 16       	cp	r1, r18
    8730:	13 06       	cpc	r1, r19
    8732:	e4 07       	cpc	r30, r20
    8734:	f5 07       	cpc	r31, r21
    8736:	98 f0       	brcs	.+38     	; 0x875e <__fp_cmp+0x46>
    8738:	62 1b       	sub	r22, r18
    873a:	73 0b       	sbc	r23, r19
    873c:	84 0b       	sbc	r24, r20
    873e:	95 0b       	sbc	r25, r21
    8740:	39 f4       	brne	.+14     	; 0x8750 <__fp_cmp+0x38>
    8742:	0a 26       	eor	r0, r26
    8744:	61 f0       	breq	.+24     	; 0x875e <__fp_cmp+0x46>
    8746:	23 2b       	or	r18, r19
    8748:	24 2b       	or	r18, r20
    874a:	25 2b       	or	r18, r21
    874c:	21 f4       	brne	.+8      	; 0x8756 <__fp_cmp+0x3e>
    874e:	08 95       	ret
    8750:	0a 26       	eor	r0, r26
    8752:	09 f4       	brne	.+2      	; 0x8756 <__fp_cmp+0x3e>
    8754:	a1 40       	sbci	r26, 0x01	; 1
    8756:	a6 95       	lsr	r26
    8758:	8f ef       	ldi	r24, 0xFF	; 255
    875a:	81 1d       	adc	r24, r1
    875c:	81 1d       	adc	r24, r1
    875e:	08 95       	ret

00008760 <__fp_inf>:
    8760:	97 f9       	bld	r25, 7
    8762:	9f 67       	ori	r25, 0x7F	; 127
    8764:	80 e8       	ldi	r24, 0x80	; 128
    8766:	70 e0       	ldi	r23, 0x00	; 0
    8768:	60 e0       	ldi	r22, 0x00	; 0
    876a:	08 95       	ret

0000876c <__fp_nan>:
    876c:	9f ef       	ldi	r25, 0xFF	; 255
    876e:	80 ec       	ldi	r24, 0xC0	; 192
    8770:	08 95       	ret

00008772 <__fp_pscA>:
    8772:	00 24       	eor	r0, r0
    8774:	0a 94       	dec	r0
    8776:	16 16       	cp	r1, r22
    8778:	17 06       	cpc	r1, r23
    877a:	18 06       	cpc	r1, r24
    877c:	09 06       	cpc	r0, r25
    877e:	08 95       	ret

00008780 <__fp_pscB>:
    8780:	00 24       	eor	r0, r0
    8782:	0a 94       	dec	r0
    8784:	12 16       	cp	r1, r18
    8786:	13 06       	cpc	r1, r19
    8788:	14 06       	cpc	r1, r20
    878a:	05 06       	cpc	r0, r21
    878c:	08 95       	ret
    878e:	ee cf       	rjmp	.-36     	; 0x876c <__fp_nan>

00008790 <__fp_rempio2>:
    8790:	50 d0       	rcall	.+160    	; 0x8832 <__fp_splitA>
    8792:	e8 f3       	brcs	.-6      	; 0x878e <__fp_pscB+0xe>
    8794:	e8 94       	clt
    8796:	e0 e0       	ldi	r30, 0x00	; 0
    8798:	bb 27       	eor	r27, r27
    879a:	9f 57       	subi	r25, 0x7F	; 127
    879c:	f0 f0       	brcs	.+60     	; 0x87da <__fp_rempio2+0x4a>
    879e:	2a ed       	ldi	r18, 0xDA	; 218
    87a0:	3f e0       	ldi	r19, 0x0F	; 15
    87a2:	49 ec       	ldi	r20, 0xC9	; 201
    87a4:	06 c0       	rjmp	.+12     	; 0x87b2 <__fp_rempio2+0x22>
    87a6:	ee 0f       	add	r30, r30
    87a8:	bb 0f       	add	r27, r27
    87aa:	66 1f       	adc	r22, r22
    87ac:	77 1f       	adc	r23, r23
    87ae:	88 1f       	adc	r24, r24
    87b0:	28 f0       	brcs	.+10     	; 0x87bc <__fp_rempio2+0x2c>
    87b2:	b2 3a       	cpi	r27, 0xA2	; 162
    87b4:	62 07       	cpc	r22, r18
    87b6:	73 07       	cpc	r23, r19
    87b8:	84 07       	cpc	r24, r20
    87ba:	28 f0       	brcs	.+10     	; 0x87c6 <__fp_rempio2+0x36>
    87bc:	b2 5a       	subi	r27, 0xA2	; 162
    87be:	62 0b       	sbc	r22, r18
    87c0:	73 0b       	sbc	r23, r19
    87c2:	84 0b       	sbc	r24, r20
    87c4:	e3 95       	inc	r30
    87c6:	9a 95       	dec	r25
    87c8:	72 f7       	brpl	.-36     	; 0x87a6 <__fp_rempio2+0x16>
    87ca:	80 38       	cpi	r24, 0x80	; 128
    87cc:	30 f4       	brcc	.+12     	; 0x87da <__fp_rempio2+0x4a>
    87ce:	9a 95       	dec	r25
    87d0:	bb 0f       	add	r27, r27
    87d2:	66 1f       	adc	r22, r22
    87d4:	77 1f       	adc	r23, r23
    87d6:	88 1f       	adc	r24, r24
    87d8:	d2 f7       	brpl	.-12     	; 0x87ce <__fp_rempio2+0x3e>
    87da:	90 48       	sbci	r25, 0x80	; 128
    87dc:	b6 c0       	rjmp	.+364    	; 0x894a <__fp_mpack_finite>

000087de <__fp_round>:
    87de:	09 2e       	mov	r0, r25
    87e0:	03 94       	inc	r0
    87e2:	00 0c       	add	r0, r0
    87e4:	11 f4       	brne	.+4      	; 0x87ea <__fp_round+0xc>
    87e6:	88 23       	and	r24, r24
    87e8:	52 f0       	brmi	.+20     	; 0x87fe <__fp_round+0x20>
    87ea:	bb 0f       	add	r27, r27
    87ec:	40 f4       	brcc	.+16     	; 0x87fe <__fp_round+0x20>
    87ee:	bf 2b       	or	r27, r31
    87f0:	11 f4       	brne	.+4      	; 0x87f6 <__fp_round+0x18>
    87f2:	60 ff       	sbrs	r22, 0
    87f4:	04 c0       	rjmp	.+8      	; 0x87fe <__fp_round+0x20>
    87f6:	6f 5f       	subi	r22, 0xFF	; 255
    87f8:	7f 4f       	sbci	r23, 0xFF	; 255
    87fa:	8f 4f       	sbci	r24, 0xFF	; 255
    87fc:	9f 4f       	sbci	r25, 0xFF	; 255
    87fe:	08 95       	ret

00008800 <__fp_sinus>:
    8800:	ef 93       	push	r30
    8802:	e0 ff       	sbrs	r30, 0
    8804:	06 c0       	rjmp	.+12     	; 0x8812 <__fp_sinus+0x12>
    8806:	a2 ea       	ldi	r26, 0xA2	; 162
    8808:	2a ed       	ldi	r18, 0xDA	; 218
    880a:	3f e0       	ldi	r19, 0x0F	; 15
    880c:	49 ec       	ldi	r20, 0xC9	; 201
    880e:	5f eb       	ldi	r21, 0xBF	; 191
    8810:	53 de       	rcall	.-858    	; 0x84b8 <__addsf3x>
    8812:	e5 df       	rcall	.-54     	; 0x87de <__fp_round>
    8814:	0f 90       	pop	r0
    8816:	03 94       	inc	r0
    8818:	01 fc       	sbrc	r0, 1
    881a:	90 58       	subi	r25, 0x80	; 128
    881c:	ec e5       	ldi	r30, 0x5C	; 92
    881e:	f1 e0       	ldi	r31, 0x01	; 1
    8820:	a0 c0       	rjmp	.+320    	; 0x8962 <__fp_powsodd>

00008822 <__fp_split3>:
    8822:	57 fd       	sbrc	r21, 7
    8824:	90 58       	subi	r25, 0x80	; 128
    8826:	44 0f       	add	r20, r20
    8828:	55 1f       	adc	r21, r21
    882a:	59 f0       	breq	.+22     	; 0x8842 <__fp_splitA+0x10>
    882c:	5f 3f       	cpi	r21, 0xFF	; 255
    882e:	71 f0       	breq	.+28     	; 0x884c <__fp_splitA+0x1a>
    8830:	47 95       	ror	r20

00008832 <__fp_splitA>:
    8832:	88 0f       	add	r24, r24
    8834:	97 fb       	bst	r25, 7
    8836:	99 1f       	adc	r25, r25
    8838:	61 f0       	breq	.+24     	; 0x8852 <__fp_splitA+0x20>
    883a:	9f 3f       	cpi	r25, 0xFF	; 255
    883c:	79 f0       	breq	.+30     	; 0x885c <__fp_splitA+0x2a>
    883e:	87 95       	ror	r24
    8840:	08 95       	ret
    8842:	12 16       	cp	r1, r18
    8844:	13 06       	cpc	r1, r19
    8846:	14 06       	cpc	r1, r20
    8848:	55 1f       	adc	r21, r21
    884a:	f2 cf       	rjmp	.-28     	; 0x8830 <__fp_split3+0xe>
    884c:	46 95       	lsr	r20
    884e:	f1 df       	rcall	.-30     	; 0x8832 <__fp_splitA>
    8850:	08 c0       	rjmp	.+16     	; 0x8862 <__fp_splitA+0x30>
    8852:	16 16       	cp	r1, r22
    8854:	17 06       	cpc	r1, r23
    8856:	18 06       	cpc	r1, r24
    8858:	99 1f       	adc	r25, r25
    885a:	f1 cf       	rjmp	.-30     	; 0x883e <__fp_splitA+0xc>
    885c:	86 95       	lsr	r24
    885e:	71 05       	cpc	r23, r1
    8860:	61 05       	cpc	r22, r1
    8862:	08 94       	sec
    8864:	08 95       	ret

00008866 <__fp_zero>:
    8866:	e8 94       	clt

00008868 <__fp_szero>:
    8868:	bb 27       	eor	r27, r27
    886a:	66 27       	eor	r22, r22
    886c:	77 27       	eor	r23, r23
    886e:	cb 01       	movw	r24, r22
    8870:	97 f9       	bld	r25, 7
    8872:	08 95       	ret

00008874 <__mulsf3>:
    8874:	0b d0       	rcall	.+22     	; 0x888c <__mulsf3x>
    8876:	b3 cf       	rjmp	.-154    	; 0x87de <__fp_round>
    8878:	7c df       	rcall	.-264    	; 0x8772 <__fp_pscA>
    887a:	28 f0       	brcs	.+10     	; 0x8886 <__mulsf3+0x12>
    887c:	81 df       	rcall	.-254    	; 0x8780 <__fp_pscB>
    887e:	18 f0       	brcs	.+6      	; 0x8886 <__mulsf3+0x12>
    8880:	95 23       	and	r25, r21
    8882:	09 f0       	breq	.+2      	; 0x8886 <__mulsf3+0x12>
    8884:	6d cf       	rjmp	.-294    	; 0x8760 <__fp_inf>
    8886:	72 cf       	rjmp	.-284    	; 0x876c <__fp_nan>
    8888:	11 24       	eor	r1, r1
    888a:	ee cf       	rjmp	.-36     	; 0x8868 <__fp_szero>

0000888c <__mulsf3x>:
    888c:	ca df       	rcall	.-108    	; 0x8822 <__fp_split3>
    888e:	a0 f3       	brcs	.-24     	; 0x8878 <__mulsf3+0x4>

00008890 <__mulsf3_pse>:
    8890:	95 9f       	mul	r25, r21
    8892:	d1 f3       	breq	.-12     	; 0x8888 <__mulsf3+0x14>
    8894:	95 0f       	add	r25, r21
    8896:	50 e0       	ldi	r21, 0x00	; 0
    8898:	55 1f       	adc	r21, r21
    889a:	62 9f       	mul	r22, r18
    889c:	f0 01       	movw	r30, r0
    889e:	72 9f       	mul	r23, r18
    88a0:	bb 27       	eor	r27, r27
    88a2:	f0 0d       	add	r31, r0
    88a4:	b1 1d       	adc	r27, r1
    88a6:	63 9f       	mul	r22, r19
    88a8:	aa 27       	eor	r26, r26
    88aa:	f0 0d       	add	r31, r0
    88ac:	b1 1d       	adc	r27, r1
    88ae:	aa 1f       	adc	r26, r26
    88b0:	64 9f       	mul	r22, r20
    88b2:	66 27       	eor	r22, r22
    88b4:	b0 0d       	add	r27, r0
    88b6:	a1 1d       	adc	r26, r1
    88b8:	66 1f       	adc	r22, r22
    88ba:	82 9f       	mul	r24, r18
    88bc:	22 27       	eor	r18, r18
    88be:	b0 0d       	add	r27, r0
    88c0:	a1 1d       	adc	r26, r1
    88c2:	62 1f       	adc	r22, r18
    88c4:	73 9f       	mul	r23, r19
    88c6:	b0 0d       	add	r27, r0
    88c8:	a1 1d       	adc	r26, r1
    88ca:	62 1f       	adc	r22, r18
    88cc:	83 9f       	mul	r24, r19
    88ce:	a0 0d       	add	r26, r0
    88d0:	61 1d       	adc	r22, r1
    88d2:	22 1f       	adc	r18, r18
    88d4:	74 9f       	mul	r23, r20
    88d6:	33 27       	eor	r19, r19
    88d8:	a0 0d       	add	r26, r0
    88da:	61 1d       	adc	r22, r1
    88dc:	23 1f       	adc	r18, r19
    88de:	84 9f       	mul	r24, r20
    88e0:	60 0d       	add	r22, r0
    88e2:	21 1d       	adc	r18, r1
    88e4:	82 2f       	mov	r24, r18
    88e6:	76 2f       	mov	r23, r22
    88e8:	6a 2f       	mov	r22, r26
    88ea:	11 24       	eor	r1, r1
    88ec:	9f 57       	subi	r25, 0x7F	; 127
    88ee:	50 40       	sbci	r21, 0x00	; 0
    88f0:	8a f0       	brmi	.+34     	; 0x8914 <__mulsf3_pse+0x84>
    88f2:	e1 f0       	breq	.+56     	; 0x892c <__mulsf3_pse+0x9c>
    88f4:	88 23       	and	r24, r24
    88f6:	4a f0       	brmi	.+18     	; 0x890a <__mulsf3_pse+0x7a>
    88f8:	ee 0f       	add	r30, r30
    88fa:	ff 1f       	adc	r31, r31
    88fc:	bb 1f       	adc	r27, r27
    88fe:	66 1f       	adc	r22, r22
    8900:	77 1f       	adc	r23, r23
    8902:	88 1f       	adc	r24, r24
    8904:	91 50       	subi	r25, 0x01	; 1
    8906:	50 40       	sbci	r21, 0x00	; 0
    8908:	a9 f7       	brne	.-22     	; 0x88f4 <__mulsf3_pse+0x64>
    890a:	9e 3f       	cpi	r25, 0xFE	; 254
    890c:	51 05       	cpc	r21, r1
    890e:	70 f0       	brcs	.+28     	; 0x892c <__mulsf3_pse+0x9c>
    8910:	27 cf       	rjmp	.-434    	; 0x8760 <__fp_inf>
    8912:	aa cf       	rjmp	.-172    	; 0x8868 <__fp_szero>
    8914:	5f 3f       	cpi	r21, 0xFF	; 255
    8916:	ec f3       	brlt	.-6      	; 0x8912 <__mulsf3_pse+0x82>
    8918:	98 3e       	cpi	r25, 0xE8	; 232
    891a:	dc f3       	brlt	.-10     	; 0x8912 <__mulsf3_pse+0x82>
    891c:	86 95       	lsr	r24
    891e:	77 95       	ror	r23
    8920:	67 95       	ror	r22
    8922:	b7 95       	ror	r27
    8924:	f7 95       	ror	r31
    8926:	e7 95       	ror	r30
    8928:	9f 5f       	subi	r25, 0xFF	; 255
    892a:	c1 f7       	brne	.-16     	; 0x891c <__mulsf3_pse+0x8c>
    892c:	fe 2b       	or	r31, r30
    892e:	88 0f       	add	r24, r24
    8930:	91 1d       	adc	r25, r1
    8932:	96 95       	lsr	r25
    8934:	87 95       	ror	r24
    8936:	97 f9       	bld	r25, 7
    8938:	08 95       	ret

0000893a <sin>:
    893a:	9f 93       	push	r25
    893c:	29 df       	rcall	.-430    	; 0x8790 <__fp_rempio2>
    893e:	0f 90       	pop	r0
    8940:	07 fc       	sbrc	r0, 7
    8942:	ee 5f       	subi	r30, 0xFE	; 254
    8944:	5d cf       	rjmp	.-326    	; 0x8800 <__fp_sinus>

00008946 <__fp_mpack>:
    8946:	9f 3f       	cpi	r25, 0xFF	; 255
    8948:	31 f0       	breq	.+12     	; 0x8956 <__fp_mpack_finite+0xc>

0000894a <__fp_mpack_finite>:
    894a:	91 50       	subi	r25, 0x01	; 1
    894c:	20 f4       	brcc	.+8      	; 0x8956 <__fp_mpack_finite+0xc>
    894e:	87 95       	ror	r24
    8950:	77 95       	ror	r23
    8952:	67 95       	ror	r22
    8954:	b7 95       	ror	r27
    8956:	88 0f       	add	r24, r24
    8958:	91 1d       	adc	r25, r1
    895a:	96 95       	lsr	r25
    895c:	87 95       	ror	r24
    895e:	97 f9       	bld	r25, 7
    8960:	08 95       	ret

00008962 <__fp_powsodd>:
    8962:	9f 93       	push	r25
    8964:	8f 93       	push	r24
    8966:	7f 93       	push	r23
    8968:	6f 93       	push	r22
    896a:	ff 93       	push	r31
    896c:	ef 93       	push	r30
    896e:	9b 01       	movw	r18, r22
    8970:	ac 01       	movw	r20, r24
    8972:	80 df       	rcall	.-256    	; 0x8874 <__mulsf3>
    8974:	ef 91       	pop	r30
    8976:	ff 91       	pop	r31
    8978:	05 d0       	rcall	.+10     	; 0x8984 <__fp_powser>
    897a:	2f 91       	pop	r18
    897c:	3f 91       	pop	r19
    897e:	4f 91       	pop	r20
    8980:	5f 91       	pop	r21
    8982:	78 cf       	rjmp	.-272    	; 0x8874 <__mulsf3>

00008984 <__fp_powser>:
    8984:	df 93       	push	r29
    8986:	cf 93       	push	r28
    8988:	1f 93       	push	r17
    898a:	0f 93       	push	r16
    898c:	ff 92       	push	r15
    898e:	ef 92       	push	r14
    8990:	df 92       	push	r13
    8992:	7b 01       	movw	r14, r22
    8994:	8c 01       	movw	r16, r24
    8996:	68 94       	set
    8998:	05 c0       	rjmp	.+10     	; 0x89a4 <__fp_powser+0x20>
    899a:	da 2e       	mov	r13, r26
    899c:	ef 01       	movw	r28, r30
    899e:	76 df       	rcall	.-276    	; 0x888c <__mulsf3x>
    89a0:	fe 01       	movw	r30, r28
    89a2:	e8 94       	clt
    89a4:	a5 91       	lpm	r26, Z+
    89a6:	25 91       	lpm	r18, Z+
    89a8:	35 91       	lpm	r19, Z+
    89aa:	45 91       	lpm	r20, Z+
    89ac:	55 91       	lpm	r21, Z+
    89ae:	ae f3       	brts	.-22     	; 0x899a <__fp_powser+0x16>
    89b0:	ef 01       	movw	r28, r30
    89b2:	82 dd       	rcall	.-1276   	; 0x84b8 <__addsf3x>
    89b4:	fe 01       	movw	r30, r28
    89b6:	97 01       	movw	r18, r14
    89b8:	a8 01       	movw	r20, r16
    89ba:	da 94       	dec	r13
    89bc:	79 f7       	brne	.-34     	; 0x899c <__fp_powser+0x18>
    89be:	df 90       	pop	r13
    89c0:	ef 90       	pop	r14
    89c2:	ff 90       	pop	r15
    89c4:	0f 91       	pop	r16
    89c6:	1f 91       	pop	r17
    89c8:	cf 91       	pop	r28
    89ca:	df 91       	pop	r29
    89cc:	08 95       	ret

000089ce <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    89ce:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    89d0:	91 8d       	ldd	r25, Z+25	; 0x19
    89d2:	22 8d       	ldd	r18, Z+26	; 0x1a
    89d4:	89 2f       	mov	r24, r25
    89d6:	90 e0       	ldi	r25, 0x00	; 0
    89d8:	80 5c       	subi	r24, 0xC0	; 192
    89da:	9f 4f       	sbci	r25, 0xFF	; 255
    89dc:	82 1b       	sub	r24, r18
    89de:	91 09       	sbc	r25, r1
}
    89e0:	8f 73       	andi	r24, 0x3F	; 63
    89e2:	99 27       	eor	r25, r25
    89e4:	08 95       	ret

000089e6 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    89e6:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    89e8:	91 8d       	ldd	r25, Z+25	; 0x19
    89ea:	82 8d       	ldd	r24, Z+26	; 0x1a
    89ec:	98 17       	cp	r25, r24
    89ee:	31 f0       	breq	.+12     	; 0x89fc <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    89f0:	82 8d       	ldd	r24, Z+26	; 0x1a
    89f2:	e8 0f       	add	r30, r24
    89f4:	f1 1d       	adc	r31, r1
    89f6:	85 8d       	ldd	r24, Z+29	; 0x1d
    89f8:	90 e0       	ldi	r25, 0x00	; 0
    89fa:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    89fc:	8f ef       	ldi	r24, 0xFF	; 255
    89fe:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    8a00:	08 95       	ret

00008a02 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    8a02:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    8a04:	91 8d       	ldd	r25, Z+25	; 0x19
    8a06:	82 8d       	ldd	r24, Z+26	; 0x1a
    8a08:	98 17       	cp	r25, r24
    8a0a:	61 f0       	breq	.+24     	; 0x8a24 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    8a0c:	82 8d       	ldd	r24, Z+26	; 0x1a
    8a0e:	df 01       	movw	r26, r30
    8a10:	a8 0f       	add	r26, r24
    8a12:	b1 1d       	adc	r27, r1
    8a14:	5d 96       	adiw	r26, 0x1d	; 29
    8a16:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    8a18:	92 8d       	ldd	r25, Z+26	; 0x1a
    8a1a:	9f 5f       	subi	r25, 0xFF	; 255
    8a1c:	9f 73       	andi	r25, 0x3F	; 63
    8a1e:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    8a20:	90 e0       	ldi	r25, 0x00	; 0
    8a22:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    8a24:	8f ef       	ldi	r24, 0xFF	; 255
    8a26:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    8a28:	08 95       	ret

00008a2a <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    8a2a:	8b e9       	ldi	r24, 0x9B	; 155
    8a2c:	96 e4       	ldi	r25, 0x46	; 70
    8a2e:	89 2b       	or	r24, r25
    8a30:	39 f0       	breq	.+14     	; 0x8a40 <_Z14serialEventRunv+0x16>
    8a32:	80 e0       	ldi	r24, 0x00	; 0
    8a34:	90 e0       	ldi	r25, 0x00	; 0
    8a36:	89 2b       	or	r24, r25
    8a38:	19 f0       	breq	.+6      	; 0x8a40 <_Z14serialEventRunv+0x16>
    8a3a:	7d d1       	rcall	.+762    	; 0x8d36 <_Z17Serial0_availablev>
    8a3c:	81 11       	cpse	r24, r1
    8a3e:	25 c0       	rjmp	.+74     	; 0x8a8a <_Z14serialEventRunv+0x60>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    8a40:	80 e0       	ldi	r24, 0x00	; 0
    8a42:	90 e0       	ldi	r25, 0x00	; 0
    8a44:	89 2b       	or	r24, r25
    8a46:	41 f0       	breq	.+16     	; 0x8a58 <_Z14serialEventRunv+0x2e>
    8a48:	80 e0       	ldi	r24, 0x00	; 0
    8a4a:	90 e0       	ldi	r25, 0x00	; 0
    8a4c:	89 2b       	or	r24, r25
    8a4e:	21 f0       	breq	.+8      	; 0x8a58 <_Z14serialEventRunv+0x2e>
    8a50:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8a54:	81 11       	cpse	r24, r1
    8a56:	1c c0       	rjmp	.+56     	; 0x8a90 <_Z14serialEventRunv+0x66>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    8a58:	80 e0       	ldi	r24, 0x00	; 0
    8a5a:	90 e0       	ldi	r25, 0x00	; 0
    8a5c:	89 2b       	or	r24, r25
    8a5e:	41 f0       	breq	.+16     	; 0x8a70 <_Z14serialEventRunv+0x46>
    8a60:	80 e0       	ldi	r24, 0x00	; 0
    8a62:	90 e0       	ldi	r25, 0x00	; 0
    8a64:	89 2b       	or	r24, r25
    8a66:	21 f0       	breq	.+8      	; 0x8a70 <_Z14serialEventRunv+0x46>
    8a68:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8a6c:	81 11       	cpse	r24, r1
    8a6e:	13 c0       	rjmp	.+38     	; 0x8a96 <_Z14serialEventRunv+0x6c>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    8a70:	80 e0       	ldi	r24, 0x00	; 0
    8a72:	90 e0       	ldi	r25, 0x00	; 0
    8a74:	89 2b       	or	r24, r25
    8a76:	a1 f0       	breq	.+40     	; 0x8aa0 <_Z14serialEventRunv+0x76>
    8a78:	80 e0       	ldi	r24, 0x00	; 0
    8a7a:	90 e0       	ldi	r25, 0x00	; 0
    8a7c:	89 2b       	or	r24, r25
    8a7e:	81 f0       	breq	.+32     	; 0x8aa0 <_Z14serialEventRunv+0x76>
    8a80:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8a84:	81 11       	cpse	r24, r1
    8a86:	0a c0       	rjmp	.+20     	; 0x8a9c <_Z14serialEventRunv+0x72>
    8a88:	08 95       	ret
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    8a8a:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8a8e:	d8 cf       	rjmp	.-80     	; 0x8a40 <_Z14serialEventRunv+0x16>
#endif
#if defined(HAVE_HWSERIAL1)
  if (Serial1_available && serialEvent1 && Serial1_available()) serialEvent1();
    8a90:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8a94:	e1 cf       	rjmp	.-62     	; 0x8a58 <_Z14serialEventRunv+0x2e>
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
    8a96:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    8a9a:	ea cf       	rjmp	.-44     	; 0x8a70 <_Z14serialEventRunv+0x46>
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
    8a9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    8aa0:	08 95       	ret

00008aa2 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
}

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    8aa2:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    8aa4:	84 8d       	ldd	r24, Z+28	; 0x1c
    8aa6:	df 01       	movw	r26, r30
    8aa8:	a8 0f       	add	r26, r24
    8aaa:	b1 1d       	adc	r27, r1
    8aac:	a3 5a       	subi	r26, 0xA3	; 163
    8aae:	bf 4f       	sbci	r27, 0xFF	; 255
    8ab0:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    8ab2:	84 8d       	ldd	r24, Z+28	; 0x1c
    8ab4:	90 e0       	ldi	r25, 0x00	; 0
    8ab6:	01 96       	adiw	r24, 0x01	; 1
    8ab8:	8f 73       	andi	r24, 0x3F	; 63
    8aba:	99 27       	eor	r25, r25
    8abc:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    8abe:	a6 89       	ldd	r26, Z+22	; 0x16
    8ac0:	b7 89       	ldd	r27, Z+23	; 0x17
    8ac2:	2c 93       	st	X, r18

  // clear the TXC bit -- "can be cleared by writing a one to its bit
  // location". This makes sure flush() won't return until the bytes
  // actually got written
  sbi(*_ucsra, TXC0);
    8ac4:	a0 89       	ldd	r26, Z+16	; 0x10
    8ac6:	b1 89       	ldd	r27, Z+17	; 0x11
    8ac8:	8c 91       	ld	r24, X
    8aca:	80 64       	ori	r24, 0x40	; 64
    8acc:	8c 93       	st	X, r24

  if (_tx_buffer_head == _tx_buffer_tail) {
    8ace:	93 8d       	ldd	r25, Z+27	; 0x1b
    8ad0:	84 8d       	ldd	r24, Z+28	; 0x1c
    8ad2:	98 13       	cpse	r25, r24
    8ad4:	06 c0       	rjmp	.+12     	; 0x8ae2 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    8ad6:	02 88       	ldd	r0, Z+18	; 0x12
    8ad8:	f3 89       	ldd	r31, Z+19	; 0x13
    8ada:	e0 2d       	mov	r30, r0
    8adc:	80 81       	ld	r24, Z
    8ade:	8f 7d       	andi	r24, 0xDF	; 223
    8ae0:	80 83       	st	Z, r24
    8ae2:	08 95       	ret

00008ae4 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    8ae4:	ef 92       	push	r14
    8ae6:	ff 92       	push	r15
    8ae8:	0f 93       	push	r16
    8aea:	1f 93       	push	r17
    8aec:	cf 93       	push	r28
    8aee:	df 93       	push	r29
    8af0:	ec 01       	movw	r28, r24
  _written = true;
    8af2:	81 e0       	ldi	r24, 0x01	; 1
    8af4:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    8af6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    8af8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8afa:	98 13       	cpse	r25, r24
    8afc:	05 c0       	rjmp	.+10     	; 0x8b08 <_ZN14HardwareSerial5writeEh+0x24>
    8afe:	e8 89       	ldd	r30, Y+16	; 0x10
    8b00:	f9 89       	ldd	r31, Y+17	; 0x11
    8b02:	80 81       	ld	r24, Z
    8b04:	85 fd       	sbrc	r24, 5
    8b06:	23 c0       	rjmp	.+70     	; 0x8b4e <_ZN14HardwareSerial5writeEh+0x6a>
    8b08:	f6 2e       	mov	r15, r22
    *_udr = c;
    sbi(*_ucsra, TXC0);
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    8b0a:	0b 8d       	ldd	r16, Y+27	; 0x1b
    8b0c:	10 e0       	ldi	r17, 0x00	; 0
    8b0e:	0f 5f       	subi	r16, 0xFF	; 255
    8b10:	1f 4f       	sbci	r17, 0xFF	; 255
    8b12:	0f 73       	andi	r16, 0x3F	; 63
    8b14:	11 27       	eor	r17, r17
    8b16:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    8b18:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8b1a:	e8 12       	cpse	r14, r24
    8b1c:	0b c0       	rjmp	.+22     	; 0x8b34 <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
    8b1e:	0f b6       	in	r0, 0x3f	; 63
    8b20:	07 fc       	sbrc	r0, 7
    8b22:	fa cf       	rjmp	.-12     	; 0x8b18 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    8b24:	e8 89       	ldd	r30, Y+16	; 0x10
    8b26:	f9 89       	ldd	r31, Y+17	; 0x11
    8b28:	80 81       	ld	r24, Z
    8b2a:	85 ff       	sbrs	r24, 5
    8b2c:	f5 cf       	rjmp	.-22     	; 0x8b18 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    8b2e:	ce 01       	movw	r24, r28
    8b30:	b8 df       	rcall	.-144    	; 0x8aa2 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    8b32:	f2 cf       	rjmp	.-28     	; 0x8b18 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    8b34:	8b 8d       	ldd	r24, Y+27	; 0x1b
    8b36:	fe 01       	movw	r30, r28
    8b38:	e8 0f       	add	r30, r24
    8b3a:	f1 1d       	adc	r31, r1
    8b3c:	e3 5a       	subi	r30, 0xA3	; 163
    8b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    8b40:	f0 82       	st	Z, r15
  _tx_buffer_head = i;
    8b42:	0b 8f       	std	Y+27, r16	; 0x1b
	
  sbi(*_ucsrb, UDRIE0);
    8b44:	ea 89       	ldd	r30, Y+18	; 0x12
    8b46:	fb 89       	ldd	r31, Y+19	; 0x13
    8b48:	80 81       	ld	r24, Z
    8b4a:	80 62       	ori	r24, 0x20	; 32
    8b4c:	07 c0       	rjmp	.+14     	; 0x8b5c <_ZN14HardwareSerial5writeEh+0x78>
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    *_udr = c;
    8b4e:	ee 89       	ldd	r30, Y+22	; 0x16
    8b50:	ff 89       	ldd	r31, Y+23	; 0x17
    8b52:	60 83       	st	Z, r22
    sbi(*_ucsra, TXC0);
    8b54:	e8 89       	ldd	r30, Y+16	; 0x10
    8b56:	f9 89       	ldd	r31, Y+17	; 0x11
    8b58:	80 81       	ld	r24, Z
    8b5a:	80 64       	ori	r24, 0x40	; 64
    8b5c:	80 83       	st	Z, r24
  _tx_buffer_head = i;
	
  sbi(*_ucsrb, UDRIE0);
  
  return 1;
}
    8b5e:	81 e0       	ldi	r24, 0x01	; 1
    8b60:	90 e0       	ldi	r25, 0x00	; 0
    8b62:	df 91       	pop	r29
    8b64:	cf 91       	pop	r28
    8b66:	1f 91       	pop	r17
    8b68:	0f 91       	pop	r16
    8b6a:	ff 90       	pop	r15
    8b6c:	ef 90       	pop	r14
    8b6e:	08 95       	ret

00008b70 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    8b70:	cf 93       	push	r28
    8b72:	df 93       	push	r29
    8b74:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    8b76:	88 8d       	ldd	r24, Y+24	; 0x18
    8b78:	88 23       	and	r24, r24
    8b7a:	c1 f0       	breq	.+48     	; 0x8bac <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    8b7c:	ea 89       	ldd	r30, Y+18	; 0x12
    8b7e:	fb 89       	ldd	r31, Y+19	; 0x13
    8b80:	80 81       	ld	r24, Z
    8b82:	85 fd       	sbrc	r24, 5
    8b84:	05 c0       	rjmp	.+10     	; 0x8b90 <_ZN14HardwareSerial5flushEv+0x20>
    8b86:	a8 89       	ldd	r26, Y+16	; 0x10
    8b88:	b9 89       	ldd	r27, Y+17	; 0x11
    8b8a:	8c 91       	ld	r24, X
    8b8c:	86 fd       	sbrc	r24, 6
    8b8e:	0e c0       	rjmp	.+28     	; 0x8bac <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    8b90:	0f b6       	in	r0, 0x3f	; 63
    8b92:	07 fc       	sbrc	r0, 7
    8b94:	f5 cf       	rjmp	.-22     	; 0x8b80 <_ZN14HardwareSerial5flushEv+0x10>
    8b96:	80 81       	ld	r24, Z
    8b98:	85 ff       	sbrs	r24, 5
    8b9a:	f2 cf       	rjmp	.-28     	; 0x8b80 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    8b9c:	a8 89       	ldd	r26, Y+16	; 0x10
    8b9e:	b9 89       	ldd	r27, Y+17	; 0x11
    8ba0:	8c 91       	ld	r24, X
    8ba2:	85 ff       	sbrs	r24, 5
    8ba4:	ed cf       	rjmp	.-38     	; 0x8b80 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    8ba6:	ce 01       	movw	r24, r28
    8ba8:	7c df       	rcall	.-264    	; 0x8aa2 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    8baa:	e8 cf       	rjmp	.-48     	; 0x8b7c <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    8bac:	df 91       	pop	r29
    8bae:	cf 91       	pop	r28
    8bb0:	08 95       	ret

00008bb2 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    8bb2:	cf 92       	push	r12
    8bb4:	df 92       	push	r13
    8bb6:	ef 92       	push	r14
    8bb8:	ff 92       	push	r15
    8bba:	1f 93       	push	r17
    8bbc:	cf 93       	push	r28
    8bbe:	df 93       	push	r29
    8bc0:	ec 01       	movw	r28, r24
    8bc2:	6a 01       	movw	r12, r20
    8bc4:	7b 01       	movw	r14, r22
    8bc6:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    8bc8:	e8 89       	ldd	r30, Y+16	; 0x10
    8bca:	f9 89       	ldd	r31, Y+17	; 0x11
    8bcc:	82 e0       	ldi	r24, 0x02	; 2
    8bce:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    8bd0:	41 15       	cp	r20, r1
    8bd2:	51 4e       	sbci	r21, 0xE1	; 225
    8bd4:	61 05       	cpc	r22, r1
    8bd6:	71 05       	cpc	r23, r1
    8bd8:	a9 f0       	breq	.+42     	; 0x8c04 <_ZN14HardwareSerial5beginEmh+0x52>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    8bda:	60 e0       	ldi	r22, 0x00	; 0
    8bdc:	79 e0       	ldi	r23, 0x09	; 9
    8bde:	8d e3       	ldi	r24, 0x3D	; 61
    8be0:	90 e0       	ldi	r25, 0x00	; 0
    8be2:	a7 01       	movw	r20, r14
    8be4:	96 01       	movw	r18, r12
    8be6:	9c d4       	rcall	.+2360   	; 0x9520 <__udivmodsi4>
    8be8:	da 01       	movw	r26, r20
    8bea:	c9 01       	movw	r24, r18
    8bec:	01 97       	sbiw	r24, 0x01	; 1
    8bee:	a1 09       	sbc	r26, r1
    8bf0:	b1 09       	sbc	r27, r1
    8bf2:	b6 95       	lsr	r27
    8bf4:	a7 95       	ror	r26
    8bf6:	97 95       	ror	r25
    8bf8:	87 95       	ror	r24
    8bfa:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    8bfc:	21 15       	cp	r18, r1
    8bfe:	80 e1       	ldi	r24, 0x10	; 16
    8c00:	38 07       	cpc	r19, r24
    8c02:	a0 f0       	brcs	.+40     	; 0x8c2c <_ZN14HardwareSerial5beginEmh+0x7a>
  {
    *_ucsra = 0;
    8c04:	e8 89       	ldd	r30, Y+16	; 0x10
    8c06:	f9 89       	ldd	r31, Y+17	; 0x11
    8c08:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    8c0a:	60 e8       	ldi	r22, 0x80	; 128
    8c0c:	74 e8       	ldi	r23, 0x84	; 132
    8c0e:	8e e1       	ldi	r24, 0x1E	; 30
    8c10:	90 e0       	ldi	r25, 0x00	; 0
    8c12:	a7 01       	movw	r20, r14
    8c14:	96 01       	movw	r18, r12
    8c16:	84 d4       	rcall	.+2312   	; 0x9520 <__udivmodsi4>
    8c18:	da 01       	movw	r26, r20
    8c1a:	c9 01       	movw	r24, r18
    8c1c:	01 97       	sbiw	r24, 0x01	; 1
    8c1e:	a1 09       	sbc	r26, r1
    8c20:	b1 09       	sbc	r27, r1
    8c22:	b6 95       	lsr	r27
    8c24:	a7 95       	ror	r26
    8c26:	97 95       	ror	r25
    8c28:	87 95       	ror	r24
    8c2a:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    8c2c:	ec 85       	ldd	r30, Y+12	; 0x0c
    8c2e:	fd 85       	ldd	r31, Y+13	; 0x0d
    8c30:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    8c32:	ee 85       	ldd	r30, Y+14	; 0x0e
    8c34:	ff 85       	ldd	r31, Y+15	; 0x0f
    8c36:	20 83       	st	Z, r18

  _written = false;
    8c38:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    8c3a:	ec 89       	ldd	r30, Y+20	; 0x14
    8c3c:	fd 89       	ldd	r31, Y+21	; 0x15
    8c3e:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    8c40:	ea 89       	ldd	r30, Y+18	; 0x12
    8c42:	fb 89       	ldd	r31, Y+19	; 0x13
    8c44:	80 81       	ld	r24, Z
    8c46:	80 61       	ori	r24, 0x10	; 16
    8c48:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    8c4a:	ea 89       	ldd	r30, Y+18	; 0x12
    8c4c:	fb 89       	ldd	r31, Y+19	; 0x13
    8c4e:	80 81       	ld	r24, Z
    8c50:	88 60       	ori	r24, 0x08	; 8
    8c52:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    8c54:	ea 89       	ldd	r30, Y+18	; 0x12
    8c56:	fb 89       	ldd	r31, Y+19	; 0x13
    8c58:	80 81       	ld	r24, Z
    8c5a:	80 68       	ori	r24, 0x80	; 128
    8c5c:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    8c5e:	ea 89       	ldd	r30, Y+18	; 0x12
    8c60:	fb 89       	ldd	r31, Y+19	; 0x13
    8c62:	80 81       	ld	r24, Z
    8c64:	8f 7d       	andi	r24, 0xDF	; 223
    8c66:	80 83       	st	Z, r24
}
    8c68:	df 91       	pop	r29
    8c6a:	cf 91       	pop	r28
    8c6c:	1f 91       	pop	r17
    8c6e:	ff 90       	pop	r15
    8c70:	ef 90       	pop	r14
    8c72:	df 90       	pop	r13
    8c74:	cf 90       	pop	r12
    8c76:	08 95       	ret

00008c78 <__vector_25>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    8c78:	1f 92       	push	r1
    8c7a:	0f 92       	push	r0
    8c7c:	0f b6       	in	r0, 0x3f	; 63
    8c7e:	0f 92       	push	r0
    8c80:	11 24       	eor	r1, r1
    8c82:	0b b6       	in	r0, 0x3b	; 59
    8c84:	0f 92       	push	r0
    8c86:	2f 93       	push	r18
    8c88:	8f 93       	push	r24
    8c8a:	9f 93       	push	r25
    8c8c:	ef 93       	push	r30
    8c8e:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    8c90:	e0 91 92 09 	lds	r30, 0x0992	; 0x800992 <Serial+0x10>
    8c94:	f0 91 93 09 	lds	r31, 0x0993	; 0x800993 <Serial+0x11>
    8c98:	80 81       	ld	r24, Z
    8c9a:	e0 91 98 09 	lds	r30, 0x0998	; 0x800998 <Serial+0x16>
    8c9e:	f0 91 99 09 	lds	r31, 0x0999	; 0x800999 <Serial+0x17>
    8ca2:	82 fd       	sbrc	r24, 2
    8ca4:	12 c0       	rjmp	.+36     	; 0x8cca <__vector_25+0x52>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    8ca6:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    8ca8:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <Serial+0x19>
    8cac:	8f 5f       	subi	r24, 0xFF	; 255
    8cae:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    8cb0:	20 91 9c 09 	lds	r18, 0x099C	; 0x80099c <Serial+0x1a>
    8cb4:	82 17       	cp	r24, r18
    8cb6:	51 f0       	breq	.+20     	; 0x8ccc <__vector_25+0x54>
      _rx_buffer[_rx_buffer_head] = c;
    8cb8:	e0 91 9b 09 	lds	r30, 0x099B	; 0x80099b <Serial+0x19>
    8cbc:	f0 e0       	ldi	r31, 0x00	; 0
    8cbe:	ee 57       	subi	r30, 0x7E	; 126
    8cc0:	f6 4f       	sbci	r31, 0xF6	; 246
    8cc2:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    8cc4:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <Serial+0x19>
    8cc8:	01 c0       	rjmp	.+2      	; 0x8ccc <__vector_25+0x54>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    8cca:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    8ccc:	ff 91       	pop	r31
    8cce:	ef 91       	pop	r30
    8cd0:	9f 91       	pop	r25
    8cd2:	8f 91       	pop	r24
    8cd4:	2f 91       	pop	r18
    8cd6:	0f 90       	pop	r0
    8cd8:	0b be       	out	0x3b, r0	; 59
    8cda:	0f 90       	pop	r0
    8cdc:	0f be       	out	0x3f, r0	; 63
    8cde:	0f 90       	pop	r0
    8ce0:	1f 90       	pop	r1
    8ce2:	18 95       	reti

00008ce4 <__vector_26>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    8ce4:	1f 92       	push	r1
    8ce6:	0f 92       	push	r0
    8ce8:	0f b6       	in	r0, 0x3f	; 63
    8cea:	0f 92       	push	r0
    8cec:	11 24       	eor	r1, r1
    8cee:	0b b6       	in	r0, 0x3b	; 59
    8cf0:	0f 92       	push	r0
    8cf2:	2f 93       	push	r18
    8cf4:	3f 93       	push	r19
    8cf6:	4f 93       	push	r20
    8cf8:	5f 93       	push	r21
    8cfa:	6f 93       	push	r22
    8cfc:	7f 93       	push	r23
    8cfe:	8f 93       	push	r24
    8d00:	9f 93       	push	r25
    8d02:	af 93       	push	r26
    8d04:	bf 93       	push	r27
    8d06:	ef 93       	push	r30
    8d08:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    8d0a:	82 e8       	ldi	r24, 0x82	; 130
    8d0c:	99 e0       	ldi	r25, 0x09	; 9
    8d0e:	c9 de       	rcall	.-622    	; 0x8aa2 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    8d10:	ff 91       	pop	r31
    8d12:	ef 91       	pop	r30
    8d14:	bf 91       	pop	r27
    8d16:	af 91       	pop	r26
    8d18:	9f 91       	pop	r25
    8d1a:	8f 91       	pop	r24
    8d1c:	7f 91       	pop	r23
    8d1e:	6f 91       	pop	r22
    8d20:	5f 91       	pop	r21
    8d22:	4f 91       	pop	r20
    8d24:	3f 91       	pop	r19
    8d26:	2f 91       	pop	r18
    8d28:	0f 90       	pop	r0
    8d2a:	0b be       	out	0x3b, r0	; 59
    8d2c:	0f 90       	pop	r0
    8d2e:	0f be       	out	0x3f, r0	; 63
    8d30:	0f 90       	pop	r0
    8d32:	1f 90       	pop	r1
    8d34:	18 95       	reti

00008d36 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    8d36:	82 e8       	ldi	r24, 0x82	; 130
    8d38:	99 e0       	ldi	r25, 0x09	; 9
    8d3a:	49 de       	rcall	.-878    	; 0x89ce <_ZN14HardwareSerial9availableEv>
    8d3c:	21 e0       	ldi	r18, 0x01	; 1
    8d3e:	89 2b       	or	r24, r25
    8d40:	09 f4       	brne	.+2      	; 0x8d44 <_Z17Serial0_availablev+0xe>
    8d42:	20 e0       	ldi	r18, 0x00	; 0
}
    8d44:	82 2f       	mov	r24, r18
    8d46:	08 95       	ret

00008d48 <_GLOBAL__sub_I___vector_25>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    8d48:	e2 e8       	ldi	r30, 0x82	; 130
    8d4a:	f9 e0       	ldi	r31, 0x09	; 9
    8d4c:	13 82       	std	Z+3, r1	; 0x03
    8d4e:	12 82       	std	Z+2, r1	; 0x02
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;
    virtual void flush() = 0;

    Stream() {_timeout=1000;}
    8d50:	88 ee       	ldi	r24, 0xE8	; 232
    8d52:	93 e0       	ldi	r25, 0x03	; 3
    8d54:	a0 e0       	ldi	r26, 0x00	; 0
    8d56:	b0 e0       	ldi	r27, 0x00	; 0
    8d58:	84 83       	std	Z+4, r24	; 0x04
    8d5a:	95 83       	std	Z+5, r25	; 0x05
    8d5c:	a6 83       	std	Z+6, r26	; 0x06
    8d5e:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    8d60:	82 e8       	ldi	r24, 0x82	; 130
    8d62:	93 e0       	ldi	r25, 0x03	; 3
    8d64:	91 83       	std	Z+1, r25	; 0x01
    8d66:	80 83       	st	Z, r24
    8d68:	85 ec       	ldi	r24, 0xC5	; 197
    8d6a:	90 e0       	ldi	r25, 0x00	; 0
    8d6c:	95 87       	std	Z+13, r25	; 0x0d
    8d6e:	84 87       	std	Z+12, r24	; 0x0c
    8d70:	84 ec       	ldi	r24, 0xC4	; 196
    8d72:	90 e0       	ldi	r25, 0x00	; 0
    8d74:	97 87       	std	Z+15, r25	; 0x0f
    8d76:	86 87       	std	Z+14, r24	; 0x0e
    8d78:	80 ec       	ldi	r24, 0xC0	; 192
    8d7a:	90 e0       	ldi	r25, 0x00	; 0
    8d7c:	91 8b       	std	Z+17, r25	; 0x11
    8d7e:	80 8b       	std	Z+16, r24	; 0x10
    8d80:	81 ec       	ldi	r24, 0xC1	; 193
    8d82:	90 e0       	ldi	r25, 0x00	; 0
    8d84:	93 8b       	std	Z+19, r25	; 0x13
    8d86:	82 8b       	std	Z+18, r24	; 0x12
    8d88:	82 ec       	ldi	r24, 0xC2	; 194
    8d8a:	90 e0       	ldi	r25, 0x00	; 0
    8d8c:	95 8b       	std	Z+21, r25	; 0x15
    8d8e:	84 8b       	std	Z+20, r24	; 0x14
    8d90:	86 ec       	ldi	r24, 0xC6	; 198
    8d92:	90 e0       	ldi	r25, 0x00	; 0
    8d94:	97 8b       	std	Z+23, r25	; 0x17
    8d96:	86 8b       	std	Z+22, r24	; 0x16
    8d98:	11 8e       	std	Z+25, r1	; 0x19
    8d9a:	12 8e       	std	Z+26, r1	; 0x1a
    8d9c:	13 8e       	std	Z+27, r1	; 0x1b
    8d9e:	14 8e       	std	Z+28, r1	; 0x1c
    8da0:	08 95       	ret

00008da2 <initVariant>:
    8da2:	08 95       	ret

00008da4 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    8da4:	5e d1       	rcall	.+700    	; 0x9062 <init>

	initVariant();
    8da6:	fd df       	rcall	.-6      	; 0x8da2 <initVariant>
    8da8:	0e 94 52 17 	call	0x2ea4	; 0x2ea4 <setup>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    8dac:	c5 e1       	ldi	r28, 0x15	; 21
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    8dae:	d5 e4       	ldi	r29, 0x45	; 69
    8db0:	0e 94 7b 17 	call	0x2ef6	; 0x2ef6 <loop>
#endif
	
	setup();
    
	for (;;) {
		loop();
    8db4:	20 97       	sbiw	r28, 0x00	; 0
		if (serialEventRun) serialEventRun();
    8db6:	e1 f3       	breq	.-8      	; 0x8db0 <main+0xc>
    8db8:	38 de       	rcall	.-912    	; 0x8a2a <_Z14serialEventRunv>
    8dba:	fa cf       	rjmp	.-12     	; 0x8db0 <main+0xc>

00008dbc <_Znwj>:
    8dbc:	2f c4       	rjmp	.+2142   	; 0x961c <malloc>

00008dbe <_ZN5Print5writeEPKhj>:
size_t Print::println(unsigned char b, int base)
{
  size_t n = print(b, base);
  n += println();
  return n;
}
    8dbe:	cf 92       	push	r12
    8dc0:	df 92       	push	r13
    8dc2:	ef 92       	push	r14
    8dc4:	ff 92       	push	r15
    8dc6:	0f 93       	push	r16
    8dc8:	1f 93       	push	r17
    8dca:	cf 93       	push	r28
    8dcc:	df 93       	push	r29
    8dce:	6c 01       	movw	r12, r24
    8dd0:	7a 01       	movw	r14, r20
    8dd2:	8b 01       	movw	r16, r22
    8dd4:	c0 e0       	ldi	r28, 0x00	; 0
    8dd6:	d0 e0       	ldi	r29, 0x00	; 0
    8dd8:	ce 15       	cp	r28, r14
    8dda:	df 05       	cpc	r29, r15
    8ddc:	81 f0       	breq	.+32     	; 0x8dfe <_ZN5Print5writeEPKhj+0x40>
    8dde:	d8 01       	movw	r26, r16
    8de0:	6d 91       	ld	r22, X+
    8de2:	8d 01       	movw	r16, r26
    8de4:	d6 01       	movw	r26, r12
    8de6:	ed 91       	ld	r30, X+
    8de8:	fc 91       	ld	r31, X
    8dea:	01 90       	ld	r0, Z+
    8dec:	f0 81       	ld	r31, Z
    8dee:	e0 2d       	mov	r30, r0
    8df0:	c6 01       	movw	r24, r12
    8df2:	19 95       	eicall
    8df4:	89 2b       	or	r24, r25
    8df6:	11 f0       	breq	.+4      	; 0x8dfc <_ZN5Print5writeEPKhj+0x3e>
    8df8:	21 96       	adiw	r28, 0x01	; 1
    8dfa:	ee cf       	rjmp	.-36     	; 0x8dd8 <_ZN5Print5writeEPKhj+0x1a>
    8dfc:	7e 01       	movw	r14, r28
    8dfe:	c7 01       	movw	r24, r14
    8e00:	df 91       	pop	r29
    8e02:	cf 91       	pop	r28
    8e04:	1f 91       	pop	r17
    8e06:	0f 91       	pop	r16
    8e08:	ff 90       	pop	r15
    8e0a:	ef 90       	pop	r14
    8e0c:	df 90       	pop	r13
    8e0e:	cf 90       	pop	r12
    8e10:	08 95       	ret

00008e12 <_ZN5Print5writeEPKc>:
    8e12:	61 15       	cp	r22, r1
    8e14:	71 05       	cpc	r23, r1
    8e16:	79 f0       	breq	.+30     	; 0x8e36 <_ZN5Print5writeEPKc+0x24>
    8e18:	fb 01       	movw	r30, r22
    8e1a:	01 90       	ld	r0, Z+
    8e1c:	00 20       	and	r0, r0
    8e1e:	e9 f7       	brne	.-6      	; 0x8e1a <_ZN5Print5writeEPKc+0x8>
    8e20:	31 97       	sbiw	r30, 0x01	; 1
    8e22:	af 01       	movw	r20, r30
    8e24:	46 1b       	sub	r20, r22
    8e26:	57 0b       	sbc	r21, r23
    8e28:	dc 01       	movw	r26, r24
    8e2a:	ed 91       	ld	r30, X+
    8e2c:	fc 91       	ld	r31, X
    8e2e:	02 80       	ldd	r0, Z+2	; 0x02
    8e30:	f3 81       	ldd	r31, Z+3	; 0x03
    8e32:	e0 2d       	mov	r30, r0
    8e34:	19 94       	eijmp
    8e36:	80 e0       	ldi	r24, 0x00	; 0
    8e38:	90 e0       	ldi	r25, 0x00	; 0
    8e3a:	08 95       	ret

00008e3c <_ZN5Print7printlnEv>:
    8e3c:	6e e8       	ldi	r22, 0x8E	; 142
    8e3e:	73 e0       	ldi	r23, 0x03	; 3
    8e40:	e8 cf       	rjmp	.-48     	; 0x8e12 <_ZN5Print5writeEPKc>

00008e42 <_ZN5Print11printNumberEmh>:
    8e42:	8f 92       	push	r8
    8e44:	9f 92       	push	r9
    8e46:	af 92       	push	r10
    8e48:	bf 92       	push	r11
    8e4a:	ef 92       	push	r14
    8e4c:	ff 92       	push	r15
    8e4e:	0f 93       	push	r16
    8e50:	1f 93       	push	r17
    8e52:	cf 93       	push	r28
    8e54:	df 93       	push	r29
    8e56:	cd b7       	in	r28, 0x3d	; 61
    8e58:	de b7       	in	r29, 0x3e	; 62
    8e5a:	a1 97       	sbiw	r28, 0x21	; 33
    8e5c:	0f b6       	in	r0, 0x3f	; 63
    8e5e:	f8 94       	cli
    8e60:	de bf       	out	0x3e, r29	; 62
    8e62:	0f be       	out	0x3f, r0	; 63
    8e64:	cd bf       	out	0x3d, r28	; 61
    8e66:	7c 01       	movw	r14, r24
    8e68:	fa 01       	movw	r30, r20
    8e6a:	cb 01       	movw	r24, r22
    8e6c:	19 a2       	std	Y+33, r1	; 0x21
    8e6e:	22 30       	cpi	r18, 0x02	; 2
    8e70:	08 f4       	brcc	.+2      	; 0x8e74 <_ZN5Print11printNumberEmh+0x32>
    8e72:	2a e0       	ldi	r18, 0x0A	; 10
    8e74:	8e 01       	movw	r16, r28
    8e76:	0f 5d       	subi	r16, 0xDF	; 223
    8e78:	1f 4f       	sbci	r17, 0xFF	; 255
    8e7a:	82 2e       	mov	r8, r18
    8e7c:	91 2c       	mov	r9, r1
    8e7e:	a1 2c       	mov	r10, r1
    8e80:	b1 2c       	mov	r11, r1
    8e82:	bf 01       	movw	r22, r30
    8e84:	a5 01       	movw	r20, r10
    8e86:	94 01       	movw	r18, r8
    8e88:	4b d3       	rcall	.+1686   	; 0x9520 <__udivmodsi4>
    8e8a:	f9 01       	movw	r30, r18
    8e8c:	ca 01       	movw	r24, r20
    8e8e:	01 50       	subi	r16, 0x01	; 1
    8e90:	11 09       	sbc	r17, r1
    8e92:	6a 30       	cpi	r22, 0x0A	; 10
    8e94:	10 f4       	brcc	.+4      	; 0x8e9a <_ZN5Print11printNumberEmh+0x58>
    8e96:	60 5d       	subi	r22, 0xD0	; 208
    8e98:	01 c0       	rjmp	.+2      	; 0x8e9c <_ZN5Print11printNumberEmh+0x5a>
    8e9a:	69 5c       	subi	r22, 0xC9	; 201
    8e9c:	d8 01       	movw	r26, r16
    8e9e:	6c 93       	st	X, r22
    8ea0:	23 2b       	or	r18, r19
    8ea2:	24 2b       	or	r18, r20
    8ea4:	25 2b       	or	r18, r21
    8ea6:	69 f7       	brne	.-38     	; 0x8e82 <_ZN5Print11printNumberEmh+0x40>
    8ea8:	b8 01       	movw	r22, r16
    8eaa:	c7 01       	movw	r24, r14
    8eac:	b2 df       	rcall	.-156    	; 0x8e12 <_ZN5Print5writeEPKc>
    8eae:	a1 96       	adiw	r28, 0x21	; 33
    8eb0:	0f b6       	in	r0, 0x3f	; 63
    8eb2:	f8 94       	cli
    8eb4:	de bf       	out	0x3e, r29	; 62
    8eb6:	0f be       	out	0x3f, r0	; 63
    8eb8:	cd bf       	out	0x3d, r28	; 61
    8eba:	df 91       	pop	r29
    8ebc:	cf 91       	pop	r28
    8ebe:	1f 91       	pop	r17
    8ec0:	0f 91       	pop	r16
    8ec2:	ff 90       	pop	r15
    8ec4:	ef 90       	pop	r14
    8ec6:	bf 90       	pop	r11
    8ec8:	af 90       	pop	r10
    8eca:	9f 90       	pop	r9
    8ecc:	8f 90       	pop	r8
    8ece:	08 95       	ret

00008ed0 <_ZN5Print5printEmi>:
    8ed0:	21 15       	cp	r18, r1
    8ed2:	31 05       	cpc	r19, r1
    8ed4:	41 f4       	brne	.+16     	; 0x8ee6 <_ZN5Print5printEmi+0x16>
    8ed6:	dc 01       	movw	r26, r24
    8ed8:	ed 91       	ld	r30, X+
    8eda:	fc 91       	ld	r31, X
    8edc:	01 90       	ld	r0, Z+
    8ede:	f0 81       	ld	r31, Z
    8ee0:	e0 2d       	mov	r30, r0
    8ee2:	64 2f       	mov	r22, r20
    8ee4:	19 94       	eijmp
    8ee6:	ad cf       	rjmp	.-166    	; 0x8e42 <_ZN5Print11printNumberEmh>

00008ee8 <_ZN5Print5printEji>:
{
  return print((long) n, base);
}

size_t Print::print(unsigned int n, int base)
{
    8ee8:	9a 01       	movw	r18, r20
  return print((unsigned long) n, base);
    8eea:	ab 01       	movw	r20, r22
    8eec:	60 e0       	ldi	r22, 0x00	; 0
    8eee:	70 e0       	ldi	r23, 0x00	; 0
    8ef0:	ef cf       	rjmp	.-34     	; 0x8ed0 <_ZN5Print5printEmi>

00008ef2 <_ZN5Print7printlnEji>:
  n += println();
  return n;
}

size_t Print::println(unsigned int num, int base)
{
    8ef2:	0f 93       	push	r16
    8ef4:	1f 93       	push	r17
    8ef6:	cf 93       	push	r28
    8ef8:	df 93       	push	r29
    8efa:	ec 01       	movw	r28, r24
  size_t n = print(num, base);
    8efc:	f5 df       	rcall	.-22     	; 0x8ee8 <_ZN5Print5printEji>
    8efe:	8c 01       	movw	r16, r24
  n += println();
    8f00:	ce 01       	movw	r24, r28
    8f02:	9c df       	rcall	.-200    	; 0x8e3c <_ZN5Print7printlnEv>
  return n;
}
    8f04:	80 0f       	add	r24, r16
    8f06:	91 1f       	adc	r25, r17
    8f08:	df 91       	pop	r29
    8f0a:	cf 91       	pop	r28
    8f0c:	1f 91       	pop	r17
    8f0e:	0f 91       	pop	r16
    8f10:	08 95       	ret

00008f12 <__vector_23>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    8f12:	1f 92       	push	r1
    8f14:	0f 92       	push	r0
    8f16:	0f b6       	in	r0, 0x3f	; 63
    8f18:	0f 92       	push	r0
    8f1a:	11 24       	eor	r1, r1
    8f1c:	2f 93       	push	r18
    8f1e:	3f 93       	push	r19
    8f20:	8f 93       	push	r24
    8f22:	9f 93       	push	r25
    8f24:	af 93       	push	r26
    8f26:	bf 93       	push	r27
    8f28:	80 91 20 0a 	lds	r24, 0x0A20	; 0x800a20 <timer0_millis>
    8f2c:	90 91 21 0a 	lds	r25, 0x0A21	; 0x800a21 <timer0_millis+0x1>
    8f30:	a0 91 22 0a 	lds	r26, 0x0A22	; 0x800a22 <timer0_millis+0x2>
    8f34:	b0 91 23 0a 	lds	r27, 0x0A23	; 0x800a23 <timer0_millis+0x3>
    8f38:	30 91 1f 0a 	lds	r19, 0x0A1F	; 0x800a1f <timer0_fract>
    8f3c:	23 e0       	ldi	r18, 0x03	; 3
    8f3e:	23 0f       	add	r18, r19
    8f40:	2d 37       	cpi	r18, 0x7D	; 125
    8f42:	20 f4       	brcc	.+8      	; 0x8f4c <__vector_23+0x3a>
    8f44:	01 96       	adiw	r24, 0x01	; 1
    8f46:	a1 1d       	adc	r26, r1
    8f48:	b1 1d       	adc	r27, r1
    8f4a:	05 c0       	rjmp	.+10     	; 0x8f56 <__vector_23+0x44>
    8f4c:	26 e8       	ldi	r18, 0x86	; 134
    8f4e:	23 0f       	add	r18, r19
    8f50:	02 96       	adiw	r24, 0x02	; 2
    8f52:	a1 1d       	adc	r26, r1
    8f54:	b1 1d       	adc	r27, r1
    8f56:	20 93 1f 0a 	sts	0x0A1F, r18	; 0x800a1f <timer0_fract>
    8f5a:	80 93 20 0a 	sts	0x0A20, r24	; 0x800a20 <timer0_millis>
    8f5e:	90 93 21 0a 	sts	0x0A21, r25	; 0x800a21 <timer0_millis+0x1>
    8f62:	a0 93 22 0a 	sts	0x0A22, r26	; 0x800a22 <timer0_millis+0x2>
    8f66:	b0 93 23 0a 	sts	0x0A23, r27	; 0x800a23 <timer0_millis+0x3>
    8f6a:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <timer0_overflow_count>
    8f6e:	90 91 25 0a 	lds	r25, 0x0A25	; 0x800a25 <timer0_overflow_count+0x1>
    8f72:	a0 91 26 0a 	lds	r26, 0x0A26	; 0x800a26 <timer0_overflow_count+0x2>
    8f76:	b0 91 27 0a 	lds	r27, 0x0A27	; 0x800a27 <timer0_overflow_count+0x3>
    8f7a:	01 96       	adiw	r24, 0x01	; 1
    8f7c:	a1 1d       	adc	r26, r1
    8f7e:	b1 1d       	adc	r27, r1
    8f80:	80 93 24 0a 	sts	0x0A24, r24	; 0x800a24 <timer0_overflow_count>
    8f84:	90 93 25 0a 	sts	0x0A25, r25	; 0x800a25 <timer0_overflow_count+0x1>
    8f88:	a0 93 26 0a 	sts	0x0A26, r26	; 0x800a26 <timer0_overflow_count+0x2>
    8f8c:	b0 93 27 0a 	sts	0x0A27, r27	; 0x800a27 <timer0_overflow_count+0x3>
    8f90:	bf 91       	pop	r27
    8f92:	af 91       	pop	r26
    8f94:	9f 91       	pop	r25
    8f96:	8f 91       	pop	r24
    8f98:	3f 91       	pop	r19
    8f9a:	2f 91       	pop	r18
    8f9c:	0f 90       	pop	r0
    8f9e:	0f be       	out	0x3f, r0	; 63
    8fa0:	0f 90       	pop	r0
    8fa2:	1f 90       	pop	r1
    8fa4:	18 95       	reti

00008fa6 <micros>:
    8fa6:	3f b7       	in	r19, 0x3f	; 63
    8fa8:	f8 94       	cli
    8faa:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <timer0_overflow_count>
    8fae:	90 91 25 0a 	lds	r25, 0x0A25	; 0x800a25 <timer0_overflow_count+0x1>
    8fb2:	a0 91 26 0a 	lds	r26, 0x0A26	; 0x800a26 <timer0_overflow_count+0x2>
    8fb6:	b0 91 27 0a 	lds	r27, 0x0A27	; 0x800a27 <timer0_overflow_count+0x3>
    8fba:	26 b5       	in	r18, 0x26	; 38
    8fbc:	a8 9b       	sbis	0x15, 0	; 21
    8fbe:	05 c0       	rjmp	.+10     	; 0x8fca <micros+0x24>
    8fc0:	2f 3f       	cpi	r18, 0xFF	; 255
    8fc2:	19 f0       	breq	.+6      	; 0x8fca <micros+0x24>
    8fc4:	01 96       	adiw	r24, 0x01	; 1
    8fc6:	a1 1d       	adc	r26, r1
    8fc8:	b1 1d       	adc	r27, r1
    8fca:	3f bf       	out	0x3f, r19	; 63
    8fcc:	ba 2f       	mov	r27, r26
    8fce:	a9 2f       	mov	r26, r25
    8fd0:	98 2f       	mov	r25, r24
    8fd2:	88 27       	eor	r24, r24
    8fd4:	82 0f       	add	r24, r18
    8fd6:	91 1d       	adc	r25, r1
    8fd8:	a1 1d       	adc	r26, r1
    8fda:	b1 1d       	adc	r27, r1
    8fdc:	bc 01       	movw	r22, r24
    8fde:	cd 01       	movw	r24, r26
    8fe0:	42 e0       	ldi	r20, 0x02	; 2
    8fe2:	66 0f       	add	r22, r22
    8fe4:	77 1f       	adc	r23, r23
    8fe6:	88 1f       	adc	r24, r24
    8fe8:	99 1f       	adc	r25, r25
    8fea:	4a 95       	dec	r20
    8fec:	d1 f7       	brne	.-12     	; 0x8fe2 <micros+0x3c>
    8fee:	08 95       	ret

00008ff0 <delay>:
    8ff0:	8f 92       	push	r8
    8ff2:	9f 92       	push	r9
    8ff4:	af 92       	push	r10
    8ff6:	bf 92       	push	r11
    8ff8:	cf 92       	push	r12
    8ffa:	df 92       	push	r13
    8ffc:	ef 92       	push	r14
    8ffe:	ff 92       	push	r15
    9000:	6b 01       	movw	r12, r22
    9002:	7c 01       	movw	r14, r24
    9004:	d0 df       	rcall	.-96     	; 0x8fa6 <micros>
    9006:	4b 01       	movw	r8, r22
    9008:	5c 01       	movw	r10, r24
    900a:	c1 14       	cp	r12, r1
    900c:	d1 04       	cpc	r13, r1
    900e:	e1 04       	cpc	r14, r1
    9010:	f1 04       	cpc	r15, r1
    9012:	f1 f0       	breq	.+60     	; 0x9050 <delay+0x60>
    9014:	35 d2       	rcall	.+1130   	; 0x9480 <yield>
    9016:	c7 df       	rcall	.-114    	; 0x8fa6 <micros>
    9018:	dc 01       	movw	r26, r24
    901a:	cb 01       	movw	r24, r22
    901c:	88 19       	sub	r24, r8
    901e:	99 09       	sbc	r25, r9
    9020:	aa 09       	sbc	r26, r10
    9022:	bb 09       	sbc	r27, r11
    9024:	88 3e       	cpi	r24, 0xE8	; 232
    9026:	93 40       	sbci	r25, 0x03	; 3
    9028:	a1 05       	cpc	r26, r1
    902a:	b1 05       	cpc	r27, r1
    902c:	70 f3       	brcs	.-36     	; 0x900a <delay+0x1a>
    902e:	21 e0       	ldi	r18, 0x01	; 1
    9030:	c2 1a       	sub	r12, r18
    9032:	d1 08       	sbc	r13, r1
    9034:	e1 08       	sbc	r14, r1
    9036:	f1 08       	sbc	r15, r1
    9038:	88 ee       	ldi	r24, 0xE8	; 232
    903a:	88 0e       	add	r8, r24
    903c:	83 e0       	ldi	r24, 0x03	; 3
    903e:	98 1e       	adc	r9, r24
    9040:	a1 1c       	adc	r10, r1
    9042:	b1 1c       	adc	r11, r1
    9044:	c1 14       	cp	r12, r1
    9046:	d1 04       	cpc	r13, r1
    9048:	e1 04       	cpc	r14, r1
    904a:	f1 04       	cpc	r15, r1
    904c:	21 f7       	brne	.-56     	; 0x9016 <delay+0x26>
    904e:	dd cf       	rjmp	.-70     	; 0x900a <delay+0x1a>
    9050:	ff 90       	pop	r15
    9052:	ef 90       	pop	r14
    9054:	df 90       	pop	r13
    9056:	cf 90       	pop	r12
    9058:	bf 90       	pop	r11
    905a:	af 90       	pop	r10
    905c:	9f 90       	pop	r9
    905e:	8f 90       	pop	r8
    9060:	08 95       	ret

00009062 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    9062:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    9064:	84 b5       	in	r24, 0x24	; 36
    9066:	82 60       	ori	r24, 0x02	; 2
    9068:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    906a:	84 b5       	in	r24, 0x24	; 36
    906c:	81 60       	ori	r24, 0x01	; 1
    906e:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    9070:	85 b5       	in	r24, 0x25	; 37
    9072:	82 60       	ori	r24, 0x02	; 2
    9074:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    9076:	85 b5       	in	r24, 0x25	; 37
    9078:	81 60       	ori	r24, 0x01	; 1
    907a:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    907c:	ee e6       	ldi	r30, 0x6E	; 110
    907e:	f0 e0       	ldi	r31, 0x00	; 0
    9080:	80 81       	ld	r24, Z
    9082:	81 60       	ori	r24, 0x01	; 1
    9084:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    9086:	e1 e8       	ldi	r30, 0x81	; 129
    9088:	f0 e0       	ldi	r31, 0x00	; 0
    908a:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    908c:	80 81       	ld	r24, Z
    908e:	82 60       	ori	r24, 0x02	; 2
    9090:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    9092:	80 81       	ld	r24, Z
    9094:	81 60       	ori	r24, 0x01	; 1
    9096:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    9098:	e0 e8       	ldi	r30, 0x80	; 128
    909a:	f0 e0       	ldi	r31, 0x00	; 0
    909c:	80 81       	ld	r24, Z
    909e:	81 60       	ori	r24, 0x01	; 1
    90a0:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    90a2:	e1 eb       	ldi	r30, 0xB1	; 177
    90a4:	f0 e0       	ldi	r31, 0x00	; 0
    90a6:	80 81       	ld	r24, Z
    90a8:	84 60       	ori	r24, 0x04	; 4
    90aa:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    90ac:	e0 eb       	ldi	r30, 0xB0	; 176
    90ae:	f0 e0       	ldi	r31, 0x00	; 0
    90b0:	80 81       	ld	r24, Z
    90b2:	81 60       	ori	r24, 0x01	; 1
    90b4:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
    90b6:	e1 e9       	ldi	r30, 0x91	; 145
    90b8:	f0 e0       	ldi	r31, 0x00	; 0
    90ba:	80 81       	ld	r24, Z
    90bc:	82 60       	ori	r24, 0x02	; 2
    90be:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
    90c0:	80 81       	ld	r24, Z
    90c2:	81 60       	ori	r24, 0x01	; 1
    90c4:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
    90c6:	e0 e9       	ldi	r30, 0x90	; 144
    90c8:	f0 e0       	ldi	r31, 0x00	; 0
    90ca:	80 81       	ld	r24, Z
    90cc:	81 60       	ori	r24, 0x01	; 1
    90ce:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
    90d0:	e1 ea       	ldi	r30, 0xA1	; 161
    90d2:	f0 e0       	ldi	r31, 0x00	; 0
    90d4:	80 81       	ld	r24, Z
    90d6:	82 60       	ori	r24, 0x02	; 2
    90d8:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
    90da:	80 81       	ld	r24, Z
    90dc:	81 60       	ori	r24, 0x01	; 1
    90de:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
    90e0:	e0 ea       	ldi	r30, 0xA0	; 160
    90e2:	f0 e0       	ldi	r31, 0x00	; 0
    90e4:	80 81       	ld	r24, Z
    90e6:	81 60       	ori	r24, 0x01	; 1
    90e8:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
    90ea:	e1 e2       	ldi	r30, 0x21	; 33
    90ec:	f1 e0       	ldi	r31, 0x01	; 1
    90ee:	80 81       	ld	r24, Z
    90f0:	82 60       	ori	r24, 0x02	; 2
    90f2:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
    90f4:	80 81       	ld	r24, Z
    90f6:	81 60       	ori	r24, 0x01	; 1
    90f8:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
    90fa:	e0 e2       	ldi	r30, 0x20	; 32
    90fc:	f1 e0       	ldi	r31, 0x01	; 1
    90fe:	80 81       	ld	r24, Z
    9100:	81 60       	ori	r24, 0x01	; 1
    9102:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    9104:	ea e7       	ldi	r30, 0x7A	; 122
    9106:	f0 e0       	ldi	r31, 0x00	; 0
    9108:	80 81       	ld	r24, Z
    910a:	84 60       	ori	r24, 0x04	; 4
    910c:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    910e:	80 81       	ld	r24, Z
    9110:	82 60       	ori	r24, 0x02	; 2
    9112:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    9114:	80 81       	ld	r24, Z
    9116:	81 60       	ori	r24, 0x01	; 1
    9118:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    911a:	80 81       	ld	r24, Z
    911c:	80 68       	ori	r24, 0x80	; 128
    911e:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    9120:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    9124:	08 95       	ret

00009126 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    9126:	90 e0       	ldi	r25, 0x00	; 0
    9128:	fc 01       	movw	r30, r24
    912a:	31 97       	sbiw	r30, 0x01	; 1
    912c:	e2 31       	cpi	r30, 0x12	; 18
    912e:	f1 05       	cpc	r31, r1
    9130:	08 f0       	brcs	.+2      	; 0x9134 <turnOffPWM+0xe>
    9132:	4d c0       	rjmp	.+154    	; 0x91ce <turnOffPWM+0xa8>
    9134:	88 27       	eor	r24, r24
    9136:	e3 54       	subi	r30, 0x43	; 67
    9138:	ff 4f       	sbci	r31, 0xFF	; 255
    913a:	8f 4f       	sbci	r24, 0xFF	; 255
    913c:	2f c2       	rjmp	.+1118   	; 0x959c <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    913e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    9142:	8f 77       	andi	r24, 0x7F	; 127
    9144:	03 c0       	rjmp	.+6      	; 0x914c <turnOffPWM+0x26>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    9146:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    914a:	8f 7d       	andi	r24, 0xDF	; 223
    914c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    9150:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
    9152:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    9156:	87 7f       	andi	r24, 0xF7	; 247
    9158:	f9 cf       	rjmp	.-14     	; 0x914c <turnOffPWM+0x26>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    915a:	84 b5       	in	r24, 0x24	; 36
    915c:	8f 77       	andi	r24, 0x7F	; 127
    915e:	02 c0       	rjmp	.+4      	; 0x9164 <turnOffPWM+0x3e>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    9160:	84 b5       	in	r24, 0x24	; 36
    9162:	8f 7d       	andi	r24, 0xDF	; 223
    9164:	84 bd       	out	0x24, r24	; 36
    9166:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    9168:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    916c:	8f 77       	andi	r24, 0x7F	; 127
    916e:	03 c0       	rjmp	.+6      	; 0x9176 <turnOffPWM+0x50>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    9170:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    9174:	8f 7d       	andi	r24, 0xDF	; 223
    9176:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    917a:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
    917c:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    9180:	8f 77       	andi	r24, 0x7F	; 127
    9182:	07 c0       	rjmp	.+14     	; 0x9192 <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
    9184:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    9188:	8f 7d       	andi	r24, 0xDF	; 223
    918a:	03 c0       	rjmp	.+6      	; 0x9192 <turnOffPWM+0x6c>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
    918c:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    9190:	87 7f       	andi	r24, 0xF7	; 247
    9192:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
    9196:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
    9198:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    919c:	8f 77       	andi	r24, 0x7F	; 127
    919e:	07 c0       	rjmp	.+14     	; 0x91ae <turnOffPWM+0x88>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
    91a0:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    91a4:	8f 7d       	andi	r24, 0xDF	; 223
    91a6:	03 c0       	rjmp	.+6      	; 0x91ae <turnOffPWM+0x88>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
    91a8:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    91ac:	87 7f       	andi	r24, 0xF7	; 247
    91ae:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7000a0>
    91b2:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
    91b4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    91b8:	8f 77       	andi	r24, 0x7F	; 127
    91ba:	07 c0       	rjmp	.+14     	; 0x91ca <turnOffPWM+0xa4>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
    91bc:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    91c0:	8f 7d       	andi	r24, 0xDF	; 223
    91c2:	03 c0       	rjmp	.+6      	; 0x91ca <turnOffPWM+0xa4>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
    91c4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    91c8:	87 7f       	andi	r24, 0xF7	; 247
    91ca:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
    91ce:	08 95       	ret

000091d0 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    91d0:	cf 93       	push	r28
    91d2:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    91d4:	90 e0       	ldi	r25, 0x00	; 0
    91d6:	fc 01       	movw	r30, r24
    91d8:	e6 5c       	subi	r30, 0xC6	; 198
    91da:	fc 4e       	sbci	r31, 0xEC	; 236
    91dc:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    91de:	fc 01       	movw	r30, r24
    91e0:	e0 58       	subi	r30, 0x80	; 128
    91e2:	fc 4e       	sbci	r31, 0xEC	; 236
    91e4:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    91e6:	88 23       	and	r24, r24
    91e8:	61 f1       	breq	.+88     	; 0x9242 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    91ea:	90 e0       	ldi	r25, 0x00	; 0
    91ec:	88 0f       	add	r24, r24
    91ee:	99 1f       	adc	r25, r25
    91f0:	fc 01       	movw	r30, r24
    91f2:	e6 50       	subi	r30, 0x06	; 6
    91f4:	fc 4e       	sbci	r31, 0xEC	; 236
    91f6:	c5 91       	lpm	r28, Z+
    91f8:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    91fa:	fc 01       	movw	r30, r24
    91fc:	e0 52       	subi	r30, 0x20	; 32
    91fe:	fc 4e       	sbci	r31, 0xEC	; 236
    9200:	a5 91       	lpm	r26, Z+
    9202:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    9204:	61 11       	cpse	r22, r1
    9206:	09 c0       	rjmp	.+18     	; 0x921a <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    9208:	9f b7       	in	r25, 0x3f	; 63
                cli();
    920a:	f8 94       	cli
		*reg &= ~bit;
    920c:	88 81       	ld	r24, Y
    920e:	20 95       	com	r18
    9210:	82 23       	and	r24, r18
    9212:	88 83       	st	Y, r24
		*out &= ~bit;
    9214:	ec 91       	ld	r30, X
    9216:	2e 23       	and	r18, r30
    9218:	0b c0       	rjmp	.+22     	; 0x9230 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    921a:	62 30       	cpi	r22, 0x02	; 2
    921c:	61 f4       	brne	.+24     	; 0x9236 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    921e:	9f b7       	in	r25, 0x3f	; 63
                cli();
    9220:	f8 94       	cli
		*reg &= ~bit;
    9222:	88 81       	ld	r24, Y
    9224:	32 2f       	mov	r19, r18
    9226:	30 95       	com	r19
    9228:	83 23       	and	r24, r19
    922a:	88 83       	st	Y, r24
		*out |= bit;
    922c:	ec 91       	ld	r30, X
    922e:	2e 2b       	or	r18, r30
    9230:	2c 93       	st	X, r18
		SREG = oldSREG;
    9232:	9f bf       	out	0x3f, r25	; 63
    9234:	06 c0       	rjmp	.+12     	; 0x9242 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    9236:	8f b7       	in	r24, 0x3f	; 63
                cli();
    9238:	f8 94       	cli
		*reg |= bit;
    923a:	e8 81       	ld	r30, Y
    923c:	2e 2b       	or	r18, r30
    923e:	28 83       	st	Y, r18
		SREG = oldSREG;
    9240:	8f bf       	out	0x3f, r24	; 63
	}
}
    9242:	df 91       	pop	r29
    9244:	cf 91       	pop	r28
    9246:	08 95       	ret

00009248 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    9248:	1f 93       	push	r17
    924a:	cf 93       	push	r28
    924c:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    924e:	28 2f       	mov	r18, r24
    9250:	30 e0       	ldi	r19, 0x00	; 0
    9252:	f9 01       	movw	r30, r18
    9254:	ec 50       	subi	r30, 0x0C	; 12
    9256:	fd 4e       	sbci	r31, 0xED	; 237
    9258:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    925a:	f9 01       	movw	r30, r18
    925c:	e6 5c       	subi	r30, 0xC6	; 198
    925e:	fc 4e       	sbci	r31, 0xEC	; 236
    9260:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    9262:	f9 01       	movw	r30, r18
    9264:	e0 58       	subi	r30, 0x80	; 128
    9266:	fc 4e       	sbci	r31, 0xEC	; 236
    9268:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    926a:	cc 23       	and	r28, r28
    926c:	b9 f0       	breq	.+46     	; 0x929c <digitalWrite+0x54>
    926e:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    9270:	81 11       	cpse	r24, r1
    9272:	59 df       	rcall	.-334    	; 0x9126 <turnOffPWM>

	out = portOutputRegister(port);
    9274:	ec 2f       	mov	r30, r28
    9276:	f0 e0       	ldi	r31, 0x00	; 0
    9278:	ee 0f       	add	r30, r30
    927a:	ff 1f       	adc	r31, r31
    927c:	e0 52       	subi	r30, 0x20	; 32
    927e:	fc 4e       	sbci	r31, 0xEC	; 236
    9280:	a5 91       	lpm	r26, Z+
    9282:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    9284:	9f b7       	in	r25, 0x3f	; 63
	cli();
    9286:	f8 94       	cli

	if (val == LOW) {
    9288:	11 11       	cpse	r17, r1
    928a:	04 c0       	rjmp	.+8      	; 0x9294 <digitalWrite+0x4c>
		*out &= ~bit;
    928c:	8c 91       	ld	r24, X
    928e:	d0 95       	com	r29
    9290:	d8 23       	and	r29, r24
    9292:	02 c0       	rjmp	.+4      	; 0x9298 <digitalWrite+0x50>
	} else {
		*out |= bit;
    9294:	ec 91       	ld	r30, X
    9296:	de 2b       	or	r29, r30
    9298:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    929a:	9f bf       	out	0x3f, r25	; 63
}
    929c:	df 91       	pop	r29
    929e:	cf 91       	pop	r28
    92a0:	1f 91       	pop	r17
    92a2:	08 95       	ret

000092a4 <digitalRead>:

int digitalRead(uint8_t pin)
{
    92a4:	cf 93       	push	r28
    92a6:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    92a8:	28 2f       	mov	r18, r24
    92aa:	30 e0       	ldi	r19, 0x00	; 0
    92ac:	f9 01       	movw	r30, r18
    92ae:	ec 50       	subi	r30, 0x0C	; 12
    92b0:	fd 4e       	sbci	r31, 0xED	; 237
    92b2:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    92b4:	f9 01       	movw	r30, r18
    92b6:	e6 5c       	subi	r30, 0xC6	; 198
    92b8:	fc 4e       	sbci	r31, 0xEC	; 236
    92ba:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    92bc:	f9 01       	movw	r30, r18
    92be:	e0 58       	subi	r30, 0x80	; 128
    92c0:	fc 4e       	sbci	r31, 0xEC	; 236
    92c2:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
    92c4:	cc 23       	and	r28, r28
    92c6:	89 f0       	breq	.+34     	; 0x92ea <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    92c8:	81 11       	cpse	r24, r1
    92ca:	2d df       	rcall	.-422    	; 0x9126 <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
    92cc:	ec 2f       	mov	r30, r28
    92ce:	f0 e0       	ldi	r31, 0x00	; 0
    92d0:	ee 0f       	add	r30, r30
    92d2:	ff 1f       	adc	r31, r31
    92d4:	ea 53       	subi	r30, 0x3A	; 58
    92d6:	fc 4e       	sbci	r31, 0xEC	; 236
    92d8:	a5 91       	lpm	r26, Z+
    92da:	b4 91       	lpm	r27, Z
    92dc:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
    92de:	ed 23       	and	r30, r29
    92e0:	81 e0       	ldi	r24, 0x01	; 1
    92e2:	90 e0       	ldi	r25, 0x00	; 0
    92e4:	21 f4       	brne	.+8      	; 0x92ee <digitalRead+0x4a>
    92e6:	80 e0       	ldi	r24, 0x00	; 0
    92e8:	02 c0       	rjmp	.+4      	; 0x92ee <digitalRead+0x4a>
    92ea:	80 e0       	ldi	r24, 0x00	; 0
    92ec:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
    92ee:	df 91       	pop	r29
    92f0:	cf 91       	pop	r28
    92f2:	08 95       	ret

000092f4 <_ZN6StringD1Ev>:
/*  Character Access                         */
/*********************************************/

char String::charAt(unsigned int loc) const
{
	return operator[](loc);
    92f4:	fc 01       	movw	r30, r24
    92f6:	80 81       	ld	r24, Z
    92f8:	91 81       	ldd	r25, Z+1	; 0x01
    92fa:	28 c2       	rjmp	.+1104   	; 0x974c <free>

000092fc <_ZN6String10invalidateEv>:
    92fc:	cf 93       	push	r28
    92fe:	df 93       	push	r29
    9300:	ec 01       	movw	r28, r24
    9302:	88 81       	ld	r24, Y
    9304:	99 81       	ldd	r25, Y+1	; 0x01
    9306:	00 97       	sbiw	r24, 0x00	; 0
    9308:	09 f0       	breq	.+2      	; 0x930c <_ZN6String10invalidateEv+0x10>
    930a:	20 d2       	rcall	.+1088   	; 0x974c <free>
    930c:	19 82       	std	Y+1, r1	; 0x01
    930e:	18 82       	st	Y, r1
    9310:	1d 82       	std	Y+5, r1	; 0x05
    9312:	1c 82       	std	Y+4, r1	; 0x04
    9314:	1b 82       	std	Y+3, r1	; 0x03
    9316:	1a 82       	std	Y+2, r1	; 0x02
    9318:	df 91       	pop	r29
    931a:	cf 91       	pop	r28
    931c:	08 95       	ret

0000931e <_ZN6String12changeBufferEj>:
    931e:	0f 93       	push	r16
    9320:	1f 93       	push	r17
    9322:	cf 93       	push	r28
    9324:	df 93       	push	r29
    9326:	ec 01       	movw	r28, r24
    9328:	8b 01       	movw	r16, r22
    932a:	6f 5f       	subi	r22, 0xFF	; 255
    932c:	7f 4f       	sbci	r23, 0xFF	; 255
    932e:	88 81       	ld	r24, Y
    9330:	99 81       	ldd	r25, Y+1	; 0x01
    9332:	95 d2       	rcall	.+1322   	; 0x985e <realloc>
    9334:	00 97       	sbiw	r24, 0x00	; 0
    9336:	31 f0       	breq	.+12     	; 0x9344 <_ZN6String12changeBufferEj+0x26>
    9338:	99 83       	std	Y+1, r25	; 0x01
    933a:	88 83       	st	Y, r24
    933c:	1b 83       	std	Y+3, r17	; 0x03
    933e:	0a 83       	std	Y+2, r16	; 0x02
    9340:	81 e0       	ldi	r24, 0x01	; 1
    9342:	01 c0       	rjmp	.+2      	; 0x9346 <_ZN6String12changeBufferEj+0x28>
    9344:	80 e0       	ldi	r24, 0x00	; 0
    9346:	df 91       	pop	r29
    9348:	cf 91       	pop	r28
    934a:	1f 91       	pop	r17
    934c:	0f 91       	pop	r16
    934e:	08 95       	ret

00009350 <_ZN6String7reserveEj>:
    9350:	cf 93       	push	r28
    9352:	df 93       	push	r29
    9354:	ec 01       	movw	r28, r24
    9356:	88 81       	ld	r24, Y
    9358:	99 81       	ldd	r25, Y+1	; 0x01
    935a:	89 2b       	or	r24, r25
    935c:	29 f0       	breq	.+10     	; 0x9368 <_ZN6String7reserveEj+0x18>
    935e:	8a 81       	ldd	r24, Y+2	; 0x02
    9360:	9b 81       	ldd	r25, Y+3	; 0x03
    9362:	86 17       	cp	r24, r22
    9364:	97 07       	cpc	r25, r23
    9366:	58 f4       	brcc	.+22     	; 0x937e <_ZN6String7reserveEj+0x2e>
    9368:	ce 01       	movw	r24, r28
    936a:	d9 df       	rcall	.-78     	; 0x931e <_ZN6String12changeBufferEj>
    936c:	88 23       	and	r24, r24
    936e:	41 f0       	breq	.+16     	; 0x9380 <_ZN6String7reserveEj+0x30>
    9370:	8c 81       	ldd	r24, Y+4	; 0x04
    9372:	9d 81       	ldd	r25, Y+5	; 0x05
    9374:	89 2b       	or	r24, r25
    9376:	19 f4       	brne	.+6      	; 0x937e <_ZN6String7reserveEj+0x2e>
    9378:	e8 81       	ld	r30, Y
    937a:	f9 81       	ldd	r31, Y+1	; 0x01
    937c:	10 82       	st	Z, r1
    937e:	81 e0       	ldi	r24, 0x01	; 1
    9380:	df 91       	pop	r29
    9382:	cf 91       	pop	r28
    9384:	08 95       	ret

00009386 <_ZN6String4copyEPKcj>:
    9386:	ef 92       	push	r14
    9388:	ff 92       	push	r15
    938a:	0f 93       	push	r16
    938c:	1f 93       	push	r17
    938e:	cf 93       	push	r28
    9390:	df 93       	push	r29
    9392:	ec 01       	movw	r28, r24
    9394:	7b 01       	movw	r14, r22
    9396:	8a 01       	movw	r16, r20
    9398:	ba 01       	movw	r22, r20
    939a:	da df       	rcall	.-76     	; 0x9350 <_ZN6String7reserveEj>
    939c:	81 11       	cpse	r24, r1
    939e:	03 c0       	rjmp	.+6      	; 0x93a6 <_ZN6String4copyEPKcj+0x20>
    93a0:	ce 01       	movw	r24, r28
    93a2:	ac df       	rcall	.-168    	; 0x92fc <_ZN6String10invalidateEv>
    93a4:	06 c0       	rjmp	.+12     	; 0x93b2 <_ZN6String4copyEPKcj+0x2c>
    93a6:	1d 83       	std	Y+5, r17	; 0x05
    93a8:	0c 83       	std	Y+4, r16	; 0x04
    93aa:	b7 01       	movw	r22, r14
    93ac:	88 81       	ld	r24, Y
    93ae:	99 81       	ldd	r25, Y+1	; 0x01
    93b0:	3f d3       	rcall	.+1662   	; 0x9a30 <strcpy>
    93b2:	ce 01       	movw	r24, r28
    93b4:	df 91       	pop	r29
    93b6:	cf 91       	pop	r28
    93b8:	1f 91       	pop	r17
    93ba:	0f 91       	pop	r16
    93bc:	ff 90       	pop	r15
    93be:	ef 90       	pop	r14
    93c0:	08 95       	ret

000093c2 <_ZN6StringC1EPKc>:
    93c2:	fc 01       	movw	r30, r24
    93c4:	11 82       	std	Z+1, r1	; 0x01
    93c6:	10 82       	st	Z, r1
    93c8:	13 82       	std	Z+3, r1	; 0x03
    93ca:	12 82       	std	Z+2, r1	; 0x02
    93cc:	15 82       	std	Z+5, r1	; 0x05
    93ce:	14 82       	std	Z+4, r1	; 0x04
    93d0:	61 15       	cp	r22, r1
    93d2:	71 05       	cpc	r23, r1
    93d4:	49 f0       	breq	.+18     	; 0x93e8 <_ZN6StringC1EPKc+0x26>
    93d6:	fb 01       	movw	r30, r22
    93d8:	01 90       	ld	r0, Z+
    93da:	00 20       	and	r0, r0
    93dc:	e9 f7       	brne	.-6      	; 0x93d8 <_ZN6StringC1EPKc+0x16>
    93de:	31 97       	sbiw	r30, 0x01	; 1
    93e0:	af 01       	movw	r20, r30
    93e2:	46 1b       	sub	r20, r22
    93e4:	57 0b       	sbc	r21, r23
    93e6:	cf cf       	rjmp	.-98     	; 0x9386 <_ZN6String4copyEPKcj>
    93e8:	08 95       	ret

000093ea <_ZN6StringaSERKS_>:
    93ea:	cf 93       	push	r28
    93ec:	df 93       	push	r29
    93ee:	ec 01       	movw	r28, r24
    93f0:	fb 01       	movw	r30, r22
    93f2:	86 17       	cp	r24, r22
    93f4:	97 07       	cpc	r25, r23
    93f6:	51 f0       	breq	.+20     	; 0x940c <_ZN6StringaSERKS_+0x22>
    93f8:	60 81       	ld	r22, Z
    93fa:	71 81       	ldd	r23, Z+1	; 0x01
    93fc:	61 15       	cp	r22, r1
    93fe:	71 05       	cpc	r23, r1
    9400:	21 f0       	breq	.+8      	; 0x940a <_ZN6StringaSERKS_+0x20>
    9402:	44 81       	ldd	r20, Z+4	; 0x04
    9404:	55 81       	ldd	r21, Z+5	; 0x05
    9406:	bf df       	rcall	.-130    	; 0x9386 <_ZN6String4copyEPKcj>
    9408:	01 c0       	rjmp	.+2      	; 0x940c <_ZN6StringaSERKS_+0x22>
    940a:	78 df       	rcall	.-272    	; 0x92fc <_ZN6String10invalidateEv>
    940c:	ce 01       	movw	r24, r28
    940e:	df 91       	pop	r29
    9410:	cf 91       	pop	r28
    9412:	08 95       	ret

00009414 <_ZN6StringC1ERKS_>:
    9414:	fc 01       	movw	r30, r24
    9416:	11 82       	std	Z+1, r1	; 0x01
    9418:	10 82       	st	Z, r1
    941a:	13 82       	std	Z+3, r1	; 0x03
    941c:	12 82       	std	Z+2, r1	; 0x02
    941e:	15 82       	std	Z+5, r1	; 0x05
    9420:	14 82       	std	Z+4, r1	; 0x04
    9422:	e3 cf       	rjmp	.-58     	; 0x93ea <_ZN6StringaSERKS_>

00009424 <_ZNK6String8getBytesEPhjj>:
	if (index >= len || !buffer) return 0;
	return buffer[index];
}

void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index) const
{
    9424:	0f 93       	push	r16
    9426:	1f 93       	push	r17
    9428:	cf 93       	push	r28
    942a:	df 93       	push	r29
	if (!bufsize || !buf) return;
    942c:	41 15       	cp	r20, r1
    942e:	51 05       	cpc	r21, r1
    9430:	11 f1       	breq	.+68     	; 0x9476 <_ZNK6String8getBytesEPhjj+0x52>
    9432:	61 15       	cp	r22, r1
    9434:	71 05       	cpc	r23, r1
    9436:	f9 f0       	breq	.+62     	; 0x9476 <_ZNK6String8getBytesEPhjj+0x52>
	if (index >= len) {
    9438:	dc 01       	movw	r26, r24
    943a:	14 96       	adiw	r26, 0x04	; 4
    943c:	ed 91       	ld	r30, X+
    943e:	fc 91       	ld	r31, X
    9440:	15 97       	sbiw	r26, 0x05	; 5
    9442:	2e 17       	cp	r18, r30
    9444:	3f 07       	cpc	r19, r31
    9446:	18 f0       	brcs	.+6      	; 0x944e <_ZNK6String8getBytesEPhjj+0x2a>
		buf[0] = 0;
    9448:	fb 01       	movw	r30, r22
    944a:	10 82       	st	Z, r1
		return;
    944c:	14 c0       	rjmp	.+40     	; 0x9476 <_ZNK6String8getBytesEPhjj+0x52>
	}
	unsigned int n = bufsize - 1;
	if (n > len - index) n = len - index;
    944e:	e2 1b       	sub	r30, r18
    9450:	f3 0b       	sbc	r31, r19
    9452:	ea 01       	movw	r28, r20
    9454:	21 97       	sbiw	r28, 0x01	; 1
    9456:	ec 17       	cp	r30, r28
    9458:	fd 07       	cpc	r31, r29
    945a:	08 f4       	brcc	.+2      	; 0x945e <_ZNK6String8getBytesEPhjj+0x3a>
    945c:	ef 01       	movw	r28, r30
    945e:	8b 01       	movw	r16, r22
    9460:	fc 01       	movw	r30, r24
	strncpy((char *)buf, buffer + index, n);
    9462:	60 81       	ld	r22, Z
    9464:	71 81       	ldd	r23, Z+1	; 0x01
    9466:	62 0f       	add	r22, r18
    9468:	73 1f       	adc	r23, r19
    946a:	ae 01       	movw	r20, r28
    946c:	c8 01       	movw	r24, r16
    946e:	e7 d2       	rcall	.+1486   	; 0x9a3e <strncpy>
	buf[n] = 0;
    9470:	c0 0f       	add	r28, r16
    9472:	d1 1f       	adc	r29, r17
    9474:	18 82       	st	Y, r1
}
    9476:	df 91       	pop	r29
    9478:	cf 91       	pop	r28
    947a:	1f 91       	pop	r17
    947c:	0f 91       	pop	r16
    947e:	08 95       	ret

00009480 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    9480:	08 95       	ret

00009482 <__mulsi3>:
    9482:	db 01       	movw	r26, r22
    9484:	8f 93       	push	r24
    9486:	9f 93       	push	r25
    9488:	91 d0       	rcall	.+290    	; 0x95ac <__muluhisi3>
    948a:	bf 91       	pop	r27
    948c:	af 91       	pop	r26
    948e:	a2 9f       	mul	r26, r18
    9490:	80 0d       	add	r24, r0
    9492:	91 1d       	adc	r25, r1
    9494:	a3 9f       	mul	r26, r19
    9496:	90 0d       	add	r25, r0
    9498:	b2 9f       	mul	r27, r18
    949a:	90 0d       	add	r25, r0
    949c:	11 24       	eor	r1, r1
    949e:	08 95       	ret

000094a0 <__udivmodqi4>:
    94a0:	99 1b       	sub	r25, r25
    94a2:	79 e0       	ldi	r23, 0x09	; 9
    94a4:	04 c0       	rjmp	.+8      	; 0x94ae <__udivmodqi4_ep>

000094a6 <__udivmodqi4_loop>:
    94a6:	99 1f       	adc	r25, r25
    94a8:	96 17       	cp	r25, r22
    94aa:	08 f0       	brcs	.+2      	; 0x94ae <__udivmodqi4_ep>
    94ac:	96 1b       	sub	r25, r22

000094ae <__udivmodqi4_ep>:
    94ae:	88 1f       	adc	r24, r24
    94b0:	7a 95       	dec	r23
    94b2:	c9 f7       	brne	.-14     	; 0x94a6 <__udivmodqi4_loop>
    94b4:	80 95       	com	r24
    94b6:	08 95       	ret

000094b8 <__divmodqi4>:
    94b8:	87 fb       	bst	r24, 7
    94ba:	08 2e       	mov	r0, r24
    94bc:	06 26       	eor	r0, r22
    94be:	87 fd       	sbrc	r24, 7
    94c0:	81 95       	neg	r24
    94c2:	67 fd       	sbrc	r22, 7
    94c4:	61 95       	neg	r22
    94c6:	ec df       	rcall	.-40     	; 0x94a0 <__udivmodqi4>
    94c8:	0e f4       	brtc	.+2      	; 0x94cc <__divmodqi4_1>
    94ca:	91 95       	neg	r25

000094cc <__divmodqi4_1>:
    94cc:	07 fc       	sbrc	r0, 7
    94ce:	81 95       	neg	r24

000094d0 <__divmodqi4_exit>:
    94d0:	08 95       	ret

000094d2 <__udivmodhi4>:
    94d2:	aa 1b       	sub	r26, r26
    94d4:	bb 1b       	sub	r27, r27
    94d6:	51 e1       	ldi	r21, 0x11	; 17
    94d8:	07 c0       	rjmp	.+14     	; 0x94e8 <__udivmodhi4_ep>

000094da <__udivmodhi4_loop>:
    94da:	aa 1f       	adc	r26, r26
    94dc:	bb 1f       	adc	r27, r27
    94de:	a6 17       	cp	r26, r22
    94e0:	b7 07       	cpc	r27, r23
    94e2:	10 f0       	brcs	.+4      	; 0x94e8 <__udivmodhi4_ep>
    94e4:	a6 1b       	sub	r26, r22
    94e6:	b7 0b       	sbc	r27, r23

000094e8 <__udivmodhi4_ep>:
    94e8:	88 1f       	adc	r24, r24
    94ea:	99 1f       	adc	r25, r25
    94ec:	5a 95       	dec	r21
    94ee:	a9 f7       	brne	.-22     	; 0x94da <__udivmodhi4_loop>
    94f0:	80 95       	com	r24
    94f2:	90 95       	com	r25
    94f4:	bc 01       	movw	r22, r24
    94f6:	cd 01       	movw	r24, r26
    94f8:	08 95       	ret

000094fa <__divmodhi4>:
    94fa:	97 fb       	bst	r25, 7
    94fc:	07 2e       	mov	r0, r23
    94fe:	16 f4       	brtc	.+4      	; 0x9504 <__divmodhi4+0xa>
    9500:	00 94       	com	r0
    9502:	06 d0       	rcall	.+12     	; 0x9510 <__divmodhi4_neg1>
    9504:	77 fd       	sbrc	r23, 7
    9506:	08 d0       	rcall	.+16     	; 0x9518 <__divmodhi4_neg2>
    9508:	e4 df       	rcall	.-56     	; 0x94d2 <__udivmodhi4>
    950a:	07 fc       	sbrc	r0, 7
    950c:	05 d0       	rcall	.+10     	; 0x9518 <__divmodhi4_neg2>
    950e:	3e f4       	brtc	.+14     	; 0x951e <__divmodhi4_exit>

00009510 <__divmodhi4_neg1>:
    9510:	90 95       	com	r25
    9512:	81 95       	neg	r24
    9514:	9f 4f       	sbci	r25, 0xFF	; 255
    9516:	08 95       	ret

00009518 <__divmodhi4_neg2>:
    9518:	70 95       	com	r23
    951a:	61 95       	neg	r22
    951c:	7f 4f       	sbci	r23, 0xFF	; 255

0000951e <__divmodhi4_exit>:
    951e:	08 95       	ret

00009520 <__udivmodsi4>:
    9520:	a1 e2       	ldi	r26, 0x21	; 33
    9522:	1a 2e       	mov	r1, r26
    9524:	aa 1b       	sub	r26, r26
    9526:	bb 1b       	sub	r27, r27
    9528:	fd 01       	movw	r30, r26
    952a:	0d c0       	rjmp	.+26     	; 0x9546 <__udivmodsi4_ep>

0000952c <__udivmodsi4_loop>:
    952c:	aa 1f       	adc	r26, r26
    952e:	bb 1f       	adc	r27, r27
    9530:	ee 1f       	adc	r30, r30
    9532:	ff 1f       	adc	r31, r31
    9534:	a2 17       	cp	r26, r18
    9536:	b3 07       	cpc	r27, r19
    9538:	e4 07       	cpc	r30, r20
    953a:	f5 07       	cpc	r31, r21
    953c:	20 f0       	brcs	.+8      	; 0x9546 <__udivmodsi4_ep>
    953e:	a2 1b       	sub	r26, r18
    9540:	b3 0b       	sbc	r27, r19
    9542:	e4 0b       	sbc	r30, r20
    9544:	f5 0b       	sbc	r31, r21

00009546 <__udivmodsi4_ep>:
    9546:	66 1f       	adc	r22, r22
    9548:	77 1f       	adc	r23, r23
    954a:	88 1f       	adc	r24, r24
    954c:	99 1f       	adc	r25, r25
    954e:	1a 94       	dec	r1
    9550:	69 f7       	brne	.-38     	; 0x952c <__udivmodsi4_loop>
    9552:	60 95       	com	r22
    9554:	70 95       	com	r23
    9556:	80 95       	com	r24
    9558:	90 95       	com	r25
    955a:	9b 01       	movw	r18, r22
    955c:	ac 01       	movw	r20, r24
    955e:	bd 01       	movw	r22, r26
    9560:	cf 01       	movw	r24, r30
    9562:	08 95       	ret

00009564 <__divmodsi4>:
    9564:	05 2e       	mov	r0, r21
    9566:	97 fb       	bst	r25, 7
    9568:	16 f4       	brtc	.+4      	; 0x956e <__divmodsi4+0xa>
    956a:	00 94       	com	r0
    956c:	0f d0       	rcall	.+30     	; 0x958c <__negsi2>
    956e:	57 fd       	sbrc	r21, 7
    9570:	05 d0       	rcall	.+10     	; 0x957c <__divmodsi4_neg2>
    9572:	d6 df       	rcall	.-84     	; 0x9520 <__udivmodsi4>
    9574:	07 fc       	sbrc	r0, 7
    9576:	02 d0       	rcall	.+4      	; 0x957c <__divmodsi4_neg2>
    9578:	46 f4       	brtc	.+16     	; 0x958a <__divmodsi4_exit>
    957a:	08 c0       	rjmp	.+16     	; 0x958c <__negsi2>

0000957c <__divmodsi4_neg2>:
    957c:	50 95       	com	r21
    957e:	40 95       	com	r20
    9580:	30 95       	com	r19
    9582:	21 95       	neg	r18
    9584:	3f 4f       	sbci	r19, 0xFF	; 255
    9586:	4f 4f       	sbci	r20, 0xFF	; 255
    9588:	5f 4f       	sbci	r21, 0xFF	; 255

0000958a <__divmodsi4_exit>:
    958a:	08 95       	ret

0000958c <__negsi2>:
    958c:	90 95       	com	r25
    958e:	80 95       	com	r24
    9590:	70 95       	com	r23
    9592:	61 95       	neg	r22
    9594:	7f 4f       	sbci	r23, 0xFF	; 255
    9596:	8f 4f       	sbci	r24, 0xFF	; 255
    9598:	9f 4f       	sbci	r25, 0xFF	; 255
    959a:	08 95       	ret

0000959c <__tablejump2__>:
    959c:	ee 0f       	add	r30, r30
    959e:	ff 1f       	adc	r31, r31
    95a0:	88 1f       	adc	r24, r24
    95a2:	8b bf       	out	0x3b, r24	; 59
    95a4:	07 90       	elpm	r0, Z+
    95a6:	f6 91       	elpm	r31, Z
    95a8:	e0 2d       	mov	r30, r0
    95aa:	19 94       	eijmp

000095ac <__muluhisi3>:
    95ac:	09 d0       	rcall	.+18     	; 0x95c0 <__umulhisi3>
    95ae:	a5 9f       	mul	r26, r21
    95b0:	90 0d       	add	r25, r0
    95b2:	b4 9f       	mul	r27, r20
    95b4:	90 0d       	add	r25, r0
    95b6:	a4 9f       	mul	r26, r20
    95b8:	80 0d       	add	r24, r0
    95ba:	91 1d       	adc	r25, r1
    95bc:	11 24       	eor	r1, r1
    95be:	08 95       	ret

000095c0 <__umulhisi3>:
    95c0:	a2 9f       	mul	r26, r18
    95c2:	b0 01       	movw	r22, r0
    95c4:	b3 9f       	mul	r27, r19
    95c6:	c0 01       	movw	r24, r0
    95c8:	a3 9f       	mul	r26, r19
    95ca:	70 0d       	add	r23, r0
    95cc:	81 1d       	adc	r24, r1
    95ce:	11 24       	eor	r1, r1
    95d0:	91 1d       	adc	r25, r1
    95d2:	b2 9f       	mul	r27, r18
    95d4:	70 0d       	add	r23, r0
    95d6:	81 1d       	adc	r24, r1
    95d8:	11 24       	eor	r1, r1
    95da:	91 1d       	adc	r25, r1
    95dc:	08 95       	ret

000095de <dtostrf>:
    95de:	ef 92       	push	r14
    95e0:	0f 93       	push	r16
    95e2:	1f 93       	push	r17
    95e4:	cf 93       	push	r28
    95e6:	df 93       	push	r29
    95e8:	e8 01       	movw	r28, r16
    95ea:	47 fd       	sbrc	r20, 7
    95ec:	02 c0       	rjmp	.+4      	; 0x95f2 <dtostrf+0x14>
    95ee:	34 e0       	ldi	r19, 0x04	; 4
    95f0:	01 c0       	rjmp	.+2      	; 0x95f4 <dtostrf+0x16>
    95f2:	34 e1       	ldi	r19, 0x14	; 20
    95f4:	04 2e       	mov	r0, r20
    95f6:	00 0c       	add	r0, r0
    95f8:	55 0b       	sbc	r21, r21
    95fa:	57 ff       	sbrs	r21, 7
    95fc:	03 c0       	rjmp	.+6      	; 0x9604 <dtostrf+0x26>
    95fe:	51 95       	neg	r21
    9600:	41 95       	neg	r20
    9602:	51 09       	sbc	r21, r1
    9604:	e3 2e       	mov	r14, r19
    9606:	02 2f       	mov	r16, r18
    9608:	24 2f       	mov	r18, r20
    960a:	ae 01       	movw	r20, r28
    960c:	27 d2       	rcall	.+1102   	; 0x9a5c <dtoa_prf>
    960e:	ce 01       	movw	r24, r28
    9610:	df 91       	pop	r29
    9612:	cf 91       	pop	r28
    9614:	1f 91       	pop	r17
    9616:	0f 91       	pop	r16
    9618:	ef 90       	pop	r14
    961a:	08 95       	ret

0000961c <malloc>:
    961c:	0f 93       	push	r16
    961e:	1f 93       	push	r17
    9620:	cf 93       	push	r28
    9622:	df 93       	push	r29
    9624:	82 30       	cpi	r24, 0x02	; 2
    9626:	91 05       	cpc	r25, r1
    9628:	10 f4       	brcc	.+4      	; 0x962e <malloc+0x12>
    962a:	82 e0       	ldi	r24, 0x02	; 2
    962c:	90 e0       	ldi	r25, 0x00	; 0
    962e:	e0 91 2a 0a 	lds	r30, 0x0A2A	; 0x800a2a <__flp>
    9632:	f0 91 2b 0a 	lds	r31, 0x0A2B	; 0x800a2b <__flp+0x1>
    9636:	20 e0       	ldi	r18, 0x00	; 0
    9638:	30 e0       	ldi	r19, 0x00	; 0
    963a:	a0 e0       	ldi	r26, 0x00	; 0
    963c:	b0 e0       	ldi	r27, 0x00	; 0
    963e:	30 97       	sbiw	r30, 0x00	; 0
    9640:	19 f1       	breq	.+70     	; 0x9688 <malloc+0x6c>
    9642:	40 81       	ld	r20, Z
    9644:	51 81       	ldd	r21, Z+1	; 0x01
    9646:	02 81       	ldd	r16, Z+2	; 0x02
    9648:	13 81       	ldd	r17, Z+3	; 0x03
    964a:	48 17       	cp	r20, r24
    964c:	59 07       	cpc	r21, r25
    964e:	c8 f0       	brcs	.+50     	; 0x9682 <malloc+0x66>
    9650:	84 17       	cp	r24, r20
    9652:	95 07       	cpc	r25, r21
    9654:	69 f4       	brne	.+26     	; 0x9670 <malloc+0x54>
    9656:	10 97       	sbiw	r26, 0x00	; 0
    9658:	31 f0       	breq	.+12     	; 0x9666 <malloc+0x4a>
    965a:	12 96       	adiw	r26, 0x02	; 2
    965c:	0c 93       	st	X, r16
    965e:	12 97       	sbiw	r26, 0x02	; 2
    9660:	13 96       	adiw	r26, 0x03	; 3
    9662:	1c 93       	st	X, r17
    9664:	27 c0       	rjmp	.+78     	; 0x96b4 <malloc+0x98>
    9666:	00 93 2a 0a 	sts	0x0A2A, r16	; 0x800a2a <__flp>
    966a:	10 93 2b 0a 	sts	0x0A2B, r17	; 0x800a2b <__flp+0x1>
    966e:	22 c0       	rjmp	.+68     	; 0x96b4 <malloc+0x98>
    9670:	21 15       	cp	r18, r1
    9672:	31 05       	cpc	r19, r1
    9674:	19 f0       	breq	.+6      	; 0x967c <malloc+0x60>
    9676:	42 17       	cp	r20, r18
    9678:	53 07       	cpc	r21, r19
    967a:	18 f4       	brcc	.+6      	; 0x9682 <malloc+0x66>
    967c:	9a 01       	movw	r18, r20
    967e:	bd 01       	movw	r22, r26
    9680:	ef 01       	movw	r28, r30
    9682:	df 01       	movw	r26, r30
    9684:	f8 01       	movw	r30, r16
    9686:	db cf       	rjmp	.-74     	; 0x963e <malloc+0x22>
    9688:	21 15       	cp	r18, r1
    968a:	31 05       	cpc	r19, r1
    968c:	f9 f0       	breq	.+62     	; 0x96cc <malloc+0xb0>
    968e:	28 1b       	sub	r18, r24
    9690:	39 0b       	sbc	r19, r25
    9692:	24 30       	cpi	r18, 0x04	; 4
    9694:	31 05       	cpc	r19, r1
    9696:	80 f4       	brcc	.+32     	; 0x96b8 <malloc+0x9c>
    9698:	8a 81       	ldd	r24, Y+2	; 0x02
    969a:	9b 81       	ldd	r25, Y+3	; 0x03
    969c:	61 15       	cp	r22, r1
    969e:	71 05       	cpc	r23, r1
    96a0:	21 f0       	breq	.+8      	; 0x96aa <malloc+0x8e>
    96a2:	fb 01       	movw	r30, r22
    96a4:	93 83       	std	Z+3, r25	; 0x03
    96a6:	82 83       	std	Z+2, r24	; 0x02
    96a8:	04 c0       	rjmp	.+8      	; 0x96b2 <malloc+0x96>
    96aa:	90 93 2b 0a 	sts	0x0A2B, r25	; 0x800a2b <__flp+0x1>
    96ae:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <__flp>
    96b2:	fe 01       	movw	r30, r28
    96b4:	32 96       	adiw	r30, 0x02	; 2
    96b6:	44 c0       	rjmp	.+136    	; 0x9740 <malloc+0x124>
    96b8:	fe 01       	movw	r30, r28
    96ba:	e2 0f       	add	r30, r18
    96bc:	f3 1f       	adc	r31, r19
    96be:	81 93       	st	Z+, r24
    96c0:	91 93       	st	Z+, r25
    96c2:	22 50       	subi	r18, 0x02	; 2
    96c4:	31 09       	sbc	r19, r1
    96c6:	39 83       	std	Y+1, r19	; 0x01
    96c8:	28 83       	st	Y, r18
    96ca:	3a c0       	rjmp	.+116    	; 0x9740 <malloc+0x124>
    96cc:	20 91 28 0a 	lds	r18, 0x0A28	; 0x800a28 <__brkval>
    96d0:	30 91 29 0a 	lds	r19, 0x0A29	; 0x800a29 <__brkval+0x1>
    96d4:	23 2b       	or	r18, r19
    96d6:	41 f4       	brne	.+16     	; 0x96e8 <malloc+0xcc>
    96d8:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    96dc:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    96e0:	30 93 29 0a 	sts	0x0A29, r19	; 0x800a29 <__brkval+0x1>
    96e4:	20 93 28 0a 	sts	0x0A28, r18	; 0x800a28 <__brkval>
    96e8:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    96ec:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    96f0:	21 15       	cp	r18, r1
    96f2:	31 05       	cpc	r19, r1
    96f4:	41 f4       	brne	.+16     	; 0x9706 <malloc+0xea>
    96f6:	2d b7       	in	r18, 0x3d	; 61
    96f8:	3e b7       	in	r19, 0x3e	; 62
    96fa:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    96fe:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    9702:	24 1b       	sub	r18, r20
    9704:	35 0b       	sbc	r19, r21
    9706:	e0 91 28 0a 	lds	r30, 0x0A28	; 0x800a28 <__brkval>
    970a:	f0 91 29 0a 	lds	r31, 0x0A29	; 0x800a29 <__brkval+0x1>
    970e:	e2 17       	cp	r30, r18
    9710:	f3 07       	cpc	r31, r19
    9712:	a0 f4       	brcc	.+40     	; 0x973c <malloc+0x120>
    9714:	2e 1b       	sub	r18, r30
    9716:	3f 0b       	sbc	r19, r31
    9718:	28 17       	cp	r18, r24
    971a:	39 07       	cpc	r19, r25
    971c:	78 f0       	brcs	.+30     	; 0x973c <malloc+0x120>
    971e:	ac 01       	movw	r20, r24
    9720:	4e 5f       	subi	r20, 0xFE	; 254
    9722:	5f 4f       	sbci	r21, 0xFF	; 255
    9724:	24 17       	cp	r18, r20
    9726:	35 07       	cpc	r19, r21
    9728:	48 f0       	brcs	.+18     	; 0x973c <malloc+0x120>
    972a:	4e 0f       	add	r20, r30
    972c:	5f 1f       	adc	r21, r31
    972e:	50 93 29 0a 	sts	0x0A29, r21	; 0x800a29 <__brkval+0x1>
    9732:	40 93 28 0a 	sts	0x0A28, r20	; 0x800a28 <__brkval>
    9736:	81 93       	st	Z+, r24
    9738:	91 93       	st	Z+, r25
    973a:	02 c0       	rjmp	.+4      	; 0x9740 <malloc+0x124>
    973c:	e0 e0       	ldi	r30, 0x00	; 0
    973e:	f0 e0       	ldi	r31, 0x00	; 0
    9740:	cf 01       	movw	r24, r30
    9742:	df 91       	pop	r29
    9744:	cf 91       	pop	r28
    9746:	1f 91       	pop	r17
    9748:	0f 91       	pop	r16
    974a:	08 95       	ret

0000974c <free>:
    974c:	cf 93       	push	r28
    974e:	df 93       	push	r29
    9750:	00 97       	sbiw	r24, 0x00	; 0
    9752:	09 f4       	brne	.+2      	; 0x9756 <free+0xa>
    9754:	81 c0       	rjmp	.+258    	; 0x9858 <free+0x10c>
    9756:	fc 01       	movw	r30, r24
    9758:	32 97       	sbiw	r30, 0x02	; 2
    975a:	13 82       	std	Z+3, r1	; 0x03
    975c:	12 82       	std	Z+2, r1	; 0x02
    975e:	a0 91 2a 0a 	lds	r26, 0x0A2A	; 0x800a2a <__flp>
    9762:	b0 91 2b 0a 	lds	r27, 0x0A2B	; 0x800a2b <__flp+0x1>
    9766:	10 97       	sbiw	r26, 0x00	; 0
    9768:	81 f4       	brne	.+32     	; 0x978a <free+0x3e>
    976a:	20 81       	ld	r18, Z
    976c:	31 81       	ldd	r19, Z+1	; 0x01
    976e:	82 0f       	add	r24, r18
    9770:	93 1f       	adc	r25, r19
    9772:	20 91 28 0a 	lds	r18, 0x0A28	; 0x800a28 <__brkval>
    9776:	30 91 29 0a 	lds	r19, 0x0A29	; 0x800a29 <__brkval+0x1>
    977a:	28 17       	cp	r18, r24
    977c:	39 07       	cpc	r19, r25
    977e:	51 f5       	brne	.+84     	; 0x97d4 <free+0x88>
    9780:	f0 93 29 0a 	sts	0x0A29, r31	; 0x800a29 <__brkval+0x1>
    9784:	e0 93 28 0a 	sts	0x0A28, r30	; 0x800a28 <__brkval>
    9788:	67 c0       	rjmp	.+206    	; 0x9858 <free+0x10c>
    978a:	ed 01       	movw	r28, r26
    978c:	20 e0       	ldi	r18, 0x00	; 0
    978e:	30 e0       	ldi	r19, 0x00	; 0
    9790:	ce 17       	cp	r28, r30
    9792:	df 07       	cpc	r29, r31
    9794:	40 f4       	brcc	.+16     	; 0x97a6 <free+0x5a>
    9796:	4a 81       	ldd	r20, Y+2	; 0x02
    9798:	5b 81       	ldd	r21, Y+3	; 0x03
    979a:	9e 01       	movw	r18, r28
    979c:	41 15       	cp	r20, r1
    979e:	51 05       	cpc	r21, r1
    97a0:	f1 f0       	breq	.+60     	; 0x97de <free+0x92>
    97a2:	ea 01       	movw	r28, r20
    97a4:	f5 cf       	rjmp	.-22     	; 0x9790 <free+0x44>
    97a6:	d3 83       	std	Z+3, r29	; 0x03
    97a8:	c2 83       	std	Z+2, r28	; 0x02
    97aa:	40 81       	ld	r20, Z
    97ac:	51 81       	ldd	r21, Z+1	; 0x01
    97ae:	84 0f       	add	r24, r20
    97b0:	95 1f       	adc	r25, r21
    97b2:	c8 17       	cp	r28, r24
    97b4:	d9 07       	cpc	r29, r25
    97b6:	59 f4       	brne	.+22     	; 0x97ce <free+0x82>
    97b8:	88 81       	ld	r24, Y
    97ba:	99 81       	ldd	r25, Y+1	; 0x01
    97bc:	84 0f       	add	r24, r20
    97be:	95 1f       	adc	r25, r21
    97c0:	02 96       	adiw	r24, 0x02	; 2
    97c2:	91 83       	std	Z+1, r25	; 0x01
    97c4:	80 83       	st	Z, r24
    97c6:	8a 81       	ldd	r24, Y+2	; 0x02
    97c8:	9b 81       	ldd	r25, Y+3	; 0x03
    97ca:	93 83       	std	Z+3, r25	; 0x03
    97cc:	82 83       	std	Z+2, r24	; 0x02
    97ce:	21 15       	cp	r18, r1
    97d0:	31 05       	cpc	r19, r1
    97d2:	29 f4       	brne	.+10     	; 0x97de <free+0x92>
    97d4:	f0 93 2b 0a 	sts	0x0A2B, r31	; 0x800a2b <__flp+0x1>
    97d8:	e0 93 2a 0a 	sts	0x0A2A, r30	; 0x800a2a <__flp>
    97dc:	3d c0       	rjmp	.+122    	; 0x9858 <free+0x10c>
    97de:	e9 01       	movw	r28, r18
    97e0:	fb 83       	std	Y+3, r31	; 0x03
    97e2:	ea 83       	std	Y+2, r30	; 0x02
    97e4:	49 91       	ld	r20, Y+
    97e6:	59 91       	ld	r21, Y+
    97e8:	c4 0f       	add	r28, r20
    97ea:	d5 1f       	adc	r29, r21
    97ec:	ec 17       	cp	r30, r28
    97ee:	fd 07       	cpc	r31, r29
    97f0:	61 f4       	brne	.+24     	; 0x980a <free+0xbe>
    97f2:	80 81       	ld	r24, Z
    97f4:	91 81       	ldd	r25, Z+1	; 0x01
    97f6:	84 0f       	add	r24, r20
    97f8:	95 1f       	adc	r25, r21
    97fa:	02 96       	adiw	r24, 0x02	; 2
    97fc:	e9 01       	movw	r28, r18
    97fe:	99 83       	std	Y+1, r25	; 0x01
    9800:	88 83       	st	Y, r24
    9802:	82 81       	ldd	r24, Z+2	; 0x02
    9804:	93 81       	ldd	r25, Z+3	; 0x03
    9806:	9b 83       	std	Y+3, r25	; 0x03
    9808:	8a 83       	std	Y+2, r24	; 0x02
    980a:	e0 e0       	ldi	r30, 0x00	; 0
    980c:	f0 e0       	ldi	r31, 0x00	; 0
    980e:	12 96       	adiw	r26, 0x02	; 2
    9810:	8d 91       	ld	r24, X+
    9812:	9c 91       	ld	r25, X
    9814:	13 97       	sbiw	r26, 0x03	; 3
    9816:	00 97       	sbiw	r24, 0x00	; 0
    9818:	19 f0       	breq	.+6      	; 0x9820 <free+0xd4>
    981a:	fd 01       	movw	r30, r26
    981c:	dc 01       	movw	r26, r24
    981e:	f7 cf       	rjmp	.-18     	; 0x980e <free+0xc2>
    9820:	8d 91       	ld	r24, X+
    9822:	9c 91       	ld	r25, X
    9824:	11 97       	sbiw	r26, 0x01	; 1
    9826:	9d 01       	movw	r18, r26
    9828:	2e 5f       	subi	r18, 0xFE	; 254
    982a:	3f 4f       	sbci	r19, 0xFF	; 255
    982c:	82 0f       	add	r24, r18
    982e:	93 1f       	adc	r25, r19
    9830:	20 91 28 0a 	lds	r18, 0x0A28	; 0x800a28 <__brkval>
    9834:	30 91 29 0a 	lds	r19, 0x0A29	; 0x800a29 <__brkval+0x1>
    9838:	28 17       	cp	r18, r24
    983a:	39 07       	cpc	r19, r25
    983c:	69 f4       	brne	.+26     	; 0x9858 <free+0x10c>
    983e:	30 97       	sbiw	r30, 0x00	; 0
    9840:	29 f4       	brne	.+10     	; 0x984c <free+0x100>
    9842:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <__flp+0x1>
    9846:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <__flp>
    984a:	02 c0       	rjmp	.+4      	; 0x9850 <free+0x104>
    984c:	13 82       	std	Z+3, r1	; 0x03
    984e:	12 82       	std	Z+2, r1	; 0x02
    9850:	b0 93 29 0a 	sts	0x0A29, r27	; 0x800a29 <__brkval+0x1>
    9854:	a0 93 28 0a 	sts	0x0A28, r26	; 0x800a28 <__brkval>
    9858:	df 91       	pop	r29
    985a:	cf 91       	pop	r28
    985c:	08 95       	ret

0000985e <realloc>:
    985e:	6f 92       	push	r6
    9860:	7f 92       	push	r7
    9862:	8f 92       	push	r8
    9864:	9f 92       	push	r9
    9866:	af 92       	push	r10
    9868:	bf 92       	push	r11
    986a:	cf 92       	push	r12
    986c:	df 92       	push	r13
    986e:	ef 92       	push	r14
    9870:	ff 92       	push	r15
    9872:	0f 93       	push	r16
    9874:	1f 93       	push	r17
    9876:	cf 93       	push	r28
    9878:	df 93       	push	r29
    987a:	00 97       	sbiw	r24, 0x00	; 0
    987c:	81 f4       	brne	.+32     	; 0x989e <realloc+0x40>
    987e:	cb 01       	movw	r24, r22
    9880:	df 91       	pop	r29
    9882:	cf 91       	pop	r28
    9884:	1f 91       	pop	r17
    9886:	0f 91       	pop	r16
    9888:	ff 90       	pop	r15
    988a:	ef 90       	pop	r14
    988c:	df 90       	pop	r13
    988e:	cf 90       	pop	r12
    9890:	bf 90       	pop	r11
    9892:	af 90       	pop	r10
    9894:	9f 90       	pop	r9
    9896:	8f 90       	pop	r8
    9898:	7f 90       	pop	r7
    989a:	6f 90       	pop	r6
    989c:	bf ce       	rjmp	.-642    	; 0x961c <malloc>
    989e:	fc 01       	movw	r30, r24
    98a0:	e6 0f       	add	r30, r22
    98a2:	f7 1f       	adc	r31, r23
    98a4:	9c 01       	movw	r18, r24
    98a6:	22 50       	subi	r18, 0x02	; 2
    98a8:	31 09       	sbc	r19, r1
    98aa:	e2 17       	cp	r30, r18
    98ac:	f3 07       	cpc	r31, r19
    98ae:	08 f4       	brcc	.+2      	; 0x98b2 <realloc+0x54>
    98b0:	a5 c0       	rjmp	.+330    	; 0x99fc <realloc+0x19e>
    98b2:	ec 01       	movw	r28, r24
    98b4:	d9 01       	movw	r26, r18
    98b6:	0d 91       	ld	r16, X+
    98b8:	1c 91       	ld	r17, X
    98ba:	11 97       	sbiw	r26, 0x01	; 1
    98bc:	06 17       	cp	r16, r22
    98be:	17 07       	cpc	r17, r23
    98c0:	a8 f0       	brcs	.+42     	; 0x98ec <realloc+0x8e>
    98c2:	05 30       	cpi	r16, 0x05	; 5
    98c4:	11 05       	cpc	r17, r1
    98c6:	08 f4       	brcc	.+2      	; 0x98ca <realloc+0x6c>
    98c8:	97 c0       	rjmp	.+302    	; 0x99f8 <realloc+0x19a>
    98ca:	c8 01       	movw	r24, r16
    98cc:	04 97       	sbiw	r24, 0x04	; 4
    98ce:	86 17       	cp	r24, r22
    98d0:	97 07       	cpc	r25, r23
    98d2:	08 f4       	brcc	.+2      	; 0x98d6 <realloc+0x78>
    98d4:	91 c0       	rjmp	.+290    	; 0x99f8 <realloc+0x19a>
    98d6:	02 50       	subi	r16, 0x02	; 2
    98d8:	11 09       	sbc	r17, r1
    98da:	06 1b       	sub	r16, r22
    98dc:	17 0b       	sbc	r17, r23
    98de:	01 93       	st	Z+, r16
    98e0:	11 93       	st	Z+, r17
    98e2:	6d 93       	st	X+, r22
    98e4:	7c 93       	st	X, r23
    98e6:	cf 01       	movw	r24, r30
    98e8:	31 df       	rcall	.-414    	; 0x974c <free>
    98ea:	86 c0       	rjmp	.+268    	; 0x99f8 <realloc+0x19a>
    98ec:	5b 01       	movw	r10, r22
    98ee:	a0 1a       	sub	r10, r16
    98f0:	b1 0a       	sbc	r11, r17
    98f2:	4c 01       	movw	r8, r24
    98f4:	80 0e       	add	r8, r16
    98f6:	91 1e       	adc	r9, r17
    98f8:	a0 91 2a 0a 	lds	r26, 0x0A2A	; 0x800a2a <__flp>
    98fc:	b0 91 2b 0a 	lds	r27, 0x0A2B	; 0x800a2b <__flp+0x1>
    9900:	61 2c       	mov	r6, r1
    9902:	71 2c       	mov	r7, r1
    9904:	e1 2c       	mov	r14, r1
    9906:	f1 2c       	mov	r15, r1
    9908:	10 97       	sbiw	r26, 0x00	; 0
    990a:	09 f4       	brne	.+2      	; 0x990e <realloc+0xb0>
    990c:	46 c0       	rjmp	.+140    	; 0x999a <realloc+0x13c>
    990e:	8d 91       	ld	r24, X+
    9910:	9c 91       	ld	r25, X
    9912:	11 97       	sbiw	r26, 0x01	; 1
    9914:	a8 15       	cp	r26, r8
    9916:	b9 05       	cpc	r27, r9
    9918:	b1 f5       	brne	.+108    	; 0x9986 <realloc+0x128>
    991a:	6c 01       	movw	r12, r24
    991c:	42 e0       	ldi	r20, 0x02	; 2
    991e:	c4 0e       	add	r12, r20
    9920:	d1 1c       	adc	r13, r1
    9922:	ca 14       	cp	r12, r10
    9924:	db 04       	cpc	r13, r11
    9926:	78 f1       	brcs	.+94     	; 0x9986 <realloc+0x128>
    9928:	4c 01       	movw	r8, r24
    992a:	8a 18       	sub	r8, r10
    992c:	9b 08       	sbc	r9, r11
    992e:	64 01       	movw	r12, r8
    9930:	42 e0       	ldi	r20, 0x02	; 2
    9932:	c4 0e       	add	r12, r20
    9934:	d1 1c       	adc	r13, r1
    9936:	12 96       	adiw	r26, 0x02	; 2
    9938:	bc 90       	ld	r11, X
    993a:	12 97       	sbiw	r26, 0x02	; 2
    993c:	13 96       	adiw	r26, 0x03	; 3
    993e:	ac 91       	ld	r26, X
    9940:	b5 e0       	ldi	r27, 0x05	; 5
    9942:	cb 16       	cp	r12, r27
    9944:	d1 04       	cpc	r13, r1
    9946:	40 f0       	brcs	.+16     	; 0x9958 <realloc+0xfa>
    9948:	b2 82       	std	Z+2, r11	; 0x02
    994a:	a3 83       	std	Z+3, r26	; 0x03
    994c:	91 82       	std	Z+1, r9	; 0x01
    994e:	80 82       	st	Z, r8
    9950:	d9 01       	movw	r26, r18
    9952:	6d 93       	st	X+, r22
    9954:	7c 93       	st	X, r23
    9956:	09 c0       	rjmp	.+18     	; 0x996a <realloc+0x10c>
    9958:	0e 5f       	subi	r16, 0xFE	; 254
    995a:	1f 4f       	sbci	r17, 0xFF	; 255
    995c:	80 0f       	add	r24, r16
    995e:	91 1f       	adc	r25, r17
    9960:	f9 01       	movw	r30, r18
    9962:	91 83       	std	Z+1, r25	; 0x01
    9964:	80 83       	st	Z, r24
    9966:	eb 2d       	mov	r30, r11
    9968:	fa 2f       	mov	r31, r26
    996a:	e1 14       	cp	r14, r1
    996c:	f1 04       	cpc	r15, r1
    996e:	31 f0       	breq	.+12     	; 0x997c <realloc+0x11e>
    9970:	d7 01       	movw	r26, r14
    9972:	13 96       	adiw	r26, 0x03	; 3
    9974:	fc 93       	st	X, r31
    9976:	ee 93       	st	-X, r30
    9978:	12 97       	sbiw	r26, 0x02	; 2
    997a:	3e c0       	rjmp	.+124    	; 0x99f8 <realloc+0x19a>
    997c:	f0 93 2b 0a 	sts	0x0A2B, r31	; 0x800a2b <__flp+0x1>
    9980:	e0 93 2a 0a 	sts	0x0A2A, r30	; 0x800a2a <__flp>
    9984:	39 c0       	rjmp	.+114    	; 0x99f8 <realloc+0x19a>
    9986:	68 16       	cp	r6, r24
    9988:	79 06       	cpc	r7, r25
    998a:	08 f4       	brcc	.+2      	; 0x998e <realloc+0x130>
    998c:	3c 01       	movw	r6, r24
    998e:	7d 01       	movw	r14, r26
    9990:	12 96       	adiw	r26, 0x02	; 2
    9992:	0d 90       	ld	r0, X+
    9994:	bc 91       	ld	r27, X
    9996:	a0 2d       	mov	r26, r0
    9998:	b7 cf       	rjmp	.-146    	; 0x9908 <realloc+0xaa>
    999a:	80 91 28 0a 	lds	r24, 0x0A28	; 0x800a28 <__brkval>
    999e:	90 91 29 0a 	lds	r25, 0x0A29	; 0x800a29 <__brkval+0x1>
    99a2:	88 16       	cp	r8, r24
    99a4:	99 06       	cpc	r9, r25
    99a6:	e1 f4       	brne	.+56     	; 0x99e0 <realloc+0x182>
    99a8:	66 16       	cp	r6, r22
    99aa:	77 06       	cpc	r7, r23
    99ac:	c8 f4       	brcc	.+50     	; 0x99e0 <realloc+0x182>
    99ae:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
    99b2:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__data_start+0x1>
    99b6:	00 97       	sbiw	r24, 0x00	; 0
    99b8:	41 f4       	brne	.+16     	; 0x99ca <realloc+0x16c>
    99ba:	8d b7       	in	r24, 0x3d	; 61
    99bc:	9e b7       	in	r25, 0x3e	; 62
    99be:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    99c2:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    99c6:	84 1b       	sub	r24, r20
    99c8:	95 0b       	sbc	r25, r21
    99ca:	e8 17       	cp	r30, r24
    99cc:	f9 07       	cpc	r31, r25
    99ce:	b0 f4       	brcc	.+44     	; 0x99fc <realloc+0x19e>
    99d0:	f0 93 29 0a 	sts	0x0A29, r31	; 0x800a29 <__brkval+0x1>
    99d4:	e0 93 28 0a 	sts	0x0A28, r30	; 0x800a28 <__brkval>
    99d8:	f9 01       	movw	r30, r18
    99da:	71 83       	std	Z+1, r23	; 0x01
    99dc:	60 83       	st	Z, r22
    99de:	0c c0       	rjmp	.+24     	; 0x99f8 <realloc+0x19a>
    99e0:	cb 01       	movw	r24, r22
    99e2:	1c de       	rcall	.-968    	; 0x961c <malloc>
    99e4:	7c 01       	movw	r14, r24
    99e6:	00 97       	sbiw	r24, 0x00	; 0
    99e8:	49 f0       	breq	.+18     	; 0x99fc <realloc+0x19e>
    99ea:	a8 01       	movw	r20, r16
    99ec:	be 01       	movw	r22, r28
    99ee:	17 d0       	rcall	.+46     	; 0x9a1e <memcpy>
    99f0:	ce 01       	movw	r24, r28
    99f2:	ac de       	rcall	.-680    	; 0x974c <free>
    99f4:	c7 01       	movw	r24, r14
    99f6:	04 c0       	rjmp	.+8      	; 0x9a00 <realloc+0x1a2>
    99f8:	ce 01       	movw	r24, r28
    99fa:	02 c0       	rjmp	.+4      	; 0x9a00 <realloc+0x1a2>
    99fc:	80 e0       	ldi	r24, 0x00	; 0
    99fe:	90 e0       	ldi	r25, 0x00	; 0
    9a00:	df 91       	pop	r29
    9a02:	cf 91       	pop	r28
    9a04:	1f 91       	pop	r17
    9a06:	0f 91       	pop	r16
    9a08:	ff 90       	pop	r15
    9a0a:	ef 90       	pop	r14
    9a0c:	df 90       	pop	r13
    9a0e:	cf 90       	pop	r12
    9a10:	bf 90       	pop	r11
    9a12:	af 90       	pop	r10
    9a14:	9f 90       	pop	r9
    9a16:	8f 90       	pop	r8
    9a18:	7f 90       	pop	r7
    9a1a:	6f 90       	pop	r6
    9a1c:	08 95       	ret

00009a1e <memcpy>:
    9a1e:	fb 01       	movw	r30, r22
    9a20:	dc 01       	movw	r26, r24
    9a22:	02 c0       	rjmp	.+4      	; 0x9a28 <memcpy+0xa>
    9a24:	01 90       	ld	r0, Z+
    9a26:	0d 92       	st	X+, r0
    9a28:	41 50       	subi	r20, 0x01	; 1
    9a2a:	50 40       	sbci	r21, 0x00	; 0
    9a2c:	d8 f7       	brcc	.-10     	; 0x9a24 <memcpy+0x6>
    9a2e:	08 95       	ret

00009a30 <strcpy>:
    9a30:	fb 01       	movw	r30, r22
    9a32:	dc 01       	movw	r26, r24
    9a34:	01 90       	ld	r0, Z+
    9a36:	0d 92       	st	X+, r0
    9a38:	00 20       	and	r0, r0
    9a3a:	e1 f7       	brne	.-8      	; 0x9a34 <strcpy+0x4>
    9a3c:	08 95       	ret

00009a3e <strncpy>:
    9a3e:	fb 01       	movw	r30, r22
    9a40:	dc 01       	movw	r26, r24
    9a42:	41 50       	subi	r20, 0x01	; 1
    9a44:	50 40       	sbci	r21, 0x00	; 0
    9a46:	48 f0       	brcs	.+18     	; 0x9a5a <strncpy+0x1c>
    9a48:	01 90       	ld	r0, Z+
    9a4a:	0d 92       	st	X+, r0
    9a4c:	00 20       	and	r0, r0
    9a4e:	c9 f7       	brne	.-14     	; 0x9a42 <strncpy+0x4>
    9a50:	01 c0       	rjmp	.+2      	; 0x9a54 <strncpy+0x16>
    9a52:	1d 92       	st	X+, r1
    9a54:	41 50       	subi	r20, 0x01	; 1
    9a56:	50 40       	sbci	r21, 0x00	; 0
    9a58:	e0 f7       	brcc	.-8      	; 0x9a52 <strncpy+0x14>
    9a5a:	08 95       	ret

00009a5c <dtoa_prf>:
    9a5c:	8f 92       	push	r8
    9a5e:	9f 92       	push	r9
    9a60:	af 92       	push	r10
    9a62:	bf 92       	push	r11
    9a64:	cf 92       	push	r12
    9a66:	df 92       	push	r13
    9a68:	ef 92       	push	r14
    9a6a:	ff 92       	push	r15
    9a6c:	0f 93       	push	r16
    9a6e:	1f 93       	push	r17
    9a70:	cf 93       	push	r28
    9a72:	df 93       	push	r29
    9a74:	cd b7       	in	r28, 0x3d	; 61
    9a76:	de b7       	in	r29, 0x3e	; 62
    9a78:	29 97       	sbiw	r28, 0x09	; 9
    9a7a:	0f b6       	in	r0, 0x3f	; 63
    9a7c:	f8 94       	cli
    9a7e:	de bf       	out	0x3e, r29	; 62
    9a80:	0f be       	out	0x3f, r0	; 63
    9a82:	cd bf       	out	0x3d, r28	; 61
    9a84:	6a 01       	movw	r12, r20
    9a86:	12 2f       	mov	r17, r18
    9a88:	b0 2e       	mov	r11, r16
    9a8a:	2b e3       	ldi	r18, 0x3B	; 59
    9a8c:	20 17       	cp	r18, r16
    9a8e:	20 f0       	brcs	.+8      	; 0x9a98 <dtoa_prf+0x3c>
    9a90:	ff 24       	eor	r15, r15
    9a92:	f3 94       	inc	r15
    9a94:	f0 0e       	add	r15, r16
    9a96:	02 c0       	rjmp	.+4      	; 0x9a9c <dtoa_prf+0x40>
    9a98:	2c e3       	ldi	r18, 0x3C	; 60
    9a9a:	f2 2e       	mov	r15, r18
    9a9c:	0f 2d       	mov	r16, r15
    9a9e:	27 e0       	ldi	r18, 0x07	; 7
    9aa0:	ae 01       	movw	r20, r28
    9aa2:	4f 5f       	subi	r20, 0xFF	; 255
    9aa4:	5f 4f       	sbci	r21, 0xFF	; 255
    9aa6:	50 d1       	rcall	.+672    	; 0x9d48 <__ftoa_engine>
    9aa8:	bc 01       	movw	r22, r24
    9aaa:	49 81       	ldd	r20, Y+1	; 0x01
    9aac:	84 2f       	mov	r24, r20
    9aae:	89 70       	andi	r24, 0x09	; 9
    9ab0:	81 30       	cpi	r24, 0x01	; 1
    9ab2:	31 f0       	breq	.+12     	; 0x9ac0 <dtoa_prf+0x64>
    9ab4:	e1 fc       	sbrc	r14, 1
    9ab6:	06 c0       	rjmp	.+12     	; 0x9ac4 <dtoa_prf+0x68>
    9ab8:	e0 fe       	sbrs	r14, 0
    9aba:	06 c0       	rjmp	.+12     	; 0x9ac8 <dtoa_prf+0x6c>
    9abc:	90 e2       	ldi	r25, 0x20	; 32
    9abe:	05 c0       	rjmp	.+10     	; 0x9aca <dtoa_prf+0x6e>
    9ac0:	9d e2       	ldi	r25, 0x2D	; 45
    9ac2:	03 c0       	rjmp	.+6      	; 0x9aca <dtoa_prf+0x6e>
    9ac4:	9b e2       	ldi	r25, 0x2B	; 43
    9ac6:	01 c0       	rjmp	.+2      	; 0x9aca <dtoa_prf+0x6e>
    9ac8:	90 e0       	ldi	r25, 0x00	; 0
    9aca:	5e 2d       	mov	r21, r14
    9acc:	50 71       	andi	r21, 0x10	; 16
    9ace:	43 ff       	sbrs	r20, 3
    9ad0:	3c c0       	rjmp	.+120    	; 0x9b4a <dtoa_prf+0xee>
    9ad2:	91 11       	cpse	r25, r1
    9ad4:	02 c0       	rjmp	.+4      	; 0x9ada <dtoa_prf+0x7e>
    9ad6:	83 e0       	ldi	r24, 0x03	; 3
    9ad8:	01 c0       	rjmp	.+2      	; 0x9adc <dtoa_prf+0x80>
    9ada:	84 e0       	ldi	r24, 0x04	; 4
    9adc:	81 17       	cp	r24, r17
    9ade:	18 f4       	brcc	.+6      	; 0x9ae6 <dtoa_prf+0x8a>
    9ae0:	21 2f       	mov	r18, r17
    9ae2:	28 1b       	sub	r18, r24
    9ae4:	01 c0       	rjmp	.+2      	; 0x9ae8 <dtoa_prf+0x8c>
    9ae6:	20 e0       	ldi	r18, 0x00	; 0
    9ae8:	51 11       	cpse	r21, r1
    9aea:	0b c0       	rjmp	.+22     	; 0x9b02 <dtoa_prf+0xa6>
    9aec:	f6 01       	movw	r30, r12
    9aee:	82 2f       	mov	r24, r18
    9af0:	30 e2       	ldi	r19, 0x20	; 32
    9af2:	88 23       	and	r24, r24
    9af4:	19 f0       	breq	.+6      	; 0x9afc <dtoa_prf+0xa0>
    9af6:	31 93       	st	Z+, r19
    9af8:	81 50       	subi	r24, 0x01	; 1
    9afa:	fb cf       	rjmp	.-10     	; 0x9af2 <dtoa_prf+0x96>
    9afc:	c2 0e       	add	r12, r18
    9afe:	d1 1c       	adc	r13, r1
    9b00:	20 e0       	ldi	r18, 0x00	; 0
    9b02:	99 23       	and	r25, r25
    9b04:	29 f0       	breq	.+10     	; 0x9b10 <dtoa_prf+0xb4>
    9b06:	d6 01       	movw	r26, r12
    9b08:	9c 93       	st	X, r25
    9b0a:	f6 01       	movw	r30, r12
    9b0c:	31 96       	adiw	r30, 0x01	; 1
    9b0e:	6f 01       	movw	r12, r30
    9b10:	c6 01       	movw	r24, r12
    9b12:	03 96       	adiw	r24, 0x03	; 3
    9b14:	e2 fe       	sbrs	r14, 2
    9b16:	0a c0       	rjmp	.+20     	; 0x9b2c <dtoa_prf+0xd0>
    9b18:	3e e4       	ldi	r19, 0x4E	; 78
    9b1a:	d6 01       	movw	r26, r12
    9b1c:	3c 93       	st	X, r19
    9b1e:	41 e4       	ldi	r20, 0x41	; 65
    9b20:	11 96       	adiw	r26, 0x01	; 1
    9b22:	4c 93       	st	X, r20
    9b24:	11 97       	sbiw	r26, 0x01	; 1
    9b26:	12 96       	adiw	r26, 0x02	; 2
    9b28:	3c 93       	st	X, r19
    9b2a:	06 c0       	rjmp	.+12     	; 0x9b38 <dtoa_prf+0xdc>
    9b2c:	3e e6       	ldi	r19, 0x6E	; 110
    9b2e:	f6 01       	movw	r30, r12
    9b30:	30 83       	st	Z, r19
    9b32:	41 e6       	ldi	r20, 0x61	; 97
    9b34:	41 83       	std	Z+1, r20	; 0x01
    9b36:	32 83       	std	Z+2, r19	; 0x02
    9b38:	fc 01       	movw	r30, r24
    9b3a:	32 2f       	mov	r19, r18
    9b3c:	40 e2       	ldi	r20, 0x20	; 32
    9b3e:	33 23       	and	r19, r19
    9b40:	09 f4       	brne	.+2      	; 0x9b44 <dtoa_prf+0xe8>
    9b42:	42 c0       	rjmp	.+132    	; 0x9bc8 <dtoa_prf+0x16c>
    9b44:	41 93       	st	Z+, r20
    9b46:	31 50       	subi	r19, 0x01	; 1
    9b48:	fa cf       	rjmp	.-12     	; 0x9b3e <dtoa_prf+0xe2>
    9b4a:	42 ff       	sbrs	r20, 2
    9b4c:	44 c0       	rjmp	.+136    	; 0x9bd6 <dtoa_prf+0x17a>
    9b4e:	91 11       	cpse	r25, r1
    9b50:	02 c0       	rjmp	.+4      	; 0x9b56 <dtoa_prf+0xfa>
    9b52:	83 e0       	ldi	r24, 0x03	; 3
    9b54:	01 c0       	rjmp	.+2      	; 0x9b58 <dtoa_prf+0xfc>
    9b56:	84 e0       	ldi	r24, 0x04	; 4
    9b58:	81 17       	cp	r24, r17
    9b5a:	18 f4       	brcc	.+6      	; 0x9b62 <dtoa_prf+0x106>
    9b5c:	21 2f       	mov	r18, r17
    9b5e:	28 1b       	sub	r18, r24
    9b60:	01 c0       	rjmp	.+2      	; 0x9b64 <dtoa_prf+0x108>
    9b62:	20 e0       	ldi	r18, 0x00	; 0
    9b64:	51 11       	cpse	r21, r1
    9b66:	0b c0       	rjmp	.+22     	; 0x9b7e <dtoa_prf+0x122>
    9b68:	f6 01       	movw	r30, r12
    9b6a:	82 2f       	mov	r24, r18
    9b6c:	30 e2       	ldi	r19, 0x20	; 32
    9b6e:	88 23       	and	r24, r24
    9b70:	19 f0       	breq	.+6      	; 0x9b78 <dtoa_prf+0x11c>
    9b72:	31 93       	st	Z+, r19
    9b74:	81 50       	subi	r24, 0x01	; 1
    9b76:	fb cf       	rjmp	.-10     	; 0x9b6e <dtoa_prf+0x112>
    9b78:	c2 0e       	add	r12, r18
    9b7a:	d1 1c       	adc	r13, r1
    9b7c:	20 e0       	ldi	r18, 0x00	; 0
    9b7e:	99 23       	and	r25, r25
    9b80:	29 f0       	breq	.+10     	; 0x9b8c <dtoa_prf+0x130>
    9b82:	d6 01       	movw	r26, r12
    9b84:	9c 93       	st	X, r25
    9b86:	f6 01       	movw	r30, r12
    9b88:	31 96       	adiw	r30, 0x01	; 1
    9b8a:	6f 01       	movw	r12, r30
    9b8c:	c6 01       	movw	r24, r12
    9b8e:	03 96       	adiw	r24, 0x03	; 3
    9b90:	e2 fe       	sbrs	r14, 2
    9b92:	0b c0       	rjmp	.+22     	; 0x9baa <dtoa_prf+0x14e>
    9b94:	39 e4       	ldi	r19, 0x49	; 73
    9b96:	d6 01       	movw	r26, r12
    9b98:	3c 93       	st	X, r19
    9b9a:	3e e4       	ldi	r19, 0x4E	; 78
    9b9c:	11 96       	adiw	r26, 0x01	; 1
    9b9e:	3c 93       	st	X, r19
    9ba0:	11 97       	sbiw	r26, 0x01	; 1
    9ba2:	36 e4       	ldi	r19, 0x46	; 70
    9ba4:	12 96       	adiw	r26, 0x02	; 2
    9ba6:	3c 93       	st	X, r19
    9ba8:	07 c0       	rjmp	.+14     	; 0x9bb8 <dtoa_prf+0x15c>
    9baa:	39 e6       	ldi	r19, 0x69	; 105
    9bac:	f6 01       	movw	r30, r12
    9bae:	30 83       	st	Z, r19
    9bb0:	3e e6       	ldi	r19, 0x6E	; 110
    9bb2:	31 83       	std	Z+1, r19	; 0x01
    9bb4:	36 e6       	ldi	r19, 0x66	; 102
    9bb6:	32 83       	std	Z+2, r19	; 0x02
    9bb8:	fc 01       	movw	r30, r24
    9bba:	32 2f       	mov	r19, r18
    9bbc:	40 e2       	ldi	r20, 0x20	; 32
    9bbe:	33 23       	and	r19, r19
    9bc0:	19 f0       	breq	.+6      	; 0x9bc8 <dtoa_prf+0x16c>
    9bc2:	41 93       	st	Z+, r20
    9bc4:	31 50       	subi	r19, 0x01	; 1
    9bc6:	fb cf       	rjmp	.-10     	; 0x9bbe <dtoa_prf+0x162>
    9bc8:	fc 01       	movw	r30, r24
    9bca:	e2 0f       	add	r30, r18
    9bcc:	f1 1d       	adc	r31, r1
    9bce:	10 82       	st	Z, r1
    9bd0:	8e ef       	ldi	r24, 0xFE	; 254
    9bd2:	9f ef       	ldi	r25, 0xFF	; 255
    9bd4:	a6 c0       	rjmp	.+332    	; 0x9d22 <dtoa_prf+0x2c6>
    9bd6:	21 e0       	ldi	r18, 0x01	; 1
    9bd8:	30 e0       	ldi	r19, 0x00	; 0
    9bda:	91 11       	cpse	r25, r1
    9bdc:	02 c0       	rjmp	.+4      	; 0x9be2 <dtoa_prf+0x186>
    9bde:	20 e0       	ldi	r18, 0x00	; 0
    9be0:	30 e0       	ldi	r19, 0x00	; 0
    9be2:	16 16       	cp	r1, r22
    9be4:	17 06       	cpc	r1, r23
    9be6:	1c f4       	brge	.+6      	; 0x9bee <dtoa_prf+0x192>
    9be8:	fb 01       	movw	r30, r22
    9bea:	31 96       	adiw	r30, 0x01	; 1
    9bec:	02 c0       	rjmp	.+4      	; 0x9bf2 <dtoa_prf+0x196>
    9bee:	e1 e0       	ldi	r30, 0x01	; 1
    9bf0:	f0 e0       	ldi	r31, 0x00	; 0
    9bf2:	2e 0f       	add	r18, r30
    9bf4:	3f 1f       	adc	r19, r31
    9bf6:	bb 20       	and	r11, r11
    9bf8:	21 f0       	breq	.+8      	; 0x9c02 <dtoa_prf+0x1a6>
    9bfa:	eb 2d       	mov	r30, r11
    9bfc:	f0 e0       	ldi	r31, 0x00	; 0
    9bfe:	31 96       	adiw	r30, 0x01	; 1
    9c00:	02 c0       	rjmp	.+4      	; 0x9c06 <dtoa_prf+0x1aa>
    9c02:	e0 e0       	ldi	r30, 0x00	; 0
    9c04:	f0 e0       	ldi	r31, 0x00	; 0
    9c06:	2e 0f       	add	r18, r30
    9c08:	3f 1f       	adc	r19, r31
    9c0a:	e1 2f       	mov	r30, r17
    9c0c:	f0 e0       	ldi	r31, 0x00	; 0
    9c0e:	2e 17       	cp	r18, r30
    9c10:	3f 07       	cpc	r19, r31
    9c12:	1c f4       	brge	.+6      	; 0x9c1a <dtoa_prf+0x1be>
    9c14:	12 1b       	sub	r17, r18
    9c16:	21 2f       	mov	r18, r17
    9c18:	01 c0       	rjmp	.+2      	; 0x9c1c <dtoa_prf+0x1c0>
    9c1a:	20 e0       	ldi	r18, 0x00	; 0
    9c1c:	8e 2d       	mov	r24, r14
    9c1e:	88 71       	andi	r24, 0x18	; 24
    9c20:	59 f4       	brne	.+22     	; 0x9c38 <dtoa_prf+0x1dc>
    9c22:	f6 01       	movw	r30, r12
    9c24:	82 2f       	mov	r24, r18
    9c26:	30 e2       	ldi	r19, 0x20	; 32
    9c28:	88 23       	and	r24, r24
    9c2a:	19 f0       	breq	.+6      	; 0x9c32 <dtoa_prf+0x1d6>
    9c2c:	31 93       	st	Z+, r19
    9c2e:	81 50       	subi	r24, 0x01	; 1
    9c30:	fb cf       	rjmp	.-10     	; 0x9c28 <dtoa_prf+0x1cc>
    9c32:	c2 0e       	add	r12, r18
    9c34:	d1 1c       	adc	r13, r1
    9c36:	20 e0       	ldi	r18, 0x00	; 0
    9c38:	99 23       	and	r25, r25
    9c3a:	29 f0       	breq	.+10     	; 0x9c46 <dtoa_prf+0x1ea>
    9c3c:	d6 01       	movw	r26, r12
    9c3e:	9c 93       	st	X, r25
    9c40:	f6 01       	movw	r30, r12
    9c42:	31 96       	adiw	r30, 0x01	; 1
    9c44:	6f 01       	movw	r12, r30
    9c46:	51 11       	cpse	r21, r1
    9c48:	0b c0       	rjmp	.+22     	; 0x9c60 <dtoa_prf+0x204>
    9c4a:	f6 01       	movw	r30, r12
    9c4c:	82 2f       	mov	r24, r18
    9c4e:	90 e3       	ldi	r25, 0x30	; 48
    9c50:	88 23       	and	r24, r24
    9c52:	19 f0       	breq	.+6      	; 0x9c5a <dtoa_prf+0x1fe>
    9c54:	91 93       	st	Z+, r25
    9c56:	81 50       	subi	r24, 0x01	; 1
    9c58:	fb cf       	rjmp	.-10     	; 0x9c50 <dtoa_prf+0x1f4>
    9c5a:	c2 0e       	add	r12, r18
    9c5c:	d1 1c       	adc	r13, r1
    9c5e:	20 e0       	ldi	r18, 0x00	; 0
    9c60:	0f 2d       	mov	r16, r15
    9c62:	06 0f       	add	r16, r22
    9c64:	9a 81       	ldd	r25, Y+2	; 0x02
    9c66:	34 2f       	mov	r19, r20
    9c68:	30 71       	andi	r19, 0x10	; 16
    9c6a:	44 ff       	sbrs	r20, 4
    9c6c:	03 c0       	rjmp	.+6      	; 0x9c74 <dtoa_prf+0x218>
    9c6e:	91 33       	cpi	r25, 0x31	; 49
    9c70:	09 f4       	brne	.+2      	; 0x9c74 <dtoa_prf+0x218>
    9c72:	01 50       	subi	r16, 0x01	; 1
    9c74:	10 16       	cp	r1, r16
    9c76:	24 f4       	brge	.+8      	; 0x9c80 <dtoa_prf+0x224>
    9c78:	09 30       	cpi	r16, 0x09	; 9
    9c7a:	18 f0       	brcs	.+6      	; 0x9c82 <dtoa_prf+0x226>
    9c7c:	08 e0       	ldi	r16, 0x08	; 8
    9c7e:	01 c0       	rjmp	.+2      	; 0x9c82 <dtoa_prf+0x226>
    9c80:	01 e0       	ldi	r16, 0x01	; 1
    9c82:	ab 01       	movw	r20, r22
    9c84:	77 ff       	sbrs	r23, 7
    9c86:	02 c0       	rjmp	.+4      	; 0x9c8c <dtoa_prf+0x230>
    9c88:	40 e0       	ldi	r20, 0x00	; 0
    9c8a:	50 e0       	ldi	r21, 0x00	; 0
    9c8c:	fb 01       	movw	r30, r22
    9c8e:	e4 1b       	sub	r30, r20
    9c90:	f5 0b       	sbc	r31, r21
    9c92:	a1 e0       	ldi	r26, 0x01	; 1
    9c94:	b0 e0       	ldi	r27, 0x00	; 0
    9c96:	ac 0f       	add	r26, r28
    9c98:	bd 1f       	adc	r27, r29
    9c9a:	ea 0f       	add	r30, r26
    9c9c:	fb 1f       	adc	r31, r27
    9c9e:	8e e2       	ldi	r24, 0x2E	; 46
    9ca0:	a8 2e       	mov	r10, r24
    9ca2:	4b 01       	movw	r8, r22
    9ca4:	80 1a       	sub	r8, r16
    9ca6:	91 08       	sbc	r9, r1
    9ca8:	0b 2d       	mov	r16, r11
    9caa:	10 e0       	ldi	r17, 0x00	; 0
    9cac:	11 95       	neg	r17
    9cae:	01 95       	neg	r16
    9cb0:	11 09       	sbc	r17, r1
    9cb2:	4f 3f       	cpi	r20, 0xFF	; 255
    9cb4:	bf ef       	ldi	r27, 0xFF	; 255
    9cb6:	5b 07       	cpc	r21, r27
    9cb8:	21 f4       	brne	.+8      	; 0x9cc2 <dtoa_prf+0x266>
    9cba:	d6 01       	movw	r26, r12
    9cbc:	ac 92       	st	X, r10
    9cbe:	11 96       	adiw	r26, 0x01	; 1
    9cc0:	6d 01       	movw	r12, r26
    9cc2:	64 17       	cp	r22, r20
    9cc4:	75 07       	cpc	r23, r21
    9cc6:	2c f0       	brlt	.+10     	; 0x9cd2 <dtoa_prf+0x276>
    9cc8:	84 16       	cp	r8, r20
    9cca:	95 06       	cpc	r9, r21
    9ccc:	14 f4       	brge	.+4      	; 0x9cd2 <dtoa_prf+0x276>
    9cce:	81 81       	ldd	r24, Z+1	; 0x01
    9cd0:	01 c0       	rjmp	.+2      	; 0x9cd4 <dtoa_prf+0x278>
    9cd2:	80 e3       	ldi	r24, 0x30	; 48
    9cd4:	41 50       	subi	r20, 0x01	; 1
    9cd6:	51 09       	sbc	r21, r1
    9cd8:	31 96       	adiw	r30, 0x01	; 1
    9cda:	d6 01       	movw	r26, r12
    9cdc:	11 96       	adiw	r26, 0x01	; 1
    9cde:	7d 01       	movw	r14, r26
    9ce0:	40 17       	cp	r20, r16
    9ce2:	51 07       	cpc	r21, r17
    9ce4:	24 f0       	brlt	.+8      	; 0x9cee <dtoa_prf+0x292>
    9ce6:	d6 01       	movw	r26, r12
    9ce8:	8c 93       	st	X, r24
    9cea:	67 01       	movw	r12, r14
    9cec:	e2 cf       	rjmp	.-60     	; 0x9cb2 <dtoa_prf+0x256>
    9cee:	64 17       	cp	r22, r20
    9cf0:	75 07       	cpc	r23, r21
    9cf2:	39 f4       	brne	.+14     	; 0x9d02 <dtoa_prf+0x2a6>
    9cf4:	96 33       	cpi	r25, 0x36	; 54
    9cf6:	20 f4       	brcc	.+8      	; 0x9d00 <dtoa_prf+0x2a4>
    9cf8:	95 33       	cpi	r25, 0x35	; 53
    9cfa:	19 f4       	brne	.+6      	; 0x9d02 <dtoa_prf+0x2a6>
    9cfc:	31 11       	cpse	r19, r1
    9cfe:	01 c0       	rjmp	.+2      	; 0x9d02 <dtoa_prf+0x2a6>
    9d00:	81 e3       	ldi	r24, 0x31	; 49
    9d02:	f6 01       	movw	r30, r12
    9d04:	80 83       	st	Z, r24
    9d06:	f7 01       	movw	r30, r14
    9d08:	82 2f       	mov	r24, r18
    9d0a:	90 e2       	ldi	r25, 0x20	; 32
    9d0c:	88 23       	and	r24, r24
    9d0e:	19 f0       	breq	.+6      	; 0x9d16 <dtoa_prf+0x2ba>
    9d10:	91 93       	st	Z+, r25
    9d12:	81 50       	subi	r24, 0x01	; 1
    9d14:	fb cf       	rjmp	.-10     	; 0x9d0c <dtoa_prf+0x2b0>
    9d16:	f7 01       	movw	r30, r14
    9d18:	e2 0f       	add	r30, r18
    9d1a:	f1 1d       	adc	r31, r1
    9d1c:	10 82       	st	Z, r1
    9d1e:	80 e0       	ldi	r24, 0x00	; 0
    9d20:	90 e0       	ldi	r25, 0x00	; 0
    9d22:	29 96       	adiw	r28, 0x09	; 9
    9d24:	0f b6       	in	r0, 0x3f	; 63
    9d26:	f8 94       	cli
    9d28:	de bf       	out	0x3e, r29	; 62
    9d2a:	0f be       	out	0x3f, r0	; 63
    9d2c:	cd bf       	out	0x3d, r28	; 61
    9d2e:	df 91       	pop	r29
    9d30:	cf 91       	pop	r28
    9d32:	1f 91       	pop	r17
    9d34:	0f 91       	pop	r16
    9d36:	ff 90       	pop	r15
    9d38:	ef 90       	pop	r14
    9d3a:	df 90       	pop	r13
    9d3c:	cf 90       	pop	r12
    9d3e:	bf 90       	pop	r11
    9d40:	af 90       	pop	r10
    9d42:	9f 90       	pop	r9
    9d44:	8f 90       	pop	r8
    9d46:	08 95       	ret

00009d48 <__ftoa_engine>:
    9d48:	28 30       	cpi	r18, 0x08	; 8
    9d4a:	08 f0       	brcs	.+2      	; 0x9d4e <__ftoa_engine+0x6>
    9d4c:	27 e0       	ldi	r18, 0x07	; 7
    9d4e:	33 27       	eor	r19, r19
    9d50:	da 01       	movw	r26, r20
    9d52:	99 0f       	add	r25, r25
    9d54:	31 1d       	adc	r19, r1
    9d56:	87 fd       	sbrc	r24, 7
    9d58:	91 60       	ori	r25, 0x01	; 1
    9d5a:	00 96       	adiw	r24, 0x00	; 0
    9d5c:	61 05       	cpc	r22, r1
    9d5e:	71 05       	cpc	r23, r1
    9d60:	39 f4       	brne	.+14     	; 0x9d70 <__ftoa_engine+0x28>
    9d62:	32 60       	ori	r19, 0x02	; 2
    9d64:	2e 5f       	subi	r18, 0xFE	; 254
    9d66:	3d 93       	st	X+, r19
    9d68:	30 e3       	ldi	r19, 0x30	; 48
    9d6a:	2a 95       	dec	r18
    9d6c:	e1 f7       	brne	.-8      	; 0x9d66 <__ftoa_engine+0x1e>
    9d6e:	08 95       	ret
    9d70:	9f 3f       	cpi	r25, 0xFF	; 255
    9d72:	30 f0       	brcs	.+12     	; 0x9d80 <__ftoa_engine+0x38>
    9d74:	80 38       	cpi	r24, 0x80	; 128
    9d76:	71 05       	cpc	r23, r1
    9d78:	61 05       	cpc	r22, r1
    9d7a:	09 f0       	breq	.+2      	; 0x9d7e <__ftoa_engine+0x36>
    9d7c:	3c 5f       	subi	r19, 0xFC	; 252
    9d7e:	3c 5f       	subi	r19, 0xFC	; 252
    9d80:	3d 93       	st	X+, r19
    9d82:	91 30       	cpi	r25, 0x01	; 1
    9d84:	08 f0       	brcs	.+2      	; 0x9d88 <__ftoa_engine+0x40>
    9d86:	80 68       	ori	r24, 0x80	; 128
    9d88:	91 1d       	adc	r25, r1
    9d8a:	df 93       	push	r29
    9d8c:	cf 93       	push	r28
    9d8e:	1f 93       	push	r17
    9d90:	0f 93       	push	r16
    9d92:	ff 92       	push	r15
    9d94:	ef 92       	push	r14
    9d96:	19 2f       	mov	r17, r25
    9d98:	98 7f       	andi	r25, 0xF8	; 248
    9d9a:	96 95       	lsr	r25
    9d9c:	e9 2f       	mov	r30, r25
    9d9e:	96 95       	lsr	r25
    9da0:	96 95       	lsr	r25
    9da2:	e9 0f       	add	r30, r25
    9da4:	ff 27       	eor	r31, r31
    9da6:	e8 50       	subi	r30, 0x08	; 8
    9da8:	fe 4f       	sbci	r31, 0xFE	; 254
    9daa:	99 27       	eor	r25, r25
    9dac:	33 27       	eor	r19, r19
    9dae:	ee 24       	eor	r14, r14
    9db0:	ff 24       	eor	r15, r15
    9db2:	a7 01       	movw	r20, r14
    9db4:	e7 01       	movw	r28, r14
    9db6:	05 90       	lpm	r0, Z+
    9db8:	08 94       	sec
    9dba:	07 94       	ror	r0
    9dbc:	28 f4       	brcc	.+10     	; 0x9dc8 <__ftoa_engine+0x80>
    9dbe:	36 0f       	add	r19, r22
    9dc0:	e7 1e       	adc	r14, r23
    9dc2:	f8 1e       	adc	r15, r24
    9dc4:	49 1f       	adc	r20, r25
    9dc6:	51 1d       	adc	r21, r1
    9dc8:	66 0f       	add	r22, r22
    9dca:	77 1f       	adc	r23, r23
    9dcc:	88 1f       	adc	r24, r24
    9dce:	99 1f       	adc	r25, r25
    9dd0:	06 94       	lsr	r0
    9dd2:	a1 f7       	brne	.-24     	; 0x9dbc <__ftoa_engine+0x74>
    9dd4:	05 90       	lpm	r0, Z+
    9dd6:	07 94       	ror	r0
    9dd8:	28 f4       	brcc	.+10     	; 0x9de4 <__ftoa_engine+0x9c>
    9dda:	e7 0e       	add	r14, r23
    9ddc:	f8 1e       	adc	r15, r24
    9dde:	49 1f       	adc	r20, r25
    9de0:	56 1f       	adc	r21, r22
    9de2:	c1 1d       	adc	r28, r1
    9de4:	77 0f       	add	r23, r23
    9de6:	88 1f       	adc	r24, r24
    9de8:	99 1f       	adc	r25, r25
    9dea:	66 1f       	adc	r22, r22
    9dec:	06 94       	lsr	r0
    9dee:	a1 f7       	brne	.-24     	; 0x9dd8 <__ftoa_engine+0x90>
    9df0:	05 90       	lpm	r0, Z+
    9df2:	07 94       	ror	r0
    9df4:	28 f4       	brcc	.+10     	; 0x9e00 <__ftoa_engine+0xb8>
    9df6:	f8 0e       	add	r15, r24
    9df8:	49 1f       	adc	r20, r25
    9dfa:	56 1f       	adc	r21, r22
    9dfc:	c7 1f       	adc	r28, r23
    9dfe:	d1 1d       	adc	r29, r1
    9e00:	88 0f       	add	r24, r24
    9e02:	99 1f       	adc	r25, r25
    9e04:	66 1f       	adc	r22, r22
    9e06:	77 1f       	adc	r23, r23
    9e08:	06 94       	lsr	r0
    9e0a:	a1 f7       	brne	.-24     	; 0x9df4 <__ftoa_engine+0xac>
    9e0c:	05 90       	lpm	r0, Z+
    9e0e:	07 94       	ror	r0
    9e10:	20 f4       	brcc	.+8      	; 0x9e1a <__ftoa_engine+0xd2>
    9e12:	49 0f       	add	r20, r25
    9e14:	56 1f       	adc	r21, r22
    9e16:	c7 1f       	adc	r28, r23
    9e18:	d8 1f       	adc	r29, r24
    9e1a:	99 0f       	add	r25, r25
    9e1c:	66 1f       	adc	r22, r22
    9e1e:	77 1f       	adc	r23, r23
    9e20:	88 1f       	adc	r24, r24
    9e22:	06 94       	lsr	r0
    9e24:	a9 f7       	brne	.-22     	; 0x9e10 <__ftoa_engine+0xc8>
    9e26:	84 91       	lpm	r24, Z
    9e28:	10 95       	com	r17
    9e2a:	17 70       	andi	r17, 0x07	; 7
    9e2c:	41 f0       	breq	.+16     	; 0x9e3e <__ftoa_engine+0xf6>
    9e2e:	d6 95       	lsr	r29
    9e30:	c7 95       	ror	r28
    9e32:	57 95       	ror	r21
    9e34:	47 95       	ror	r20
    9e36:	f7 94       	ror	r15
    9e38:	e7 94       	ror	r14
    9e3a:	1a 95       	dec	r17
    9e3c:	c1 f7       	brne	.-16     	; 0x9e2e <__ftoa_engine+0xe6>
    9e3e:	ee e9       	ldi	r30, 0x9E	; 158
    9e40:	f1 e0       	ldi	r31, 0x01	; 1
    9e42:	68 94       	set
    9e44:	15 90       	lpm	r1, Z+
    9e46:	15 91       	lpm	r17, Z+
    9e48:	35 91       	lpm	r19, Z+
    9e4a:	65 91       	lpm	r22, Z+
    9e4c:	95 91       	lpm	r25, Z+
    9e4e:	05 90       	lpm	r0, Z+
    9e50:	7f e2       	ldi	r23, 0x2F	; 47
    9e52:	73 95       	inc	r23
    9e54:	e1 18       	sub	r14, r1
    9e56:	f1 0a       	sbc	r15, r17
    9e58:	43 0b       	sbc	r20, r19
    9e5a:	56 0b       	sbc	r21, r22
    9e5c:	c9 0b       	sbc	r28, r25
    9e5e:	d0 09       	sbc	r29, r0
    9e60:	c0 f7       	brcc	.-16     	; 0x9e52 <__ftoa_engine+0x10a>
    9e62:	e1 0c       	add	r14, r1
    9e64:	f1 1e       	adc	r15, r17
    9e66:	43 1f       	adc	r20, r19
    9e68:	56 1f       	adc	r21, r22
    9e6a:	c9 1f       	adc	r28, r25
    9e6c:	d0 1d       	adc	r29, r0
    9e6e:	7e f4       	brtc	.+30     	; 0x9e8e <__ftoa_engine+0x146>
    9e70:	70 33       	cpi	r23, 0x30	; 48
    9e72:	11 f4       	brne	.+4      	; 0x9e78 <__ftoa_engine+0x130>
    9e74:	8a 95       	dec	r24
    9e76:	e6 cf       	rjmp	.-52     	; 0x9e44 <__ftoa_engine+0xfc>
    9e78:	e8 94       	clt
    9e7a:	01 50       	subi	r16, 0x01	; 1
    9e7c:	30 f0       	brcs	.+12     	; 0x9e8a <__ftoa_engine+0x142>
    9e7e:	08 0f       	add	r16, r24
    9e80:	0a f4       	brpl	.+2      	; 0x9e84 <__ftoa_engine+0x13c>
    9e82:	00 27       	eor	r16, r16
    9e84:	02 17       	cp	r16, r18
    9e86:	08 f4       	brcc	.+2      	; 0x9e8a <__ftoa_engine+0x142>
    9e88:	20 2f       	mov	r18, r16
    9e8a:	23 95       	inc	r18
    9e8c:	02 2f       	mov	r16, r18
    9e8e:	7a 33       	cpi	r23, 0x3A	; 58
    9e90:	28 f0       	brcs	.+10     	; 0x9e9c <__ftoa_engine+0x154>
    9e92:	79 e3       	ldi	r23, 0x39	; 57
    9e94:	7d 93       	st	X+, r23
    9e96:	2a 95       	dec	r18
    9e98:	e9 f7       	brne	.-6      	; 0x9e94 <__ftoa_engine+0x14c>
    9e9a:	10 c0       	rjmp	.+32     	; 0x9ebc <__ftoa_engine+0x174>
    9e9c:	7d 93       	st	X+, r23
    9e9e:	2a 95       	dec	r18
    9ea0:	89 f6       	brne	.-94     	; 0x9e44 <__ftoa_engine+0xfc>
    9ea2:	06 94       	lsr	r0
    9ea4:	97 95       	ror	r25
    9ea6:	67 95       	ror	r22
    9ea8:	37 95       	ror	r19
    9eaa:	17 95       	ror	r17
    9eac:	17 94       	ror	r1
    9eae:	e1 18       	sub	r14, r1
    9eb0:	f1 0a       	sbc	r15, r17
    9eb2:	43 0b       	sbc	r20, r19
    9eb4:	56 0b       	sbc	r21, r22
    9eb6:	c9 0b       	sbc	r28, r25
    9eb8:	d0 09       	sbc	r29, r0
    9eba:	98 f0       	brcs	.+38     	; 0x9ee2 <__ftoa_engine+0x19a>
    9ebc:	23 95       	inc	r18
    9ebe:	7e 91       	ld	r23, -X
    9ec0:	73 95       	inc	r23
    9ec2:	7a 33       	cpi	r23, 0x3A	; 58
    9ec4:	08 f0       	brcs	.+2      	; 0x9ec8 <__ftoa_engine+0x180>
    9ec6:	70 e3       	ldi	r23, 0x30	; 48
    9ec8:	7c 93       	st	X, r23
    9eca:	20 13       	cpse	r18, r16
    9ecc:	b8 f7       	brcc	.-18     	; 0x9ebc <__ftoa_engine+0x174>
    9ece:	7e 91       	ld	r23, -X
    9ed0:	70 61       	ori	r23, 0x10	; 16
    9ed2:	7d 93       	st	X+, r23
    9ed4:	30 f0       	brcs	.+12     	; 0x9ee2 <__ftoa_engine+0x19a>
    9ed6:	83 95       	inc	r24
    9ed8:	71 e3       	ldi	r23, 0x31	; 49
    9eda:	7d 93       	st	X+, r23
    9edc:	70 e3       	ldi	r23, 0x30	; 48
    9ede:	2a 95       	dec	r18
    9ee0:	e1 f7       	brne	.-8      	; 0x9eda <__ftoa_engine+0x192>
    9ee2:	11 24       	eor	r1, r1
    9ee4:	ef 90       	pop	r14
    9ee6:	ff 90       	pop	r15
    9ee8:	0f 91       	pop	r16
    9eea:	1f 91       	pop	r17
    9eec:	cf 91       	pop	r28
    9eee:	df 91       	pop	r29
    9ef0:	99 27       	eor	r25, r25
    9ef2:	87 fd       	sbrc	r24, 7
    9ef4:	90 95       	com	r25
    9ef6:	08 95       	ret

00009ef8 <__do_global_dtors>:
    9ef8:	1a e0       	ldi	r17, 0x0A	; 10
    9efa:	c0 e1       	ldi	r28, 0x10	; 16
    9efc:	da e0       	ldi	r29, 0x0A	; 10
    9efe:	00 e0       	ldi	r16, 0x00	; 0
    9f00:	05 c0       	rjmp	.+10     	; 0x9f0c <__do_global_dtors+0x14>
    9f02:	80 2f       	mov	r24, r16
    9f04:	fe 01       	movw	r30, r28
    9f06:	4a db       	rcall	.-2412   	; 0x959c <__tablejump2__>
    9f08:	21 96       	adiw	r28, 0x01	; 1
    9f0a:	01 1d       	adc	r16, r1
    9f0c:	c4 31       	cpi	r28, 0x14	; 20
    9f0e:	d1 07       	cpc	r29, r17
    9f10:	80 e0       	ldi	r24, 0x00	; 0
    9f12:	08 07       	cpc	r16, r24
    9f14:	b1 f7       	brne	.-20     	; 0x9f02 <__do_global_dtors+0xa>
    9f16:	f8 94       	cli

00009f18 <__stop_program>:
    9f18:	ff cf       	rjmp	.-2      	; 0x9f18 <__stop_program>
